[
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(2(2(3)4)5)6\") == \"6\"\nassert solution(\"(2(2(3)4)5)6\") == \"6\"\nassert solution(\"(2(2(3)4)5)6\") == \"6\"\nassert solution(\"(2(2(3)4)5)6\") == \"6\"\nassert solution(\"(2(2(3)4)5)6\") == \"6\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n2 3''') == '5'\nassert solution('''8\n( 2 ( 2 1 ) ) 3''') == '9'\nassert solution('''4\n( 12 3 )''') == '36'\nassert solution('''6\n( ( 2 3 ) )''') == '5'\nassert solution('''6\n( ( 2 3 ) )''') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '5'\nassert solution('2\\n2 3') == '5'\nassert solution('2\\n( 2 ( 2 1 ) ) 3') == '9'\nassert solution('2\\n( 12 3 )') == '36'\nassert solution('2\\n( ( 2 3 ) )') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"2\n2 3\"\"\") == \"5\"\nassert solution(\n\"\"\"8\n( 2 ( 2 1 ) ) 3\"\"\") == \"36\"\nassert solution(\n\"\"\"6\n( ( 2 3 ) )\"\"\") == \"5\"\nassert solution(\n\"\"\"( ( 12 3 ) )\"\"\") == \"36\""
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin)\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2 3''') == '5'\nassert solution('''8\n( 2 ( 2 1 ) ) 3''') == '36'\nassert solution('''6\n( ( 2 3 ) )''') == '5'\nassert solution('''6\n( ( ( 2 3 ) ) )''') == '5'\nassert solution('''6\n( ( ( ( ( 2 3 ) ) ) ) )''') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2 3') == '5'\nassert solution('8\\n( 2 ( 2 1 ) ) 3') == '9'\nassert solution('8\\n( 2 ( 2 1 ) ) 3') == '9'\nassert solution('4\\n( 12 3 )') == '36'\nassert solution('6\\n( 2 ) ( 3 )') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"8\") == \"9\"\nassert solution(\"( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"( 12 3 )\") == \"36\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"2 (3 + 1)\") == \"5\"\nassert solution(\"2 (3 + (1 + 0 + 1))\") == \"5\"\nassert solution(\"2 (3 + (1 + 0 + 1)) 3\") == \"79\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('981') == '2'\nassert solution('100') == '4'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0123456789\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"764\") == \"3\"\nassert solution(\"8926\") == \"5\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0') == '0'\nassert solution('001') == '1'\nassert solution('010111') == '2'\nassert solution('99001') == '3'\nassert solution('99991') == '4'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('001') == '1'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('009990001') == '4'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"010101\") == \"0\"\nassert solution(\"101\") == \"1\"\nassert solution(\"99\") == \"1\"\nassert solution(\"99999\") == \"4\"\nassert solution(\"99999001\") == \"5\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('29981') == '2'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('11') == '1'\nassert solution('27') == '3'\nassert solution('9077') == '8'\n"
    },
    {
        "number": 3001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('064500') == '5'\nassert solution('098') == '8'\nassert solution('9019') == '6'\nassert solution('998901') == '8'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42000''') == 'tampered odometer'\nassert solution('''2\n2017 11 0\n2018 1 1000''') == 'insufficient service'\nassert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42001''') =='seems legit'\nassert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42001\n2017 1 0\n2017 3 0\n2018 1 1000\n2018 2 0\n2018 2 1000''') == 'insufficient service'\nassert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42001\n2017 1 0\n2017 3 0\n2018 1 1000\n2018 2 0\n2018 2 1000\n2018 3 0\n2018 3 1000''') =='seems legit'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') == 'insufficient service'\nassert solution('2017 4 0\\n2017 8 12000\\n2018 8 42001\\n') =='seems legit'\nassert solution('2017 11 0\\n2018 1 1000\\n') == 'tampered odometer'\nassert solution('2013 1 0\\n2013 2 0\\n') =='seems legit'\nassert solution('2017 11 0\\n2018 1 1000\\n') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42000''') == 'tampered odometer'\nassert solution('''2\n2017 11 0\n2018 1 1000''') == 'insufficient service'\nassert solution('''2\n2013 1 0\n2013 2 0''') == 'tampered odometer'\nassert solution('''3\n2017 4 0\n2017 8 12000\n2018 8 42001''') =='seems legit'\nassert solution('''3\n2017 11 0\n2018 1 1000\n2018 2 1000''') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\nassert solution('''2017 11 0\n2018 1 1000\n''') == 'insufficient service'\nassert solution('''2017 11 0\n2017 11 0\n2018 1 1000\n''') == 'insufficient service'\nassert solution('''2017 11 0\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\nassert solution('''2017 11 0\n2017 11 0\n2018 1 1000\n''') =='seems legit'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') == 'tampered odometer'\nassert solution('2017 11 0\\n2018 1 1000\\n') == 'insufficient service'\nassert solution('2013 1 0\\n2013 2 0\\n') =='seems legit'\nassert solution('2013 1 0\\n2013 2 0\\n') =='seems legit'\nassert solution('2017 4 0\\n2017 8 12000\\n2018 8 42001\\n') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\nassert solution(stdin2) == 'insufficient service'\nassert solution(stdin3) == 'tampered odometer'\nassert solution(stdin4) =='seems legit'\n\n\"\"\"\n\nfrom datetime import datetime\nfrom datetime import date"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2017 4 0\") == \"tampered odometer\"\nassert solution(\"2\\n2017 11 0\") == \"insufficient service\"\nassert solution(\"3\\n2017 11 0\") == \"seems legit\"\nassert solution(\"4\\n2013 1 0\") == \"tampered odometer\"\nassert solution(\"5\\n2015 4 0\") == \"insufficient service\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2017 4 0\n2017 8 12000\n2018 8 42001''') =='seems legit'\nassert solution('''2017 4 0\n2017 8 12000\n2018 8 42001''') == 'insufficient service'\nassert solution('''2017 11 0\n2018 1 1000''') == 'tampered odometer'\nassert solution('''2017 1 0\n2018 1 1000''') == 'insufficient service'\nassert solution('''2017 11 0\n2018 1 1000''') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2017 11 0\n2018 1 1000'''\n) =='seems legit'\n\nassert solution(\n'''2017 4 0\n2017 8 12000\n2018 8 42001'''\n) == 'insufficient service'\n\nassert solution(\n'''2017 4 0\n2017 8 12000\n2018 8 42001'''\n) == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'tampered odometer'\nassert solution('2017 4 0') == 'tampered odometer'\nassert solution('2017 8 12000') =='seems legit'\nassert solution('2018 8 42000') == 'insufficient service'\nassert solution('2018 8 44000') == 'insufficient service'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('9') == '3'\nassert solution('10') == '3'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n1 2\n0 2 3\n0 1\n1\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\n0 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n4\n1 2\n0 2 3\n0 1\n1\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\n0 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\""
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\nassert solution('7\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n0 1 3\\n0 1 2\\n') == '4'\nassert solution('8\\n1 2 3 4\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3\\n') == '5'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n0 2 3\\n0 1\\n1\\n') == '3'\nassert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\nassert solution('7\\n2 3\\n0 1 2\\n0 1 2\\n0 1 2\\n0 1 2\\n0 1 2\\n') == '4'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2\n0 2 3\n0 1\n1\n''') == '3'\nassert solution('''5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n''') == '2'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n''') == '2'\nassert solution('''8\n2 4 6\n1 3\n0 1 2\n0 4\n0 6\n1 5\n1 2 3\n0 3\n0 4\n0 5\n0 6\n''') == '3'\nassert solution('''7\n2 4 6\n1 3\n0 1 2\n0 4\n0 6\n1 5\n1 2 3\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n''') == '3'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2\n0 2 3\n0 1\n1\n''') == '3'\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n''') == '2'\nassert solution('''2\n1 3\n0 2 3\n0 1\n1\n''') == '4'\nassert solution('''7\n0 1\n0 3\n0 4\n1 4\n2 3\n1 3\n''') == '2'\nassert solution('''9\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n''') == '9'\n"
    },
    {
        "number": 3003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\\n2\\n2\\n\") == 2\nassert solution(\"2\\n2\\n2\\n\") == 2\nassert solution(\"1\\n0\\n0\\n\") == 1\nassert solution(\"3\\n1 2\\n0 2\\n0 1\\n\") == 2\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\") == 2\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"BLUE 1 5000\nRED 5001 10000\n\"\"\") == '2'\nassert solution(\"\"\"BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n\"\"\") == '3'\nassert solution(\"\"\"BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n\"\"\") == 'IMPOSSIBLE'\nassert solution(\"\"\"BLUE 1 4000\nRED 4000 8000\nORANGE 2000 4000\nGREEN 2000 2000\n\"\"\") == 'IMPOSSIBLE'\nassert solution(\"\"\"BLUE 1 4000\nRED 4000 2000\nORANGE 2000 4000\nGREEN 2000 2000\n\"\"\") == '3'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 4000\nRED 4002 10000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'IMPOSSIBLE'\nassert solution('abcd') == 'IMPOSSIBLE'\nassert solution('abcd efgh') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''BLUE 1 5000\nRED 5001 10000''') == 2\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000''') == 3\nassert solution('''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000''') == 3\nassert solution('''BLUE 1 3000\nRED 2000 5000\nRED 4000 8000\nWHITE 7000 10000''') == 3\nassert solution('''BLUE 1 4000\nRED 4002 10000\nRED 4003 10000\nORANGE 4000 8000\nGREEN 7000 10000''') == 3\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\nBLUE 1 5000\nRED 5001 10000''') == '2'\nassert solution('''3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000''') == '3'\nassert solution('''4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000''') == 'IMPOSSIBLE'\nassert solution('''4\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000''') == 'IMPOSSIBLE'\nassert solution('''3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\nORANGE 4000 8000''') == '3'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 3 4\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 3 4 5\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BLUE 1 5000\\nRED 5001 10000\\n') == '2'\nassert solution('BLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == '3'\nassert solution('BLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == 'IMPOSSIBLE'\nprint('Test cases passed')\n\n\"\"\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''BLUE 1 5000\nRED 5001 10000''') == '2'\nassert solution('''BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 3000\nRED 2000 5000\nWHITE 7000 10000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\nassert solution('''BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nWHITE 7000 10000\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\nBLUE 1 5000\nRED 5001 10000''') == '2'\nassert solution('''3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000''') == '3'\nassert solution('''4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000''') == 'IMPOSSIBLE'\nassert solution('''5\nRED 1 1 1\nRED 2 2 1\nRED 3 3 2\nRED 4 4 3\nRED 5 5 4''') == 'IMPOSSIBLE'\nassert solution('''2\nRED 1 1 1\nRED 2 2 1''') == '1'\n"
    },
    {
        "number": 3004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"BLUE 1 5000\nRED 5001 10000\n\"\"\") == 2\nassert solution(\"\"\"BLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n\"\"\") == 3\nassert solution(\"\"\"BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n\"\"\") == 3\nassert solution(\"\"\"BLUE 1 4000\nRED 4002 10000\nORANGE 4000 8000\nGREEN 7000 10000\n\"\"\") == 3\nassert solution(\"\"\"BLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n\"\"\") == 3\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('ABC') == 1\nassert solution('G') == 1\nassert solution('GAYA') == 2\nassert solution('DEDDE') == 3\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('DOODOO') == 'D(O)^2'\nassert solution('PRATTATTATTIC') == 'PRATTATTATTIC'\nassert solution('GGGGGGGG') == '1'\nassert solution('BABBABABBABBA') == 'BABBABABBABBA'\nassert solution('PRIME') == 'PRIME'\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('BABBABABBABBA') == '6'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABACABABABABABABABAB\") == \"8\"\nassert solution(\"ACABABABABABABABABAB\") == \"4\"\nassert solution(\"BABABABABABABABABAB\") == \"2\"\nassert solution(\"BBABABABABABABABABAB\") == \"1\"\nassert solution(\"CABAAABAABABABABABAB\") == \"9\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"A\") == \"a\"\nassert solution(\"T\") == \"a\"\nassert solution(\"t\") == \"a\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\nassert solution('AAAZZZZZZZZ') == '8'\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n\nprint('All set!')"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('PRATTATTATTIC') == 6\nassert solution('GGGGGGGGG') == 1\nassert solution('PRIME') == 5\nassert solution('BABBABABBABBA') == 6\nassert solution('TTTTTTTTTTTT') == 1\n"
    },
    {
        "number": 3005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('BABBABABBABBA') == 6\nassert solution('PRATTATTATTIC') == 6\nassert solution('GGGGGGGGG') == 1\nassert solution('PRIME') == 5\nassert solution('BABBABABBABBA') == 6\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0') == '0'\nassert solution('D 1') == '0'\nassert solution('D 2') == '1'\nassert solution('E') == '0'\nassert solution('D 3') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"1\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''D 1\nD 2\nE\nD 3\nD 1\nE\n'''\n) == '0'\n\nassert solution(\n'''I 1 X\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\n'''\n) == '1'\n\nassert solution(\n'''D 2\nD 1\nE\nE\nE\nI 1 X\nD 1\nE\n'''\n) == '0'\n\nassert solution(\n'''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n'''\n) == '0'\n\nassert solution(\n'''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n'''\n) == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''D 1\nD 2\nE\nD 3\nD 1\nE''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\nD 1\nD 2\nE''') == '1'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\nI 14 B\nI 14 A\nE''') == '0'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\nI 14 B\nI 14 A\nE''') == '1'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\nI 14 B\nI 14 A\nE''') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''D 1\nD 2\nE''') == '0'\nassert solution('''D 2\nD 1\nE''') == '1'\nassert solution('''I 1 X\nD 1\nE''') == '0'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE''') == '0'\nassert solution('''D 1\nD 2\nE\nD 1\nD 2\nE\nD 1\nD 2\nE''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('D 1') == '0'\nassert solution('D 2') == '1'\nassert solution('E') == '1'\nassert solution('D 3') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\nI 14 A\\nI 14 B\\nE\\nI 15 B\\nE\\n') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('D 1\\nD 2\\nE') == '0'\nassert solution('D 2\\nD 1\\nE\\nE\\nE') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\nE') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nE') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nE\\nE') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\nD 1\\nD 2\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 0 1 0 0 0\\n\"\n    \"\") == \"300\"\nassert solution(\n    \"5 0 1 0 1 0\\n\"\n    \"\") == \"1900\"\nassert solution(\n    \"6 0 1 1 0 0\\n\"\n    \"\") == \"2300\"\nassert solution(\n    \"10 399 0 0 0 0\\n\"\n    \"\") == \"399\"\nassert solution(\n    \"10 0 1 1 0 0\\n\"\n    \"\") == \"0\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\n\nprint(solution(\"1 2 1 0 0 0\"))\nprint(solution(\"10 300 0 0 0 0\"))\nprint(solution(\"20 200 0 0 0 0\"))\nprint(solution(\"40 40 0 0 0 0\"))\nprint(solution(\"80 40 0 0 0 0\"))\nprint(solution(\"50 50 0 0 0 0\"))\nprint(solution(\"60 60 0 0 0 0\"))\nprint(solution(\"100 60 0 0 0 0\"))\nprint(solution(\"120 100 0 0 0 0\"))\nprint(solution(\"150 120 0 0 0 0\"))\nprint(solution(\"170 150 0 0 0 0\"))\nprint(solution(\"200 200 0 0 0 0\"))\nprint(solution(\"240 240 0 0 0 0\"))\nprint(solution(\"270 270 0 0 0 0\"))\nprint(solution(\"300 300 0 0 0 0\"))\nprint(solution(\"350 350 0 0 0 0\"))\nprint(solution(\"400 400 0 0 0 0\"))\nprint(solution(\"500 500 0 0 0 0\"))\nprint(solution(\"600 600 0 0 0 0\"))\nprint(solution(\"700 700 0 0 0 0\"))\nprint(solution(\"800 800 0 0 0 0\"))\nprint(solution(\"900 900 0 0 0 0\"))\nprint(solution(\"1000 1000 0 0 0 0\"))\nprint(solution(\"1100 1100 0 0 0 0\"))\nprint(solution(\"1200 1200 0 0 0 0\"))\nprint(solution(\"1300 1300 0 0 0 0\"))\nprint(solution(\"1400 1400 0 0 0 0\"))\nprint(solution(\"1500 1500 0 0 0 0\"))\nprint(solution(\"1600 1600 0 0 0 0\"))\nprint(solution(\"1700 1700 0 0 0 0\"))\nprint(solution(\"1800 1800 0 0 0 0\"))\nprint(solution(\"1900 1900 0 0 0 0\"))\nprint(solution(\"2000 2000 0 0 0 0\"))\nprint(solution(\"2100 2100 0 0 0 0\"))\nprint(solution(\"2200 2200 0 0 0 0\"))\nprint(solution(\"2300 2300 0 0 0 0\"))\nprint(solution(\"2400 2400 0 0 0 0\"))\nprint(solution(\"2500 2500 0 0 0 0\"))\nprint(solution(\"2600 2600 0 0 0 0\"))\nprint(solution(\"2700 2700 0 0 0 0\"))\nprint(solution(\"2800 2800 0 0 0 0\"))\nprint(solution(\"2900 2900 0 0 0 0\"))\nprint(solution(\"3000 3000 0 0 0 0\"))\nprint(solution(\"3100 3100 0 0 0 0\"))\nprint(solution(\"3200 3200 0 0 0 0\"))\nprint(solution(\"3300 3300 0 0 0 0\"))\nprint(solution(\"3400 3400 0 0 0 0\"))\nprint(solution(\"3500 3500 0 0 0 0\"))\nprint(solution(\"3600 3600 0 0 0 0\"))\nprint(solution(\"3700 3700 0 0 0 0\"))\nprint(solution(\"3800 3800 0 0 0 0\"))\nprint(solution(\"3900 3900 0 0 0 0\"))\nprint(solution(\"4000 4000 0 0 0 0\"))\nprint(solution(\"4100 4100 0 0 0 0\"))\nprint(solution(\"4200 4200 0 0 0 0\"))\nprint(solution(\"4300 4300 0 0 0 0\"))\nprint(solution(\"4400 4400 0 0 0 0\"))\nprint(solution(\"4500 4500 0 0 0 0\"))\nprint(solution(\"4600 4600 0 0 0 0\"))\nprint(solution(\"4700 4700 0 0 0 0\"))\nprint(solution(\"4800 4800 0 0 0 0\"))\nprint(solution(\"4900 4900 0 0 0 0\"))\nprint(solution(\"5000 5000 0 0 0 0\"))\nprint(solution(\"5100 5100 0 0 0 0\"))\nprint(solution(\"5200 5200 0 0 0 0\"))\nprint(solution(\"5300 5300 0 0 0 0\"))\nprint(solution(\"5400 5400 0 0 0 0\"))\nprint(solution(\"5500 5500 0 0 0 0\"))\nprint(solution(\"5600 5600 0 0 0 0\"))\nprint(solution(\"5700 5700 0 0 0 0\"))\nprint(solution(\"5800 5800 0 0 0 0\"))\nprint(solution(\"5900 5900 0 0 0 0\"))\nprint(solution(\"6000 6000 0 0 0 0\"))\nprint(solution(\"6100 6100 0 0 0 0\"))\nprint(solution(\"6200 6200 0 0 0 0\"))\nprint(solution(\"6300 6300 0 0 0 0\"))\nprint(solution(\"6400 6400 0 0 0 0\"))\nprint(solution(\"6500 6500 0 0 0 0\"))\nprint(solution(\"6600 6600 0 0 0 0\"))\nprint(solution(\"6700 6700 0 0 0 0\"))\nprint(solution(\"6800 6800 0 0 0 0\"))\nprint(solution(\"6900 6900 0 0 0 0\"))\nprint(solution(\"7000 7000 0 0 0 0\"))\nprint(solution(\"7100 7100 0 0 0 0\"))\nprint(solution(\"7200 7200 0 0 0 0\"))\nprint(solution(\"7300 7300 0 0 0 0\"))\nprint(solution(\"7400 7400 0 0 0 0\"))\nprint(solution(\"7500 7500 0 0 0 0\"))\nprint(solution(\"7600 7600 0 0 0 0\"))\nprint(solution(\"7700 7700 0 0 0 0"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4 0 1 0 0 0\n''') == '300'\nassert solution('''\n5 0 1 0 1 0\n''') == '1900'\nassert solution('''\n6 0 1 1 0 0\n''') == '2300'\nassert solution('''\n10 399 0 0 0 0\n''') == '399'\nassert solution('''\n10 300 0 0 0 0\n''') == '300'\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\nprint(\"All tests passed\")\n\n-----\nWe can first calculate the maximum amount of Bling that is possible in the remaining days, and then round it to the nearest integer.\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '400'\n'''\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 0 1 0 0 0''') == '300'\nassert solution('''5 0 1 0 1 0''') == '1900'\nassert solution('''6 0 1 1 0 0''') == '2300'\nassert solution('''10 399 0 0 0 0''') == '399'\n\nprint(solution('''4 0 1 0 0 0\n4 0 1 0 0 0\n4 0 1 0 0 0\n4 0 1 0 0 0'''))\nprint(solution('''5 0 1 0 1 0\n5 0 1 0 1 0\n5 0 1 0 1 0\n5 0 1 0 1 0'''))\nprint(solution('''6 0 1 1 0 0\n6 0 1 1 0 0\n6 0 1 1 0 0\n6 0 1 1 0 0'''))\nprint(solution('''10 399 0 0 0 0\n10 399 0 0 0 0\n10 399 0 0 0 0\n10 399 0 0 0 0'''))\n\n'''\n\na = map(int, stdin.strip().split())\nprint(a)\nd, b, f, t0, t1, t2 = a\nd = d % 40\nprint(d)\nc = (t0 + t1 + t2) * 100\nprint(c)\na = c - (b * t1)\nprint(a)\nprint(t0 * 100)\nprint(b * t0)\nprint(b * t1)\nprint(t0 * t1 * t2)\nprint(b + t0 * t1 * t2)\nprint(b + c - (b * t1))\nprint(b + c - (b * t1) + t0 * t1 * t2)\n\nb = (b * t1 + t0 * t1 * t2) / (t0 * t1 * t2)\nprint(b)\nprint(b + c - (b * t1))\nprint(b + c - (b * t1) + t0 * t1 * t2)\n\nprint(b + (t0 * t1 * t2))\nprint((b + c - (b * t1)) / (t0 * t1 * t2))\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\n\"\"\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '300'\n\"\"\"\n\nimport sys\nfrom datetime import datetime\n\nclass Fruit:\n    def __init__(self, name: str, value: int, days: int):\n        self.name = name\n        self.value = value\n        self.days = days"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 10\\n1 12\\n1 13') == '2'\nassert solution('2 10\\n1 5\\n1 12\\n') == '2'\nassert solution('2 10\\n1 5\\n1 4\\n') == '2'\nprint('Testcases passed')"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n4 1''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 5\n1 2\n''') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '2 10\\n1 12\\n1 13\\n') == '2'\nassert solution(\n    '2 10\\n1 5\\n1 12\\n') == '2'\nassert solution(\n    '2 10\\n1 5\\n1 4\\n') == '2'\nassert solution(\n    '2 10\\n1 6\\n1 12\\n') == '2'\nassert solution(\n    '2 10\\n1 6\\n1 7\\n') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n2\\n') == '1'\nassert solution('1\\n1\\n1\\n') == '1'\nassert solution('2\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 5\n4 1\n''') == '2'\nassert solution('''2 10\n1 5\n4 1\n''') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n'''\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n1 4''') == '2'\nassert solution('''2 10\n1 5\n4 1\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 4\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 4\n1 3\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '3'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 5\n4 1\n''') == '2'\nassert solution('''2 10\n1 12\n1 13\n1 5\n''') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == 2\nassert solution('2 10') == 2\nassert solution('1 5') == 2\nassert solution('1 4') == 2\nassert solution('1 2\\n1 5\\n1 4') == 2\n"
    },
    {
        "number": 3008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\n''') == '2'\nassert solution('''2 10\n1 5\n1 4\n''') == '2'\nassert solution('''2 10\n1 5\n4 1\n''') == '2'\nassert solution('''2 10\n2 1\n1 4\n1 5\n1 3\n1 2\n1 1\n''') == '2'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '28.970562748'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32'\nassert solution('''8\n3 2 1\n3 2 2\n3 2 3\n4 2 1\n4 2 2\n4 2 3\n5 2 1\n5 2 2\n5 2 3\n5 3 2\n5 4 1\n5 5 1\n5 5 3\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n5 5 5\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'impossible'\nassert solution('10 10 5') == '28'\nassert solution('10 20 5') == '36.2842712475'\nassert solution('10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == '28'\nassert solution('10 10 5\\n10 20 1\\n20 10 12\\n20 20 8') == '36.2842712475'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '32'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32'\nassert solution('''7\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    4\n    10 10 5\n    10 20 5\n    20 10 5\n    20 20 5\n\"\"\") == \"28\"\n\nassert solution(\"\"\"\n    4\n    10 10 5\n    10 20 1\n    20 10 12\n    20 20 8\n\"\"\") == \"36.2842712475\"\n\nassert solution(\"\"\"\n    6\n    1 1 15\n    5 1 100\n    9 1 56\n    1 5 1\n    5 5 33\n    9 5 3\n\"\"\") == \"32\"\n\nassert solution(\"\"\"\n    8\n    4 4 1\n    4 6 1\n    4 8 1\n    6 6 14\n    8 4 1\n    8 6 1\n    8 8 1\n    99 6 -8\n\"\"\") == \"32\"\n\nassert solution(\"\"\"\n    1\n    1 1 15\n    5 1 100\n    9 1 56\n    1 5 1\n    5 5 33\n    9 5 3\n\"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '36.2842712475'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8''') == '32'\nassert solution('''8\n5 5 35\n5 6 35\n5 7 35\n5 8 35\n5 9 35\n5 10 35\n5 11 35\n5 12 35\n5 13 35\n5 14 35\n5 15 35\n5 16 35\n5 17 35\n5 18 35\n5 19 35\n5 20 35\n5 21 35\n5 22 35\n5 23 35\n5 24 35\n5 25 35\n5 26 35\n5 27 35\n5 28 35\n5 29 35\n5 30 35\n5 31 35\n5 32 35\n5 33 35\n5 34 35\n5 35 35\n5 36 35\n5 37 35\n5 38 35\n5 39 35\n5 40 35\n5 41 35\n5 42 35\n5 43 35\n5 44 35\n5 45 35\n5 46 35\n5 47 35\n5 48 35\n5 49 35\n5 50 35\n5 51 35\n5 52 35\n5 53 35\n5 54 35\n5 55 35\n5 56 35\n5 57 35\n5 58 35\n5 59 35\n5 60 35\n5 61 35\n5 62 35\n5 63 35\n5 64 35\n5 65 35\n5 66 35\n5 67 35\n5 68 35\n5 69 35\n5 70 35\n5 71 35\n5 72 35\n5 73 35\n5 74 35\n5 75 35\n5 76 35\n5 77 35\n5 78 35\n5 79 35\n5 80 35\n5 81 35\n5 82 35\n5 83 35\n5 84 35\n5 85 35\n5 86 35\n5 87 35\n5 88 35\n5 89 35\n5 90 35\n5 91 35\n5 92 35\n5 93 35\n5 94 35\n5 95 35\n5 96 35\n5 97 35\n5 98 35\n5 99 35\n5 100 35\n5 101 35\n5 102 35\n5 103 35\n5 104 35\n5 105 35\n5 106 35\n5 107 35\n5 108 35\n5 109 35\n5 110 35\n5 111 35\n5 112 35\n5 113 35\n5 114 35\n5 115 35\n5 116 35\n5 117 35\n5 118 35\n5 119 35\n5 120 35\n5 121 35\n5 122 35\n5 123 35\n5 124 35\n5 125 35\n5 126 35\n5 127 35\n5 128 35\n5 129 35\n5 130 35\n5 131 35\n5 132 35\n5 133 35\n5 134 35\n5 135 35\n5 136 35\n5 137 35\n5 138 35\n5 139 35\n5 140 35\n5 141 35\n5 142 35\n5 143 35\n5 144 35\n5 145 35\n5 146 35\n5 147 35\n5 148 35\n5 149 35\n5 150 35\n5 151 35\n5 152 35\n5 153 35\n5 154 35\n5 155 35\n5 156 35\n5 157 35\n5 158 35\n5 159 35\n5 160 35\n5 161 35\n5 162 35\n5 163 35\n5 164 35\n5 165 35\n5 166 35\n5 167 35\n5 168 35\n5 169 35\n5 170 35\n5 171 35\n5 172 35\n5 173 35\n5 174 35\n5 175 35\n5 176 35\n5 177 35\n5 178 35\n5 179 35\n5 180 35\n5 181 35\n5 182 35\n5 183 35\n5 184 35\n5 185 35\n5 186 35\n5 187 35\n5 188 35\n5 189 35\n5 190 35\n5 191 35\n5 192 35\n5 193 35\n5 194 35\n5 195 35\n5 196 35\n5 197 35\n5 198 35\n5 199 35\n5 200 35\n5 201 35\n5 202 35\n5 203 35\n5 204 35\n5 205 35\n5 206 35\n5 207 35\n5 208 35\n5 209 35\n5 210 35\n5 211 35\n5 212 35\n5 213 35\n5 214 35\n5 215 35\n5 216 35\n5 217 35\n5 218 35\n5 219 35\n5 220 35\n5 221 35\n5 222 35\n5 223 35\n5 224 35\n5 225 35\n5 226 35\n5 227 35\n5 228 35\n5 229 35\n5 230 35\n5 231 35\n5 232 35\n5 233 35\n5 234 35\n5 235 35\n5 236 35\n5 237 35\n5 238 35\n5 239 35\n5 240 35\n5 241 35\n5 242 35\n5 243 35\n5 244 35\n5 245 35\n5 246 35\n5 247 35\n5 248 35\n5 249 35\n5 250 35\n5 251 35\n5 252 35\n5 253 35\n5 254 35\n5 255 35\n5 256 35\n5 257 35\n5 258 35\n5 259 35\n5 260 35\n5 261 35\n5 262 35\n5 263 35\n5 264 35\n5 265 35\n5 266 35\n5 267 35\n5 268 35\n5 269 35\n5 270 35\n5 271 35\n5 272 35\n5 273 35\n5 274 35\n5 275 35\n5 276 35\n5 277 35\n5 278 35\n5 279 35\n5 280 35\n5 281 35\n5 282 35\n5 283 35\n5 284 35\n5 285 35\n5 286 35\n5 287 35\n5 288 35\n5 289 35\n5 290 35\n5 291 35\n5 292 35\n5 293 35\n5 294 35\n5 295 35\n5 296 35\n5 297 35\n5 298 35\n5 299 35\n5 300 35\n5 301 35\n5 302 35\n5 303 35\n5 304 35\n5 305 35\n5 306 35\n5 307 35\n5 308 35\n5 309 35\n5 310 35\n5 311 35\n5 312 35\n5 313 35\n5 314 35\n5 315 35\n5 316 35\n5 317 35\n5 318 35\n5 319 35\n5 320 35\n5 321 35\n5 322 35\n5 323 35\n5 324 35\n5 325 35\n5 326 35\n5 327 35\n5 328 35\n5 329 35\n5 330 35\n5 331 35\n5 332 35\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n'''\n) == '28'\n\nassert solution(\n    '''\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n'''\n) == '36.2842712475'\n\nassert solution(\n    '''\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n'''\n) == '28.970562748'\n\nassert solution(\n    '''\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n'''\n) == '32'\n\nassert solution(\n    '''\n8\n5 5 1\n5 8 1\n5 10 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n'''\n) == '32'"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '28.970562748'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '28'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '28.970562748'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32'\nassert solution('''8\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n10 10 10\n20 20 20\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == '28'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n'\n'Sample Output 4') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n'\n'Sample Output 4') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n'\n'Sample Output 4') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n'\n'Sample Output 4') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == '28'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n99 6 -8') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28.970562748'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n9 5 2\\n1 10 1\\n5 1 99\\n9 5 3\\n') == 'IMPOSSIBLE'\n\n---\n\n## Test Case #1\n\nNow consider a room of 100m by 100m. The total area of the room is 1,000m2. It is a large room and, as a matter of fact, contains enough light to illuminate a large number of areas of the room.\n\nIn this room, the lamp can be placed in one of the four corners, and the area of the room illuminated by the lamp is (1, 2)m2. Since the room is large, the amount of light inside the room is (1, 2)m2, and the area of the light outside the room is (2, 2)m2.\n\nYou can place the lamp exactly in the center of the room. The lamp should illuminate the area (1, 1)m2.\n\nYour task is to determine the length of the shortest line dividing the area of light inside the room and the area of light outside the room.\n\n--Input--\n\nThe first line of the input contains a single integer, $N$, the number of lamps. Each lamp is described by two space-separated integers, $x$ and $y$ (0 < $x$ < 100, 0 < $y$ < 100).\n\nThe next $N$ lines of the input describe the lamps. Each line contains three integers, $x$ and $y$ and $e$ (0 < $e$ < 2000), giving the coordinates of the lamp and its energy contribution. The lamp will be placed at ($x, y$), and the energy it will contribute to the room is $e$.\n\n--Output--\n\nWrite one real number: the length of the shortest line dividing the area of light inside the room and the area of light outside the room. Your answer should be correct up to an absolute or relative precision of $10^{-6}$.\n\nIf no such line exists, output IMPOSSIBLE instead.\n\n--Examples--\n\nInput:\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n\nOutput:\n28\n\nInput:\n2\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n\nOutput:\nIMPOSSIBLE\n\nInput:\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n\nOutput:\n32\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n') == '1\\n'\nassert solution('1\\n2\\n3\\n4\\n') == '2\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '3\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '4\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '5\\n'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'\nassert solution('''3\n-1 2 -1 -1\n-1 5 -1 -1\n5 1 7 7\n''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n3\n-1 -2 -1 -1\n-1 2 -1 -1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n2\n-1 -2 -1 -1\n-1 2 -1 -1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n5\n1 3 9 5\n2 2 6 8\n4 8 9 3\n2 4 10 8\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 9 5\\n2 2 6 8\\n4 8 9 3') == '3'\nassert solution('2 1 6 5\\n2 5 5 4\\n5 1 7 7') == '1'\nassert solution('-1 -2 -1 -1\\n-1 2 -1 -1\\n2 4 10 8') == '1'\nassert solution('-1 -2 -1 -1\\n-1 2 -1 -1\\n2 5 7 7') == '1'\nassert solution('-1 -2 -1 -1\\n-1 2 -1 -1\\n5 1 7 7') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    3\n    1 3 9 5\n    2 2 6 8\n    4 8 9 3\n    '''\n) == '3'\n\nassert solution(\n    '''\n    3\n    -1 -2 -1 -1\n    -1 2 -1 -1\n    '''\n) == '1'\n\nassert solution(\n    '''\n    5\n    2 1 6 5\n    2 5 5 4\n    5 1 7 7\n    '''\n) == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 9 5\\n2 2 6 8\\n4 8 9 3') == '3'\nassert solution('2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n') == '1'\nassert solution('2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n2 4 10 8\\n4 8 9 3\\n') == '1'\nassert solution('2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n2 4 10 8\\n4 8 9 3\\n5 1 7 7\\n2 4 10 8\\n4 8 9 3') == '1'\nassert solution('2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n2 4 10 8\\n4 8 9 3\\n5 1 7 7\\n2 4 10 8\\n4 8 9 3\\n2 4 10 8\\n4 8 9 3\\n') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3\\n9\\n5\") == \"3\"\nassert solution(\"2\\n2\\n6\\n8\") == \"1\"\nassert solution(\"4\\n8\\n9\\n3\") == \"1\"\nassert solution(\"2\\n5\\n5\\n4\") == \"-1\"\nassert solution(\"3\\n7\\n7\\n10\") == \"-1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 9 5') == '3'\nassert solution('2 2 6 8') == '1'\nassert solution('4 8 9 3') == '1'\nassert solution('5 2 7 10') == '3'\nassert solution('7 4 4 10') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n2 4 10 8\") == \"1\"\nassert solution(\"1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n2 4 10 8\\n-2 1 6 5\") == \"3\"\nassert solution(\"1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n2 4 10 8\\n-2 1 6 5\\n-1 2 -1 -1\") == \"1\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('10') == '1'\nassert solution('15') == '2'\nassert solution('22') == '3'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n10\n\n''') == '10'\n\nassert solution('''\n55\n\n''') == '55'\n\nassert solution('''\n101\n\n''') == '-1'\n\nassert solution('''\n1234321\n\n''') == '94708'\n\nassert solution('''\n123456789\n\n''') == '-1'\n\nprint(\"Well done, you've finished writing code!\")\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(5) == '-1'\nassert solution('123') == '5'\nassert solution('1222') == '4'\nassert solution('222222') == '5'\nassert solution('1222222') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(123) == 10\nassert solution(12223) == 11\nassert solution(33322111) == 94708\nassert solution(1232321) == -1\nassert solution(123) == 10\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('123456789') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == -1\nassert solution('10') == -1\nassert solution('0') == -1\nassert solution('5') == -1\n"
    },
    {
        "number": 3011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == -1\nassert solution('12') == 1\nassert solution('12223') == 3\nassert solution('1232223') == -1\nassert solution('122232223') == -1\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 0 0 0 3\n'''\n) == '6'\n\nassert solution(\n'''1 2 0 0 5\n'''\n) == '2'\n\nassert solution(\n'''1 2 0 0 4\n'''\n) == '4'\n\nassert solution(\n'''1 2 0 0 6\n'''\n) == '0'\n\nassert solution(\n'''1 2 0 0 6\n'''\n) == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 0 0 5') == '6'\nassert solution('1 2 0 0 4') == '2'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 6 7') == '0'\nassert solution('1 2 0 0 4 7') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 0 0 5') == '6'\nassert solution('1 2 0 0 4') == '2'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 7') == '7'\nassert solution('1 2 0 0 8') == '1'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 0 0 4') == '0'\nassert solution('1 2 0 0 5') == '6'\nassert solution('1 2 0 0 5') == '6'\nassert solution('1 2 0 0 6') == '2'\nassert solution('1 2 0 0 6') == '2'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0'\nassert solution('''1 0 0 0 3''') == '6'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0'\nassert solution('''1 2 0 0 6''') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 1') == '0'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0.5 -5.301 3.098\n''') == '-1.26167861 3.88425357\\n'\nassert solution('''0.5 8 8\n''') == '9.21068947 2.56226688\\n'\nassert solution('''1 8 8\n''') == '6.22375968 -0.31921472\\n'\nassert solution('''0.5 -8 8\n''') == '-4.36385220 9.46891588\\n'\nassert solution('''0.5 -5.301 3.098\n0.5 8 8\n0.5 -8 8\n''') == '-1.26167861 3.88425357\\n9.21068947 2.56226688\\n'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n\nimport sys\nimport math"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\nprint(solution('1 2 3'))\nassert solution('1 2 3') == '3 2 1'\nprint(solution('0.5 -5.301 3.098'))\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0.5 -5.301 3.098''') == '-1.26167861 3.88425357'\nassert solution('''0.5 8 8''') == '9.21068947 2.56226688'\nassert solution('''1 8 8''') == '6.22375968 -0.31921472'\nassert solution('''0.5 -8 8''') == '-4.36385220 9.46891588'\nprint(solution('''0.5 -8 8'''))\nprint(solution('''0.5 -8 8'''))\nassert solution('''1 1 1''') == '1'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"0.5 -5.301 3.098\"\n) == \"-1.26167861 3.88425357\"\nassert solution(\n    \"0.5 8 8\"\n) == \"9.21068947 2.56226688\"\nassert solution(\n    \"1 8 8\"\n) == \"6.22375968 -0.31921472\"\nassert solution(\n    \"0.5 -8 8\"\n) == \"-4.36385220 9.46891588\"\n\n-----Notes-----\nThe point that the player hits to release the avatar is the point on the spiral where the player is moving, which is the point where the radius is exactly half of the distance from the origin to the target.\n\nThe approximate radius of the player\u2019s path is $\\sqrt{(t_x^2+t_y^2)}$, where $t_x$, $t_y$ are the coordinates of the target.\n\nHere is an example of a player moving from the origin towards the target with radius $0.5$. In the first step, the player is at the origin (radius $0.5$, angle $0.5\\pi$). The player is moving with radius $0.5$ around the circle of radius $0.5$ with an angular velocity of $\\pi$. The player needs to hit the target before the player arrives at the target and detaches from the spiral. When the player hits the target, the player is at the target, and the player is moving with radius $0.5$. The player detaches from the spiral at the point where the player is moving, but the player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $0.5$. The player still needs to hit the target before the player arrives at the target.\n\nHere is an example of a player moving from the origin towards the target with radius $2$. In the first step, the player is at the origin (radius $2$, angle $0.5\\pi$). The player is moving with radius $2$ around the circle of radius $2$ with an angular velocity of $\\pi$. The player needs to hit the target before the player arrives at the target and detaches from the spiral. When the player hits the target, the player is at the target, and the player is moving with radius $2$. The player detaches from the spiral at the point where the player is moving, but the player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target.\n\nHowever, the player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target.\n\nThe player hits the target, and the player is at the target, and the player is moving with radius $2$. The player detaches from the spiral at the point where the player is moving, and the player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target.\n\nThe player hits the target, and the player is at the target, and the player is moving with radius $2$. The player detaches from the spiral at the point where the player is moving, and the player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target.\n\nThe player hits the target, and the player is at the target, and the player is moving with radius $2$. The player detaches from the spiral at the point where the player is moving, and the player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs to hit the target before the player arrives at the target.\n\nThe player hits the target, and the player is at the target, and the player is moving with radius $2$. The player detaches from the spiral at the point where the player is moving, and the player still needs to hit the target before the player arrives at the target. The player hits the target, and the player is at the target, and the player is moving with radius $2$. The player still needs"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0.5 -5.301 3.098''') == \"-1.26167861 3.88425357\"\nassert solution('''0.5 8 8''') == \"9.21068947 2.56226688\"\nassert solution('''1 8 8''') == \"-4.36385220 9.46891588\"\nassert solution('''0.5 -8 8''') == \"-4.36385220 9.46891588\"\n\n''') == \"-4.36385220 9.46891588\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0.5 -5.301 3.098''') == '-1.26167861 3.88425357'\nassert solution('''0.5 8 8''') == '9.21068947 2.56226688'\nassert solution('''0.5 -8 8''') == '-4.36385220 9.46891588'\nassert solution('''1 8 8''') == '6.22375968 -0.31921472'\nassert solution('''0.5 -8 8''') == '-4.36385220 9.46891588'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open('test').read()) == '1'\nassert solution(open('test2').read()) == '1\\n2'\nassert solution(open('test3').read()) == '1'\nassert solution(open('test4').read()) == '1\\n1'\nassert solution(open('test5').read()) == '1\\n1'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2 2\n1 2\n2 1''') == '0'\nassert solution(\n'''3 3\n1 2\n2 3\n3 1''') == '1'\nassert solution(\n'''4 5\n1 2\n2 3\n2 4\n3 1\n4 1''') == '2'\nassert solution(\n'''2 2\n2 1''') == '0'\nassert solution(\n'''3 3\n1 2\n1 3\n3 2''') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 2\n2 1''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 1''') == '1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1''') == '2'\nassert solution('''4 5\n1 2\n1 3\n3 2\n2 4\n3 4''') == '2'\nassert solution('''4 5\n1 2\n1 3\n3 2\n2 4\n4 1''') == '4'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''3 3''') == '0'\nassert solution('''4 5''') == '2'\nassert solution('''1 2''') == '1'\nassert solution('''2 3''') == '1'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '0'\nassert solution('4 5') == '1'\nassert solution('4 5') == '1'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 2\\n2 1\") == \"1\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"0\"\nassert solution(\"4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 4\\n4 1\") == \"0\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 0 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 0 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 3\") == \"11\"\nassert solution(\"5 5 0 4\") == \"infinity\"\nassert solution(\"2 1 0 1\") == \"2\"\nassert solution(\"3 3 1 2\") == \"infinity\"\nassert solution(\"1 0 0 0\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''\n3 2 1 0\n0 1 2\n''') == 'infinity'\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == '2'\nassert solution('''\n4 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'\nassert solution('''\n3 3 1 2\n1 1 1\n1 2 1\n1 2 1\n''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n\"\"\") == \"11\"\nassert solution(\n\"\"\"5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n\"\"\") == \"infinity\"\nassert solution(\n\"\"\"3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"5 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 0 1\n2 3 1\n\"\"\") == \"infinity\"\nassert solution(\n\"\"\"5 5 0 4\n0 1 1\n1 2 1\n2 0 1\n2 3 1\n2 3 3\n\"\"\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\\n3 2\\n1\\n1\\n1\\n1\\n1\") == \"infinity\"\nassert solution(\"0\\n3 2\\n1\\n1\\n1\\n1\\n1\") == \"infinity\"\nassert solution(\"0\\n3 2\\n1\\n1\\n1\\n1\\n1\") == \"infinity\"\nassert solution(\"0\\n3 2\\n1\\n1\\n1\\n1\\n1\") == \"infinity\"\nassert solution(\"0\\n3 2\\n1\\n1\\n1\\n1\\n1\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 1\\n0 1 2\\n') == '11'\nassert solution('1 2 1\\n0 1 2\\n') == 'infinity'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == 'infinity'\nassert solution('0 0 1\\n0 1 2\\n') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"3 2 1 0\\n0 1 2\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n1 0 1\\n1 2 1\\n\") == \"2\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n2 3 3\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 0 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\") == \"infinity\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 3 1\\n2 3 1\\n2 3 1\\n2 3 1\\n2 3 1\\n2 3 1\\n2 3 1\\n2 3 1\\n2 3 1\\n2 3 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n1 0 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\") == \"infinity\"\nassert solution(\"1 2 1\\n0 2 2\\n1 0 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\\n2 3 3\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n2\\n2\\n1\\n3\\n3\\n2\\n2\\n1\\n1\\n') == '2'\nassert solution('1\\n1\\n2\\n2\\n1\\n3\\n3\\n2\\n2\\n1\\n1\\n') == 'infinity'\nassert solution('1\\n1\\n2\\n2\\n1\\n3\\n3\\n2\\n2\\n1\\n1\\n') == 'infinity'\nassert solution('1\\n1\\n2\\n2\\n1\\n3\\n3\\n2\\n2\\n1\\n1\\n') == 'infinity'\nassert solution('1\\n1\\n2\\n2\\n1\\n3\\n3\\n2\\n2\\n1\\n1\\n') == 'infinity'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '0\\n' +\n    '0\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '0\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n' +\n    '1\\n'"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4\\n') == '6'\nassert solution('3 3 1 1\\n1 1\\n2 2 3\\n') == '0'\nassert solution('3 2 2 3\\n1 1\\n2 2 3\\n') == '18'\nassert solution('3 1 2 3\\n2 1 2\\n0\\n') == '12'\nassert solution('3 1 2 3\\n2 1 2\\n1\\n') == '0'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution(\n'''3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution(\n'''3 2 2 3\n1 1\n2 2 3\n''') == '12'\nassert solution(\n'''4 0 1 1\n1 1\n2 2 3\n''') == '12'\nassert solution(\n'''3 0 1 1\n1 1\n2 2 3\n''') == '0'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2 2 1 2 1\n2 1 2\n2 3 4'''\n    ) == '6'\n\nassert solution(\n'''3 3 1 1\n1 1\n2 2 3\n'''\n    ) == '0'\n\nassert solution(\n'''3 2 2 3\n1 1\n2 2 3\n'''\n    ) == '18'\n\nassert solution(\n'''4 2 1 2 1\n2 1 2\n2 3 4\n'''\n    ) == '0'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3 1 1\") == \"0\"\nassert solution(\"2 1 2\") == \"6\"\nassert solution(\"4 2 1 2 1\") == \"18\"\nassert solution(\"3 2 2 3\") == \"0\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2 1 2 1''') == '6'\nassert solution('''3 3 1 1''') == '0'\nassert solution('''3 2 2 3''') == '18'\nassert solution('''3 1 2 3''') == '12'\nassert solution('''4 2 1 2 1''') == '6'\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '18'\nassert solution('''\n3 1 2 3\n2 1 2\n0\n''') == '12'\nassert solution('''\n2 1 1\n1 1\n2 2 3\n0\n''') == '12'"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n2\\n') == '6'\nassert solution('4\\n2\\n1 2\\n2 1\\n1 1\\n') == '0'\nassert solution('3\\n2\\n1 2\\n') == '12'\nassert solution('3\\n1\\n2 3\\n1 1\\n') == '18'\nassert solution('4\\n2\\n1 1\\n1 2\\n1 1\\n') == '12'\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == solution(stdin)  # The strings should always be equal\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n\"\"\""
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[stdin.find(':')+2:]\n\"\"\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 9\n5 4 1\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 13\n2 2 2 2\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n\"\"\") == \"12\"\n\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 9\n5 4 1''') == '1'\nassert solution('''4 13\n2 2 2 2\n''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6''') == '12'\nprint(solution('''23 98\n10 5 5 4 4 4 3 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") is None\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"4 5\") == \"3\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 9\n5 4 1''') == '1'\nassert solution('''4 13\n2 2 2 2''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6''') == '12'\nassert solution
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 9\n5 4 1''') == '1'\nassert solution('''4 13\n2 2 2 2''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6''') == '12'\n\nprint('Testcase passed.')\n\n'''\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 9\\n5 4 1\\n') == '1\\n'\nassert solution('3 13\\n2 2 2 2\\n') == '3\\n'\nassert solution('4 13\\n2 2 2 2\\n') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 9\n5 4 1\"\"\") == \"1\"\nassert solution(\"\"\"4 13\n2 2 2 2\n\"\"\") == \"3\"\nassert solution(\"\"\"18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n\"\"\") == \"12\"\nassert solution(\"\"\"1\n2 2 2 2\n\"\"\") == \"3\"\nassert solution(\"\"\"15 75\n6 3 4 4 4 3 4 4 5 5 6 6 1 1 5 1 1 1 1 1\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '1'\nassert solution('3\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('2\\n2\\n') == '2'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 9\n5 4 1\n''') == '1'\nassert solution('''4 13\n2 2 2 2\n''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\nassert solution('''10 18\n1 2 3 4 5 6 7 8 9 10\n''') == '5'\n"
    },
    {
        "number": 3018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\\n3\") == \"0\"\nassert solution(\"0\\n1\\n2\\n3\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n3\") == \"0\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\"\nassert solution(\"2\") == \"1\"\nassert solution(\"14\") == \"1\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1\n''') == '0'\nassert solution('''3\n4 7 8\n''') == '3'\nassert solution('''5\n2 3 4 5 8\n''') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('1') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2 3 4 5 8\") == \"3\"\nassert solution
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n3\") == \"\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"3\\n4 7 8\\n\") == \"3\"\nassert solution(\"5\\n2 3 4 5 8\\n\") == \"5\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"3\\n4 7 8\\n\") == \"3\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nassert solution('1') == '-1'\nassert solution('9') == '-1'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nprint(solution(stdin))\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n\n\"\"\"\nfrom functools import reduce\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nassert solution('1234') == '-1'\nassert solution('123456789') == '-1'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(6) == \"4\"\nassert solution(1234) == \"11112\"\nassert solution(149) == \"17\"\n\nprint(\"All test cases passed.\")\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1234567890') == '11112'\nassert solution('2223456789') == '112233'\nassert solution('1234654321') == '11223344'\nassert solution('987654321') == '11223344556677'\nassert solution('123456789') == '11223344556677'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''123456789''') == '1'\nassert solution('''123456789''') == '-1'\nassert solution('''123456789''') == '-1'\nassert solution('''123456789''') == '-1'\nassert solution('''123456789''') == '-1'\n"
    },
    {
        "number": 3020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE'\n\nassert solution(stdin) == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open('samples/test_03.txt', 'r').read()) == 'adcb'\nassert solution(open('samples/test_04.txt', 'r').read()) == 'IMPOSSIBLE'\nassert solution(open('samples/test_05.txt', 'r').read()) == 'ABDC'\nassert solution(open('samples/test_06.txt', 'r').read()) == 'AMBIGUOUS'\nassert solution(open('samples/test_07.txt', 'r').read()) == 'AB'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('d 4\\ncab\\ncda\\ccc\\badca\\n') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\nabc\\n') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb\\n') == 'AMBIGUOUS'\nprint(solution(stdin))"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('c 4\\ncab\\ncda\\ccc\\badca\\n') == 'adcb'\nassert solution('d 4\\ncab\\ncda\\ccc\\badca\\n') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\cfb\\n') == 'AMBIGUOUS'\nassert solution('g 2\\nabc\\bca\\n') == 'IMPOSSIBLE'\nassert solution('h 2\\ncab\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z'.split()) == 'adcb'\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z'.split()) == 'IMPOSSIBLE'\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z'.split()) == 'AMBIGUOUS'\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z'.split()) == 'IMPOSSIBLE'\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z'.split()) == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('c 4\\ncab\\ncda\\nccc\\nbadca\\n') == 'adcb'\nassert solution('c 3\\ncba\\ncab\\nacb\\n') == 'IMPOSSIBLE'\nassert solution('c 4\\nabc\\nbca\\ncab\\n') == 'AMBIGUOUS'\nassert solution('b 3\\nab\\nabc\\nabc\\n') == 'IMPOSSIBLE'\nassert solution('a 4\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''d 4\ncab\ncda\nccc\nbadca'''\n) == 'adcb'\n\nassert solution(\n'''c 4\nabc\nbca\ncab\naca'''\n) == 'IMPOSSIBLE'\n\nassert solution(\n'''f 2\ndea\ncfb\n'''\n) == 'AMBIGUOUS'\n\nassert solution(\n'''c 4\ndea\ncfb\n'''\n) == 'IMPOSSIBLE'\n\nassert solution(\n'''e 5\nabcdefg\ndg\ne\nf\na'''\n) == 'IMPOSSIBLE'"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"e 0\") == \"IMPOSSIBLE\"\nassert solution(\"a 1\") == \"bcdef\"\nassert solution(\"a 2\") == \"bcdefghijklmnopqrstuvwxyz\"\nassert solution(\"b 1\") == \"bcdefghijklmnopqrstuvwxyzab\"\nassert solution(\"c 1\") == \"bcdefghijklmnopqrstuvwxyzabc\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"d 4\") == \"adcb\"\nassert solution(\"c 4\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\") == \"AMBIGUOUS\"\nassert solution(\"f 3\") == \"IMPOSSIBLE\"\nassert solution(\"f 4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cab\\n cda\\nccc\\nbadca') == 'adcb'\nassert solution('c\\n b\\n a\\n') == 'IMPOSSIBLE'\nassert solution('cab\\n cda\\nccc\\nbadca') == 'AMBIGUOUS'\nassert solution('cab\\n cda\\nccc\\nbadca\\n d') == 'IMPOSSIBLE'\nassert solution('cab\\n cda\\nccc\\nbadca\\n d\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 0 0\") == \"10\"\nassert solution(\"100 100 0 0\") == \"100\"\nassert solution(\"10 20 0 0\") == \"10\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\n\n\"\"\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\nassert solution('''8 8 5 9''') == '0'\nassert solution('''1 5 5 5''') == '0'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\nprint(\"The tests passed\")"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\nassert solution('''100 10 0 0''') == '10'\nassert solution('''10 0 0 0''') == '0'\n"
    },
    {
        "number": 3022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[29:36]\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n-1 -1 2\n-1 -1 2''') == 'yes'\nassert solution('''4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'\nassert solution('''5 3 3\n1 1\n-1 -1\n1 1 -2\n-1 1 2\n1 -1 2\n-1 1 1\n1 1 1\n-1 -1 -1\n-1 1 -1\n''') == 'yes'\nassert solution('''1 1 1\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == 'yes'\nassert solution('''1 1 1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n''') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n-1 -1 2\\n-1 -1 0') == 'yes'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'no'\nassert solution('1 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'yes'\nassert solution('4 1 2\\n1 1 1\\n-1 1 1\\n-1 -1 1\\n0 -1 1\\n-1 1 1\\n1 1 1\\n-1 -1 1\\n1 -1 1\\n1 -1 1\\n') == 'yes'\nassert solution('4 1 3\\n1 1 1\\n-1 1 1\\n-1 -1 1\\n0 -1 1\\n-1 1 1\\n1 1 1\\n-1 -1 1\\n1 -1 1\\n1 -1 1\\n') == 'yes'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"2 1\") == \"yes\"\nassert solution(\"3 2 3\") == \"no\"\nassert solution(\"-1 -2\") == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2 3') == 'yes'\nassert solution('4 3 3') == 'no'\nassert solution('3 2 3') == 'yes'\nassert solution('3 3 3') == 'no'\nassert solution('3 2 2') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n-1 -1 2\\n-1 -1 2\") == \"yes\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"no\"\nassert solution(\"4 2 1\\n0 0\\n1 1 0\\n-1 -1 1\\n0 -1 0\\n-1 1 1\\n1 -1 1\\n\") == \"yes\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"no\"\nassert solution(\"3 1 1\\n0 0\\n1 1 0\\n-1 -1 1\\n0 -1 0\\n-1 1 1\\n1 -1 1\\n\") == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == 'no'\nassert solution('2 3 1') == 'yes'\nassert solution('1 1 1') == 'yes'\nassert solution('2 3 1') == 'no'\nassert solution('4 3 1') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2 3') == 'yes'\nassert solution('4 3 3') == 'no'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n') == 'no'\nassert solution('2 2 2\\n0 1\\n1 0\\n-1 -2\\n2 1 0\\n') == 'no'\nassert solution('2 2 2\\n0 1\\n1 0\\n-1 -2\\n2 1 0\\n2 1 0\\n') == 'yes'\n"
    },
    {
        "number": 3023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 3') == 'yes'\nassert solution('4 2 3') == 'no'\nassert solution('0 1') == 'yes'\nassert solution('1 0') == 'no'\nassert solution('-1 0') == 'no'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12121131221') == 7\nassert solution('123456789') == 1"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nassert solution
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('123456789') == '1'\nassert solution('12121131221') == '7'\nassert solution('1221') == '1'\nassert solution('1221') == '1'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('12121131221') == '7'\nassert solution('121211312') == '4'\nassert solution('1212312321') == '5'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('abc') == ''\nassert solution('ab') == ''\nassert solution('abc') == ''\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('123456789') == None\nassert solution('12121131221') == None\nassert solution('652526') == '4'\nassert solution('1011121314151617181920') == '7'\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12121131221') == '7'\nassert solution('652526') == '4'\nassert solution('123456789') == '1'\nprint('Test cases passed.')\n"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nprint(\"All tests past, you're done! Yay!\")"
    },
    {
        "number": 3024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(''.join(random.sample(string.digits, 100))) == ''\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1\\n1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n2\") == \"0\"\nassert solution(\"3\\n3\") == \"0\"\nassert solution(\"4\\n4\") == \"0\"\nassert solution(\"5\\n5\") == \"5\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''3 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == \"0\"\nassert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == \"0\"\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == \"24\"\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == \"800\"\nassert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == \"0\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\nassert solution('''9 9\n40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 630 640 650 660 670 680 690 700 710 730 740 750 760 770 780 790 790 810 820 830 840 850 860 870 880 910 930 940 950 960 970 980 990 999\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n4 5\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n2 4\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2\n3 4\n2 5\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\nassert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''3 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n''') == '36'\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"6 8\") == \"800\"\nassert solution(\"10 3\") == \"6\"\nassert solution(\"2 5\") == \"2\"\nassert solution(\"100 500 300 75\") == \"300\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\"\nassert solution(\"5 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n1 3 2 4\\n\") == \"-1\\n4 1\\n\"\nassert solution(\"4\\n1 3 2 4\\n1 1 1 1\\n\") == \"1 1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"4\\n1 3 2 4\\n4 1 3 1\\n\") == \"1 1\\n1 2\\n1 3\\n4 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n1 2 3 4 1\\n\") == \"1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 3 2 4') == '1 4\\n'\nassert solution('5\\n1 2 3 4 5') == '1 2 3 4 5\\n'\nassert solution('4\\n2 1 4 3') == '1 4\\n'\nassert solution('5\\n2 1 4 3 5') == '1 2 3 4 5\\n'\nassert solution('3\\n3 2 1') == '-1\\n'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1 4\"\n\n--- 32 ms ---\n\n--- 17.8 MB ---\n\n\"\"\""
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2 4\") == \"1 4\"\nassert solution(\"1 2 3 4\") == \"1 4\"\nassert solution(\"2 1 4 3\") == \"1 2 3 4\"\nassert solution(\"2 1 4 3\") == \"1 2 3 4\"\nassert solution(\"3 4 2 1\") == \"-1\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 3 2 4\n''') == '1 4'\nassert solution('''5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''4\n2 1 4 3\n''') == '1 4'\nassert solution('''6\n1 2 3 4 5 6\n''') == '1 2 3 4 5'\nassert solution('''10\n4 2 3 5 6 7 8 9 10\n''') == '4 2 5'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n1\\n2\\n1\\n2') == '1 2\\n'\nassert solution('2\\n1\\n2\\n1') == '1 2\\n'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == '1 2\\n1 2\\n'\nassert solution('3\\n1 2\\n2 1\\n1') == '1 2\\n1 2\\n'\nassert solution('2\\n2\\n1\\n1') == '1 2\\n'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2 4') == '1 4'\nassert solution('2 1 4 3') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\n"
    },
    {
        "number": 3026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n\"\"\"\n    ) == '8'\nassert solution(\n    \"\"\"\n4 5\n.#.#\n.#..\n..#.\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5'\nassert solution(\"5 4\") == '8'\nassert solution(\"2 6\") == '1'\nassert solution(\"4 8\") == '8'\nassert solution(\"1 1\") == '1'\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\n'''\n\nassert solution('''\n3 3\n...\n.#.\n...\n''') == '1'\n'''\n\nassert solution('''\n3 5\n.#####\n#####.\n.#####\n''') == '5'\n'''\n\nassert solution('''\n10 10\n..#..#..\n.######.\n.######.\n..#..#..\n.#####.\n.#####.\n.#####.\n.#####.\n.#####.\n''') == '4'\n'''\nassert solution('''\n4 3\n...\n.#.\n...\n''') == '1'\n'''\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 4\") == \"\"\nassert solution(\"10 10\") == \"\"\nassert solution(\"1 2\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\") == \"\"\nassert solution(\"5 6\\n#####\\n#####\\n#####\\n#####\\n#####\\n#####\\n#####\\n#####\\n#####\") == \"\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n\"\"\") == '8'\n\nassert solution(\n\"\"\"\n3 3\n...\n.#.\n...\n\"\"\") == '1'\n\nassert solution(\n\"\"\"\n2 6\n.#####\n#####.\n\"\"\") == '5'\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\nassert solution('''\n3 3\n...\n.#.\n...\n''') == '1'\nassert solution('''\n2 6\n.#####\n#####.\n''') == '5'\nassert solution('''\n1 3\n.#.\n.###\n''') == '2'\nassert solution('''\n4 8\n.######.\n######.\n.######.\n..#..#..\n''') == '8'\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"..#..#..\\n\"\n\".######.\\n\"\n\".######.\\n\"\n\"..#..#..\\n\") == 8\nassert solution(\n\"..#..#..\\n\"\n\".######.\\n\"\n\".######.\\n\"\n\".######.\\n\"\n\"..#..#..\\n\") == 1\nassert solution(\n\"..#..#..\\n\"\n\".######.\\n\"\n\".######.\\n\"\n\".######.\\n\"\n\"..#..#..\\n\") == 5\nassert solution(\n\"..#..#..\\n\"\n\".######.\\n\"\n\".######.\\n\"\n\".######.\\n\"\n\"..#..#..\\n\") == 5\nassert solution(\n\"..#..#..\\n\"\n\".######.\\n\"\n\".######.\\n\"\n\"#.#.#.#.\\n\"\n\"#.#.#.#.\\n\") == 1\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"hi\\n\") == \"hi\"\nassert solution(\"hi\\nworld\\n\") == \"hi\"\nassert solution(\"hi\\nworld\\nhi\\n\") == \"hi\"\nassert solution(\"hi\\nworld\\nhi\\n\") == \"hi\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''..#..#..\n.######.\n.######.\n..#..#..''') == '8'\nassert solution('''..#..#..\n.######.\n.######.\n..#..#..''') == '1'\nassert solution('''..#..#..\n...#.####\n.#####.\n"
    },
    {
        "number": 3027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '..#..#..\\n'\n    '.######.\\n'\n    '.######.\\n'\n    '..#..#..\\n'\n) == '8'\n\nassert solution(\n    '..#..#..\\n'\n    '.######.\\n'\n    '.######.\\n'\n    '..#..#..\\n'\n) == '1'\n\nassert solution(\n    '..#..#..\\n'\n    '.######.\\n'\n    '.######.\\n'\n    '..#..#..\\n'\n) == '5'\n\"\"\"\n\n\"\"\"\nA few days later, the air conditioner comes back. What it does is to check if the temperature is below a certain threshold. If it is, it turns on the fan. If the temperature is higher than the threshold, it turns off the fan.\n\nA certain amount of time passes between the moment the air conditioner comes back, and when the air conditioner checks the temperature, it is told that the fan is not turning on. The air conditioner then turns on the fan again, as it has not been told that it is turning off yet. If the temperature is now higher than the threshold, the fan is not turning on, and so the air conditioner will keep the fan off.\n\nGiven the temperature in degrees Celsius, and the time it takes for the air conditioner to come back, write a function that returns the moment the fan will turn on (or turn off, if the fan is currently off).\n\nInputs:\nThe first line of the input will contain an integer $T$, the number of test cases. The $T$ lines of the test case follow.\n\nEach of the $T$ lines contains two space separated integers, $T$, and $S$, the number of Celsius degrees, and the number of seconds it takes for the air conditioner to come back.\n\nOutputs:\nFor each line of input, output a single line containing \"ON\" if the fan is being turned on, or \"OFF\" if the fan is being turned off.\n\nConstraints:\n1 <= $T$ <= 10\n1 <= $S$ <= 1000\n1 <= $C$ <= 100\nSample Input 1\n3\n0 0\n20 0\n50 0\nSample Output 1\nOFF\nON\nON\n\nSample Input 2\n1\n0 0\n100 0\nSample Output 2\nON\n\"\"\"\n\n\"\"\"\nA movie theater charges different ticket prices depending on a person\u2019s age. The ticket for a child is $3.00, and for an adult, $5.00. Write a function to calculate the total cost for a child, given the age of a person.\n\nInput:\nThe first line of the input contains two space-separated integers, $N$ and $A$, the number of children and the age of a person.\n\nOutput:\nFor each child in the range from 1 to $N$, print the total cost of the ticket.\n\nConstraints:\n1 <= $N$ <= 10\n1 <= $A$ <= 110\n1 <= $K$ <= N\nSample Input 1:\n3 2\nSample Output 1:\n3.00\n5.00\n8.00\nSample Input 2:\n5 1\nSample Output 2:\n5.00\n\"\"\"\n\n\"\"\"\nA bank has a number of employees. The salary of each employee is different. You have to find the difference between the maximum and minimum salaries of the employees.\n\nEach line of the input contains a single integer, $N$, indicating the number of employees.\n\nEach line of the input contains $N$ space-separated integers, each of which is the salary of an employee.\n\nInput:\nThe first line of the input contains two space-separated integers, $N$ and $M$ (1 <= $N$ <= 10^4, 0 <= $M$ <= 10^4), the number of employees and the maximum possible salary.\n\nOutput:\nPrint the difference between the maximum and minimum salaries.\n\nSample Input 1:\n2 10\n10\n15\nSample Output 1:\n5\n\nSample Input 2:\n2 0\n10\n15\nSample Output 2:\n5\n\nSample Input 3:\n1 10\n0\nSample Output 3:\n10\n\"\"\"\n\n\"\"\"\nGiven two lists of integers, each of which is sorted in strictly increasing order, write a function that returns a new list of the same size that contains each of the elements of the first list followed by each of the elements of the second list.\n\nYou may modify the original lists to create the new list.\n\nThe new list should be in strictly increasing order.\n\nInput:\nThe first line of the input contains an integer, $N$ (1 <= $N$ <= 10^4), the number of elements in the first list.\n\nThe second line contains $N$ space-separated integers representing the elements of the first list.\n\nThe third line contains an integer, $M$ (1 <= $M$ <= 10^4), the number of elements in the second list.\n\nThe fourth line contains $M$ space-separated integers representing the elements of the second list.\n\nOutput:\nPrint $N$ space-separated integers representing the new list in strictly increasing order.\n\nSample Input 1:\n3\n2 4 5\n1 2 3\n4\n2 3 4\nSample Output 1:\n2 4 5 1 2 3\n\nSample Input 2:\n3\n3 4 5\n3 4 5\n1\n3 4 5\nSample Output 2:\n3 4 5 1 2 3\n\nSample Input 3:\n1\n3\n1\n3\nSample Output 3:\n3 1\n\nSample Input 4:\n2\n1 2\n3 4\n5 6\nSample Output 4:\n1 2 3 4 5 6\n\"\"\"\n\n\"\"\"\nA school decided to replace the desks in three classrooms. Each desk sits two students. Given the number of students in each class, print the smallest possible number of desks that can be purchased.\n\nThe program should read three integers: the number of students in each of the three classes, a, b and c respectively.\n\nIn"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n') == '6\\n19 12 2 18 5 5'\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3'\nprint('all tests passed')\n\n## if __name__ == '__main__':\n##     import sys\n##     if len(sys.argv) > 1:\n##         file_location = sys.argv[1].strip()\n##         with open(file_location, 'r') as f:\n##             input = f.read()\n##         print(solution(input))\n##     else:\n##         print('This test requires an input file.  Please select one from the data directory. (i.e. python solver.py./data/gc_4_1)')"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1''') == '6'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\nSample Output 3:\n13\n4 2 6 1 9 7 5 5 7 1 2 3 3\n''') == '13'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\nSample Output 3:\n-1''') == '-1'\nassert solution('''4 4 4\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1''') == '13'\nassert solution('''4 4 4\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1''') == '13'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5 5') == '6'\nassert solution('3 3 3') == '13'\nassert solution('3 1 3') == '-1'\nassert solution('3 2 3') == '13'\nassert solution('3 3 3') == '13'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 2 2\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''3 2 3\n3 1 1\n1 3 2\n3 2 3\n''') == '-1'\nassert solution('''3 1 1\n1 3 2\n2 1\n1 3\n3 2 3\n''') == '-1'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input('')) == output('')\n'''\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''\n3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''\n3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n3 1 3\\n1 3 1\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n1 2\") == \"13\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5 5') == '6'\nassert solution('3 3 3') == '13'\nassert solution('3 1 1 1 2') == '19'\nassert solution('3 2 1 1 2') == '12'\nassert solution('3 3 3') == '13'\n"
    },
    {
        "number": 3028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n') == '0 1\\n'\nassert solution('1\\n') == '1 1\\n'\nassert solution('2\\n') == '1 2\\n'\nassert solution('3\\n') == '1 2\\n'\nassert solution('4\\n') == '1 2\\n'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4''') == '5 1'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4''') == '3 2'\nassert solution('''5\n4\n3\n2\n1\n0\n3\n4\n1\n2\n3''') == '1 5'\nassert solution('''5\n4\n3\n2\n1\n0\n3\n4\n1\n2\n3''') == '3 2'\nassert solution('''5\n4\n3\n2\n1\n0\n3\n4\n1\n2\n3''') == '1 5'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"1 1\"\nassert solution(\"5\") == \"1 1\"\nassert solution(\"8\") == \"1 1\"\nassert solution(\"2\") == \"1 1\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4''') == '5 1','sample test'\nassert solution('''4\n1\n5\n3\n6\n1\n2\n3\n''') == '3 2','simple test'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '3 2'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '1 5'\nassert solution('''5\n1\n5\n3\n6\n1\n2\n3\n4\n''') == '3 2'\nassert solution('''5\n1\n5\n3\n6\n1\n2\n3\n4\n''') == '3 2'\nassert solution('''5\n1\n5\n3\n6\n1\n2\n3\n4\n''') == '3 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5\n3\n3\n3\n3\n3\n1\n2\n3\n4''') == '5 1'\nassert solution(\n'''5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '1 5'\nassert solution(\n'''4\n1\n5\n3\n6\n1\n2\n3\n4\n''') == '3 2'\nassert solution(\n'''4\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\nassert solution(\n'''5\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n''') == '0 0'\n"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n'''\n    ) == '1 5', 'actual: %s' % solution(\n'''\n5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n'''\n    )\n\nassert solution(\n'''\n5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n'''\n    ) == '3 2', 'actual: %s' % solution(\n'''\n5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n'''\n    )\n\nassert solution(\n'''\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647"
    },
    {
        "number": 3029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n') == '1 5'\nassert solution('5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n') == '3 2'\nassert solution('10\\n1\\n5\\n3\\n7\\n9\\n11\\n13\\n15\\n17\\n19\\n') == '7 4'\nassert solution('10\\n0\\n5\\n3\\n7\\n9\\n11\\n13\\n15\\n17\\n19\\n') == '6 4'\nassert solution('10\\n9\\n5\\n3\\n7\\n9\\n11\\n13\\n15\\n17\\n19\\n') == '6 4'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n3 0\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"1\"\nassert solution(\"\"\"5\n4 0\n3 1\n2 2\n1 3\n0 4\n\"\"\") == \"5\"\nassert solution(\"\"\"6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n\"\"\") == \"5\"\nassert solution(\"\"\"6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n\"\"\") == \"6\"\nassert solution(\"\"\"6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == answer\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 0\\n4 1\\n3 1\\n2 2\\n1 3\\n0 4\\n') == '5'\nassert solution('5\\n5 0\\n5 1\\n5 2\\n5 3\\n5 4\\nSample Output 3') == '5'\nassert solution('3\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\nSample Output 3') == '3'\nassert solution('7\\n7 0\\n7 1\\n7 2\\n7 3\\n7 4\\n7 5\\nSample Output 3') == '7'\nassert solution('3\\n1 0\\n3 1\\n2 1\\n1 3\\n0 4\\nSample Output 3') == '3'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 0') == '1'\nassert solution('5 0') == '1'\nassert solution('5 1') == '3'\nassert solution('6 0') == '5'\nassert solution('6 1') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n\") == \"\"\nassert solution(\"3\\n3 0\") == \"\"\nassert solution(\"3\\n3 1\") == \"\"\nassert solution(\"3\\n3 2\") == \"1\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\"\nassert solution(\"5 0\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n3 6\") == \"5\"\nassert solution(\"6 0\\n3 1\\n2 1\\n1 3\\n0 4\\n0 5\") == \"5\"\nassert solution(\"10 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\") == \"10\"\nassert solution(\"10 0\\n9 1\\n8 1\\n7 1\\n6 1\\n5 1\\n4 1\\n3 1\\n2 1\\n1 1\") == \"10\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 0\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '1'\nassert solution('4\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '5'\nassert solution('5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n') == '1'\nassert solution('6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '5'\nassert solution('7\\n4 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n') == '6'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n2 0\n3 1\n3 2\n3 3\n3 4\n''') == '5'\nassert solution('''4\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\nassert solution('''5\n1 0\n1 1\n2 1\n3 1\n4 1\nSample Output 3:\n5\n''') == '5'\nassert solution('''6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\nSample Output 3:\n5\n''') == '5'\nassert solution('''10\n10 0\n9 1\n8 2\n7 3\n6 4\n5 5\n4 6\n3 7\n2 8\n1 9\n0 10\n''') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1'\nassert solution(\n'''5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\nassert solution(\n'''6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '5'\nassert solution(\n'''10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\nassert solution(\n'''10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\n"
    },
    {
        "number": 3030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 1\\n2 1 1\\n3 1 1\\n4 1 1\\n5 1 1\\n6 1 1\\n7 1 1\\n8 1 1') == '4'\nassert solution('2\\n1 2 1\\n2 3 1') == '0'\nassert solution('4\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1') == '5'\nassert solution('9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2') == '5'\nassert solution('9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n6 10 2\\n7 11 1\\n8 12 1') == '6'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '4'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '5'\nassert solution('9\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '5'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n7 8 1\") == \"4\\n3\\n4\\n5\\n6\\n7\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"1 2 3 4 5 6\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7\") == \"0\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\nassert solution('''9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'\nassert solution('''9\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n9 9 2\n''') == '1'\nassert solution('''9\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n9 9 2\n''') == '1'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 1') == '4\\n1\\n2\\n3\\n6\\n7'\nassert solution('8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 1') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7'\nassert solution('8\\n1 3 3\\n1 4 4\\n1 5 5\\n1 6 2\\n1 7 2\\n1 8 2\\n1 9 2') == '2\\n1\\n3\\n4\\n5\\n6\\n7'\nassert solution('8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 1') == '0\\n1\\n2\\n3\\n6\\n7'\nassert solution('10\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n9 2 1\\n10 2 2') == '0\\n1\\n2\\n3\\n6\\n7'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample0) == '4\\n3\\n4\\n5\\n6\\n7\\n'\nassert solution(sample1) == '0\\n'\nassert solution(sample2) == '5\\n1\\n2\\n3\\n6\\n7\\n'\nassert solution(sample3) == '5\\n1\\n2\\n3\\n4\\n'\nassert solution(sample4) == '5\\n1\\n2\\n3\\n4\\n'\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n7 8 1\") == \"4\\n3\\n4\\n5\\n6\\n7\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\""
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 2\") == \"4\"\nassert solution(\"1 3 1\") == \"3\"\nassert solution(\"2 3 1\") == \"4\"\nassert solution(\"2 4 3\") == \"4\"\nassert solution(\"3 4 3\") == \"4\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n\"\"\") == \"4\\n3\\n4\\n5\\n6\\n7\"\nassert solution(\"\"\"\n8\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n\"\"\") == \"0\\n1\\n2\\n3\\n6\\n7\"\nassert solution(\"\"\"\n10\n1 2 2\n1 3 1\n2 4 3\n2 5 4\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n6 10 3\n7 11 4\n8 12 1\n9 13 2\n\"\"\") == \"5\\n1\\n2\\n3\\n6\\n7\"\nassert solution(\"\"\"\n8\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n6 10 3\n7 11 4\n8 12 1\n9 13 2\n\"\"\") == \"5\\n1\\n2\\n3\\n6\\n7\"\nassert solution(\"\"\"\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n6 10 3\n7 11 4\n8 12 1\n9 13 2\n\"\"\") == \"5\\n1\\n2\\n3\\n6\\n7\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('V1 V2 V1 V1 V2') == ''\nassert solution('V1 V2 V1 V1 V2') == ''\nassert solution('V1 V2 V1 V1 V2') == ''\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\"\nassert solution(\"1 2\\nR2 V1 V2 V1 E\\n\") == \"2\"\nassert solution(\"1 2\\nR3 V1 V2 V1 E\\n\") == \"3\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(solution.get_input(__file__)) == solution.get_expected_output(__file__)\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2''') == '5'\nassert solution('''2 1\nV1 V2 V1 V1 V2''') == '6'\nassert solution('''1 2\nR10 V1 V2 V1 E''') == '30'\n\nprint(solution(input()))"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''2 1\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''1 2\nR10 V1 V2 V1 E\n''') == '30'\nassert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '5'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2''') == '5'\nassert solution('''2 1\nV1 V2 V1 V1 V2''') == '6'\nassert solution('''1 2\nR10 V1 V2 V1 E''') == '30'\nprint(solution(input()))\n''')"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n2 1\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\nassert solution('''\n1 1\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''\n1 1\nR10 V1 V2 V1 E\n''') == '1'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n2 1\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\nassert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\n"
    },
    {
        "number": 3032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''2 1\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''1 2\nR10 V1 V2 V1 E\n''') == '30'\n\nassert solution('''2 2\nV1 V2 V1 V1 V2\n''') == '0'\nassert solution('''2 3\nV1 V2 V1 V1 V2 V1\n''') == '7'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\nassert solution(\"9 19\") == \"546\"\nassert solution(\"10 20\") == \"impossible\"\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\nprint(solution(stdin))"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''10 24'''\n) == '''38'''\n\nassert solution(\n'''10 11'''\n) == '''impossible'''\n\nassert solution(\n'''9 216'''\n) == '''546'''\n\nassert solution(\n'''2 2'''\n) == '''impossible'''\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\nassert solution('9 117') == 'impossible'\nassert solution('9 19') == 'impossible'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 22') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n\n\"\"\"\n\n\"\"\"\n20. Valid parentheses\nhttps://www.hackerrank.com/challenges/valid-parentheses\n\n------ Problem Description ------\n\nGiven a string $S$ consisting of parentheses, braces, and brackets, write a function that returns 1 if the string is valid and 0 otherwise.\n\nFor example,\n\n\u201c(){}[]\u201d is a valid string, therefore, your function should return 1.\n\n\u201c{}{}()\u201d is an invalid string, therefore, your function should return 0.\n\n------ Complexity ------\n\nO(n) time\n\n------ Explanation ------\n\nWe can use a stack to store the opening and closing parentheses, and use a counter to store the number of closing parentheses or the number of opening parentheses.\n\nIf the stack is empty, we have an opening parenthesis. If the stack is not empty and the top element of the stack is an opening parenthesis, we can add 1 to the counter.\nIf the stack is not empty and the top element of the stack is a closing parenthesis, we can remove it and decrement the counter.\nIf the stack is not empty and the top element of the stack is an opening parenthesis, we cannot remove it since we don't have a matching closing parenthesis.\nIf the stack is not empty and the top element of the stack is a closing parenthesis, we can add 1 to the counter.\n\"\"\""
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 24\n''') == '38'\nassert solution('''10 11\n''') == 'impossible'\nassert solution('''9 216\n''') == '546'\nassert solution('''100 44\n''') == 'impossible'\nassert solution('''1 9\n''') == 'impossible'\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'impossible'\nassert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\nprint(\"Tests passed\")\n"
    },
    {
        "number": 3033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10\n''') == '466.662'\nassert solution('''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == '10.00005'\nassert solution('''3 4 1 0\n0 2 0.25 8\n2 4 0.66667 15\n1 2\n''') == '2.0'\n'''\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10\n\"\"\") == \"466.662\"\nassert solution(\n    \"\"\"3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n\"\"\") == \"10.00005\"\nprint(\"Tests passed.\")\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n        \"20 60 2 1\\n\"\n        \"5 15 0.33333 30\\n\"\n        \"22 60 0.66667 70\\n\"\n        \"0 10\\n\") == \"466.662\"\n\nassert solution(\n        \"3 4 2 1\\n\"\n        \"1 3 0.25 8\\n\"\n        \"2 4 0.66667 15\\n\"\n        \"1 2\\n\") == \"10.00005\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open('test').read()) == '66.6667'\nassert solution(open('test2').read()) == '10.00005'\nassert solution(open('test3').read()) == '2.0'\nassert solution(open('test4').read()) == '2.00000'\nassert solution(open('test5').read()) == '6.66667'\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n\"\"\"\n) == \"466.662\"\nassert solution(\n\"\"\"\n3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n\"\"\"\n) == \"10.00005\"\nassert solution(\n\"\"\"\n1000000 1\n100000 1\n1000 1\n100 1\n1 1\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n1000000 1\n100000 1\n1000 1\n100 1\n1 1\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n1000000 1\n100000 1\n1000 1\n100 1\n1 1\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == \"2\"\nassert solution(\"20 60 2 1\") == \"466.662\"\nassert solution(\"3 4 2 1\") == \"10.00005\"\nassert solution(\"3 4 1 0\") == \"2.0\"\nassert solution(\"3 4 1 1\") == \"10.00005\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 60 2 1\n5 15 0.33333 30\n22 60 0.66667 70\n0 10''') == '466.662'\nassert solution('''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2''') == '10.00005'\nprint('all tests passed')\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[2]\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sample input 1') == '1.500000000000000'\nassert solution('sample input 2') == '0.000000000000000'\nassert solution('sample input 3') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\nassert solution('''\n0\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '0.000000000000000'\nassert solution('''\n1\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution(\n'''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution(\n'''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\nassert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''5\nyellow orange 1.0\norange pink 1.5\ngreen yellow 1.5\nblue green 1.5\npink red 1.0''') == '5.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n\"\"\") == \"1.500000000000000\"\nassert solution(\n    \"\"\"\n2\nblue red 1.0\nred pink 1.5\n\"\"\") == \"0.000000000000000\"\nassert solution(\n    \"\"\"\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n\"\"\") == \"10.000000000000000\"\nassert solution(\n    \"\"\"\n2\nblue red 1.0\nred pink 1.5\nblue red 1.0\n\"\"\") == \"0.000000000000000\"\nassert solution(\n    \"\"\"\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n\"\"\") == \"10.000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\n\nassert solution('''2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\n\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\nprint(solution(input()))\n"
    },
    {
        "number": 3035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\") == \"1.500000000000000\"\nassert solution(\"0\\nblue\\nred\\n1.0\\nblue\\nred\\n1.5\\nblue\\nred\\n1.0\\nblue\\nred\\n1.5\\nblue\\nred\\n1.0\\nblue\\nred\\n1.5\") == \"0.000000000000000\"\nassert solution(\"0\\nblue\\nred\\n1.0\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\") == \"10.000000000000000\"\nassert solution(\"0\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1.5\\nblue\\nred\\n1"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '180'\n'''\n\nfrom typing import List\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1 1 0\") == \"180\"\nassert solution(\"2 3 1 5 3 2\") == \"22\"\nassert solution(\"2 1 2\") == \"0\"\nassert solution(\"3 3 4 5\") == \"22\"\nassert solution(\"1 6\") == \"too many\"\n\nfrom sys import setrecursionlimit\nsetrecursionlimit(2000)"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\n\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\n\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == 'too many'\nassert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\n\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\n\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    6 1 1 1 0\n    2 3 1 5 3 2\n    2 1 2\n    3 3 4 5\n    1 6\n    \"\"\"\n) == '180'\n\nassert solution(\n    \"\"\"\n    3 2 2 1 1\n    2 3 2\n    1 1\n    1 2\n    1 2\n    1 3\n    1 1\n    2 3\n    \"\"\"\n) == '22'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n3 1 1 1\n2 1\n2 1\n''') == '0'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n3 1 1 1\n2 1\n2 1\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n\"\"\") == \"180\"\nassert solution(\n\"\"\"\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n\"\"\") == \"22\"\nassert solution(\n\"\"\"\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3') == '20 20'\n\nprint('Success')"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 8 5') == '20 20'\nassert solution('6 8 5') == '17 17'\nassert solution('6 8 5') == '15 16'\nassert solution('6 8 5') == '16 19'\nassert solution('6 8 5') == '16 19'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 8 5') == '20 20'\nassert solution('6 8 3') == '17 17'\nassert solution('5 1 2') == '-1 -1'\nassert solution('5 1 2') == '-1 -1'\nassert solution('3 3 2') == '-1 -1'\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == \"\"\"\"\"\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 8 5\") == \"20 20\"\nassert solution(\"6 8 5\") == \"17 17\"\nassert solution(\"3 3 2\") == \"-1 -1\"\nassert solution(\"3 3 2\") == \"-1 -1\"\nassert solution(\"3 3 3\") == \"-1 -1\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n6 8 5\n.......\n.#....#\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\\n.\\n..\\n#.\") == \"17 17\"\nassert solution(\"3 3 2\\n.\\n........\\n#..#####\\n#..#...#\\n#.#..#.#\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 20\"\nassert solution(\"3 3 2\\n.\\n...\\n.#.\\n#..\\n#..\\n#..\\nup 2\\nright 2\") == \"-1 -1\"\nassert solution(\"3 3 2\\n.\\n.\\n.\\n.\\n.\\n.\\nup 2\\nright 2\") == \"-1 -1\"\nassert solution(\"3 3 2\\n.\\n.\\n.\\n.\\n.\\n.\\nup 2\\nright 2\\ndown 2\\nleft 4\") == \"17 17\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''371''') == 'impossible'\nassert solution('''310''') == 'impossible'\nassert solution('''90''') == 'impossible'\nassert solution('''9''') == 'impossible'\nassert solution('''100''') == 'impossible'\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2\n2 40 65\n2 100 150\n2 300 320\n''') == '88'\nassert solution('''10\n4\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n10\n5\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''1\n1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n31\n2\n2 40 65\n2 100 150\n2 300 320\n''') == \"88\"\n\nassert solution(\n'''\n10\n2\n2 40 65\n2 100 150\n2 300 320\n''') == \"impossible\"\n\nassert solution(\n'''\n9\n2\n2 40 65\n2 100 150\n2 300 320\n''') == \"impossible\"\n\nassert solution(\n'''\n10\n3\n2 40 65\n2 100 150\n2 300 320\n''') == \"impossible\"\n\nassert solution(\n'''\n20\n4\n2 40 65\n2 100 150\n2 300 320\n''') == \"impossible\""
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"88\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"271\\n4\") == \"270\"\nassert solution(\"380\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"281\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\"\nassert solution(\"0\\n1\\n1\\n\") == \"impossible\"\nassert solution(\"0\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"200\""
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '88'\nassert solution('''\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n''') == 'impossible'\nassert solution('''\n3\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '150'\nassert solution('''\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n....\n....\n....\n....\n....\n....\n''') == 'can fold'\nassert solution('''\n......\n....#\n....#\n......\n....#\n....#\n......\n''') == 'cannot fold'\nassert solution('''\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''......\n......\n######\n......\n......\n......'''.strip()) == 'can fold'\nassert solution('''..##..\n...#..\n..##..\n...#..\n......\n......\n'''.strip()) == 'cannot fold'\nassert solution('''..##..\n...#..\n..##..\n...#..\n..#...\n......\n......\n'''.strip()) == 'cannot fold'\nassert solution('''..##..\n...#..\n..##..\n...#..\n...#..\n..#...\n......\n......\n'''.strip()) == 'can fold'\nassert solution('''..##..\n...#..\n..##..\n...#..\n...#..\n..#...\n......\n......\n'''.strip()) == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......') == 'can fold'\nassert solution('......\\n......\\n######\\n.....#\\n......\\n......') == 'cannot fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......') == 'can fold'\nassert solution('..##..\\n...#..\\n..##..\\n.....#\\n......\\n......') == 'cannot fold'\nassert solution('......\\n......\\n######\\n#.....\\n......\\n......') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'can fold'\nassert solution('....') == 'cannot fold'\nassert solution('....\\n....') == 'can fold'\nassert solution('......') == 'can fold'\nassert solution('.....\\n....\\n....') == 'can fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''......\n......\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('###..#') == ''\nassert solution('#.....#') == ''\nassert solution('...#..#') == ''\nassert solution('..##..') == ''\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cannot fold') == 'can fold'\nassert solution('can fold') == 'cannot fold'\nassert solution('can fold') == 'cannot fold'\nassert solution('can fold') == 'cannot fold'\nassert solution('can fold') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('.##.#.##.#.##') == \"can fold\"\nassert solution('..##.#...#..') == \"can fold\"\nassert solution('##..##...#.#') == \"can fold\"\nassert solution('....#.##.#.##') == \"can fold\"\nassert solution('#.##.#...#.#') == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'cannot fold'\nassert solution('...') == 'can fold'\nassert solution('....') == 'cannot fold'\nassert solution('.....') == 'can fold'\nassert solution('......') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''......\n......\n######\n......\n......\n......\n''') == 'can fold'\nassert solution('''..##..\n...#..\n..##..\n...#..\n......\n......\n''') == 'cannot fold'\nassert solution('''..##..\n...#..\n####..\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('abcdbceba') == 'abcdb'\nassert solution('aabb') == 'aa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(test1) == \"abc\"\nassert solution(test2) == \"abcba\"\nassert solution(test3) == \"a\"\nassert solution(test4) == \"abcbabcba\"\nassert solution(test5) == \"a\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('abcdefg') == 'abcdefg'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('aabcdefghabc') == 'abc'\nassert solution('aabcdefghbcd') == 'abc'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('b') == 'b'\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('aabcabcabcab') == 'abcabc'\nassert solution('abcabcab') == 'abc'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('aaaaa') == 'aaa'\nassert solution('aaaaaa') == 'aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\nassert solution(\"aabac\") == \"aabac\"\nassert solution(\"ac\") == \"ac\"\n\nprint(\"Testcase 1: Passed.\")\nprint(\"Testcase 2: Passed.\")\nprint(\"Testcase 3: Passed.\")\nprint(\"Testcase 4: Passed.\")\nprint(\"Testcase 5: Passed.\")\nprint(\"Testcase 6: Passed.\")\nprint(\"Testcase 7: Passed.\")\nprint(\"Testcase 8: Passed.\")\nprint(\"Testcase 9: Passed.\")\nprint(\"Testcase 10: Passed.\")\nprint(\"Testcase 11: Passed.\")\nprint(\"Testcase 12: Passed.\")\nprint(\"Testcase 13: Passed.\")\nprint(\"Testcase 14: Passed.\")\nprint(\"Testcase 15: Passed.\")\nprint(\"Testcase 16: Passed.\")\nprint(\"Testcase 17: Passed.\")\nprint(\"Testcase 18: Passed.\")\nprint(\"Testcase 19: Passed.\")\nprint(\"Testcase 20: Passed.\")\nprint(\"Testcase 21: Passed.\")\nprint(\"Testcase 22: Passed.\")\nprint(\"Testcase 23: Passed.\")\nprint(\"Testcase 24: Passed.\")\nprint(\"Testcase 25: Passed.\")\nprint(\"Testcase 26: Passed.\")\nprint(\"Testcase 27: Passed.\")\nprint(\"Testcase 28: Passed.\")\nprint(\"Testcase 29: Passed.\")\nprint(\"Testcase 30: Passed.\")\nprint(\"Testcase 31: Passed.\")\nprint(\"Testcase 32: Passed.\")\nprint(\"Testcase 33: Passed.\")\nprint(\"Testcase 34: Passed.\")\nprint(\"Testcase 35: Passed.\")\nprint(\"Testcase 36: Passed.\")\nprint(\"Testcase 37: Passed.\")\nprint(\"Testcase 38: Passed.\")\nprint(\"Testcase 39: Passed.\")\nprint(\"Testcase 40: Passed.\")\nprint(\"Testcase 41: Passed.\")\nprint(\"Testcase 42: Passed.\")\nprint(\"Testcase 43: Passed.\")\nprint(\"Testcase 44: Passed.\")\nprint(\"Testcase 45: Passed.\")\nprint(\"Testcase 46: Passed.\")\nprint(\"Testcase 47: Passed.\")\nprint(\"Testcase 48: Passed.\")\nprint(\"Testcase 49: Passed.\")\nprint(\"Testcase 50: Passed.\")\nprint(\"Testcase 51: Passed.\")\nprint(\"Testcase 52: Passed.\")\nprint(\"Testcase 53: Passed.\")\nprint(\"Testcase 54: Passed.\")\nprint(\"Testcase 55: Passed.\")\nprint(\"Testcase 56: Passed.\")\nprint(\"Testcase 57: Passed.\")\nprint(\"Testcase 58: Passed.\")\nprint(\"Testcase 59: Passed.\")\nprint(\"Testcase 60: Passed.\")\nprint(\"Testcase 61: Passed.\")\nprint(\"Testcase 62: Passed.\")\nprint(\"Testcase 63: Passed.\")\nprint(\"Testcase 64: Passed.\")\nprint(\"Testcase 65: Passed.\")\nprint(\"Testcase 66: Passed.\")\nprint(\"Testcase 67: Passed.\")\nprint(\"Testcase 68: Passed.\")\nprint(\"Testcase 69: Passed.\")\nprint(\"Testcase 70: Passed.\")\nprint(\"Testcase 71: Passed.\")\nprint(\"Testcase 72: Passed.\")\nprint(\"Testcase 73: Passed.\")\nprint(\"Testcase 74: Passed.\")\nprint(\"Testcase 75: Passed.\")\nprint(\"Testcase 76: Passed.\")\nprint(\"Testcase 77: Passed.\")\nprint(\"Testcase 78: Passed.\")\nprint(\"Testcase 79: Passed.\")\nprint(\"Testcase 80: Passed.\")\nprint(\"Testcase 81: Passed.\")\nprint(\"Testcase 82: Passed.\")\nprint(\"Testcase 83: Passed.\")\nprint(\"Testcase 84: Passed.\")\nprint(\"Testcase 85: Passed.\")\nprint(\"Testcase 86: Passed.\")\nprint(\"Testcase 87: Passed.\")\nprint(\"Testcase 88: Passed.\")\nprint(\"Testcase 89: Passed.\")\nprint(\"Testcase 90: Passed.\")\nprint(\"Testcase 91: Passed.\")\nprint(\"Testcase 92: Passed.\")\nprint(\"Testcase 93: Passed.\")\nprint(\"Testcase 94: Passed.\")\nprint(\"Testcase 95: Passed.\")\nprint(\"Testcase 96: Passed.\")\nprint(\"Testcase 97: Passed.\")\nprint(\"Testcase 98: Passed.\")\nprint(\"Testcase 99: Passed.\")\nprint(\"Testcase 100: Passed.\")\nprint(\"Testcase 101: Passed.\")\nprint(\"Testcase 102: Passed.\")\nprint(\"Testcase 103: Passed.\")\nprint(\"Testcase 104: Passed.\")\nprint(\"Testcase 105: Passed.\")\nprint(\"Testcase 106: Passed.\")\nprint(\"Testcase 107: Passed.\")\nprint(\"Testcase 108: Passed.\")\nprint(\"Testcase 109: Passed.\")\nprint(\"Testcase 110: Passed.\")\nprint(\"Testcase 111: Passed.\")\nprint(\"Testcase 112: Passed.\")\nprint(\"Testcase 113: Passed.\")\nprint(\"Testcase 114: Passed.\")\nprint(\"Testcase 115: Passed.\")\nprint(\"Testcase 116: Passed.\")\nprint(\"Testcase 117: Passed.\")\nprint(\"Testcase 118: Passed.\")\nprint(\"Testcase 119: Passed.\")\nprint(\"Testcase 120: Passed.\")\nprint(\"Testcase 121: Passed.\")\nprint(\"Testcase 122: Passed.\")\nprint(\"Testcase 123: Passed.\")\nprint(\"Testcase 124: Passed.\")\nprint(\"Testcase 125: Passed.\")\nprint(\"Testcase 126: Passed.\")\nprint(\"Testcase 127: Passed.\")\nprint(\"Testcase 128: Passed.\")\nprint(\"Testcase 129: Passed.\")\nprint(\"Testcase 130: Passed.\")\nprint(\"Testcase 131: Passed.\")\nprint(\"Testcase 132: Passed.\")\nprint(\"Testcase 133: Passed.\")\nprint(\"Testcase 134: Passed.\")\nprint(\"Testcase 135: Passed.\")\nprint(\"Testcase 136: Passed.\")\nprint(\"Testcase 137: Passed.\")\nprint(\"Testcase 138: Passed.\")\nprint(\"Testcase 139: Passed.\")\nprint(\"Testcase 140: Passed.\")\nprint(\"Testcase 141: Passed.\")\nprint(\"Testcase 142: Passed.\")\nprint(\"Testcase 143: Passed.\")\nprint(\"Testcase 144: Passed.\")\nprint(\"Testcase 145: Passed.\")\nprint(\"Testcase 146: Passed.\")\nprint(\"Testcase 147: Passed.\")\nprint(\"Testcase 148: Passed.\")\nprint(\"Testcase 149: Passed.\")\nprint(\"Testcase 150: Passed.\")\nprint(\"Testcase 151: Passed.\")\nprint(\"Testcase 152: Passed.\")\nprint(\"Testcase 153: Passed.\")\nprint(\"Testcase 154: Passed.\")\nprint(\"Testcase 155: Passed.\")\nprint(\"Testcase 156: Passed.\")\nprint(\"Testcase 157: Passed.\")\nprint(\"Testcase 158: Passed.\")\nprint(\"Testcase 159: Passed.\")\nprint(\"Testcase 160: Passed.\")\nprint(\"Testcase 161: Passed.\")\nprint(\"Testcase 162: Passed.\")\nprint(\"Testcase 163: Passed.\")\nprint(\"Testcase 164: Passed.\")\nprint(\"Testcase 165: Passed.\")\nprint(\"Testcase 166: Passed.\")\nprint(\"Testcase 167: Passed.\")\nprint(\"Testcase 168: Passed.\")\nprint(\"Testcase 169: Passed.\")\nprint(\"Testcase 170: Passed.\")\nprint(\"Testcase 171: Passed.\")\nprint(\"Testcase 172: Passed.\")\nprint(\"Testcase 173: Passed.\")\nprint(\"Testcase 174: Passed.\")\nprint(\"Testcase 175: Passed.\")\nprint(\"Testcase 176: Passed.\")\nprint(\"Testcase 177: Passed.\")\nprint(\"Testcase 178: Passed.\")\nprint(\"Testcase 179: Passed.\")\nprint(\"Testcase 180: Passed.\")\nprint(\"Testcase 181: Passed.\")\nprint(\"Testcase 182: Passed.\")\nprint(\"Testcase 183: Passed.\")\nprint(\"Testcase 184: Passed.\")\nprint(\"Testcase 185: Passed.\")\nprint(\"Testcase 186: Passed.\")\nprint(\"Testcase 187: Passed.\")\nprint(\"Testcase 188: Passed.\")\nprint(\"Testcase 189: Passed.\")\nprint(\"Testcase 190: Passed.\")\nprint(\"Testcase 191: Passed.\")\nprint(\"Testcase 192: Passed.\")\nprint(\"Testcase 193: Passed.\")\nprint(\"Testcase 194: Passed.\")\nprint(\"Testcase 195: Passed.\")\nprint"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 4\n2 5''') == '4'\nassert solution('''1 4\n2 10005\n0 15''') == '4'\nassert solution('''0 3\n1 2\n2 1\n3 2''') == '3'\nassert solution('''0 3\n1 2\n2 1\n3 2''') == '3'\nassert solution('''1 4\n0 6\n2 5\n3 4\n4 5''') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n2 5\\n1 4') == '4'\nassert solution('3\\n0 15\\n2 10\\n0 15') == '4'\nassert solution('4\\n2 10005\\n0 15\\n1 10005') == '4'\nassert solution('2\\n1 4\\n2 10005\\n0 15\\n1 10005') == '4'\nassert solution('2\\n1 4\\n2 10\\n0 15\\n1 10005') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4\\n2 5\\n') == '4'\nassert solution('2 10005\\n0 15\\n') == '6'\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == '4'\nassert solution('2\\n1 4\\n2 10005\\n0 15\\n') == '6'\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == '4'\nassert solution('1\\n1 4\\n2 10005\\n') == '4'\nassert solution('1\\n1 4\\n0 15\\n') == '4'\nassert solution('1\\n1 4\\n1 15\\n') == '4'\nassert solution('1\\n1 4\\n1 2\\n') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('0\\n1\\n2\\n3') == '4'\nassert solution('0\\n1\\n2\\n3\\n4') == '4'\nassert solution('0\\n1\\n2\\n3\\n4\\n5') == '6'\nassert solution('0\\n1\\n2\\n3\\n4\\n5\\n6') == '6'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0\n1 4\n2 10005\n''') == '4'\nassert solution('''0\n1 4\n2 10005\n''') == '6'\nassert solution('''0\n1 4\n2 10005\n0 15\n''') == '4'\nassert solution('''0\n1 4\n2 10005\n0 15\n1 3\n1 4\n1 10\n1 10005\n1 10000\n1 100000\n1 1000000\n2\n1 3\n1 4\n1 10\n1 10005\n1 10000\n1 100000\n1 1000000\n''') == '6'\nassert solution('''0\n1 4\n2 10005\n0 15\n1 3\n1 4\n1 10\n1 10005\n1 10000\n1 100000\n1 1000000\n2\n1 3\n1 4\n1 10\n1 10005\n1 10000\n1 100000\n1 1000000\n''') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"0\n1 4\n2 10005\"\"\"\n) == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n1 4\n2 5\n''') == '4'\nassert solution('''2\n1 4\n2 10005\n''') == '6'\nassert solution('''3\n1 4\n2 10\n0 15\n''') == '4'\nassert solution('''1\n1 4\n2 10005\n''') == '4'\nassert solution('''3\n1 4\n2 10\n0 15\n''') == '6'\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\\n1\\n0\") == \"0\"\nassert solution(\"1\\n0\\n0\") == \"1\"\nassert solution(\"2\\n0\\n0\") == \"1\"\nassert solution(\"2\\n1\\n0\") == \"1\"\nassert solution(\"2\\n0\\n0\") == \"1\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''\n3\n7 7 7\n''') == '3'\nassert solution('''\n5\n1 2 3 2 1\n''') == '0'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '2'\nassert solution('''\n8\n1 2 3 4 5 6 7 8\n''') == '8'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n7\n2 3 4 4 8 12 24\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3\n7 7 7\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 2 1\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n9\n1 1 1 1 1 1 1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n\") == \"0\"\nassert solution(\"7 7 7\\n\") == \"3\"\nassert solution(\"2 3 4 4 8 12 24\\n\") == \"2\"\nassert solution(\"7 7 7\\n\") == \"3\"\nassert solution(\"1 2 3\\n\") == \"0\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2\\n') == '2'\nassert solution('2\\n2 2\\n') == '4'\nassert solution('3\\n7 7\\n') == '0'\nassert solution('5\\n1 2 3 2 1\\n') == '3'\nassert solution('7\\n2 3 2 3 2 1\\n') == '1'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24''') == '2'\nassert solution('''3\n7 7 7''') == '3'\nassert solution('''5\n1 2 3 2 1''') == '0'\nassert solution('''3\n7 7 7''') == '3'\nassert solution('''2\n1 2''') == '1'\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\\n\") == \"2\"\nassert solution(\"3\\n7 7 7\\n\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\\n\") == \"0\"\nassert solution(\"5\\n1 2 3 2 1\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24''') == '2'\nassert solution('''3\n7 7 7''') == '3'\nassert solution('''5\n1 2 3 2 1''') == '0'\nprint(solution('''7\n2 3 4 4 8 12 24'''))"
    },
    {
        "number": 3042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24''') == \"2\"\nassert solution('''3\n7 7 7''') == \"3\"\nassert solution('''5\n1 2 3 2 1''') == \"0\"\nassert solution('''6\n1 2 3 4 5 6\n1 1 2 3 4 4\n1 1 1 2 2 3\n1 1 1 1 1 1\n1 1 1 1 1 1''') == \"6\"\nprint(\"Testcases passed successfully.\")\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution(\n'''1 2 1\nGS\n''') == '1'\nassert solution(\n'''2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 2') == '-1'\nassert solution('2 3 1') == '3'\nassert solution('2 1 1') == '1'\nassert solution('1 1 1') == '0'\nassert solution('2 2 1') == '1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\") == \"3\"\nassert solution(\"2 5 4\") == \"3\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\\n#G\") == \"-1\"\nassert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"2 2 5\\nS#.F.\\n.M.G\") == \"-1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#\\n#G') == '-1'\nassert solution('2 2 10\\nS#\\nGS') == '-1'\nassert solution('2 2 10\\nS#\\n#G\\n#G') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 2') == '-1'\nassert solution('2 2 1') == '1'\nassert solution('3 1 3') == '2'\nassert solution('5 10 4') == '3'\nassert solution('8 8 9') == '3'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '3'\nassert solution('2 5 4') == '3'\nassert solution('2 4 2') == '-1'\nassert solution('2 1 2') == '-1'\nassert solution('2 10 1') == '1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution(\n'''1 2 1\nGS\n''') == '1'\nassert solution(\n'''2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5 1\\nS#.F.\\n.MFMG\\n') == '3'\nassert solution('1 2 1\\nGS\\n') == '1'\nassert solution('2 2 10\\nS#\\n#G\\n') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3'\n    'S..'\n    '.#.'\n    '..G'\n    'DRRDD') == '1'\n\nassert solution('3 7'\n    '.......'\n    '.G.#.S.'\n    '.......'\n    'LDLDLLDR'\n    ')') == '1'\n\nassert solution('3 7'\n    '.........'\n    '.G.#.S.S.'\n    '.........'\n    'LDLDLLDR'\n    ')') == '2'\n\nassert solution('3 3'\n    'S...'\n    '...G'\n    '...G'\n    'G..'\n    'DRRDD') == '0'\n\nassert solution('3 7'\n    'S..S'\n    '...G'\n    '.G...'\n    'G....'\n    'DRRDD') == '1'"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\nS..\n.#.\n..G\nDRRDD''') == '1'\nassert solution('''3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR''') == '1'\nassert solution('''3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR''') == '2''''\n\n'''\n\nimport unittest"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"3 3\nS..\n.#.\n..G\nDRRDD\"\"\".strip()) == \"1\"\n\nassert solution(\n    \"\"\"5 6\n.......\n.G.#.S.\n.......\nLDLDLLDR\n..#####\n..#.....\n.......\"\"\".strip()) == \"2\"\n\nassert solution(\n    \"\"\"3 5\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"S..\\n\"\n    \".#.\\n\"\n    \"..G\\n\"\n    \"DRRDD\\n\"\n) == \"1\"\n\nassert solution(\n    \"3 7\\n\"\n    \".......\\n\"\n    \".G.##S.\\n\"\n    \".......\\n\"\n    \"LDLDLLDR\\n\"\n) == \"1\"\n\nassert solution(\n    \"3 7\\n\"\n    \"S...\\n\"\n    \".G.#.S.\\n\"\n    \".......\\n\"\n    \"LDLDLLDR\\n\"\n) == \"2\"\n\nassert solution(\n    \"3 7\\n\"\n    \"S...\\n\"\n    \".G.#.S.\\n\"\n    \".......\\n\"\n    \"RRRRRRDR\\n\"\n) == \"2\"\n\nassert solution(\n    \"3 7\\n\"\n    \"S...\\n\"\n    \".G.#.S.\\n\"\n    \".......\\n\"\n    \"RLRRRDDD\\n\"\n) == \"3\""
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('DRRDD') == 1\nassert solution('RRRDRDRDD') == 1\nassert solution('RRRDRDRDD') == 2\nassert solution('URDDLLR') == 2\nassert solution('UDULRUDDRUDULR') == 2\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(STDIN) == OUTPUT\n\"\"\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\nS..\n.#.\n..G\nDRRDD''') == '1'\nassert solution('''3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR''') == '1'\nassert solution('''3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR''') == '2'\nassert solution('''7 7\n#######\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"DRRDD\") == 1\nassert solution(\"LDLDLLDR\") == 1\nassert solution(\"..G.#.S.\") == 1\nassert solution(\"#....G..#.....\") == 1\nassert solution(\"..........G..#.....\") == 1\n"
    },
    {
        "number": 3044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == 1\nassert solution(\"3 7\\n.......\\n.G.##S.\\n.......\\nLDLDLLDR\") == 1\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == 2\nassert solution(\"3 7\\n.....G.\\n.G.##S.\\n.......\\nLDLDLLDR\") == 3\nassert solution(\"3 7\\n.....G.\\n.G.##S.\\n.......\\nLDLDLLDR\") == 4\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_case_2.txt\")) == \"impossible\"\nassert solution(open(\"test_case_1.txt\")) == \"1000200 799\"\nassert solution(open(\"test_case_0.txt\")) == \"uncertain\"\nassert solution(open(\"test_case_3.txt\")) == \"uncertain\"\n\n-----Notes-----\n    The AEPE challenge requires to compute the exact solution for an MPS receiver.\n    I tried to take advantage of the symmetry of the problem and solved it by noticing that at any given point, MPS receiver will always have a constant Manhattan distance to a beacon.\n    I then solved this by tracking the receiver through each possible path and determining whether the receiver has an even or odd Manhattan distance to a beacon.\n    The above method was slow because it did not pass the online judge, but it is possible to use a more efficient method.\n    The method used is to solve the problem via backtracking.\n    An algorithm to solve this problem is given in a separate file.\n    The time complexity is O(2^(N+M))\n\"\"\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'uncertain'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'impossible'\nassert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n1\n999999 0 1000\n''') == '1000200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('999999 0 1000') == '1000200 799'\nassert solution('999900 950 451') == '1000200 799'\nassert solution('987654 123 13222') == '1000200 799'\nassert solution('100 0 101') == 'uncertain'\nassert solution('0 200 199') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n2\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == 'uncertain'\nassert solution('''\n3\n100 0 100\n0 200 199\n''') == 'impossible'\nassert solution('''\n3\n1000000 1000000 100\n1000000 1000000 1\n1000000 1000000 1000\n''') == 'impossible'\nassert solution('''\n5\n1000000 999997 100\n1000000 999999 100\n1000000 999999 0\n999999 999998 1\n999998 999999 0\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799\\n'\nassert solution('1\\n100 0 101\\n0 200 199') == 'uncertain\\n'\nassert solution('1\\n0 0 0\\n0 0 0') == 'impossible\\n'\nassert solution('1\\n100 0 100\\n0 200 199') == 'impossible\\n'\nassert solution('4\\n100 0 101\\n0 200 199\\n99999 0 1000\\n999900 950 451\\n987654 123 13222') == 'uncertain\\n'\n\nimport sys\n"
    },
    {
        "number": 3045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n999999 0 1000\n999900 950 451\n987654 123 13222''') == '1000200 799'\nassert solution('''2\n100 0 100\n0 200 199''') == 'uncertain'\nassert solution('''2\n100 0 100\n0 200 199''') == 'impossible'\nassert solution('''2\n1 2 3\n1 2 3''') == 'impossible'\nassert solution('''3\n999999 0 1000\n999900 950 451\n987654 123 13222\n99999 0 100000\n999000 950 5045\n123 123121322''') == 'impossible'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\"\nassert solution(\"4 8\\n9 7\\n14 18\\n19 17\") == \"1\\n2\"\nassert solution(\"4 8\\n14 17\\n9 7\\n18 18\") == \"1\\n2\"\nassert solution(\"4 8\\n14 17\\n9 7\\n19 18\\n\") == \"1\\n2\"\nassert solution(\"4 8\\n9 7\\n14 18\\n19 17\\n\") == \"1\\n2\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '2\\n1'\n\"\"\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT1) == SAMPLE_OUTPUT1\nassert solution(SAMPLE_INPUT2) == SAMPLE_OUTPUT2\nassert solution(SAMPLE_INPUT3) == SAMPLE_OUTPUT3\n'''\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\"\nassert solution(\"2\\n4 7\\n14 17\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n14 17\\n19 18\") == \"1\\n2\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1\\n'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2\\n'\nassert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '1\\n2\\n'\nassert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '1\\n2\\n'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2\\n'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1'\nassert solution('4 7\\n9 8\\n14 17\\n19 18\\n') == '1\\n2'\nassert solution('4 7\\n14 17\\n9 8\\n19 18\\n') == '2\\n1'\nassert solution('4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2'\nassert solution('4 7\\n9 8\\n19 18\\n') == '2\\n1'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2\n4 7\n9 8\n14 17\n19 18\"\"\") == \"2\\n1\"\nassert solution(\"\"\"2\n4 8\n9 7\n14 18\n19 17\"\"\") == \"1\\n2\"\nassert solution(\"\"\"4\n2 3\n1 1\n3 3\n5 4\n7 7\"\"\") == \"2\\n1\\n4\"\nassert solution(\"\"\"4\n2 3\n1 1\n3 3\n5 4\n7 7\"\"\") == \"1\\n2\\n4\"\nassert solution(\"\"\"4\n2 3\n1 1\n3 3\n5 4\n7 7\"\"\") == \"2\\n1\\n4\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1'\nassert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1'\n\"\"\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 7\\n9 8\\n14 17\\n19 18\\n') == '1\\n2'\nassert solution('4 7\\n9 8\\n14 17\\n19 18\\n1\\n2') == '1\\n2'\nassert solution('4 8\\n9 7\\n14 18\\n19 17\\n1\\n2') == '1\\n2'\nassert solution('4 8\\n9 7\\n14 18\\n19 17\\n2\\n1') =='syntax error'\n'''\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample1) == sample1out\nassert solution(sample2) == sample2out\nassert solution(sample3) == sample3out\nprint(\"Tests passed\")\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom collections import defaultdict\nfrom functools import reduce\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n''') == '1'\nassert solution('''160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n''') == '8640'"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n''') == '1'\nassert solution('''\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n''') == '8640'\nassert solution('''\n_ 41 46 21 13 19 4 10 8 1\n_ 30 22 11 13 4 19 8 11 1\n''') == '2'\nassert solution('''\n_ 46 41 21 13 19 4 10 8 1\n_ 30 22 11 13 4 19 8 11 1\n''') == '2'\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n''') == '1'\nassert solution('''160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n''') == '8640'\nassert solution('''_ _ _ _ _ _ _ 85 63 153\n_ _ _ _ 120 _ _ 144 _ _\n''') == '8640'\nassert solution('''85 70 _ _ 70 19 _ 18\n_ _ _ _ 120 _ _ 144 _ _\n''') == '1'\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _') == '8640'\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _''') == '1'\nassert solution('''85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153''') == '1'\nassert solution('''160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _''') == '8640'\nassert solution('''_ _ _ _ _ _ _ 85 63 153''') == '8640'\nassert solution('''_ _ _ _ _ _ _ _ _ _ _ _''') =='many'\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n_\") == \"1\\n\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\\n\"\nassert solution(\"_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n_\") == \"1\\n\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\\n\"\nassert solution(\"160 _ _ 136 _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"2\\n\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ _ _ _ 160 160 110 35 56 30\") == \"1\"\nassert solution(\"_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ _ _ _ 160 160 110 35 56 30\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\"\nassert solution(\"_ _ _ _ 120 _ _ 144 _ _\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n''') == '8640'\nassert solution('''160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n''') == '8640'\n\nassert solution
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3\n1 2\n1 3\n''') == '2', \"First test\"\nassert solution(\n'''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8', \"Second test\"\nassert solution(\n'''\n10\n2 1\n1 5\n3 1\n4 3\n5 4\n6 7\n7 8\n5 9\n5 10\n''') == '24', \"Third test\"\nassert solution(\n'''\n1\n1 1\n''') == '1', \"Fourth test\"\nassert solution(\n'''\n2\n1 1\n1 1\n''') == '1', \"Fifth test\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2'\nassert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''\n10\n2 1\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"8\"\nassert solution(\"10\") == \"24\"\nassert solution(\"100\") == \"24\"\nassert solution(\"1000\") == \"24\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n2') == '2'\nassert solution('1\\n1\\n1\\n1\\n1') == '2'\nassert solution('2\\n1\\n1\\n2') == '4'\nassert solution('2\\n2\\n1\\n1') == '8'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n1 3\n2 1''') == '2'\nassert solution('''5\n2 1\n1 5\n3 1\n4 3\n5 2''') == '8'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n7 1''') == '24'\nprint(\"The test passed\")\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"3\n1 2\n1 3\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"5\n2 1\n1 5\n3 1\n4 3\n\"\"\") == \"8\"\n\nassert solution(\n\"\"\"10\n2 1\n1 5\n3 1\n4 3\n5 6\n2 7\n7 8\n5 9\n5 10\n\"\"\") == \"24\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 3\\n') == '2'\nassert solution('2 1\\n1 5\\n') == '8'\nassert solution('2 2\\n1 5\\n') == '8'\nassert solution('3 1\\n1 2\\n2 3\\n') == '4'\nassert solution('1 1\\n2 2\\n') == '0'\n"
    },
    {
        "number": 3048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 3') == '2'\nassert solution('1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5') == '2'\nassert solution('2\\n1 2\\n3 1\\n2 3') == '2'\nassert solution('2\\n1 2\\n1 3\\n3 1\\n3 2\\n2 1') == '8'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''hello\nworld\n''') == 'hello'\nassert solution('''abc\n''') == ''\nassert solution('''asdf\n''') == ''\nassert solution('''a\nb\nc\nd\ne\nf\ng\nh\n''') == 'abcdefgh'\nassert solution('''i\nii\niii\n''') == ''\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == 'wood'\nassert solution('oranges') == '0'\nprint('Testcases passed')\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == 'wood'\nassert solution('oranges') == '0'\nassert solution('apples') == '0'\nprint('The tests passed!')\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == 'wood'\nassert solution('oranges') == '0'\nassert solution('apples') == '3'\nassert solution('zjmqdkvlvhzwkgrqnqwfzljtkpzkafnkmzgkwdvbxqolbnekohvyhjszqdvqcxhfrpzwglpgpljtqgqfwqrjqwbdzplzpfqyyrgqeuzwylpwqitgxzkvmmwcxuwunzrbqbxbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzvzvqcahmfqheqnfqbqzqzkqhpwjbmzqxugmejzmxrulvulqvzfymqpjqmhtzv"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"wood\"\nassert solution(\"oranges\") == \"0\"\nprint(\"Tests passed\")\n"
    },
    {
        "number": 3049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''secretmessage\nboot\n''') == 'essa'\nassert solution('''treetreetreetree\nwood\n''') == 'treet'\nassert solution('''oranges\napples\n''') == '0'\nassert solution('''oranges\noranges\n''') == '0'\nassert solution('''oranges\napples\napples\noranges\n''') == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"hello\") == \"\"\nassert solution(\"<^><^><v^><v^><^><v^><^><^><v^><^><^><v^><v^><^><^><v^><^><^><v^><^><v^><^><^><^><v^><v^><^><^><^><^><^><v^><^><^><v^><v^><^><v^><^><^><^><^><v^><v^><^><^><^><^><^><v^><v
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0' * 8) == '0' * 8\nassert solution('1' * 8) == '1' * 8\nassert solution('1' * 7) == '2'\nassert solution('1' * 6) == '3'\nassert solution('1' * 5) == '4'\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4'\n    '<v><v>'\n    '<<<'\n    '<v><v>'\n    '<<<') == '2'\n\nassert solution('4'\n    '>v^>'\n    '^<^'\n    '^v^'\n    '^<^') == '1'\n\nassert solution('4'\n    '<><><><>'\n    '<><><><><>'\n    '<><><><><>') == '2'\n\nassert solution('6'\n    '>v<v^v<v>'\n    '^<v^v^<v>'\n    '<v^v^<v>'\n    '<v^v^<v>'\n    '^<v^v^<v>'\n    '<v^v^<v>'\n    '^<v^v^<v>'\n    '^<v^v^<v>'\n    '^<v^v^<v>') == '6'\n\nassert solution('5'\n    '>v<v^v<v>'\n    '^<v^v^<v>'\n    '<v^v^<v>'\n    '<v^v^<v>'\n    '^<v^v^<v>'\n    '<v^v^<v>'\n    '^<v^v^<v>'\n    '^<v^v^<v>'\n    '^<v^v^<v>'\n    '^<v^v^<v>') == '2'"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n<><<><>v<>^<>') == '2'\nassert solution('2\\n<><>v') == '1'\nassert solution('5\\n>v<v>v<^v<>^v') == '3'\nassert solution('4\\n<v<>v') == '4'\nassert solution('5\\n<><v^>v<>^v<>^v') == '4'\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\">^<^\") == \"2\"\nassert solution(\"v<^>\") == \"4\"\nassert solution(\"<<<\") == \"1\"\nassert solution(\"^<^<^<^<<<\") == \"1\"\nassert solution(\"<>^>\") == \"4\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\n'''\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7\\n>^v<^v<^v\") == \"1\"\nassert solution(\"4\\n>v<>v<^v\") == \"4\"\nassert solution(\"4\\n<v>v<>v<>\") == \"1\"\nassert solution(\"4\\nv<>v<>v<\") == \"1\"\nassert solution(\"4\\n^v^<>v^\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\">^<^\") == \"2\"\nassert solution(\"<^v<^>\") == \"4\"\nassert solution(\"<<<\") == \"1\"\nassert solution(\"^<^<>^<<<\") == \"1\"\nassert solution(\"<^v<^>\") == \"4\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\\\n6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\" +\n    \"<v<^>\\n\" +\n    \"####\\n\" +\n    \"#.R#\\n\" +\n    \"#..#\\n\" +\n    \"####\\n\") == \"1\"\nassert solution(\"3\\n\" +\n    \"<v<^>\\n\" +\n    \"#####\\n\" +\n    \"#.#.#\\n\" +\n    \"#####\\n\") == \"3\"\nassert solution(\"7\\n\" +\n    \"<v<^>\\n\" +\n    \"#######\\n\" +\n    \"#.R.#.#\\n\" +\n    \"#.#.#.#\\n\" +\n    \"#.#.#.#\\n\" +\n    \"#######\\n\") == \"1\"\nassert solution(\"3\\n\" +\n    \">^<^\\n\" +\n    \"#####\\n\" +\n    \"#.#.#\\n\" +\n    \"#####\\n\") == \"2\"\nassert solution(\"5\\n\" +\n    \">^<^\\n\" +\n    \"######\\n\" +\n    \"#.#.#\\n\" +\n    \"######\\n\") == \"2\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2''') == '3'\nassert solution(\n'''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 3''') == '6'\nassert solution(\n'''6\n2 0 0 9 5 2 1 -3 3\n3 1 0 2 -6 1 1 -3\n2 0 0 1 2 -1 1 0''') == '9'\nassert solution(\n'''7\n1 0 0 2 1 5 3 2 0\n10 1 0 1 -1 -2 -4 1\n8 1 0 1 -1 2 -5 3\n1 0 0 1 2 -1 -3 2''') == '1'\nassert solution(\n'''8\n2 0 0 9 5 2 1 -3 3\n3 1 0 2 -6 1 1 -3\n2 0 0 1 2 -1 1 0\n1 0 0 1 1 -1 -1 1\n1 0 0 1 1 -1 -1 1\n1 0 0 1 1 -1 -1 1\n1 0 0 1 1 -1 -1 1\nSample Output 3''') == '1'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 0 2 9 2 3 0\") == \"3\"\nassert solution(\"2 3 0 2 9 2 3 0\") == \"3\"\nassert solution(\"2 3 0 2 9 2 3 0\") == \"3\"\nassert solution(\"7 0 0 20 10 3 0 10\") == \"6\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\"\nassert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n1 7 1 5 7 3 -2 -1\\n\") == \"6\"\nassert solution(\"2\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n3 15 5 25 19 4 4 -2 -1\\n\") == \"11\"\nassert solution(\"5\\n7 0 0 20 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n3 15 5 25 19 4 4 -2 -1\\n3 20 7 22 4 4 -3 -1\\n\") == \"11\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    stdin='''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2''') == '3'\nassert solution(\n    stdin='''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\nassert solution(\n    stdin='''4\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '11'\nassert solution(\n    stdin='''8\n10 0 0 9 10 1 9 -1 -1 -1 -1 -1 -1 -1\n10 1 0 2 5 2 2 7\n10 2 1 0 4 4 4 6\n10 3 1 0 7 7 7 7\n10 4 1 0 10 10 10 10\n10 5 1 0 11 11 11 11\n10 6 1 0 12 12 12 12\n10 7 1 0 13 13 13 13\n10 8 1 0 14 14 14 14\n10 9 1 0 15 15 15 15\n''') == '16'\nassert solution(\n    stdin='''4\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '16'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2''') == '3'\nassert solution('''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\nSample Output 3''') == '6'"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '3'\nassert solution('2\\n4 0 0 10 10 1 15 0') == '6'\nassert solution('3\\n5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n3 10 7 10 4 1 8 -1') == '11'\nassert solution('7\\n0 0 0 30 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n3 10 7 10 4 1 8 -1') == '11'\nassert solution('8\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n3 10 7 10 4 1 8 -1\\n3 10 7 10 4 1 8 -1') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1') == '6'\nassert solution('7\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1') == '11'"
    },
    {
        "number": 3051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1') == '6'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1') == '11'\nassert solution('2\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1') == '6'\nassert solution('2\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1') == '6'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460\\n'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179\\n'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '163.5274740179\\n'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179\\n'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '163.5274740179\\n'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n3.7320508076''') == '3.7320508076'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n3.7320508076''') == '3.7320508076'\nassert solution('''1.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n4.24797908982\n''') == '4.24797908982'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n''') == '3.7320508076'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\"\"\"\n    ) == \"168.7916512460\"\n\nassert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\"\"\"\n    ) == \"163.5274740179\"\n\nassert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n100.0 0.0 50.0 0.0\"\"\"\n    ) == \"14.72738606969\"\n\nassert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\n100.0 0.0 50.0 0.0\n60.0 0.0 30.0 70.0\"\"\"\n    ) == \"60.0\"\n\nassert solution(\n\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\n100.0 0.0 50.0 0.0\n60.0 0.0 30.0 70.0\n0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\n100.0 0.0 50.0 0.0\n60.0 0.0 30.0 70.0\"\"\"\n    ) == \"1.71319406023\""
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460\\n'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179\\n'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n''') == '3.7320508076'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n\"\"\") == \"168.7916512460\"\nassert solution(\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\n\"\"\") == \"163.5274740179\"\nassert solution(\"\"\"0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n\"\"\") == \"3.7320508076\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\"\nassert solution(\"4 5 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 1 1\") == \"IMPOSSIBLE\"\n\"\"\"\nfrom collections import Counter\n\nN, K, P = map(int, input().split())"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\"\nassert solution(\"9 7 4\") == \"canterlot\"\n\"\"\""
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\"\nprint(\"Successfully got here\")\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    stdin=\"6 5 3\") == \"rarity\"\nassert solution(\n    stdin=\"9 8 1\") == \"canterlot\"\nassert solution(\n    stdin=\"5 3 5\") == \"madam\"\n\n\"\"\""
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"canterlot\"\nassert solution(stdin) == \"rarity\"\nassert solution(stdin) == \"madam\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"resources/test_0.in\").read()) == \"rarity\"\nassert solution(open(\"resources/test_1.in\").read()) == \"canterlot\"\nassert solution(open(\"resources/test_2.in\").read()) == \"madam\"\nassert solution(open(\"resources/test_3.in\").read()) == \"impossible\"\nassert solution(open(\"resources/test_4.in\").read()) == \"madam\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    input(\"Enter N, K, P: \")) == input(\"Enter a correct substring: \")\n\"\"\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('I love the school') == 'I love the school'\nassert solution('I love the school!') == 'I love the school!'\nassert solution('This is a haiku. I cannot come up with it myself!') == 'This is a haiku.\\nI cannot come up with it myself!'\nassert solution('I am the senate of the United States!') == 'I am the senate of the United States!\\nI am the senate of the United States!'\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('    ') == ''\nassert solution('Blue    RidgE mt oo    road.') == 'Blue\\nRidgE\\nmt\\noo\\nroad.'\nassert solution('Flee  is  not  the   best   idea!') == 'Flee\\nis\\nnot\\nthe\\nbest\\nidea!'\nassert solution('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum elementum, sapien in tincidunt sollicitudin, augue tellus sapien quis lectus, non proin ante augue laoreet ligula. Nam id dolor. Donec tincidunt, nibh non mattis pulvinar, eros arcu mollis sem, ut tincidunt justo nisi eget massa. Proin interdum, est eu vehicula finibus, nisi libero ligula, at elementum urna nibh et nisl. Aenean feugiat, dui id suscipit hendrerit, nisi lacus sapien, augue urna ante erat et luctus. Sed blandit sapien, interdum nibh vitae, maximus quis orci. Aenean nec elementum urna. Pellentesque sed dolor id dignissim. Pellentesque eleifend, nulla eget interdum placerat, nisl orci tellus, id in libero nibh eu ipsum. Donec aliquam eu tortor id sem facilisis tincidunt. Vestibulum ipsum. Aenean lobortis, libero non tincidunt vestibulum, eros mi ipsum dui, nec commodo ipsum ipsum urna ut orci. Nullam a tincidunt sapien. Quisque semper, urna at faucibus tincidunt, libero leo purus, vel venenatis urna massa a pede. Proin nisi. Aliquam a erat. Fusce vel sem. Aenean tristique, arcu vitae bibendum ornare, leo velit nisl mattis leo, vel tristique diam neque venenatis. Nulla ullamcorper, magna erat eu ipsum fringilla, eros ultricies metus ligula, a faucibus tortor eros ante id magna. Nam ac erat sit amet eros ullamcorper. Sed auctor, nulla sit amet interdum fringilla, eros odio sollicitudin lectus, non pulvinar turpis purus ac dolor. Pellentesque suscipit, dui in aliquam accumsan, turpis leo enim, quis dictum est dui id erat. Suspendisse at sapien non ante facilisis quis turpis. Nunc tristique, urna et nibh pulvinar, lectus est massa. Maecenas faucibus, neque sit amet cursus commodo, ipsum lectus sapien, feugiat libero quam at rhoncus. Maecenas imperdiet, dolor sit amet cursus in, nisi sapien sapien, sed ullamcorper libero et nunc. Aenean convallis, nisi non tincidunt condimentum, sapien libero enim, eu blandit sem leo, quis mattis eros nulla eu orci. Suspendisse malesuada velit eget libero. Sed faucibus, metus sed mattis sagittis, eros ipsum leo, et faucibus erat diam neque, quis varius nisl nibh a pede. Pellentesque sit amet orci. Nulla semper, mollis eget bibendum sem, eros vulputate diam, sed leo nibh eros ac nisi. Ut tristique felis, finibus in ultricies convallis, sit amet pharetra mi. Mauris consequat, nisi sed faucibus sagittis, lorem cursus lectus, at convallis erat augue et dui. Vivamus id sapien nec erat auctor commodo. Donec tempor, tellus eget commodo rhoncus, eros elit ligula, sit amet malesuada sapien dui nec metus. Quisque non lectus. In feugiat, ligula nec feugiat eu, erat semper libero, ac facilisis semper urna, quis congue semper est. Proin justo"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"Blue\\n\"\n\"Ridge\\n\"\n\"road.\") == \"Blue\\n\"\nassert solution(\n\"Leaves\\n\"\n\"Glowing\\n\"\n\"in\\n\"\n\"Autumn\\n\"\n\"Sun.\") == \"Leaves\\n\"\nassert solution(\n\"I\\n\"\n\"Might\\n\"\n\"\\n\"\n\"now!\") == \"I\\n\"\nassert solution(\n\"Upper\\n\"\n\"case\\n\"\n\"in\\n\"\n\"\\n\"\n\"bookkeeper\\n\"\n\"Y\\n\"\n\"a\\n\"\n\"\\n\"\n\"way.\") == \"Upper\\n\"\nassert solution(\n\"Strong\\n\"\n\"\\n\"\n\"bookkeeper\\n\"\n\"Y\\n\"\n\"a\\n\"\n\"\\n\"\n\"way.\") == \"Strong\\n\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    'Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.'\n) == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution(\n    'Who would know if we had too few syllables?'\n) == 'Who would know if we had too few syllables?'\nassert solution(\n    'International contest- motivation high Programmers have fun!. They have fun!'\n) == 'International\\ncontest- motivation high\\nProgrammers have fun!.\\nThey have fun!'\n\n'''\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n\"Blue Ridge mountain road.\"\n\"Leaves, glowing in autumn sun, fall in Virginia.\"\n''') == '''Blue Ridge mountain road.\nLeaves, glowing in autumn sun,\nfall in Virginia.'''\nassert solution('''\n\"I like cats, and I don't like them, but cats are pretty good.\"\n''') == '''I like cats, and I don't like them, but cats are pretty good.'''\nassert solution('''\n\"red, green, blue, yellow, blue, green, yellow, red, green, blue, yellow, blue, green, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red, green, blue, yellow, red"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('who would know if we had too few syllables') == 'who would know if we had too few syllables'\nassert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('\"I am the best! The best is the\"\\n'\n    '    \"Who would know if we had too few syllables?\\n'\n    '    They\\'d know if we had too few syllables.\"') == '\"I am the best! The best is the\"\\n'\n    '    \"Who would know if we had too few syllables?\\n'\n    '    They\\'d know if we had too few syllables.\"'\n\n-----Solutions\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('') == ''\nassert solution('First line.\\n Second line.\\n Third line.') == 'First line.\\n Second line.\\n Third line.'\nassert solution('Line with two words: one.\\nTwo words.\\nThird word.') == 'Line with two words: one.\\nTwo words.\\nThird word.'\nassert solution('First line.\\n Second line.\\n Third line.\\nFourth line.\\nFifth line.\\nSixth line.\\nSeventh line.\\nEight line.\\nNinth line.\\nTenth line.\\n') == 'First line.\\n Second line.\\n Third line.\\n\\nFourth line.\\nFifth line.\\nSixth line.\\n\\nSeventh line.\\nEight line.\\nNinth line.\\nTenth line.'\n"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?\\n'\nassert solution('International contest- motivation high Programmers have fun!.') == 'International\\ncontest- motivation high\\nProgrammers have fun!.\\n'"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\"\") == \"\"\"Blue Ridge mountain road.\nLeaves, glowing in autumn sun,\nfall in Virginia.\"\"\".splitlines()\nassert solution(\"\"\"Who would know if we had too few syllables?\"\"\") == \"\"\"Who would know if we had too few syllables?\".\n\"\"\".splitlines()\nassert solution(\"\"\"A haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables.\"\"\") == \"\"\"A haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables.\"\"\".splitlines()\nassert solution(\"\"\"A haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables. \"\"\") == \"\"\"A haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables. \"\"\".splitlines()\n\n-----Alternate Solutions (from Codewars)-----"
    },
    {
        "number": 3054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"Blue Ridge mountain road. \"\n    \"Leaves, glowing in autumn sun, \"\n    \"fall in Virginia.\"\n) == \"Blue Ridge mountain road.\\n\"\n\nassert solution(\n    \"Who would know if we had too few syllables?\"\n) == \"Who would know if we had too few syllables?\"\n\nassert solution(\n    \"International contest- motivation high Programmers have fun!. \"\n    \"Where is Mary? Who did you talk to? What are you talking about?\"\n) == \"International\\ncontest- motivation high\\nProgrammers have fun!.\\n\"\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\nThoreHusfeldt\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"1\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"1\\nThoreHusfeldt\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"3\\nThoreHusfeldt\\nThoreHusfeldt\") == \"Thore is awesome\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\nThoreTiemann\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldt''') == 'Thore'\n\nassert solution('''1\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''1\nThoreTiemann''') == 'Thore'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('2\\nJohanSannemo\\nThoreHusfeldt\\n') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\nThoreTiemann\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore is awesome'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore sucks'\nassert solution('''3\nThoreHusfeldt\nJohanSannemo\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''3\nThoreHusfeldt\nJohanSannemo\nThoreHusfeldt''') == 'Thore is awesome'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt\") == \"Thore sucks\"\n\"\"\""
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\nJohanSannemot\") == \"ThoreHusfeldt\"\nprint(solution(input()))\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\nThoreHusfeldt\\nThoreHusfeldt') == 'ThoreH'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo') == 'Thore is awesome'\nassert solution('2\\nJohanSannemo\\nThoreHusfeldt') == 'Thore sucks'\nassert solution('2\\nJohanSannemo\\nJohanSannemo') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldt\\nThoreHusfeldt') == 'ThoreH'\n"
    },
    {
        "number": 3055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 'Thore'\nassert solution('2\\nThoreTiemann\\nThoreHusfeldt') == 'ThoreH'\nassert solution('2\\nThoreHusfeldt\\nThoreHusfeldt') == 'ThoreHus'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo') == 'ThoreHus'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\nThoreHusfeldt') == 'ThoreHus'\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('***') is None\nassert solution('*') == 0\nassert solution('LLLLLLL') == 0\nassert solution('PPPPPPP') == 0\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\nassert solution('P**P*PP') == 81\nassert solution('P**PP') == 3\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('P**') == '6'\nassert solution('L**R') == '25'\nassert solution('**') == '33'\nassert solution('LL**RL') == '25'\nassert solution('**P') == '6'\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    'PP'\n) == 6\nassert solution(\n    'LL'\n) == 25\nassert solution(\n    '**'\n) == 33\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('L') == '1'\nassert solution('L**') == '1'\nassert solution('L*R') == '12'\nassert solution('L**R') == '34'\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"L*R\") == \"25\"\nassert solution(\"L*P\") == \"6\"\nassert solution(\"**\") == \"33\"\nassert solution(\"L*R*P\") == \"36\"\nassert solution(\"L**\") == \"36\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\nassert solution('L**') == 33\nassert solution('LL*') == 33\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\n\nprint(\"Finished testing.\")\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\n\"\"\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('P*P') == 6\nassert solution('L*R') == 25\nassert solution('**') == 33\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''herp is derp\nderp is herp\nherp is herp\nderp is derp''') == 'yes'\nassert solution('''oskar not lukas\noskar is poptart\nlukas is smart''') == 'wait what?'\nassert solution('''moo not foo\noskar is poptart\nlukas is smart''') == 'yes'\nassert solution('''oskar is poptart\nlukas is smart''') == 'wait what?'\n'''"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == \"yes\"\nassert solution('1') == \"yes\"\nassert solution('2') == \"yes\"\nassert solution('3') == \"wait what?\"\nassert solution('4') == \"yes\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"moo not foo\") == \"yes\"\nassert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"wait what?\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''herp is derp\nderp is herp\nherp is herp\nderp is derp\n'''\n) == 'yes'\nassert solution(\n'''oskar not lukas\noskar is poptart\nlukas is smart\n'''\n) == 'wait what?'\nassert solution(\n'''moo not foo\n'''\n) == 'yes'\nassert solution(\n'''is not is not\n'''\n) == 'wait what?'\nassert solution(\n'''is not is not\n'''\n) == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('oskar not lukas') == \"yes\"\nassert solution('oskar is poptart') == \"wait what?\"\nassert solution('lukas is smart') == \"yes\"\nassert solution('moo not foo') == \"wait what?\"\nassert solution('herp is derp') == \"yes\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('moo not foo') == 'yes'\nassert solution('moo is foo') == 'wait what?'\nassert solution('oskar is not lukas') == 'yes'\nassert solution('oskar is derp') == 'wait what?'\nassert solution('lukas is smart') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('herp is derp\\n' + 'derp is herp\\n' + 'herp is herp\\n' + 'derp is derp') == 'yes'\nassert solution('oskar not lukas\\n' + 'oskar is poptart\\n' + 'lukas is smart') == 'wait what?'\nassert solution('moo not foo') == 'yes'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('moo not foo') == 'yes'\nassert solution('oskar not lukas') == 'wait what?'\nassert solution('herp is derp') == 'yes'\nassert solution('derp is herp') == 'wait what?'\nassert solution('herp is herp') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'no'\nassert solution('a b') == 'no'\nassert solution('a b c') == 'no'\nassert solution('a b c d') == 'no'\nassert solution('a b c d e') == 'yes'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'impossible'\nassert solution('A') == '1'\nassert solution('AA') == '1 2'\nassert solution('AAC') == '1 2 3'\nassert solution('AAAC') == '1 2 3 4'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('''3\nACMA\nACM\nACA\nAMA\nSample Output 3:\nimpossible\n''') == 'impossible'\nassert solution('''1\nA\nSample Output 3:\nimpossible\n''') == 'impossible'\nassert solution('''4\nA\nCC\nDD\nEE\nSample Output 3:\n4 3\nEE\nCC\nDD\n''') == '4 3\\nEE\\nCC\\nDD\\n'\nassert solution('''4\nA\nCC\nDD\nEE\nSample Output 3:\nimpossible\n''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\nAM\") == \"impossible\"\nassert solution(\"2\\nACMAA\") == \"1 4\"\nassert solution(\"3\\nACMA\") == \"impossible\"\nassert solution(\"4\\nACMAAACM\") == \"1 4\"\nassert solution(\"5\\nAACCMMAA\") == \"1 4\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('AACCMMAA') == '1 4'\nassert solution('ACA') == 'MM'\nassert solution('AM') == 'impossible'\nassert solution('AMAA') == 'impossible'\nassert solution('AA') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\nACMA\\nACM\\nACA\\nAMA\\nMA\") == \"impossible\"\nassert solution(\"2\\nACM\\nACA\\nAMA\\nMA\") == \"1 4\"\nassert solution(\"3\\nACM\\nACM\\nACA\\nAMA\\nMA\") == \"impossible\"\nassert solution(\"4\\nAM\\nACM\\nACM\\nACA\\nAMA\\nMA\") == \"1 4\"\nassert solution(\"5\\nACM\\nACA\\nACM\\nACA\\nACA\\nAMA\") == \"1 4\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == 'impossible'\nassert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA'\nassert solution('3\\nACMA\\nACM\\nACA\\nAMA') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA'\nassert solution('''3\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''1\nA\nMA\n''') == 'impossible'\nassert solution('''7\nA\nAA\nAAA\nAAAA\nAAAAA\nAAAAAA\nAAAAAAA\nAAAAAAA\n''') == '1 4\\nAA\\nAAAA\\nAAAAA\\nAAAAAA\\nAAAAAAA'\nassert solution('''3\nAA\nAAA\nAAAA\n''') == 'impossible'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 100 1\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2') == '124'\nassert solution('10 100 1\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n100 10 1') == '18.9029850746'\nassert solution('2 4 1\\n1 0.5 5\\nSample Output 2') == '3'\nassert solution('10 100 1\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3') == '18.9029850746'\nassert solution('10 100 1\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n10 10 1') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\"\"\") == \"124\"\nassert solution(\n\"\"\"2 4 1\n1 0.5 5\n\"\"\") == \"3\"\nassert solution(\n\"\"\"10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\"\"\") == \"18.9029850746\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\n\"\"\""
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"100 11 5\") == \"124\"\nassert solution(\"10 20 3\") == \"3\"\nassert solution(\"10 100 1\") == \"130.000\"\nassert solution(\"10 100 2\") == \"130.000000\"\nassert solution(\"10 100 3\") == \"130.000000\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\\n\"\nassert solution(\"2\\n1\\n3\") == \"3\\n\"\nassert solution(\"2\\n1\\n3\\n1\\n1\") == \"3\\n\"\nassert solution(\"2\\n2\\n3\\n1\\n1\") == \"3\\n\"\nassert solution(\"2\\n2\\n3\\n1\\n1\\n1\") == \"3\\n\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''100 111 5''') == '124'\nassert solution('''2 4 1''') == '3'\nassert solution('''10 20 3''') == '18.903'\nassert solution('''8 4 3''') == '8.9029'\nassert solution('''5 4 2''') == '5.9029'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''100 111 5''') == '124'\nassert solution('''2 4 1''') == '3'\nassert solution('''10 20 3''') == '18.9029850746'\nassert solution('''1 0.5 5''') == '3'\nassert solution('''10 2 10''') == '14'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 0.5 10\") == \"1\"\nassert solution(\"100 111 5\") == \"4\"\nassert solution(\"2 4 1\") == \"3\"\nassert solution(\"10 20 3\") == \"18.9029850746\"\nassert solution(\"20 0.5 10\") == \"19\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\nassert solution('''2 4 1\n1 0.5 5\nSample Output 2:\n3\n\nSample Input 3:\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\nSample Output 3:\n18.9029850746''') == '18.9029850746'\nassert solution('''100 100 1\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\nSample Output 2:\n120''') == '120'\nassert solution('''10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\nSample Output 3:\n18.9029850746''') == '18.9029850746'\nassert solution('''100 100 1\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\nSample Output 2:\n120''') == '120'\n"
    },
    {
        "number": 3059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100 111 5') == '124'\nassert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\nassert solution('10 15 10') == '29.89473684210526'\nassert solution('10 10 10') == '59.5'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('3\\n2') == '1'\nassert solution('3\\n3') == '1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('\\n') == '\\n'\nassert solution('\\n1\\n') == '\\n'\nassert solution('\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3''') == '2 1 2'\nassert solution('''2 1''') == '1'\nassert solution('''5 22''') == '4 3 4 2'\nassert solution('''1 1''') == '1'\nassert solution('''4 1''') == '2 1 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4 3 4 2\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n\") == \"1\"\nassert solution(\"3 4\\n\") == \"2 1 2\"\nassert solution(\"5 22\\n\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.strip()\n'''\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''4 3''') == '2 1 2'\nassert solution('''5 22''') == '4 3 4 2'\nassert solution('''22 1''') == '1'\nassert solution('''4 22''') == '2 1 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 4') == '4 3'\nassert solution('5 22') == '4 3 4 2'\nassert solution('2 1') == '1'\nassert solution('3 4') == '4 3'\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n''') == '''2 1 2\n'''\nassert solution('''2 1\n''') == '''1\n'''\nassert solution('''5 22\n''') == '''4 3 4 2\n'''\n"
    },
    {
        "number": 3060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 3\") == \"2 1 2\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"5 22\\n2 1\") == \"4 3 4 2\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"0\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\"\nassert solution(\"1 10\\n1 9\\n1 2\\n3 4\\n5 6\\n7 8\\n8 9\\n9 10\\n\") == \"2\"\nassert solution(\"1 10\\n1 9\\n1 2\\n3 4\\n5 6\\n7 8\\n8 9\\n9 10\\n\") == \"0\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '2'\nassert solution('''4 7\n1 2\n1 3\n3 4\n2 5\n2 6\n3 7\n''') == '3'\nassert solution('''4 7\n1 2\n1 3\n1 4\n2 3\n2 5\n2 6\n3 7\n''') == '2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 4\n1 2\n1 3\n3 4\n2 4''') == '2'\nassert solution('''3 4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '0'\nassert solution('''3 7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '0'\nassert solution('''2 2\n1 2\n2 1''') == '1'\nassert solution('''6 5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n7 8\n''') == '2'\nassert solution('''10 10\n1 2\n1 3\n2 4\n3 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 10\n3 10\n4 10\n5 10\n6 10\n7 10\n8 10\n9 10\n10 1\n''') == '10'\nassert solution('''20 3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n2 19\n3 19\n4 19\n5 19\n6 19\n7 19\n8 19\n9 19\n10 19\n11 19\n12 19\n13 19\n14 19\n15 19\n16 19\n17 19\n18 19\n19 1\n''') == '1'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1 3\\n3 4\") == \"2\"\nassert solution(\"2 4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n3 4\\n5 6\\n7 2\\n7 3\\n7 4\\n7 5\\n7 6\") == \"0\"\nassert solution(\"7 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 2\\n7 3\\n7 4\\n7 5\\n7 6\") == \"0\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"2\"\nassert solution(\"7 6\") == \"2\"\nassert solution(\"7 5\") == \"0\"\n\nprint(\"\"\"\n    pass\n\"\"\")\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n1 2\\n1 3\\n3 4\\n2 4\\n') == '2'\nassert solution('2\\n7\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4\\n3\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == '0'\nassert solution(\"2\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\nassert solution('''5 5\n1 2\n2 3\n3 4\n4 5\n5 1\nSample Output 3:\n0\n''') == '2'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"7 6\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"4 8\") == \"2\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n20 0\n1.00 0.10\n''') == '20.00000000'\n\nassert solution(\n'''\n-10 10\n10.00 1.00\n''') == '3.14159265'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_files/Y11R5P1/A.in\").read()) == \"5.00\""
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input_2.txt\").read()) == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_1) == '20.00000000'\nassert solution(input_2) == '3.14159265'\nassert solution(input_3) == '28.26445910'\n\"\"\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20 0\n1.00 0.10\n''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00\n''') == '3.14159265'\nassert solution('''0 20\n1.00 0.10\n''') == '28.26445910'\nassert solution('''20 0\n1.00 0.10\n''') == '28.26445910'\n\n\"\"\"\n\nimport sys\nfrom math import pi, tan, acos"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20 0\\n1.00 0.10\\n') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00\\n') == '3.14159265'\nassert solution('0 20\\n1.00 0.10\\n') == '28.26445910'\nassert solution('0 -10\\n10.00 1.00\\n') == '3.14159265'\nassert solution('0 0\\n1.00 0.10\\n') == '28.26445910'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('-10 10') == '3.14159265'\nassert solution('20 10') == '28.26445910'\nassert solution('-10 -10') == '3.14159265'\nassert solution('-100 -50') == '0.0'\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20 0\n1.00 0.10''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00''') == '3.14159265'\nassert solution('''0 20\n1.00 0.10''') == '28.26445910'\nassert solution('''2 -3\n2.5 1.2''') == '2.18181818'\n'''\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"data/test\").read()) == \"28.26445910\"\nassert solution(open(\"data/input\").read()) == \"38.46876101\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n20 0\n1.00 0.10\n''') == '20.00000000'\n\nassert solution(\n'''\n-10 10\n10.00 1.00\n''') == '3.14159265'\n\nassert solution(\n'''\n0 20\n1.00 0.10\n''') == '28.26445910'\n\nassert solution(\n'''\n1 1\n1.00 1.00\n''') == '0.0'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3\\n4\\n4\\n1\\n1\") == \"4\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50\\n2 80\\n3 100\\n2 120\\n3 50"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n1\\n1\") == \"2\"\nassert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"1\\n2\\n1\\n1\") == \"2\"\nassert solution(\"2\\n1\\n1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n1\\n1\") == \"2\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80\n''') == '150'\nassert solution('''2\n2 10\n1 10\n1 2\n''') == '15'\nassert solution('''2\n1 1\n1 1\n1 1\n1 1\n''') == '0'\nassert solution('''2\n1 1\n2 1\n''') == '0'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''\n3\n2 120\n3 50\n2 80\n''') == '150'\nassert solution('''\n4\n4 2\n2 1\n3 1\n1 1\n''') == '6'\nassert solution('''\n2\n4 2\n2 1\n3 1\n1 1\n''') == '6'\nassert solution('''\n6\n1 1\n2 1\n2 1\n2 1\n2 1\n2 1\n''') == '6'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80''') == '150'\nassert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution('''4\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80''') == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 100\n1 100\n4 70\n3 70''') == '170'\nassert solution('''4\n2 100\n1 100\n4 70\n3 70\n2 150\n3 110''') == '150'\nassert solution('''5\n2 120\n3 50\n2 80\n3 70\n2 150\n3 110\n3 100''') == '180'\nassert solution('''10\n4 60\n3 30\n1 100\n2 100\n1 100\n1 100\n2 100\n3 100\n4 100\n3 100\n1 100\n''') == '400'\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4\\n2\\n3\\n1\\n2\\n2\") == \"170\"\nassert solution(\"2\\n2\\n1\\n3\\n2\\n2\\n2\") == \"150\"\nassert solution(\"2\\n1\\n1\\n2\\n2\\n2\") == \"50\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"20\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\") == \"150\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2\\n2 4\\n3 4\\n4 5\\n5 1') == '45'\nassert solution('3\\n2 120\\n3 50\\n2 80\\nSample Output 2') == '150'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n4 1') == '45'\n\"\"\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"4\\n1 100\\n2 100\\n3 100\\n4 100\\n\") == \"1\"\nassert solution(\"4\\n2 120\\n3 50\\n2 80\\n\") == \"150\"\nassert solution(\"4\\n1 100\\n4 70\\n3 70\\n\") == \"150\"\nassert solution(\"5\\n1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n\") == \"150\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''4\n2 120\n3 50\n2 80\n''') == '150'\nassert solution('''2\n4 80\n2 70\n''') == '100'\nassert solution('''3\n3 150\n2 80\n1 70\n''') == '150'\nassert solution('''4\n1 100\n2 120\n3 50\n4 70\n''') == '130'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") is None\nassert solution(\"4 4\") is None\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"2\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n3 4\n''') == \"2\"\nassert solution('''4 3\n1 2\n1 3\n2 4\n3 4\n''') == \"2\"\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == \"5\"\nassert solution('''2 3\n1 2\n1 3\n2 4\n3 4\n''') == \"2\"\nassert solution('''3 3\n1 2\n1 3\n2 4\n3 4\n''') == \"2\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '5'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '5'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\nassert solution('''8 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8\n''') == '7'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2\\n1 3\\n2 4\\n1 3\\n3 4\\n3 5\\n5 6\\n\") == \"2\"\nassert solution(\"5 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n1\\n2\\n1\\n3\\n2\\n4\\n3') == '2'\nassert solution('2\\n3\\n1\\n2\\n2\\n3') == '3'\nassert solution('6\\n6\\n1\\n2\\n1\\n3\\n2\\n4\\n3\\n5\\n6') == '5'\nassert solution('7\\n7\\n1\\n2\\n1\\n3\\n2\\n4\\n3\\n5\\n6\\n7\\n8') == '6'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '4'\nassert solution('''8 5\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 6\n2 8\n3 6\n3 7\n3 8\n4 7\n4 8\n5 8\n5 6\n''') == '6'\nassert solution('''10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 9\n2 8\n2 10\n3 9\n3 8\n3 10\n4 9\n4 8\n4 10\n5 8\n5 9\n5 10\n6 8\n6 9\n6 10\n7 9\n7 8\n7 10\n8 9\n8 10\n9 8\n9 10\n10 9\n10 8\n10 10\n''') == '10'\n"
    },
    {
        "number": 3064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint('Passed all test cases!')\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nprint(solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n'''))\n\nprint('-----')\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '0.5'\nassert solution('2\\n2') == '0.5'\nassert solution('3\\n3') == '1.0'\nassert solution('3\\n3\\n1 0 1 2 1 2 3\\n1 0\\n1 0\\n1 0') == '0.5'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''1\n2\n0\n2\n0\n1\n0\n1\n0\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n1\n1\n''') == '0.3333333'\nassert solution('''3\n2\n0\n1 1\n2 0\n1 1\n''') == '0.5'\nassert solution('''3\n3\n1 0 2\n2 1 1\n2 2 1\n2 2\n1 0\n1 2\n1 2\n1 2\n''') == '1.0'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''2\n1\n1\n2\n2\n3\n2\n2\n1\n1\n2\n2\n1\n''') == '0.0904345'\nassert solution('''3\n3\n1 0\n1 0\n2 2\n2 2\n3 3\n''') == '0.172222'\nassert solution('''3\n3\n1 0\n1 1\n2 2\n2 2\n3 3\n''') == '0.0234375'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3\n1\n0\n2 1 2\n1 0\n1 0\n'''\n    ) == '0.5'\n\nassert solution(\n'''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n'''\n    ) == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\n\nassert solution(\n'''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nassert solution(\n'''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0291666'\n\nassert solution(\n'''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.00983377'\n\nassert solution(\n'''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.000631476'"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''\n3\n1\n0\n1 0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''\n4\n5\n1 0 2 3 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n''') == '0.0566674'\nassert solution('''\n7\n5\n1 0 2 3 0 1\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n2 3 1 0\n''') == '0.0566674'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''\n8\n2\n1 0\n1 1\n2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '0.0'\nassert solution('''\n3\n1\n0\n1 1\n1 1\n1 1\n''') == '0.0'\nassert solution('''\n5\n5\n1 0 2 3 4\n1 0\n1 1\n2\n1 1\n1 1\n''') == '0.1666666666666666'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '0.5'\nassert solution('2\\n1\\n1') == '0.5'\nassert solution('3\\n2\\n0 1 2\\n0 1\\n1 0\\n2 0 3\\n0 0\\n1 0') == '0.57143'\nassert solution('4\\n3\\n1 0 2 3\\n1 0\\n2 0 1\\n1 1 0\\n2 0 1\\n3 0 1\\n1 1 2') == '0.0243'\nassert solution('5\\n4\\n1 0 2 3 4\\n1 0\\n1 0\\n2 0 1\\n1 1 0\\n2 0 1\\n3 0 1\\n1 1 2') == '0.0981'\n"
    },
    {
        "number": 3065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.04514677'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.04514677'\n\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.04514677'"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 3 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('4\\n1 2 1 2') == 'IMPOSSIBLE'\nassert solution('2\\n2 1') == 'IMPOSSIBLE'\nassert solution('4\\n2 1 1 1') == 'IMPOSSIBLE'\nassert solution('2\\n1 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1 2 3 3 2 1\") == \"3\"\nassert solution(\"1 2 3 3 2 1\") == \"3\"\nassert solution(\"1 2 3 3 2 1\") == \"3\"\nassert solution(\"1 2 3 3 2 1\") == \"3\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"test\") == \"IMPOSSIBLE\"\nassert solution(\"1\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 1 2\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '3'\nassert solution(sample_input2) == 'IMPOSSIBLE'\n\n-----Testcases-----\n\n\"\"\""
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n1 2 1 2\n1 3 2 2\n2 4 1 3\n3 5 4 2\n4 6 4 3\n5 7 4 4\n6 8 5 5\n7 9 6 6\n8 10 7 7\n9 11 8 8\n10 12 9 9\n11 13 10 10\n12 14 11 11\n13 15 12 12\n14 16 13 13\n15 17 14 14\n16 18 15 15\n17 19 16 16\n18 20 17 17\n19 21 18 18\n20 22 19 19\n''') == '''3\n1 6 1\n2 5 2\n3 4 3\n'''\n\nassert solution('''1\n1 2 1 2\n1 3 2 2\n2 4 1 3\n3 5 4 2\n4 6 4 3\n5 7 4 4\n6 8 5 5\n7 9 6 6\n8 10 7 7\n9 11 8 8\n10 12 9 9\n11 13 10 10\n12 14 11 11\n13 15 12 12\n14 16 13 13\n15 17 14 14\n16 18 15 15\n17 19 16 16\n18 20 17 17\n19 21 18 18\n20 22 19 19\n''') == '''IMPOSSIBLE\n'''\n\nassert solution('''2\n1 2 1 2\n1 3 2 2\n2 4 1 3\n3 5 4 2\n4 6 4 3\n5 7 4 4\n6 8 5 5\n7 9 6 6\n8 10 7 7\n9 11 8 8\n10 12 9 9\n11 13 10 10\n12 14 11 11\n13 15 12 12\n14 16 13 13\n15 17 14 14\n16 18 15 15\n17 19 16 16\n18 20 17 17\n19 21 18 18\n20 22 19 19\n''') == '''3\n1 6 1\n2 5 2\n3 4 3\n'''\n\nassert solution('''3\n1 2 1 2\n1 3 2 2\n2 4 1 3\n3 5 4 2\n4 6 4 3\n5 7 4 4\n6 8 5 5\n7 9 6 6\n8 10 7 7\n9 11 8 8\n10 12 9 9\n11 13 10 10\n12 14 11 11\n13 15 12 12\n14 16 13 13\n15 17 14 14\n16 18 15 15\n17 19 16 16\n18 20 17 17\n19 21 18 18\n20 22 19 19\n''') == '''IMPOSSIBLE\n'''\n\nassert solution('''7\n1 2 1 2\n1 3 2 2\n2 4 1 3\n3 5 4 2\n4 6 4 3\n5 7 4 4\n6 8 5 5\n7 9 6 6\n8 10 7 7\n9 11 8 8\n10 12 9 9\n11 13 10 10\n12 14 11 11\n13 15 12 12\n14 16 13 13\n15 17 14 14\n16 18 15 15\n17 19 16 16\n18 20 17 17\n19 21 18 18\n20 22 19 19\n''') == '''3\n1 6 1\n2 5 2\n3 4 3\n'''"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\"\nassert solution(\"6\\n2 1 3 1 4 2\") == \"1 2 1 2\"\nassert solution(\"6\\n3 2 3 2 4 2\") == \"1 2 1 2\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n6\n1 2 3 3 2 1\n''') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\n'\nassert solution(\n'''\n4\n1 2 1 2\n''') == 'IMPOSSIBLE'\nassert solution(\n'''\n0\nn''') == 'IMPOSSIBLE'\nassert solution(\n'''\n0\nn''') == 'IMPOSSIBLE'\nassert solution(\n'''\n10\n8 1 3 3 2 1 4 2 2 2 4 4 4 4 2 2 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 3066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\ninput()\n\"\"\"\n\n\"\"\"\nTest Input:\n4\n1 2 1 2\nSample Output:\nIMPOSSIBLE\n\"\"\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n1 100\n1 1\n''') == '10 20 28 27 30 40 50'\nassert solution('''2\n5 10 20 30 40 50\n2 28 27\n''') == '10 20 28 27 30 40 50'\nassert solution('''3\n1 2\n2 100\n1 1\n''') == '1 2 100'\nassert solution('''4\n3 3\n1 1\n1 1\n1 1\n''') == '3 3'\nassert solution('''7\n10 1\n10 1\n10 1\n10 1\n10 1\n10 1\n10 1\n10 1\n10 1\n''') == '1 1 10'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2\n1 100\n1 1''') == '1 2 100'\nassert solution('''2\n5 10 20 30 40 50\n2 28 27''') == '10 20 28 27 30 40 50'\nprint(\"tests passed\")\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2\n1 100\n1 1''') == '10 20 28 27 30 40 50'\nassert solution('''2\n5 10 20 30 40 50\n2 28 27''') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1 1 1\"\nassert solution(\"1\\n2\\n1\\n\") == \"1 2 1\"\nassert solution(\"1\\n1\\n2\\n\") == \"1 1 2\"\nassert solution(\"1\\n1\\n1\\n\") == \"1 1 1\"\nassert solution(\"1\\n1\\n1\\n\") == \"1 1 1\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n5 10 20 30 40 50\\n2 28 27') == '10 20 28 27 30 40 50'\nassert solution('3\\n1 2\\n1 100\\n1 1') == '1 2 100'\nassert solution('5\\n1 2\\n1 100\\n1 1\\n1 1') == '1 2 100'\nassert solution('5\\n1 2\\n1 100\\n1 1\\n1 1') == '1 2 100'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2\n1 100\n1 1\n''') == '1 2 100'\nassert solution('''2\n5 10 20 30 40 50\n2 28 27\n''') == '10 20 28 27 30 40 50'\nassert solution('''1\n3\n1\n''') == '1 1 1'\n'''\n1 2 3\n2 2 2\n3 1 3\n'''\nassert solution('''3\n1 2\n1 100\n1 1\n''') == '1 2 100'"
    },
    {
        "number": 3067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''0\n    AB 1 1\n    AC 2 1\n    BC 2 1\n    '''\n) == '2600'\n\nassert solution(\n    '''1\n    AB 1 1\n    AC 2 1\n    BC 2 1\n    '''\n) == '506'\n\nassert solution(\n    '''2\n    AB 1 1\n    AC 2 1\n    BC 2 1\n    '''\n) == '1000'\n\nassert solution(\n    '''3\n    AB 1 1\n    AC 2 1\n    BC 2 1\n    '''\n) == '426'\n\nassert solution(\n    '''4\n    AB 1 1\n    AC 2 1\n    BC 2 1\n    '''\n) == '5216'"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0\nAB 1 1\nAC 2 1\nBC 2 1\n''') == '2600'\nassert solution('''0\nAC 2 1\nBC 2 1\n''') == '506'\nassert solution('''0\nAC 2 1\nBC 2 1\nAB 1 1\n''') == '506'\nassert solution('''0\nAB 1 1\nBC 2 1\n''') == '2600'\nassert solution('''0\nAB 1 1\nBC 1 1\n''') == '0'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('AB 1 1') == '2600'\nassert solution('AC 2 1') == '506'\nassert solution('BC 2 1') == '506'\nassert solution('AB 2 1') == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"3\") == \"506\"\nassert solution(\"3\") == \"506\"\nassert solution(\"1\") == \"2600\"\nassert solution(\"3\") == \"506\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n0\nAB 1 1\nAC 2 1\nBC 2 1\n\"\"\"\n) == \"2600\"\nassert solution(\n\"\"\"\n3\nAB 1 1\nAC 2 1\nBC 2 1\n\"\"\"\n) == \"506\"\nassert solution(\n\"\"\"\n6\nAB 1 1\nAC 2 1\nBC 2 1\nAB 2 1\nAC 1 1\nBC 1 1\n\"\"\"\n) == \"1066\"\nassert solution(\n\"\"\"\n5\nAB 1 1\nAC 1 1\nBC 1 1\nAB 1 1\nAC 1 1\n\"\"\"\n) == \"1066\"\nassert solution(\n\"\"\"\n4\nAB 1 1\nAC 1 1\nBC 1 1\nAC 1 1\n\"\"\"\n) == \"1066\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") is None\nassert solution(\"0\") == \"2600\"\nassert solution(\"3\") == \"506\"\nassert solution(\"1 2 1\") == \"2600\"\nassert solution(\"1 2 2\") == \"506\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"AB 1 1\\nAC 2 1\\nBC 2 1\") == \"506\"\nassert solution(\"AB 1 1\\nAB 1 1\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nBC 2 1\") == \"506\"\nassert solution(\"AB 1 1\\nAB 1 1\\nAB 1 1\\nAC 1 2\\nBC 2 1\\nBC 2 1\") == \"506\"\nassert solution(\"AB 1 1\\nAB 1 1\\nAB 1 1\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nBC 2 1\") == \"506\"\nassert solution(\"AB 1 1\\nAB 1 1\\nAB 1 1\\nAC 1 2\\nBC 1 2\\nBC 2 1\") == \"506\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A\\nAB 1 1\\nAC 2 1\\nBC 2 1') == '2600'\nassert solution('AB\\nAC\\nBC') == '506'\nassert solution('AB\\nAC\\nBC\\nAC') == '0'\nassert solution('AB\\nAC\\nBC\\nBC') == '0'\nassert solution('AB\\nAC\\nBC\\nBC\\nAB') == '0'\n"
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AB1 1\\nAC2 1\\nBC 2 1') == '2600'\nassert solution('AB 1 1\\nAC 2 1\\nBC 2 1') == '506'\n\"\"\""
    },
    {
        "number": 3068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('0\\n1') == ''\nassert solution('1\\n2') == ''\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(')') == 'possible'\nassert solution('))') == 'impossible'\nassert solution(')()') == 'possible'\nassert solution('()())') == 'possible'\nassert solution(')())()') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")()\") == \"impossible\"\nassert solution(\"()))(\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('()))') == \"possible\"\nassert solution('()))') == \"impossible\"\nassert solution(')))(') == \"impossible\"\nassert solution(')(') == \"impossible\"\nassert solution('))') == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"possible\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'impossible'\nassert solution('((((())))))') == 'possible'\nassert solution('())') == 'impossible'\nassert solution('(()())()') == 'possible'\nassert solution(')()(') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('()()') == 'possible'\nassert solution('(()())') == 'possible'\nassert solution(')(') == 'impossible'\nassert solution('(((') == 'impossible'\nassert solution('(())') == 'possible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"()(())\") == \"possible\"\nassert solution(\")()())\") == \"impossible\"\nassert solution(\")()))\") == \"impossible\"\nassert solution(\")(\") == \"impossible\"\nassert solution(\"()())()\") == \"possible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('())') == 'possible'\nassert solution('()())()') == 'possible'\nassert solution('(()())()') == 'impossible'\nassert solution('(()()())') == 'possible'\nassert solution('())') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('()()') == 'possible'\nassert solution(')(') == 'impossible'\nassert solution('())()') == 'possible'\nassert solution('(()())()') == 'possible'\nassert solution('())()(()(()(()()))()())()') == 'possible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\"\nassert solution(\"())))(\") == \"impossible\"\n\nfrom sys import setrecursionlimit\nsetrecursionlimit(1000000)\nassert solution(\"())))(\") == \"impossible\"\nassert solution(\")))(\") == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == 'impossible'\nassert solution('2 3') == '1800'\nassert solution('1 2 3') == '1800'\nassert solution('3 4') == 'impossible'\nassert solution('1 4 3') == '1800'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1800'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == '1800'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == '1800'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1800\"\n\n\"\"\"\"\""
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'impossible'\nassert solution('2 3') == '1800'\nassert solution('2 3\\n1 1800 3600 1800\\n1 1900 3600 1600') == '1800'\nassert solution('2 3\\n1 1800 3600 1800\\n1 1900 3600 1600\\n1 2200 9400 1400') == 'impossible'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600') == '1800'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1800\"\n\"\"\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == '1800'\nassert solution(\n'''1 5\n1 1800 3600 1800\n1 1900 3600 1600\n1 2000 9200 1600\n1 22000 9400 1400\n1 3200 9600 1400\n1 3600 9800 1400\n''') == 'impossible'\nassert solution(\n'''1 6\n1 1800 3600 1800\n1 1900 3600 1600\n1 2000 9200 1600\n1 22000 9400 1400\n1 3200 9600 1400\n1 3600 9800 1400\n1 4200 9700 1400\n1 4800 9800 1400\n1 5200 9900 1400\n''') == '30'\nassert solution(\n'''1 1\n1 1800 3600 1800\n1 1900 3600 1600\n1 2000 9200 1600\n1 22000 9400 1400\n1 3200 9600 1400\n1 3600 9800 1400\n1 4200 9700 1400\n1 4800 9800 1400\n1 5200 9900 1400\n''') == '1800'\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n') == '1800'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n') == 'impossible'\n\n\"\"\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n') == '1800'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n') == 'impossible'\n\n\"\"\""
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1800\"\nprint(solution(stdin))\nassert solution(stdin) == \"impossible\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\"\nassert solution(\"1 2\") == \"A1\"\nassert solution(\"2 1\") == \"A1-B1\"\nassert solution(\"5 5\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'A1-B2 A2-C1'\nassert solution('2 3') == 'A1-C1 A2-B1 B2-C2'\nassert solution('3 2') == 'A1-B1 A2-C2 B2-C1'\nassert solution('1 3') == 'A1-B2 A2-C1 A3-D2 B3-E1 E2-D1'\nassert solution('2 3') == 'A1-C1 A2-B1 B2-C2'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2''') == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution('''4 2''') == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\nassert solution('''5 3''') == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\nA1-B3 A2-C3 B3-C2\"\nassert solution('''6 3''') == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\nA1-B3 A2-C3 B3-C2\\nA1-C3 A2-B3 B3-C1\"\nassert solution('''7 3''') == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\nA1-B3 A2-C3 B3-C2\\nA1-C3 A2-B3 B3-C1\\nA1-B4 A2-C4 B4-C3\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\nassert solution('1 2') == 'A1'\nassert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\n"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"3 2\"\"\") == \"\"\"A1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\nA1-B2 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\"\"\"\n\nassert solution(\n\"\"\"4 2\"\"\") == \"\"\"A1-B1 A2-C2 B1-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B3 A2-C3 B3-C2\nA3-C1 A2-B3 B3-C3\nA3-C2 A2-B2 B3-C1\nA3-C3 A2-B1 B3-C2\n\"\"\"\nassert solution(\n\"\"\"4 1\"\"\") == \"\"\"A1-A2 A3-A4\nA1-B1 B2-B3\nA1-C1 C2-C3\nA1-D1 D2-D3\"\"\"\n\nassert solution(\n\"\"\"7 7\"\"\") == \"\"\"A1-B1 A2-B2 A3-B3 A4-B4 A5-B5 A6-B6 A7-B7 A8-B8 A9-B9 A10-C1 A11-C2 A12-C3 A13-C4 A14-C5 A15-C6 A16-C7 A17-C8 A18-C9 A19-C10 A20-D1 A21-D2 A22-D3 A23-D4 A24-D5 A25-D6 A26-D7 A27-D8 A28-D9 A29-D10 A30-D11 A31-D12 A32-D13 A33-D14 A34-D15 A35-D16 A36-D17 A37-D18 A38-D19 A39-D20 A40-E1 A41-E2 A42-E3 A43-E4 A44-E5 A45-E6 A46-E7 A47-E8 A48-E9 A49-E10 A50-F1 A51-F2 A52-F3 A53-F4 A54-F5 A55-F6 A56-F7 A57-F8 A58-F9 A59-F10 A60-F11 A61-F12 A62-F13 A63-F14 A64-F15 A65-F16 A66-F17 A67-F18 A68-F19 A69-F20 A70-F21 A71-F22 A72-F23 A73-F24 A74-F25 A75-F26 A76-F27 A77-F28 A78-F29 A79-F30 A80-F31 A81-F32 A82-F33 A83-F34 A84-F35 A85-F36 A86-F37 A87-F38 A88-F39 A89-F40 A90-F41 A91-F42 A92-F43 A93-F44 A94-F45 A95-F46 A96-F47 A97-F48 A98-F49 A99-F50 A100-G1 A101-G2 A102-G3 A103-G4 A104-G5 A105-G6 A106-G7 A107-G8 A108-G9 A109-G10 A110-G11 A111-G12 A112-G13 A113-G14 A114-G15 A115-G16 A116-G17 A117-G18 A118-G19 A119-G20 A120-G21 A121-G22 A122-G23 A123-G24 A124-G25 A125-G26 A126-G27 A127-G28 A128-G29 A129-G30 A130-G31 A131-G32 A132-G33 A133-G34 A134-G35 A135-G36 A136-G37 A137-G38 A138-G39 A139-G40 A140-G41 A141-G42 A142-G43 A143-G44 A144-G45 A145-G46 A146-G47 A147-G48 A148-G49 A149-G50 A150-G51 A151-G52 A152-G53 A153-G54 A154-G55 A155-G56 A156-G57 A157-G58 A158-G59 A159-G60 A160-G61 A161-G62 A162-G63 A163-G64 A164-G65 A165-G66 A166-G67 A167-G68 A168-G69 A169-G70 A170-G71 A171-G72 A172-G73 A173-G74 A174-G75 A175-G76 A176-G77 A177-G78 A178-G79 A179-G80 A180-G81 A181-G82 A182-G83 A183-G84 A184-G85 A185-G86 A186-G87 A187-G88 A188-G89 A189-G90 A190-G91 A191-G92 A192-G93 A193-G94 A194-G95 A195-G96 A196-G97 A197-G98 A198-G99 A199-G100 A200-G101 A201-G102 A202-G103 A203-G104 A204-G105 A205-G106 A206-G107 A207-G108 A208-G109 A209-G110 A210-G111 A211-G112 A212-G113 A213-G114 A214-G115 A215-G116 A216-G117 A217-G118 A218-G119 A219-G120 A220-G121 A221-G122 A222-G123 A223-G124 A224-G125 A225-G126 A226-G127 A227-G128 A228-G129 A229-G130 A230-G131 A231-G132 A232-G133 A233-G134 A234-G135 A235-G136 A236-G137 A237-G"
    },
    {
        "number": 3071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\"\nassert solution(\"3 4\") == \"A1-B2 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\nassert solution(\"1 10\") == \"\"\nassert solution(\"10 10\") == \"\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n..\\n..') == '7'\nassert solution('4 4\\nX..X\\n..X.\\n..XX\\nXX..') == '9'\nassert solution('2 2\\n..\\n..\\n') == '7'\nassert solution('4 4\\nX.XX\\nX..X\\n..X.\\n..XX') == '9'\nassert solution('2 2\\nX..\\nX..\\n') == '7'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\nX.XX\nX..X\n..X.\n..XX''') == '9'\nassert solution('''2 2\n..\n..\nSample Output 1:\n7\n\nSample Input 2:\n4 4\n.X..\n.X..\n.X..\n.XX.\nSample Output 2:\n7\n\nSample Input 3:\n4 4\n.X..\n.X..\n.X..\n.XX.\nSample Output 3:\n7''') == '7'\nassert solution('''2 2\n.X..\n.X..\nSample Output 1:\n7\n\nSample Input 2:\n4 4\n.X..\n.X..\n.X..\n.XX.\nSample Output 2:\n7\n\nSample Input 3:\n4 4\n.X..\n.X..\n.X..\n.XX.\nSample Output 3:\n7''') == '7'\nassert solution('''2 2\n..\n..\nSample Output 1:\n7\n\nSample Input 2:\n4 4\n.X..\n.X..\n.X..\n.XX.\nSample Output 2:\n7\n\nSample Input 3:\n4 4\n.X..\n.X..\n.X..\n.XX.\nSample Output 3:\n7''') == '7'\nassert solution('''10 10\nX..X..X\n..X...X\n...X...X\nX.X.X...X\n..X...X..\n.X...X.X.\n...X...X.\nX.X.X..X.\n.X...X..X\nSample Output 3:\n14"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n..\\n..') == '7'\nassert solution('3 3\\n.X.\\n..X.\\nXX..') == '9'\nassert solution('4 3\\n.X.\\n..X.\\nXX..\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '1 2'\n) == '7'\n\nassert solution(\n    '4 4'\n) == '9'\n\nassert solution(\n    '1 2\\nX.XX\\nX..X\\n..X.\\n..XX'\n) == '9'\n\nassert solution(\n    '4 4\\n..XX\\nX.X.\\nX.X.\\nX..X'\n) == '9'\n\nassert solution(\n    '4 4\\nX..X\\nX.X.\\nX.X.\\nX..X'\n) == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('.X..\\n.X..\\nX.X.\\nX.X.\\n.X..') == 7\nassert solution('..\\nX..\\n.X.\\n.X.\\n.X.') == 9\nassert solution('X.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.') == 9\nassert solution('X.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.') == 9\nassert solution('X..\\nX..\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\n.X.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.\\nX.') == 9\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\".XX.X..\") == \"9\"\nassert solution(\"X.XX\") == \"7\"\nassert solution(\"X..X\") == \"9\"\nassert solution(\"XX\") == \"7\"\nassert solution(\"..X\") == \"9\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\\n\") == \"9\"\nassert solution(\"1 3\\n.\\n.\\n.\") == \"1\"\nassert solution(\"2 2\\n..\\n..\\n\") == \"7\"\nassert solution(\"2 4\\nX.XX\\nX..X\\n..X.\\n..XX\\n\") == \"9\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7\"\n\"\"\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\nassert solution('..X') == '8'\nassert solution('X..X') == '8'\nassert solution('X.XX') == '8'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 3 2 2 100\n1 1 1 1 500''') == '600'\nassert solution('''2\n2 0 2 1 100\n6 0 8 1 1''') == '100'\nassert solution('''10\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3\\n2 2 1 1 100') == '600'\nassert solution('2\\n2\\n2 1 1 1 100') == '100'\nassert solution('3\\n3\\n2 2 1 1 100') == '600'\nassert solution('1\\n1\\n1 1 1 1 100') == '100'\nassert solution('2\\n2\\n2 0 2 1 100') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n3\\n3 2 2 100\\n1 1 1 1 500\\n') == '600'\nassert solution('2\\n0 0 2 1 100\\n6 0 8 1 1\\n') == '100'\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1\\n') == '100'\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1\\n') == '100'\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1\\n') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 2 2 100\\n1 1 1 1 500\\n') == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '100'\nassert solution('2\\n1 1 1 1 100') == '600'\nassert solution('2\\n2 0 2 1 100') == '100'\nassert solution('2\\n6 0 8 1 1') == '100'\nassert solution('2\\n1 1 1 1 500') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '100'\nassert solution(stdin) == '100'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"3\\n3 3 2 2 100\\n1 1 1 1 500\\n1 2 1 1 500\\n\") == \"600\"\nassert solution(\"3\\n3 3 2 2 100\\n1 1 1 1 500\\n1 1 2 1 500\\n1 3 1 1 500\\n\") == \"600\"\nassert solution(\"5\\n4 4 3 3 2 2\\n1 1 1 1 1\\n1 1 2 1 1\\n1 1 1 1 1\\n1 2 1 1 1\\n1 1 1 1 1\\n\") == \"28\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"100\"\nassert solution(stdin) == \"100\"\nassert solution(stdin) == \"100\"\n\nTest case 1:\n3\n2 3 2 2 100\n1 1 1 1 500\nTest case 2:\n2\n2 0 2 1 100\n6 0 8 1 1\nTest case 3:\n2\n2 0 2 1 100\n6 0 8 1 1\nTest case 4:\n3\n3 0 2 1 100\n1 1 1 1 500\n1 1 1 1 500\nSample Output 2:\n100"
    },
    {
        "number": 3073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 0 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"100\"\nassert solution(\"2\\n0 0 0 1 1\\n1 1 1 1 1\\n\") == \"100\"\nassert solution(\"2\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"100\"\nassert solution(\"2\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"100\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\"\nassert solution(\"3\\n1111\") == \"0\"\nassert solution(\"4\\n11111\") == \"0\"\nassert solution(\"5\\n11111\") == \"0\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n1\n9\n''') == '3'\n\nassert solution('''\n2\n9\n''') == '0'\n\nassert solution('''\n3\n21\n''') == '6'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3') == '0'\nassert solution('1\\n3') == '0'\nassert solution('2\\n3') == '0'\nassert solution('2\\n4') == '1'\nassert solution('2\\n7') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n11') == '3'\nassert solution('2\\n11') == '0'\nassert solution('3\\n11') == '3'\nassert solution('4\\n11') == '3'\nassert solution('5\\n11') == '3'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n361\n''') == '3'\nassert solution('''2\n11\n''') == '0'\nassert solution('''3\n361\n''') == '3'\nassert solution('''5\n1221\n''') == '4'\nassert solution('''12\n11\n''') == '2'\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    361\n''') == '3'\nassert solution('''\n    2\n    11\n''') == '0'\nassert solution('''\n    3\n    0000\n''') == '0'\nassert solution('''\n    3\n    41111\n''') == '1'\nassert solution('''\n    3\n    0001111\n''') == '1'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_data) == \"2\""
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 10\n2 100\n1 10'''\n) == 10\nassert solution(\n'''3 10\n2 100\n1 10\n13 5'''\n) == 'cancel road trip'\nassert solution(\n'''3 100\n2 100\n1 100\n13 5'''\n) == 10\nassert solution(\n'''3 10\n2 100\n1 10\n13 5'''\n) == 'cancel road trip'\nassert solution(\n'''2 10\n2 100\n1 10'''\n) == 10\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 10\n2 100\n1 10\n11 5''') == '10'\nassert solution('''3 10\n2 100\n1 10\n11 5''') == 'cancel road trip'\nassert solution('''3 10\n2 100\n1 10\n13 5\n3 100\n2 25\n1 10''') == 'cancel road trip'\n'''\nSample Case 2:\n\n2 1\n1 1\n\n1 2\n\n1 3\n1 4\n\n1 5\n1 6\n\n1 7\n1 8\n1 9\n\n1 10\n1 11\n1 12\n1 13\n1 14\n\n2 14\n'''\n'''\nSample Case 3:\n\n2 1\n1 1\n\n1 2\n\n1 3\n1 4\n\n1 5\n1 6\n\n1 7\n1 8\n1 9\n\n1 10\n1 11\n1 12\n1 13\n1 14\n\n2 14\n'''\nassert solution('''2 1\n1 1\n\n1 2\n\n1 3\n1 4\n\n1 5\n1 6\n\n1 7\n1 8\n1 9\n\n1 10\n1 11\n1 12\n1 13\n1 14\n\n2 14\n''') == 'cancel road trip'\nassert solution('''3 1\n1 1\n\n1 2\n\n1 3\n1 4\n\n1 5\n1 6\n\n1 7\n1 8\n1 9\n\n1 10\n1 11\n1 12\n1 13\n1 14\n\n2 14\n''') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n2 100\\n1 10\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\"\nassert solution(\"2 10\\n2 100\\n1 10\\n13 5\\n5 11\\n5 11\\n15 3\\n2 13\\n3 12\\n2 3\\n2 7\") == \"6\"\nassert solution(\"2 10\\n2 100\\n1 10\\n11 5\\n5 11\\n5 11\\n15 3\\n2 13\\n3 12\\n2 3\\n2 7\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3 10\n2 100\n1 10\n11 5''') == '10'\nassert solution(\n'''3 10\n2 100\n1 10\n13 5''') == 'cancel road trip'\nassert solution(\n'''4 2\n1 2\n2 2\n3 2\n4 2\nSample Output 2:\ncancel road trip''') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 10\\n2 100\\n1 10\\n11 5') == '10'\nassert solution('1 10\\n2 100\\n3 10\\n4 100\\n5 100\\n6 100\\n7 100\\n8 100\\n9 100\\n10 100\\n11 100\\n12 100\\n13 100') == 'cancel road trip'\nassert solution('3 10\\n2 100\\n1 10') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n11 5') == 'cancel road trip'\nassert solution('1 10\\n2 100\\n3 10\\n4 100\\n5 100\\n6 100\\n7 100\\n8 100\\n9 100\\n10 100\\n11 100\\n12 100\\n13 100') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"cancel road trip\"\nassert solution(\"2\\n1\\n1\\n1\") == \"cancel road trip\"\nassert solution(\"3\\n1\\n1\\n1\") == \"cancel road trip\"\nassert solution(\"4\\n1\\n1\\n1\") == \"cancel road trip\"\nassert solution(\"5\\n1\\n1\\n1\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 100') == '10'\nassert solution('1 10\\n2 100\\n1 10') == '10'\nassert solution('2 100\\n1 10\\n13 5') == 'cancel road trip'\nassert solution('1 10\\n2 100\\n1 10\\n13 5') == '10'\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\\n\") == \"10\\n\"\nassert solution(\"2 10\\n2 100\\n1 10\\n11 5\\n\") == \"cancel road trip\\n\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 10\n2 100\n1 10\n11 5''') == '10'\nassert solution('''3 10\n2 100\n1 10\n13 5''') == 'cancel road trip'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 9\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\") == \"0 7 8 11 15 16 19\"\nassert solution(\"5 5\") == \"0 5 4 3 2 1\"\nassert solution(\"1 10\") == \"0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 9\n2 8\n1 1\n3 4\n5 100''') == '1 8 9 9 100 101 108 109 109'\nassert solution('''5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19'\n'''\n\nn, k = map(int, stdin.readline().strip().split())\njewels = []\nfor _ in range(n):\n    size, val = map(int, stdin.readline().strip().split())\n    jewels.append((size, val))\n\nprint(solution(jewels))\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109') == '1 8 9 9 100 101 108 109'\nassert solution('3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109') == '0 7 8 11 15 16 19'\nassert solution('3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109') == '0 7 8 11 15 16 19'\nassert solution('3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109') == '0 7 8 11 15 16 19'\nassert solution('3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 4\\n1 1\\n3 4\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"2 4\\n1 1\\n3 4\") == \"0 7 8 11 15 16 19\"\nassert solution(\"2 4\\n1 1\\n3 4\\n1 1\\n3 4\\n1 1\\n3 4\") == \"0 7 8 11 15 16 19\"\nassert solution(\"2 4\\n1 1\\n3 4\\n1 1\\n3 4\\n1 1\\n3 4\\n1 1\\n3 4\\n1 1\\n3 4\\n1 1\\n3 4\") == \"0 7 8 11 15 16 19\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\\n0 7 8 11 15 16 19\\n\"\n\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n\") == \"0 7 8 11 15 16 19\\n0 7 8 11 15 16 19\\n\""
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\nassert solution('''5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19'\nassert solution('''10 12\n2 8\n1 1\n3 4\n5 100\n''') == '0 7 8 11 15 16 19'\nassert solution('''11 12\n2 8\n1 1\n3 4\n5 100\n''') == '0 7 8 11 15 16 19'\nassert solution('''7 12\n2 8\n1 1\n3 4\n5 100\n''') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\nassert solution('''5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19'\n\n'''\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 9\n2 8\n1 1\n3 4\n5 100''') == '1 8 9 9 100 101 108 109 109', 'Test 1'\nassert solution('''5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19', 'Test 2'\nassert solution('''1 10\n10 1\n5 1\n1 10\n10 1\n5 1\n5 5\n5 10\n10 10\n5 1\n5 1\n5 5\n10 1\n''') == '0 10 1 5 5 5 5 5 10 1', 'Test 3'\nassert solution('''2 5\n1 1\n3 4\n5 100\n''') == '0 1 2 3 4 5', 'Test 4'\nassert solution('''1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 2\") == \"0 1\"\nassert solution(\"0 1\") == \"0 1\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 1\") == \"1 1\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 9\\n\" +\n    \"2 8\\n\" +\n    \"1 1\\n\" +\n    \"3 4\\n\" +\n    \"5 100\") == \"1 8 9 9 100 101 108 109 109\", \"Test 1\"\n\nassert solution(\n    \"5 7\\n\" +\n    \"2 2\\n\" +\n    \"3 8\\n\" +\n    \"2 7\\n\" +\n    \"2 4\\n\" +\n    \"3 8\") == \"0 7 8 11 15 16 19\", \"Test 2\"\n\nassert solution(\n    \"5 7\\n\" +\n    \"2 2\\n\" +\n    \"3 8\\n\" +\n    \"2 7\\n\" +\n    \"2 4\\n\" +\n    \"3 8\") == \"0 7 8 11 15 16 19\", \"Test 3\"\n\nassert solution(\n    \"5 7\\n\" +\n    \"2 2\\n\" +\n    \"3 8\\n\" +\n    \"2 7\\n\" +\n    \"2 4\\n\" +\n    \"3 8\") == \"0 7 8 11 15 16 19\", \"Test 4\"\n\nassert solution(\n    \"5 7\\n\" +\n    \"2 2\\n\" +\n    \"3 8\\n\" +\n    \"2 7\\n\" +\n    \"2 4\\n\" +\n    \"3 8\") == \"0 7 8 11 15 16 19\", \"Test 5\""
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n3 3') == '1'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n3 3') == '3'\nassert solution('1 10 1000\\n5 0 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n0 -1 1\\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 1\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == '1'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '3'\n\n\"\"\"\n\nimport unittest\nfrom collections import namedtuple\nfrom typing import List\n\n\nclass TrieNode(namedtuple(\"TrieNode\", [\"left\", \"right\"])):\n    def __eq__(self, other):\n        return isinstance(other, TrieNode) and self.left == other.left and self.right == other.right\n\n\nclass Trie:\n    def __init__(self):\n        self.root = TrieNode(None, None)\n\n    def insert(self, key, value):\n        node = self.root\n        for ch in key:\n            if ch not in node.left:\n                node.left = TrieNode(None, None)\n            node = node.left\n        node.value = value\n\n    def find(self, key, value):\n        node = self.root\n        for ch in key:\n            if ch not in node.left:\n                return False\n            node = node.left\n        if node.value == value:\n            return True\n\n\nclass Solution:\n    def __init__(self):\n        self.max = 0\n\n    def max_area(self, grid: List[List[int]], max_radius: int, start_point: List[int], radius: int) -> int:\n        def is_in_range(point: List[int]) -> bool:\n            return max_radius > (max(0, point[0] - start_point[0]) + max(0, point[1] - start_point[1])) <= radius\n\n        def valid_points(points: List[List[int]]) -> int:\n            return sum(1 for p in points if is_in_range(p))\n\n        node = Trie()\n        for y in range(len(grid)):\n            for x in range(len(grid[0])):\n                if grid[y][x]:\n                    node.insert(str(y) + '-' + str(x), grid[y][x])\n        node = node.root\n        return valid_points([\n            [y - radius, y + radius, x - radius, x + radius]\n            for y in range(len(grid))\n            for x in range(len(grid[0]))\n        ])\n\n    def max_minions_destroyed(self, grid: List[List[int]], n: int, m: int, r: int) -> int:\n        self.max = 0\n\n        def _dfs(y: int, x: int) -> int:\n            node = grid[y][x]\n            if node:\n                self.max = max(self.max, _dfs(y - 1, x) + _dfs(y + 1, x) + _dfs(y, x - 1) + _dfs(y, x + 1))\n            return 1 if node else 0\n\n        for y in range(len(grid)):\n            for x in range(len(grid[0])):\n                if grid[y][x]:\n                    _dfs(y, x)\n\n        return self.max if n * m > self.max else -1\n\n\nclass TestSolution(unittest.TestCase):\n    def test_max_minions_destroyed(self):\n        grid = [\n            [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1],\n            [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],\n            [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1],\n            [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1],\n            [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n            [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n            [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1],\n            [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n            [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1],\n            [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n            [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n            [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n            [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n            [1, 0, 1, 0, 0, 0,"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"1 1 1\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"2 2 3\n0 0 0\n1 1 1\n1 2 1\n1 3 1\n2 0 1\n2 1 1\n2 1 1\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"1 2 3\n3 0 0\n0 1 1\n1 2 1\n1 3 1\n2 1 2\n2 2 2\n2 3 2\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"1 1 1\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 1\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == 1\nassert solution('1 1 1\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == 1\nassert solution('1 1 1\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == 1\nassert solution('1 1 1\\n0 0 1\\n3 3\\n-3 3\\n3 0') == 1\nassert solution('1 1 1\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == 1\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == 3\nassert solution(\"5 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == 3\nassert solution(\"5 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == 3\nassert solution(\"5 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n1 1 2\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == 3\n"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected1\nprint(expected1)\n\nexpected2 = \"2\"\nexpected2 = \"2\"\nprint(expected2)\n'''"
    },
    {
        "number": 3077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\"\"\") == \"1\"\nassert solution(\n    \"\"\"1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\"\"\") == \"3\"\n\nprint(\"\\n%s seconds\" % (time.time() - start_time))"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 10000\n1\n1\n1\n1\n1\n''') == '4'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '0'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2'\nassert solution('''4 4\n1\n1\n1\n1\n1\n''') == '2'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('1 1\\n1') == '1\\n0\\n'\nassert solution('1 100\\n1') == '1\\n0\\n'\nassert solution('10 10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 3\") == \"\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '4'\nassert solution('1\\n2\\n3\\n4') == '2\\n0\\n0\\n2'\nassert solution('1\\n2\\n3\\n4\\n5') == '1\\n2\\n1\\n0\\n0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '2\\n0\\n0\\n1\\n0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '2\\n1\\n0\\n0\\n1\\n0'\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == \"1\"\nassert solution('1\\n2\\n3') == \"1\"\nassert solution('2\\n1') == \"1\"\nassert solution('2\\n3') == \"0\"\nassert solution('3\\n1') == \"0\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected(stdin)\nprint(solution(stdin))"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 10000\n1\n1\n1\n1\n1\n''') == '4'\nassert solution('''5 9\n1\n1\n10\n1\n9\n''') == '2'\nassert solution('''3 1\n5 5\n10 9\n1 4\n''') == '1'\nassert solution('''3 1\n5 5\n10 9\n1 4\n''') == '2'\nassert solution('''3 1\n5 5\n10 9\n1 4\n''') == '2'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'NE'\nassert solution('ne') == 'NE'\nassert solution('kava') == 'DA'\nassert solution('ka') == 'k'\nassert solution('ak') == 'ak'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''ne\nkava''') == 'NE'\nassert solution('''ne\nkava''') == 'NE'\nassert solution('''vypi\nzps\nvypn\nzpqy\nzqwf''') == 'ZPS'\nassert solution('''ne\nkava''') == 'NE'\nassert solution('''otrp\nkoua\nsro\noprs''') == 'KOUA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ne') == 'NE'\nassert solution('kava') == 'DA'\nassert solution('kva') == 'DA'\nassert solution('keva') == 'DA'\nassert solution('kava') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output\nprint(solution(input()))\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"kava\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'NE'\nassert solution('z') == 'NE'\nassert solution('k') == 'NE'\nassert solution('ka') == 'DA'\nassert solution('kaa') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"DA\"\nassert solution(\"kaba\") == \"k\"\nassert solution(\"kaba\") == \"k\"\nassert solution(\"kab\") == \"k\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\nne\n''') == 'DA'\nassert solution('''4\nkava\n''') == 'NE'\nassert solution('''8\njuro\n''') == 'DA'\nassert solution('''10\nkhak\n''') == 'NE'\nassert solution('''16\nljuro\n''') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ne\") == \"NE\"\nassert solution(\"kava\") == \"ak\"\nassert solution(\"kas\") == \"ak\"\nassert solution(\"keva\") == \"k\"\nassert solution(\"keva\") == \"k\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'NE'\nassert solution('ne') == 'NE'\nassert solution('n') == 'n'\nassert solution('k') == 'k'\nassert solution('ka') == 'k'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1'\nassert solution(\n'''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\nassert solution(\n'''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\nassert solution(\n'''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\") == \"2\"\nassert solution(\"8 10 4\") == \"0\"\nassert solution(\"8 10 4\") == \"2\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\\n3 3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n') == '2\\n0\\n2\\n1'\nassert solution('8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n') == '0\\n0\\n3\\n2'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open('test_1.txt').read()) == '2\\n0\\n3\\n2\\n'\nassert solution(open('test_2.txt').read()) == '0\\n0\\n2\\n1\\n'\nassert solution(open('test_3.txt').read()) == '3\\n2\\n1\\n1\\n'\nassert solution(open('test_4.txt').read()) == '2\\n0\\n2\\n1\\n'\nassert solution(open('test_5.txt').read()) == '2\\n0\\n0\\n1\\n'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 2\\n1 3') == '2'\nassert solution('2 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '0\\n0\\n3\\n2'\nassert solution('3 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '0\\n0\\n3\\n2'\nassert solution('4 5\\n1 2\\n2 3\\n1 3\\n3 4\\n6 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '0\\n0\\n0\\n2'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '4 10 4'\n) == '2\\n0\\n2\\n1'\nassert solution(\n    '8 10 4'\n) == '0\\n0\\n3\\n2'\nassert solution(\n    '8 10 4'\n) == '2\\n0\\n2\\n1'\n\nprint(\"Passed.\")\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == 0\nassert solution('2 3') == 0\nassert solution('1 3') == 2\nassert solution('3 6') == 2\nassert solution('6 8') == 1\n"
    },
    {
        "number": 3080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1'\n\nassert solution('''5 5 3\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('0 1') == '0'\nassert solution('1 0') == '0'\nassert solution('1 2 1') == '2'\nassert solution('2 1 1') == '1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"2\n1\n1\n0\n1\n1\n1\n2\n1\n\"\"\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin1) == stdin2\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 2\\n1 0\\n1 2\\n1 1\\n1 3\") == \"1\"\nassert solution(\"1 1\\n0 1\\n1 0\\n1 2\\n1 3\") == \"1\"\nassert solution(\"1 1\\n0 1\\n1 0\\n1 2\\n1 3\") == \"2\"\nassert solution(\"1 1\\n0 1\\n1 0\\n1 2\\n1 3\") == \"2\"\nassert solution(\"0 2\\n1 0\\n1 2\\n1 1\\n1 3\") == \"2\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '2'\nassert solution('2 1 1') == '1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 1\") == 0\nassert solution(\"1 1\") == 1\nassert solution(\"1 1\\n1 0\\n0 1\") == 1\nassert solution(\"1 0\\n0 1\\n1 2 1\") == 2\nassert solution(\"1 1\\n1 0\\n0 1\") == 1\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1''') == '2'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\nSample Output 2:\n1\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1''') == '1'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\nSample Output 2:\n2\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1''') == '2'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 3''') == '1'\nassert solution('''2 1\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 3''') == '0'\nassert solution('''2 1\n0 1\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 3''') == '2'\nassert solution('''2 1\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n2 1 3''') == '1'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''D 4 10 1\nC 6 1''') == '40.500000000'\n'''\nassert solution('''D 4 10 1\nC 6 1''') == '49.000000000'\nassert solution('''D 4 10 1\nC 9 3''') == '49.000000000'\nassert solution('''D 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\nassert solution('''D 4 10 1\nC 9 3\nD 4 10 1\nC 6 1''') == '49.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"impossible\"\nassert solution(\"1 1\") == \"0.500000000\"\nassert solution(\"1 1 1\") == \"0.2500000000\"\nassert solution(\"1 1 1 1\") == \"0.12500000000\"\nassert solution(\"1 1 1 1 1\") == \"0.0625000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\nassert solution('''4 10\nD 1 10 1\nD 2 8 2\nC 3 2\nD 4 8 2''') == '48.500000000'\nassert solution('''7 10\nD 1 10 1\nD 2 8 2\nD 3 7 2\nC 4 6 2\nD 5 5 2\nD 6 4 2''') == '162.500000000'\nassert solution('''7 10\nD 1 10 1\nD 2 8 2\nD 3 7 2\nD 4 6 2\nD 5 5 2\nD 6 4 2''') == '161.500000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\nD 4 10 1\nC 6 1\n\"\"\"\n) == '40.500000000'\nassert solution(\n\"\"\"\nD 4 10 1\nC 6 1\nC 9 3\n\"\"\"\n) == '49.000000000'\n\nimport sys\nsys.stdin = open('test1')\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\nassert solution('''2 5\nD 1 1\nC 1 1\n''') == '0.0000000'\nassert solution('''10 10\nD 1 1\nD 2 2\nD 3 3\nD 4 4\nD 5 5\nD 6 6\nD 7 7\nD 8 8\nD 9 9\nD 10 10''') == '0.0'\nassert solution('''100 10\nD 1 1\nD 2 2\nD 3 3\nD 4 4\nD 5 5\nD 6 6\nD 7 7\nD 8 8\nD 9 9\nD 10 10''') == '0.0'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''D 10 1\nD 7 1\nD 5 1\nC 3 1\nC 7 1\nC 9 1\n''') == '48.000000000'\nassert solution('''D 10 1\nD 7 1\nD 5 1\nC 3 1\nC 7 1\nC 9 1\n''') == '40.500000000'\nassert solution('''D 10 1\nD 7 1\nD 5 1\nD 5 1\nC 3 1\nC 7 1\nC 9 1\n''') == '49.000000000'\nassert solution('''D 10 1\nD 7 1\nD 5 1\nD 5 1\nD 5 1\nC 3 1\nC 7 1\nC 9 1\n''') == '40.500000000'\nassert solution('''D 10 1\nD 7 1\nD 5 1\nD 5 1\nD 5 1\nD 5 1\nD 5 1\nC 3 1\nC 7 1\nC 9 1\n''') == '48.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\nassert solution('''4 15\nD 4 10 1\nC 6 1\nD 9 3\nC 7 2''') == '60.000000000'\nassert solution('''8 15\nD 4 10 1\nC 6 1\nD 9 3\nC 7 2\nD 9 4\nC 7 2\nD 4 5\nC 2 1''') == '82.500000'\nassert solution('''9 15\nD 4 10 1\nC 6 1\nD 9 3\nC 7 2\nD 9 4\nC 7 2\nD 4 5\nC 2 1\nD 4 5''') == '60.000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''D 10 1\nC 1 1\nD 10 1'''\n) == \"40.500000000\"\n\nassert solution(\n'''D 10 1\nD 10 1\nC 9 3'''\n) == \"49.000000000\"\n\nassert solution(\n'''D 10 1\nC 9 1\nD 10 1\nC 6 1\nD 1 1\nC 9 1\nD 10 1\nC 6 1'''\n) == \"40.500000000\"\n\nassert solution(\n'''D 100 1\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nC 100 1\nC 100 1\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD 9 2\nD"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''2 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\nassert solution('''2 15\nD 4 10 1\nD 9 2 1\nD 4 2 1\nD 1 2 1\nD 9 2 1\nD 1 2 1\nC 9 2 1\nD 1 2 1\nD 1 2 1\nD 4 2 1''') == '49.000000000'\nassert solution('''2 15\nD 4 10 1\nC 6 1\nC 9 3\nC 2 3\nC 1 3\nC 9 3\nC 1 3\nD 4 10 1\nC 6 1\nC 9 3\nD 1 2 1\nD 1 2 1\nD 4 2 1''') == '49.000000000'\nassert solution('''3 15\nD 4 10 1\nD 9 2 1\nD 4 2 1\nD 1 2 1\nD 9 2 1\nD 1 2 1\nC 9 2 1\nD 1 2 1\nD 1 2 1\nD 4 2 1''') == '40.500000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.000000000'\nassert solution('''4 10\nD 1 3 2\nC 4 1\nD 3 2 1\nD 1 1 3''') == '25.25000000'\nassert solution('''4 19\nD 4 19 2 1\nD 3 19 2 1\nD 1 19 1 3''') == '81.75000000'\nassert solution('''5 19\nD 1 3 2 1\nD 2 3 1 2\nC 1 1 3''') == '46.000000000'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2', 'Sample'\nassert solution('''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2', 'Sample 2'\nassert solution('''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2', 'Sample 3'\nassert solution('''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2', 'Sample 4'\nassert solution('''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2', 'Sample 5'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\".join(sample_input)) == sample_output"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"fail\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2\\na1 4\") == \"2\"\nassert solution(\"1\\na1 4\") == \"2\"\nassert solution(\"1\\na1 4\\nb1 4\") == \"1\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1 1 1 1 1 1 1 1\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"fail\"\nassert solution(\"3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\") == \"fail\"\nassert solution(\"4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\") == \"fail\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\nassert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\na 1 4\na 1 3\na 1 2\na 1 1\na 1 0\na 1 5\na 2 4\na 2 3\na 2 2\na 2 1\na 2 0''') == '5 4 9 3 1 10 7 6 2'\n\nassert solution('''b 1 5\na 2 7\nc 1 5\nc 2 3\nd 2 3\ne 2 3\ne 1 4\nf 0\ng 1 4\nh 1 4\ni 1 4\nj 2 3''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''b 1 5\na 2 7\nc 1 5\nc 2 3\nd 2 3\ne 2 3\ne 1 4\nf 0\ng 1 4\nh 1 4\ni 1 4\nj 2 3\nb 2 4\na 1 4\na 1 3\na 1 2\na 1 1\na 1 0\na 1 5\na 2 4\na 2 3\na 2 2\na 2 1\na 2 0''') == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n9') == 'fail'\nassert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n9\\n9') == 'fail'\nassert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n9\\na') == 'fail'\nassert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n9\\na\\n9') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\nb 2 1 8\nc 1 4\nd 1 2\ne 1 5\nf 1 6\ng 1 7\nh 1 8\ni 2 9\nj 2 10''') == 'fail'\n\nprint(solution('''b\na\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n'''))\nprint(solution('''a\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n'''))\n"
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10\\n a 2 10 3\\n b 1 6\\n c 2 1 5\\n d 1 9\\n e 1 4\\n f 1 2\\n g 2 6 8\\n h 0\\n i 1 3\\n j 1 7\") == \"5 4 9 3 1 10 7 6 2\"\n\"\"\""
    },
    {
        "number": 3083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''a 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\nassert solution('''a 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\"\nassert solution(\"23:59\") == \"1\\n00:00\\n00:01\\n00:02\"\nassert solution(\"23:59\") == \"1\\n00:00\\n00:01\\n00:02\"\nassert solution(\"23:59\") == \"1\\n00:00\\n00:01\\n00:02\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('00:00') == '3'\nassert solution('00:08') == '3'\nassert solution('00:09') == '3'\nassert solution('00:10') == '2'\nassert solution('00:23') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('00:08') == '3'\nassert solution('00:00') == '3'\nassert solution('00:01') == '3'\nassert solution('00:02') == '3'\nassert solution('00:03') == '2'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"00:00\\n01:01\\n\") == \"3\\n00:00\\n01:00\\n01:01\\n\"\nassert solution(\"00:08\\n00:00\\n\") == \"3\\n00:08\\n00:09\\n00:00\\n\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n00:00\\n00:00\"\nassert solution(\"01:00\") == \"3\\n00:00\\n00:00\\n00:00\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\"\nassert solution(\"00:00\") == \"3\\n00:00\\n00:00\\n00:00\"\nassert solution(\"00:09\") == \"3\\n00:09\\n00:09\\n00:09\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''00:00\n01:01'''\n) == '3'\nassert solution(\n'''00:08\n00:00'''\n) == '3'\nassert solution(\n'''23:59\n00:00\n'''\n) == '3'\nassert solution(\n'''23:59\n23:59\n'''\n) == '1'\nassert solution(\n'''00:00\n05:00\n'''\n) == '2'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:00\\n01:01\\n') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:08\\n00:00\\n') == '3\\n00:08\\n00:09\\n00:00\\n'\nassert solution('00:08\\n00:00\\n') == '3\\n00:08\\n00:09\\n00:00\\n'\nassert solution('00:08\\n00:00\\n') == '3\\n00:08\\n00:09\\n00:00\\n'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '00:00\\n01:01'\n) == '3\\n00:00\\n01:00\\n01:01'\nassert solution(\n    '00:08\\n00:00'\n) == '3\\n00:08\\n00:09\\n00:00'\nassert solution(\n    '00:10\\n00:59'\n) == '0\\n00:10\\n00:10\\n00:10'\nassert solution(\n    '00:13\\n13:13'\n) == '1\\n00:13\\n00:13\\n00:13'\nassert solution(\n    '00:11\\n00:59'\n) == '1\\n00:11\\n00:11\\n00:11'\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''00:00\n01:01''') == '3\\n00:00\\n01:00\\n01:01'\n\nassert solution('''11:01\n00:00''') == '3\\n11:01\\n12:01\\n13:01'\n\nassert solution('''23:15\n23:14''') == '3\\n11:15\\n12:14\\n13:14'\n'''\n"
    },
    {
        "number": 3084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('00:00') == ''\nassert solution('24:00') == ''\nassert solution('00:00\\n00:00') == '3'\nassert solution('00:00\\n02:00') == '2'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(()\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"(()))\") == \"4,8:8,8:\"\nassert solution(\")\") == \"4,4:\"\nassert solution(\"()(\") == \"4,8:8,8:\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('(())') == '4,8:8,8:4,4:4'\nassert solution('()') == '4,4:4,4:4'\nassert solution('(()())') == '4,8:8,8:4,4:4,4:4,4:4'\nassert solution('((()))') == '4,8:8,8:4,4:4,4:4,4:4,4:4,4:4'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"(()\") == \"4,8:8,8:\", \"input was not balanced\"\nassert solution(\")()())\") == \"4,4:4,4:4,4:4,4:\", \"extra chars in input\"\nassert solution(\"))())(()\") == \"4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"()\") == \"4,4:4,4:4,4:4,4:4\"\nassert solution(\"()()\") == \"4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\")()())\") == \"4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"(()\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:4\"\nassert solution(\"((())\") == \"4,8:8,8:4\"\nassert solution(\")()\") == \"4,4:4\"\nassert solution(\"(())(()))\") == \"4,4:4\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '(())'\n) == '4,8:8,8:'\nassert solution(\n    '()'\n) == '4,4:'\nassert solution(\n    ')())('\n) == '4,4:4,4:4,4:'\nassert solution(\n    ')('\n) == '4,4:4,4:'\nassert solution(\n    ')('\n) == '4,4:4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('(())') == '4,8:8,8:', 'Expected `4,8:8,8:`'\nassert solution('()') == '4,4:', 'Expected `4,4:`'\nassert solution('(())()') == '4,8:8,8:8,8:', 'Expected `4,8:8,8:8,8:`'\nassert solution('(()())') == '4,8:8,8:8,8:8,8:', 'Expected `4,8:8,8:8,8:8,8:`'\nassert solution('(()())()') == '4,8:8,8:8,8:8,8:8,8:8,8:', 'Expected `4,8:8,8:8,8:8,8:8,8:8,8:`'\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('(()'\n\nprint(solution('(()'))\nprint(solution('()'))\nprint(solution('()'))\n"
    },
    {
        "number": 3085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\")()(\") == \"(4,2):2,4:2,4:4:2,4:6:4:2,4:8:4:4:2,4:10:4:4:4:4:4:2\"\nassert solution(\"(())(())\") == \"(4,2):2,4:4:4:2,4:6:4:2,4:8:4:4:2,4:10:4:4:4:4:4:2\"\nassert solution(\"()\") == \"(4,4):4,4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(SAMPLE_INPUT1) == SAMPLE_OUTPUT1\nassert solution(SAMPLE_INPUT2) == SAMPLE_OUTPUT2\n\nprint(solution(open(\"input.txt\").read().strip()))\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_lines) == output_lines\n\n\"\"\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '5'\nassert solution('1 2') == '-1'\nassert solution('2 1') == '-1'\nassert solution('3 1') == '-1'\nassert solution('1 1') == '5'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '5'\nassert solution('26 02 03 03 1') == '5'\nassert solution('26 02 03 03 2') == '185'\nassert solution('2 10 16 2 2 2 2 2 4 4 2 2 4 2 2 2 2 4 2 2 2 1 1 1 1') == '127'\nassert solution('2 10 16 2 2 2 2 2 2 4 4 2 2 4 2 2 2 2 2 4 2 2 2 2 2 4 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n26 02 03 03 1\\n') == '5'\nassert solution('1\\n1\\n26 02 03 03 2\\n') == '185'\nassert solution('1\\n1\\n11 01 02 03 04\\n') == '-1'\nassert solution('1\\n1\\n01 02 03 03 1\\n') == '-1'\nassert solution('1\\n1\\n00 11 02 03 03 1\\n') == '-1'\n"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5'\n'''"
    },
    {
        "number": 3086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\") == \"2 3 4 1\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"3 4 1 2\") == \"2 3 4 1\"\nassert solution(\"4 5 2 4 3\") == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2''') == '5 6 1 2 3 4'\nassert solution('''6 3\n4 5 6 7 1 2''') == 'Impossible'\n''') == '5 6 1 2 3 4'"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n3 4 1 2\\n\") == \"5 6 1 2 3 4 \\n\"\nassert solution(\"4 2\\n1 2 3 4\\n\") == \"2 3 4 1 \\n\"\nassert solution(\"4 2\\n1 3 2 4\\n\") == \"Impossible \\n\"\nassert solution(\"4 2\\n1 3 2 4\\n\") == \"Impossible \\n\"\nassert solution(\"4 1\\n1 3 2 4\\n\") == \"Impossible \\n\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4 '\nassert solution('''4 2\n3 4 1 2\n''') == '2 3 4 1'\nassert solution('''5 1\n5 5\n''') == '1 2 3 4 5'\nassert solution('''4 1\n1 1\n''') == '1 2 3 4'\nassert solution('''3 2\n1 1 1\n''') == '1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n6 2\n3 4 5 6 1 2\n\"\"\") == \"\"\"\n5 6 1 2 3 4 \n\"\"\"\n\nassert solution(\n\"\"\"\n4 2\n3 4 1 2\n\"\"\") == \"\"\"\n2 3 4 1\n\"\"\"\n\nassert solution(\n\"\"\"\n5 2\n1 3 1 5 1\n\"\"\") == \"\"\"\nImpossible\n\"\"\"\n\nassert solution(\n\"\"\"\n10 2\n3 4 5 6 1 2\n\"\"\") == \"\"\"\n2 3 4 5 6 1 2\n\"\"\"\n\nassert solution(\n\"\"\"\n8 10\n2 3 4 5 6 7 8 9\n\"\"\") == \"\"\"\n1 2 3 4 5 6 7 8\n\"\"\""
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[2:].strip()\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"201\"\n\"\"\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1234 5678\") == \"345678 1234\"\nassert solution(\"343434\") == \"343434\"\nassert solution(\"123 456 78\") == \"123456 78\"\nassert solution(\"100 1000 1000 10000001\") == \"10000001 10000\"\nassert solution(\"100 100 100 100 100100\") == \"100100100100100100\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[::-1]\nprint(solution(stdin))\n'''\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1234 3\") == \"3234\"\nassert solution(\"1234 2\") == \"1324\"\nassert solution(\"234 8\") == \"888\"\nassert solution(\"9473485313\") == \"9473485313\"\nassert solution(\"635690314\") == \"63590314\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('stdin') == '201'"
    },
    {
        "number": 3088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679'\n'956570544519326070822121901241129199028836797570892386181640625') == '314159265358979323846264338327950288419716939937510582097494459230781640625'\nassert solution('001110') == '111010'\nassert solution('2775777') == '7879777'\nassert solution('0000') == '0000'\nassert solution('1337') == '1337'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''0 0\n0 1\n1 1'''\n) == '0.666666666666667'\nassert solution(\n'''0 0\n0 1\n1 1\n1 0'''\n) == '0.733333333333333'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"0 0\\n0 1\\n1 1\\n1 0\"\n) == \"0.666666666666667\"\nassert solution(\n\"3\\n0 0\\n1 1\\n2 0\"\n) == \"0.733333333333333\"\nassert solution(\n\"4\\n0 0\\n0 1\\n1 1\\n1 0\"\n) == \"0.666666666666667\"\nassert solution(\n\"5\\n0 0\\n0 1\\n1 1\\n1 0\"\n) == \"0.733333333333333\"\nassert solution(\n\"6\\n0 0\\n0 1\\n1 1\\n1 0\"\n) == \"0.666666666666667\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0\n0 1\n1 1\n1 0''') == '0.666666666666667'\nassert solution('''1 1\n1 0''') == '1.333333333333334'\nassert solution('''2 2\n1 1\n2 0''') == '1.333333333333334'\nassert solution('''5 5\n0 0\n1 1\n2 2\n3 3\n4 4\nSample Input 3:\n5\n0 0\n0 1\n1 1\n1 0\n1 2\nSample Output 3:\n0.8\n''') == '0.8'\nassert solution('''7 7\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\nSample Input 4:\n20\n-10 10\n0 0\n10 10\n-5 -10\n-5 5\n1 1\n5 5\n5 -10\n-5 -5\nSample Output 4:\n10.0\n''') == '10.0'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.733333333333333\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '0.666666666666667'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '0.666666666666667'\nassert solution('3') == '0.5'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.666666666666667\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0.666666666666667'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n0 0\n0 1\n1 1\n1 0''') == '0.666666666666667'\nassert solution('''3\n0 0\n1 1\n2 0''') == '0.733333333333333'\nassert solution('''3\n1 1\n2 0\n0 0''') == '0.5'\nassert solution('''3\n1 2\n2 3\n0 0''') == '0.5'\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '0.5'\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n0 0\\n0 1\\n1 1\\n1 0\\n3') == '0.666666666666667'\nassert solution('4\\n0 0\\n0 1\\n1 1\\n1 0\\n3') == '0.733333333333333'\nassert solution('2\\n0 0\\n1 1\\n2 0\\n3\\n4 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19') == '0.9257692307692308'\nassert solution('5\\n0 0\\n0 1\\n1 1\\n1 0\\n4') == '0.75'\nassert solution('10\\n0 0\\n0 1\\n1 1\\n1 0\\n4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19') == '1.0'\nprint(solution('2\\n0 0\\n1 1\\n2 0\\n3\\n4 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19'))\n"
    },
    {
        "number": 3089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.666666666666667\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2 3 100\n10 1 10\n10 1 10\n\"\"\") == \"21\"\nassert solution(\n\"\"\"\n2 3 100\n10 1 10\n10 1 10\n\"\"\") == \"22\"\nassert solution(\n\"\"\"\n2 3 100\n10 1 3\n0 1 10\n\"\"\") == \"9\"\nassert solution(\n\"\"\"\n3 3 100\n1 1 2\n1 1 2\n1 1 2\n\"\"\") == \"6\"\nassert solution(\n\"\"\"\n3 3 100\n1 1 2\n1 1 2\n1 1 2\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '9'\n\"\"\"\n\nN, M, K = list(map(int, stdin.readline().split()))\n\ngrid = []\nfor i in range(N):\n    grid.append(list(map(int, stdin.readline().split())))"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20\\n') == '9'\nassert solution('2 3 4\\n10 1 3\\n0 1 20\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1 10\\n10 1 10\\n0 1 10\\n0 1 10\\n10 1"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3 4\n10 1 3\n0 1 20''') == '9'\nassert solution('''2 3 50\n10 1 10\n10 1 10''') == '21'\nassert solution('''6 4 7\n10 1 10\n10 1 10\n10 1 10\n10 1 10\n10 1 10''') == '24'\nassert solution('''5 3 3\n10 1 10\n10 1 10\n10 1 10\n10 1 10\n10 1 10''') == '14'\nassert solution('''7 4 9\n10 1 10\n10 1 10\n10 1 10\n10 1 10\n10 1 10\n10 1 10\n10 1 10''') == '30'\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 3 4\") == \"9\"\nassert solution(\"2 3 4\") == \"9\"\nassert solution(\"2 3 4\") == \"9\"\nassert solution(\"2 3 4\") == \"9\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 2 7 -\n1 1 1 2\n''') == '2'\n\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '4'\n\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '8'\n\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '2'\n\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '4'"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 2 7 -\") == \"2\"\nassert solution(\"6 2 7 -\") == \"4\"\nassert solution(\"5 2 7 +\") == \"2\"\nassert solution(\"6 2 7 +\") == \"4\"\nassert solution(\"5 2 7 *\") == \"2\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution(\n'''9 2 7 -\n1 1 1 2\n''') == '4'\nassert solution(\n'''9 2 7 -\n1 1 1 2\n''') == '5'\nassert solution(\n'''8 2 8 -\n1 1 1 2\n''') == '4'\nassert solution(\n'''8 2 9 -\n1 1 1 2\n''') == '5'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"8 2 7 -\"\n    \"1 1 1 2\"\n    ) == \"2\"\n\nassert solution(\n    \"9 2 7 -\"\n    \"1 1 1 2\"\n    ) == \"4\"\n\nassert solution(\n    \"9 2 4 *\"\n    \"1 1 1 2\"\n    ) == \"10\"\n\nassert solution(\n    \"9 2 4 /\"\n    \"1 1 1 2\"\n    ) == \"8\"\n\nassert solution(\n    \"9 4 3 +\"\n    \"1 1 1 2\"\n    ) == \"8\""
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '4'\nassert solution('''10 2 7 -\n1 1 1 2\n''') == '7'\nassert solution('''11 2 7 -\n1 1 1 2\n''') == '9'\nassert solution('''12 2 7 -\n1 1 1 2\n''') == '12'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'\nassert solution('0 1 1 2') == '4'\nassert solution('0 1 1 2') == '4'\nassert solution('9 2 7 -') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 2 7 -\") == \"2\"\nassert solution(\"9 2 7 -\") == \"4\"\n\"\"\""
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '''8 2 7\n1 1 1 2\n'''\n) == '2'\n\nassert solution(\n    '''9 2 7\n1 1 1 2\n'''\n) == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3 7 -''') == '2'\nassert solution('''4 5 2 *''') == '16'\nassert solution('''3 3 2 *''') == '6'\nassert solution('''2 4 3 *''') == '5'\nassert solution('''2 4 5 *''') == '24'\n"
    },
    {
        "number": 3091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8 2 7 -\") == \"2\"\nassert solution(\"9 2 7 -\") == \"4\"\nassert solution(\"8 4 4 +\") == \"2\"\nassert solution(\"9 2 7 -\") == \"4\"\nassert solution(\"8 6 4 +\") == \"5\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3\\n4\\n3\\n1'\nassert solution('''1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n1 5 2 3 4\n5 2 3 4 1''') == '2\\n3\\n2\\n1'\nassert solution('''1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n1 4 8''') == '2\\n3\\n2\\n1'\nassert solution('''1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n1 4 8''') == '2\\n3\\n2\\n1'\nassert solution('''1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n1 4 8''') == '2\\n3\\n2\\n1'\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n') == '3\\n4\\n3\\n1\\n'\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n1\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '3\\n4\\n3\\n2\\n1'\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\"\nassert solution(\"4 2\\n1 2 3\\n2 3 4\") == \"2\\n3\"\nassert solution(\"4 4\\n1 2 3\\n2 3 4\\n1 4 8\") == \"3\"\nassert solution(\"4 4\\n1 2 3\\n2 3 4\\n1 4 5\") == \"2\\n3\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n2\\n3\\n2\""
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3\\n4\\n3\\n2\\n1'\nassert solution('''2 3\n1 2 5\n2 3 5''') == '3\\n4\\n3'\nassert solution('''1 1\n1 1 1''') == '1'\nassert solution('''1 2\n1 2 1''') == '1'\nassert solution('''2 2\n1 2 1\n1 2 1''') == '1'\n"
    },
    {
        "number": 3092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3\\n4\\n3\\n2\\n1'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '2\\n3\\n2\\n1'\nassert solution('''7 7\n1 7 1\n1 2 1\n1 3 1\n2 4 1\n2 5 1\n3 6 1\n3 7 1\n4 8 1\n4 9 1\n4 10 1\n5 11 1\n5 12 1\n6 13 1\n7 14 1''') == '15\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"24\"\nassert solution(\"3 4\") == \"24\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n2 1\\n\") == \"6\"\nassert solution(\"10 10\\n4 8 3 6 9 9 7 4 9 7 6 8 8 6 9 5 4 1\\n\") == \"424\"\n\nprint(solution(stdin.readline().strip()))\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"2 3 4 5\") == \"6\"\nassert solution(\"3 4 5\") == \"24\"\nassert solution(\"2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 3''') == '6'\nassert solution('''2 3''') == '12'\nassert solution('''3 4''') == '192'\nassert solution('''2 4''') == '48'\nassert solution('''1 2''') == '1'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n2 1''') == '6'\nassert solution('''3 4\n2 3 1''') == '24'\nassert solution('''3 3\n2 3 1''') == '42'\nassert solution('''7 8\n2 3 1''') == '2184862'\nassert solution('''5 5\n5 2 6 2''') == '2109060'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4\\n2 3 1') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n2 1''') == '6'\nassert solution('''3 4\n2 3 1''') == '24'\nassert solution('''2 4\n2 3 1''') == '24'\nassert solution('''2 4\n2 3''') == '12'\nassert solution('''5 4\n2 3 1 4 5''') == '1260'\n"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3\n2 1''') == '6'\nassert solution('''3 4\n2 3 1''') == '24'\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == '2'\nassert solution(\"3 4\") == '24'\nassert solution(\"3 5\") == '0'\nassert solution(\"1 1\") == '1'\nassert solution(\"2 3\") == '6'\n\nprint('Passed')\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2\n1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"5\n3 4 5 1 2\n\"\"\") == \"1\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('2\\n2 2\\n') == '3'\nassert solution('2\\n3 2\\n') == '1'\nassert solution('2\\n4 2\\n') == '2'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n1\\n') == '1'\nassert solution('5\\n3 4 5 1 2') == '1'\nassert solution('10\\n1 4 7 2 5 9 6 10') == '1'\nassert solution('10\\n3 4 5 1 2') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open('test_cases/track_hop_hop.txt', 'r').read()) == '2'\nassert solution(open('test_cases/track_hop_dance.txt', 'r').read()) == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('5\\n3 4 5 1 2') == '1'\nassert solution('100\\n4950 5280 11370 3366 4116 4748 2510 8600 4828 4716 5557 10137 5640 4896 4815 7320 4034 9705 9863 9025 7395 4877 4859 4817 4618 5342 3712 9003 955 2414 4674 4223 8190 9652 6761 4807 4407 4945 5018 5061 5228 4873 9892 9500 7808 9092 9445 7690 4841 4911 4897 4160 9184 9535 9139 9056 9105 9263 8559 4937 4867 4987 4848 4949 6735 4837 5257 4618 4158 5238 3446 6128 6856 9042 9159 914 8336 9408 974 9278 9079 7476 953 9459 9232 9762 9429 9374 9330 9098 9637 9092 9147 9837 9822 9862 9709 9458 9845 9926 9810 9597 9786 9983 9844 9961 9837 9882 9984 9922 9811 9694 9901 9666 9967 9849 9583 9937 9659 9797 9850 9933 9821 9884 9843 9854 9903 9690 9961 9974 9942 9858 9754 9882 9857 9839 9792 9798 9962 9952 9811 9860 9805 9910 9896 9974 9938 9849 9754 9886 9806 9756 9762 9692 9857 9805 9945 9913 9842 9855 9853 9932 9791 9944 9865 9822 9839 9794 9804 9949 9830 9883 9925 9834 9820 9900 9810 9856 9792 9804 9903 9893 9960 9941 9858 9822 9790 9847 9819 9912 9848 9940 9926 9847 9817 9792 9805 9957 9944 9813 9864 9796 9862 9854 9950 9914 9820 9859 9855 9822 9790 9942 9822 9841 9839 9797 9805 9934 9794 9806 9796 9810 9893 9923 9822 9841 9824 9859 9839 9808 9796 9847 9819 9947 9804 9804 9849 9830 9815 9845 9821 9822 9839 9816 9839 9814 9837 9825 9824 9812 9815 9845 9843 9923 9815 9814 9837 9822 9844 9959 9841 9859 9820 9848 9823 9825 9813 9845 9835 9818 9835 9845 9819 9845 9843 9821 9834 9836 9835 9845 9823 9815 9843 9832 9844 9834 9822 9825 9822 9812 9812 9843 9833 9813 9814 9818 9829 9829 9838 9834 9817 9826 9837 9830 9826 9822 9822 9839 9819 9830 9820 9845 9832 9836 9820 9837 9834 9829 9833 9829 9844 9822 9825 9840 9826 9834 9845 9839 9839 9829 9814 9829 9837 9819 9829 9822 9812 9832 9829 9839 9837 9825 9814 9829 9822 9829 9835 9817 9834 9818 9822 9821 9812 9829 9822 9829 9821 9825 9820 9839 9815 9814 9829 9841 9837 9822 9827 9834 9819 9822 9836 9820 9834 9827 9836 9821 9836 9822 9825 9814 9829 9822 9834 9837 9822 9845 9814 9822 9827 9830 9835 9822 9819 9834 9833 9815 9828 9819 9830 9830 9817 9819 9829 9823 9822 9820 9812 9829 9837 9832 9834 9835 9839 9837 9839 9833 9827 9829 9822 9827 9830 9827 9839 9841 9837 9830 9813 9841 9838 9830 9822 9834 9821 9835 9825 9817 9829 9834 9824 9834 9829 9829 9819 9829 9830 9829 9819 9833 9829 9830 9819 9821 9829 9832 9823 9829 9824 9829 9832 9838 9835 9818 9818 9823 9836 9821 9829 9820 9825 9822 9818 9825 9815 9829 9829 9829 9832 9832 9824 9834 9829 9823 9829 9839 9834 9820 9832 9822 9829 9829 9835 9837 9821 9820 9829 9839 9827 9829 9826 9829 9828 9822 9835 9818 9822 9837 9829 9830 9822 9829 9827 9827 9828 9837 9829 9831 9831 9827 9822 9834 9829 9829 9821 9836 9824 9829 9829 9830 9830 9835 9825 9837 9835 9829 9830 9827 9818 9819 9830 9829 9830 9822 9837 9827 9835 9827 9830 9829 9829 9823 9820 9829 9825 9827 9828 9837 9829 9839 9824 9823 9822 9829 9836 9834 9820 9834 9827 9829 9829 9821 9831 9829 9839 9829 9837 9829 9816 9829 9830 9834 9827 9832 9820 9829 9837 9822 9827 9829 9829 9829 9829 9834 9829 9831 9827 9830 9829 9821 9829 9829 9829 9834 9830 9822 9829 9839 9829 9832 9829 9822 9830 9824 9830 9827 9832 9828 9828 9822 9829 9829 9824 9835 9830 9825 9835 9830 9820 9827 9829 9829 9825 9826 9820 9829 9822 9827 9829 9825 9830 9832 9818 9822 9829 9837 9820 9821 9830 9829 9830 9818 9819 9827 9829 9829 9830 9818 9825 9820 9822 9832 9818 9829 9823 9829 9829 9821 9833 9827 9824 9829 9829 9830 9827 9830 9825 9837 9825 9829 9821 9824 9836 9829 9829 9822 9830 9829 9839 9829 9822 9829 9824 9839 9827 9829 9826 9829 9829 9829 9829 9833 9827 9834 9829 9833 9827 9830 9829 9827 9823 9829 9831 9827 9829 9827 9837 9819 9829 9822 9829 9829 9839 9829 9830 9829 9829 9824 9829 9829 9830 9829 9825 9832 9829 9830 9825 9834 9829 9829 9819 9829 9834 9829 9831 9822 9835 9827 9821 9829 9839 9827 9821 9829 9830 9820 9822 9822 9829 9837 9822 9829 9827 9829 9829 9830 9825 9825 9823 9829 9830 9825 9829 9822 9829 9834 9829 9830 9829 9830 9835 9825 9829 9839 9839 9821 9829 9824 9819 9829 9829 9839 9829 9822 9829 9824 9827 9829 9829 9829 9829 9827 9819 9829 9830 9829 9822 9829 9834 9829 9829 9837 98"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"2\\n1 2\\n1 3\") == \"2\"\nassert solution(\"2\\n1 3\") == \"0\"\nassert solution(\"2\\n1 3\\n3 4\") == \"0\"\nassert solution(\"2\\n1 3\\n3 4\\n4 5\") == \"2\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n2\\n2\\n2\\n2') == '2'\nassert solution('5\\n3 4 5 1 2') == '1'\nassert solution('1\\n2\\n2\\n2\\n2\\n2') == '2'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 1\\n2 1 2\\n1 1 1') == '9'\nassert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3') == '9'\nassert solution('2 3\\n1 3 1\\n2 1 2\\n1 1 1') == '4'\nassert solution('2 2\\n1 1 1\\n1 1 1') == '0'\nassert solution('2 2\\n1 1 1\\n1 1 1\\n1 1 1') == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9') == '4'\nassert solution('1 3 1\\n2 1 2\\n1 1 1') == '9'\nassert solution('2 3\\n1 3 1\\n2 1 2\\n1 1 1') == '4'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '0'\nassert solution('1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\n\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\"\nassert solution(\n\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\"\nassert solution(\n\"5 3\\n1 3 1 4 5\\n2 1 2 3 4\\n5 1 5 2 3\\n\") == \"4\"\nassert solution(\n\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1\\n1 1 1\\n1 1 1\\n') == '1'\nassert solution('2 2\\n1 3 1\\n2 1 2\\n1 1 1\\n') == '4'\nassert solution('2 1\\n1 3 1\\n2 1 2\\n1 1 1\\n') == '3'\nassert solution('3 1\\n1 3 1\\n2 1 2\\n1 1 1\\n') == '6'\nassert solution('3 2\\n1 3 1\\n2 1 2\\n1 1 1\\n') == '9'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n1\") == \"1\"\nassert solution(\"3\\n3\\n1\") == \"1\"\nassert solution(\"3\\n3\\n1\") == \"1\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3') == '9'\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1') == '4'\nassert solution('2 3\\n1 1 1\\n2 1 2') == '4'\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1') == '4'\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n1 1 1') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''10 10\n-1 -2 3 -4 5 -6 7 -8 9 -10 11\n-12 -13 -14 -15 16 -17 18 -19 20\n-21 -22 -23 -24 25 -26 27 -28 29\n-30 -31 -32 -33 34 -35 36 -37 38 -39\n-40 -41 -42 -43 44 -45 46 -47 48 -49''') == '0'\nassert solution('''10 10\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''10 10\n1 3 1\n2 1 2\n1 1 1''') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\nassert solution('''2 2\n1 2\n2 3''') == '1'\nassert solution('''4 4\n1 5 1 4 1\n2 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1''') == '4'\nassert solution('''5 5\n1 1 1 1 1 1\n2 2 2 2 2 2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '0'\nassert solution('''8 8\n1 2 4 4 4 4 4 4 4 4\n4 4 1 2 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''3 3\n-1 1 -1\n-1 -1 -1\n-1 -1 -1''') == '0'\nassert solution('''4 4\n2 1 3 4\n6 3 -2 -2\n0 5 -3 3\n-2 -3 -2''') == '2'\nassert solution('''5 5\n-1 2 -3 -2 -3 -2\n1 -2 -2 -3 -2 2\n1 -1 -1 -2 -2 -1\n1 1 1 -1 -1 -1\n1 1 1 1 -1 1''') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''3 3\n1 3 1\n2 1 2\n1 1 1''') == '4'\nassert solution('''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\nassert solution('''3 3\n1 4 10\n5 2 6\n11 1 3''') == '9'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\n\nassert solution('''\n6\n2 1 3 4 5 6\n1 2\n1 3\n2 4\n1 5\n3 4\n''') == '3'\n\nassert solution('''\n6\n2 1 3 4 5 6\n1 2\n1 3\n2 4\n1 5\n3 4\n''') == '3'\n\nassert solution('''\n5\n4 3 2 1 4\n1 2\n1 3\n2 4\n1 4\n''') == '3'\n\nassert solution('''\n6\n4 3 2 1 4 5 6\n1 2\n1 3\n2 4\n1 5\n3 4\n1 6\n3 5\n''') == '6'"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('3') == '0'\nassert solution('2 3 1') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '6'\nassert solution('1 2 3') == '3'\nassert solution('2 1 3') == '3'\nassert solution('2 1 3 4 5 6') == '3'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '3'\nassert solution('''\n4\n2 1 3 4\n1 2\n1 3\n2 4\n''') == '3'\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3'\nassert solution('''\n10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\\\n4\n2 1 3 4\n1 2\n1 3\n3 4\n\"\"\") == \"6\"\nassert solution(\"\"\"\\\n3\n3 4 5\n1 2\n1 3\n2 4\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\"\nassert solution(\"1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n17\\n19\\n21\\n23\\n25\\n27\\n29\\n31\\n33\\n35\\n37\\n39\\n41\\n43\\n45\\n47\\n49\\n51\\n53\\n55\\n57\\n59\\n61\\n63\\n65\\n67\\n69\\n71\\n73\\n75\\n77\\n79\\n81\\n83\\n85\\n87\\n89\\n91\\n93\\n95\\n97\\n99\\n\") == \"1\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6'\nassert solution('2\\n1 2\\n1 3') == '3'\nassert solution('2\\n2 1\\n2 2') == '2'\nassert solution('2\\n1 2\\n2 3') == '0'\nassert solution('3\\n1 2 3\\n2 1\\n3 2') == '2'\n"
    },
    {
        "number": 3096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4\") == \"6\"\nassert solution(\"1 2 3 4 5 6\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"0\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(TEST_INPUT) == TEST_OUTPUT\n\nprint(solution(INPUT))\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1\\n2') == '3'\nassert solution('2\\n1') == '3'\nassert solution('5\\n2\\n1\\n4\\n6') == '9'\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(test_input) == test_output\nprint(solution(stdin))\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 10\") == \"18\\n8\\n\"\nassert solution(\"1\\n1 10\\n1 20\") == \"265\\n25\\n10\\n\"\nassert solution(\"1\\n1 10\\n1 20\\n1 30\") == \"265\\n25\\n10\\n\"\nassert solution(\"1\\n1 10\\n1 10\\n1 10\") == \"265\\n25\\n10\\n\"\nassert solution(\"1\\n1 10\\n1 10\\n1 10\\n1 10\") == \"265\\n25\\n10\\n\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10\\n5 8') == '18\\n8'\nassert solution('2\\n1 10\\n5 8') == '265\\n25\\n10'\nassert solution('2\\n17 144\\n121 121\\n89 98') == '265\\n25\\n10'\n\n'''"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10\\n5 8') == '18\\n8'\nassert solution('1 10\\n5 8\\n2 3\\n5 1') == '265\\n25\\n10'\nassert solution('1 10\\n5 8\\n2 3\\n5 1\\n8 2\\n9 2\\n4 1') == '265\\n25\\n10'"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''1 10\n5 8\n'''\n) == '18\\n8\\n'\n\nassert solution(\n'''2\n1 10\n5 8\n'''\n) == '265\\n25\\n10\\n'\n\nassert solution(\n'''3\n17 144\n121 121\n89 98\n'''\n) == '265\\n25\\n10\\n'\n\nprint(solution('''1000\n30 10\n'''))"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"2\\n1\\n\") == \"2\"\nassert solution(\"3\\n1\\n\") == \"3\"\nassert solution(\"4\\n1\\n\") == \"3\"\nassert solution(\"5\\n1\\n\") == \"5\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n2\n1 10\n5 8\n''') == '''\\\n18\n8\n'''\n\nassert solution('''\\\n1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1"
    },
    {
        "number": 3097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n1 10\n5 8\n''') == '18\\n8\\n'\nassert solution('''3\n17 144\n121 121\n89 98\n''') == '265\\n25\\n10\\n'\nassert solution('''1\n1 10\n5 8\n''') == '8\\n'\nassert solution('''2\n1 10\n5 8\n''') == '18\\n8\\n'\nassert solution('''3\n17 144\n121 121\n89 98\n''') == '265\\n25\\n10\\n'\n'''\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0.50000000'\nassert solution('2 2') == '1.0000000'\nassert solution('5 5') == '12.50000000'\nassert solution('3 3') == '0.1428571428571428'\nassert solution('1 1') == '0.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0\") == \"0.50000000\"\nassert solution(\"1 1\") == \"0.50000000\"\nassert solution(\"2 1\") == \"0.50000000\"\nassert solution(\"1 0\") == \"0.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0\\n1 1\\n2 1\\n1 0\\n') == '0.50000000'\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == '12.50000000'\nassert solution('0 0\\n1 1\\n2 1\\n1 0\\n') == '0.50000000'\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == '12.50000000'\nassert solution('0 0\\n1 1\\n2 1\\n1 0\\n') == '0.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == '12.50000000'\nassert solution('''3 3\n-3 -2\n-2 -1\n-1 0\n0 1\n1 2\n2 3''') == '0.50000000'\nassert solution('''3 3\n-3 -2\n-2 -1\n-1 0\n0 1\n1 2\n2 3''') == '0.50000000'\nassert solution('''3 3\n0 1\n1 2\n2 3\n0 -1\n-1 -2\n-2 -3\n-3 -4\n-4 -5\n-5 -0\n-5 -2\n-4 -3\n-3 -2\n-2 -1\n-1 0\n0 1\n1 2\n2 3''') == '0.50000000'\n'''\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0\\n1 1\\n2 1\\n1 0\\n') == '0.50000000'\nassert solution('4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n') == '0.50000000'\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == '12.50000000'\nassert solution('7 8\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n') == '60.00000000'\nassert solution('7 8\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n') == '60.00000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 2\\n-1 0\\n0 -1\") == 0.5\nassert solution(\"2 3\\n1 0\\n0 1\") == 0.5\nassert solution(\"2 3\\n1 1\\n0 1\") == 0\nassert solution(\"2 3\\n1 0\\n0 1\\n1 0\") == 0\nassert solution(\"2 3\\n1 0\\n1 1\\n0 1\") == 0\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4 3\n0 0\n1 1\n2 1\n1 0\n\"\"\"\n) == \"0.50000000\"\n\nassert solution(\n\"\"\"\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n\"\"\"\n) == \"12.50000000\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\") == 0.0\nassert solution(\"4 3\") == 0.5\nassert solution(\"1 1\") == 1.0\nassert solution(\"0 0\\n0 1\\n1 1\\n0 -1\\n-1 1\\n0 -1\\n-1 0\\n-1 -1\\n0 -1\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n-2 4\\n3 -1\") == 12.5\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n0 0\n1 1\n2 1\n1 0''') == '0.50000000'\nassert solution('''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == '12.50000000'\nassert solution('''5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4''') == '12.50000000'\nassert solution('''6 7\n2.000000004 6.000000005\n6.000000004 2.000000003\n6.000000005 6.000000004\n2.000000003 1.000000002\n1.000000002 1.000000003\n1.000000004 1.000000002''') == '1.000000002'\nassert solution('''6 7\n2.000000004 6.000000005\n6.000000004 2.000000003\n6.000000005 6.000000004\n2.000000003 1.000000002\n1.000000002 1.000000003\n1.000000004 1.000000002\n1.000000002 1.000000003''') == '1.000000002'\n"
    },
    {
        "number": 3098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 3\n0 0\n1 1\n2 1\n1 0\n''') == '0.50000000'\nassert solution(\n'''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == str(2)\n\n'''\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\\n') == '1'\nassert solution('4 2 2\\n0 1\\n0 1\\n2 1\\n2 3\\n\\n') == '0'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n2\\n') == '1'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n2 3\\n\\n') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3\") == \"2\"\nassert solution(\"4 1 3\") == \"2\"\nassert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\"\nassert solution(\"3 2 1\\n0 1\\n1 2\\n2 1\\n2 3\\n\") == \"3\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n1\\n') == '1'\nassert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\n4\\n1\\n0\\n2\\n3\\n2\\n1\\n4\\n0\\"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''5 1 0\n0 2\n0 1\n1 2\n2 3\n2 4\n3 4\n1\n''') == '1'\nassert solution('''3 4 5\n0 1\n0 2\n1 2\n1 3\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n1\n''') == '4'\nassert solution('''2 2 2\n0 1\n1 2\n2 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution('''10 2 6\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n2 3\n3 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n''') == '10'\nassert solution('''10 0 3\n0 2\n0 1\n2 1\n2 3\n''') == '2'\nassert solution('''10 0 3\n0 2\n0 1\n2 3\n''') == '2'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 1 3\") == \"2\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '0'\nassert solution('''3 5 3\n1 2\n1 3\n2 3\n1\n1 3\n2 3\n''') == '1'\nassert solution('''3 5 2\n1 2\n1 3\n2 3\n1\n1 3\n2 3\n''') == '0'\n"
    },
    {
        "number": 3099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('0 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n') == '1'\nassert solution('0 1 3\\n0 2\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('0 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n') == '1'\nassert solution('0 1 3\\n0 2\\n0 1\\n1 2\\n2 3\\n1') == '2'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\nassert solution(\"5 3 2\") == \"0\"\nassert solution(\"10 3 2\") == \"0\"\nassert solution(\"10 5 4\") == \"1\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nprint('Testcases passed')\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1') == \"6\"\nassert solution('2 2 2') == \"30\"\nassert solution('1 2 1') == \"6\"\nassert solution('2 2 2') == \"30\"\nassert solution('2 2 1') == \"0\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 2') == '30'\nassert solution('1 2 1') == '6'\nassert solution('2 2 1') == '0'\nassert solution('1 2 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nassert solution('100 100 100') == '0'\nassert solution('1 0 0') == '0'\nassert solution('20 20 10') == '0'\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'"
    },
    {
        "number": 3100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2\n1 9999999\n''') == 'impossible'\nassert solution(\n'''\n3\n2020 2020 2020\n''') == '2021 2020 2020'\nassert solution(\n'''\n3\n76567895\n''') == '76678679'\nassert solution(\n'''\n10\n92290082334720\n''') == '0'\nassert solution(\n'''\n4\n654321\n''') == '12345'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3') == 'impossible'\nassert solution('1\\n2') == '2021 2020'\nassert solution('1\\n4') == '20201201'\nassert solution('1\\n5') == '20211201'\nassert solution('1\\n6') == '20201201'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(s=\"2020 2020 2020\") == \"2020 2021 2020\"\nassert solution(s=\"1 9999999\") == \"impossible\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2020 2020 2020') == '2021 2020 2020'\nassert solution('1 9999999') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n' + '999999') == 'impossible'\nassert solution('1\\n' + '9999991') == 'impossible'\nassert solution('1\\n' + '9999999') == '1\\n' + '9' * 999 + '9'\nassert solution('1\\n' + '123456789') == '123456789'\nassert solution('1\\n' + '2' * 1000) == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output\n\"\"\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == answer(stdin)\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\nprint('Test cases passed')\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\n\n'''\n\nfrom math import ceil, log"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\n\n\"\"\""
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('30 70') == '11'\nassert solution('30 70') == '2'\nassert solution('66 69') == '2'\nassert solution('66 69') == '2'"
    },
    {
        "number": 3102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\n\nassert solution('0 0') == '0'\nassert solution('20 2') == '0'\nassert solution('40 44') == '0'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('2 2 0') == '2'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(io.read_all()) == expected\nprint(expected)\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'begin repairs'\nassert solution('1 1 1') == '4'\nassert solution('2 2 0') == '2'\nassert solution('3 3 1') == '4'\nassert solution('4 4 2') == '8'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n\"\"\"\nimport sys\nsys.path.append('/Users/zf/Develop/git_projects/dp/')\nfrom dp.test import run_exercise\nfrom dp.utils import set_output, grader"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 0\n>@\n>~''') == \"2\"\nassert solution('''3 5 1\n>>@<<\n>~#~<\n>>>>~\n''') == \"4\"\nassert solution('''3 5 1\n>>>>@<<\n>~#~<\n>>>>~\n''') == \"4\"\nassert solution('''1 1 1\n~''') == \"begin repairs\"\nassert solution('''1 1 1\n~''') == \"begin repairs\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3 0\") == \"\"\nassert solution(\"1 1 0\") == \"\"\nassert solution(\"2 2 0\") == \"\"\nassert solution(\"0 0 1\") == \"\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n\nprint(solution('143175=120'))\nprint(solution('5025=30'))\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n\nprint('solution:', solution('1234567890'))\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\nassert solution('3003=3004') == '3+00+03=3004'\nassert solution('2055=30') == '20+55=30'\nassert solution('1429=30') == '14+29=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\nassert solution('143836=5535') == '14+3+8+36=5535'\nassert solution('9003=01056') == '9+9+9+03=01056'\nassert solution('1015=5050') == '1+1+5=5050'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\nprint('Test case 1: Passed')\n\nassert solution(input()) == output\nprint('Test case 2: Passed')\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(143175=120) == \"14+31+75=120\"\nassert solution(5025=30) == \"5+025=30\"\nassert solution(12345=120) == \"123+45=120\"\nassert solution(12345=120) == \"123+45=120\"\nassert solution(12345=120) == \"123+45=120\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(143175=120) == \"14+31+75=120\"\nassert solution(5025=30) == \"5+025=30\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\nassert solution('1201946=20519') == '1201946=20519'\n"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n\nprint(solution(input()))"
    },
    {
        "number": 3104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution(\n'''4\n1\n1\n1\n1\n''') == '-1'\nassert solution(\n'''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'\nassert solution(\n'''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution('''\n7\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\nassert solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'\nassert solution('''\n9\n1\n2\n3\n4\n5\n6\n7\n8\n1\n''') == '-1'\nassert solution('''\n7\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n1\\n') == '8 1\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n') == '8 1\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n') == '8 1\\n'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n8\n1\n3\n2\n4\n1\n5\n2\n4\n\"\"\") == \"1 2\"\nassert solution(\n\"\"\"\n8\n1\n2\n3\n4\n5\n6\n7\n1\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n6\n1\n2\n2\n3\n3\n4\n4\n\"\"\") == \"2 2\"\nassert solution(\n\"\"\"\n2\n1\n2\n2\n3\n3\n4\n4\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n2\n1\n2\n2\n2\n2\n3\n3\n4\n4\n\"\"\") == \"2 2\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2\\n'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\nassert solution('''8\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '-1'\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n''') == '-1\\n'\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n1\n''') == '8 7\\n'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1 2'\nassert solution('2 4 5 7 8') == '2 1'\nassert solution('4 2 3 1 1 4 4') == '3 1'\nassert solution('3 2 4 4 1 2') == '4 2'\nassert solution('3 4 4 5 5 5 4 4') == '4 1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1\\n2') == None\nassert solution('1\\n2\\n3') == None\nassert solution('1\\n2\\n3\\n4') == None\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n4\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n4\n''') == '-1'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n3\n''') == '1 2'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n3\n''') == '-1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n8\n1\n3\n2\n4\n1\n5\n2\n4\n\"\"\") == \"1 2\"\n\nassert solution(\n\"\"\"\n8\n1\n2\n3\n4\n5\n6\n7\n1\n\"\"\") == \"-1\"\n\nassert solution(\n\"\"\"\n8\n1\n2\n3\n4\n5\n6\n7\n7\n\"\"\") == \"7 7\"\n\nassert solution(\n\"\"\"\n8\n1\n1\n2\n3\n4\n5\n6\n7\n1\n\"\"\") == \"-1\"\n\nassert solution(\n\"\"\"\n8\n1\n1\n2\n3\n4\n5\n6\n7\n1\n\"\"\") == \"1 1\""
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1101') == 1\nassert solution('100') == 4\nassert solution
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1101) == 1\nassert solution('') == 0\nassert solution('1101') == 1\nassert solution('1') == 0\nassert solution('1010101011') == 3\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0\nassert solution(\"\") == 0\nassert solution(\"11011111\") == 1\nassert solution(\"111111011\") == 2\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1101') == 1\nassert solution('10100') == 0\nassert solution('110111') == 2\nassert solution('1010101') == 2\nassert solution('110111101010111101010101011110101110101') == 2\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('111') == 0\nassert solution('110') == 1\nassert solution('0111') == 2\nassert solution
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0\nassert solution(\"01\") == 1\nassert solution(\"01111\") == 6\nassert solution(\"111101111\") == 3\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('0001') == 1\nassert solution('1101') == 1\nassert solution('11001') == 1\nassert solution('10010') == 1\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1101) == 1\nassert solution(1) == 0\nassert solution(1100) == 1\nassert solution(1111) == 1\nassert solution(110110011010110110) == 6\n"
    },
    {
        "number": 3106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1101') == 1\nassert solution('11111') == 1\nassert solution('11100') == 0\nassert solution('0001110100011101010000101') == 0\nassert solution('0001000101110100010111010101') == 3\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '''1\n0\n2\n'''\n\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '''3\n0\n2\n'''\n\nassert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '''1\n0\n2\n'''\n\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '''3\n0\n2\n'''\n\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n1 2\n1 2\n''') == '''2\n2\n2\n2\n'''"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '3 3'\n    '3 1 3 1'\n    '2 2 1'\n    '3 3 1 3 1'\n    '1 2'\n    '2 3'\n    '3 1'\n) == '1\\n0\\n2'\n\"\"\""
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2') == '0\\n1'\nassert solution('3 2') == '1\\n0'\nassert solution('3 2\\n3 1 3 1') == '1\\n0\\n2'\nassert solution('2 2\\n3 1 3 1') == '2\\n0\\n1'\nassert solution('2 2\\n3 1 3 1\\n3 2 4 2 6 5 6 1') == '2\\n0\\n1\\n2'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n1 2\n3 3 1 3\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n2 2\n3 3 1 3\n1 2\n2 3\n3 1\n1 2\n3 3 1 3\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n2 2\n3 3 1 3\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"1 0\\n0 1\\n0 0\\n1 1\"\nassert solution(\"2 2\") == \"0\\n0\"\nassert solution(\"2 1\") == \"1\\n0\"\nassert solution(\"3 3\") == \"0 0\\n0 0\\n0 0\"\nassert solution(\"2 4\") == \"0\\n0\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n-----\n\nNote\nTest input 1:\n3 1\n2 2 1\n3 3 1 3 1\n1 2\n2 3\n3 1\nTest Output 1:\n1\n0\n2\nTest Input 2:\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\nTest Output 2:\n3\n'''\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1 3 1\\n1 2\\n2 3\") == \"1\\n0\\n2\"\nassert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1 3 1\\n1 2\\n2 3\") == \"0\\n1\\n2\"\nassert solution(\"4 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1 3 1\\n1 2\\n2 3\") == \"2\\n0\\n0\"\nassert solution(\"5 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1 3 1\\n1 2\\n2 3\\n3 1 3 1\\n1 2\\n2 3\") == \"0\\n0\\n2\\n0\\n0\"\nassert solution(\"6 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1 3 1\\n1 2\\n2 3\\n3 1 3 1\\n1 2\\n2 3\") == \"2\\n0\\n0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1\\n0\\n2\\n'\nassert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '3\\n0\\n2\\n'\nassert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '2\\n0\\n2\\n'\nassert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '3\\n0\\n2\\n'\nassert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1\\n0\\n2\\n'\n"
    },
    {
        "number": 3107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3 1\\n1 2\\n2 3\\n3 1\\n1 2\\n3 3 1 3 1\\n4 1 6 3 6 1') == '1\\n0\\n2'\n'''\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4 1\n1 2 3 4'''\n) == '4.000000'\n\nassert solution(\n'''4 2\n2 4 3 4'''\n) == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4 1''') == '4.000000'\nassert solution(\n'''4 2''') == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4 1\n1 2 3 4\n''') == '4.000000'\nassert solution(\n'''\n4 2\n2 4 3 4\n''') == '3.666666'\nassert solution(\n'''\n2 3\n1 2\n''') == '1.00000'\nassert solution(\n'''\n2 2\n1 1\n''') == '0.500000'\nassert solution(\n'''\n3 1\n1 2 3\n''') == '2.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"4.000000\"\nassert solution(\"1 2 3 4\") == \"4.000000\"\nassert solution(\"2 4 3 4\") == \"3.666666\"\nassert solution(\"2 4 3 4\") == \"3.666666\"\nassert solution(\"1 1 1 1\") == \"1.000000\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 1\\n1 2 3 4') == '4.000000'\nassert solution('4 2\\n2 4 3 4') == '3.666666'\n\nprint('All set!')\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 1\n1 2 3 4''') == '4.000000'\nassert solution('''4 2\n2 4 3 4''') == '3.666666'\nassert solution('''4 3\n2 4 3 4''') == '2.50000'\nassert solution('''4 4\n2 4 3 4''') == '2.75000'\nassert solution('''4 5\n2 4 3 4''') == '3.25000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") is None\nassert solution(\"0 1\") == \"0.5\"\nassert solution(\"0 1 2 3 4\") == \"4.000000\"\nassert solution(\"1 2 3 4\") == \"2.50000\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"8.00000\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 4 2 3 4 4 4 3 4 3 2 1 2 2 3 1 3 4 1 3 3 4 4 2 1 1 3 4 3 4 4 1 4 4 2 1 1 2 1 1 3 4 1 3 4 1 1 3 4 1 1 3 4 1 4 4 2 1 1 2 1 1 3 4 1 1 3 4 1 1 3 4 1 1 3 4 1 1 1 1 3 4 1 1 3 4 1 1 1 3 4 1 1 3 4 1 1 3 4 1 1 3 4 1 1 1 3 4 1 1 3 4 1 1 3 3 4 1 1 1 3 4 1 1 1 3 4 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 3 4 1 1 1 3 4 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 1 1 1 3 4 11 1 3 4 11 1 3 4 11 1 3 4 11 1 3 41"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4\\n1.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\\n') == '0.750'\nassert solution('1 2 3 4\\n1.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.625'\nassert solution('1 2 3 4\\n1.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.750'\nassert solution('1 2 3 4\\n1.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.625'\nassert solution('1 2 3 4\\n1.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.750'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0'''\n) == \"0.750\"\nassert solution(\n'''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0'''\n) == \"0.625\"\nassert solution(\n'''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 1.5\n0.0 2.0'''\n) == \"0.90625\"\nassert solution(\n'''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0'''\n) == \"0.828125\"\nassert solution(\n'''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 1.5\n0.0 2.0\n0.0 2.0'''\n) == \"0.75\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0.750'\n\"\"\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == answer_1\nassert solution(stdin) == answer_2\nprint(\"Tests passed.\")\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0''') == '0.750'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\n'''"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0''') == '0.750'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.375'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n0.0 2.0''') == '1.000'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n0.0 2.0\n0.0 2.0''') == '0.000'\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n2.5 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n2.5 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n2.5 0.0\\n0.0 2.0\") == \"0.750\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"2 2 5 5\") == \"0.625\"\nassert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"1 1 1 1\") == \"0.000\"\nassert solution(\"2 2 5 5\") == \"0.625\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    input_string=\n    \"\"\"\n    2 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.5 0.0\n    0.0 2.0\n    \"\"\") == \"0.750\"\n\nassert solution(\n    input_string=\n    \"\"\"\n    3 3 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.0 0.0\n    0.0 2.0\n    \"\"\") == \"0.750\"\n\nassert solution(\n    input_string=\n    \"\"\"\n    3 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.5 0.0\n    0.0 2.0\n    \"\"\") == \"0.750\"\n\nassert solution(\n    input_string=\n    \"\"\"\n    5 5 6 6\n    1.0 1.0\n    0.0 0.0\n    0.0 0.0\n    0.0 0.0\n    0.0 0.0\n    \"\"\") == \"0.8333\"\n\nassert solution(\n    input_string=\n    \"\"\"\n    5 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.5 0.0\n    0.0 2.0\n    \"\"\") == \"0.875\""
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 3\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution(\n'''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0''') == '37'\nassert solution(\n'''4 3\n2 3 0 7\n0 0 2 1\n0 0 3 0''') == '59'\nassert solution(\n'''5 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n0 0 0 0''') == '180'\nassert solution(\n'''6 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n0 0 0 0\n0 0 0 0''') == '140'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 3\n1 2 4\n0 3 6\n4 0 3\"\"\") == \"2\"\nassert solution(\"\"\"3 3\n2 3 0 7\n0 0 2 1\n0 0 3 0\"\"\") == \"37\"\nassert solution(\"\"\"5 5\n1 2 0 0 0\n0 0 2 0 1\n2 1 0 2 0\n0 0 1 0 0\n0 1 0 1 1\n1 0 0 0 0\"\"\") == \"40\"\n\"\"\"\nTest.describe(\"Example Tests\")\nTest.assertEquals(solution(\"\"\"3 3\n1 2 4\n0 3 6\n4 0 3\"\"\"), \"2\")\nTest.assertEquals(solution(\"\"\"3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n0 1 0 0\n0 1 0 1\n1 0 0 0\"\"\"), \"37\")\nTest."
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 4\\n0 3 6\\n4 0 3\\n') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n') == '37'\nassert solution('2 3\\n2 0 0\\n3 0 3\\n') == '11'\nassert solution('2 3\\n2 0 0\\n3 0 3\\n') == '11'\nassert solution('1 2 4\\n0 3 6\\n4 0 3\\n') == '2'\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n0 0 2 1\\n0 0 3 0\") == \"2\"\nassert solution(\"3 3\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\nassert solution(\"4 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n0 0 2 0\") == \"141\"\nassert solution(\"1 1\\n1 1 0\\n1 1 1\") == \"10\"\nassert solution(\"1 1\\n1 1 1\\n1 1 1 1\") == \"11\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2 2\\n3 4\\n0 3 6\\n4 0 3') == '2'\nassert solution('1\\n2 3\\n4 0\\n3 0 4\\n5 0 0\\n0 0 2 1\\n0 0 3 0\\n0 0 4 0\\n0 0 5 0') == '37'\n\"\"\""
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 3\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\nassert solution(\"3 3\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37''''\nassert solution('''4 4\n1 2 4\n0 3 6\n4 0 3\n0 0 2\n0 0 1\n''') == '16'\nassert solution('''10 10\n1 2 4\n0 3 6\n4 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n''') == '123456789'\nassert solution('''15 15\n1 2 4\n0 3 6\n4 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n0 0 4\n0 0 3\n0 0 2\n0 0 1\n0 0 7\n0 0 5\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Finished Test Successfully\")\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 3\n1 2 4\n0 3 6\n4 0 3\n\"\"\") == \"2\"\nassert solution(\"\"\"3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n\"\"\") == \"37\"\nassert solution(\"\"\"1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"2 2\n1 1 0\n0 1 1\n1 0 1\n\"\"\") == \"3\"\nassert solution(\"\"\"2 2\n1 1 0\n1 1 1\n1 1 1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == '2\\n'\nassert solution('5 3\\n1 2 3 4 5\\n3 2 1 4 2\\n0 3 0 4 0\\n0 1 1 2 2\\n4 0 3 4 2') == '37\\n'\nassert solution('5 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n0 0 4 0\\n4 0 3 0') == '37\\n'\nassert solution('6 3\\n1 2 3 4 5 6\\n6 3 2 4 1 2\\n0 0 2 1 3 1\\n0 0 3 0 4 0\\n0 0 4 0 3 1\\n4 0 3 4 2 2') == '918\\n'\nassert solution('7 3\\n1 2 3 4 5 6 7\\n6 3 2 4 1 2 3\\n0 0 2 1 3 1 4\\n0 0 3 0 4 0 5\\n0 0 4 0 3 1 5\\n4 0 3 4 2 2 3\\n0 0 1 2 1 2 4') == '1653\\n'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open('test').read()) == open('test1').read()\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\\n\"\nassert solution(\"6 4\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\") == \"1\\n4\\n9\\n16\\n\"\n\nprint(solution(stdin.read()))"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\"\n\nassert solution(\"4 4\\n1334\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n10\\n19\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n10\\n19\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n10\\n19\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n1 1\\n1 2\\n1 3\\n1 4\\n4 4\\n\") == \"1\\n4\\n9\\n16\\n\"\nassert solution(\"2 2\\n1 1\\n1 2\\n\") == \"1\\n4\\n\"\nassert solution(\"2 2\\n1 2\\n\") == \"1\\n4\\n\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1234\n1 4\n1 4\n1 4\n''') == '10\\n14\\n18\\n'\nassert solution('''4 4\n12345\n1 1\n1 2\n1 3\n1 4\n''') == '1\\n4\\n9\\n16\\n'\nprint(solution('''10 10\n123456789\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 4"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18'\nassert solution('4 3\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16'\nassert solution('5 3\\n12345\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n') == '1\\n4\\n13\\n46'\nassert solution('4 4\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16'\n"
    },
    {
        "number": 3111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18'\nassert solution('3 3\\n54321\\n12345\\n12346\\n') == '54321\\n12345\\n12346'\nassert solution('5 5\\n54321\\n12345\\n12346\\n45678\\n') == '54321\\n12345\\n12346\\n45678'\nassert solution('2 2\\n1 1\\n1 2\\n') == '1\\n4'\nassert solution('10 10\\n10 20\\n20 30\\n30 40\\n40 50\\n50 60\\n60 70\\n70 80\\n80 90\\n90 100\\n') == '50\\n60\\n70\\n80\\n90\\n100'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\") == \"2\"\nassert solution(\"4 2 3\") == \"2\"\nassert solution(\"5 2 4\") == \"1\"\nassert solution(\"4 4 2\") == \"2\"\nassert solution(\"5 4 3\") == \"2\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2 3\\n1 3\\n2 3\\n3 4') == '2'\nassert solution('5 2 4\\n1 3\\n3 4\\n2 4\\n4 5') == '1'\nassert solution('5 2 4\\n2 4\\n3 4\\n1 3\\n4 5') == '1'\nassert solution('6 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n5 6') == '0'\nassert solution('2 1 1\\n1 2\\n2 1') == '0'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\"\nassert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\") == \"1\"\nassert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"2\"\nassert solution(\"3 4\\n1 3\\n2 3\\n2 4\\n3 4\\n3 4\\n4 4\") == \"2\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2 3''') == '2'\nassert solution('''5 2 4''') == '1'\nassert solution('''10 10 10''') == '5'\nassert solution('''5 10 10''') == '5'\nassert solution('''10 10 10''') == '6'\n"
    },
    {
        "number": 3112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(SAMPLE_INPUT_1) == SAMPLE_OUTPUT_1\nassert solution(SAMPLE_INPUT_2) == SAMPLE_OUTPUT_2\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'yes'\nassert solution('1\\n0 0 0 1000 1000 0\\n3\\n0 0 0 10000 10000 5000 5000') == 'no'\nassert solution('0\\n0 0 0 1000 1000 0\\n3\\n0 0 0 10000 10000 5000 5000\\n0 0 0 1000 1000 0\\n2\\n0 0 0 1000 1000 0\\n1\\n0 0 0 1000 1000 0') == 'yes'\nassert solution('1\\n0 0 0 1000 1000 0\\n3\\n0 0 0 10000 10000 5000 5000\\n0 0 0 1000 1000 0\\n2\\n0 0 0 1000 1000 0\\n1\\n0 0 0 1000 1000 0\\n2\\n0 0 0 1000 1000 0') == 'yes'\nassert solution('1\\n0 0 0 1000 1000 0\\n3\\n0 0 0 10000 10000 5000 5000\\n0 0 0 1000 1000 0\\n2\\n0 0 0 1000 1000 0\\n1\\n0 0 0 1000 1000 0\\n2\\n0 0 0 1000 1000 0') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n\"\"\"\n) == \"no\"\n\nassert solution(\n\"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n\"\"\"\n) == \"no\"\n\nassert solution(\n\"\"\"\n1\n9999 0 10000 0 0 1\n9999 0 10000 0 0 1\n\"\"\"\n) == \"no\"\n\nassert solution(\n\"\"\"\n1\n0 0 0 1000 1000 0\n\"\"\"\n) == \"no\"\n\nassert solution(\n\"\"\"\n1\n1 1 1 2 2 3\n2 1 1 1 2 2 3\n3 1 1 1 2 2 3\n\"\"\"\n) == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000''') == 'no'\nassert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0''') == 'no'\nassert solution('''1\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1''') == 'no'\nassert solution('''1\n1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == 'no'\nassert solution('''1\n2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"no\"\nassert solution(\"1\\n\") == \"no\"\nassert solution(\"1\\n1\") == \"no\"\nassert solution(\"1\\n1\\n\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''1\n10000 0 10000 10000 0 10000'''\n) == 'no'\n\nassert solution(\n'''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n'''\n) == 'yes'\n\nassert solution(\n'''2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n'''\n) == 'yes'\n\nassert solution(\n'''1\n10 0 10 0 100 0 100\n1 0 0 0 0 100 0 100\n2\n1 0 0 0 0 100 0 100\n'''\n) == 'no'\n\nassert solution(\n'''1\n100000 0 10000 0 0 1\n9999 0 10000 0 0 1\n2\n9998 0 9998 0 0 1\n9997 0 9997 0 0 1\n'''\n) == 'yes'"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"no\"\nassert solution(\"9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\nassert solution(\"1\\n2\\n3\\n4\") == \"yes\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'no'\nassert solution(input()) == 'yes'\nassert solution(input()) == 'no'\nassert solution(input()) == 'yes'\nassert solution(input()) == 'no'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"2 1\") == \"NO\"\nassert solution(\"4 3\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3\n''') == 'YES'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == 'NO'\nassert solution('''2 2\n2 1\n1 2\n2 1\n''') == 'NO'\nassert solution('''1 1\n2 1\n2 1\n''') == 'NO'\nassert solution('''5 4\n1 2\n1 3\n1 4\n1 5\n2 4\n2 3\n3 4\n''') == 'YES'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3''') == 'YES'\nassert solution('''3 3\n1 2\n2 3\n3 1''') == 'NO'\nassert solution('''5 2\n1 2\n2 4\n3 4\n4 5\n3 5''') == 'YES'\nassert solution('''4 4\n1 2\n1 3\n1 4\n1 5\n2 4\n2 5\n3 4\n3 5''') == 'NO'\nassert solution('''4 4\n1 2\n1 3\n1 4\n1 5\n2 4\n2 5\n3 4\n4 1''') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"4 3\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"3 4\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3''') == 'NO'\nassert solution('''4 3\n1 2\n1 3\n1 4\n2 3''') == 'YES'\nassert solution('''7 5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n1 2\n3 4\n4 5\n6 7''') == 'NO'\nassert solution('''6 6\n1 2\n2 3\n3 4\n4 5\n5 6\n5 1\n6 1\n1 5\n5 6\n1 6\n1 5\n3 4\n3 2\n5 4\n4 3\n2 5\n6 4\n6 5\n1 2\n1 3\n3 4\n4 5\n6 7''') == 'YES'\nassert solution('''5 3\n1 2\n2 3\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 4\n2 5\n3 4\n3 9\n3 8\n4 5\n4 6\n5 6\n5 7\n5 8\n5 9\n1 2\n2 3\n3 4\n4 5\n4 6\n4 7\n5 6\n5 7\n5 8\n5 9\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5''') == 'YES'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3\n''') == 'NO'\n\nassert solution('''3 4\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\n\nassert solution('''4 2\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\n\nassert solution('''4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == 'YES'\n\nassert solution('''4 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\\n1 3\") == \"NO\"\nassert solution(\"2 2\\n1 2\\n3 1\") == \"YES\"\nassert solution(\"2 3\\n3 1\\n1 2\") == \"NO\"\nassert solution(\"1 1\\n1 2\\n1 3\") == \"NO\"\nassert solution(\"3 2\\n2 1\\n3 1\\n1 2\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 2\n2 3\n1 3\n''') == 'NO'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n2 3\n1 3\n''') == 'YES'\nassert solution('''\n4 2\n1 2\n1 3\n1 4\n2 3\n1 3\n''') == 'YES'\n'''\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('1\\n2') == 'YES'\nassert solution('2\\n3') == 'YES'\nassert solution('1\\n3\\n2') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3\"\n    \"0 > 1\"\n    \"1 = 2\"\n    \"0 = 2\"\n) == \"consistent\"\nassert solution(\n    \"5 5\"\n    \"0 = 1\"\n    \"1 = 2\"\n    \"3 = 4\"\n    \"0 > 3\"\n    \"1 > 4\"\n) == \"consistent\"\nassert solution(\n    \"5 5\"\n    \"0 = 1\"\n    \"1 = 2\"\n    \"3 = 4\"\n    \"0 > 3\"\n    \"1 > 4\"\n    \"0 > 2\"\n) == \"inconsistent\"\nassert solution(\n    \"1 1\"\n    \"0 = 1\"\n    \"1 = 2\"\n    \"0 = 2\"\n) == \"inconsistent\"\nassert solution(\n    \"3 3\"\n    \"0 > 1\"\n    \"1 = 2\"\n    \"0 = 2\"\n) == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"inconsistent\"\nassert solution(\"1\\n1\\n\") == \"inconsistent\"\nassert solution(\"1\\n1\\n1\\n\") == \"consistent\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"consistent\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 3\\n0 > 1\\n1 = 2\\n0 = 2\\n') == 'inconsistent'\nassert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n') == 'consistent'\n\nsolution('3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n')\nsolution('7 3\\n0 > 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\n\nsolution('6 7\\n0 = 1\\n1 = 2\\n2 = 3\\n0 > 2\\n1 > 3\\n')\nsolution('5 3\\n0 > 1\\n1 = 2\\n0 = 2\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\n\nsolution('7 3\\n0 > 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 3\\n0 > 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\n\nsolution('6 7\\n0 = 1\\n1 = 2\\n2 = 3\\n0 > 2\\n1 > 3\\n')\nsolution('5 3\\n0 > 1\\n1 = 2\\n0 = 2\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\n\nsolution('7 3\\n0 > 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 3\\n0 > 1\\n1 = 2\\n0 = 2\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\n\nsolution('6 7\\n0 = 1\\n1 = 2\\n2 = 3\\n0 > 2\\n1 > 3\\n')\nsolution('5 3\\n0 > 1\\n1 = 2\\n0 = 2\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\n\nsolution('7 3\\n0 > 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 3\\n0 > 1\\n1 = 2\\n0 = 2\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 = 2\\n1 > 4\\n')\n\nsolution('6 7\\n0 = 1\\n1 = 2\\n2 = 3\\n0 > 2\\n1 > 3\\n')\nsolution('5 3\\n0 > 1\\n1 = 2\\n0 = 2\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n')\nsolution('5 5\\n0 = 1\\n1 = 2\\"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"inconsistent\"\nassert solution(\"3 3\") == \"consistent\"\nassert solution(\"3 2\") == \"inconsistent\"\nassert solution(\"5 5\") == \"inconsistent\"\nassert solution(\"5 4\") == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"inconsistent\"\n\"\"\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4') == 'consistent'\n\"\"\""
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'consistent'\n\nassert solution('''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n\nassert solution('''\n5 5\n0 > 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'inconsistent'\n\nassert solution('''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n\nassert solution('''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'inconsistent'"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"consistent\"\n\nSample Input 3:\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\nSample Output 3:\ninconsistent'''\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().strip().split(' '))\narr = []\nfor i in range(M):\n    arr.append(list(map(int, sys.stdin.readline().strip().split(' '))))\n\nfor k in range(M):\n    if arr[k][0] > arr[k][1]:\n        arr[k][0], arr[k][1] = arr[k][1], arr[k][0]\n\nans = 'inconsistent'\nfor i in range(M):\n    for j in range(i+1,M):\n        if arr[i][0] == arr[j][1] and arr[j][0] == arr[i][1]:\n            ans = 'inconsistent'\n            break\n        elif arr[i][0] > arr[j][1]:\n            ans = 'inconsistent'\n            break\n"
    },
    {
        "number": 3115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 5') == 'inconsistent'\nassert solution('1 5') == 'consistent'\nassert solution('1 1') == 'consistent'\nassert solution('0 1') == 'inconsistent'\nassert solution('2 1') == 'inconsistent'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.57079633\"\nprint(\"Tests passed successfully\")\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1 1') == '1.57079633'\nassert solution('-1\\n1 1 1') == '2.35619449'\nassert solution('-1\\n1 2 1') == '2.35619449'\nassert solution('-1\\n1 2 2') == '3.745929'\nassert solution('-1\\n2 1 1') == '2.35619449'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0''') == '41938.65135885'\nassert solution('''10\n-100000 -100001 -100002\n100000 0 100001\n100000 100002 1\n100001 0 100002\n100001 100002 -1\n100002 0 100003\n100002 100003 -1\n100003 0 100000\n100003 100000 -100000''') == '-100000'\nprint('All cases passed successfully.')\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0''') == '41938.65135885'\nassert solution('''4\n1 -1 -1\n1 -2 -1\n0 0 0\n0 0 1''') == '1.57079633'\nassert solution('''4\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '0'\nassert solution('''4\n1 1 1\n1 1 1\n0 0 0\n0 0 1''') == '0'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('2\\n-100 0 0\\n10 0 10\\n-10 -10 -10') == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\"\"\") == \"1.57079633\"\nassert solution(\"\"\"4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\nSample Output 2:\n41938.65135885\n\"\"\") == \"41938.65135885\"\nassert solution(\"\"\"4\n-100 0 0\n10 0 10\n0 0 0\n0 0 1\"\"\") == \"1.57079633\"\nassert solution(\"\"\"2\n-10 -10 -10\n0 0 0\n-10 -10 -10\n0 0 0\nSample Output 2:\n3.141592653589793\n\"\"\") == \"3.141592653589793\"\nassert solution(\"\"\"1\n1 0 0\n0 0 0\n0 0 1\"\"\") == \"0.7853981633974483\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Correctly implemented solution: {expected_output}\")\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1'''\n) == '1.57079633'\n\nassert solution(\n'''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0'''\n) == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n\"\"\") == \"1.57079633\"\nassert solution(\n    \"\"\"\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n\"\"\") == \"41938.65135885\"\nassert solution(\n    \"\"\"\n3\n-100 10 -10\n0 0 0\n0 0 1\n\"\"\") == \"1.57079633\"\nassert solution(\n    \"\"\"\n3\n-100 10 -10\n0 0 0\n-10 -10 -10\n\"\"\") == \"41938.65135885\"\nassert solution(\n    \"\"\"\n3\n-100 10 -10\n-10 -10 -10\n-10 -10 -10\n\"\"\") == \"1.57079633\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1.57079633\"\nassert solution(\"1\\n0\\n0\\n0\") == \"1.57079633\"\nassert solution(\"-100\\n0\\n0\\n0\") == \"41938.65135885\"\nassert solution(\"-1\\n1\\n1\\n1\") == \"2.083402835696414\"\nassert solution(\"1\\n1\\n1\\n1\") == \"2.083402835696414\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4'\n\"\"\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('stdin') == 'trutrutiktiktappop'\n\nassert solution('stdin') == 'trutrutiktiktappop'\n\nassert solution('stdin') == 'trutrutiktiktappop'\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('ba') == 1\nassert solution('baab') == 2\nassert solution('baaba') == 3\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('sabcabcfabc') == 3\nassert solution('trutrutiktiktappop') == 4\nassert solution('r') == 0\nassert solution('trutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrutrut"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('sabcabcfabc') == 3\nassert solution('trutrutiktiktappop') == 4\nassert solution('toot') == 0\nassert solution('tootrt') == 0\nassert solution('a') == 0\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''11\nsabcabcfabc''') == '3'\nassert solution('''18\ntrutrutiktiktappop''') == '4'\nassert solution('''20\nffmmnxeezcffqdvxmnvfzvn\nhhjgbnlqjucqdcjrvtnklqjmhjm\nhjmhjmjvshvqjmjvshvqjmjvsh\njmjvshvqjmjvshvqjmjvshvqj\njvshvqjmjvshvqjmjvshvqjmj\nqmjvshvqjmjvshvqjmjvshvqj\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqj\nvhqjmjvshvqjmjvshvqjmjvshv\nqjmjvshvqjmjvshvqjmjvshvqj\nvjmjvshvqjmjvshvqjmjvshvqj\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqjmjvshvqjmjvshvqjmjvshvqj\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqjmjvshvqjmjvshvqjmjvshvqj\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nqmjvshvqjmjvshvqjmjvshvqjm\nvhqjmjvshvqjmjvshvqjmjvshv\nq"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"abcfabc\"\n\n\"\"\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('h') == 0\nassert solution('hehhe') == 0\nassert solution('hehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehe he\n''') == 19\nassert solution('') == 0\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 1\n3 1 2\n''') == '2'\nassert solution('''6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\nassert solution('''10\n7 1 8 3 2 9 4 5 6\n6 7 2 5 3 4 1 9\n''') == 'huge'\nassert solution('''10\n3 1 4 5 6 7 8 9 2\n2 3 1 5 4 6 7 8 9\n''') == '9'\nassert solution('''1000\n
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\\n\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n\") == \"5\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n2 3 1\n3 1 2\n''') == '2'\nassert solution('''6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n2 3 1\n3 1 2\n''') == '2'\nassert solution('''6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\nassert solution('''4\n1 3 4 2\n2 4 1 3\n''') == '5'\nassert solution('''4\n4 3 2 1\n1 3 4 2\n''') == '5'\nassert solution('''4\n2 3 4 1\n1 3 4 2\n''') == '2'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 3 2\") == \"2\"\nassert solution(\"1 4 2 3\") == \"2\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5'\nassert solution('3\\n2 3 1\\n3 1 2\\n') == '2'\nassert solution('3\\n3 1 2\\n3 1 2\\n') == 'huge'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n1') == '2'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1') == '2'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1') == '2'\n"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2\\n') == '2'\nassert solution('3\\n1 2 1\\n2 1 3\\n') == '2'\nassert solution('2\\n1 1\\n1 1\\n') == 'huge'\nassert solution('1\\n1\\n1\\n') == '1'\nprint('Test complete')"
    },
    {
        "number": 3118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 2\n'''\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10\\n') == '4'\nassert solution('3 2\\n0 10 20\\n0 30\\n') == '6'\nassert solution('1 2\\n0 10\\n0 30\\n') == '0'\nassert solution('2 2\\n0 10\\n0 30\\n') == '1'\nassert solution('5 2\\n0 10 15 20 25\\n0 15\\n0 25\\n0 30\\n0 35\\n0 40\\n') == '2'\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 1\") == \"4\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n2\") == \"2\"\nassert solution(\"4\\n2\\n0 5\\n1 5\\n3 5\\n1\\n2\") == \"9\"\n\nTest Case 1\n\n------\n\n2 1\n0 10\n0 10\n\n------\n\n3 2\n0 10 20\n0 10\n\n------\n\n4 3\n0 10 20 26 40 50\n0 40\n\n------\n\n5 4\n0 10 20 26 40 50\n0 40\n0 30\n0 10\n0 40\n\n------\n\n6 5\n0 10 20 26 40 50\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n\n------\n\n7 6\n0 10 20 26 40 50\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n\n------\n\n8 7\n0 10 20 26 40 50\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n\n------\n\n9 8\n0 10 20 26 40 50\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0 30\n0 10\n0 40\n0"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == '4'\nassert solution('3 1') == '6'\nassert solution('3 2') == '3'\nassert solution('2 2') == '5'\nassert solution('3 3') == '6'\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3 1\n0 10 20\n0 10\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n6 1\n0 10 20 26 40 50\n0 40\n\"\"\") == \"9\"\nassert solution(\n\"\"\"\n6 1\n0 10 20 26 40 50\n0 40\n\"\"\") == \"9\"\nassert solution(\n\"\"\"\n6 1\n0 10 20 26 40 50\n0 40\n\"\"\") == \"9\"\nassert solution(\n\"\"\"\n6 1\n0 10 20 26 40 50\n0 40\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 10 20\n0 10\n0 10''') == '4'\nassert solution('''0 10 20\n0 10\n0 10''') == '9'\nassert solution('''0 10 20\n0 40\n0 10\n0 30\n0 40\n0 50\n0 60\n0 70\n0 80\n0 90\n0 100\n0 110\n0 120\n0 130\n0 140\n0 150\n0 160\n0 170\n0 180\n0 190\n0 200\n0 210\n0 220\n0 230\n0 240\n0 250\n0 260\n0 270\n0 280\n0 290\n0 300\n0 310\n0 320\n0 330\n0 340\n0 350\n0 360\n0 370\n0 380\n0 390\n0 400\n0 410\n0 420\n0 430\n0 440\n0 450\n0 460\n0 470\n0 480\n0 490\n0 500\n0 510\n0 520\n0 530\n0 540\n0 550\n0 560\n0 570\n0 580\n0 590\n0 600\n0 610\n0 620\n0 630\n0 640\n0 650\n0 660\n0 670\n0 680\n0 690\n0 700\n0 710\n0 720\n0 730\n0 740\n0 750\n0 760\n0 770\n0 780\n0 790\n0 800\n0 810\n0 820\n0 830\n0 840\n0 850\n0 860\n0 870\n0 880\n0 890\n0 900\n0 910\n0 920\n0 930\n0 940\n0 950\n0 960\n0 970\n0 980\n0 990\n0 1000\n0 1010\n0 1020\n0 1030\n0 1040\n0 1050\n0 1060\n0 1070\n0 1080\n0 1090\n0 1100\n0 1110\n0 1120\n0 1130\n0 1140\n0 1150\n0 1160\n0 1170\n0 1180\n0 1190\n0 1200\n0 1210\n0 1220\n0 1230\n0 1240\n0 1250\n0 1260\n0 1270\n0 1280\n0 1290\n0 1300\n0 1310\n0 1320\n0 1330\n0 1340\n0 1350\n0 1360\n0 1370\n0 1380\n0 1390\n0 1400\n0 1410\n0 1420\n0 1430\n0 1440\n0 1450\n0 1460\n0 1470\n0 1480\n0 1490\n0 1500\n0 1510\n0 1520\n0 1530\n0 1540\n0 1550\n0 1560\n0 1570\n0 1580\n0 1590\n0 1600\n0 1610\n0 1620\n0 1630\n0 1640\n0 1650\n0 1660\n0 1670\n0 1680\n0 1690\n0 1700\n0 1710\n0 1720\n0 1730\n0 1740\n0 1750\n0 1760\n0 1770\n0 1780\n0 1790\n0 1800\n0 1810\n0 1820\n0 1830\n0 1840\n0 1850\n0 1860\n0 1870\n0 1880\n0 1890\n0 1900\n0 1910\n0 1920\n0 1930\n0 1940\n0 1950\n0 1960\n0 1970\n0 1980\n0 1990\n0 2000\n0 2010\n0 2020\n0 2030\n0 2040\n0 2050\n0 2060\n0 2070\n0 2080\n0 2090\n0 2100\n0 2110\n0 2120\n0 2130\n0 2140\n0 2150\n0 2160\n0 2170\n0 2180\n0 2190\n0 2100\n0 2200\n0 2210\n0 2220\n0 2240\n0 2250\n0 2260\n0 2270\n0 2280\n0 2290\n0 2300\n0 2310\n0 2320\n0 2330\n0 2340\n0 2350\n0 2360\n0 2370\n0 2380\n0 2390\n0 2400\n0 2410\n0 2420\n0 2430\n0 2440\n0 2450\n0 2460\n0 2470\n0 2480\n0 2490\n0 2500\n0 2510\n0 2520\n0 2530\n0 2540\n0 2550\n0 2560\n0 2570\n0 2580\n0 2590\n0 2600\n0 2610\n0 2620\n0 2630\n0 2640\n0 2650\n0 2660\n0 2670\n0 2680\n0 2690\n0 2700\n0 2710\n0 2720\n0 2730\n0 2740\n0 2750\n0 2760\n0 2770\n0 2780\n0 2790\n0 2800\n0 2810\n0 2820\n0 2830\n0 2840\n0 2850\n0 2860\n0 2870\n0 2880\n0 2890\n0 2900\n0 2910\n0 2920\n0 2930\n0 2940\n0 2950\n0 2960\n0 2970\n0 2980\n0 2990\n0 3000\n0 3010\n0 3020\n0 3030\n0 3040\n0 3050\n0 3060\n0 3070\n0 3080\n0 3090\n0 3100"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"3 1\n0 10 20\n0 10\"\"\") == \"4\"\n\nassert solution(\n    \"\"\"3 1\n0 10 20\n0 10\"\"\") == \"4\"\n\nassert solution(\n    \"\"\"6 1\n0 10 20 26 40 50\n0 40\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0\\n0\") == \"\"\nassert solution(\"1\\n0\") == \"\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(concat(shuffle([1,2]),shuffle([1,2]))) == \"equal\"\nassert solution(shuffle([1,2,1,2])) == \"equal\"\nassert solution(sorted(concat([3,2,1],[4,5,6]))) == \"equal\"\nassert solution(shuffle([1,2,1,2])) == \"not equal\"\nassert solution(sorted(concat([3,2,1],[4,5,6]))) == \"not equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"equal\"\nassert solution(\"shuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\nassert solution(\"[1,2,3,4,5,6]\") == \"equal\"\n\"\"\"\n\nimport sys\n\nfrom collections import defaultdict\nfrom random import randint, random"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('concat(shuffle([1,2,1,2]),shuffle([1,2,1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nassert solution('shuffle(shuffle([1,2,1,2]))') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''concat(shuffle([1,2]),shuffle([1,2]))'''\n) == 'equal'\n\nassert solution(\n'''shuffle([1,2,1,2])'''\n) == 'equal'\n\nassert solution(\n'''sorted(concat([3,2,1],[4,5,6]))'''\n) == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('sorted(shuffle([1,2,1,2]))') == 'not equal'\nassert solution('sorted(shuffle([1,2,3,4,5]))') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\n\"\"\"\n\nfrom collections import defaultdict\nfrom copy import deepcopy\nfrom random import randint\nfrom typing import Tuple, List, Dict\n\nimport sys"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == \"equal\"\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == \"equal\"\n\nassert solution('shuffle([1,2,1,2])') == \"not equal\"\nassert solution('shuffle([1,2])') == \"not equal\"\nassert solution('shuffle([1,2,1,2])') == \"not equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''concat(shuffle([1,2]),shuffle([1,2]))''') == 'equal'\nassert solution('''sorted(concat([3,2,1],[4,5,6]))''') == 'equal'\nassert solution('''shuffle([1,2,1,2])''') == 'equal'\nassert solution('''concat(shuffle([1,2,1,2]),shuffle([1,2,1,2]))''') == 'equal'\nassert solution('''concat(concat([1,2,1,2]),concat([1,2,1,2]))''') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'equal'\nassert solution('shuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''5 5\n1 2 1 2\n2 3 1 2\n3 4 1 2\n4 5 1 2''') == '6'\nassert solution('''3 3\n1 2 1 2\n2 3 1 2\n3 4 1 2\n4 5 1 2''') == '1'\nassert solution('''4 2\n1 2 1 2\n2 3 1 2\n3 4 1 2\n4 5 1 2''') == '3'\nassert solution('''7 3\n1 2 1 2\n2 3 1 2\n3 4 1 2\n4 5 1 2\n5 6 1 2\n6 7 1 2''') == '4'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Oh no'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''5 3\n3 2\n1 2 1 2\n2 3 1 2\n1 3 1 1\n3 2 1 2''') == '2'\nassert solution('''9 4\n3 2\n1 2 1 2\n2 3 1 2\n1 3 1 1\n3 2 1 2\n1 3 1 1\n3 2 1 2\n1 3 1 1\n3 2 1 2''') == '3'\nassert solution('''9 7\n3 2\n1 2 1 2\n2 3 1 2\n1 3 1 1\n3 2 1 2\n1 3 1 1\n3 2 1 2\n1 3 1 1\n3 2 1 2''') == '4'\nassert solution('''9 7\n3 2\n1 2 1 2\n2 3 1 2\n1 3 1 1\n3 2 1 2\n1 3 1 1\n3 2 1 2\n1 3 1 1\n3 2 1 2''') == '4'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('2 3') == '1'\nassert solution('1 2 1 2') == '1'\nassert solution('2 3 1 2') == '1'\nassert solution('2 1 1 1') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Oh no\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == 'Oh no'\nassert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''1 1\n1 1''') == '1'\nassert solution('''1 1\n1 1''') == '1'\nassert solution('''1 1\n1 1''') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Oh no\"\n\n\"\"\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n\"\"\") == '3'\n\nassert solution(\"\"\"1 1\n2 2\n3 3\n4 4\n\"\"\") == '1'\n\nassert solution(\"\"\"3 3\n1 2 1\n2 3 1\n3 4 1\n1 2 1\n\"\"\") == 'impossible'\n\nassert solution(\"\"\"4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n\"\"\") == '3'\n\nassert solution(\"\"\"7 7\n1 2 2\n2 3 1\n2 4 1\n2 5 1\n3 6 1\n4 6 1\n5 6 1\n6 7 1\n\"\"\") == '3'"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1') == '3'\nassert solution('2 3 1') == 'impossible'\nassert solution('3 4 1') == 'impossible'\nassert solution('4 5 1') == 'impossible'\nassert solution('1 2 1') == '3'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3 2\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n'''\n) == '3'\n\nassert solution(\n'''\n4 2\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n'''\n) == 'impossible'\n\nassert solution(\n'''\n4 3\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n'''\n) == '3'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 2') == '3'\nassert solution('4 3') == 'impossible'\nassert solution('3 1 2') == 'impossible'\nassert solution('2 1 2') == 'impossible'\nassert solution('5 5') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\nassert solution('''5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'\nassert solution('''5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n1 2 3\n2 4 3\n3 4 4\n4 1 2\n1 4 3\n2 3 4\n1 4 2\n2 4 3\n3 1 4\n1 3 2\n1 2 3\n1 1 2\n1 3 1\n2 3 2\n3 1 4\n3 2 4\n3 3 4\n3 4 3\n3 4 1\n1 1 4\n2 1 3\n2 3 3\n2 3 1\n2 4 3\n1 1 2\n2 1 4\n2 3 4\n2 4 1\n3 4 2\n3 4 4\n3 1 4\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3 1\n2 1 2\n1 1 2\n1 3 1\n1 4 1\n2 1 3\n2 3 3\n2 4 4\n2 3"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n1 2 1\\n1 2 1\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == '3'\nassert solution('1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n1 2 1\\n1 2 1\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'\nassert solution('3 3\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'\nassert solution('4 3\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 3\n\nSample Input 3:\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n1 3 2\nSample Output 3:\nimpossible\n\"\"\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n\") == \"3\"\nassert solution(\"3 3\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n\") == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\") == \"3\"\nassert solution(\"2 3 1\") == \"impossible\"\nassert solution(\"3 4 1\") == \"impossible\"\nassert solution(\"4 1 2\") == \"3\"\nassert solution(\"5 5 1\") == \"impossible\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 1 1 3\n''') == '2'\nassert solution('''\n10\n1 22 2 33 22 3\n''') == '2'\nassert solution('''\n5\n1 1 1 1 3\n''') == '2'\nassert solution('''\n5\n1 1 1 1 3\n''') == '2'\nassert solution('''\n5\n1 1 1 1 3\n''') == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1 1 1 3''') == '2'\nassert solution('''1\n22''') == '4'\nassert solution('''6\n2 1 1 1 3''') == '1'\nassert solution('''3\n2 1 1 1''') == '2'\nassert solution('''4\n2 1 1 1''') == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline().strip())\nfor _ in range(T):\n    n = int(sys.stdin.readline().strip())\n    a = [int(x) for x in sys.stdin.readline().strip().split()]\n    max_k = 0\n    for i in range(n):\n        quot = 0\n        for j in range(i, n):\n            quot += 1\n            if quot == a[j]:\n                quot -= 1\n            if quot == 0:\n                max_k = max(max_k, quot)\n                break\n    print(max_k)"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\n1 1 1 1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"1\n22\n\"\"\") == \"4\"\nassert solution(\"\"\"5\n2 1 1 1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"5\n2 1 1 1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"4\n1 22\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('\"\"') == '\"\"'\nassert solution('''') == ''''\n'''\nassert solution('\"') == \"\"\"\n\"\"\"\nassert solution('''') == \"\"\"\n\"\"\"\nassert solution('\"\"') == \"\"\"\n\"\"\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2\n2 1 1 1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"1\n22\n\"\"\") == \"4\"\nassert solution(\"\"\"5\n1 1 1 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"6\n1 1 1 1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"7\n1 1 1 1 1 1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a\"a\"b\"b\"c\"c\"') == 4\nassert solution('a\"b\"c\"') == 1\nassert solution('\"a\"a\"') == 2\nassert solution('\"a\"b\"b\"c\"c\"') == 2\nassert solution('\"a\"a\"a\"b\"c\"c\"') == 4\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('\"abc\"abc\"def\"abc\"def\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc\"abc"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('\"\"') == '\"\"'\nassert solution('\"a\"') == '\"a\"'\nassert solution('\"\"') == '\"\"'\nassert solution('\"abc\"') == '\"\"'\nassert solution('\"abc\"') == '\"\"'\n"
    },
    {
        "number": 3123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1 1 1 3''') == '2'\nassert solution('''1\n22''') == '4'\nassert solution('''1\n1''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''1\n2''') == '2'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('4') == '3'\nassert solution('1 2 3 4') == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 1 5''') == '3'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''2\n1 2''') == '1'\nassert solution('''1\n1''') == '1'\nassert solution('''6\n1 2 3 4 5 6''') == '4'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 1 5''') == '3'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''4\n2 2 3 2''') == '1'\nassert solution('''4\n4 1 2 3''') == '0'\nassert solution('''4\n1 1 2 3''') == '1'\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n3 1 5\") == \"\"\nassert solution(\"4\\n1 2 3 4\") == \"\"\nassert solution(\"2\\n1 2\") == \"\"\nassert solution(\"10\\n1 1 2 3 4 5 6 7 8 9 10\") == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 5''') == '3'\nassert solution('''4\n1 2 3 4''') == '2'\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 3124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1 2') == '2'\nassert solution('1\\n1 2 3') == '1'\nassert solution('1\\n1 2 3 4') == '2'\nassert solution('1\\n1 2 3 4 5') == '3'\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '- +d-\\n+ -d-\\n<any> <empty>' or \\\nassert solution(stdin) == '<any> <empty>' or \\\nassert solution(stdin) == '- +d-\\n+ -d-'\n'''"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '<any> <empty>'\n\"\"\"\n\nfrom collections import defaultdict\nfrom typing import DefaultDict"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution) == \"I love programming.\\nI love programming!\\n\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\", \"1st\"\nassert solution(\"a-b+d-c\") == \"<any> <empty>\", \"2nd\"\nassert solution(\"knuth-morris-pratt\") == \"<any> <empty>\", \"3rd\"\n\"\"\""
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abc') == '- +'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\n'''\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '<empty> <any>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('aa--aa--aa') == '<any> <empty>'\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == \"- +d-\\n\"\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == \"<any> <empty>\\n\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\") == \"<any> <any>\\n\"\n\"\"\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6''') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11\\n6\\n5\\n9\\n9\\n10\\n9\\n9\\n10\\n10\\n'\nassert solution('''4 0\n4\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input1) == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n7\\n9\\n9\\n10\"\nassert solution(input2) == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\"\nassert solution(input3) == \"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(input4) == \"5\\n4\\n3\\n2\\n1\\n0\\n0\\n1\\n2\\n3\"\n\n-----Http Link-----\nPlease provide your web browser's URL so the tester can access your code.\n\n\"\"\""
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1''') == '0'\nassert solution('''0''') == '0'\nassert solution('''7 0''') == '7'\nassert solution('''2 6 6''') == '3'\nassert solution('''10''') == '9'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 1') == '0'\nassert solution('3 0') == '0'\nassert solution('4 0') == '0'\nassert solution('5 0') == '0'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"0\n4\n0\n1 2 3 4\n0\n3\n1 4\n2\n3\n\"\"\") == \"3\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\"\nassert solution(\n\"\"\"1\n3\n-2 1\n1\n\"\"\") == \"2\\n2\\n2\"\nassert solution(\n\"\"\"3\n1 1\n0\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nt 11\nt 12\nt 13\nt 14\nt 15\nt 16\nt 17\nt 18\nt 19\nt 20\nt 21\nt 22\nt 23\nt 24\nt 25\nt 26\nt 27\nt 28\nt 29\nt 30\nt 31\nt 32\nt 33\nt 34\nt 35\nt 36\nt 37\nt 38\nt 39\nt 40\nt 41\nt 42\nt 43\nt 44\nt 45\nt 46\nt 47\nt 48\nt 49\nt 50\nt 51\nt 52\nt 53\nt 54\nt 55\nt 56\nt 57\nt 58\nt 59\nt 60\nt 61\nt 62\nt 63\nt 64\nt 65\nt 66\nt 67\nt 68\nt 69\nt 70\nt 71\nt 72\nt 73\nt 74\nt 75\nt 76\nt 77\nt 78\nt 79\nt 80\nt 81\nt 82\nt 83\nt 84\nt 85\nt 86\nt 87\nt 88\nt 89\nt 90\nt 91\nt 92\nt 93\nt 94\nt 95\nt 96\nt 97\nt 98\nt 99\nt 100\nt 101\nt 102\nt 103\nt 104\nt 105\nt 106\nt 107\nt 108\nt 109\nt 110\nt 111\nt 112\nt 113\nt 114\nt 115\nt 116\nt 117\nt 118\nt 119\nt 120\nt 121\nt 122\nt 123\nt 124\nt 125\nt 126\nt 127\nt 128\nt 129\nt 130\nt 131\nt 132\nt 133\nt 134\nt 135\nt 136\nt 137\nt 138\nt 139\nt 140\nt 141\nt 142\nt 143\nt 144\nt 145\nt 146\nt 147\nt 148\nt 149\nt 150\nt 151\nt 152\nt 153\nt 154\nt 155\nt 156\nt 157\nt 158\nt 159\nt 160\nt 161\nt 162\nt 163\nt 164\nt 165\nt 166\nt 167\nt 168\nt 169\nt 170\nt 171\nt 172\nt 173\nt 174\nt 175\nt 176\nt 177\nt 178\nt 179\nt 180\nt 181\nt 182\nt 183\nt 184\nt 185\nt 186\nt 187\nt 188\nt 189\nt 190\nt 191\nt 192\nt 193\nt 194\nt 195\nt 196\nt 197\nt 198\nt 199\nt 200\nt 201\nt 202\nt 203\nt 204\nt 205\nt 206\nt 207\nt 208\nt 209\nt 210\nt 211\nt 212\nt 213\nt 214\nt 215\nt 216\nt 217\nt 218\nt 219\nt 220\nt 221\nt 222\nt 223\nt 224\nt 225\nt 226\nt 227\nt 228\nt 229\nt 230\nt 231\nt 232\nt 233\nt 234\nt 235\nt 236\nt 237\nt 238\nt 239\nt 240\nt 241\nt 242\nt 243\nt 244\nt 245\nt 246\nt 247\nt 248\nt 249\nt 250\nt 251\nt 252\nt 253\nt 254\nt 255\nt 256\nt 257\nt 258\nt 259\nt 260\nt 261\nt 262\nt 263\nt 264\nt 265\nt 266\nt 267\nt 268\nt 269\nt 270\nt 271\nt 272\nt 273\nt 274\nt 275\nt 276\nt 277\nt 278\nt 279\nt 280\nt 281\nt 282\nt 283\nt 284\nt 285\nt 286\nt 287\nt 288\nt 289\nt 290\nt 291\nt 292\nt 293\nt 294\nt 295\nt 296\nt 297\nt 298\nt 299\nt 300\nt 301\nt 302\nt 303\nt 304\nt 305\nt 306\nt 307\nt 308\nt 309\nt 310\nt 311\nt 312\nt 313\nt 314\nt 315\nt 316\nt 317\nt 318\nt 319\nt 320\nt 321\nt 322\nt 323\nt 324\nt 325\nt 326\nt 327\nt 328\nt 329\nt 330\nt 331\nt 332\nt 333\nt 334\nt 335\nt 336\nt 337\nt 338\nt 339\nt 340\nt 341\nt 342\nt 343\nt 344\nt 345\nt 346\nt 347\nt 348\nt 349\nt 350\nt 351\nt 352\nt"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6''') == '0'\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nSample Output 2:\n11\n6\n5\n9\n4\n3\n7\n9\n9\n10\n''') == '11'\nassert solution('''1 0\n0\n0\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6''') == '0'\nassert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nSample Output 2:\n0\n1\n3\n2\n3\n5\n3\n7\n9\n9\n10\n''') == '0'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''1 1'''\n) == '0'\nassert solution(\n'''0'''\n) == '1'\nassert solution(\n'''7'''\n) == '3'\nassert solution(\n'''6'''\n) == '5'\nassert solution(\n'''2 6 6'''\n) == '11'\n"
    },
    {
        "number": 3126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6''') == '0'\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '3'\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '7'\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nt 0\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nt 11\nt 12\nt 13\nt 14\nt 15\nt 16\nt 17\nt 18\nt 19\nt 20\nt 21\nt 22\nt 23\nt 24\nt 25\nt 26\nt 27\nt 28\nt 29\nt 30\nt 31\nt 32\nt 33\nt 34\nt 35\nt 36\nt 37\nt 38\nt 39\nt 40\nt 41\nt 42\nt 43\nt 44\nt 45\nt 46\nt 47\nt 48\nt 49\nt 50\nt 51\nt 52\nt 53\nt 54\nt 55\nt 56\nt 57\nt 58\nt 59\nt 60\nt 61\nt 62\nt 63\nt 64\nt 65\nt 66\nt 67\nt 68\nt 69\nt 70\nt 71\nt 72\nt 73\nt 74\nt 75\nt 76\nt 77\nt 78\nt 79\nt 80\nt 81\nt 82\nt 83\nt 84\nt 85\nt 86\nt 87\nt 88\nt 89\nt 90\nt 91\nt 92\nt 93\nt 94\nt 95\nt 96\nt 97\nt 98\nt 99\nt 100\nt 101\nt 102\nt 103\nt 104\nt 105\nt 106\nt 107\nt 108\nt 109\nt 110\nt 111\nt 112\nt 113\nt 114\nt 115\nt 116\nt 117\nt 118\nt 119\nt 120\nt 121\nt 122\nt 123\nt 124\nt 125\nt 126\nt 127\nt 128\nt 129\nt 130\nt 131\nt 132\nt 133\nt 134\nt 135\nt 136\nt 137\nt 138\nt 139\nt 140\nt 141\nt 142\nt 143\nt 144\nt 145\nt 146\nt 147\nt 148\nt 149\nt 150\nt 151\nt 152\nt 153\nt 154\nt 155\nt 156\nt 157\nt 158\nt 159\nt 160\nt 161\nt 162\nt 163\nt 164\nt 165\nt 166\nt 167\nt 168\nt 169\nt 170\nt 171\nt 172\nt 173\nt 174\nt 175\nt 176\nt 177\nt 178\nt 179\nt 180\nt 181\nt 182\nt 183\nt 184\nt 185\nt 186\nt 187\nt 188\nt 189\nt 190\nt 191\nt 192\nt 193\nt 194\nt 195\nt 196\nt 197\nt 198\nt 199\nt 200\nt 201\nt 202\nt 203\nt 204\nt 205\nt 206\nt 207\nt 208\nt 209\nt 210\nt 211\nt 212\nt 213\nt 214\nt 215\nt 216\nt 217\nt 218\nt 219\nt 220\nt 221\nt 222\nt 223\nt 224\nt 225\nt 226\nt 227\nt 228\nt 229\nt 230\nt 231\nt 232\nt 233\nt 234\nt 235\nt 236\nt 237\nt 238\nt 239\nt 240\nt 241\nt 242\nt 243\nt 244\nt 245\nt 246\nt 247\nt 248\nt 249\nt 250\nt 251\nt 252\nt 253\nt 254\nt 255\nt 256\nt 257\nt 258\nt 259\nt 260\nt 261\nt 262\nt 263\nt 264\nt 265\nt 266\nt 267\nt 268\nt 269\nt 270\nt 271\nt 272\nt 273\nt 274\nt 275\nt 276\nt 277\nt 278\nt 279\nt 280\nt 281\nt 282\nt 283\nt 284\nt 285\nt 286\nt 287\nt 288\nt 289\nt 290\nt 291\nt 292\nt 293\nt 294\nt 295\nt 296\nt 297\nt 298\nt 299\nt 300\nt 301\nt 302\nt 303\nt 304\nt 305\nt 306\nt 307\nt 308\nt 309\nt 310\nt 311\nt 312\nt 313\nt 314\nt 315\nt 316\nt 317\nt 318\nt 319\nt 320\nt 321\nt 322\nt 323\nt 324\nt 325\nt 326\nt 327\nt"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n2\") == \"2\"\nassert solution(\"2\\n2\\n2\") == \"2\\n4\"\nassert solution(\"2\\n2\\n2\\n2\") == \"0\\n4\"\nassert solution(\"2\\n2\\n2\\n2\\n2\") == \"0\\n4\"\nassert solution(\"3\\n3\\n3\") == \"0\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '0 2 4 6'\nassert solution('''2 3 2\n2 3 1\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0 2'\nassert solution('''3 4 2\n2 3 2\n2 3 1\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '1'\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2 4'\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0 2'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n2 1\") == \"2\\n0\"\nassert solution(\"2 1\\n2 1\\n1 1\") == \"2\\n1\"\nassert solution(\"6 2\\n3 2\\n2 1\\n2 2\\n5 1\\n5 2\\n1 2\\n1 3\\n1 4\") == \"2\\n4 6\"\nassert solution(\"3 2\\n2 1\\n2 2\\n1 2\\n1 1\") == \"2\\n0\"\nassert solution(\"3 2\\n2 1\\n1 1\\n2 2\") == \"2\\n0\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2 4 6'\nassert solution('''4 4\n1 2 2\n1 3 1\n1 4 3\n2 4 1\n2 3 2\n2 4 2\n3 4 2\n3 5 1\n4 7 2\n5 7 1''') == '0'\nassert solution('''8 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n2 6 1\n''') == '0'\nassert solution('''10 9\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n2 6 1\n3 6 2\n3 7 2\n4 7 1\n5 7 1\n''') == '0'\nassert solution('''4 4\n1 2 2\n1 3 1\n1 4 3\n2 4 1\n2 3 2\n2 4 2\n3 4 2\n3 5 1\n4 7 2\n5 7 1''') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\\n') == '2 4 6\\n'\nassert solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n') == '0 4 6\\n'\nassert solution('2 3 2\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n') == '0 4 6\\n'\nassert solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n') == '2 4 6\\n'\nassert solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n') == '0 4 6\\n'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '1'\nassert solution('3 5') == '2'\nassert solution('4 7') == '4 6'\nassert solution('5 7') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2\\n4 6\\n'\n'''"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '2\\n4 6'\nassert solution(\n'''\n3 4\n1 2 2\n2 3 2\n3 4 2\n''') == '0'\nassert solution(\n'''\n3 3\n1 2 2\n2 3 2\n3 4 2\n''') == '0'\nassert solution(\n'''\n6 5\n1 2 2\n2 3 2\n3 4 2\n4 5 3\n5 6 3\n''') == '3'\nassert solution(\n'''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '2'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2\\n4 6'\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0\\n'\nassert solution('''9 10\n1 2 3\n2 3 4\n2 3 5\n3 4 6\n1 4 8\n4 5 7\n5 6 9\n1 7 2\n7 8 9\n1 2 8''') == '7\\n8'\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0\\n'\n'''\nassert solution('''10 11\n1 2 3\n2 3 4\n2 3 5\n3 4 6\n1 4 8\n4 5 7\n5 6 9\n1 7 2\n7 8 9\n1 2 8''') == '2\\n7'\n"
    },
    {
        "number": 3127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2 4 6'\n\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '0 6'\n\nassert solution('''7 7\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '0 4 6'\n\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '0 4 6'\n\nassert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '0 6'"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '1\\n2\\n3\\n4\\n5\\n6'\n\nassert solution(\n'''\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '4\\n5\\n6'\n\nassert solution(\n'''\n10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n\nassert solution(\n'''\n12\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n\nassert solution(\n'''\n12\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6') == '4\\n5\\n6\\n1\\n2\\n3'\nassert solution('4\\n2 1 3 4 5 6') == '1\\n2\\n3\\n4\\n5\\n6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '1\\n2\\n3\\n4\\n5\\n6'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('5\\n4\\n3\\n2\\n1') == '4'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '4\\n5\\n6\\n1\\n2\\n3'\nassert solution('''12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '1\\n2\\n3'\nassert solution('''3\n1 1\n2 1\n3 1''') == '1\\n2\\n3'\nassert solution('''6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '1\\n2\\n3'\nassert solution('''30\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n2 26\n2 27\n2 28\n2 29\n2 30\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n3 23\n3 24\n3 25\n3 26\n3 27\n3 28\n3 29\n3 30\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n4 15\n4 16\n4 17\n4 18\n4 19\n4 20\n4 21\n4 22\n4 23\n4 24\n4 25\n4 26\n4 27\n4 28\n4 29\n4 30\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n5 15\n5 16\n5 17\n5 18\n5 19\n5 20\n5 21\n5 22\n5 23\n5 24\n5 25\n5 26\n5 27\n5 28\n5 29\n5 30\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n6 15\n6 16\n6 17\n6 18\n6 19\n6 20\n6 21\n6 22\n6 23\n6 24\n6 25\n6 26\n6 27\n6 28\n6 29\n6 30\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n7 17\n7 18\n7 19\n7 20\n7 21\n7 22\n7 23\n7 24\n7 25\n7 26\n7 27\n7 28\n7 29\n7 30\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n8 17\n8 18\n8 19\n8 20\n8 21\n8 22\n8 23\n8 24\n8 25\n8 26\n8 27\n8 28\n8 29\n8 30\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n9 18\n9 19\n9 20\n9 21\n9 22\n9 23\n9 24\n9 25\n9 26\n9 27\n9 28\n9 29\n9 30\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20\n10 21\n10 22\n10 23\n10 24\n10 25\n10 26\n10 27\n10 28\n10 29\n10 30\n11 1\n11 2\n11 3\n11 4\n11 5\n11 6\n11 7\n11 8\n11 9\n11 10\n11 11\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n11 19\n11 20\n11 21\n11 22\n11 23\n11 24\n11 25\n11 26\n11 27\n11 28\n11 29\n11 30\n12 1\n12 2\n12 3\n12 4\n12 5\n12 6\n12 7\n12 8\n12 9\n12 10\n12 11\n12 12\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n12 19\n12 20\n12 21\n12 22\n12 23\n12 24\n12 25\n12 26\n12 27\n12 28\n12 29\n12 30\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n13 13\n13 14\n13 15\n13 16\n13 17\n13 18\n13 19\n13 20\n13 21\n13 22\n13 23\n13 24\n13 25\n13 26\n13 27\n13 28\n13 29\n13 30\n14 1\n14 2\n14 3\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '4\\n5\\n6\\n1\\n2\\n3'\nassert solution('''4\n1 1\n1 2\n1 3\n1 4\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6''') == '1\\n2\\n3\\n4\\n5\\n6'\nassert solution('''8\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8'\nassert solution('''18\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n4 15\n4 16\n4 17\n4 18\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n5 15\n5 16\n5 17\n5 18\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n6 15\n6 16\n6 17\n6 18\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n7 17\n7 18\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n8 17\n8 18\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n9 18\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n11 1\n11 2\n11 3\n11 4\n11 5\n11 6\n11 7\n11 8\n11 9\n11 10\n11 11\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n12 1\n12 2\n12 3\n12 4\n12 5\n12 6\n12 7\n12 8\n12 9\n12 10\n12 11\n12 12\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n13 13\n13 14\n13 15\n13 16\n13 17\n13 18\n14 1\n14 2\n14 3\n14 4\n14 5\n14 6\n14 7\n14 8\n14 9\n14 10\n14 11\n14 12\n14 13\n14 14\n14 15\n14 16\n14 17\n14 18\n15 1\n15 2\n15 3\n15 4\n15 5\n15 6\n15 7\n15 8\n15 9\n15 10\n15 11\n15 12\n15 13\n15 14\n15 15\n15 16\n15 17\n15 18\n16 1\n16 2\n16 3\n16 4\n16 5\n16 6\n16 7\n16 8\n16 9\n16 10\n16 11\n16 12\n16 13\n16 14\n16 15\n16 16\n16 17\n16 18\n17 1\n17 2\n17 3\n17 4\n17 5\n17 6\n17 7\n17 8\n17 9\n17 10\n17 11\n17 12\n17 13\n17 14\n17 15\n17 16\n17 17\n17 18\n18 1\n18 2\n18 3\n18 4\n18 5\n18 6\n18 7\n18 8\n18 9\n18 10\n18 11\n18"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '4\\n5\\n6\\n1\\n2\\n3'\nassert solution('''1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '1\\n2\\n3'\nassert solution('''1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '1\\n2\\n3'\nassert solution('''1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '1\\n2\\n3'\nassert solution('''1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '1\\n2\\n3'\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1000\") == \"1\"\nassert solution(\"10000\") == \"1\"\nassert solution(\"100000\") == \"1\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '''4\n5\n6\n1\n2\n3\n1\n2\n3'''\nassert solution('''1\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3''') == '''1\n2\n3\n1\n2\n3'''\nassert solution('''1\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3''') == '''1\n2\n3\n1\n2\n3'''\nassert solution('''1\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3''') == '''1\n2\n3\n1\n2\n3'''\nassert solution('''1\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n4 1\n4 2\n4 3''') == '''1\n2\n3\n1\n2\n3'''\n"
    },
    {
        "number": 3128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"CCPP\") == \"2\"\nassert solution(\"CPC\") == \"1\"\nassert solution(\"CPCP\") == \"6\"\nassert solution(\"CCPCP\") == \"5\"\nassert solution(\"CCCPPC\") == \"9\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('CCCP') == 1\nassert solution('PPPPCCCC') == 8\nassert solution('PPPPCPCPP') == 4\nassert solution('CPCC') == 1\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nprint(solution(input()))\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('CCCP') == ''\nassert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nassert solution('PPPPCCCCP') == '10'\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"PPPC\") == \"1\"\nassert solution(\"CPCC\") == \"1\"\nassert solution(\"CPCCP\") == \"4\"\nassert solution(\"CCPPPP\") == \"10\"\nassert solution(\"CCCPPPPC\") == \"12\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"CPCC\") == \"1\"\nassert solution(\"PPCCCC\") == \"8\"\nassert solution(\"CPCCCP\") == \"7\"\nassert solution(\"CCCCCPP\") == \"9\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nassert solution('CPCC') == '1'\nassert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nassert solution('CPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPC\nassert solution('CCCCCPPPPPP') == '8'\nassert solution('PCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPC\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\n\nassert solution(\n'''\n3 2 1\n1 2\n3\n2\n''') == '3'\n\nassert solution(\n'''\n3 2 1\n1 3\n2 3\n3\n''') == '3'\n\nassert solution(\n'''\n2 1\n1 2\n1 2\n2\n''') == '2'\n\nassert solution(\n'''\n3 2 1\n2 3\n2\n3\n''') == '3'"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == '1 2 3'\nassert solution('3 2 1\\n1 2\\n2 3\\n2') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n1') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n1\\n1 2\\n2 3\\n3') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 1') == '1 2 3'\nassert solution('3 2 1\\n1 2\\n2 3\\n2\\n') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '3'\nassert solution('3 2 1\\n1 2\\n2 3\\n2\\n') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2 1\\n1 2\\n2 3\\n2\\n') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '3'\nassert solution('3 2 1\\n1 2\\n2 3\\n2\\n') == '2'\nassert solution('3 2 1\\n1 2\\n2 3\\n3\\n') == '2'\nassert solution('3 2 1\\n1 2\\n2 3\\n3\\n') == '2'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n1 3\\n2 3\\n3\\n') == '3'\nassert solution('2 3\\n1 2\\n2 3\\n3\\n') == '1 2 3'\nassert solution('1 2\\n1 3\\n2 3\\n3\\n') == '3'\nassert solution('1 2\\n1 3\\n2 3\\n3\\n') == '1 2 3'\nassert solution('1 2\\n1 3\\n2 3\\n3\\n') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3 2 1\n1 2\n2 3\n2\"\"\") == \"1 2 3\"\n\nassert solution(\n\"\"\"3 2 1\n1 3\n2 3\n3\"\"\") == \"3\"\n\nassert solution(\n\"\"\"3 2 1\n1 2\n2 3\n3\"\"\") == \"\"\n\nassert solution(\n\"\"\"3 2 1\n1 2\n1 3\n2 3\n1\"\"\") == \"\"\n\nassert solution(\n\"\"\"3 2 1\n1 2\n1 3\n2 3\n3\"\"\") == \"\""
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 1\\n1 2\\n2 3\\n2\\n') == '1 2 3\\n'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '3\\n'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == ''\nassert solution('3 2 1\\n2 2\\n3 3\\n1 1\\n') == '1 1\\n'\nassert solution('3 2 1\\n2 3\\n3 1\\n') == ''\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\nassert solution('''3 2 1\n1 2\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '3'\nassert solution('''3 2 1\n1 3\n3\n3\n''') == '3'\nassert solution('''3 2 1\n1 2\n2 3\n2\n''') == '2'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '1 2 3'\nassert solution('3 2 1') == '3'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('1 2') == '1 2'\nassert solution('1 3') == '1'\nassert solution('1 2 3') == '1'\nassert solution('2 3 1') == '1'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\nassert solution('''10 3\n6 6 6 6 6 6 6 6 6''') == '40'\nassert solution('''5 1\n5 5 5 5 5''') == '0'\nassert solution('''5 1\n0 0 0 0 0''') == '0'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\nassert solution('''5 1\n1 2 2 3 4''') == '5'\nassert solution('''5 1\n3 3 3 3 3''') == '2'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\nassert solution('''4 2\n2 4 2 3''') == '8'\nassert solution('''4 3\n2 4 2 3''') == '21'\nassert solution('''5 2\n2 4 2 3 4''') == '34'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'\nassert solution('''3 1\n1 0 1''') == '1'\nassert solution('''7 1\n2 1 1 2 1 2 1''') == '6'\nassert solution('''10 1\n5 2 5 3 5 3 2 4''') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 3\n2 4 2 3 4'''\n) == '39'\n\nassert solution(\n'''5 1\n1 0 1 1 1'''\n) == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == \"39\"\nassert solution('''5 1\n1 0 1 1 1''') == \"4\"\nprint(\"Passed! :)\")\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('5 3\\n2 4 2 3 4\\n') == '39'\nassert solution('5 1\\n1 0 1 1 1\\n') == '4'\nassert solution('5 1\\n1 0 1 1 1\\n') == '4'\nassert solution('5 1\\n2 4 2 3 4\\n') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\nxx.\nxxx\n...\n''') == \"1 1 2\\n2 3 1\"\n\nassert solution('''3 3\nxx.\nxxx\n...\n''') == \"1 1 2\\n2 3 1\"\n\nassert solution('''3 3\n..x\nxx.\nxxx\n''') == \"1 1 2\\n2 3 1\"\n\nassert solution('''3 3\nxx..\nxx.x\nxxx\n''') == \"1 1 2\\n2 2 2\"\n\nassert solution('''3 3\nxx.\nxxx\n...\n''') == \"1 1 2\\n2 3 1\""
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4') == '1 1 2'\nassert solution('3 3') == '1 1 2'\nassert solution('1 1') == '1 1 1'\nassert solution('2 2') == '1 1 2'\nassert solution('100 100') == '1 1 2'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('x') == ''\nassert solution('x.') == ''\nassert solution('...') == ''\nassert solution('...x') == ''\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"inputs/1\") == \"1 1 2\\n2 3 1\"\nassert solution(\"inputs/2\") == \"1 1 2\\n2 4 3\"\nassert solution(\"inputs/3\") == \"2 3 1\\n2 3 1\"\nassert solution(\"inputs/4\") == \"1 1 2\\n2 4 3\"\nassert solution(\"inputs/5\") == \"2 3 1\\n2 3 1\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n') == '1 1 2\\n2 3 1'\nassert solution('3 3\\n.x.\\n.xx\\n.xxx\\n') == '1 1 2\\n2 3 1'\nassert solution('3 3\\n.x.\\n.xx\\nxx.\\n') == '1 1 3\\n2 4 3'\nassert solution('3 3\\nxx.\\nxxx\\n.xx\\n') == '1 1 2\\n2 3 1'\nassert solution('4 6\\n.xx....\\nxx.xxx\\n...xxx\\n...xxx\\n') == '1 1 2\\n2 4 3\\n3 2 1'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2''') == '1 1 2'\nassert solution('''2 2''') == '2 4 3'\nassert solution('''3 4''') == '1 1 2'\nassert solution('''4 4''') == '2 4 3'\nassert solution('''7 8''') == '1 1 2'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3 3\nx.\n.x.\nx.\n''') == '1 1 2\\n2 3 1'\nassert solution(\n'''\n4 4\nx.xx\nxx.x\n.x.x\nxx.x\n''') == '1 1 2\\n2 3 1\\n1 1 2\\n2 3 2'\nassert solution(\n'''\n3 4\nxx...\nxx.x\nx.xx\n''') == '1 1 2\\n1 1 2\\n2 3 1\\n2 3 2'\nassert solution(\n'''\n4 4\nx.xxx\nx...x\nx.xx\nx..xx\n''') == '1 1 2\\n2 3 1\\n1 1 2\\n2 3 2'\nassert solution(\n'''\n4 4\nx...x\nx...x\nx...x\nx...x\n''') == '1 1 2\\n1 1 2\\n1 1 2\\n1 1 2'\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4\\n..x.\\n.xxx\\nxxx..\\nxxx..') == '1 1 2\\n2 3 1'\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n\n\"\"\"\nDefinition of Archeologist class.\n\"\"\"\n\n\nclass Archeologist:\n    def __init__(self, stdin: str) -> None:\n        \"\"\"\n        Initialize a new Archeologist object.\n\n        Args:\n            stdin (str): input file as a string.\n        \"\"\"\n        self.rows, self.cols = [int(x) for x in stdin.split()]\n        self.grid = []\n        for _ in range(self.rows):\n            self.grid.append(list(stdin.strip()))\n\n    def find_nearest_white_point(self, row, col, visited):\n        \"\"\"\n        Find the nearest white point to the given point (row, col) on the grid.\n\n        Args:\n            row (int): row index of the point.\n            col (int): column index of the point.\n            visited (set): A set of visited cells.\n\n        Returns:\n            int: The row index of the nearest white point.\n            int: The column index of the nearest white point.\n        \"\"\"\n        visited.add((row, col))\n        nearest_white_row = row\n        nearest_white_col = col\n        nearest_white_distance = sys.maxsize\n\n        for r in range(row - 1, row + 2):\n            for c in range(col - 1, col + 2):\n                if (r, c) not in visited and self.grid[r][c] == '.':\n                    distance = abs(r - row) + abs(c - col)\n                    if distance < nearest_white_distance:\n                        nearest_white_row = r\n                        nearest_white_col = c\n                        nearest_white_distance = distance\n\n        return nearest_white_row, nearest_white_col\n\n    def find_nearest_white_point_helper(self, row, col):\n        \"\"\"\n        Helper function to find the nearest white point to the given point (row, col) on the grid.\n\n        Args:\n            row (int): row index of the point.\n            col (int): column index of the point.\n\n        Returns:\n            int: The row index of the nearest white point.\n            int: The column index of the nearest white point.\n        \"\"\"\n        visited = set()\n        visited.add((row, col))\n        return self.find_nearest_white_point(row, col, visited)\n\n    def find_building_size(self, row, col):\n        \"\"\"\n        Find the size of the building on the grid from the given point (row, col).\n\n        Args:\n            row (int): row index of the point.\n            col (int): column index of the point.\n\n        Returns:\n            int: The size of the building.\n        \"\"\"\n        row, col = self.find_nearest_white_point_helper(row, col)\n        return abs(row - row) + abs(col - col)\n\n    def solve(self) -> str:\n        \"\"\"\n        Returns:\n            str: The string of output.\n        \"\"\"\n        solution = []\n        for row in range(self.rows):\n            for col in range(self.cols):\n                if self.grid[row][col] == 'x':\n                    solution.append('%d %d %d\\n' % (row + 1, col + 1, self.find_building_size(row, col)))\n        return ''.join(solution)\n\n\"\"\"\nCheck the above function.\n\"\"\""
    },
    {
        "number": 3132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 2\") == \"indistinguishable\"\nassert solution(\"2 0 1\") == \"0\"\nassert solution(\"2 2 1\") == \"0\"\nassert solution(\"2 1 1\") == \"0\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1\\n0 2 0\\n0 1 0\\n') == '0'\nassert solution('2 0 1\\n1 1 1\\n0 0 0\\n') == 'indistinguishable'\nassert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\\n') == '0'\nassert solution('10 1 5\\n0 2 0\\n0 1 0\\n1 2 1\\n0 3 0\\n0 1 0\\n0 4 0\\n0 2 0\\n0 3 0\\n0 4 0\\n0 5 0\\n0 6 0\\n0 7 0\\n0 8 0\\n0 9 0\\n0 10 0\\n') == '9'\nassert solution('10 1 2\\n0 2 1\\n0 1 0\\n1 2 1\\n0 3 0\\n0 1 0\\n0 4 0\\n0 2 0\\n0 3 0\\n0 4 0\\n0 5 0\\n0 6 0\\n0 7 0\\n0 8 0\\n0 9 0\\n0 10 0\\n') == '3'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1 2') == '0'\nassert solution('3 1 2\\n1 2 1') == 'indistinguishable'\nassert solution('3 1 2\\n0 2 0\\n0 1 0') == '0'\nassert solution('3 1 2\\n1 1 1\\n0 0 0') == '0'\nassert solution('3 1 2\\n1 2 1\\n0 0 0\\n0 1 0') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == output\n\"\"\""
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n'''\n) == '0'\n\nassert solution(\n'''\n2 0 1\n1 1 1\n0 0 0\n'''\n) == '0'\n\nassert solution(\n'''\n3 1 2\n1 2 1\n1 1 1\n1 1 1\n'''\n) == 'indistinguishable'\n\nassert solution(\n'''\n2 0 1\n1 1 1\n0 0 0\n'''\n) == '0'\n\nassert solution(\n'''\n3 0 1\n2 1 1\n0 0 0\n'''\n) == '0'"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"indistinguishable\"\n\nassert solution(stdin) == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\"\nassert stdin == \"\"\"3 1 2\n1 2 1\n0 2 0\n0 1 0\"\"\"\n\nstdin = \"\"\"2 0 1\n1 1 1\n0 0 0\"\"\"\nassert solution(stdin) == \"0\"\n\nstdin = \"\"\"5 0 2\n1 1 2\n2 2 1\n0 3 1\n1 4 0\n3 5 1\n0 3 0\n1 1 1\"\"\"\nassert solution(stdin) == \"1\"\n\nstdin = \"\"\"3 0 2\n2 0 1\n1 2 0\n0 1 0\"\"\"\nassert solution(stdin) == \"indistinguishable\"\n\nstdin = \"\"\"2 1 2\n1 2 1\n0 2 0\n0 1 0\"\"\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output(input())"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('0110') == '1111'\nassert solution('0') == '-1'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0110\\n1001\\n') == '1111\\n0111\\n1110\\n1111'\nassert solution('1\\n0') == '-1'\nassert solution('1\\n1') == '-1'\nassert solution('1\\n0\\n1') == '-1'\nassert solution('0\\n0\\n1') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('1011') == '1110'\nassert solution('1110') == '1111'\nassert solution('1111') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '1111\\n1110\\n1011\\n1111'\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(solution_test_case_1) == solution_test_case_1_expected\nprint(\"Test case 1 passed.\")\nassert solution(solution_test_case_2) == solution_test_case_2_expected\nprint(\"Test case 2 passed.\")\nassert solution(solution_test_case_3) == solution_test_case_3_expected\nprint(\"Test case 3 passed.\")\n\"\"\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"00101000\") == \"10100101\"\nassert solution(\"00011000\") == \"11111111\"\nassert solution(\"00011010\") == \"11111101\"\nassert solution(\"00011010\") == \"11111101\"\nassert solution(\"00011010\") == \"11111101\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0010001\") == \"1000000\"\nassert solution(\"0101010\") == \"1000000\"\nassert solution(\"1010101\") == \"00000001\"\nassert solution(\"1010111\") == \"00000011\"\nassert solution(\"0000001\") == \"00000001\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('0') == '-1'\nassert solution('1') == '-1'\nassert solution('1010') == '1110'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '+0'\nassert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('10001') == '-0001'\nassert solution('100001') == '-0001-0'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(read_str_list_from_console([10000])) == \"+0000\"\nassert solution(read_str_list_from_console([1111])) == \"+000-\", \"1111\"\nassert solution(read_str_list_from_console([-10000])) == \"-0000\"\nassert solution(read_str_list_from_console([-1111])) == \"-000-\", \"-1111\"\nassert solution(read_str_list_from_console([1,0,0,1])) == \"+000\", \"+000\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"10000\") == \"+0000\"\nassert solution(\n\"1111\") == \"+000-\"\nassert solution(\n\"1111\") == \"+000-\", \"Minimal binary representation\"\nassert solution(\n\"1001\") == \"+0001\", \"Minimal binary representation\"\nassert solution(\n\"10000\") == \"+0000\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\", \"Unexpected output\"\nassert solution(\"-10000\") == \"-0000\"\n\"\"\"\n\nimport unittest\nimport sys"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"-\") == \"-\"\nassert solution(\"+\") == \"+\"\nassert solution(\"1\") == \"1\"\nassert solution(\"101\") == \"+001-\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-', \"Must be the case\"\nassert solution('10000001') == '+0000-', \"Must be the case\"\nassert solution('11111111') == '+000-', \"Must be the case\"\nassert solution('1111111') == '+00-', \"Must be the case\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\", \"1111\"\nassert solution(\"100000001\") == \"+0-000-\", \"100000001\"\nassert solution(\"1000000\") == \"+-000\", \"1000000\"\nassert solution(\"100000000\") == \"-000\", \"100000000\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10000') == \"+0000\"\nassert solution('1101') == \"+00-\", \"1101\"\nassert solution('1111') == \"+000-\", \"1111\"\nassert solution('10001') == \"+001-\", \"10001\"\nassert solution('11111111') == \"+111-\", \"11111111\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\nassert solution('-100') == '-0000'\nassert solution('-001') == '-0001'\nassert solution('-100') == '-0000'\n"
    },
    {
        "number": 3135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '9'\nassert solution(\n'''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n2 1 1 1''') == '2'\nassert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n1 1 2''') == '1'\nassert solution('''2 2\n2 1\n1''') == '1'\nassert solution('''3 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n5 1\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1''') == '1'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1 1\\n1\\n2 1 1\\n1\") == \"2\"\nassert solution(\"2 2 1 1\\n1\\n2 1 1\\n1\") == \"2\"\nassert solution(\"2 2 1 1\\n1\\n2 1 1\\n1\") == \"2\"\nassert solution(\"2 2 1 1\\n1\\n2 1 1\\n1\") == \"2\"\nassert solution(\"2 2 1 1\\n1\\n2 1 1\\n1\") == \"2\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '9'\nassert solution('''3 4\n1 2\n3 4\n5 6\n7 8\n1 2 3\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '6'\nassert solution('''4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n7 7\n1 2 3\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '15'\nassert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n7 7\n1 2 3\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '14'\nassert solution('''9 8 4\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n7 7\n1 2 3\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '16'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n1') == '2'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n2\\n1') == '2'\nassert solution('2\\n1\\n2\\n1\\n1') == '2'\nassert solution('2\\n1\\n2\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '9'\nassert solution('''7 8 3 2\n1 2\n1 3\n3 4\n5 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '2'\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\nSample Output 2:\n2\n''') == '2'"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4 3 2') == '10'\nassert solution('7 8 3 2') == '20'\nassert solution('2 1 1 1') == '5'\nassert solution('7 3 4 2') == '15'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n        \"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\"\nassert solution(\n        \"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\"\nassert solution(\n        \"1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '9'\n\nassert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '2'\n\nassert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4''') == '2'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"3 4 2\\n2 2\\n1 1 R\\n010\\n000\\n000\\n3 2 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"2\"\n\nassert solution(\"3 4 2\\n2 2\\n1 1 R\\n010\\n000\\n000\\n3 2 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 2\\n2 2\\n1 1 R\\n0\\n0\\n000\\n') == '7'\nassert solution('3 3 1\\n2 2\\n1 1 R\\n0\\n0\\n000\\n') == '2'\nassert solution('3 5 2\\n1 1 U\\n6 0 R\\n12 0 R\\n0 4 R\\n0\\n0\\n000\\n') == '7'\nassert solution('3 5 2\\n1 1 U\\n6 0 R\\n12 0 R\\n0 4 R\\n0\\n0\\n000\\n') == '7'\nassert solution('3 5 2\\n1 1 U\\n6 0 R\\n12 0 R\\n0 4 R\\n0\\n0\\n000\\n') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\nassert solution(\n'''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\nassert solution(\n'''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '-1'\nassert solution(\n'''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '-1'\nassert solution(\n'''3 3 1\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('1 1 0') == 1\nassert solution('2 2 1') == 1\nassert solution('1 1 0') == 1\nassert solution('3 3 1') == 1\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == \"7\"\nassert solution('''3 4 2\n2 2\n3 4 U\n2327\n6009\n2112\n3 2 U\n1310\n2101\n1301''') == \"7\"\nassert solution('''3 4 2\n2 2\n3 4 L\n2327\n6009\n2112\n3 2 L\n1310\n2101\n1301''') == \"7\"\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301''') == \"7\"\nassert solution('''3 4 2\n2 2\n3 4 U\n2327\n6009\n2112\n3 2 U\n1310\n2101\n1301''') == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 1') == '2'\nassert solution('3 3 1') == '2'\nassert solution('2 4 1') == '-1'\nassert solution('3 5 2') == '-1'\nassert solution('3 4 2') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 2\\n2 2\\n1 1 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\nassert solution('3 4 2\\n2 2\\n1 1 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\nassert solution('3 4 2\\n2 2\\n1 1 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == answer\n"
    },
    {
        "number": 3137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == \"2\"\nassert solution('''3 3 1\n2 2\n1 1 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == \"7\"\nassert solution('''3 3 1\n2 2\n1 1 R\n1327\n2326\n2326\n1 1 R\n2326\n2326\n2326\n''') == \"-1\"\nassert solution('''3 3 1\n2 2\n1 1 R\n1327\n2326\n2326\n1 1 R\n2326\n2326\n2326\n''') == \"-1\"\nassert solution('''3 3 1\n2 2\n1 1 R\n1327\n2326\n2326\n1 1 R\n2326\n2326\n2326\n''') == \"-1\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '2'\nassert solution('''8''') == '4'\nassert solution('''1 2 4 1 1 2 5 1''') == '4'\nassert solution('''2 2 1 2 3''') == '2'\nassert solution('''3''') == '6'\n\n'''"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '4'\nassert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8') == '4'\nassert solution('5') == '2'\nassert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '4'\n\nn = int(stdin.readline().strip())\nsequence = [int(x) for x in stdin.readline().split()]\ncount = 0\n\nfor i in range(n):\n    for j in range(i+1, n+1):\n        if (sum(sequence[i:j]) == sum(sequence[j:j+2])):\n            count += 1\n            break\n\nprint(count)"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '''2'''\nassert solution('''8''') == '''4'''\nassert solution('''50''') == '''8'''\nassert solution('''100''') == '''10'''\nassert solution('''1000''') == '''40'''\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 1 2 3\\n\") == \"2\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\"\nassert solution(\"7\\n1 2 4 1 1 2 5 1 7\\n\") == \"0\"\nassert solution(\"10\\n1 2 4 1 1 2 5 1 7 9 10\\n\") == \"1\"\nassert solution(\"9\\n1 2 4 1 1 2 5 1 7 9 9 10 9\\n\") == \"7\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"10\") == \"8\"\nassert solution(\"11\") == \"8\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '''2\n2\n1\n2\n3\n'''\nassert solution('''8''') == '''4\n1\n2\n4\n1\n2\n5\n1\n'''\nassert solution('''1''') == '''1\n'''\nassert solution('''10''') == '''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n'''\nassert solution('''9''') == '''8\n2\n4\n6\n8\n'''\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"D 1 2\\nD 2 3\\nP 3\") == \"3\"\nassert solution(\"D 1 2\\nD 2 3\\nP 2\\nD 3 1\") == \"1\"\nassert solution(\"D 1 2\\nD 1 1\\nP 1\\nP 2\\nD 3 1\") == \"NE\"\nassert solution(\"D 1 1\\nP 2\\nP 3\\nD 2 1\") == \"1\"\nassert solution(\"D 1 1\\nP 3\\nP 1\\nD 1 1\") == \"1\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n    6\n    D 3 1\n    D 2 2\n    D 1 3\n    P 1\n    P 2\n    P 3\n''') == 'NE'\nassert solution('''\n    6\n    D 8 8\n    D 2 4\n    D 5 6\n    P 2\n    D 6 2\n    P 4\n''') == '3'\nassert solution('''\n    6\n    D 1 3\n    P 3\n''') == '3'\nassert solution('''\n    6\n    D 5 6\n    P 5\n''') == '1'\nassert solution('''\n    6\n    D 3 3\n    P 5\n''') == '3'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3''') == '3,1,2,NE'\nassert solution('''6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4''') == '3,1,2'\nassert solution('''6\nD 2 3\nP 1\nP 2\nP 3''') == '3,1,2,NE'\nassert solution('''6\nD 2 4\nD 3 5\nP 1\nP 2\nP 3''') == '3,1,2'\nassert solution('''6\nD 2 4\nD 2 4\nP 1\nP 2\nP 3''') == '3,1,2'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4') == '3'\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 1') == 'NE'\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4') == '3'\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 1\\nP 2\\nP 3') == '1'\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 1\\nP 2\\nP 3\\nP 4') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"3\\n1\\n\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\\n1\\n\"\n\"\"\""
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NE'\nassert solution('1\\n1') == 'NE'\nassert solution('1\\n2\\n2') == 'NE'\nassert solution('1\\n2\\n1\\n1') == 'NE'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3') == '3\\n1\\n'\nassert solution('5\\nD 5 2\\nP 1\\nP 2\\nP 3') == '1\\n2\\n'\nassert solution('5\\nD 1 4\\nP 3\\nD 2 4\\nP 1\\nP 2') == '2\\n3\\n'\nassert solution('5\\nD 2 4\\nP 1\\nP 2\\nP 3') == '1\\n2\\n'\nassert solution('5\\nD 1 4\\nP 2\\nP 3\\nD 2 4\\nP 1') == '3\\n2\\n'\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\nassert solution(\"5\\nD 5 5\\nD 1 4\\nP 1\\nP 2\") == \"1\\n1\\n1\"\nassert solution(\"10\\nD 10 10\\nD 1 10\\nD 1 10\\nD 1 10\\nP 1\\nP 2\\nP 3\") == \"2\\n1\\n1\"\nassert solution(\"5\\nD 5 5\\nD 2 5\\nD 4 4\\nP 2\\nP 2\") == \"1\\n1\"\nassert solution(\"5\\nD 5 5\\nD 1 4\\nP 1\\nP 1\") == \"1\\n2\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == 'NE\\nNE\\nNE'\n\nassert solution('''\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '3\\n1\\n'\n\nassert solution('''\n1\nP 1\n''') == '1'\n\nassert solution('''\n4\nD 3 5\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\nP 4\nP 5\nP 6\n''') == '2\\n3\\n'\n\nassert solution('''\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '3\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 6 1') == '5'\nassert solution('1 1 1 6 1') == '5'\nassert solution('2 3 5 6') == '5'\nassert solution('2 3 5 6') == '5'\nassert solution('3 3 2 2') == '2'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''2 3 4 5\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '4'\nassert solution('''2 3 5 6\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '5'\nassert solution('''2 3 5 6\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''2 3 1 10\n0 0\n1 4\n3 2\n''') == '1'\nassert solution('''2 3 1 10\n0 0\n1 4\n3 2\n''') == '2'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''1 2 1 10\n0 0\n1 4\n3 2''') == '2'\n\nassert solution(\n'''2 2 1 10\n0 0\n1 4\n3 2''') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''3 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\nassert solution('''2 3 2 1\n0 0\n1 1\n2 2\n''') == '3'\nassert solution('''2 3 2 1\n0 0\n1 1\n1 1 6\n1 2 2\n''') == '3'\nassert solution('''3 3 2 2\n1 1\n2 2\n2 2\n''') == '2'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution('''2 2 1 10\n0 0\n1 4\n3 2\n''')\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''3 2 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''3 2 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\nassert solution('''1 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin1) == '2'\nassert solution(stdin2) == '5'\nassert solution(stdin3) == '7'\nassert solution(stdin4) == '3'\nassert solution(stdin5) == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 1 10') == '2'\nassert solution('2 3 5 6') == '5'\nassert solution('2 3 5 6') == '5'\nassert solution('2 3 5 6') == '5'\nassert solution('3 3 5 6') == '6'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '2.0000000000'\nassert solution('''5''') == '2.0000000000'\nassert solution('''3''') == '2.0000000000'\nassert solution('''0''') == '1.0000000000'\nassert solution('''0.1''') == '1.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == '2.0000000000'\nassert solution('''2\n-2.0 -3.0 4.0\n1.0 -2.0 5.0\n-3.0 1.0 2.0\n-1.0 -3.0 -2.0\n-5.0 3.0 -7.0\n3.0 -7.0 2.0\n3.0 3.0 -4.0\n-2.0 -7.0 6.0\n-5.0 -5.0 -6.0''') == '9.9999999999'\nassert solution('''4\n0.1 -0.3 0.2\n-1.0 -1.0 -1.3\n0.5 0.7 0.2\n-0.3 -0.4 -0.1\n0.0 -0.4 0.3''') == '2.000000000'\nassert solution('''2\n0.1 -0.3 0.2\n-1.0 -1.0 -1.3\n0.5 0.7 0.2\n-0.3 -0.4 -0.1\n-0.3 0.5 -0.2\n0.0 -0.4 0.3''') == '3.000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\"\nassert solution(\"\"\"5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n\"\"\") == \"2.0000000000\"\n\"\"\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == \"2.0000000000\"\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == \"2.0000000000\"\n\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == '2.0000000000'\n'''"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == '2.0000000000'\nassert solution('''100\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'\nassert solution('''7\n2.0 1.0 0.0\n-1.5 0.0 0.0\n1.5 -1.5 -1.5\n-0.2 -0.2 -0.2\n-2.3 0.0 0.0\n-1.3 0.0 -0.5\n0.5 0.0 -0.5\n''') == '4.6333059464'\nassert solution('''9\n0.0 -1.0 -1.0\n1.0 -0.2 0.2\n0.0 -0.5 0.0\n-0.5 1.0 -0.5\n0.0 -0.5 1.0\n-0.5 0.0 0.5\n-1.5 -0.2 0.0\n0.0 -1.0 0.0\n''') == '5.9139753710'\nprint('All tests passed successfully.')\n'''\n\nimport sys"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 9 5') == '1\\n5'\nassert solution('1 100 10') == '9\\n19'\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1, 10, 5) == '1\\n5'\nassert solution(1, 100, 10) == '9\\n19'\nassert solution(2, 1, 135) == '4\\n87219'\nprint(\"\\n\\nPassed!\\n\")\n\"\"\""
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 9 5') == '1\\n5'\nassert solution('1 100 10') == '9\\n19'\nassert solution('1 100 100') == '9'\nassert solution('1 100 100000000000') == '9'\nassert solution('1 100 1') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\"\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 1 3') == '1'\nassert solution('1 9 3') == '1'\nassert solution('1 9 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 9 5''') == '1'\nassert solution('''1 100 10''') == '9'\nassert solution('''1 1 1''') == '5'\nassert solution('''1 100 10''') == '9'\nassert solution('''10 1 100''') == '19'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\\n1\"\nassert solution(\"5 2\") == \"1\\n4 1 3 2 5\"\nassert solution(\"4 5\") == \"1\\n4 1 3 2 5\"\nassert solution(\"1 1\") == \"1\\n1\"\nassert solution(\"4 5\") == \"1\\n4 1 3 2 5\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1\\n1\\n1') == '1'\nassert solution('1 1\\n1\\n1') == '1'\nassert solution('1 1\\n1\\n1') == '1'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1') == '7'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1') == '7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1\\n1'\nassert solution('4 5') == '7\\n4 4 2 4 4 1 4'\nassert solution('2 3') == '6\\n1 2 3'\nassert solution('1 2') == '1\\n2'\nassert solution('1 1') == '1\\n1'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n2\\n2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 1\\n3\\n3\\n\") == \"2\\n1 1\\n\"\nassert solution(\"1 1\\n3\\n4\\n\") == \"2\\n1 1\\n\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"4 3 2 1\") == \"7\"\nassert solution(\"4 1 2 4 4\") == \"1 4 4 2 4 1 4\"\nassert solution(\"4 1 2 4 4\") == \"1 4 4 2 4 1 4\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''4 5\n4 1 2 4 4\n4 3 2 1''') == '7\\n4 4 2 4 4 1 4'\nassert solution('''3 5\n3 2 1\n4 1 3''') == '2\\n2 4 2'\nassert solution('''2 5\n4 1 2 4 4\n4 3 2 1''') == '2\\n2 4 2'\nassert solution('''5 10\n5 4 1 4 3 2 5\n5 2 1 4 5 3 3''') == '5'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 5') == '1'\nassert solution('5 6') == '4 4 2 4 4 1 4'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"1 1 2 4 4\"\nassert solution(\"4 1 2 4 4\") == \"1 4 2 4 1 4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 1 2 4 4\") == \"7 4 4 2 4 1 4\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''1''') == '1'\nassert solution('''1 2''') == '1'\nassert solution('''1 2 4''') == '1 4'\nassert solution('''1 2 4 4''') == '1 4'\n"
    },
    {
        "number": 3143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\"\nassert solution(\"3 3\\n1 2 1\\n1 2 2\") == \"1\\n1 2 1 2\"\nassert solution(\"2 2\\n1 1\\n1 2\") == \"1\\n1 1 1\"\nassert solution(\"2 2\\n1 1\\n1 2\") == \"1\\n1 1 1\"\nassert solution(\"4 4\\n1 1 1 1\\n1 2 2 2\") == \"7\\n4 4 2 4 4 1 4\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"2 10 1 2\") == \"4\"\nassert solution(\"2 1 1 0\") == \"2\"\nassert solution(\"10 10 5 0\") == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 10 3 2\"\n) == \"4\"\nassert solution(\n    \"10 10 5 0\"\n) == \"10\"\nassert solution(\n    \"10 10 7 1\"\n) == \"9\"\nassert solution(\n    \"1000000 1000 10000 10 10\"\n) == \"1000000\"\nassert solution(\n    \"1000000 1000 10000 10 10\"\n) == \"1000000\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"1 10 3 2\") == \"4\"\nassert solution(\"1 10 4 2\") == \"4\"\nassert solution(\"1 10 4 2\") == \"4\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"1 100 1 2\") == \"0\"\nassert solution(\"2 100 1 2\") == \"0\"\nassert solution(\"1 100 2 2\") == \"0\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 10 3 2'''\n) == '4'\nassert solution('''10 10 5 0'''\n) == '10'\nassert solution('''3 5 3 2'''\n) == '7'\nassert solution('''1 1 1 1'''\n) == '1'\nassert solution('''10 10 5 0'''\n) == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\nassert solution('1 10 3 2') == '4'\nassert solution('2 10 3 5 0') == '5'\nassert solution('10 10 5 0') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"0 10 3 2\") == \"10\"\nassert solution(\"0 10 5 2\") == \"10\"\nassert solution(\"0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 20\n0123456789\n''') == \"10\"\nassert solution('''6 100 9294\n23689\n''') == \"111\"\nprint(\"Tests passed successfully.\")"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1 20\") == \"10\"\nassert solution(\"6 100 9294\") == \"111\"\nassert solution(\"2 1 9\") == \"0\"\nassert solution(\"6 100 9\") == \"0\"\nassert solution(\"9 9 9\") == \"999\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\nassert solution('1 1 2') == '10'\nassert solution('0 2 9') == '2'\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1 20\n0123456789''') == '10'\nassert solution('''6 100 9294\n23689''') == '111'\nassert solution
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 20\\n0123456789\\n') == '10\\n'\nassert solution('6 100 9294\\n23689\\n') == '111\\n'\nassert solution('1 10 10\\n0123456789\\n') == '0\\n'\nassert solution('1 1 2\\n02\\n') == '2\\n'\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 1 2\") == \"3\"\nassert solution(\"9 2 4\") == \"3\"\nassert solution(\"4 5 6\") == \"4\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 3 4\") == \"1\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1 20\n0123456789''') == '10'\nassert solution('''6 100 9294\n23689''') == '111'"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 1 20') == '1'\nassert solution('2 1 20') == '1'\nassert solution('6 100 9294') == '111'\nassert solution('2 1 20') == '1'\n"
    },
    {
        "number": 3145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"111111111\"\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 2.666667'\nassert solution('''3 1\n1 R 2\n2 R 2\n3 R 2''') == '1.500000 1.666667'\nassert solution('''2 5\n1 R 2\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 1.000000'\nassert solution('''7 7\n1 S 4\n1 R 2\n1 S 2\n1 R 2\n1 S 2\n1 S 2\n1 R 2''') == '1.333333 1.33333'\nassert solution('''10 5\n1 S 8\n1 S 9\n1 R 1\n1 S 1\n1 S 3\n1 R 3\n1 R 3\n1 R 4\n1 R 3\n1 R 3\n1 R 3''') == '2.00000 1.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n2 R 4\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"2 1\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\"\nassert solution(\"1 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1\\n1 R 1"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1 1\\n\") == \"0.500000 0.500000\"\nassert solution(\"1 1\\n1 1\\n\") == \"0.500000 0.500000\"\nassert solution(\"1 1\\n1 1\\n1 1\\n\") == \"0.500000 0.500000\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == '2.666667 3.333333'"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == answer"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 3.666667'\n'''\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1.50000'\nassert solution('2 2') == '2.666667'\nassert solution('2 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 2.666667'\nassert solution('2 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.50000 2.666667'\nassert solution('2 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.50000 2.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 3146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == \"1.500000 2.666667\"\n\nassert solution('''4 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2''') == \"1.000000 2.666667\"\n\nassert solution('''2 2\n1 R 4\n2 R 2''') == \"0.500000 0.500000\"\n\nassert solution('''2 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == \"1.000000 2.666667\"\n\nassert solution('''1 1\n1 R 1''') == \"0.000000 0.000000\""
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6\\n101010\\n111001\\n101001\\n') == '3'\nassert solution('5 5\\n10010\\n01010\\n10101\\n01001\\n') == '3'\nassert solution('1 1\\n1') == '-1'\nassert solution('1 1\\n0') == '-1'\nassert solution('1 1\\n0\\n0') == '-1'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('stdin') == '3'\nassert solution('stdin') == '3'\nassert solution('stdin') == '3'\nassert solution('stdin') == '3'\nassert solution('stdin') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''3 4\n101010\n111001\n101001''') == '2'\nassert solution('''4 6\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''3 4\n101010\n111001\n101001''') == '-1'\nassert solution('''3 4\n10010\n01010\n10101\n01001''') == '-1'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('101010\\n111001\\n101001\\n') == '3'\nassert solution('10\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''1 1\n0''') == '-1'\nassert solution('''5 5\n101010\n111001\n101001\n01010\n01001''') == '3'\nassert solution('''4 3\n10010\n01010\n10101\n01001''') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 5\\n10010\\n01010\\n10101\\n01001') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('input_01.txt') == '3'\nassert solution('input_02.txt') == '3'\nassert solution('input_03.txt') == '2'\nassert solution('input_04.txt') == '3'\nassert solution('input_05.txt') == '2'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''2 3\n00\n10''') == '2'\nassert solution('''2 3\n00\n10\n01''') == '-1'\nassert solution('''3 4\n01010\n00100\n11101\n01110\n01011\n00111''') == '-1'\nassert solution('''4 4\n0000\n0000\n0000\n0000\n0000''') == '-1'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''3 5\n101010\n01010\n10101\n01001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''4 6\n10010\n01010\n10101\n01001''') == '-1'\n"
    },
    {
        "number": 3147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''3 5\n101010\n111001\n101001''') == '3'\nassert solution('''5 6\n10010\n01010\n10101\n01001\n00001''') == '3'\nassert solution('''5 6\n10010\n01010\n10101\n01001\n00001''') == '-1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 -1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1''') == '3 4'\nassert solution('''8\n6 3\n8 4\n6 3\n8 -1\n-1 -1\n-1 -1\n1 1\n-1 -1\n1 -1\n''') == '-3 -1'\nassert solution('''4\n3 -1\n-1 -1\n2 -1\n-1 3\n''') == '-1 -1'\nassert solution('''3\n3 -1\n-1 -1\n1 -1\n''') == '-1 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 -1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1''') == '3 4'\nassert solution('''100\n-11\n-10\n-9\n-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '103 -3'\nassert solution('''1000\n1\n-2\n0\n-3\n-1\n-2\n-3\n-4\n-5\n-6\n-7\n-8\n-9\n-10\n-11\n-12\n-13\n-14\n-15\n-16\n-17\n-18\n-19\n-20\n-21\n-22\n-23\n-24\n-25\n-26\n-27\n-28\n-29\n-30\n-31\n-32\n-33\n-34\n-35\n-36\n-37\n-38\n-39\n-40\n-41\n-42\n-43\n-44\n-45\n-46\n-47\n-48\n-49\n-50\n-51\n-52\n-53\n-54\n-55\n-56\n-57\n-58\n-59\n-60\n-61\n-62\n-63\n-64\n-65\n-66\n-67\n-68\n-69\n-70\n-71\n-72\n-73\n-74\n-75\n-76\n-77\n-78\n-79\n-80\n-81\n-82\n-83\n-84\n-85\n-86\n-87\n-88\n-89\n-90\n-91\n-92\n-93\n-94\n-95\n-96\n-97\n-98\n-99\n-100''') == '99 1'\nassert solution('''1000\n-1\n-2\n0\n-3\n-1\n-2\n-3\n-4\n-5\n-6\n-7\n-8\n-9\n-10\n-11\n-12\n-13\n-14\n-15\n-16\n-17\n-18\n-19\n-20\n-21\n-22\n-23\n-24\n-25\n-26\n-27\n-28\n-29\n-30\n-31\n-32\n-33\n-34\n-35\n-36\n-37\n-38\n-39\n-40\n-41\n-42\n-43\n-44\n-45\n-46\n-47\n-48\n-49\n-50\n-51\n-52\n-53\n-54\n-55\n-56\n-57\n-58\n-59\n-60\n-61\n-62\n-63\n-64\n-65\n-66\n-67\n-68\n-69\n-70\n-71\n-72\n-73\n-74\n-75\n-76\n-77\n-78\n-79\n-80\n-81\n-82\n-83\n-84\n-85\n-86\n-87\n-88\n-89\n-90\n-91\n-92\n-93\n-94\n-95\n-96\n-97\n-98\n-99\n-100''') == '98 -100'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\"\"\") == '-3 -1\\n3 1\\n\"\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n-1') == '-1 -1'\nassert solution('3\\n-1\\n2 2') == '-3 1'\nassert solution('3\\n-1\\n2 3') == '-1 -1'\nassert solution('3\\n-1\\n2 -1') == '-1 1'\nassert solution('3\\n-1\\n2 0') == '-1 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\"\"\") == \"\"\"3 4\n3 -1\n\"\"\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1''') == '3 4'\nassert solution('''9\n-18191546 -18191546\n-18191546 -18191546\n-18191546 -18191546\n-18191546 -18191546\n-18191546 -18191546\n-18191546 -18191546\n-18191546 -18191546\n-18191546 -18191546''') == '-18191546 -18191546'\nassert solution('''10\n-2147483648 2147483648\n-2147483648 2147483648\n2147483648 2147483648\n-2147483648 2147483648\n-2147483648 2147483648\n-2147483648 2147483648\n-2147483648 2147483648\n2147483648 2147483648\n2147483648 2147483648''') == '-2147483648 2147483648'\nassert solution('''100\n0 0\n0 1\n1 0\n0 -1\n-1 0\n-1 -1\n-2147483648 2147483648\n-2147483648 2147483648\n-2147483648 2147483648\n2147483648 2147483648\n2147483648 2147483648''') == '-2147483648 2147483648'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n-1 1\\n0 0') == '-3 1'\nassert solution('3\\n0 0\\n0 1\\n1 0\\n0 -1') == '-3 1'\nassert solution('6\\n0 0\\n6 1\\n2 -1\\n0 -3\\n-1 -3') == '-3 4'\nassert solution('5\\n-1 1\\n0 0\\n0 1\\n1 0\\n0 -1') == '-3 1'\nassert solution('6\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '-3 1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 -1\\n3 1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1''') == '3 4\\n3 -1'\n'''\n   .. i have read the problem right, I am thinking: \n    \n    i have 2 left, and I will use -1 as the id, so i need to use the nearest one\n    \n    i will look through the list of x,y, as i am considering -1 as x, so there are \n    if len(list_x) == 1:\n        if abs(list_x[0][0] - -1) < abs(list_x[0][0] - x):\n            x = list_x[0][0]\n        else:\n            x = -1\n    elif len(list_x) == 2:\n        if abs(list_x[0][0] - -1) < abs(list_x[1][0] - x):\n            x = list_x[0][0]\n        else:\n            x = list_x[1][0]\n    else:\n        if abs(list_x[0][0] - -1) < abs(list_x[2][0] - x):\n            x = list_x[0][0]\n        else:\n            x = list_x[2][0]\n    \n    \n    if len(list_y) == 1:\n        if abs(list_y[0][0] - -1) < abs(list_y[0][0] - y):\n            y = list_y[0][0]\n        else:\n            y = -1\n    elif len(list_y) == 2:\n        if abs(list_y[0][0] - -1) < abs(list_y[1][0] - y):\n            y = list_y[0][0]\n        else:\n            y = list_y[1][0]\n    else:\n        if abs(list_y[0][0] - -1) < abs(list_y[2][0] - y):\n            y = list_y[0][0]\n        else:\n            y = list_y[2][0]\n    \n    return '{} {}'.format(x, y)\n"
    },
    {
        "number": 3148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected1\nassert expected2 == solution(stdin)\n\"\"\"\nimport sys"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'\nassert solution(\n'''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'\nassert solution(\n'''3 0.25 2 45 20\n0 0\n2 0\n1 0.25\n''') == '1 0.75'\nassert solution(\n'''3 0.25 2 45 20\n0 0\n2 0\n0 1.5\n''') == '1 0.75'\nassert solution(\n'''3 0.25 2 45 20\n0 0\n2 0\n0 1.5\n''') == '1 0.75'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0.25 2 45 20\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'\nassert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5') == '2 5.086781'\nassert solution('3 4 1 1 2\\n0 0\\n1 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5 1.5\\n1.5"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\"\n\"\"\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1 12.715255\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\"\nassert solution(\"3 0.25 2 0\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\"\nassert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '3 6 5 45 20 0 0 2 0 1 1.5'\n    ) == '2 5.086781'\nassert solution(\n    '3 0.25 2 45 20 0 0 2 0 1 1.5'\n    ) == '1 12.715255'\nassert solution(\n    '3 1 0 45 20 1 0 2 0 1 1.5'\n    ) == '1 12.715255'\nassert solution(\n    '3 1 0 45 20 1 0 2 0 1 1.5'\n    ) == '1 12.715255'\nassert solution(\n    '3 1 0 45 20 1 0 2 0 1 1.5'\n    ) == '1 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n'\n) == '2 5.086781'\n\n'''\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nassert solution('''0\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0 0 1\n0 0 0 1\n1 1 2 1\n0 0 2 1\n0 0 1 1\n0 0 1 1\n0 0 2 1\n0 0"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0\\n0\\n0\\n0\\n0\\n0\") == \"8\"\nassert solution(\"2\\n0\\n0\\n0\\n0\\n0\\n0\") == \"1\"\nassert solution(\"3\\n0\\n0\\n0\\n0\\n0\\n0\") == \"6\"\nassert solution(\"3\\n1 1 5 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\") == \"1\"\nassert solution(\"10\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8'\nassert solution('1 0 1 1\\n1 0 0 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nassert solution('5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nassert solution('8 0 0 0\\n1 0 0 0\\n0 0 1 0\\n1 0 1 0\\n0 1 1 0\\n0 0 2 0\\n2 0 0 0\\n2 0 0 0\\n2 0 0 0\\n2 0 0 0\\n2 0 0 0\\n2 0 0 0\\n') == '1'\nassert solution('3 2 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aaa') == 'aa'\nassert solution('aaaaa') == 'aaaa'\nassert solution('aabbbbaa') == 'aabbbba'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''\n2\n1 1 1 1\n1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == '8'\nassert solution('5\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nassert solution('8\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n0 1 1 1\\n') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1''') == '8'\nassert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nprint('Tests passed successfully.')\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8'\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nassert solution('4\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '1'\nassert solution('1\\n0 0 0\\n1 0 0\\n') == '1'\nassert solution('1\\n0 0 0\\n0 0 0\\n1 0 0\\n0 0 0\\n') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"impossible\"\nassert solution(input(\"9\\n\")) == \"4 3\"\nassert solution(input(\"10\\n\")) == \"impossible\"\nassert solution(input(\"11\\n\")) == \"4 3\"\nassert solution(input(\"10\\n\")) == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"7\"\n) == \"4 3\"\nassert solution(\n    \"10\"\n) == \"impossible\"\nassert solution(\n    \"6\"\n) == \"impossible\"\nassert solution(\n    \"2\"\n) == \"impossible\"\nassert solution(\n    \"1\"\n) == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == \"4 3\"\nassert solution(2) == \"impossible\"\nassert solution(3) == \"impossible\"\nassert solution(4) == \"impossible\"\nassert solution(5) == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nassert solution('123') == 'impossible'\nassert solution('1000000000') == 'impossible'\nassert solution('10000000000') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"100\") == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"7\"\n) == \"4 3\"\nassert solution(\n\"10\"\n) == \"impossible\"\nassert solution(\n\"1\"\n) == \"impossible\"\nassert solution(\n\"1000\"\n) == \"impossible\"\nassert solution(\n\"10000\"\n) == \"impossible\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == '16'\nassert solution('1\\n2\\n3\\n4') == '109'\nassert solution('1\\n1\\n1\\n1') == '15'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '567'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '1610'\n\n'''\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n1\n3''') == '16'\nassert solution('''4\n2\n4\n1\n4''') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"10\\n1\"\nassert solution(\"2\\n1\") == \"10\\n1\"\nassert solution(\"2\\n2\\n1\\n4\") == \"109\\n1\"\nassert solution(\"2\\n2\\n2\\n1\\n4\") == \"109\\n1\"\nassert solution(\"2\\n1\\n2\\n2\\n1\\n4\") == \"109\\n1\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2\n1\n3\n\"\"\") == \"16\"\nassert solution(\"\"\"4\n2\n4\n1\n4\n\"\"\") == \"109\"\nassert solution(\"\"\"100\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\"\"\") == \"1090526441560287\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '109'\nassert solution(stdin) == '100110'\nassert solution(stdin) == '100111'\nassert solution(stdin) == '101000'\nassert solution(stdin) == '101001'\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n1\n3\n''') == '16'\nassert solution('''4\n2\n4\n1\n4\n''') == '109'\nassert solution('''6\n2\n4\n1\n4\n1\n4\n''') == '5388'\nassert solution('''10\n2\n4\n1\n4\n1\n4\n1\n4\n1\n4\n1\n4\n''') == '600851475143'\n\n'''\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"011\"\nassert solution(\"4\") == \"0110\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n2\") == \"1\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\"1 2\\n1 2\\n1 2\\n1 2\\n\") == \"2\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '''3\n1 2 1\n1 2 2\n1 2 2\n'''\nassert solution('''2 3\n4 3 1 1\n1 3\n2 3\n4 1\n''') == '''5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n'''\nassert solution('''4 2\n5 1\n1 2\n2 3\n3 4\n2 2\n1 1\n1 2\n1 3\n''') == '''3\n1 2 1\n1 2 2\n1 2 2\n'''\nassert solution('''2 3\n4 3 1 1\n1 3\n2 3\n4 1\n''') == '''5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n'''\nassert solution('''4 2\n5 2\n1 2\n2 3\n3 4\n4 1\n1 2\n1 3\n''') == '''2\n1 2 1\n1 2 2\n1 2 2\n1 2 2\n'''\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"2 4\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\"1 2\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"2 4\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\"1 2\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n\") == \"1 2\\n\"\nassert solution(\"2\\n2\\n\") == \"1 1\\n1 2\\n2 2\\n\"\nassert solution(\"3\\n3\\n\") == \"1 1 1\\n1 2 1\\n1 1 1\\n2 1 2\\n2 1 2\\n2 1 2\\n\"\nassert solution(\"4\\n3\\n\") == \"1 2 1\\n1 3 1\\n1 2 1\\n1 3 1\\n1 2 1\\n2 1 2\\n2 1 2\\n2 1 2\\n2 1 2\\n2 1 2\\n2 1 2\\n\"\nassert solution(\"5\\n5\\n\") == \"1 1 1 1 1\\n1 2 1 1 1\\n1 3 1 1 1\\n1 1 1 1 1\\n1 3 1 1 1\\n1 2 1 1 1\\n1 3 1 1 1\\n1 2 1 1 1\\n1 3 1 1 1\\n1 3 1 1 1\\n\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"2 3\"\n\"5 1\"\n\"1 2\"\n\"1 2\"\n\"1 2\"\n) == \"\"\"3\n1 2 1\n1 2 2\n1 2 2\n\"\"\"\n\nassert solution(\n\"4 3\"\n\"5 3 1 1\"\n\"1 3\"\n\"2 3\"\n\"4 1\"\n) == \"\"\"5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n\"\"\"\n\nassert solution(\n\"4 3\"\n\"5 3 1 1\"\n\"1 3\"\n\"2 3\"\n\"4 1\"\n) == \"\"\"5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n\"\"\"\n\nassert solution(\n\"5 4\"\n\"5 4 1 1\"\n\"1 4\"\n\"2 4\"\n\"4 1\"\n) == \"\"\"6\n1 4 1\n2 4 2\n4 1 0\n2 4 1\n4 1 0\n\"\"\"\n\nassert solution(\n\"5 4\"\n\"5 4 1 1\"\n\"1 4\"\n\"2 4\"\n\"4 1\"\n) == \"\"\"6\n1 4 1\n2 4 2\n4 1 0\n2 4 1\n4 1 0\n\"\"\""
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\nassert solution(\"5 3\\n5 1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\"\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"3\\n1 3 1\\n2 3 2\\n4 1 0\"\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"3\\n1 3 1\\n2 3 2\\n4 1 0\"\nassert solution(\"5 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"3\\n1 3 1\\n2 3 2\\n4 1 0\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\"2 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2') == '3'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1') == '5\\n1 3 1\\n2 3 2\\n4 1 0'\nassert solution('10 2\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n1 2\\n2 1\\n1 2\\n2 1') == '9\\n1 3 1\\n2 3 2\\n4 1 0\\n1 2 1\\n2 1 0'\nassert solution('10 2\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n1 2\\n2 1\\n1 2\\n2 1') == '9\\n1 3 1\\n2 3 2\\n4 1 0\\n1 2 1\\n2 1 0'\nassert solution('10 2\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n1 2\\n2 1\\n1 2\\n2 1') == '9\\n1 3 1\\n2 3 2\\n4 1 0\\n1 2 1\\n2 1 0'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1 2 1'\nassert solution('2 3') == '2 3 2'\nassert solution('5 3 1 1') == '5 3 1 2'\nassert solution('2 1') == '2 1 0'\nassert solution('4 1') == '4 1 0'\n"
    },
    {
        "number": 3153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\n    \"3 2\\n2 1\\n1 1\\n\") == \"3\\n1 2 1\\n2 1 1\\n\"\nassert solution(\n    \"2 2\\n1 1\\n1 1\\n\") == \"2\\n1 1 1\\n1 1 1\\n\"\nassert solution(\n    \"1 2\\n1 1\\n\") == \"1\\n1 2 1\\n1 1 1\\n\"\nassert solution(\n    \"2 2\\n1 1\\n1 1\\n\") == \"1\\n1 2 1\\n1 1 1\\n\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\"\"\"\n) == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\n'''\nimport unittest"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == '1 2'\nassert solution('1 1 1\\n2 2 2\\n2 2 1\\n2 2 1\\n3 2 3\\n4 2 1') == 'impossible'\nassert solution('1 1 1\\n2 2 2\\n2 2 1\\n2 2 1\\n3 2 3\\n4 2 1\\n0 1 1') == '1 2'\nassert solution('0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n0 1 1') == '1 2'\nassert solution('0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n1 1 1') == '1'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1 2'"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == \"impossible\"\nassert solution('''2 1\n10 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 2:\nimpossible\n''') == \"impossible\"\nassert solution('''2 2\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 2:\n1 2\n''') == \"1 2\"\nassert solution('''3 2\n10 5\n0 1 3\n0 2 3\n0 3 1\n1 1 3\n1 2 2\n1 2 3\n1 3 0\n2 1 1\n2 2 2\n2 3 1\n3 1 2\n3 2 3''') == \"1 2\"\nassert solution('''3 3\n10 5\n0 1 3\n0 2 3\n0 3 1\n1 1 3\n1 2 2\n1 2 3\n1 3 0\n2 1 1\n2 2 2\n2 3 1\n3 1 2\n3 2 3''') == \"1 2\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\nassert solution('''2 1\n2 2\n3 2 3\n4 2 1\n3 2 1\n4 3 2''') == 'impossible'\nassert solution('''2 1\n10 1 0\n10 2 1''') == '1 2'\nassert solution('''2 1\n10 1 0\n10 1 0\n10 1 0\n10 2 1''') == 'impossible'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n1 10\n0 1 1\n10 1 0\n10 2 1\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 3\") == \"1 2\"\nassert solution(\"1 3\") == \"1 2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"impossible\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n') == '1 2'\nassert solution('1 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\n') == 'impossible'\nassert solution('1 1\\n30 30\\n0 1 1\\n1 1 0\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 7 1\\n1 8 1\\n1 9 1\\n1 10 1\\n1 11 1\\n1 12 1\\n1 13 1\\n1 14 1\\n1 15 1\\n1 16 1\\n1 17 1\\n1 18 1\\n1 19 1\\n1 20 1\\n1 21 1\\n1 22 1\\n1 23 1\\n1 24 1\\n1 25 1\\n1 26 1\\n1 27 1\\n1 28 1\\n1 29 1\\n1 30 1\\n') == '1 2 3 4'\nassert solution('1 1\\n100 30\\n0 1 1\\n1 1 0\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 7 1\\n1 8 1\\n1 9 1\\n1 10 1\\n1 11 1\\n1 12 1\\n1 13 1\\n1 14 1\\n1 15 1\\n1 16 1\\n1 17 1\\n1 18 1\\n1 19 1\\n1 20 1\\n1 21 1\\n1 22 1\\n1 23 1\\n1 24 1\\n1 25 1\\n1 26 1\\n1 27 1\\n1 28 1\\n1 29 1\\n1 30 1\\n') == '1 3'\nassert solution('1 1\\n100 30\\n0 1 1\\n1 1 0\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 7 1\\n1 8 1\\n1 9 1\\n1 10 1\\n1 11 1\\n1 12 1\\n1 13 1\\n1 14 1\\n1 15 1\\n1 16 1\\n1 17 1\\n1 18 1\\n1 19 1\\n1 20 1\\n1 21 1\\n1 22 1\\n1 23 1\\n1 24 1\\n1 25 1\\n1 26 1\\n1 27 1\\n1 28 1\\n1 29 1\\n1 30 1\\n') == '1 3'\n"
    },
    {
        "number": 3154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''1\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == 'impossible'\nassert solution('''1\n3 2\n0 2 0\n0 1 1\n1 1 2\n1 2 1\n2 1 1\n2 2 1\n2 2 2\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''1\n2 2\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == 'impossible'\nassert solution('''3\n3 4\n0 2 0\n0 1 1\n1 1 2\n2 1 2\n2 2 1\n2 2 2\n3 2 3\n4 2 1''') == '1 2'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('3') == '1 1'\nassert solution('4') == '1 2'\nassert solution('5') == '1 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"100\") == \"5 2\"\nassert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n\"\"\"\n\nclass Solution:\n    def solve(self, x: int) -> str:\n        def get_binomial(n: int, k: int) -> int:\n            if n < k:\n                return 0\n            if n == k:\n                return 1\n            if k == 0:\n                return 1\n            if k == 1:\n                return n\n            if k > n - k + 1:\n                return get_binomial(n, n)\n            if k < n - k + 1:\n                return get_binomial(n - 1, k - 1) + get_binomial(n - 1, k)\n\n        n, k = x, x\n        while k > 0:\n            n, k = k, n - k\n        return str(n) + \" \" + str(k)\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\nassert solution('1') == '1 1'\nassert solution('0') == '1 1'\nassert solution('100') == '100 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"5 2\"\nassert solution(\"20\") == \"2020 1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n10\n''') == '5 2'\nassert solution('''\n20\n''') == '20 1'\nassert solution('''\n1\n''') == '1 0'\nassert solution('''\n11\n''') == '5 4'\nassert solution('''\n99\n''') == '99 59'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\nassert solution('2920') == '5 4'\nassert solution('20199999') == '2899993'\nassert solution('2') == '1 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('10') == ''\nassert solution('123') == ''\n"
    },
    {
        "number": 3155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('10') == '1 2'\nassert solution('100') == '1 22'\nassert solution('2') == '1 2'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'impossible'\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'unique'\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'ambiguous'\nassert solution('''2\n2\n0 apple\n1 pear\n0 cherry\n1 orange\n1 apple\n1 lemon\n0 water\n1 apple\n1 lemon\n1 orange\n1 cherry\n1 lemon\n0 lemon\n0 apples\n0 cherry\n''') == 'impossible'\nassert solution('''2\n3\n0 apple\n1 pear\n0 cherry\n1 orange\n1 apple\n1 lemon\n0 water\n1 apple\n1 lemon\n1 orange\n1 cherry\n1 lemon\n0 lemon\n0 apples\n0 cherry\n''') == 'ambiguous'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'impossible'\nassert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'unique'\nassert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\nchocolate\ncookies\nicecream''') == 'ambiguous'\nassert solution('''2\n5\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\nchocolate\ncookies\nicecream''') == 'unique'\nassert solution('''2\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\nchocolate\ncookies\nicecream''') == 'ambiguous'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies''') == 'impossible'\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'unique'\nassert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n1 chocolate\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'unique'\nassert solution('''3\n2\n0 chocolate\n1 icecream\n2 cookies''') == 'impossible'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'impossible'\nassert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'unique'\nassert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n1 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'ambiguous'\nassert solution('''2\n3\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'ambiguous'\nassert solution('''2\n3\n0 chocolate\n1 icecream\n2 cookies\n1 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'ambiguous'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == \"impossible\"\nassert solution('2') == \"impossible\"\nassert solution('1 2') == \"impossible\"\nassert solution('3') == \"impossible\"\nassert solution('0 chocolate') == \"impossible\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n'''\n    ) == \"impossible\"\nassert solution(\n'''\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n'''\n    ) == \"ambiguous\"\nassert solution(\n'''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies\n'''\n    ) == \"ambiguous\"\nassert solution(\n'''\n2\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies\n'''\n    ) == \"ambiguous\"\nassert solution(\n'''\n4\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n'''\n    ) == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'unique'\nassert solution('''\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'ambiguous'\nassert solution('''\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'impossible'\nassert solution('''\n1\n2\n1 chocolate\n2 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'impossible'\nassert solution('''\n2\n2\n0 chocolate\n1 icecream\n2 cookies\n1 chocolate\n2 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'ambiguous'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'impossible'\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\nassert solution('''3\n2\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\nassert solution('''3\n2\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies''') == 'ambiguous'\nassert solution('''3\n2\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\ncookies''') == 'ambiguous'\n"
    },
    {
        "number": 3156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n\"\"\"\n    ) == \"impossible\"\nassert solution(\n\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\"\n    ) == \"unique\"\nassert solution(\n\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\"\n    ) == \"ambiguous\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'\nassert solution('1 2 1') == '0'\nassert solution('1 10 26') == '1'\nassert solution('1 100 26') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0 10\\n') == '0'\nassert solution('1 2 10\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0'\nprint(solution(stdin))\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint('passed')\n"
    },
    {
        "number": 3157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'\nprint(\"All set? Click \\\"Check\\\" to earn cool rewards!\")\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('....................') == '5 pan'\nassert solution('.................') == '5 zoom'\nassert solution('........X................') == '3 zoom'\nassert solution('......................') == '5 rotate'\nassert solution('...............X......') == '3 rotate'\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('............................................................\\n............................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n........XXX....XXX....................X.....................\\n.........XXX...XX...........................................\\n............................................................\\n............XX..............................................\\n...........XXX..............................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................') == '3 zoom out\\n'\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('A') == 'rotate'\nassert solution('A A') == 'rotate'\nassert solution('A A A') == 'rotate'\nassert solution('A A A A') == 'rotate'\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''...................\n...................\n....XXXXXXXXXXXXXXXXX....\n....XXXXXXXXXXXXXXXXX....\n....XXXXXXXXXXXXXXXXX....\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n...................\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\", \"\") == \"\"\nassert solution(\"\", \"\") == \"\"\nassert solution(\"\", \"\") == \"\"\nassert solution(\"\", \"\") == \"\"\nassert solution(\"\", \"\") == \"\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n....XXXX\\n....XXXX\\n.XXXX..X\\n....XXXX\\n....XXXX\\n.X......\\nX.X....X\\n....XXXX\\n....XXXX\") == \"1 pan\"\nassert solution(\"3 3\\n....XXXX\\n....XXXX\\nX..X..XX\\n....XXXX\\n....XXXX\\n.X.....X\\nX..XX..X\\n....XXXX\\n....XXXX\") == \"2 pan\"\nassert solution(\"1 3\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n.X......\\nX.X....X\\n....XXXX\\n....XXXX\") == \"2 zoom in\"\nassert solution(\"2 2\\n....XXXX\\n....XXXX\\n.X...X..\\n....XXXX\\n....XXXX\\n.X.......\\nX.X...X.X\\n....XXXX\\n....XXXX\") == \"3 pan\"\nassert solution(\"2 2\\n....XXXX\\n....XXXX\\n.X...X..\\n....XXXX\\n....XXXX\\n.X.......\\nX.X...X.X\\n....XXXX\\n....XXXX\") == \"3 zoom in\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution(' ') == 'Pan'\nassert solution('............') == 'Pan'\nassert solution('X............') == 'Pan'\nassert solution('...............') == 'Pan'\n"
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''..............................\n..............................\n...............................................\n...............................................\n...............................................\n...............................................\n...............................................\n...............................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n.............................. "
    },
    {
        "number": 3158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('XXX......XXXX.XX..') == '3 zoom out'\nassert solution('...XXXX..........') == '0 pan'\nassert solution('....XXXX........') == '1 zoom out'\nassert solution('....XXXX.......') == '2 zoom in'\nassert solution('..XXXX.......X.') == '1 rotate counter-clockwise'\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 20\\napples are great!\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\ncheck out our\\nfresh apples!') == 'apples are great!\\ncheck out our\\nfresh apples!\\n'\nassert solution('8 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\ncheck out our\\nfresh apples!') == '       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n       "
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n''' 8 11\n apples are great!  \n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n check out our      \n fresh apples!      \n''') == '''apples are great!  \n\ncheck out our      \n fresh apples!      \n'''\n\nassert solution(\n''' 8 22\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\ncheck out our      \n fresh apples!      \n''') == '''       \n       \n       \n       \n       \n       \n       \n       \ncheck out our      \n fresh apples!      \n'''\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n\n''') == '''\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n\nassert solution('''\n4 4\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n\n''') == '''\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n\nassert solution('''\n8 8\n+++++++\n+   +\n+   +\n+   +\n+   +\n+   +\n+   +\n+++++++\n\n''') == '''\n+++++++\n+   +\n+   +\n+   +\n+   +\n+   +\n+   +\n+++++++\n'''\n\nassert solution('''\n7 7\n++++++++\n+  =  +\n+  +++ +\n+  +++ +\n+  +++ +\n+  ++++ +\n++++++++\n\n''') == '''\n++++++++\n+  =  +\n+  +++ +\n+  +++ +\n+  +++ +\n+  ++++ +\n++++++++\n'''\n\nassert solution('''\n7 7\n++++++++\n+  =  +\n+  +++ +\n+  +++ +\n+  +++ +\n+  ++++ +\n++++++++\n\n''') == '''\n++++++++\n+  =  +\n+  +++ +\n+  +++ +\n+  +++ +\n+  ++++ +\n++++++++\n'''"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '8 20'\n) == 'apples are great!  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('apples are great!\\n' +\n'++++++++++++++++++++\\n' +\n'+ oranges are better!\\n' +\n'+ + + +\\n' +\n'+ +++ +\\n' +\n'+ + + +\\n' +\n'+ +++ +\\n' +\n'+     +\\n' +\n'+++++++') == 'apples are great!\\n' +\n'                                        '\n\nassert solution('+++++++\\n' +\n'+ = + =\\n' +\n'+ +++ +\\n' +\n'+ + + +\\n' +\n'+ +++ +\\n' +\n'+     +\\n' +\n'+++++++') == '                                        '\n\nassert solution
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 20\\napples are great!\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\ncheck out our\\nfresh apples!') == 'apples are great!\\ncheck out our\\nfresh apples!'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\ncheck out our\\nfresh apples!') == '       \\n       \\n       \\n       \\n       \\n       \\ncheck out our\\nfresh apples!'\nassert solution('6 6\\n++++++\\n+  =  +\\n+ ++ +\\n+ + + +\\n+ ++ +\\n+     +\\n++++++\\ncheck out our\\nfresh apples!') == '       \\n       \\n       \\n       \\n       \\n       \\ncheck out our\\nfresh apples!'\nassert solution('2 2\\n+++++\\n+  =  +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+ ++ +\\n+"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 20\\napples are great!\\n++++++++++++++++++++\\n+oranges are\\n+way better!\\n+#oranges>apples\\n++++++++++++++++++++\\ncheck out our\\nfresh apples!\\n') == 'apples are great!\\ncheck out our\\nfresh apples!'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '       \\n       \\n       \\n       \\n       \\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '       \\n       \\n       \\n       \\n       \\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '       \\n       \\n       \\n       \\n       \\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '       \\n       \\n       \\n       \\n       \\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 20\\napples are great!\\n\\n+oranges are better!\\n\\n+#oranges>apples\\n\\ncheck out our\\nfresh apples!\\n') == 'apples are great!\\noranges are better!\\n\\ncheck out our\\nfresh apples!'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '       \\n       \\n       \\n       \\n       '\nassert solution('2 2\\n++++++\\n+   +\\n++++ +\\n++++ +\\n+   +\\n++++++\\n') == '       \\n       \\n       \\n       \\n       '\nassert solution('1 1\\n+++++\\n+   +\\n++++ +\\n++++ +\\n+   +\\n+++++\\n') == '       \\n       \\n       \\n       \\n       '\nassert solution('1 1\\n+++++\\n+   +\\n++++ +\\n++++ +\\n+   +\\n+++++\\n') == '       \\n       \\n       \\n       \\n       '\n"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3 10\n\na+a\n+b+b\n+c+c\n\n+++b+c\n+d+d\n+e+e\n+f+f\n\n+++a+d\n+g+g\n+h+h\n+i+i\n\n+++b+g\n+j+j\n+k+k\n+l+l\n\n+++c+h\n+m+m\n+n+n\n+o+o\n\n+++d+i\n+p+p\n+q+q\n+r+r\n\n+++e+k\n+s+s\n+t+t\n+u+u\n\n+++f+n\n+v+v\n+w+w\n+x+x\n\n+++g+u\n+y+y\n+z+z\n''') == '''\na+a\n+b+b\n+c+c\n\n+++b+c\n+d+d\n+e+e\n+f+f\n\n+++a+d\n+g+g\n+h+h\n+i+i\n\n+++b+g\n+j+j\n+k+k\n+l+l\n\n+++c+h\n+m+m\n+n+n\n+o+o\n\n+++d+i\n+p+p\n+q+q\n+r+r\n\n+++e+k\n+s+s\n+t+t\n+u+u\n\n+++f+n\n+v+v\n+w+w\n+x+x\n\n+++g+u\n+y+y\n+z+z\n'''\nassert solution('''\n3 10\n\na+a\n+b+b\n+c+c\n\n+++b+c\n+d+d\n+e+e\n+f+f\n\n+++a+d\n+g+g\n+h+h\n+i+i\n\n+++b+g\n+j+j\n+k+k\n+l+l\n\n+++c+h\n+m+m\n+n+n\n+o+o\n\n+++d+i\n+p+p\n+q+q\n+r+r\n\n+++e+k\n+s+s\n+t+t\n+u+u\n\n+++f+n\n+v+v\n+w+w\n+x+x\n\n+++g+u\n+y+y\n+z+z\n''') == '''\na+a\n+b+b\n+c+c\n\n+++b+c\n+d+d\n+e+e\n+f+f\n\n+++a+d\n+g+g\n+h+h\n+i+i\n\n+++b+g\n+j+j\n+k+k\n+l+l\n\n+++c+h\n+m+m\n+n+n\n+o+o\n\n+++d+i\n+p+p\n+q+q\n+r+r\n\n+++e+k\n+s+s\n+t+t\n+u+u\n\n+++f+n\n+v+v\n+w+w\n+x+x\n\n+++g+u\n+y+y\n+z+z\n'''\nassert solution('''\n7 8\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|   |\n+---+\n|   |\n|"
    },
    {
        "number": 3159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\\\n8 20\n apples are great!\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n check out our\n fresh apples!\n''') == '''\\\napples are great!\ncheck out our\nfresh apples!\n'''\nassert solution('''\\\n8 20\n apples are great!\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n check out our\n fresh apples!\n''') == '''\\\napples are great!\ncheck out our\nfresh apples!\n'''\nassert solution('''\\\n8 20\n apples are great!\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n check out our\n fresh apples!\n''') == '''\\\napples are great!\nfresh apples!\n'''\nassert solution('''\\\n8 20\n apples are great!\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n check out our\n fresh apples!\n''') == '''\\\napples are great!\nfresh apples!\n'''\nassert solution('''\\\n8 20\n apples are great!\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n check out our\n fresh apples!\n''') == '''\\\napples are great!\nfresh apples!\n'''\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('H?H??') == '1.0'\nassert solution('HHTH') == '1.0'\nassert solution('HTHHTTH') == '2.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1.5'\nassert stdin == 'H?\\n'\nprint('Test 1....... passed')\n\nstdin = 'HHHHTTTTTTTTT'\nassert solution(stdin) == '4.5'\nassert stdin == 'HHHHTTTTTTTTT\\n'\nprint('Test 2....... passed')\n\nstdin = 'HHT'\nassert solution(stdin) == '2.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('HTHHTHTH') == 2.0\nassert solution('HTHHTHTHHTHHTHHH') == 2.0\nassert solution('HTHHTHTHHTHHTHH') == 1.5\nassert solution('HTHHTHTHHTHHTHH') == 1.0\nassert solution('HTHHTHTHHTHHTHH') == 0.5\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('H?H') == 1.5\nassert solution('HHHH') == 2.0\nassert solution('HHHTHHTHHH') == 2.5\nassert solution('HHH?HTHHTHHH') == 1.5\nassert solution('H?HTHHHH') == 1.5\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('HHTTHTT') == 2.0\nassert solution('HTHTHTH') == 1.0\nassert solution('HHTHHHH') == 1.0\nassert solution('HTHHTHHHH') == 1.0\nassert solution('H') == 0.5\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('?H') == '1.5'\nassert solution('?H?') == '0.5'\nassert solution('?H?H?') == '1.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?T?') == '1.5'\nassert solution('HHTH') == '3.0'\nassert solution('HTHH') == '1.5'\nassert solution('HTHHTH') == '3.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('HHHHHH') == '2.0'\nassert solution('HHHHHHH') == '2.0'\nassert solution('HHH') == '2.0'\nassert solution('HHHTHHH') == '2.0'\nassert solution('HHHT') == '2.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"HH\") == 2.0\nassert solution(\"H??\") == 1.5\nassert solution(\"THTTHHHTTTTHHH\") == 3.0\nassert solution(\"THHHTTTTTHHHTTTHHHTTTTTTH\") == 3.0\nassert solution(\"HTTTHTTHHTTTHTTTTTTTHHHTTHHTHHTHTTTTTTTHHHTTTHHTHHTTHHT\") == 3.0\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\"\nassert solution(\"3\\n1110\\n1110\\n1110\") == \"1\"\nassert solution(\"3\\n1100\\n1110\\n1100\\n1100\") == \"6\"\nassert solution(\"3\\n1110\\n1110\\n1110\\n1110\") == \"1\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n0\n1\n0\n1\n\"\"\") == \"011100\"\nassert solution(\n\"\"\"\n0\n1\n1\n1\n\"\"\") == \"0000\"\nassert solution(\n\"\"\"\n1\n0\n1\n1\n\"\"\") == \"0001\"\nassert solution(\n\"\"\"\n1\n1\n1\n1\n\"\"\") == \"1111\"\nassert solution(\n\"\"\"\n0\n0\n0\n0\n\"\"\") == \"00000000\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110\n''') == \"1\"\nassert solution('''4\n1111\n1111\n1111\n1111\n''') == \"6\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110\n''') == '1'\nassert solution('''4\n1111\n1111\n1111\n1111\n''') == '6'\nassert solution('''7\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n''') == '0'\nassert solution('''4\n1111\n1111\n1111\n1111\n''') == '6'\nassert solution('''9\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n''') == '10'\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111'\nassert solution('3\\n0011\\n0011\\n0011') == '6'\nassert solution('3\\n1110\\n1110\\n1110') == '6'\nassert solution('5\\n1111\\n1110\\n1111\\n1101') == '6\\n0011\\n0011\\n0111\\n1101'\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '4'\nassert solution('8') == '5'\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n0001\n0001\n0011\n1110''') == '1'\nassert solution('''4\n1111\n1111\n1111\n1111\n''') == '6'\nassert solution('''6\n1111\n1111\n1111\n1111\n1111\n1101\n''') == '0011'\nassert solution('''10\n00001\n00001\n00010\n00010\n00011\n00100\n00101\n00110\n00010\n00011\n00100\n10010\n10011\n01010\n01011\n01100\n10010\n10011\n10001\n00010\n00011\n00101\n00110\n01010\n01011\n11100\n11101\n11110\n11111\n01010\n01011\n11100\n10010\n10011\n10001\n00010\n00011\n00101\n00110\n01010\n01011\n11100\n11101\n11110\n11111\n01010\n01011\n11100\n10010\n10011\n10001\n00010\n00011\n00101\n00110\n01010\n01011\n11100\n11101\n11110\n11111\n''') == '0'\nassert solution('''5\n00100\n11110\n00100\n11110\n00100\n00100\n11110\n00100\n11110\n00100\n11110\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n11110\n00100\n11110\n00100\n11110\n00100\n00100\n00100\n00100\n11110\n00100\n11110\n00100\n11110\n00100\n00100\n00100\n00100\n00100\n11110\n00100\n11110\n00100\n11110\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n11110\n00100\n11110\n00100\n11110\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0000\"\nassert solution(stdin) == \"0001\"\nassert solution(stdin) == \"0011\"\nassert solution(stdin) == \"1111\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == '2'\nassert solution('''h 1 4 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''h 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''h 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''h 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\nh 10 3 4\\nv 11 4 5\\nv 5 10 3\\nh 10 3 4\\nv 11 4 5\") == \"10\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\nh 10 3 4\\nv 11 4 5\\nh 10 3 4\\nv 11 4 5\\nh 1 4 1\") == \"4\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\nh 10 3 4\\nh 10 3 4\\nv 11 4 5\\nh 10 3 4\\nv 11 4 5\") == \"4\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"h 1 4 1 v 2 4 2 h 10 2 2 v 11 2 3\") == \"4\"\nassert solution(\"h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3\") == \"12\"\nassert solution(\"h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4\") == \"3\"\nassert solution(\"h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v 2 10 2 h 10 2 3 v 11 2 4 h 1 10 1 v 2 10 2 h 5 10 2 v 1 10 1 v 5 10 3 v2 10 2 h10 2 3 v11 2 4 h1 10 1 v2 102 h5 10 2 v1 10 1 v5 10 3 v2 102 h10 2 3 v11 2 4 h1 10 1 v2 102 h5 10 2 v1 10 1 v5 10 3 v2 102 h10 2 3 v11 2 4 h1 10 1 v2 102 h5 10 2 v1 10 1 v5 10 3 v2 102 h10 2 3 v11 2 4 h1 10 1 v2 102 h5 10 2 v1 10 1 v5 10 3 v2 102 h10 2 3 v11 2 4\") == \"84\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_stdout\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n'''"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4'\nprint('All tests past')\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"\"\nassert solution(\"abab\") == \"\"\nassert solution(\"aab\") == \"ab\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"h 1 4 1\") == \"\"\nassert solution(\"v 2 4 2\") == \"\"\nassert solution(\"h 10 2 2\") == \"\"\nassert solution(\"v 11 2 3\") == \"\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4'\nassert solution(stdin) == '4'\nassert solution(stdin) == '2'\nassert solution(stdin) == '4'"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '-1'\nassert solution('1 0 2 0') == '2'\nassert solution('3 5 4 0') == '2'\nassert solution('2 1 0 0') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n2 1 0 0\n3 0 4 5''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '4'\nassert solution('''10 9\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0''') == '-1'\nassert solution('''4 2\n1 2 3 4\n5 6 7 8\n0 0 0 0\n2 3 4 5\n4 3 2 1\n4 3 2 1\n1 2 3 4\n5 6 7 8''') == '-1'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '-1'\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4'\nassert solution('3 2\\n1 2 3\\n4 5 6\\n7 8 0') == '-1'\n\"\"\""
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"5 4\") == \"2\"\nassert solution(\"5 4\") == \"-1\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == \"2\"\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == \"-1\"\nassert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == \"4\"\nassert solution('''6 6\n1 2 3 4 5 6 7\n0 1 0 2 0 3 0\n0 0 0 0 0 0 4\n0 0 0 0 0 0 5\n0 0 0 0 0 0 6\n1 0 0 0 0 0 7\n0 0 0 0 0 0 8\n''') == \"2\"\nassert solution('''6 6\n1 2 3 4 5 6 7\n0 1 0 2 0 3 0\n0 0 0 0 0 0 4\n0 0 0 0 0 0 5\n0 0 0 0 0 0 6\n1 0 0 0 0 0 7\n0 0 0 0 0 0 8\n''') == \"0\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '-1'\nassert solution('''2 2\n1 1\n2 2''') == '0'\nassert solution('''2 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '-1'\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[len(\"2 4\\n3 5 4\\n2 1 0 0\\n3 0 4 5\\n2 1 0 0\\n3 0 4 5\\n2 1 0 0\\n3 0 4 5\\n2 1 0 0\\n3 0 4 5\\n2 1 0 0\\n3 0 4 5\") :\n    pass"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '4'\nassert solution('''4 4\n1 2 3 4\n5 6 7 8\n9 0 0 0\n4 2 3\n6 5 1\n2 3 0''') == '2'\nassert solution('''4 4\n1 2 3 4\n5 6 7 8\n9 0 0 0\n4 2 3\n6 5 1\n2 3 0''') == '-1'\nassert solution('''2 4\n1 2 3 4\n5 6 7 8\n9 0 0 0\n4 2 3\n6 5 1\n2 3 0''') == '2'\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"2 4\") == \"-1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\"\"\") == \"2\"\nassert solution(\n    \"\"\"2 4\n1 2 3 0\n4 5 6 0\n7 8 0\n4 2 3\n6 5 1\n0 7 8\"\"\") == \"4\"\n\nprint(solution(input()))\n\n\"\"\"\n(1,3)\n0,3,5,6,7\n0,1,2,3,4\n0,1,2,3,4\n0,1,2,3,4\n0,1,2,3,4\n0,1,2,3,4\n0,1,2,3,4\n\"\"\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n'''"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 3 1 3 1 2\") == \"2\"\nassert solution(\"2 1 2 3 1 3 1 2\") == \"4\"\n\n-----\nThe most important thing is to remember is that when the number of steps is n, when we move, we don't increment the position and decrement the count of the value.\n\nNow since the number of steps is limited to n, we only need to use the previous two values to decide which direction to move.\n\nI recommend to use two variables to store the previous two values."
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '4'\n\"\"\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 2 3 3 4 2''') == '2'\nassert solution('''8\n1 2 1 3 1 3 1 2''') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 3 4 2''') == '2'\nassert solution('''3\n1 2 1''') == '1'\nassert solution('''10\n1 2 1 3 2 4 3 3 1''') == '4'\nassert solution('''10\n1 2 1 3 2 4 3 3 1''') == '4'\nassert solution('''10\n1 2 1 3 2 4 3 3 1''') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 3 4 2') == 2\nassert solution('1 2 1 3 1 3 1 2') == 4\nassert solution('8 1 2 1 3 1 3 1 2') == 4\nassert solution('1 2 1 3 1 3 1 2') == 4\nassert solution('1 2 1 3 1 3 2') == 5\n"
    },
    {
        "number": 3164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 3 4 2') == 2\nassert solution('1 2 1 3 1 3 1 2') == 4\nassert solution('1 2 1 3 1 3 1 2') == 4\nassert solution('1 2 1 3 1 3 1 2') == 4\nassert solution('1 2 1 3 1 3 1 2') == 4\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2''') == '4 0'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4 2'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4 2'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4 2'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4 2'\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 2''') == '''4\n0'''\nassert solution('''2 2 1''') == '''4\n0'''\nassert solution('''2 2 2''') == '''4\n2'''\nassert solution('''2 2 2 1''') == '''4\n2'''\nassert solution('''2 2 2 1''') == '''4\n2'''\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\"\"\") == \"4\\n0\\n\"\nassert solution(\"\"\"2 2 2\n1 1 1\n2 2 2\n2 2 2 1\"\"\") == \"4\\n2\\n\"\nassert solution(\"\"\"3 3 3\n1 1 1 1\n2 2 2 2\n1 1 1 1\n2 2 2 2\"\"\") == \"7\\n0\\n\"\nassert solution(\"\"\"3 3 3\n1 1 1 1\n2 2 2 2\n1 1 1 1\n2 2 2 2\"\"\") == \"7\\n2\\n\"\nassert solution(\"\"\"3 3 3\n1 1 1 1\n2 2 2 2\n2 2 2 2\n1 1 1 1\"\"\") == \"7\\n2\\n\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 1') == '0'\nassert solution('2 2 2 1') == '4'\nassert solution('1 1 1 2') == '2'\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2 2''') == '''4\n0'''\nassert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2''') == '''4\n2\n'''\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2''') == '4 0'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4 2'\nassert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 1\n2 2 2 1\n1 1 1 2''') == '4 2'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4 4'\nassert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4 4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\") == \"4\\n2\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\"\nassert solution(\"1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n'''\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    stdin='''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == '1'\nassert solution(\n    stdin='''\n3 2\n0 1 2\n2 0 0\n0 2 0\n0 0 2\n2\n''') == 'impossible'\nassert solution(\n    stdin='''\n3 2\n0 1 2\n2 0 0\n0 2 0\n0 0 2\n0 0 1\n2\n''') == '2'\nassert solution(\n    stdin='''\n5 2\n0 1 2 3 4\n0 0 1 0 0\n0 2 0 0 0\n0 0 2 0 0\n0 0 0 2 0\n2\n''') == '2'\nassert solution(\n    stdin='''\n3 3\n0 1 2\n1 0 0\n0 2 0\n0 0 2\n2\n''') == 'impossible'\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\"\nassert solution(\"10 5\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"5 4\\n0 1 0 2 3 4\\n0 1 0 2 3 4\\n0 1 0 2 3 4\\n0 1 0 2 3 4\\n0 1 0 2 3 4\") == \"impossible\"\nassert solution(\"10 5\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\\n0 1 0 2 3 4 5 6 7 8 9 10\") == \"4\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2''') == '1'\nassert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2''') == 'impossible'\nassert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2\n''') == 'impossible'\nassert solution('''2 1\n1''') == '1'\nassert solution('''4 3\n1 2 0 0\n2 3 0 0\n0 0 0 0\n3 0 0 0\n''') == '2'\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1 1\") == \"1\"\nassert solution(\"1 0 0 1\") == \"impossible\"\nassert solution(\"0 1 0 0\") == \"impossible\"\nassert solution(\"0 0 1 0\") == \"impossible\"\nassert solution(\"0 2\") == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\nassert solution(\"3 3\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\"\nassert solution(\"4 5\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"impossible\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\nassert solution(\"4 3\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"impossible\"\n\"\"\"\n\nfrom collections import defaultdict\nfrom typing import List, Set\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '35\\n18\\n3'\n\nassert solution('''7 6\n1\n2\n3\n4\n5\n6\n7''') == '1\\n2\\n3\\n4\\n5\\n6'\n\nassert solution('''11 3\n3 7 10\n3\n0 10\n2 6\n7 7\n''') == '8\\n2\\n1'\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_stdout\nprint(solution(stdin))\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '''35\n18\n3\n'''\n\nassert solution(\n'''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '''8\n2\n1\n'''\n\nassert solution(\n'''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '''35\n18\n3\n'''\n\nassert solution(\n'''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '''8\n2\n1\n'''\n\nassert solution(\n'''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '''35\n18\n3\n'''"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n'\n    '1 1 2 1\\n'\n    '3\\n'\n    '0 9\\n'\n    '2 6\\n'\n    '7 7') == '35\\n18\\n3'\nassert solution('1\\n'\n    '1 1 2 1\\n'\n    '3\\n'\n    '0 9\\n'\n    '2 6\\n'\n    '7 7') == '35\\n18\\n3'\nassert solution('10\\n'\n    '1 1 2 1\\n'\n    '3\\n'\n    '0 9\\n'\n    '2 6\\n'\n    '7 7') == '35\\n18\\n3'\nassert solution('1\\n'\n    '1 1 2 1\\n'\n    '3\\n'\n    '0 9\\n'\n    '2 6\\n'\n    '7 7') == '35\\n18\\n3'\nassert solution('10\\n'\n    '1 1 2 1\\n'\n    '3\\n'\n    '0 9\\n'\n    '2 6\\n'\n    '7 7') == '35\\n18\\n3'\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"data/test_0.txt\").read()) == \"4 3 10\"\nassert solution(open(\"data/test_1.txt\").read()) == \"8 0\"\nassert solution(open(\"data/test_2.txt\").read()) == \"15 0\"\nassert solution(open(\"data/test_3.txt\").read()) == \"7 19\"\nassert solution(open(\"data/test_4.txt\").read()) == \"8 0\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n') == '35\\n18\\n3\\n'\nassert solution('3\\n7\\n10\\n0 9\\n2 6\\n7 7\\n') == '8\\n2\\n1\\n'\nassert solution('1\\n10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\\n2\") == \"0\\n1\\n1\\n3\\n3\"\nassert solution(\"5\\n3\\n2\\n4\\n1\") == \"0\\n1\\n1\\n2\\n3\"\nassert solution(\"7\\n6\\n5\\n4\\n3\\n2\\n1\") == \"0\\n1\\n2\\n4\\n5\\n6\"\nassert solution(\"9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\") == \"0\\n1\\n2\\n3\\n5\\n6\\n7\\n8\"\nassert solution(\"14\\n13\\n12\\n11\\n10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\") == \"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5') == '0\\n1\\n3\\n6\\n'\nassert solution('2\\n2\\n1\\n3\\n4\\n5') == '0\\n1\\n3\\n6\\n'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\") == \"0\\n1\\n3\\n6\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\") == \"0\\n1\\n2\\n4\\n6\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"0\\n1\\n3\\n6\\n10\\n15\\n21\\n28\\n36\"\nprint(solution(\"1000\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"))\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '0\\n1\\n3\\n6'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '0\\n1\\n3\\n6'\nassert solution('2\\n1\\n3\\n') == '0\\n1\\n3'\nassert solution('1\\n2\\n3\\n') == '0\\n1\\n3'\nassert solution('2\\n2\\n3\\n') == '1\\n3\\n6'\nassert solution('2\\n2\\n2\\n3\\n') == '1\\n3\\n3'\n"
    },
    {
        "number": 3168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open('test_file/sample1.txt','r')) == '0\\n1\\n3\\n6'\nassert solution(open('test_file/sample2.txt','r')) == '0\\n1\\n2\\n4\\n6'\nassert solution(open('test_file/sample3.txt','r')) == '0\\n1\\n3\\n6'\nassert solution(open('test_file/sample4.txt','r')) == '0\\n1\\n3\\n6'\nassert solution(open('test_file/sample5.txt','r')) == '0\\n1\\n2\\n4\\n6'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n0 0 1 1') == '4 3 1 2'\nassert solution('1\\n1 2 0 3') == '2 4 1 3'\nassert solution('2\\n0 0 1 1') == '4 3 1 2'\nassert solution('2\\n1 2 0 3') == '2 4 1 3'\nassert solution('3\\n0 0 1 1') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 2') == '2 4 1 3'\nassert solution('2 4 7 3') == '4 3 1 2'\nassert solution('3 3 5 3') == '4 3 1 2'\nassert solution('0 0 1 1') == '4 3 1 2'\nassert solution('4 4 4 4') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n\"\"\") == \"\"\"\n2 4 1 3\n\"\"\"\nassert solution(\n    \"\"\"\n2\n-2 -1 2 1\n1 1 1 1\n\"\"\") == \"\"\"\n1 1 1\n\"\"\"\nassert solution(\n    \"\"\"\n4\n1 0 1 0\n2 2 3 0\n2 1 2 0\n3 3 1 0\n\"\"\") == \"\"\"\n3 1 2 0\n\"\"\"\nassert solution(\n    \"\"\"\n2\n0 0 1 1\n1 1 1 1\n\"\"\") == \"\"\"\n0 1 1\n\"\"\"\nassert solution(\n    \"\"\"\n3\n0 0 1 1\n1 1 1 1\n2 2 1 2\n\"\"\") == \"\"\"\n1 1 1\n\"\"\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0 1 1\") == \"4 3 1 2\"\nassert solution(\"0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\nassert solution(\"0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n2 3 1 3\\n3 2 4 3\") == \"4 3 1 2\"\nassert solution(\"0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n2 3 1 3\\n3 2 4 3\\n4 3 5 3\") == \"4 3 1 2\"\nassert solution(\"0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n2 3 1 3\\n3 2 4 3\\n4 3 5 3\\n2 3 1 3\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '4 3 1 2'\nassert solution('''4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2'\nassert solution('''5\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n5 4 0 3\n''') == '4 3 1 2 5 4'\nassert solution('''6\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n5 4 0 3\n6 5 0 3\n''') == '4 3 1 2 5 4 6'\n'''\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 1 1') == '4 3 1 2'\nassert solution('1 2 0 3') == '2 4 1 3'\nassert solution('2 2 3 3') == '4 3 1 2'\nassert solution('4 0 3 1') == '4 3 1 2'\nassert solution('1 1 3 2') == '1 3 2 4'\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n4 0 3 1\") == \"4 3 1 2\"\nassert solution(\"1\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n4 0 3 1\") == \"4 3 1 2\"\nassert solution(\"1\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n4 0 3 1\\n4 1 2 3\") == \"4 3 1 2\"\nassert solution(\"1\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n4 0 3 1\\n4 1 2 3\\n5 2 1 3\") == \"4 3 1 2\"\nassert solution(\"1\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n4 0 3 1\\n4 1 2 3\\n5 2 1 3\\n5 2 4 3\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3''') == '2 4 1 3'\nassert solution('''8\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1''') == '4 3 1 2'\nassert solution('''9\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1''') == '4 3 1 2'\nassert solution('''10\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n0 0 1 1\n1 2 0 3\n2 2 3 3''') == '4 3 1 2'\n'''"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n\"\"\") == \"2 4 1 3\"\nassert solution(\n    \"\"\"\n4\n1 1 3 2\n2 2 3 3\n3 3 5 3\n4 0 3 1\n\"\"\") == \"4 3 1 2\"\nassert solution(\n    \"\"\"\n7\n1 1 0 1 1 0 1\n1 2 1 1 2 1\n2 1 3 1 2 1\n3 1 1 1 3 1\n1 0 1 1 1 0\n1 2 1 1 2 1\n2 1 3 1 2 1\n\"\"\") == \"1 2 3 4 1 0 2 4 5 0 1 1 3 2 2 1 4 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0\n    \"\"\"\n) == \"1 2 3 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2 4 5 0 1 2 3 1 2"
    },
    {
        "number": 3169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n\nfrom sys import stdin\nfrom collections import defaultdict\nimport operator"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\nassert solution('7246898141705310TJ9872A874K54A85A6K89A62K59Q62K9873') == 'Theta wins'\nassert solution('7246898141705310TJ9872A874K54A85A6K89A62K59Q62K9873') == 'Theta wins'\nassert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Theta wins\"\nassert stdin == \"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\"\nprint(\"assert passed\")\nassert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nprint(\"assert passed\")\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\n\"\"\") == \"Theta wins\"\n\nassert solution(\n\"\"\"\n89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\n\"\"\") == \"Theta wins\"\n\nassert solution(\n\"\"\"\n2AKA3A4AQAJK74T3KQ2A6KJ63K8Q96T8A7KA2A5A8A3A2QA9A4A8A9\n\"\"\") == \"Theta loses\"\n\nassert solution(\n\"\"\"\n2AKA3A4AQAJK74T3KQ2A6KJ63K8Q96T8A7KA2A5A8A3A2QA9A4A8A9\n\"\"\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5''') == 'Theta wins'\nassert solution('''89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49''') == 'Theta wins'\nassert solution('''2133444AJK3Q4K5A6T7J8U9T2A2B4B2C7K4C8C9D2D1J5J2K5Q4Q5J7J8Q7''') == 'Theta loses'\nassert solution('''3T9J5T4H5Q8E9D3C8K2K6K9T3D2T6Q9D3H2D5Q6D7D2H3H7H8H6H3H4H8D8C8D4H5D3D2C3H6C8C7H8H7H5H6D2H6H3H5H4H3D2D6D3D2D6H2H3H4H3H7H6H3H7H8H3H5H6H2H5H4H3H7H8H6H3H4H5H7H8H9H7H2H6H5H8H9H7H8H3H4H8H7H8H3H7H8H9H7D2D6D3D2D6D3H5H6H3H4H5H6D3D3H6H2H4H5H7H8H9H7D2D6D3D2H5H6D2D6H7D2H5H8D4H9D4D5D2D6D3H5H8D6D3D2D6H4D3H5H8D2D6D3H5H4H5D3D2D6D3D2H5H8D4H8D2D6D3H5D2D6D3D2D6H2D3H5H8H6D3D3D2D6D3D2D6H2D3H5H8H4D3D2D6D3D2H5H6D3D3D2D6H2D3H5H8H6D3D3D2D6D3D2H5H8H4D3D2D6D3D2D6H2D3D2H5D2D6D3D2D6H2D3H5H8D4D3D2D6D3D2H5D2D6D3D2D6H2D3H5H8H4D3D2D6D3D2D6H2D3H5H8H4D3D2D6D3D2D6H2D3H5H8D4D3D2D6D3D2D6H2D3H5H8H4D3D2D6D3D2H5D2D6D3D2D6H2D3H5H8H4D3D2D6D3D2D6H2D3H5H8D4D3D2D6D3D2D6H2D3H5H8H4D3D2D6D3D2H5D2D6D3D2D6H2D3H5H8D4D3D2D6D3D2H5D2D6D3D2D6H2D3H5H8D4D3D2D6D3D2D6H2D3H5H8D4D3D2D6D3D2H5D2D6D3D2D6H2D3H5H8D4D3D2D6D3D2H5D2D6D3D2D6H2D3H5H8H4D3D2D6D3D2D6H2D3H5H"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"AJQQKTJTJQQKTTJ\") == \"Theta wins\"\nassert solution(\"TJAKQSKJAKQSKJAKQS\") == \"Theta wins\"\nassert solution(\"96487AQT4QJ32AJK96487\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n\"\"\"\n\n\nfrom collections import Counter\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n\n'''\n\n'''\n\nO(n) time\nO(n) space\n\n'''\n"
    },
    {
        "number": 3170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == \"Theta wins\"\nassert solution('AJKQAKQJT') == \"Theta wins\"\nassert solution('AJKQAKQJT') == \"Theta wins\"\nassert solution('AJKQAKQJT') == \"Theta wins\"\nassert solution('AJKQAKQJT') == \"Theta wins\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"fabulist\"\nassert solution(\"2 1\") == \"truther\"\nassert solution(\"1 2 3\") == \"fabulist\"\nassert solution(\"1 fabulist 1 fabulist 2\") == \"fabulist\"\nassert solution(\"1 fabulist 1 not charlatan 1\") == \"truther\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == 'charlatan'\nassert solution('1 1') == 'fabulist'\nassert solution('2 1') == 'truther'\nassert solution('2 1 2') == 'truther'\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2\n1 charlatan 1\n1 not charlatan 1''') == 'fabulist'\nassert solution('''1 2\n1 fabulist 1 fabulist 2''') == 'fabulist'\nassert solution('''2 1\n1 and fabulist 1 fabulist 2''') == 'fabulist'\nassert solution('''2 1\n1 and fabulist 1 fabulist 2\n1 fabulist 1\n1 not charlatan 1\n1 not charlatan 1''') == 'fabulist'\nassert solution('''2 1\n1 and fabulist 1 fabulist 2\n1 fabulist 1\n1 not charlatan 1\n1 not charlatan 1\n1 charlatan 1\n1 not charlatan 1''') == 'fabulist'\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n1 2\n1 fabulist 1\n1 not charlatan 1\n''') == 'fabulist'\n\nassert solution('''\\\n1 2\n1 fabulist 1\n1 not charlatan 1\n1 and fabulist 2\n1 and fabulist 1\n1 fabulist 1 fabulist 2\n''') == 'fabulist'\n\nassert solution('''\\\n1 2\n1 fabulist 1\n1 not charlatan 1\n1 and fabulist 2\n1 and fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n''') == 'fabulist'\n\nassert solution('''\\\n1 2\n1 fabulist 1\n1 not charlatan 1\n1 and fabulist 2\n1 and fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 and fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1\n1 not fabulist 1\n1 not fabulist 1\n1 fabulist 1 fabulist 2\n1 fabulist 1"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(dedent(\n    \"\"\"\n    1 2\n    1 fabulist 1\n    1 not charlatan 1\n    \"\"\"\n)) == \"fabulist\"\n\nassert solution(dedent(\n    \"\"\"\n    1 2\n    1 fabulist 1\n    1 not charlatan 1\n    \"\"\"\n)) == \"charlatan\"\n\nassert solution(dedent(\n    \"\"\"\n    2 2\n    1 and fabulist 1 fabulist 2\n    1 and truther 1\n    1 not charlatan 1\n    \"\"\"\n)) == \"fabulist\"\n\nassert solution(dedent(\n    \"\"\"\n    2 2\n    1 and fabulist 1 fabulist 2\n    1 and truther 1\n    1 not charlatan 1\n    \"\"\"\n)) == \"charlatan\"\n\nassert solution(dedent(\n    \"\"\"\n    2 2\n    1 and fabulist 1 fabulist 2\n    1 and truther 1\n    1 not charlatan 1\n    \"\"\"\n)) == \"fabulist\"\n\n\"\"\"\nimport sys\nfrom io import StringIO\n\nclass Capturing(list):\n    def __enter__(self):\n        self._stdout = sys.stdout\n        sys.stdout = self._stringio = StringIO()\n        return self\n    def __exit__(self, *args):\n        self.extend(self._stringio.getvalue().splitlines())\n        del self._stringio    # free up some memory\n        sys.stdout = self._stdout\n\nwith Capturing() as output:\n    print('Hello, world!')\n\nprint(output)\n\"\"\"\n\nfrom typing import List\nimport sys\n\nclass Capturing(list):\n    def __enter__(self):\n        self._stdout = sys.stdout\n        sys.stdout = self._stringio = StringIO()\n        return self\n    def __exit__(self, *args):\n        self.extend(self._stringio.getvalue().splitlines())\n        del self._stringio    # free up some memory\n        sys.stdout = self._stdout\n\nclass Solution:\n    def characterType(self, stdin: str) -> List[str]:\n        with Capturing() as output:\n            print(stdin)\n        characterTypes = [line[0] for line in output]\n        return characterTypes"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n3 2\n1 truther 1\n1 not truther 1\n1 fabulist 1\n1 not fabulist 1\n1 charlatan 1\n1 not charlatan 1\n1 not truther 1\n1 fabulist 2\n1 not fabulist 1\n1 and fabulist 1 fabulist 2''') == 'fabulist'\n'''\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\"\nassert solution(\"1 2\\n1 truther 1\\n1 not truther 1\\n1 fabulist 1 fabulist 2\\n1 not fabulist 1 truther 2\\n1 not fabulist 1 not truther 1\\n1 not fabulist 1 not truther 1\") == \"truther\"\nassert solution(\"1 2\\n1 truther 1\\n1 not truther 1\\n1 fabulist 1 fabulist 2\\n1 not fabulist 1 truther 2\\n1 not fabulist 1 not truther 1\\n1 not fabulist 1 not truther 1\\n1 not truther 1 not fabulist 1\") == \"truther\"\nassert solution(\"1 2\\n1 truther 1\\n1 not truther 1\\n1 fabulist 1 fabulist 2\\n1 not fabulist 1 truther 2\\n1 not fabulist 1 not truther 1\\n1 not fabulist 1 not truther 1\\n1 not truther 1 not fabulist 1\") == \"truther\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n1 fabulist 1 fabulist 2\n1 not charlatan 1\n''') == 'fabulist'\n'''"
    },
    {
        "number": 3171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan'\nassert solution('2\\n1 and fabulist 1 fabulist 2') == 'fabulist'\nassert solution('3\\n1 and fabulist 1 fabulist 2\\n1 and truther 1\\n1 not charlatan 1\\n1 not truther 1') == 'truther'\nassert solution('4\\n1 and fabulist 1 fabulist 2\\n1 and truther 1\\n1 not charlatan 1\\n1 not truther 1\\n1 charlatan 1') == 'charlatan'\nassert solution('5\\n1 and fabulist 1 fabulist 2\\n1 and truther 1\\n1 not charlatan 1\\n1 not truther 1\\n1 charlatan 1\\n1 not charlatan 1') == 'fabulist'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00''') == '4'\nassert solution('''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\nassert solution('''7\n9.00 9.00\n7.00 7.00\n4.50 4.50\n2.50 2.50\n2.00 2.00\n7.00 5.00\n1.00 1.00\n''') == '7'\nassert solution('''4\n4.00 4.00\n2.00 2.00\n1.00 1.00\n0.00 0.00\n''') == '4'\nassert solution('''4\n4.00 4.00\n2.00 2.00\n2.00 2.00\n1.00 1.00\n''') == '4'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"5\\n2.00\\n2.50\\n3.00\\n4.50\\n6.00\\n7.00\") == \"4\"\nassert solution(\"2\\n0.00\\n1.50\\n1.50\\n2.00\\n3.00\") == \"3\"\nassert solution(\"1\\n0.00\\n-1.50\\n-1.50\\n1.00\\n1.50\") == \"1\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n''') == '4'\nassert solution('''\n3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n''') == '3'\nassert solution('''\n4\n1.00 4.50\n2.00 3.00\n3.00 1.00\n5.00 5.00\n''') == '4'\nassert solution('''\n1\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n''') == '1'\nassert solution('''\n7\n1.00 7.00\n2.00 6.00\n3.00 5.00\n4.50 4.50\n5.00 4.50\n6.00 3.00\n7.00 2.00\n''') == '5'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00'''\n    ) == '4'\nassert solution(\n'''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00'''\n    ) == '3'\nassert solution(\n'''4\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n3.00 2.00'''\n    ) == '4'\nassert solution(\n'''5\n1.00 4.50\n2.00 4.00\n3.00 3.50\n4.00 2.00\n5.00 1.00'''\n    ) == '4'\nassert solution(\n'''5\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n3.00 2.00\n4.00 2.00\n5.00 2.00'''\n    ) == '5'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00''') == '4'\nassert solution('''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\nassert solution('''1\n3.00 3.00\n3.00 3.00\n3.00 3.00\n3.00 3.00''') == '0'\nassert solution('''2\n1.00 1.00\n1.00 1.00\n1.00 1.00\n1.00 1.00''') == '2'\nassert solution('''3\n2.00 2.00\n0.00 0.00\n2.00 2.00\n2.00 2.00\n0.00 0.00\n0.00 0.00''') == '3'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"aa\") == \"\"\nassert solution(\"ab\") == \"\"\nassert solution(\"abc\") == \"\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00''') == '4'\nassert solution('''5\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\nassert solution('''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\nassert solution('''4\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '4'\nassert solution('''5\n1.00 5.00\n1.00 4.00\n1.00 3.00\n1.00 2.00\n1.00 4.50\n7.00 1.00''') == '5'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00''') == '4'\nassert solution('''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'\nassert solution('''5\n0.00 0.00\n0.00 1.00\n0.00 3.00\n0.00 4.50\n0.00 7.00\nSample Output 2:\n3\nassert solution('''6\n-1.00 -1.00\n-1.00 -1.50\n1.00 -1.00\n1.00 -1.50\n1.50 -1.00\n1.50 -1.50\n2.00 -1.00\nSample Output 2:\n4\nassert solution('''4\n-1.00 -1.00\n-1.00 -1.00\n-1.00 -1.00\n-1.00 -1.00''') == '4'\n"
    },
    {
        "number": 3172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00'''\n    ) == '4'\n\nassert solution(\n'''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00'''\n    ) == '3'\n\nassert solution(\n'''5\n0.00 0.00\n1.00 1.00\n2.00 2.00\n3.00 3.00\n4.00 4.00'''\n    ) == '4'\n\nassert solution(\n'''5\n-1.00 -1.00\n1.00 1.00\n2.00 2.00\n3.00 3.00\n4.00 4.00'''\n    ) == '4'\n\nassert solution(\n'''5\n4.00 4.00\n3.00 3.00\n2.00 2.00\n1.00 1.00\n0.00 0.00'''\n    ) == '4'"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\"\nassert solution(\"3 3 4\\n.R....\\n....X.\\n.X...\\nR???L\") == \"10\"\nassert solution(\"2 1 2\\n.R..\\n.L...\") == \"4\"\n\"\"\"\n\nfrom collections import deque\nimport sys"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('10 2 5 4') == '15'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == input(\"\")\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 5 2\") == \"16\"\nassert solution(\"3 4 3\") == \"16\"\nassert solution(\"2 3 1\") == \"10\"\nassert solution(\"3 3 1\") == \"10\"\nassert solution(\"1 2 1\") == \"2\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"2 3 1\n    X..\n    ?.\n    100 100 7 100 8\n    \"\"\"\n) == '10'\nassert solution(\n    \"\"\"2 3 1\n    R..\n    .X.\n    100 100 7 100 8\n    \"\"\"\n) == '16'\nassert solution(\n    \"\"\"3 3 1\n    RR?.\n    ...\n    ..X\n    .100 1000 1\n    \"\"\"\n) == '100'\nassert solution(\n    \"\"\"5 3 2\n    RRR?.\n    RRL?.\n    RRRR.\n    RRLRL\n    .RRRL\n    \"\"\"\n) == '1'\nassert solution(\n    \"\"\"8 9 2\n    L..R...L.\n    ..R..XL.\n    ...L.L..\n    ...L...\n    ...L.L..\n    ...L.L...\n    ...L.LLL..\n    ...L.LLLLL\n    \"\"\"\n) == '1'\n"
    },
    {
        "number": 3173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n''') == '16'\n'''\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\nassert solution('''0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1''') == '1.414'\nassert solution('''0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1''') == '1.414'\nassert solution('''0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2 2\n2 1 1\n2 2 1\n1 1 1\n3 4 1\n2 3 2\n1 3 1\n3 2"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 3\\n0 4 4\\n1 5 1\\n2 6 1') == '1.414'\nassert solution('1 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657'\nassert solution('3 3\\n0 0 4\\n0 1 2\\n1 0 3\\n1 1 4\\n2 6 1') == '1.414'\n\n'''\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\nprint('Successfully passed test cases!')\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\nprint('Testcases passed')\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(expected)\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 1 1') == '1.0'\nassert solution('2\\n1 1 1 1') == '0.433'\nassert solution('3\\n1 1 1 1') == '0.433'\nassert solution('4\\n1 1 1 1') == '0.433'\nassert solution('5\\n1 1 1 1 1') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0.433'\nassert solution(stdin = '5 1 1 1 1') == '1.0'\nassert solution(stdin = '3 1 1 1') == '0.433'\nassert solution(stdin
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('$4 1 1 1 1\\\\n') == '1.0'\nassert solution('$3 1 1 1\\\\n') == '0.433'\nassert solution('$5 1 1 1 1 1\\\\n') == '0.433'\nassert solution('$6 1 1 1 1 1 1\\\\n') == '0.433'\nassert solution('$7 1 1 1 1 1 1 1\\\\n') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1 1 1''') == '0.433'\nassert solution('''1 1 1 1''') == '1.0'\nassert solution('''1 1 1 1''') == '0.433'\nassert solution('''2 1 2 1''') == '2.0'\nassert solution('''1 1 1 1''') == '1.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 1 1 1 1''') == '1.0'\nassert solution('''3 1 1 1''') == '0.433'\nassert solution('''8 1 1 1 1 1 1 1 1''') == '1.0'\nassert solution('''2 1 1 1 1 1 1 1''') == '1.0'\nassert solution('''1 1 1 1 1 1 1''') == '0.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.433\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('$4\\n1 1 1 1\\n') == '1.0'\nassert solution('$3\\n1 1 1\\n') == '0.433'\nassert solution('$3\\n1 1 1\\n') == '0.433'\nassert solution('$3\\n2 2 2\\n') == '2.0'\nassert solution('$3\\n3 3 3\\n') == '3.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''$3\n1 1 1 1''') == '0.433'\nassert solution('''$5\n6 6 6 6 6\n7 7 7 7 7\n8 8 8 8 8\n9 9 9 9 9\n10 10 10 10''') == '909'\nassert solution('''$6\n1 1 1 1 1 1\n2 2 2 2 2 2\n3 3 3 3 3 3\n4 4 4 4 4 4\n5 5 5 5 5 5\n6 6 6 6 6 6\n7 7 7 7 7 7\n8 8 8 8 8 8\n9 9 9 9 9 9\n10 10 10 10 10''') == '909091'\nassert solution('''$8\n2 2 2 2 2 2 2 2\n3 3 3 3 3 3 3 3\n4 4 4 4 4 4 4 4\n5 5 5 5 5 5 5 5\n6 6 6 6 6 6 6 6\n7 7 7 7 7 7 7 7\n8 8 8 8 8 8 8 8\n9 9 9 9 9 9 9 9\n10 10 10 10 10 10 10''') == '90909090909090909090909'\nassert solution('''$15\n
    },
    {
        "number": 3175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4 1 1 1 1\n''') == '1.0'\nassert solution('''\n3 1 1 1\n''') == '0.433'\nassert solution('''\n4 3 1 1 1\n''') == '0.433'\nassert solution('''\n3 3 3 3\n''') == '0.0'\nassert solution('''\n2 4 3 4\n''') == '0.0'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 5') == '1 1\\n1 2\\n1 3\\n2 3'\nassert solution('2 1 5') == '1 1\\n1 2\\n2 3'\nassert solution('1 2 4') == '1 1\\n2 1\\n2 3'\nassert solution('2 3 5') == '1 1\\n1 2\\n2 3'\nassert solution('3 2 30') == '1 1\\n1 2\\n1 3\\n2 3'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5''') == '5'\nassert solution('''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '36'\nassert solution('''3 3\n1 1 8\n2 2 3\n3 2 5\n2 1 8''') == '3'\nassert solution('''3 3\n1 1 8\n2 2 3\n3 2 5''') == '1'\nassert solution('''3 3\n1 1 8\n2 2 3\n3 2 5\n2 1 8''') == '1'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5') == '5'\nassert solution('1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5') == '5'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1 1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1 1\"\nassert solution(\"2 3\") == \"1 1\"\nassert solution(\"2 3\") == \"1 1\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5''') == '5'\nassert solution(\n'''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5''') == '5'\nassert solution(\n'''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '36'\nassert solution(\n'''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '36'\nassert solution(\n'''5 6\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5''') == '5'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 10\") == \"5\"\nassert solution(\"8 10\") == \"36\"\nassert solution(\"5 5\") == \"1 1\"\nassert solution(\"1 1 1\") == \"1 1\"\nassert solution(\"5 2\") == \"1 1\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 5') == '5'\nassert solution('2 1 5') == '4'\nassert solution('1 2 4') == '1 1'\nassert solution('2 3 5') == '3 3'\nassert solution('3 2 30') == '5'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 5') == '5'\nassert solution('2 1 5') == '4'\nassert solution('1 2 4') == '1 1'\nassert solution('2 3 5') == '3 3'\nassert solution('3 2 30') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5''') == '5'\nassert solution('''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '36'\nprint(solution(input()))"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == '1'\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n''') == '3'\nassert solution('''2 4\n4 1 2\n2 1 4\n1 4\n2 4\n''') == '2'\nassert solution('''10 9\n5 6 7 8 9 10\n9 10\n10 9\n5 6 7 8 9\n8 9\n10 9\n5 6 7 9\n6 7\n7 9\n9 10\n''') == '9'\nassert solution('''100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51\n100 99\n50 51"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '2'\nassert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"2 1 3\") == \"3\"\nassert solution(\"2 1 2 3\") == \"3\"\nassert solution(\"3 1 3 2\") == \"2\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 3\") == \"2\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == '1'\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n''') == '3'\nassert solution('''4 2\n2 1 3 4\n1 3\n2 3\n''') == '2'\nassert solution('''5 2\n2 1 3 4 5\n1 3\n2 3\n''') == '2'\nassert solution('''6 2\n2 1 3 4 5 6\n1 3\n2 3\n''') == '2'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == '1'\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n''') == '3'\nassert solution('''4 2\n2 1 3 4\n1 3\n2 3\n''') == '1'\nassert solution('''5 2\n2 1 3 4 5\n1 3\n2 3\n''') == '0'\nassert solution('''6 2\n2 1 3 4 5 6\n1 3\n2 3\n''') == '2'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'\n'''"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == '1'\nassert solution('''2 1\n2 1\n1 2\n''') == '1'\nassert solution('''2 1\n1 3\n2 1\n''') == '2'\nassert solution('''2 3\n1 2\n3 2\n''') == '3'\nassert solution('''2 3\n2 1 3\n1 2\n3 2\n''') == '2'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''3 2''') == '3'\nassert solution('''3 2\n1 3''') == '1'\nassert solution('''3 3\n1 2 3\n2 1 3\n2 3 1''') == '1'\nassert solution('''4 3\n2 1 4 3\n1 4\n1 3\n2 3''') == '1'\n"
    },
    {
        "number": 3177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1\n2 1\n1 2\n''') == '1'\nassert solution('''3 2\n2 1 3\n1 3\n2 3\n''') == '3'\nassert solution('''4 4\n1 2 3 4\n1 3\n2 3\n1 4\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n1 3\n2 3\n1 4\n''') == '5'\nassert solution('''6 6\n1 2 3 4 5 6\n1 2\n1 3\n2 3\n2 4\n1 5\n''') == '5'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n4') == '-1'\nassert solution('1\\n3\\n4') == '2'\nassert solution('1\\n5\\n4\\n2\\n3\\n4') == '2'\nassert solution('1\\n5\\n4\\n1\\n2\\n3\\n4') == '-1'\nassert solution('1\\n5\\n4\\n1\\n2\\n3\\n4\\n5\\n6') == '-1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer_1\nassert solution(stdin) == answer_2\nassert solution(stdin) == answer_3\nassert solution(stdin) == answer_4\nassert solution(stdin) == answer_5\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '5'\n\nassert solution('''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '5'\n\nassert solution('''5 5\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\n\nassert solution('''7 5\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '7'\n\nassert solution('''5 4\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '3'"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\nassert solution('''5 10\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n4 15\n4 16\n4 17\n4 18\n4 19\n4 20\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n5 15\n5 16\n5 17\n5 18\n5 19\n5 20\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n6 15\n6 16\n6 17\n6 18\n6 19\n6 20\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n7 17\n7 18\n7 19\n7 20\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n8 17\n8 18\n8 19\n8 20\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n9 18\n9 19\n9 20\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n11 19\n11 20\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n12 19\n12 20\n13 14\n13 15\n13 16\n13 17\n13 18\n13 19\n13 20\n14 15\n14 16\n14 17\n14 18\n14 19\n14 20\n15 16\n15 17\n15 18\n15 19\n15 20\n16 17\n16 18\n16 19\n16 20\n17 18\n17 19\n17 20\n18 19\n18 20\n19 20\n''') == '5'\nassert solution('''3 3\n1 2\n1 3\n2 3\n1 3\n1 2\n''') == '4'\nassert solution('''3 3\n1 2\n1 3\n2 3\n1 3\n1 2\n''') == '2'\nassert solution('''1 2\n2 3\n1 3\n2 3\n1 3\n1 2\n''') == '3'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '5'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == \"5\"\n\nassert solution('''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == \"5\"\n\nassert solution('''7 10\n1 2\n1 3\n1 6\n1 7\n2 4\n2 5\n2 6\n2 7\n3 5\n3 6\n3 7\n4 6\n4 7\n5 6\n6 7\n6 8\n7 8\n''') == \"0\"\n\nassert solution('''5 4\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n2 12\n2 9\n3 9\n3 13\n3 14\n3 15\n4 15\n5 11\n5 12\n5 13\n5 14\n6 11\n6 12\n7 10\n7 11\n8 9\n8 10\n9 10\n9 11\n10 11\n10 12\n10 13\n10 14\n10 15\n11 15\n12 14\n13 14\n13 15\n14 15\n''') == \"12\"\n\nassert solution('''4 4\n1 2\n1 3\n1 4\n2 4\n3 4\n''') == \"0\""
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3 4') == '5'\nassert solution('1 2\\n4 5\\n1 2') == '-1'\nassert solution('1 2\\n4 5\\n1 5\\n3 4\\n1 5') == '5'\nassert solution('1 2\\n1 2') == '-1'\nassert solution('1 2\\n2 1') == '-1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_file.txt\", \"r\").read()) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''1 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''1 1\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''2 2\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"9.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1\\n5 1\\n5 5\\n4 2\\n') == '4.00'\nassert solution('3\\n1 1\\n5 1\\n5 5\\n4 2\\n') == '9.00'\nassert solution('2\\n0 0\\n2 2\\n1 1\\n') == '4.00'\nassert solution('2\\n0 0\\n3 1\\n0 1\\n') == '2.00'\nassert solution('2\\n0 0\\n1 1\\n0 2\\n') == '2.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\n\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\n\nassert solution('''9 5\n-9 -9\n1 1\n5 1\n5 5\n4 2\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '14.00'\nassert solution('''2 2\n-9 -9\n1 1\n1 1\n-1 -1\n-1 -1\n''') == '1.00'\n\n'''\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\n\nassert solution('''2\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1.00'\n\nassert solution('''10\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n''') == '1000.00'\n\nassert solution('''11\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''9 4\n-2 -3\n-3 -1\n-5 -6\n-4 -3\n-6 -4\n-7 -3\n-9 -5\n-6 -7\n-7 -8\n-9 -9\n-5 -7\n-7 -6\n-7 -5\n-5 -4\n-3 -2\n-1 -3\n-4 -2\n-2 -3\n-3 -4\n-1 -4\n-2 -2\n-1 -1\n-2 -0\n-3 -0\n-4 -0\n-5 -0\n-6 -0\n-7 -0\n-8 -0\n-9 -0\n-10 -0\n-9 -1\n-10 -1\n-8 -1\n-7 -1\n-6 -1\n-5 -1\n-4 -1\n-3 -1\n-2 -1\n-1 -1\n-1 -2\n-1 -3\n-1 -4\n-1 -5\n-1 -6\n-1 -7\n-1 -8\n-1 -9\n-1 -10\n''') == '12.00'\nassert solution('''5 2\n-1000000 -1000000\n1000000 -1000000\n-1000000 1000000\n1000000 1000000\n-1000000 -1000000\n''') == '1.00'\nassert solution('''7 2\n-1000000 -1000000\n1000000 -1000000\n-1000000 1000000\n1000000 1000000\n-1000000 -1000000\n-1000000 -1000000\n-1000000 1000000\n-1000000 1000000\n-1000000 -1000000\n1000000 1000000\n''') == '0.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n5 1\\n5 5\\n4 2') == '4.00'\nassert solution('1\\n1\\n5 1\\n5 5\\n4 2\\n1 1') == '9.00'\nassert solution('1\\n1\\n5 1\\n5 5\\n4 2\\n8 8\\n0 0') == '9.00'\nassert solution('1\\n1\\n5 1\\n5 5\\n4 2\\n8 8\\n0 0\\n1 1') == '9.00'\nassert solution('1\\n1\\n5 1\\n5 5\\n4 2\\n8 8\\n0 0\\n-1 -1') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\"\nassert solution(\"6 3\\n4 2\\n0 10\\n-1 0\\n\") == \"9.00\"\nassert solution(\"6 3\\n4 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n\") == \"10.00\"\nassert solution(\"6 3\\n4 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n0 10\\n-1 0\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n0 10\\n-1 0\\n2 2\\n0 10\\n-1 0\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\n2 2\\n0 10\\n-1 0\\n2 2\\"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"1 1\n5 1\n5 5\n4 2\n\"\"\"\n) == \"4.00\"\nassert solution(\n    \"\"\"6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n\"\"\"\n) == \"9.00\"\nassert solution(\n    \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1\\n1 1\\n5 1\\n5 5\\n4 2\\n') == '4.00'\nassert solution('-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n') == '9.00'\nassert solution('1 1\\n5 1\\n5 5\\n4 2\\n') == '4.00'\nassert solution('-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n') == '9.00'\nassert solution('1 1\\n5 1\\n5 5\\n4 2\\n') == '4.00'\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(dedent('''\n    4 3 2\n    PAINT 2 0 0 3 3\n    PAINT 3 0 3 3 3\n''')) == dedent('''\n    2 1 2 3\n    1 2 1 2\n    2 1 2 3\n    1 2 1 2\n''')\n\nassert solution(dedent('''\n    3 3 4\n    PAINT 3 0 0 1 1\n    SAVE\n    PAINT 2 1 1 2 2\n    LOAD 1\n''')) == dedent('''\n    3 1 1\n    1 3 1\n    1 1 1\n''')\n\nassert solution(dedent('''\n    5 5 6\n    PAINT 3 0 0 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 2 0 2 2 2\n    SAVE\n    PAINT 3 0 0 1 1\n    SAVE\n    PAINT 1 0 0 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 3 0 2 2 2\n    LOAD 1\n    PAINT 1 0 0 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 2 0 2 2 2\n    SAVE\n    PAINT 4 0 1 1 1\n    SAVE\n    PAINT 1 0 0 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 3 0 2 2 2\n    LOAD 1\n    PAINT 1 0 0 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 4 0 1 1 1\n    PAINT 2 0 2 2 2\n''')) == dedent('''\n    3 1 1\n    1 3 1\n    1 1 1\n    1 1 1\n    2 1 2\n    1 2 1\n    2 1 2\n''')"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '''2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n'''\nassert solution('''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '''3 1 1\n1 3 1\n1 1 1\n'''\nprint(\"PASSED\")\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n\"\"\") == \"\"\"\n2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n\"\"\"\nassert solution(\n\"\"\"\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n\"\"\") == \"\"\"\n3 1 1\n1 3 1\n1 1 1\n\"\"\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == input\n\n\"\"\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n\"\"\") == \"\"\"2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\"\"\"\n\nassert solution(\n\"\"\"3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n\"\"\") == \"\"\"3 1 1\n1 3 1\n1 1 1\n1 1 1\n3 1 1\n1 3 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n3 1 1\n1 3 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '''2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n'''\n"
    },
    {
        "number": 3180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\nprint('Passed: 8/8')\n\nassert solution(\n'''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '3 1 1\\n1 3 1\\n1 1 1\\n'\nprint('Passed: 8/8')\n\nassert solution(\n'''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nPAINT 2 1 0 1 2 2\nLOAD 1\nPAINT 3 0 0 1 1\nPAINT 2 1 1 1 1\nPAINT 2 1 0 1 2 2\nLOAD 1\n''') == '3 1 1\\n1 3 1\\n1 1 1\\n3 1 1\\n1 3 1\\n3 1 1\\n1 3 1\\n1 1 1\\n'\nprint('Passed: 8/8')\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\nassert solution('4 4') == '1 2 3 4'\nassert solution('5 4') == '1 2 3 4'\nassert solution('5 4') == '1 2 3 4'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 4 2 3') == '1 4 2 3\\n'\nassert solution('5 1\\n1 4 2 3') == '-1\\n'\nassert solution('5 4\\n1 4 2 3') == '-1\\n'\nassert solution('4 3\\n3 2 1 4\\n1 1 2 1') == '-1\\n'\nassert solution('4 3\\n1 4 2 3\\n3 2 1 4\\n1 1 2 1') == '1 3 2 4\\n'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"-1\"\nassert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"1 4 2 3\"\nassert solution(\"4 2\") == \"-1\"\nassert solution(\"4 3\") == \"1 4 2 3\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == '1 4 2 3'\nassert solution('2 1') == '1'\nassert solution('3 3') == '-1'\nassert solution('4 1') == '1 4 2 3'\nassert solution('1 2') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\nassert solution('10 2') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('2 1') == '-1'\nassert solution('4 2') == '1 2 3 4'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\nassert solution('1 10') == '1 10'\nassert solution('10 1000') == '1 10'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n''') == '1 4 2 3'\nassert solution('''5 1\n''') == '-1'\nassert solution('''1\n''') == '-1'\nassert solution('''1 1\n''') == '-1'\nassert solution('''1 1\n''') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 4 2 3\") == \"1 4 2 3\"\nassert solution(\"1 2 3 4 5\") == \"1 4 2 3\"\nassert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\"\nassert solution(\"4 1\") == \"-1\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 2\n2 1\n1 3''') == '1'\nassert solution('''4\n5 0\n2 6\n8 6\n5 7''') == '0'\nassert solution('''6\n1 0\n6 3\n0 2\n2 9\n4 9\n6 4\nSample Output 2:\n0''') == '0'\nassert solution('''5\n5 0\n2 6\n8 6\n5 7\n2 2''') == '1'\nassert solution('''5\n5 0\n2 6\n8 6\n5 7\n2 2''') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n5 0\n2 6\n8 6\n5 7''') == '0'\nassert solution('''3\n4 2\n2 1\n1 3''') == '1'\nassert solution('''4\n5 0\n2 6\n8 6\n5 7''') == '1'\nassert solution('''4\n2 2\n2 1\n1 3''') == '1'\nassert solution('''2\n5 0\n2 6\n8 6\n5 7''') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n2 1\\n1 3\\n') == '1'\nassert solution('2\\n2 1\\n1 3\\n5 6\\n7 8\\n9 10\\n') == '1'\nassert solution('3\\n2 1\\n1 3\\n5 6\\n7 8\\n9 10\\n') == '2'\nassert solution('4\\n5 0\\n2 6\\n8 6\\n5 7\\n') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n4 2\\n2 1\\n1 3') == '1'\nassert solution('3\\n5 0\\n2 6\\n8 6\\n5 7') == '0'\nassert solution('8\\n0 0\\n3 4\\n9 8\\n5 6\\n7 7\\n8 9') == '0'\nassert solution('4\\n8 7\\n4 3\\n7 2\\n9 8') == '3'\nassert solution('4\\n8 7\\n4 3\\n7 2\\n9 8') == '3'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n4 2\n2 1\n1 3''') == '1'\nassert solution('''5\n6 0\n2 6\n8 6\n5 7\n-2 1''') == '0'"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4 2\n2 1\n1 3\n''') == '1'\nassert solution('''\n4\n-5 1\n2 6\n8 6\n-5 7\n''') == '0'\nassert solution('''\n4\n5 0\n2 6\n8 6\n5 7\n''') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4 2\\n2 1\\n1 3\") == \"1\"\nassert solution(\"2\\n5 0\\n2 6\\n8 6\\n5 7\") == \"0\"\nassert solution(\"10\\n4578 3\\n2705 4\\n1023 5\\n2555 6\\n1229 7\\n1114 8\\n1049 9\\n5 4\\n7 5\\n5 3\\n7 3\\n10 2\") == \"0\"\nassert solution(\"10\\n42 20\\n42 41\\n10 45\\n6 6\\n13 8\\n22 22\\n1 19\\n3 11\\n2 12\\n9 4\\n4 5\\n10 5\\n12 19\\n5 7\\n8 17\\n14 19\") == \"4\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 0\") == \"0\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2') == '1'\nassert solution('3\\n3\\n3\\n3') == '1'\nassert solution('4\\n2\\n0\\n1') == '1'\nassert solution('4\\n2\\n2\\n2') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '6'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n\"\"\"\n) == \"4 140\"\n\nassert solution(\n\"\"\"\n2 1 0 1\n0 1 1000 100\n\"\"\"\n) == \"1000 100000\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2 2 0 1') == '0 1'\nassert solution('1 1 2 0') == '1'\nassert solution('2 1 0 1') == '1 0'\nassert solution('2 1 0 1 1') == '1 1'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('3 3 1 0') == '0 10'\nassert solution('2 2 1 1') == '3 100'\nassert solution('2 1 0 1') == '1 100'\nassert solution('2 1 0 1 0 1 1') == '3 100'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40') == '0'\nassert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40') == '0'\nassert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40') == '0'\nassert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40') == '0'\nassert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40') == '0'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '4 140'\nassert solution('''4 2 0 1\n0 1 1000 100\nSample Output 2:\n1000 100000''') == '1000 100000'\nassert solution('''2 1 0 1\n0 1 1000 100\n''') == '1000 100000'\nassert solution('''2 1 0 1\n0 1 1000 100\n''') == '1000 100000'\nassert solution('''4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n0 1 1 5\n1 3 3 5\n3 0 2 2\n3 1 4 4\n3 2 5 5\n3 3 4 4\n3 4 5 5\n''') == '4 133'\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 0 5\\n0 1 1 0\\n0 1 4 3\\n1 2 2 1\\n0 2 1 1\\n0 2 4 1\") == \"2 2 1\"\nassert solution(\"1 2 0 5\\n0 1 1 0\\n0 1 4 3\\n1 2 2 1\\n0 2 1 1\\n0 2 4 1\") == \"2 2 1\"\nassert solution(\"1 2 0 5\\n0 1 1 0\\n0 1 4 3\\n1 2 2 1\\n0 2 1 1\\n0 2 4 1\\n1 2 1 3\\n0 2 3 2\\n0 2 4 1\") == \"2 2 1\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n1 2 2 1\\n0 2 1 1\\n0 2 4 1\\n1 2 1 3\\n0 2 3 2\\n0 2 4 1\") == \"1000 100000\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n1 2 2 1\\n0 2 1 1\\n0 2 4 1\\n1 2 1 3\\n0 2 3 2\\n0 2 4 1\\n1 2 1 3\\n0 2 3 2\\n0 2 4 1\\n1 2 1 3\\n0 2 3 2\\n0 2 4 1\") == \"1000 100000\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '4 140'\n\nassert solution('''2 1 0 1\n0 1 1000 100\n''') == '1000 100000'\n'''\n\nfrom sys import stdin\n"
    },
    {
        "number": 3183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"0 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\"\n) == \"4 140\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4') == 'impossible'\nassert solution('1\\n2\\n3\\n4\\n5') == 'impossible'\nassert solution('2\\n2\\n3\\n4\\n5') == 'impossible'\nassert solution('2\\n2\\n3\\n4\\n5\\n6') == 'impossible'\nassert solution('2\\n2\\n3\\n4\\n5\\n6\\n7') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(TEST_INPUT_1) == TEST_OUTPUT_1\nassert solution(TEST_INPUT_2) == TEST_OUTPUT_2\nprint(\"Passed\")\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 10\") == \"impossible\"\nassert solution(\"0 0\") == \"impossible\"\nassert solution(\"4 4\") == \"impossible\"\nassert solution(\"1 1\") == \"impossible\"\nassert solution(\"4 4 2 0\") == \"impossible\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n1 10\\n2 20\\n3 30\\n4 40') == '3'\nassert solution('2\\n8\\n1 6\\n2 7\\n3 5\\n4 6\\n5 7\\n6 4\\n7 3\\n8 2') == 'impossible'\nassert solution('4\\n7\\n2 9\\n3 6\\n4 8\\n5 5\\n6 7\\n7 4\\n8 1') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13') == 'impossible'\nassert solution('3\\n3\\n2\\n1\\n0') == '1'\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n1\") == \"impossible\"\nassert solution(\"100 6\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 2\n8 3\n5 7\n''') == '3'\nassert solution('''7 6\n7 4\n4 3\n3 2\n2 1\n1 1\n2 4\n3 5\n4 6\n''') == 'impossible'\nassert solution('''5 1\n1 2\n''') == 'impossible'\nassert solution('''6 1\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == 'impossible'\nassert solution('''6 1\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\nprint('Passed')\n"
    },
    {
        "number": 3184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == '3'\nassert solution('''100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == 'impossible'\nassert solution('''100 8\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20''') == 'impossible'\nassert solution('''10 5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 9''') == '1'\nassert solution('''10 11\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 9''') == '2'\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('51090942171709440000') == '21'\nassert solution('120') == '5'\nassert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9' * 1000) == '5' * 1000\nassert solution('1' * 1000) == '1' * 1000\n\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\nassert solution('510909421717094400010') == '21'\nprint('Test: OK!')\n\"\"\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(123456789) == 987654321\nassert solution(987654321) == 123456789\nassert solution(1234) == 24\nassert solution(100) == 25\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''120''') == '5'\nassert solution('''51090942171709440000''') == '21'\n\nprint('Testcase 1: Passed')\nprint('Testcase 2: Passed')\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == 45\nassert solution('5 1 3') == 120\nassert solution('10 1 6') == 6\nassert solution('10 1 6') == 6\nassert solution('10 2 6') == 1\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 1 2') == 45\nassert solution('3 3 3') == 10\nassert solution('100 1 10') == 43\nassert solution('5 6 4') == 6\nassert solution('1 1 1') == 1\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\n\"\"\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 1 2') == 45\nassert solution('3 3 3') == 10\nassert solution('10 10 10') == 210\nassert solution('1 1000000 1000000') == 1050000130\n\"\"\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\n\n\"\"\""
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 1 2') == 45\nassert solution('3 3 3') == 10\nassert solution('100 1 2') == 46\nassert solution('100 100 100') == 49"
    },
    {
        "number": 3186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 1 2''') == '45'\nassert solution('''3 3 3''') == '10'\nassert solution('''10 10 10''') == '30'\nassert solution('''100 100 100''') == '30'\nassert solution('''50 50 50''') == '50'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n\"\"\") == \"18\"\nassert solution(\n\"\"\"10\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"5\n3 1\n4 1\n5 9\n2 6\n5 3\n4\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"5\n3 1\n4 1\n5 9\n2 6\n5 3\n1\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"5\n3 1\n4 1\n5 9\n2 6\n5 3\n2\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n\"\"\") == \"18\"\nassert solution(\n\"\"\"5\n3 1\n4 1\n5 9\n2 6\n5 3\n\"\"\") == \"20\"\nassert solution(\n\"\"\"5\n3 1\n4 1\n5 9\n2 6\n5 3\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"5\n3 1\n4 1\n5 9\n2 6\n5 3\n4\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"1\n1\n\"\"\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '18'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '20'\nassert solution('''7\n3 4\n1 3\n5 9\n4 7\n1 3\n2 7\n5 3\n2 3\n5 7\n5 3''') == '35'\nassert solution('''8\n3 4\n1 3\n5 9\n4 7\n1 3\n2 7\n5 3\n2 3\n5 7\n5 3\n5''') == 'impossible'\nassert solution('''10\n3 4\n1 3\n5 9\n4 7\n1 3\n2 7\n5 3\n2 3\n5 7\n5 3\n2 3\n5 7\n5 3\n5''') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '18'\nassert solution('''3\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '20'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == 'impossible'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10''') == 'impossible'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n2''') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '18'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n0\n''') == 'impossible'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == '20'\nassert solution('''\n6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n''') == '36'\nassert solution('''\n8\n3 0\n4 5\n6 7\n7 8\n8 0\n1 1\n2 1\n3 1\n4 1\n5 9\n2 6\n''') == '48'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n5\\n5') == '20'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n5\\n5\\n5') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n5\\n5\\n5\\n5\\n5') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n5\\n5\\n5\\n5\\n5') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n5') == '20'\nassert solution('7\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n5\\n5\\n5\\n5') == 'impossible'\nassert solution('10\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n5\\n5\\n5\\n5') == 'impossible'\nassert solution('2\\n2\\n1\\n1\\n5') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '18'\nassert solution(\n'''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '20'\nassert solution(\n'''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10''') == 'impossible'\nassert solution(\n'''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '18'\nassert solution(\n'''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10''') == '20'\n"
    },
    {
        "number": 3187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '20'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 5 10\n7 8 2''') == '3'\nassert solution('''3\n-1 -1 -1\n5 5 5\n10 10 10''') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '0'\nassert solution('1\\n2\\n3\\n4\\n5') == '0'\nassert solution('2\\n2\\n2\\n2') == '0'\nassert solution('2\\n2\\n2\\n3') == '1'\nassert solution('2\\n2\\n2\\n1') == '1'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''-1 -1 -1\n5 5 5\n10 10 10''') == '11'\nassert solution('''1 5 10\n7 8 2''') == '3'\nassert solution('''-1 -1 -1\n-1 1 2\n4 5 -1''') == '6'\nassert solution('''-1 -1 -1\n5 5 5\n10 10 10''') == '11'\nassert solution('''-1 -1 -1\n-1 -1 -1\n-1 -1 -1''') == '0'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2\n1 5 10\n7 8 2''') == '3', 'Pass a pair of points to connect.'\nassert solution(\n'''3\n-1 -1 -1\n5 5 5\n10 10 10''') == '11', 'Pass a pair of points to connect.'\nassert solution(\n'''6\n0 0 0\n10 10 0\n-3 -4 -1\n-5 5 5\n4 0 1\n2 -2 5''') == '8', 'Pass a pair of points to connect.'\nassert solution(\n'''1000\n0 0 0\n-10 -10 -10\n-100 100 100\n-10000 10000 -10000\n-100000 10000 10000\n-100000 10000 -100000\n1000000 1000000 1000000''') == '3', 'Pass a pair of points to connect.'\nassert solution(\n'''1000\n-5000000 -5000000 -5000000\n5000000 5000000 5000000\n5000000 5000000 -5000000\n-5000000 -5000000 5000000\n-5000000 5000000 -5000000\n5000000 5000000 -5000000\n-5000000 -5000000 -5000000''') == '4', 'Pass a pair of points to connect.'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\"\nassert solution(\"3\\n-1 -1 -1\\n1 1 1\\n-5 -5 -5\") == \"0\"\nassert solution(\"3\\n-1 -1 -1\\n2 2 2\\n-5 -5 -5\") == \"0\"\nassert solution(\"3\\n-1 -1 -1\\n2 2 2\\n-5 -5 -5\") == \"0\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"2\n1 5 10\n7 8 2\n\"\"\") == \"3\"\nassert solution(\n    \"\"\"3\n-1 -1 -1\n5 5 5\n10 10 10\n\"\"\") == \"11\"\nassert solution(\n    \"\"\"3\n1 1 1\n2 2 2\n3 3 3\n\"\"\") == \"0\"\nassert solution(\n    \"\"\"6\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n\"\"\") == \"5\"\nassert solution(\n    \"\"\"5\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n\"\"\") == \"11\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1 1\") == \"1\"\nassert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\"\nassert solution(\"4\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\"\nassert solution(\"5\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"5\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''1\n1 5 10\n7 8 2'''\n) == '3'\n\nassert solution(\n'''2\n1 5 10\n7 8 2'''\n) == '11'\n\nassert solution(\n'''3\n-1 -1 -1\n5 5 5\n10 10 10'''\n) == '11'\n\nassert solution(\n'''4\n1 2 2\n3 3 4\n1 5 10\n7 8 2\n5 5 8'''\n) == '12'\n"
    },
    {
        "number": 3188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 5 10\\n7 8 2\\n10 10 10\\n-1 -1 -1\\n5 5 5\\n10 10 10') == '3'\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n5 5 5\\n10 10 10\\n3\\n10 10 10\\n10 10 10') == '11'\nassert solution('1\\n0 0 0\\n0 0 0\\n0 0 0') == '0'\nassert solution('2\\n2 2 2\\n2 2 2') == '2'\nassert solution('1\\n2 3 4\\n5 6 7') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1000 1000\") == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1\\n110\\n011\\n2 1\\n1000\\n1000\\n0000\\n0010') == '0'\nassert solution('3 1\\n110\\n011\\n2 1\\n1000\\n1000\\n0000\\n0010') == '2'\nassert solution('6 1\\n111\\n011\\n2 1\\n1000\\n1000\\n0000\\n0010') == '0'\nassert solution('8 1\\n111\\n011\\n2 1\\n1000\\n1000\\n0000\\n0010') == '0'\nassert solution('5 1\\n110\\n011\\n2 1\\n1000\\n1000\\n0000\\n0010') == '2'\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1\n110\n011''') == \"2\"\nassert solution('''4 2\n1000\n1000\n0000\n0010''') == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"10 4\") == \"1\"\nassert solution(\"1005 2\") == \"0\"\nassert solution(\"10001 4\") == \"1\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1\\n110\\n011') == '2'\nassert solution('3 2\\n1000\\n1000\\n0000\\n0010') == '0'\nassert solution('5 2\\n1000\\n1000\\n0000\\n0010\\n1010') == '2'\nassert solution('7 3\\n1111111\\n0000001\\n1100001\\n0000001\\n0000001\\n0000001') == '4'\nassert solution('9 3\\n111111111\\n000000110\\n1100001010\\n000000110\\n000000110\\n000000110') == '6'\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    110\n    011\n    \"\"\"\n    ) == \"2\"\nassert solution(\n    \"\"\"\n    4 2\n    1000\n    1000\n    0000\n    0010\n    \"\"\"\n    ) == \"0\"\nassert solution(\n    \"\"\"\n    4 3\n    1000\n    1000\n    0000\n    0010\n    \"\"\"\n    ) == \"2\"\nassert solution(\n    \"\"\"\n    4 4\n    1000\n    1000\n    0000\n    0010\n    \"\"\"\n    ) == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 2') == '0'\n\nprint(solution('3 1'))\nprint(solution('4 2'))\nassert solution('3 1') == '2'\nassert solution('4 2') == '0'\n\"\"\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('100') == ''\nassert solution('101') == ''\nassert solution('0101') == ''\n"
    },
    {
        "number": 3189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n2\") == \"1\"\nassert solution(\"2\\n1\\n3\") == \"5\"\nassert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"2\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n2\") == \"1\"\nassert solution(\"2\\n3\\n3\") == \"2\"\nassert solution(\"3\\n1\\n2\") == \"1\"\nassert solution(\"4\\n1 2 3 4\\n2\") == \"3\"\nassert solution(\"10\\n
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n') == '1'\nassert solution('2\\n3\\n') == '2'\nassert solution('4\\n2\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('1\\n1\\n') == '2'\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n3\") == \"1\"\nassert solution(\"3\\n2\\n3\") == \"1\"\nassert solution(\"1\\n3\\n2\") == \"1\"\nassert solution(\"2\\n3\\n2\") == \"1\"\nassert solution(\"2\\n2\\n3\") == \"3\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n2\\n') == '1'\nassert solution('1\\n2\\n2\\n') == '0'\nassert solution('1\\n3\\n2\\n') == '1'\nassert solution('1\\n3\\n2\\n') == '0'\nassert solution('1\\n2\\n2\\n') == '2'\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n2\\n') == '1'\nassert solution('1\\n3\\n2\\n3\\n3\\n2\\n1\\n') == '5'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n') == '5'\nassert solution('1\\n3\\n2\\n3\\n2\\n1\\n') == '1'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n2\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\") == \"2\\n\"\nassert solution(\"1\\n3\\n1\") == \"1\\n\"\nassert solution(\"1\\n3\\n1\\n3\") == \"2\\n\"\nassert solution(\"1\\n3\\n1\\n3\\n3\") == \"1\\n\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"3\\n1 3 2\") == \"5\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\nassert solution(\"1 100 1\") == \"0\"\nassert solution(\"10 100 1\") == \"0\"\nassert solution(\"10 100 1\") == \"0\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(\"2 4 1\") == \"19\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\n\"\"\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n1 100 20\n''') == '0'\nassert solution('''\\\n10 10 1\n''') == '19'\n'''\nimport sys\ninput = sys.stdin.read()\nn, r, p = map(int, input.split())"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 100 20\") == 0\nassert solution(\"10 10 1\") == 19\nassert solution(\"1 100 20 1\") == 19\nassert solution(\"10 10 1 1\") == 19\nassert solution(\"100 100 1 1\") == 19\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 100 20''') == '0'\nassert solution('''1 100 2''') == '19'\nassert solution('''10 10 1''') == '19'\nassert solution('''10 1000 2''') == '10'\nassert solution('''1 100 1000''') == '19'\n"
    },
    {
        "number": 3191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 100 20''') == '0'\nassert solution('''10 10 1''') == '19'\nassert solution('''10 1000 10''') == '20'\nassert solution('''2 10 100''') == '40'\nassert solution('''10 1000 100''') == '100'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'classa, classb, myfilec, libe'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'classa, classb, myfilec, libe'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'classa, classb, myfilec, libe'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'classa, classb, myfilec, libe'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'classa, classb, myfilec, libe'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''class a:\n    pass\nclass b:\n    pass\nclass c:\n    pass\nclass d:\n    pass\nclass e:\n    pass\nclass f:\n    pass\nclass g:\n    pass\nclass h:\n    pass\nclass i:\n    pass\nclass j:\n    pass\nclass k:\n    pass\nclass l:\n    pass\nclass m:\n    pass\nclass n:\n    pass\nclass o:\n    pass\nclass p:\n    pass\nclass q:\n    pass\nclass r:\n    pass\nclass s:\n    pass\nclass t:\n    pass\nclass u:\n    pass\nclass v:\n    pass\nclass w:\n    pass\nclass x:\n    pass\nclass y:\n    pass\nclass z:\n    pass\nclass aa:\n    pass\nclass ab:\n    pass\nclass ac:\n    pass\nclass ad:\n    pass\nclass ae:\n    pass\nclass af:\n    pass\nclass ag:\n    pass\nclass ah:\n    pass\nclass ai:\n    pass\nclass aj:\n    pass\nclass ak:\n    pass\nclass al:\n    pass\nclass am:\n    pass\nclass an:\n    pass\nclass ao:\n    pass\nclass ap:\n    pass\nclass ar:\n    pass\nclass as:\n    pass\nclass at:\n    pass\nclass av:\n    pass\nclass aw:\n    pass\nclass ay:\n    pass\nclass az:\n    pass\nclass ba:\n    pass\nclass bb:\n    pass\nclass bc:\n    pass\nclass bd:\n    pass\nclass be:\n    pass\nclass bf:\n    pass\nclass bg:\n    pass\nclass bh:\n    pass\nclass bi:\n    pass\nclass bj:\n    pass\nclass bk:\n    pass\nclass bl:\n    pass\nclass bm:\n    pass\nclass bn:\n    pass\nclass bo:\n    pass\nclass bp:\n    pass\nclass br:\n    pass\nclass bs:\n    pass\nclass bt:\n    pass\nclass bu:\n    pass\nclass bv:\n    pass\nclass bw:\n    pass\nclass bx:\n    pass\nclass by:\n    pass\nclass bz:\n    pass\nclass ca:\n    pass\nclass cb:\n    pass\nclass cc:\n    pass\nclass cd:\n    pass\nclass ce:\n    pass\nclass cf:\n    pass\nclass cg:\n    pass\nclass ch:\n    pass\nclass ci:\n    pass\nclass cj:\n    pass\nclass ck:\n    pass\nclass cl:\n    pass\nclass cm:\n    pass\nclass cn:\n    pass\nclass co:\n    pass\nclass cp:\n    pass\nclass cr:\n    pass\nclass cs:\n    pass\nclass ct:\n    pass\nclass cu:\n    pass\nclass cv:\n    pass\nclass cw:\n    pass\nclass cx:\n    pass\nclass cy:\n    pass\nclass cz:\n    pass\nclass da:\n    pass\nclass db:\n    pass\nclass dc:\n    pass\nclass dd:\n    pass\nclass de:\n    pass\nclass df:\n    pass\nclass dg:\n    pass\nclass dh:\n    pass\nclass di:\n    pass\nclass dj:\n    pass\nclass dk:\n    pass\nclass dl:\n    pass\nclass dm:\n    pass\nclass dn:\n    pass\nclass do:\n    pass\nclass dp:\n    pass\nclass dr:\n    pass\nclass ds:\n    pass\nclass dt:\n    pass\nclass du:\n    pass\nclass dv:\n    pass\nclass dw:\n    pass\nclass dx:\n    pass\nclass dy:\n    pass\nclass dz:\n    pass\nclass ea:\n    pass\nclass eb:\n    pass\nclass ec:\n    pass\nclass ed:\n    pass\nclass ee:\n    pass\nclass ef:\n    pass\nclass eg:\n    pass\nclass eh:\n    pass\nclass ei:\n    pass\nclass ej:\n    pass\nclass ek:\n    pass\nclass el:\n    pass\nclass em:\n    pass\nclass en:\n    pass\nclass eo:\n    pass\nclass ep:\n    pass\nclass er:\n    pass\nclass es:\n    pass\nclass et:\n    pass\nclass eu:\n    pass\nclass ev:\n    pass\nclass ew:\n    pass\nclass ex:\n    pass\nclass ey:\n    pass\nclass ez:\n    pass\nclass fa:\n    pass\nclass fb:\n    pass\nclass fc:\n    pass\nclass fd:\n    pass\nclass fe:\n    pass\nclass ff:\n    pass\nclass fg:\n    pass\nclass fh:\n    pass\nclass fi:\n    pass\nclass fj:\n    pass\nclass fk:\n    pass\nclass fl:\n    pass\nclass fm:\n    pass\nclass fn:\n    pass\nclass fo:\n    pass\nclass fp:\n    pass\nclass fr:\n    pass\nclass fs:\n    pass\nclass ft:\n    pass\nclass fu:\n    pass\nclass fv:\n    pass\nclass fw:\n    pass\nclass fx:\n    pass\nclass fy:\n    pass\nclass fz:\n    pass\nclass ga:\n    pass\nclass gb:\n    pass\nclass gc:\n    pass\nclass gd:\n    pass\nclass ge:\n    pass\nclass gf:\n    pass\nclass gg:\n    pass\nclass gh:\n    pass\nclass gi:\n    pass\nclass gj:\n    pass\nclass gk:\n    pass\nclass gl:\n    pass\nclass gm:\n    pass\nclass gn:\n    pass\nclass go:\n    pass\nclass gp:\n    pass\nclass gr:\n    pass\nclass gs:\n    pass\nclass gt:\n    pass\nclass gu:\n    pass\nclass gv:\n    pass\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == \"SHIP IT\"\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == \"classa, classb, myfilec, libe, execd, libe, libe, myfilec, execd, classa, classb, libe\"\nassert solution('classa classb myfilec execd libe\\nclassa 1\\nimport classb\\nimport myfilec, libe\\nclassb 2\\nimport execd\\nmyfilec 2\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == \"classa, classb, myfilec, libe, execd, libe, libe, myfilec, execd, classa, classb, libe\"\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == \"classa, classb, myfilec, libe, execd, libe, libe, myfilec, execd, classa, classb, libe\"\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == \"classa, classb, myfilec, libe, execd, libe, libe, myfilec, execd, classa, classb, libe\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n'''\n) == \"c\"\nassert solution(\n'''\n5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n'''\n) == \"SHIP IT\"\nprint('Passed!')\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'c'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'SHIP IT'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'c'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'SHIP IT'\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0''') == 'c'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'SHIP IT'\nassert solution('a b c d') == 'a'\nassert solution('a b c d') == 'a'\nassert solution('a 1') == 'a'\nassert solution('import d, b, c') == 'd'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'SHIP IT'\nassert solution('a b c d') == 'c'\nassert solution('a 1') == 'c'\nassert solution('import d, b, c') == 'c'\nassert solution('import d') == 'd'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('classa classb myfilec execd libe'\n'classa 2'\n'import classb'\n'import myfilec, libe'\n'classb 1'\n'import execd'\n'myfilec 1'\n'import libe'\n'execd 1'\n'import libe'\n'libe 0') == 'c'\nassert solution('a b c d'\n'a 1'\n'import d, b, c'\n'b 2'\n'import d'\n'import c'\n'c 1'\n'import c'\n'd 0') == 'SHIP IT'\nassert solution('classa classb myfilec execd libe'\n'classa 2'\n'import classb'\n'import myfilec, libe'\n'classb 1'\n'import execd'\n'myfilec 1'\n'import libe'\n'execd 1'\n'import libe'\n'libe 0') == 'c'\nassert solution('classa classb myfilec execd libe'\n'classa 2'\n'import classb'\n'import myfilec, libe'\n'classb 1'\n'import execd'\n'myfilec 1'\n'import libe'\n'execd 1'\n'import libe'\n'libe 0') == 'SHIP IT'\nassert solution('a b c d'\n'a 1'\n'import d, b, c'\n'b 2'\n'import d'\n'import c'\n'c 1'\n'import c'\n'd 0') == 'SHIP IT'\n"
    },
    {
        "number": 3192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == \"libe\"\n\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == \"libe\"\n\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == \"libe\"\n\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == \"libe\"\n\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == \"libe\""
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(s = \"5+3+x\") == \"1\"\nassert solution(s = \"20+3+x\") == \"2\"\nassert solution(s = \"20+3+x\") == \"2\"\nassert solution(s = \"5+3+x\") == \"1\"\nassert solution(s = \"5+3+x\") == \"1\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"5+3*x\") == \"7\"\nassert solution(\"5+3*x+2*x\") == \"5\"\nassert solution(\"5+x+3*x+2*x\") == \"6\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"5+3+x\") == \"1\"\nassert solution(\"-5-3-x\") == \"2\"\nassert solution(\"20*3*x\") == \"2\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == \"1\"\nprint(solution('5+3+x'))\nprint(solution('20+3+x'))\nprint(solution('20+3+x'))\nprint(solution('20+3+x'))"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"10-5\") == \"0\"\nassert solution(\"-2-1\") == \"-1\"\nassert solution(\"8-1\") == \"7\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('5+3+x') == '1'\nassert solution('5+3+x') == '1'\nassert solution('5+3+x') == '1'\nassert solution('5+3+x') == '1'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\nassert solution('20*2+3*x') == '30'\nassert solution('20*2+3*x') == '30'\nassert solution('20*2+3*x') == '30'\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"20+3+x\"\n) == \"2\"\n\nassert solution(\n\"50*x+10\"\n) == \"10\"\n\nassert solution(\n\"-x+3*x+9\"\n) == \"0\"\n\nassert solution(\n\"-x+3*x+7\"\n) == \"1\"\n\nassert solution(\n\"4x+4\"\n) == \"4\""
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"5+3+x\") == \"1\"\nassert solution(\"5+3+x\") == \"1\"\nassert solution(\"5+3+x\") == \"1\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == '2'\nprint('Test case 2 is correct:', solution('5+3+x'))\nassert solution(solution.__doc__) == '1'\nprint('Test case 1 is correct:', solution('20+3+x'))\nprint('Test cases are correct:', solution('2+3*x'))\nprint('Test cases are correct:', solution('10*(5+3)*x'))\nprint('Test cases are correct:', solution('30*(2+x)*x'))\nprint('Test cases are correct:', solution('(30+3)*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution('30+3*x'))\nprint('Test cases are correct:', solution"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\n'''\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 10\n0 15\n5 20\n''') == 'yes'\nassert solution('''2 10\n1 15\n0 20\n''') == 'no'\nassert solution('''2 10\n1 15\n0 10\n''') == 'no'\nassert solution('''2 10\n1 15\n0 10\n''') == 'no'\nassert solution('''2 10\n1 15\n0 10\n''') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n0 11\n0 12\n0 13\n0 14\n0 15\n0 16\n0 17\n0 18\n0 19\n0 20\n0 21\n0 22\n0 23\n0 24\n0 25\n0 26\n0 27\n0 28\n0 29\n0 30\n0 31\n0 32\n0 33\n0 34\n0 35\n0 36\n0 37\n0 38\n0 39\n0 40\n0 41\n0 42\n0 43\n0 44\n0 45\n0 46\n0 47\n0 48\n0 49\n0 50\n0 51\n0 52\n0 53\n0 54\n0 55\n0 56\n0 57\n0 58\n0 59\n0 60\n0 61\n0 62\n0 63\n0 64\n0 65\n0 66\n0 67\n0 68\n0 69\n0 70\n0 71\n0 72\n0 73\n0 74\n0 75\n0 76\n0 77\n0 78\n0 79\n0 80\n0 81\n0 82\n0 83\n0 84\n0 85\n0 86\n0 87\n0 88\n0 89\n0 90\n0 91\n0 92\n0 93\n0 94\n0 95\n0 96\n0 97\n0 98\n0 99\n0 100\n0 101\n0 102\n0 103\n0 104\n0 105\n0 106\n0 107\n0 108\n0 109\n0 110\n0 111\n0 112\n0 113\n0 114\n0 115\n0 116\n0 117\n0 118\n0 119\n0 120\n0 121\n0 122\n0 123\n0 124\n0 125\n0 126\n0 127\n0 128\n0 129\n0 130\n0 131\n0 132\n0 133\n0 134\n0 135\n0 136\n0 137\n0 138\n0 139\n0 140\n0 141\n0 142\n0 143\n0 144\n0 145\n0 146\n0 147\n0 148\n0 149\n0 150\n0 151\n0 152\n0 153\n0 154\n0 155\n0 156\n0 157\n0 158\n0 159\n0 160\n0 161\n0 162\n0 163\n0 164\n0 165\n0 166\n0 167\n0 168\n0 169\n0 170\n0 171\n0 172\n0 173\n0 174\n0 175\n0 176\n0 177\n0 178\n0 179\n0 180\n0 181\n0 182\n0 183\n0 184\n0 185\n0 186\n0 187\n0 188\n0 189\n0 190\n0 191\n0 192\n0 193\n0 194\n0 195\n0 196\n0 197\n0 198\n0 199\n0 200\n0 201\n0 202\n0 203\n0 204\n0 205\n0 206\n0 207\n0 208\n0 209\n0 210\n0 211\n0 212\n0 213\n0 214\n0 215\n0 216\n0 217\n0 218\n0 219\n0 220\n0 221\n0 222\n0 223\n0 224\n0 225\n0 226\n0 227\n0 228\n0 229\n0 230\n0 231\n0 232\n0 233\n0 234\n0 235\n0 236\n0 237\n0 238\n0 239\n0 240\n0 241\n0 242\n0 243\n0 244\n0 245\n0 246\n0 247\n0 248\n0 249\n0 250\n0 251\n0 252\n0 253\n0 254\n0 255\n0 256\n0 257\n0 258\n0 259\n0 260\n0 261\n0 262\n0 263\n0 264\n0 265\n0 266\n0 267\n0 268\n0 269\n0 270\n0 271\n0 272\n0 273\n0 274\n0 275\n0 276\n0 277\n0 278\n0 279\n0 280\n0 281\n0 282\n0 283\n0 284\n0 285\n0 286\n0 287\n0 288\n0 289\n0 290\n0 291\n0 292\n0 293\n0 294\n0 295\n0 296\n0 297\n0 298\n0 299\n0 300\n0 301\n0 302\n0 303\n0 304\n0 305\n0 306\n0 307\n0 308\n0 309\n0 310\n0 311\n0 312\n0 313\n0 314\n0 315\n0 316\n0 317\n0 318\n0 319\n0 320\n0 321\n0 322\n0 323\n0 324\n0 325\n0 326\n0 327\n0 328\n0 329\n0 330\n0 331\n0 332\n0 333\n0 334\n0 335\n0 336\n0 337\n0 338\n0 339\n0 340\n0 341\n0 342\n0 343\n0 344\n0 345\n0 346\n0 347\n0 348\n0 349\n0 350\n0 351\n0 352\n0 353\n0 354\n0 355\n0 356\n0 357\n0 358\n0 359\n0 360\n0 361\n0 362\n0 363\n0 364\n0 365\n0 366\n0 367\n0 368\n0 369\n0 370\n0 371\n0 372\n0 373\n0 374\n0 375\n0 376\n0 377\n0 378\n0 379\n0 380\n0 381\n0 382\n0 383\n0 384\n0 385\n0 386\n0 387\n0 388\n0 389\n0 390\n0 391\n0 392\n0 393\n0 394\n0 395\n0 396\n0 397\n0 398\n0 399\n0 400\n0 401\n0 402\n0 403\n0 404\n0 405\n0 406\n0 407\n0 408\n0 409\n0 410\n0 411\n0 412\n0 413\n0 414\n0 415\n0 416\n0 417\n0 418\n0 419\n0 420\n0 421\n0 422\n0 423\n0 424\n0 425\n0 426\n0 427\n0 428\n0 429\n0 430\n0 431\n0 432\n0 433\n0 434\n0 435\n0 436\n0 437\n0 438\n0 439\n0 440\n0 441\n0 442\n0 443\n0 444\n0 445\n0 446\n0 447\n0 448\n0 449\n0 450\n0 451\n0 452\n0 453\n0 454\n0 455\n0 456\n0 457\n0 458\n0 459\n0 460\n0 461\n0 462\n0 463\n0 464\n0 465\n0 466\n0 467\n0 468\n0 469\n0 470\n0 471\n0 472\n0 473\n0 474\n0 475\n0 476\n0 477\n0 478\n0 479\n0 480\n0 481\n0 482\n0 483\n0 484\n0 485\n0 486\n0 487\n0 488\n0 489\n0 490\n0 491\n0 492\n0 493\n0 494\n0 495\n0 496\n0 497\n0 498\n0 499\n0 500\n0 501\n0 502\n0 503\n0 504\n0 505\n0 506\n0 507\n0 508\n0 509\n0 510\n0 511\n0 512\n0 513\n0 514\n0 515"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 15\n5 20''') == 'yes'\nassert solution('''0 15\n0 10\n0 15\n5 20''') == 'no'\nassert solution('''0 10\n0 10\n0 15\n5 20''') == 'yes'\nassert solution('''0 10\n5 15\n5 10\n5 15\n0 10\n0 10\n0 15\n5 20''') == 'no'\n'''\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == 'no'\nassert solution('1') == 'no'\nassert solution('0 1') == 'no'\nassert solution('1 1') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 15\n5 20''') == 'yes'\nassert solution('''0 15\n0 20\n5 20''') == 'no'\nassert solution('''0 15\n0 10\n5 10\n0 30''') == 'no'\nassert solution('''0 15\n5 20\n5 15\n5 30\n0 30''') == 'no'\nassert solution('''0 15\n5 20\n0 30\n0 30\n5 30\n0 30\n0 30\n0 30\n0 30\n0 30\n5 30\n0 30\n0 30\n0 30\n0 30''') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 15\n5 20\n''') == 'yes'\n\nassert solution('''0 15\n0 20\n''') == 'no'\n\nassert solution('''0 10\n5 15\n''') == 'no'\n\nassert solution('''0 10\n5 20\n''') == 'yes'\n\nassert solution('''0 10\n1 15\n''') == 'no'"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 10\\n5 15') == 'yes'\nassert solution('0 10\\n1 15') == 'no'\nassert solution('0 10\\n0 15') == 'yes'\nassert solution('1 10\\n0 15') == 'no'\nassert solution('2 10\\n0 15\\n0 20') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 10\n0 15\n5 20''') == 'yes'\nassert solution('''2 10\n1 15\n0 20''') == 'no'\nassert solution('''2 10\n0 15\n5 20''') == 'no'\nassert solution('''2 10\n0 15\n5 20''') == 'yes'\nassert solution('''1 10\n1 15\n0 20''') == 'yes'\n"
    },
    {
        "number": 3194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 15\\n5 20') == 'no'\nassert solution('2 10\\n0 15\\n5 20') == 'yes'\nassert solution('2 10\\n0 15\\n10 20\\n5 20') == 'no'\nassert solution('2 10\\n0 15\\n1 20\\n5 20') == 'no'\nassert solution('2 10\\n0 15\\n5 20\\n5 30') == 'no'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\n\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\n\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0.25'\n\nassert solution('''4 4 4\n2\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0.5'\n\nassert solution('''4 4 4\n2\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '1/6'"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n15 red\n''') == '0'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n15 red\n17 red\n''') == '0'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n15 red\n17 red\n20 red\n''') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"4 4 4\") == \"0.25\"\nassert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\nq green\") == \"1.0\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n5 red\\n5 red\\n5 green\\n5 green\\n5 green\") == \"1\"\nassert solution(\"1 1 1\\n1\\n1 green\\n1 yellow\\n1 red\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\") == \"1\"\nassert solution(\"1 1 1\\n1\\n1 green\\n1 yellow\\n1 red\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\") == \"1\"\nassert solution(\"1 1 1\\n1\\n1 green\\n1 yellow\\n1 red\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\\n1 green\") == \"1\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n1 red\n''') == '0.5'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n5 red\n''') == '0'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n3 red\n''') == '1'\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer()\n\"\"\"\n\n\"\"\"\nSolution:\n\nT_g, T_y, T_r = map(int, stdin.split())\nn = int(stdin.readline())\nt = [0]\n\nfor _ in range(n):\n    time, color = stdin.readline().split()\n    t.append(int(time))\n\nt_q = int(stdin.readline())\nc_q = stdin.readline()\n\nimport math\n\np = math.factorial(n) / math.factorial(n - t.count(t_q)) / math.factorial(t.count(t_q))"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4 4\") == \"0.25\"\nassert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n\") == \"0\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n4 green\") == \"0\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n4 green\\n4 red\") == \"0.25\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green''') == '0.25'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\n\nprint(solution(input()))"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == '3'\nassert solution(\n'''\n5 2\n1 2\n3 2\n3 4\n1 4\n3 4\n''') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == 'inf'\nassert solution('1\\n2\\n3') == 'inf'\nassert solution('1\\n2\\n3') == 'inf'\nassert solution('1\\n2\\n3') == 'inf'\nassert solution('1\\n2\\n3') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4'''\n) == \"3\"\n\nassert solution(\n'''3 4\n1 3\n1 4\n3 2'''\n) == \"inf\"\nassert solution(\n'''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4'''\n) == \"inf\"\nassert solution(\n'''6 7\n1 3\n1 4\n3 2\n3 4\n5 6\n6 5\n3 4'''\n) == \"3\"\nassert solution(\n'''4 3\n1 3\n1 4\n3 2\n3 4\n5 6\n6 5\n3 4'''\n) == \"inf\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4''') == '3'\nassert solution('''6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3''') == 'inf'\nassert solution('''2 5\n1 2\n2 3\n3 4\n4 5\n5 1\n2 4\n4 5''') == 'inf'\nassert solution('''1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1 474\n1 475\n1 476\n1 477\n1 478\n1 479\n1 480\n1 481\n1 482\n1 483\n1 484\n1 485\n1 486\n1 487\n1 488\n1 489\n1 490\n1 491\n1 492\n1 493\n1 494\n1 495\n1 496\n1 497\n1 498\n1 499\n1 500\n1 501\n1 502\n1 503\n1 504\n1 505\n1 506\n1 507\n1 508\n1 509\n1 510\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3''') == '3'\nassert solution('''3 9\n2 3\n1 2\n3 4\n2 5\n4 5\n1 5\n3 2\n1 7\n2 8\n3 8\n2 7\n1 8\n1 9\n2 9\n2 8''') == 'inf'\nprint('Testcases passed successfully')"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == \"3\"\nassert solution(\n'''\n3 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == \"inf\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1 2\\n3 4\") == \"inf\"\nassert solution(\"2 2\\n1 3\\n3 4\") == \"3\"\nassert solution(\"3 1\\n1 2\\n3 4\") == \"inf\"\nassert solution(\"4 2\\n1 3\\n3 4\") == \"inf\"\nassert solution(\"5 6\\n1 3\\n3 4\") == \"inf\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == 'inf'\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"2 3 4 5\") == \"2\"\nassert solution(\"2 3 4 5 6 7 4 7 8 8 12 12\") == \"2\"\nassert solution(\"12 3\") == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(f\"Passes! :)\")\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '4'\nassert solution('''12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\nprint(solution('''8 8\n1 2 3 4 5 6 7 8 9 10 11 12\n'''))\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == '5'\nprint(solution('''10 10\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n'''))\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n''') == '2'\nprint(solution('''10 10\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n'''))\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101\n''') == '4'\nprint(solution('''10 10\nn'''))\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n1 2 3 4''') == \"4\"\nassert solution('''12 3\n2 3 4 5 6 7 4 7 8 8 12 12''') == \"2\"\n\nassert solution('1 2 3 4') == \"4\"\nassert solution('1 2 3 4 5 6 7 4 7 8 8 12 12') == \"2\"\nassert solution('1 2 3 4 5 6 7 4 7 8 8 12 1') == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '4'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2'\nassert solution('2 3\\n2 3 4\\n') == '2'\nassert solution('4 6\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2'\nassert solution('6 6\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2'\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == 4\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == 2\nassert solution(\"16 12\\n1 4 5 10 6 9 7 12 7 3 8 6 4 10\\n\") == 4\nassert solution(\"16 12\\n1 2 3 4 5 6 7 4 7 8 8 12 12\\n\") == 2\nassert solution(\"16 12\\n2 4 1 5 3 6 7 12 7 3 8 6 4 10\\n\") == 2\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('12 3') == '2'\nassert solution('2 3 4 5 6 7 4 7 8 8 12 12') == '2'\nassert solution('1 2 3 4 5 6 7 4 7 8 8 9 10 11 12') == '4'\nassert solution('1 2 3 4 5 6 7 4 7 8 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '4'\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5\nhoose\nhose\nnose\nnoises\nnoise\n'''\n) == 'hoose\\nnose\\nnose\\nnoise\\n'\n\nassert solution(\n'''6\nhose\nhoose\noose\nmoose\nnoises\nnoise\n'''\n) == 'hoose\\nnoises\\nnoise\\nmoose\\n'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\"\"\\\nhi\nbye\n\"\"\") == \"no problems\"\nassert solution(\"\"\"\\\nhose\nhoose\nnose\nnoises\nnoise\n\"\"\") == \"hose, noise\"\nassert solution(\"\"\"\\\nhoose\nhose\nnose\nnoises\nnoise\n\"\"\") == \"hoose, noise\"\nassert solution(\"\"\"\\\nhose\nhoose\nnoises\nnoise\n\"\"\") == \"hoose, noise\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"a\\n\") == \"\"\nassert solution(\"a\\nb\") == \"\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\nhoose\nhose\nnose\nnoises\nnoise''') == 'hoose\\nmoose\\nnoise'\nassert solution('''4\nhose\nhoose\noose\nmoose''') == 'hoose\\nnoise'\nassert solution('''1\na''') == 'NO TYPOS'\nassert solution('''3\na\nb\nc''') == 'NO TYPOS'\nassert solution('''4\na\nb\nc\nd''') == 'a\\nb\\nc\\nd'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\nhose\nhoose\noose\nmoose''') == 'hoose\\nmoose'\nassert solution('''2\nhose\nhoose\nmoose\nnoise''') == 'hoose\\nnoise'\nassert solution('''2\nhose\nhoose\nmoose\nnoise''') == 'hoose\\nnoise'\nassert solution('''2\nhose\nhoose\nmoose\nnoise''') == 'hoose\\nnoise'\nassert solution('''2\nhose\nhoose\nmoose\nnoise''') == 'hoose\\nnoise'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\nhoose\nhose\nnose\nnoises\nnoise''') == 'hoose'\nassert solution('''4\nhose\nhoose\noose\nmoose\n''') == 'hoose'\nassert solution('''4\nhoose\nhose\noose\nmoose''') == 'hoose'\nassert solution('''4\nhose\nhoose\noose\nmoose''') == 'hoose'\nassert solution('''4\nhose\nhoose\noose\nmoose''') == 'hoose'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hello') == 'NO TYPOS'\nassert solution('hose') == 'hoose'\nassert solution('noise') == 'noise'\nassert solution('noises') == 'noises'\nassert solution('noises') == 'NO TYPOS'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\nhoose\nhose\nnose\nnoises\nnoise''') == \"hoose\\nnoises\\nnoise\\n\"\nassert solution('''4\nhose\nhoose\noose\nmoose''') == \"hoose\\nmoose\"\nassert solution('''4\nhose\nhose\noose\nmoose''') == \"hose\\nnoise\\n\"\nassert solution('''5\nhoose\nhose\nnoises\nnoise\nnoise''') == \"hoose\\nnoises\\nnoise\\n\"\nassert solution('''5\nhose\nhose\nnose\nnoises\nnoise''') == \"hoose\\nnoise\\nnoises\\n\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"hose\\nhoose\\nhose\\nhose\\n\") == 'hoose'\nassert solution(\"noise\\nnoises\\nnoises\\nnoises\\n\") == 'noise'\nassert solution(\"hoose\\nhose\\nhose\\nhose\\n\") == 'hoose'\nassert solution(\"noises\\nnoise\\nnoise\\nnoises\\n\") == 'noises'\nassert solution(\"noise\\nnoise\\nnoise\\nnoise\\n\") == 'noise'\n"
    },
    {
        "number": 3198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\nhoose\nhose\nnose\nnoises\nnoise\n''') == 'hoose\\nnoises\\nnoise\\n'\nassert solution('''\n4\nhose\nhoose\noose\nmoose\n''') == 'hoose\\nmoose\\n'\nassert solution('''\n5\nhose\nhoose\noose\nnoises\nnoise\n''') == 'noise\\n'\n'''"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 3\") == \"0\\n16\\n8\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2\\n2\\n5'\nassert solution('2 3\\n4') == '0\\n16\\n8'\nassert solution('1 2\\n2 3') == '2\\n2\\n5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 3\") == \"16\"\nassert solution(\"4\") == \"8\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"1 1\n3\n\"\"\") == \"\"\"\n2\n2\n5\n\"\"\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '2\\n2\\n5'\nassert solution('2 3\\n4') == '0\\n16\\n8'\nassert solution('3 4\\n3') == '0\\n0\\n0'\nassert solution('3 4\\n100') == '4\\n4\\n4'\nassert solution('3 4\\n30000000') == '0\\n0\\n0'\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3', '4') == '0 2 8'\n\"\"\"\n\na, b = map(int, stdin.split())\nL = int(stdin)"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 3\n4\n\"\"\"\n) == \"\"\"\n0\n16\n8\n\"\"\"\nassert solution(\n\"\"\"\n1 1\n3\n\"\"\"\n) == \"\"\"\n2\n2\n5\n\"\"\"\nassert solution(\n\"\"\"\n2 2\n4\n\"\"\"\n) == \"\"\"\n0\n8\n0\n\"\"\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '2\\n2\\n5'\nassert solution('2 3') == '0\\n16\\n8'\nassert solution('3 4') == '0\\n4\\n0'"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n50 45 45''') == '68.52419365'\nassert solution('''2\n50 45 45\n60 45 45''') == '97.7843137'\nassert solution('''3\n50 45 45\n60 45 45\n50 45 45''') == '124.68421236'\nassert solution('''4\n50 45 45\n60 45 45\n50 45 45\n60 45 45''') == '183.11138813'\nassert solution('''5\n50 45 45\n60 45 45\n50 45 45\n60 45 45\n50 45 45''') == '237.45366748'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '44.72135955'\nassert solution('2') == '68.52419365'\nassert solution('3') == '65.55295117'\nassert solution('4') == '76.57538461'\nassert solution('5') == '70.82459441'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '44.72135955'\nassert solution('2') == '68.52419365'\nassert solution('3') == '136.92097954'\nassert solution('4') == '45.45454545'\nassert solution('5') == '136.92097954'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == 44.72135955\nassert solution(\"2\") == 68.52419365\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n50 45 45\n''') == '68.52419365'\nassert solution('''\n2\n50 45 45\n''') == '68.52419365'\nassert solution('''\n3\n50 45 45\n50 45 45\n''') == '69.7468316'\nassert solution('''\n4\n100 200 10 30\n100 200 10 30\n100 200 10 30\n100 200 10 30\n''') == '135.4652586'\nassert solution('''\n5\n100 200 10 30\n100 200 10 30\n100 200 10 30\n100 200 10 30\n100 200 10 30\n''') == '139.565847'\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\"\nprint(\"\\n\")\n\"\"\""
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 3 1\") == \"3\"\nassert solution(\"2 3 1 5\") == \"1\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 1 5\\n1 2\\n') == '1\\n3\\n2'\nassert solution('3 4 2 3\\n1 3 1\\n') == '1\\n1\\n0\\n2'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n1') == '1'\nassert solution('2\\n2\\n1\\n1') == '1'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1 5') == '1 3 2'\nassert solution('1 2') == '1'\nassert solution('3 4 2 3') == '1 3 2'\nassert solution('1 3 1') == '1'\nassert solution('3 2 4 1') == '1'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 3 3') == '2'\nassert solution('5\\n1 3\\n2 3') == '2'\nassert solution('1\\n3 1') == '1'\nassert solution('2\\n1 3') == '1'\nassert solution('3\\n2 2') == '0'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n'''\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3 1 5\n1 2\n''') == '1\\n3\\n2\\n'\nassert solution('''3 4 2 3\n1 3 1\n''') == '1\\n1\\n0\\n2\\n'\nassert solution('''5 1\n2 5 1 2 3 4\n''') == '1\\n3\\n2\\n4\\n5\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 2') == '1'\nassert solution('1 3\\n1 3') == '0'\nassert solution('1 4\\n1 4') == '1'\nassert solution('1 5\\n1 5') == '0'\nassert solution('2 3\\n1 3\\n1 2') == '1'\n"
    },
    {
        "number": 3201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"0\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 5\n1 1\n''') == '3'\nassert solution('''5 3\n2 2 3 2 2\n''') == '2'\nassert solution('''10 10\n2 2 3 3 2 3 3 2 3 2 3\n''') == '1'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 1') == 3\nassert solution('2 4\\n2 2 3 2') == 2\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 5\\n1 1') == '3'\nassert solution('2 3\\n2 2 3') == '2'\nassert solution('1 1\\n1') == '0'\nassert solution('4 8\\n1 1 2 2 3 3 4') == '5'\nassert solution('1 2\\n2') == '0'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2\n1 1\n''') == '3'\nassert solution('''2 1\n1 1\n''') == '2'\nassert solution('''2 1\n2 1\n''') == '2'\nassert solution('''2 5\n1 1\n''') == '3'\nassert solution('''2 5\n2 2 3 2 2\n''') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5\\n1 1\\n') == '3'\nassert solution('3 5\\n2 2 3 2 2\\n') == '2'\nassert solution('2 5\\n2 2 3 2 2\\n') == '2'\nassert solution('2 5\\n2 2 2 2 2\\n') == '1'\nassert solution('3 5\\n2 2 2 2 2\\n') == '1'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '2 5\\n1 1\\n') == '3'\nassert solution('2 5\\n2 2 3 2 2\\n') == '2'\nassert solution('1 10\\n2 2 3 2 2\\n') == '8'\nassert solution('2 5\\n1 1\\n') == '3'\nassert solution('2 3\\n2 2 3\\n') == '4'\n"
    },
    {
        "number": 3202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '3'\nassert solution('2 2 3 2 2') == '2'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n50 50') == '50'\nassert solution('2\\n0 50\\n0 50') == '25'\nassert solution('2\\n50 50\\n0 0') == '50'\nassert solution('2\\n0 0\\n50 50') == '25'\nassert solution('2\\n0 0\\n0 0') == '25'\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2\n100 100\n50 50\n\"\"\") == \"25\"\n\nassert solution(\n\"\"\"\n2\n10 10\n30 30\n\"\"\") == \"50\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '2\\n' +\n    '100 100\\n' +\n    '50 50\\n'\n) == '50'\n\"\"\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.splitlines()[-1]\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[:-1]\n\n\"\"\"\n\nimport sys\nfrom functools import partial\nfrom fractions import Fraction\n\nn = int(input())\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0\n0''') == '0'\nassert solution('''1\n100''') == '100'\nassert solution('''3\n100 100\n50 50\n50 50''') == '100'\nassert solution('''4\n100 100\n50 50\n50 50\n50 50''') == '100'\nassert solution('''5\n100 100\n50 50\n50 50\n50 50\n50 50''') == '100'\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n100 100\n50 50''') == '50'\nassert solution('''2\n0 50\n50 0''') == '25'\nassert solution('''3\n1 2 3\n50 50 50\n1 2\n50 50\n50 50''') == '100'\nassert solution('''4\n1 2 3 4\n50 50 50 50\n1 2\n50 50\n50 50\n50 50''') == '25'\nassert solution('''6\n10 10 10 10 10 10\n50 50 50 50 50 50\n1 2\n50 50\n50 50\n50 50\n50 50\n50 50''') == '75'\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2\n100 100\n50 50''') == '50'\nassert solution(\n'''2\n0 50\n50 0''') == '25'\nprint(\"all tests passed\")\n"
    },
    {
        "number": 3203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0 100\\n50 50\") == \"50\"\nassert solution(\"1\\n100 100\\n50 50\") == \"25\"\nassert solution(\"1\\n0 100\\n50 50\") == \"25\"\nassert solution(\"1\\n0 100\\n50 50\") == \"25\"\nassert solution(\"1\\n0 100\\n50 50\") == \"25\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"100\") == \"60\"\nassert solution(\"2\") == \"160\"\nassert solution(\"3\") == \"250\"\nassert solution(\"1\") == \"60\"\nassert solution(\"1002\") == \"240\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n100\\n200') == '160'\nassert solution('3\\n100\\n200\\n2010') == '250'\nassert solution('3\\n100\\n200\\n2010\\n40') == '310'\nassert solution('3\\n100\\n200\\n2010\\n40\\n3') == '310'\nassert solution('3\\n100\\n200\\n2010\\n40\\n3\\n3') == '310'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n10') == 10\nassert solution('2\\n100\\n200') == 150\nassert solution('2\\n100\\n200\\n300') == 120\nassert solution('1\\n10\\n20') == 30\nassert solution('2\\n100\\n200\\n300') == 120\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"70\"\n\"\"\""
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n100\\n200') == '160'\nassert solution('3\\n100\\n200\\n2010') == '250'\nassert solution('3\\n300\\n100\\n200\\n2010') == '250'\nassert solution('3\\n100\\n200\\n2010\\n6000') == '250'\nassert solution('4\\n100\\n200\\n1000\\n2000') == '2160'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '160'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '100'\nassert solution(stdin) == '200'\nassert solution(stdin) == '2010'\nassert solution(stdin) == '250'\nassert solution(stdin) == '280'\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n100\\n200\\n\") == \"160\"\nassert solution(\"3\\n100\\n200\\n2010\\n\") == \"250\"\nassert solution(\"10\\n100\\n200\\n300\\n4000\\n500\\n6000\\n7000\\n8000\\n9000\\n10000\\n11000\\n12000\\n13000\\n14000\\n15000\\n16000\\n17000\\n18000\\n19000\\n20000\\n25000\\n30000\\n35000\\n40000\\n45000\\n50000\\n55000\\n60000\\n65000\\n70000\\n75000\\n80000\\n90000\\n95000\\n100000\") == \"340025\"\nassert solution(\"4\\n100\\n200\\n300\\n4000\\n5000\\n6000\\n7000\\n8000\\n9000\\n10000\\n11000\\n12000\\n13000\\n14000\\n15000\\n16000\\n17000\\n18000\\n19000\\n20000\\n25000\\n30000\\n35000\\n40000\\n45000\\n50000\\n55000\\n60000\\n65000\\n70000\\n75000\\n80000\\n90000\\n95000\\n100000\") == \"340025\"\nassert solution(\"5\\n100\\n200\\n300\\n4000\\n5000\\n6000\\n7000\\n8000\\n9000\\n10000\\n11000\\n12000\\n13000\\n14000\\n15000\\n16000\\n17000\\n18000\\n19000\\n20000\\n25000\\n30000\\n35000\\n40000\\n45000\\n50000\\n55000\\n60000\\n65000\\n70000\\n75000\\n80000\\n90000\\n95000\\n100000\") == \"340025\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n0 1 1\n2 3 1\n''') == '2'\nassert solution('''5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\nassert solution('''6 3\n1 1 3\n2 1 2\n3 1 3\n4 1 1\n5 1 2\n6 1 3\n''') == '3'\nassert solution('''7 2\n1 2 4\n1 2 4\n1 2 5\n1 3 2\n1 3 3\n2 3 1\n2 4 1\n2 5 1\n2 6 1\n3 5 1\n''') == '3'\nassert solution('''8 3\n1 2 4\n1 2 4\n1 2 5\n1 3 2\n1 3 3\n2 3 1\n2 4 1\n2 5 1\n2 6 1\n3 5 1\n''') == '3'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n0 1 3\") == \"2\"\nassert solution(\"4 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n0 0 0\") == \"0\"\nassert solution(\"10 10\\n0 1 4\\n1 3 3\\n2 4 3\\n3 5 4\\n4 6 6\\n5 7 7\\n6 8 8\\n7 9 9\\n8 0 9\\n9 9 9\") == \"0\"\nassert solution(\"8 8\\n0 1 4\\n1 3 3\\n2 4 3\\n3 5 4\\n4 6 6\\n5 7 7\\n6 8 8\\n7 9 9\\n8 0 9\\n9 9 9\") == \"1\"\nassert solution(\"1 1\\n0 1 0\") == \"0\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0') == '0'\nassert solution('0 0\\n0 0') == '0'\nassert solution('0 0\\n0 0\\n0 0') == '0'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n0 1 3\\n1 2 3') == '0'\nassert solution('3 3\\n0 1 3\\n1 2 3\\n2 3 3') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2\n0 1 1\n2 3 1''') == '2'\nassert solution('''2 2\n0 1 1\n2 3 1\n1 2 3\n2 3 3\n3 4 3\n4 0 3''') == '0'\nassert solution('''2 4\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3''') == '2'\nassert solution('''4 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n4 4 3''') == '0'\nassert solution('''10 4\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n4 4 3\n4 4 3\n4 4 3\n4 4 3\n4 4 3\n4 4 3''') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\"\nassert solution(\"4 2\\n0 1 1\\n2 3 1\\n0 0 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\"\nprint(\"Passed all test cases! :)\")"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0'\n\"\"\""
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n0 1 1\n2 3 1''') == '2'\nassert solution('''5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3''') == '0'\nassert solution('''7 3\n0 1 2\n0 2 3\n1 3 4\n1 3 5\n1 4 6\n2 5 7\n3 6 8\n4 7 9\n5 6 7\n6 7 8\n7 8 9''') == '3'\nassert solution('''6 6\n0 1 2\n0 2 3\n1 3 4\n1 3 5\n1 4 6\n1 5 7\n2 5 8\n2 6 7\n3 5 8\n3 6 7\n4 5 8\n5 6 7\n6 7 8''') == '2'\nassert solution('''9 9\n0 1 2\n0 2 3\n0 3 4\n0 4 5\n0 5 6\n0 6 7\n0 7 8\n0 8 9\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n2 3 4\n2 4 5\n2 5 6\n2 6 7\n2 7 8\n2 8 9\n3 4 5\n3 5 6\n3 6 7\n3 7 8\n3 8 9\n4 5 6\n4 5 7\n4 5 8\n4 5 9\n4 6 7\n4 6 8\n4 6 9\n4 7 8\n4 7 9\n4 8 9\n5 6 7\n5 6 8\n5 6 9\n5 7 8\n5 7 9\n5 8 9\n6 7 8\n6 7 9\n6 8 9\n7 8 9''') == '0'\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3\\n') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('4 2\\n3 3 2 2\\n6 3\\n') == '-1'\nassert solution('3 3\\n3 3 2 1\\n3 3 3\\n') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('3 3\\n3 3 2 2\\n3 3 3\\n') == '-1'\nassert solution('3 3\\n3 3 2 2\\n6 3\\n') == '-1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nSince Pippa can build only one building per line, we can use two-pointers to build two stacks. At each step, we compare the sum of blocks of stack-1 and stack-2 to the required target height, and keep the required block for each stack.\n\nIn the second pass, we compare the sum of blocks of stack-1 and stack-2 to the required target height, keeping the required block for each stack.\n\"\"\"\n\nN,S = map(int, stdin.readline().split())\nH = list(map(int, stdin.readline().split()))\nB = list(map(int, stdin.readline().split()))\n\nH = [0]+H\nB = [0]+B"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"1 1\"\nassert solution(\"2 3\") == \"1 2\"\nassert solution(\"3 3\") == \"1 1\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"1 4\") == \"1 1\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"1 1\"\nassert solution(\"5 3\") == \"1 2\"\nassert solution(\"5 3\") == \"2 3 4\"\nassert solution(\"5 3\") == \"1 1\"\nassert solution(\"5 3\") == \"1 2\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n4 3\n3 3 2 1\n3 3 3\n''') == '1 1\\n1 2\\n2 3 4\\n'\n\nassert solution(\n'''\n4 3\n3 3 2 1\n3 3 3\n''') == '1 1\\n1 2\\n2 3 4\\n'\n\nassert solution(\n'''\n4 3\n3 3 3\n6 3\n''') == '-1\\n'\n\nassert solution(\n'''\n4 2\n3 3 2 2\n6 3\n''') == '-1\\n'\n\nassert solution(\n'''\n1 1\n1 1\n2 1\n1 2\n''') == '2\\n2\\n'"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2\\n3 3 2 1\\n3 3 3') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('2 2\\n1 1') == '1\\n1\\n'\nassert solution('3 3\\n3 3 2 1\\n3 3 3') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('5 2\\n3 3 2 2 1\\n3 3 3') == '-1\\n'\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n3 3 2 1\n3 3 3\n''') == '1 1'\n\nassert solution('''5 3\n5 3 5 5\n5 3 5 5\n''') == '1 2'\n\nassert solution('''6 2\n3 3 2 2\n6 3\n''') == '-1'\n\nassert solution('''7 3\n3 3 2 2 1 1\n3 3 3\n3 3 3\n''') == '-1'\n\nassert solution('''8 3\n3 3 2 2 1 1 1\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n''') == '-1'"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L''') == '10.0'\nassert solution('''2 3 10\n0 0 D\n10 1 L\n3 0 D\n4 1 L\n6 2 D''') == '4.0'\nassert solution('''2 3 10\n2 3 5\n1 2 L\n0 1 D\n2 1 L\n3 0 D\n4 2 L\n0 4 D\n1 3 D\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n0 4 D\n1 3 D\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L\n1 2 D\n2 3 L\n3 1 D\n0 1 D\n1 3 L\n2 1 L\n1 2 D\n0 1 D\n3 1 L"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '''10.0\n10.0\n0.0'''\n\nassert solution('''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D''') == '''10.0\n4.0\n1.0'''\n\nassert solution('''1 1 1\n0 0 D\n2 1 L\n''') == '''1.0\n1.0\n1.0'''\n\nassert solution('''7 3 10\n1 1 D\n1 2 D\n1 3 D\n1 4 D\n1 5 D\n1 6 D\n1 7 D\n''') == '''2.0\n3.0\n4.0'''\n\nassert solution('''7 3 10\n1 1 D\n1 2 D\n1 3 D\n1 4 D\n1 5 D\n1 6 D\n1 7 D\n''') == '''3.0\n4.0\n5.0'''"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0\\n10.0\\n0.0\\n'\n\nassert solution('''2 3 10\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0\\n4.0\\n1.0\\n'\n'''\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 3\n0 0 D\n10 1 L\n''') == '''10.0\n10.0\n0.0\n'''\nassert solution('''2 3 5\n0 0 D\n0 1 D\n1 0 D\n1 1 D\n2 1 L\n2 2 L\n3 2 D\n4 2 D\n''') == '''10.0\n6.0\n5.0\n'''\nassert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '''10.0\n10.0\n0.0\n'''\nassert solution('''2 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '''10.0\n4.0\n1.0\n'''\nassert solution('''2 3 10\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '''10.0\n10.0\n0.0\n'''\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L''') == '10.0\\n10.0\\n0.0\\n'\nassert solution('''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D''') == '10.0\\n4.0\\n1.0\\n'\nprint(solution('''3 3 3\n2 2 L\n1 1 D\n1 1 L\n1 3 D'''))"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0'\nassert solution('''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0'\nassert solution('''4 3 9\n1 1 D\n2 2 D\n4 1 D\n2 2 L\n''') == '5.0'\nassert solution('''3 3 7\n1 1 D\n1 2 D\n2 1 D\n2 2 L\n''') == '7.0'\nassert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"2 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\"\nassert solution(\"3 4 6\\n1 0 L\\n2 0 D\\n3 0 D\\n4 1 L\\n5 2 D\\n\") == \"9.0\\n3.0\\n1.0\\n\"\nassert solution(\"3 4 6\\n1 0 D\\n2 0 L\\n3 0 D\\n4 1 D\\n5 2 L\\n\") == \"9.0\\n3.0\\n1.0\\n\"\nassert solution(\"3 4 6\\n1 0 D\\n2 0 L\\n3 0 D\\n4 1 D\\n5 2 L\\n6 3 D\\n\") == \"9.0\\n3.0\\n1.0\\n\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n'''"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\nbe\nour\nrum\nwill\ndead\nhook\nship\nblood\nsable\navenge\nparrot\n\"\"\") == \"\"\"\nwe\nwill\navenge\nour\ndead\nhook\nship\nblood\nsable\navenge\nparrot\n\"\"\"\n\nassert solution(\n\"\"\"\nwrr\nbzax\nrrr\nblbl\nblkd\nblub\nbzpdl\nztbx\nbzpdl\nbzax\nbzax\nrrr\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\nbzax\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\nassert solution(\"zd qpzwb zkd\") == \"Impossible\"\nassert solution(\"iuiu ouij oujqg\") == \"Impossible\"\nassert solution(\"pxcmxmpj nyjxm\") == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\nassert solution('jkd') == 'Impossible'\nassert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('jkd') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\nbe will can\nour rum dead\nhook ship blood\nsable avenge\nparrot captain\n'''\n) == '''\nwe will avenge our dead parrot arr\n'''\n\nassert solution(\n'''\nabc"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"wl jkd\") == \"Impossible\"\nassert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"boz hoxk\") == \"Impossible\"\nassert solution(\"qgfkxafrycq ygc fqxqkpfnrxkcqkgfqkxafrycq\") == \"Impossible\"\nassert solution(\"tlkxcvbng yctb gcxbtkgcxv bctgxkvgcxktgcxvctgxcv bctgxkvgcxktgcxvctgxct\") == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\n    \"wl jkd\") == \"Impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('wl jkd') == 'Impossible'\nassert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\nassert solution('wl jkd') == 'Impossible'\nassert solution('wl jkd') == 'Impossible'\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n'''\n) == '68.3'\n\nassert solution(\n    '''\nLugano Rosso\n1\nLugano Rosso 15 51 57 30\nLugano Rosso 45 57 57 30\nRosso Lugano 15 57 57 30\n'''\n) == '15.6'\n\nassert solution(\n    '''\nWroclaw Wroclaw\n1\nWroclaw Wroclaw 59 57 59 30\nWroclaw Wroclaw 59 57 59 30\nWroclaw Wroclaw 59 57 59 30\n'''\n) == '59.2'\n\nassert solution(\n    '''\nUmea Umea\n1\nUmea Umea 46 55 50 60\nUmea Umea 46 55 50 60\nUmea Umea 46 55 50 60\n'''\n) == '46.5'\n\nassert solution(\n    '''\nPrague Prague\n1\nPrague Prague 30 15 30 30\nPrague Prague 30 15 30 30\nPrague Prague 30 15 30 30\n'''\n) == '30.0'"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"Hamburg Bremen\", 1) == \"68.3\"\n\"\"\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(solution.readlines(__file__)) == '68.3'"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"68.3\"\nassert solution(stdin.replace('\\n','')) == \"68.3\"\nassert solution(stdin.replace('\\n','')) == \"IMPOSSIBLE\"\n\"\"\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"Hamburg Bremen\") == \"68.3\"\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\"\nassert solution(\"Hamburg Rotterdam\") == \"IMPOSSIBLE\"\nassert solution(\"Rotterdam Utrecht\") == \"IMPOSSIBLE\"\nassert solution(\"Rotterdam Utrecht 15 22 10 5\") == \"68.3\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Hamburg Bremen') == '68.3'\nassert solution('Amsterdam Rotterdam') == 'IMPOSSIBLE'\nassert solution('Hamburg Munich') == '69.5'\nassert solution('Hamburg Berlin') == '69.5'\nassert solution('Hamburg Berlin 14 22 5 10') == '68.3'\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"Hamburg Bremen\") == \"68.3\"\nassert solution(\"Amsterdam Utrecht\") == \"IMPOSSIBLE\"\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\"\nassert solution(\"Hamburg Rotterdam\") == \"68.3\"\nassert solution(\"Bremen Frankfurt\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\nHamburg Bremen\n''') == '68.3'\nassert solution(\n'''\nAmsterdam Utrecht\n''') == 'IMPOSSIBLE'\nassert solution(\n'''\n''') == 'IMPOSSIBLE'\nassert solution(\n'''\nHamburg Berlin\n''') == 'IMPOSSIBLE'\nassert solution(\n'''\nHamburg Hamburg\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3'\nassert solution('2\\n*.*\\n...\\n*.*\\n') == '4'\nassert solution('2\\n*.*\\n*.*\\n') == '4'\nassert solution('3\\n*.*.*\\n*.*.*\\n*.*.*\\n') == '1'\nassert solution('3\\n*.*.*\\n*.*.*\\n*.*.*\\n*.*.*\\n') == '2'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('*') == ''\nassert solution('*-') == '1'\nassert solution('*-*') == '2'\nassert solution('*-*-*') == '3'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"*-*.*\") == \"3\"\nassert solution(\"|.|.|\") == \"3\"\nassert solution(\"*.*-*.*\") == \"3\"\nassert solution(\"*-.*.*\") == \"3\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'\nassert solution('2\\n*.*\\n...\\n*.*\\n') == '4'\nassert solution('3\\n*.*\\n|.|.\\n*.*-*\\n|...|\\n*.*.*\\n') == '5'\nassert solution('4\\n*.*\\n|.|.\\n*.*-*\\n|...|\\n*.*.*\\n') == '8'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\") == \"3\"\nassert solution(\"4\\n*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"4\"\n\"\"\""
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('*-*.*') == '3'\nassert solution('|.|.|') == '3'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\nprint(f\"Correctly implemented: {solution(stdin) == expected_output}\")\n\n\"\"\"\n\n\"\"\"\n\"\"\""
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n*.*\\n...\\n*.*.*') == '3'\nassert solution('2\\n*.|.\\n*.*\\n*.*\\n*.*\\n') == '4'\nassert solution('3\\n*.*\\n*.*\\n.|.\\n*.|.\\n.|.\\n') == '1'\nassert solution('3\\n*.*\\n*.*\\n.|.\\n*.|.\\n*.|.\\n') == '2'\nassert solution('3\\n*.*\\n*.*\\n.|.\\n*.|.\\n*.|.\\n') == '3'\n"
    },
    {
        "number": 3210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n8\n12210020\n\"\"\"\n) == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"22210020\") == \"impossible\"\nassert solution(\"22210020\") == \"impossible\"\nassert solution(\"12210020\") == \"4\"\nassert solution(\"1221002222\") == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"8\n12210020\n\"\"\") == \"4\"\n\nassert solution(\n    \"\"\"8\n12210020\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12210020') == '4'\nassert solution('11100') == 'impossible'\nassert solution('1101') == 'impossible'\nassert solution('1100') == 'impossible'\nassert solution('001') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '8\\n'\n    '12210020\\n'\n    ) == '4'\nassert solution(\n    '4\\n'\n    '1111\\n'\n    ) == 'impossible'\nassert solution(\n    '6\\n'\n    '12210020\\n'\n    ) == 'impossible'\nassert solution(\n    '8\\n'\n    '12210020\\n'\n    ) == '4'\nassert solution(\n    '8\\n'\n    '12210020\\n'\n    ) == '4'\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n12210020''') == \"4\"\nassert solution('''4\n1111''') == \"impossible\"\nassert solution('''2\n01''') == \"impossible\"\nassert solution('''2\n00''') == \"impossible\"\nassert solution('''2\n11''') == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8') == 4\nassert solution('12210020') == 4\nassert solution('1111') == 'impossible'\nassert solution('11200020') == 4\nassert solution('12210020') == 4\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'impossible'\n\n'''\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"12210020\") == \"4\"\nassert solution(\"1111\") == \"impossible\"\nassert solution(\"111221\") == \"3\"\nassert solution(\"1221\") == \"impossible\"\nassert solution(\"211\") == \"impossible\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''0 0 999\n500 500 999\n500 500 200\n500 500 0\n''') == 'Bill enters at (0.00, 999.99) and leaves at (999.99, 800.00).'\nassert solution('''2\n500 500 999\n500 500 200\n500 500 0\n''') == 'Bill enters at (0.00, 999.99) and leaves at (999.99, 800.00).'\nassert solution('''2\n500 500 999\n500 500 200\n500 500 0\n''') == 'Bill enters at (0.00, 999.99) and leaves at (999.99, 800.00).'\nassert solution('''2\n250 250 300\n750 750 300\n250 750 300\n750 750 300\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill will be bitten.'\nassert solution('''\n2\n700 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''\n2\n700 500 499\n500 750 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''\n2\n700 500 499\n500 750 499\n500 750 499\n''') == 'Bill will be bitten.'\n'''\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5\n500 500 499\n0 0 999\n1000 1000 200\n750 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n250"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill will be bitten.'\nassert solution('''\n1\n0 0 2\n100 100 100\n''') == 'Bill enters at (2.00, 100.00) and leaves at (100.00, 100.00).'\n'''\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill enters at (250.00, 800.00) and leaves at (750.00, 300.00).'\nassert solution('''250 250 300\n250 750 300\n750 750 300\n250 750 300\n750 750 300\n''') == 'Bill enters at (250.00, 800.00) and leaves at (750.00, 300.00).'\nassert solution('''1\n1 1 2\n0 0 2\n1 1 1\n2 2 2\n2 0 2\n1 1 1\n1 2 1\n1 1 2\n2 1 1\n''') == 'Bill enters at (0.00, 100.00) and leaves at (100.00, 50.00).'\nassert solution('''1\n1 1 2\n0 0 2\n1 1 1\n2 2 2\n2 0 2\n1 1 1\n1 2 1\n1 1 2\n2 1 1\n''') == 'Bill enters at (0.00, 100.00) and leaves at (100.00, 50.00).'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution(\n'''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill will be bitten.'\n\nassert solution(\n'''\n0\n0\n0\n0\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution(\n'''\n0\n0\n0\n0\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution(\n'''\n1\n1 1 1\n2 2 2\n2 2 2\n2 2 2\n''') == 'Bill enters at (0.50, 1000.00) and leaves at (1000.00, 800.00).'\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''1\n1000 1000 1000\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 1000.00).'\n'''\n"
    },
    {
        "number": 3212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''500 500 499\n0 0 999\n1000 1000 200\n250 250 300\n750 750 300\n250 750 300'''\n    ) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution(\n'''3\n500 500 499\n0 0 999\n1000 1000 200\n250 250 300'''\n    ) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution(\n'''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300'''\n    ) == 'Bill will be bitten.'\nassert solution(\n'''50 50 40\n50 40 40\n50 50 40\n50 50 40\n50 50 40'''\n    ) == 'Bill will be bitten.'\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == input(\"\")\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 3\\n++xx+x++\\n') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx\\n') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxx') == 'xxoooooo'\nassert solution('8 4\\n++xx+x++') == '++xx+o++'\nassert solution('8 4\\nxxxxxxxx') == 'xxoooooo'\nassert solution('8 4\\nxxxxxxxx') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 3\\n++xx+x++\\n') == '++xx+o++'\n\"\"\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 3\n++xx+x++''') == \"++xx+o++\"\nassert solution('''8 3\nxxxxxxxx''') == \"xxoooooo\"\nassert solution('''12 15\nx--xxx--x--xx--x--xx--x--xxx-x-x--xx--x-xxx-x-x-x--xxx-x--xx--x-x--xx--x--xxx-x-x--xx--x--xxx-x-x-x--x--xxx-x-x--x-x-x-x-x-x--x--xxx-x-x-x--x-x-x-x-x--x--xxx-x-x-x--x-x-x--x-x-x-x-x-x--x--xxx--x--xx--x--xx--x--x--xxx-x-x-x--xx--x--xxx-x-x-x--x--xxx--x--xx--x--xxx--x--xx--x--xxx--x--x--xxx--x--xx--x--xx--x--x--xxx--x--xx--x--x--xxx--x--x--xxx--x--xx--x--x--xxx--x--x--xxx--x--xx--x--x--xxx--x--xx--x--x--xxx--x--x--xxx--x--xx--x--x--xxx--x--x--xxx--x--xx--x--x--xxx--x--x--xxx--x--xx--x--x--xxx--x--x--xxx--x--xx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x--x--xxx--x"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''8 3\n++xx+x++'''\n    ) == '++xx+o++'\n\nassert solution(\n'''8 3\nxxxxxxxx'''\n    ) == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n8 3\n++xx+x++\n''') == '++xx+o++'\nassert solution('''\\\n5 2\nxxxxxxxx\n''') == 'xoooooo'\nassert solution('''\\\n8 5\n++xx+x++\n''') == '++xx+o++'\nassert solution('''\\\n7 5\nxxxxxxxx\n''') == '++xxx+o++'\nassert solution('''\\\n10 5\n++xx+x++\n''') == '++xx+x+o++'\n"
    },
    {
        "number": 3213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''The fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\"''') == '''when: hen\nhen: he when\nit: it\nis: is\noclock: clock\nthe: he\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('12345') == ''\nassert solution('I am a lazy fox') == ''\nassert solution('The fox said, \"When?\"') == ''\nassert solution('The fox said, \"When?\"\\nNot till 12 o'clock\\n\"') == ''\nassert solution('The fox said, \"When?\"\\nNot till 12 o'clock\\n\"') == ''\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"word\") == \"\"\nassert solution(\"Hello World!\") == \"Hello World!\"\nassert solution(\"This is a test.\") == \"this: a test.\"\nassert solution(\"Don't you know how this works?\") == \"dont: know how this works?\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Better Documents Inc. wants to add Typo Checking in to the next generation of word processors.\") == \"close: lose he: the in: inc is inc: in is: in lose: close lost the: he the: hen hen: he when: it will: till: will\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"clock: oclock he: hen the hen: he when: it will: till: will\"\nassert solution(\"The fox said, \\\"When?\\\"\\nNot till 12 o'clock\\n\\\"That clock is stopped, it will never strike.\\\"\") == \"clock: oclock he: hen the hen: he when: it will: till: will\"\nassert solution(\"The fox said, \\\"When?\\\"\\nNot till 12 o'clock\\n\\\"That clock is stopped, it will never strike.\\\"\\n\") == \"clock: oclock he: hen the hen: he when: it will: till: will\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''Lost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n***\n''') == '''close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('You are running out of rubber!') == 'rubber: out'\nassert solution('she said, \"When?\"') == 'hen: he'\nassert solution('she said, \"When?\"') == 'hen: he'\nassert solution('She said, \"When?\"') == 'hen: he'\nassert solution('She said, \"When?\"') == 'hen: he'\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''He was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the house.\nHe was not pleased to see the look of the"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('\\n\\n') == ''\nassert solution('\\n\\n\\n') == ''\nassert solution('\\n\\n\\n\\n') == ''\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''Lost is Close to Lose\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.''') == \\\n    '''close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"The fox said, \\\"When?\\\"\") == \"\"\nassert solution(\"The fox said, \\\"Not till 12 o'clock\\\", replied the hen.\") == \"clock: oclock\"\nassert solution(\"The fox said, \\\"That clock is stopped, it will never strike,\\\" he said.\") == \"clock: oclock\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('1\\n2\\n1 2') == '1'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '3'\nassert solution('1\\n2\\n3\\n4\\n5') == '3'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n1 2 7 3 8 9 4 5 10 6\n''') == '1'\nassert solution('''10\n3 8 1 9 4 5 2 7 10 6\n''') == '2'\nassert solution('''15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == '1'\nassert solution('''15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == '2'\nassert solution('''15\n3 2 1 4 5 6 7 8 9 10 11 12 13 14 15\n''') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('10\\n1 2 7 3 8 9 4 5 10 6\\n') == '1'\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6\\n') == '2'\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6\\n') == '2'\nassert solution('1\\n1\\n') == '0'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n1 2 7 3 8 9 4 5 10 6''') == '1'\nassert solution('''10\n3 8 1 9 4 5 2 7 10 6''') == '2'\nassert solution('''1000\n123 456 789 1098 76 543 210 246''') == '9'\nassert solution('''100000\n123 456 789 1098 76 543 210 246''') == '27'\nassert solution('''2\n9 1 7''') == '2'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open('test.txt').read()) == '1\\n'\nassert solution(open('test2.txt').read()) == '2\\n'\nassert solution(open('test3.txt').read()) == '0\\n'\nassert solution(open('test4.txt').read()) == '3\\n'\nassert solution(open('test5.txt').read()) == '3\\n'\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n-----Explanation-----\nThe only time this is possible is if the deck is split into two, and interleaved. Thus there are two distinct orderings, each of size $n/2$ ($1 \\le n/2 \\le n$). We then increment the number of shuffles by $2$ because we have an extra shuffle to complete the cycle.\n\nSince shuffles must be completed with the same number of increments as shuffles, the order of the inputs does not matter. Thus we can simply sum all of the number of shuffles.\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 2\") == \"1\"\nassert solution(\"5\\n5 1 2 3 4\") == \"2\"\nassert solution(\"10\\n10 1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"10\\n7 1 2 3 4 5 6 8 9 10\") == \"3\"\nassert solution(\"10\\n7 1 2 3 4 5 6 9 10\") == \"3\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\") == \"0\"\nassert solution(\"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\") == \"2\"\nassert solution(\"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\") == \"3\"\nassert solution(\"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\") == \"4\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n10\n1 2 7 3 8 9 4 5 10 6\n''') == '1'\n\nassert solution(\n'''\n10\n3 8 1 9 4 5 2 7 10 6\n''') == '2'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(solution.read()) == \"1/7\"\nassert solution(solution.read()) == \"5/3\"\nassert solution(solution.read()) == \"5/3\"\nassert solution(solution.read()) == \"1/7\"\nassert solution(solution.read()) == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"$0.142857$ $6$\") == \"1/7\"\nassert solution(\"$0.142857$ $0$\") == \"0\"\nassert solution(\"$0.142857$ 1\") == \"1/14\"\nassert solution(\"$0.142857$ 2\") == \"1/14\"\nassert solution(\"$0.142857$ 3\") == \"1/14\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('$0.142857$ $6$') == '1/7'\nassert solution('$1.6 1$') == '5/3'\nassert solution('$1.6 2$') == '5/6'\nassert solution('$1.6 0$') == '5/6'\nassert solution('$1.6 11$') == '5/11'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('123') == None\nassert solution('0.123') == None\nassert solution('1.123') == None\nassert solution('123') == None\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('0.142857 0') == '0/1'\nassert solution('0.0123 0') == '0/1'\nassert solution('0. 0 1') == '0/1'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0.142857 6\n''') == '1/7'\nassert solution('''1.6 1\n''') == '5/3'"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('1.2 1') == '2/1'\nassert solution('0.1 1') == '0/1'\nassert solution('2.1 1') == '2/1'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('1.0 2') == '1/2'\nassert solution('0.5 0') == '0/1'\nassert solution('1.1 1') == '1/1'\n"
    },
    {
        "number": 3216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == solution(input(\"\"))\nassert solution(input(\"0.142857 0 6\")) == '1/7'\nassert solution(input(\"1.6 1\")) == '5/3'\nassert solution(input(\"-1.6 1\")) == '-5/3'\nassert solution(input(\"1.6 3\")) == '5/3'\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0 0 0\n0 0 1\n''') == '6'\nassert solution('''\n2\n0 0 0\n0 0 1\n''') == '10'\nassert solution('''\n3\n0 0 0\n0 0 1\n0 0 2\n''') == '14'\n'''\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\") == \"6\"\nassert solution(\"0 0 1\") == \"10\"\nassert solution(\"1 0 0\") == \"6\"\nassert solution(\"1 0 1\") == \"10\"\nassert solution(\"2 0 0\") == \"6\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n0 0 0') == '6'\nassert solution('2\\n0 0 0\\n0 0 1') == '10'\nprint(\"Successful Test Case\")\nTest Case 2\nsolution('2\\n0 0 0\\n0 0 1')\nassert solution('3\\n0 0 0\\n0 0 1\\n0 0 2') == '7'\nprint(\"Successful Test Case\")\nTest Case 3\nsolution('3\\n0 0 0\\n0 0 1\\n0 0 2')\nassert solution('4\\n0 0 0\\n0 0 1\\n0 0 2\\n0 0 3') == '8'\nprint(\"Successful Test Case\")\nTest Case 4\nsolution('4\\n0 0 0\\n0 0 1\\n0 0 2\\n0 0 3')\nassert solution('5\\n0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 0 4') == '7'\nprint(\"Successful Test Case\")\nTest Case 5\nsolution('5\\n0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 0 4')\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\\n0 0 0\\n0 0 1\") == \"6\"\nassert solution(\"0\\n0 0 0\\n0 0 1\") == \"10\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n0 0 1') == '6'\nassert solution('1\\n0 0 0') == '6'\nassert solution('2\\n0 0 0\\n0 0 1') == '10'\nprint('Test passed')\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\\n0 0 0\\n0 0 1\\n\") == 6\nassert solution(\"1\\n0 0 0\\n0 0 1\\n\") == 10\nassert solution(\"2\\n0 0 0\\n0 0 1\\n0 1 1\\n\") == 16\nassert solution(\"3\\n0 0 0\\n0 0 1\\n0 1 1\\n1 0 1\\n\") == 22\nassert solution(\"4\\n0 0 0\\n0 0 1\\n0 1 1\\n1 0 1\\n1 0 2\\n\") == 28\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n0 0 0''') == '6'\nassert solution('''2\n0 0 0\n0 0 1''') == '10'\nassert solution('''3\n0 0 0\n0 0 1\n0 0 2''') == '12'\nassert solution('''4\n0 0 0\n0 0 1\n0 0 2\n0 0 3''') == '14'\nassert solution('''5\n0 0 0\n0 0 1\n0 0 2\n0 0 3\n0 0 4''') == '16'\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"0 0 0\\n0 0 1\") == \"6\"\nassert solution(\"1\\n0 0 0\") == \"6\"\nassert solution(\"2\\n0 0 0\\n0 0 1\") == \"10\"\nassert solution(\"1\\n0 0 0\\n0 0 1\") == \"10\"\nassert solution(\"2\\n0 0 0\\n0 0 1\") == \"10\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''10\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''14\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n-1 -1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 -1"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '2'\n\nprint(solution('''\n9\n-1 2 3 4 5 6 7 8 9\n-1 2 3 4 5 6 7 8 9\n-1 2 3 4 5 6 7 8 9\n-1 2 3 4 5 6 7 8 9\n-1 2 3 4 5 6 7 8 9\n-1 2 3 4 5 6 7 8 9\n-1 2 3 4 5 6 7 8 9\n-1 2 3 4 5 6 7 8 9\n-1 2 3 4 5 6 7 8 9\n'''))\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n-1 2 -1\n2 2\n1 -1 1\n\"\"\") == '1'\nassert solution(\"\"\"7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n\"\"\") == '1'\nassert solution(\"\"\"6\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n\"\"\") == '2'\nassert solution(\"\"\"15\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 4 4 3 3 2\n1 -"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == \"1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\") == \"1\"\nassert solution(\"1\\n0\\n\") == \"0\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '2'\nassert solution('''\n1\n-1 -1 -1\n''') == '1'\nassert solution('''\n1\n1 1 1\n''') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '2'\nassert solution('9\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n0 2 3 -1 4 4 2') == '2'\nassert solution('3\\n-1 4 -1\\n-1 3 -1\\n-1 4 -1') == '0'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n0 2 3 -1 4 4 2') == '0'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    input_string) == expected_output\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n1\\n-1\\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''\n5\n1 2 -1\n2 2\n1 -1 1\n3 2\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '5'\nassert solution('''\n10\n-1 2 -1\n2 2\n1 -1 1\n3 2\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n-1 1 -1 -1 4 2 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '8'\nassert solution('''\n4\n-1 1 0 -1\n-1 -1 -1 -1\n1 1 1 1\n1 -1 -1 -1\n''') == '4'\n"
    },
    {
        "number": 3218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 0\nassert solution('3') == 1\nassert solution('2') == 1\nassert solution('7') == 1\nassert solution('10') == 2\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('101') == 2\nassert solution('00') == 2\nassert solution('11') == 2\nassert solution('010') == 3\nassert solution
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1001') == 3\nassert solution('1111') == 1\n\"\"\""
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10001') == 3\nassert solution('0') == 1\nassert solution('11111') == 4\nassert solution('100011111') == 7\nassert solution('111100001111') == 1\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('011110100') == '4'\nassert solution('1111') == '2'\nassert solution('0110111001011011001101101110000010100101011100010') == '3'\nassert solution('0110111001011011001101101110000010100101011100010') == '3'\nassert solution('0110111001011011001101101110000010100101011100010') == '3'\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\nassert solution('1101') == '2'\nassert solution('1110') == '4'\nassert solution('11001') == '3'\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1111\") == \"1\"\nassert solution(\"10010001\") == \"1\"\nassert solution(\"1000000001\") == \"1\"\nassert solution(\"10000000010\") == \"2\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''11001011\n''') == '7'\nassert solution('''1111\n''') == '1'\nassert solution('''1''') == '1'\nassert solution('''111''') == '3'\nassert solution('''1111''') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1010\") == \"3\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1001') == 3\nassert solution('1101') == 3\nassert solution('101') == 2\nassert solution('0') == 1\n\"\"\""
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\") == \"LLRLR\"\nassert solution(\"1\\n1\") == \"L\"\nassert solution(\"2\\n2\") == \"R\"\nassert solution(\"1\\n2\") == \"\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1 1') == 'LLL'\nassert solution('3\\n2 2 2 1') == 'LLRLR'\nassert solution('2\\n1 1') == 'L'\nassert solution('2\\n2 1') == 'R'\nassert solution('5\\n1 2 2 1 2') == 'LLRLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\nassert solution('1') == 'L'\nassert solution('2') == 'L'\nassert solution('3') == 'LL'\nassert solution('4') == 'LL'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == 'LLL'\nassert solution('2 2 2 1 2') == 'LLRLR'\nassert solution('3 3 3 1 2') == 'LLLRR'\nassert solution('4 4 4 1 2 2') == 'LLLRRR'\nassert solution('5 5 5 1 2 2 1') == 'LLRLRRRLL'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1') == 'LLL'\nassert solution('2\\n1 2\\n2 1') == 'LLRLR'\nassert solution('2\\n1 2\\n2 2') == 'LLRRLL'\nassert solution('4\\n2 2 3 2\\n2 2 2 2') == 'LLRLLRR'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2') == 'LLRRLLRRLLRRRRLLRLLRLLRRLLRLRRRRRRL'\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 1 1\n''') == 'LLL'\nassert solution('''5\n1 2 2 1 2\n''') == 'LLRLR'\nassert solution('''9\n1 2 2 1 2 1 2 1 2\n''') == 'LLRLR'\nassert solution('''27\n3 2 2 3 2 1 3 3 2 3 2 1 3 2 1 1 3 3 3 3 2 1 3 3 2 1 3 3 2 1 3 2 1 3 2 1 3 2 3 3 1 3 2 1 3 2 3 3 2 1 3 2 1 1 3 3 2 1 3 2 3 2 3 2 3 2 1 3 2 1 1 3 3 2 1 3 2 2 3 3 2 1 3 2 3 2 1 3 3 2 1 3 2 3 2 3 2 1 3 2 1 3 2 1 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 1 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 1 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 1 3 2 1 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2 1 3 2"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"LLL\"\nassert solution(\"2 2 2 1 2\") == \"LLRLR\"\nassert solution(\"3 2 1\") == \"LL\"\nassert solution(\"4 2 2 1\") == \"LLR\"\nassert solution(\"5 2 1\") == \"RL\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 3\\n2 1\") == \"LLL\"\nassert solution(\"2\\n2 3\\n1 1\") == \"LLR\"\nassert solution(\"3\\n1 1 3\\n3 2 3\\n2 1\") == \"LLRR\"\nassert solution(\"3\\n1 2 3\\n3 2 1\\n2 1\") == \"LLRR\"\nassert solution(\"3\\n1 1 3\\n3 2 3\\n1 2\") == \"LLRL\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4 3') == 'Poor girl'\nassert solution('5 6 7') == '25000000000021'\nassert solution('5 6 7') == '25000000000021'\nassert solution('5 6 7') == '25000000000021'\nassert solution('3 3 7') == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == 'Poor girl'\nassert solution('6\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1000000') == 'Poor girl'\nassert solution('2 3 2000000') == 'Poor girl'\nassert solution('3 4 3000000') == 'Poor girl'\nassert solution('4 5 4000000') == 'Poor girl'\nassert solution('5 6 5000000') == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"Poor girl\"\nassert solution(\"1\\n6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == \"25000000000021\"\nassert solution(\"1\\n7 6 8\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n7 1 7000000\") == \"Poor girl\"\nassert solution(\"1\\n1 1 1\\n2 2 1\\n3 3 1\") == \"Poor girl\"\nassert solution(\"1\\n5 2 1\\n2 2 1\\n3 3 1\") == \"Poor girl\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n\"\"\"\n) == \"Poor girl\"\n\nassert solution(\n\"\"\"\n8 5 6\n1 2 1000000\n2 3 3000000\n3 4 4000000\n4 5 5000000\n5 6 6000000\n6 7 7000000\n7 1 7000000\n\"\"\"\n) == \"Poor girl\"\n\nassert solution(\n\"\"\"\n8 7 8\n1 2 1\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 1 7\n\"\"\"\n) == \"Poor girl\"\n\nassert solution(\n\"\"\"\n5 8 9\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 8 7000000\n8 1 8000000\n\"\"\"\n) == \"Poor girl\"\n\nassert solution(\n\"\"\"\n5 4 7\n1 2 1\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 1 7\n\"\"\"\n) == \"Poor girl\""
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\nassert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution('''9 9 19\n1 2 1000\n2 3 1000\n3 4 1000\n4 5 1000\n5 6 1000\n6 7 1000\n7 8 1000\n8 9 1000''') == 'Poor girl'\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\n'''\n"
    },
    {
        "number": 3221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 7 10''') == 'Poor girl'\nassert solution('''6 6 7''') == '25000000000021'\nassert solution('''6 6 5''') == 'Poor girl'\nassert solution('''1 2 1000000''') == 'Poor girl'\nassert solution('''2 3 2000000''') == 'Poor girl'\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n0 1\n1 0\n2 3\n3 2''') == '2'\nassert solution('''4 4\n0 1\n1 0\n2 3\n3 2''') == 'Yeah!'\nassert solution('''8 2\n0 0\n0 2\n0 4\n1 0\n1 2\n1 4\n1 6\n2 1\n2 4\n2 6\n2 7\n3 0\n3 1\n3 2\n3 4\n3 5\n3 7\n3 8\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n5 1\n5 2\n5 3\n5 4\n5 6\n5 7\n5 8\n5 9\n5 10\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n7 11\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n8 11\n8 12\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n9 11\n9 12\n9 13\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n10 11\n10 12\n10 13\n10 14\n11 1\n11 2\n11 3\n11 4\n11 5\n11 6\n11 7\n11 8\n11 9\n11 10\n11 11\n11 12\n11 13\n11 14\n11 15\n12 1\n12 2\n12 3\n12 4\n12 5\n12 6\n12 7\n12 8\n12 9\n12 10\n12 11\n12 12\n12 13\n12 14\n12 15\n12 16\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n13 13\n13 14\n13 15\n13 16\n14 1\n14 2\n14 3\n14 4\n14 5\n14 6\n14 7\n14 8\n14 9\n14 10\n14 11\n14 12\n14 13\n14 14\n14 15\n14 16\n14 17\n15 1\n15 2\n15 3\n15 4\n15 5\n15 6\n15 7\n15 8\n15 9\n15 10\n15 11\n15 12\n15 13\n15 14\n15 15\n15 16\n15 17\n16 1\n16 2\n16 3\n16 4\n16 5\n16 6\n16 7\n16 8\n16 9\n16 10\n16 11\n16 12\n16 13\n16 14\n16 15\n16 16\n16 17\n17 1\n17 2\n17 3\n17 4\n17 5\n17 6\n17 7\n17 8\n17 9\n17 10\n17 11\n17 12\n17 13\n17 14\n17 15\n17 16\n17 17''') == '2'\nassert solution('''5 4\n0 1\n1 0\n2 3\n3 2\n3 4\n3 5\n4 2\n4 3\n4 4\n4 5\n5 2\n5 4\n5 6\n6 2\n6 3\n6 4\n6 5\n7 2\n7 3\n7 4\n7 5\n8 2\n8 3\n8 4\n8 5\n8 6\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n10 11\n10 12\n10 13\n10 14\n10 15\n11 1\n11 2\n11 3\n11 4\n11 5\n11 6\n11 7\n11 8\n11 9\n11 10\n11 11\n11 12\n11 13\n11 14\n11 15\n12 1\n12 2\n12 3\n12 4\n12 5\n12 6\n12 7\n12 8\n12 9\n12 10\n12 11\n12 12\n12 13\n12 14\n12 15\n12 16\n12 17\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n13 13\n13 14\n13 15\n13 16\n13 17\n14 1\n14 2\n14 3\n14 4\n14 5\n14 6\n14 7\n14 8\n14 9\n14 10\n14 11\n14 12\n14 13\n14 14\n14 15\n14 16\n14 17\n15 1\n15 2\n15 3\n15 4\n15 5\n15 6\n15 7\n15 8\n15 9\n15 10\n15 11\n15 12\n15 13\n15 14\n15 15\n15 16\n15 17\n16 1\n16 2\n16 3\n16 4\n16 5\n16 6\n16 7\n16 8\n16 9\n16 10\n16 11\n16 12\n16 13\n16 14\n16 15\n16 16\n16 17\n17 1\n17 2\n17 3\n17 4\n17 5\n17 6\n17 7\n17 8\n17 9\n17 10\n17 11\n17 12\n17 13\n17 14\n17 15\n17 16\n17 17''') == 'Yeah!'\nassert solution('''3 2\n0 1\n1 0\n2 1\n2 3\n3 2\n3 4\n3 5\n4 2\n4 3\n4 4\n4 5\n5 2\n5 3\n5 4\n5 5\n6 2\n6 3\n6 4\n6 5\n7 2\n7 3\n7 4\n7 5\n8 2\n8 3\n8 4\n8 5\n8 6\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n10 11\n10 12\n10 13\n10 14\n10 15\n11 1\n11 2\n11 3\n11 4\n11 5\n11 6\n11 7\n11 8\n11 9\n11 10\n11 11\n11 12\n11 13\n11 14\n11 15\n12 1\n12 2\n12 3\n12 4\n12 5"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yeah!\"\n'''"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4 4\n0 1\n1 0\n2 3\n3 2''') == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(\n'''4 4\n0 1\n1 0\n2 3\n3 2''') == \"Yeah!\"\nassert solution(\n'''6 6\n0 1\n1 0\n2 3\n3 4\n4 5\n5 6\n0 1\n1 0\n2 3\n3 4\n4 5\n5 6\n1 2\n3 4\n5 6''') == \"0\\n1\\n2\\n3\\n4\\n5\\n6\"\nassert solution(\n'''7 7\n0 1\n1 0\n2 3\n3 4\n4 5\n5 6\n6 7\n0 1\n1 0\n2 3\n3 4\n4 5\n5 6\n6 7\n1 2\n3 4\n5 6\n6 7\n0 1\n1 0\n2 3\n3 4\n4 5\n5 6\n6 7''') == \"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\"\nassert solution(\n'''10 10\n0 1\n1 0\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n0 1\n1 0\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n3 4\n5 6\n7 8\n1 2\n3 4\n5 6\n7 8\n1 2\n3 4\n5 6\n7 8\n1 2\n3 4\n5 6\n7 8\n1 2\n3 4\n5 6\n7 8''') == \"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n3\"\nassert solution(\"2 2\") == \"Yeah!\"\nassert solution(\"4 3\") == \"2\\n2\\n0\\n1\\n0\\n1\"\nassert solution(\"3 2\") == \"Yeah!\"\nassert solution(\"3 3\") == \"Yeah!\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 4\\n0 1\\n1 0\\n2 3\\n3 2') == '2\\n2\\n0\\n1\\n2\\n2\\n3'\nassert solution('1 1\\n0 1') == 'Yeah!'\nassert solution('2 3\\n1 2\\n2 0') == '2\\n2\\n0\\n1'\nassert solution('2 4\\n0 1\\n1 0\\n2 3\\n3 2') == '2\\n2\\n0\\n1\\n2\\n2\\n3'\nassert solution('4 5\\n0 1\\n1 2\\n2 3\\n3 4') == '2\\n2\\n0\\n1\\n2\\n2\\n3'\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n0 1\n1 0\n2 3\n3 2''') == '2'\nassert solution('''4 5\n0 1\n0 1\n1 0\n0 2\n2 3\n1 4\n1 5\n3 4\n2 2\n3 0\n2 3\n2 4\n1 4\n''') == 'Yeah!'\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n0\\n0\\n1\\n1\\n2\\n2\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"2\\n2\\n0\\n1\"\nassert solution(\"3 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\"\nassert solution(\"3 3\\n0 1\\n1 0\\n2 3\\n3 2\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\"\nassert solution(\"2 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"2 0\") == \"\"\nassert solution(\"1 2\") == \"\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1 2\n''') == 'POSSIBLE'\nassert solution('''3\n1 1 2\n1 2 3\n''') == 'POSSIBLE'\nassert solution('''3\n1 1 2\n1 2 3\n2 1 3\n''') == 'POSSIBLE'\nassert solution('''3\n1 1 2\n1 2 3\n2 1 3\n3 1 2\n''') == 'IMPOSSIBLE'\nassert solution('''4\n1 2\n2 1\n1 3\n3 2\n1 4\n''') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n2\\n2') == 'POSSIBLE'\nassert solution('1\\n1\\n1\\n2\\n2\\n3\\n3') == 'IMPOSSIBLE'\nassert solution('2\\n1 2\\n2 1') == 'POSSIBLE'\nassert solution('2\\n1 2\\n2 1\\n3 2') == 'IMPOSSIBLE'\nassert solution('2\\n1 2\\n2 1\\n3 2\\n4 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n') == 'POSSIBLE'\nassert solution('2 3\\n') == 'IMPOSSIBLE'\nassert solution('1 2\\n') == 'POSSIBLE'\nassert solution('3 4\\n') == 'IMPOSSIBLE'\nassert solution('2 1\\n') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1') == 'POSSIBLE\\n1 1'\nassert solution('1\\n2\\n1') == 'POSSIBLE\\n1 2\\n2 1'\nassert solution('2\\n1 2\\n1') == 'POSSIBLE\\n1 2\\n1 2'\nassert solution('3\\n1 1 2\\n1 2 3\\n2 3 1') == 'POSSIBLE\\n1 2\\n1 2'\nassert solution('3\\n1 1 2\\n1 2 3\\n2 3 1\\n1 3 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2\\n') == 'POSSIBLE\\n1 3\\n2 3'\nassert solution('1\\n1 1\\n') == 'POSSIBLE\\n1 1'\nassert solution('1\\n2\\n') == 'IMPOSSIBLE'\nassert solution('1\\n2\\n3\\n3\\n2\\n') == 'POSSIBLE\\n1 2\\n2 3\\n1 3'\nassert solution('1\\n1 1\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 2\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n2 1\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n2 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0\n3\n1 1 2''') == 'IMPOSSIBLE'\nassert solution('''0\n4\n1 1 2 2\n3 1 3\n4 1 4\n2 1 2''') == 'POSSIBLE'\nassert solution('''0\n4\n1 1 2 2\n3 1 3\n4 1 4\n2 1 2\n''') == 'POSSIBLE'\nassert solution('''0\n5\n1 1 2 2\n3 1 3\n4 1 4\n5 1 4\n2 1 2\n''') == 'POSSIBLE'\nassert solution('''0\n6\n1 1 2 2\n3 1 3\n4 1 4\n5 1 4\n6 1 5\n2 1 2\n''') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n') == 'POSSIBLE\\n1 3\\n2 3'\nassert solution('1\\n0\\n') == 'POSSIBLE\\n1 0\\n'\nassert solution('1\\n1\\n') == 'IMPOSSIBLE'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == 'POSSIBLE\\n1 3\\n2 3\\n'\nassert solution('1\\n0\\n') == 'POSSIBLE\\n1 0\\n'\n"
    },
    {
        "number": 3223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0 0') == '0.0 0.0 -0.0'\nassert solution('1 0 0') == '0.5 0.5 0.5'\nassert solution('0 1 0') == '0.5 0.5 -0.5'\nassert solution('0 0 1') == '0.0 0.0 0.0'\nassert solution('-1 0 0') == '0.0 0.0 -0.0'\nprint(solution(stdin))\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 -0.0'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''0 0 0\n0 0 0\n0 0 0''') == '0.0 0.0 0.0'\nassert solution('''2 0 0\n0 0 0\n1 1 1''') == '1.0 1.0 0.0'\nassert solution('''0 0 0\n0 0 0\n0 0 0''') == '0.0 0.0 0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 0.5'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''0 0 0\n0 1 0\n1 0 0\n1 0 0''') == '-0.5 -0.5 -0.5'\nassert solution('''0 1 1\n1 1 1\n0 0 1\n1 0 1''') == '-0.5 -0.5 0.5'\nassert solution('''0 0 0\n1 1 1\n0 1 1\n1 0 1''') == '0.5 0.5 0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 -0.0'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''0 0 0\n1 0 0\n0 1 0\n1 1 1''') == '0.5 0.5 0.5'\nassert solution('''1 1 1\n0 0 0\n0 1 1\n0 0 1''') == '0.5 0.5 -0.5'\nassert solution('''1 0 0\n0 1 0\n0 0 1\n0 1 1''') == '0.5 0.5 0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 -0.0'\n'''\n'''\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 0.5'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''0 0 0\n1 1 0\n0 1 0\n1 0 1''') == '0.5 0.5 0.5'\nassert solution('''-100.1 0 0\n101 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''0 -100.1 0\n101 1 0\n0 0 1''') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0 0''') == '0.0 0.0 -0.0'\nassert solution('''-1 0 0''') == '0.0 0.0 -0.0'\nassert solution('''0 1 0''') == '0.0 0.0 -0.0'\nassert solution('''0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''0 0 0''') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 -0.0'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 0.0'\nassert solution('''1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 -0.0'\nassert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 0.0'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 0.5'\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'\nassert solution('''-1 -1 -1\n1 -1 -1\n1 -1 -1''') == '0.0 0.0 -0.0'\nassert solution('''0 -1 -1\n1 -1 -1\n0 -1 -1\n0 0 1''') == '0.5 0.5 0.5'\nassert solution('''1 -1 -1\n1 -1 -1\n1 -1 -1\n1 1 1''') == '-1.0 1.0 -1.0'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"3\n3 6 2 3 2 2 2 1 5 6\"\"\") == \"\"\"2\n3 2 2 1 5\n3 2 2\n6 6\"\"\"\nassert solution(\n    \"\"\"3\n17 17 17\"\"\") == \"\"\"0\n17 17 17\"\"\"\nassert solution(\n    \"\"\"10\n3 6 2 3 2 2 2 1 5 6\"\"\") == \"\"\"2\n3 2 2 1 5\n3 2 2\n6 6\"\"\"\nassert solution(\n    \"\"\"4\n1 1 1 1 1\n1 1 1 1 1\"\"\") == \"\"\"0\n1 1 1 1 1\"\"\"\nassert solution(\n    \"\"\"7\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\"\"\") == \"\"\"0\n1 1 1 1 1 1 1\"\"\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\nassert solution('3\\n17 17 17') == '0\\n17 17 17\\n17 17 17'\nassert solution('17 17 17') == '0\\n17 17 17\\n17 17 17'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 6 2 3 2 2 2 1 5 6') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\nassert solution('3\\n17 17 17') == '0\\n17 17 17\\n17 17 17'\nassert solution('10\\n3 6 2 3 2 2 2 1 5 6') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\nassert solution('10\\n17 17 17') == '0\\n17 17 17\\n17 17 17'\nassert solution('15\\n13 12 11 10 9 8 7 6 5 4 3 2 1') == '0\\n13 12 11 10 9 8 7 6 5 4 3 2 1'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\") == \"0\"\nassert solution(\"1\\n3\\n2\") == \"0\"\nassert solution(\"1\\n2\\n3\") == \"0\"\nassert solution(\"1\\n2\\n3\") == \"0\"\nassert solution(\"1\\n2\\n3\") == \"0\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10\n3 6 2 3 2 2 2 1 5 6''') == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\"\nassert solution('''1000\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100''') == \"0\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1') == '0\\n1\\n1\\n'\nassert solution('1\\n2\\n3') == '0\\n2\\n3\\n'\nassert solution('1\\n2\\n3\\n4') == '0\\n2\\n3\\n4\\n'\nassert solution('2\\n3\\n4\\n5') == '0\\n2\\n3\\n4\\n5\\n'\nassert solution('10\\n10\\n10\\n') == '0\\n10\\n10\\n10\\n10\\n'\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"11\") == \"\"\nassert solution(\"12\") == \"\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3 6 2 3 2 2 2 1 5 6\") == \"2\"\nassert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\") == \"74.6666666667\"\nassert solution(\"2 3 2\") == \"76.6666666667\"\nassert solution(\"2 3 2\") == \"76.6666666667\"\nassert solution(\"3 2 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''2 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''3 3 1\n1 2 3\n2 3 4\n3\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''3 3 1\n1 2 3\n2 3 4\n3\n2 1\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"74.6666666667\"\nassert solution(\"2 3 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 1\\n1 3 7\\n2 3 8\\n1\\n3 2\\n\") == \"16\"\nassert solution(\"1 2 1\\n1 3 7\\n2 3 8\\n1\\n1 2\\n\") == \"8\"\nassert solution(\"1 2 1\\n1 3 7\\n2 3 8\\n1\\n1 3\\n\") == \"4\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''\n2 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.6666666667'\nassert solution('''\n2 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample1) == \"IMPOSSIBLE\"\nassert solution(sample2) == \"74.6666666667\"\nprint(solution(stdin))\n\n'''\n\nfrom collections import defaultdict\n\nclass Point:\n    def __init__(self, x: int, y: int) -> None:\n        self.x = x\n        self.y = y\n\nclass Graph:\n    def __init__(self) -> None:\n        self.graph = defaultdict(list)\n\n    def add_edge(self, a: int, b: int) -> None:\n        self.graph[a].append(b)\n        self.graph[b].append(a)\n\n    def bfs(self, s: int) -> int:\n        dist = {s: 0}\n        queue = [(s, 0)]\n        while queue:\n            u, d = queue.pop(0)\n            for v in self.graph[u]:\n                if v not in dist:\n                    dist[v] = d + 1\n                    queue.append((v, d + 1))\n        return max(dist.values())\n\n    def shortest_path(self, s: int, t: int) -> int:\n        return self.bfs(s) + self.bfs(t)\n\nn, m, e = list(map(int, stdin.readline().split()))\nroads = [list(map(int, stdin.readline().split())) for _ in range(m)]\nintersection = stdin.readline().split()\n\ngraph = Graph()\nfor a, b, l in roads:\n    graph.add_edge(a, b)\n    graph.add_edge(b, a)\n\nbrothers = stdin.readline().split()"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"4 4 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"74.6666666667\"\nassert solution(\n\"4 4 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"74.6666666667\"\nassert solution(\n\"4 4 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"IMPOSSIBLE\"\nassert solution(\n\"5 5 2\\n1 2 3\\n1 3 4\\n2 1 5\\n3 4 5\\n4\\n2 2\\n3 4\") == \"IMPOSSIBLE\"\nassert solution(\n\"5 5 2\\n1 2 3\\n1 3 4\\n2 1 5\\n3 4 5\\n4\\n2 2\\n3 4\") == \"46.98765432098765\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"74.6666666667\"\nassert solution(stdin) == \"IMPOSSIBLE\"\nassert solution(stdin) == \"IMPOSSIBLE\"\nassert solution(stdin) == \"IMPOSSIBLE\"\nassert solution(stdin) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == \"IMPOSSIBLE\"\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == \"74.6666666667\"\n'''\nExample 1.\n\nFrom time $t_1$ to time $t_2$ is possible to travel on the streets from intersection $a$ to intersection $b$.\n\nThe speed of the brother's car is $v_1$ km/h.\n\nThe speed of the police car is $v_2$ km/h.\n\nThe time at which they can be both at the same time is $t_3$.\n\nThe absolute speed of the brother's car when crossing the streets is $|v_1 - v_2|$.\n\nThe absolute speed of the police car when crossing the streets is $|v_1 + v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 + v_1$ is $|v_1 - v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 + v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 - v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 + v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 - v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 + v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 - v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 - v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 + v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 - v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 + v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 - v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 - v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 - v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 - v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 + v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 - v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 + v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 + v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 - v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 - v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 + v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 - v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v_2 = v_1 + v_2$ is $|v_1 - v_2|$.\n\nThe absolute speed of the brother's car when crossing the streets when $v_2 = v_1 - v_1$ is $|v_1 + v_2|$.\n\nThe absolute speed of the police car when crossing the streets when $v"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n\"\"\") == \"\"\"1\n2\n1\n2\n2\n1\n\"\"\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n''') == '''1\n2\n1\n2\n2\n1\n'''\n\nassert solution('''10 3\n1 5\n1 8\n2 3\n3 4\n4 8\n4 9\n5 6\n6 7\n7 7\n7 8\n8 9\n9 7\n8 5\n9 1\n''') == '''2\n1\n2\n1\n2\n1\n2\n2\n1\n2\n1\n2\n'''\n\nassert solution('''1 1\n1 2\n2 1\n2 2\n''') == '''0\n0\n0\n0\n'''\n\nassert solution('''4 4\n1 2\n1 3\n2 1\n2 4\n''') == '''0\n0\n0\n1\n0\n'''\n\nassert solution('''5 3\n1 2\n1 3\n2 1\n2 4\n3 4\n''') == '''0\n0\n0\n1\n0\n'''"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n''') == '1\\n2\\n1\\n2\\n2\\n1'\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '0\\n0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5''') == '''1\n2\n1\n2\n2\n1\n'''\nassert solution('''4 3\n1 2\n2 3\n3 1\n''') == '''2\n2\n2\n0\n'''\nassert solution('''4 4\n1 2\n2 3\n3 4\n1 4\n''') == '''2\n2\n2\n2\n'''\nassert solution('''4 4\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n''') == '''2\n2\n2\n2\n2\n'''\nassert solution('''10 10\n1 2\n2 3\n3 1\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 3\n1 9\n3 8\n8 7\n7 6\n6 5\n5 4\n4 3\n3 2\n2 1\n1 0\n''') == '''2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n'''\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '''1\n2\n1\n2\n2\n1\n'''\n\nassert solution('''5 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '''0\n'''\n\nassert solution('''2 2\n1 2\n2 1\n''') == '''0\n'''\n\nassert solution('''5 4\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '''1\n1\n1\n1\n1\n1\n'''\n\nassert solution('''1 1\n1 2\n2 1\n''') == '''0\n'''"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test1.txt\", \"r\").read()) == \"3\\n3\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5''') == '1\\n2\\n1\\n2\\n2\\n1'\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4''') == '1\\n2\\n1\\n2\\n2\\n1\\n2'\nassert solution('''2 10\n1 3\n1 4\n2 3\n3 2\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n7 8\n1 2\n3 4\n1 5\n4 5''') == '2\\n2\\n2\\n1\\n2\\n2\\n2\\n1\\n2\\n1\\n1\\n2\\n2\\n2'\n'''Sample Output 3:\n1\n1\n1\n2\n2\n2\n1\n1\n2\n2\n2\n2\n1\n'''\n"
    },
    {
        "number": 3227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5''') == '1'\nassert solution('''5 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4''') == '1'\nassert solution('''10 10\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n8 9\n9 10\n1 3\n3 7\n1 4\n1 7''') == '0'\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n8 9\n9 10\n1 3\n3 7\n1 4\n1 7''') == '2'\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n8 9\n9 10\n1 3\n3 7\n1 4\n1 7''') == '0'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 4 5\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"4 10 2\") == \"\"\nassert solution(\"4 10 2\\n0\") == \"\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0\n5\n0\n15\n30\n45\n''') == '5'\nassert solution('''0\n4\n10\n0\n15\n30\n45\n''') == '10'\nassert solution('''0\n4\n10\n15\n30\n45\n''') == '25'\nassert solution('''0\n4\n10\n15\n30\n45\n''') == '45'\nassert solution('''0\n4\n10\n15\n30\n45\n''') == '45'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n1\\n3\\n5') == '5'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n3\\n4\\n5') == '5'\nassert solution('2\\n3\\n4\\n5') == '5'\nassert solution('4\\n5\\n6\\n7') == '6'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 10 2''') == '10'\nassert solution('''1 1 1''') == '0'\nassert solution('''2 3 4''') == '9'\nassert solution('''1\n0\n1''') == '2'\nassert solution('''3 5 7''') == '8'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(solution(stdin))\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 10 2''') == '10'\nassert solution('''4 10 3''') == '5'\nassert solution('''4 10 4''') == '9'\nassert solution('''4 10 4\n0\n15\n30\n45''') == '9'\nassert solution('''3 10 4\n0\n15\n30\n45''') == '2'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n15\\n30\\n45') == '10'\nassert solution('0\\n15\\n30\\n45\\n60') == '5'\nassert solution('2\\n15\\n30\\n45\\n60') == '5'\nassert solution('0\\n15\\n30\\n45\\n60\\n105') == '10'\nassert solution('0\\n15\\n30\\n45\\n60\\n105\\n150') == '5'\n"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 10"
    },
    {
        "number": 3228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin1) == \"2\"\nassert solution(stdin2) == \"1\"\nassert solution(stdin3) == \"4\"\nassert solution(stdin4) == \"5\"\nassert solution(stdin5) == \"7\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n4\\n3\\n2\\n4\\n3\\n2\\n2\\n1') == '2'\nassert solution('4\\n4\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('5\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('5\\n5\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '1'\nassert solution('5\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4\\n50 50 75\\n25 25 25\\n') == '2'\nassert solution('2 4\\n50 50 50 50\\n25 25 25 25\\n') == '1'\nassert solution('3 4\\n2 1 2\\n3 3 3\\n2 2 2 2\\n1 1 1 1\\n') == '2'\nprint(\"\"\"1\"\"\")\n\nassert solution('2 4\\n50 50 75\\n25 25 25\\n') == '2'\nassert solution('2 4\\n50 50 50\\n25 25 25\\n') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2\n50 50 75\n25 25 25''') == '2'\nassert solution('''5 2\n50 50 50 50\n25 25 25 25\n''') == '1'\n\nprint(solution('''7 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n'''))"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2\\n50 50 75\\n25 25 25\\n') == '2'\nassert solution('2 2\\n50 50 100\\n25 25 25\\n') == '2'\nassert solution('2 2\\n50 50 50\\n25 25 25\\n') == '1'\nassert solution('2 2\\n50 50 50\\n25 25 25\\n') == '1'\nassert solution('2 2\\n50 50 100\\n25 25 25\\n') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25\\n') == '2'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == '1'\nassert solution('7 3\\n1 2 3 4 5 6 7\\n50 50 50 50 50 50 50 50 50\\n25 25 25 25 25 25 25 25 25\\n') == '3'\nassert solution('9 2\\n1 2 3 4 5 6 7 8 9\\n
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25\\n') == 2\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == 1\nassert solution('7 2\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100') == '2'\nassert solution('4 2\\n50 50 75\\n25 25 25\\n') == 2\nassert solution('7 2\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100\\n100 100 100 100 100 100 100 100 100 100"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 2, \"Test 1 failed\"\nassert solution(stdin) == 1, \"Test 2 failed\"\n\n-----Note-----\nThe first two tests passed.\n\nThis problem is very tricky to solve without using dynamic programming. It is quite obvious that any naive implementation will have exponential time complexity. One idea to solve this is to create a two-dimensional array of size $n+1$ by $m+1$ and fill it with the maximum possible aggregate score of a contestant, for $n$ contests, with $m$ contestants.\n\nThen, for each contestant at position $i$ and each contest at position $j$ we can define two things:\n\n- the aggregate score of the contestant at position $i$ for the contest at position $j$;\n- the rank of the contestant at position $i$ at the contest at position $j$.\n\nAt every step, the rank is defined to be the sum of the highest scores obtained by the contestant at position $i$ and the same contestant at position $i$ in every contest before the current contest. Hence, the rank of the contestant at position $i$ for the contest at position $j$ is defined to be the sum of the ranks of the contestant at position $i$ and the same contestant at position $i$ in every contest before the current contest, plus the rank of the contestant at position $i$ for the current contest plus the number of contestants at position $i$ that have better aggregate scores than the contestant at position $i$ for the current contest.\n\nConsider the example with the contestant at position $1$ and the contestant at position $0$ for the next contest. Consider the two things defined above:\n\n- the aggregate score of the contestant at position $0$ for the contest at position $1$ is equal to $50$ + $50$ + $50$ + $50$ + $50$ + $50$ + $50$ + $50$ = $150$,\n- the rank of the contestant at position $0$ for the contest at position $1$ is equal to $1$ + $1$ + $1$ + $1$ + $1$ + $1$ + $1$ + $1$ = $6$,\n- the aggregate score of the contestant at position $1$ for the contest at position $1$ is equal to $75$ + $75$ + $75$ + $75$ + $75$ + $75$ + $75$ + $75$ + $75$ = $255$.\n\nIn the previous example, the rank of the contestant at position $0$ is defined as follows:\n\n- the rank of the contestant at position $0$ for the contest at position $1$ is equal to the aggregate score of the contestant at position $0$ for the contest at position $1$ plus the rank of the contestant at position $0$ for the current contest plus the number of contestants at position $0$ that have better aggregate scores than the contestant at position $0$ for the current contest.\n\n- the rank of the contestant at position $1$ for the contest at position $1$ is equal to the aggregate score of the contestant at position $1$ for the contest at position $1$ plus the rank of the contestant at position $1$ for the current contest plus the number of contestants at position $1$ that have better aggregate scores than the contestant at position $1$ for the current contest.\n\n- the rank of the contestant at position $2$ for the contest at position $1$ is equal to the aggregate score of the contestant at position $2$ for the contest at position $1$ plus the rank of the contestant at position $2$ for the current contest plus the number of contestants at position $2$ that have better aggregate scores than the contestant at position $2$ for the current contest.\n\n- the rank of the contestant at position $3$ for the contest at position $1$ is equal to the aggregate score of the contestant at position $3$ for the contest at position $1$ plus the rank of the contestant at position $3$ for the current contest plus the number of contestants at position $3$ that have better aggregate scores than the contestant at position $3$ for the current contest.\n\n- the rank of the contestant at position $4$ for the contest at position $1$ is equal to the aggregate score of the contestant at position $4$ for the contest at position $1$ plus the rank of"
    },
    {
        "number": 3229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 2"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\".LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"\\n\".join([\"4 4\", \".LX.\", \".X..\", \"....\", \".L..\", \"\"])) == \"2\"\nassert solution(\"\\n\".join([\"5 5\", \"X..X\", \".X..\", \".X..\", \"L..L\", \"\"])) == \"4\"\nassert solution(\"\\n\".join([\"1 1\", \"\"])) == \"0\"\nassert solution(\"\\n\".join([\"1 1\", \"\"])) == \"0\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\".LX.\\n.X..\\n....\\n.L..\\n\") == '1'\nassert solution(\".XLX\\n.X..\\n...L\\n.X..\\n\") == '2'\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('.L.X...L.L...X.L...L.L.X.L.L.L....X.L.L.X.L.L..L.X.L.L.L.X.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L..X.L.L.L.L.L.L.L.L.L.L..L.X.L.L.L.L.L..X.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L.L"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('.XLX\\n.X..\\n...L\\n.X..') == '2'\nassert solution('.LX.\\n.X..\\n....\\n.L..\\n') == '1'\nassert solution('2\\n4\\n.LX\\n.X..\\n...L\\n.X..') == '2'\nassert solution('3\\n3\\n.LX\\n.X..\\n...L\\n.X..') == '1'\nassert solution('3\\n3\\n.LX\\n.X..\\n...L\\n.X..') == '1'\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2'\nassert solution('2 3\\n.L.\\nL..\\n.L.\\n') == '1'\nassert solution('2 3\\n.LL\\n.L.\\n.L.\\n') == '2'\nassert solution('2 3\\n.LL\\n.L.\\n.L.\\n') == '1'\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\"\nassert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"2\"\nassert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"2\"\nassert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"2\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.LX.\\n.X..\\n...L\\n.X..\\n') == '2\\n'\nassert solution('3 3\\n.X..\\n.X..\\n.X..\\n.X..\\n.X..\\n') == '0\\n'\nassert solution('3 3\\n.L..\\n.L..\\n.L..\\n.L..\\n.L..\\n') == '6\\n'\nassert solution('4 4\\n.L.X.\\n.X.L.\\n....L\\n.L.L..\\n') == '3\\n'\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..\n''') == \"1\"\nassert solution('''5 6\nLXXXXL\nLX..X\nL.X..\n.X...\nL....\n''') == \"5\"\nassert solution('''5 7\nLXXXXX\nLX..X\nL.X..\n.X...\nL....\n''') == \"4\"\nassert solution('''5 7\nLXXXXX\nLX..X\nL.X..\n.X...\nL....\n''') == \"3\"\nassert solution('''5 6\nLLLLLL\nL.X..\n.X...\n.X..\n.L...\n''') == \"3\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('.L.X.L.L.X.L.') == \"1\"\nassert solution('.L.X.L.L.X.L.') == \"2\"\nassert solution
    },
    {
        "number": 3230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 0\") == \"0\"\nassert solution(\"2 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"4 1\") == \"1\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 1') == 'home'\nassert solution('5 2 1') == 'detention'\nassert solution('1 2') == 'home'\nassert solution('2 2') == 'home'\nassert solution('2 2 1') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"home\"\nassert solution(\"4 2 1\") == \"home\"\nassert solution(\"5 2 1\") == \"detention\"\nassert solution(\"3 2 1\") == \"detention\"\nassert solution(\"4 1 1\") == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2 1''') == 'home'\nassert solution('''5 2 1''') == 'detention'\nassert solution('''5 2 1''') == 'home'\nassert solution('''5 3 1''') == 'detention'\nassert solution('''4 3 1''') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2') == 'home'\nassert solution('3 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n2 2 4\\n1 3') == 'detention'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 4\\n2 2 4\\n1 3') == 'detention'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 4\\n2 2 4\\n1 2\\n1 3') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention'\n\n'''\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2 1''') == 'home'\nassert solution('''5 2 1''') == 'detention'\nassert solution('''2 2 1''') == 'home'\nassert solution('''2 2 1''') == 'detention'\nassert solution('''2 2 1''') == 'home'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2 1''') == 'home'\nassert solution('''5 2 1''') == 'detention'\nassert solution('''1 1''') == 'home'\nassert solution('''1 1''') == 'home'\nassert solution('''1 1''') == 'home'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'home'\nassert solution(stdin) == 'home'\nassert solution(stdin) == 'detention'\nassert solution(stdin) == 'detention'\nassert solution(stdin) == 'home'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 1') == 'home'\nassert solution('2 2 1') == 'detention'\nassert solution('5 2 1') == 'detention'\nassert solution('2 4 1') == 'detention'\nassert solution('2 3 1') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"detention\"\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('tralalal') == 'allatral'\nassert solution('tralalal') == 'allatral'\nassert solution('tr') == 'tr'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == -1\nassert solution('abcd') == 'abcd'\nassert solution('abcde') == 'abcde'\nassert solution('aabcdde') == 'aabcdde'\nassert solution('abcde') == 'abcde'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('abcd') == 'abcd'\nassert solution('abcdefghijklmnop') == 'abcdefghijklmnop'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\") == \"-1\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"mibkvhxzmkewzqfkzkvxqfkzvxmkiqwzvxqzmzuxknwqfkzkvxqfkzvxqfkzvxmkiqwzvxqzmzuxknwqfkzkvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkzvxqfkzvxqfkzvxmkiqwzvxqfkz"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\n\"\"\""
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('abab') == 'abab'\nassert solution('ababcd') == 'ababcd'\nassert solution('aaaaa') == 'aaaaa'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('tttt') == 'tttt'\nassert solution('hnnn') == '-1'\nassert solution('mmmn') == '-1'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nassert solution('zzzzzzzzzzzzzzzzzzzzzzz') == '-1'\nassert solution('tralalal') == 'allatral'\nassert solution('tralalal') == 'allatral'\n"
    },
    {
        "number": 3232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n6\n3 2 1 6 4 5\n\"\"\") == \"8\"\n\nassert solution(\n\"\"\"\n5\n4 2 1 3 5\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n5\n4 2 1 3 5\n\"\"\") == \"8\"\n\nassert solution(\n\"\"\"\n5\n3 2 1 6 4 5\n\"\"\") == \"6\""
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '5'\nassert solution('''6\n3 2 1 6 4 5''') == '8'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '10'\nassert solution('''6\n5 1 1 1 1 1 1''') == '0'\nassert solution('''3\n1 2 3''') == '0'\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n        \"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"5\"\nassert solution(\n        \"\"\"\n6\n3 2 1 6 4 5\n\"\"\") == \"8\"\nassert solution(\n        \"\"\"\n1\n1\n\"\"\") == \"0\"\nassert solution(\n        \"\"\"\n2\n2\n\"\"\") == \"0\"\nassert solution(\n        \"\"\"\n1\n1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5\n1 2 3 4 5\n\"\"\") == \"5\"\nassert solution(\"\"\"6\n3 2 1 6 4 5\n\"\"\") == \"8\"\nassert solution(\"\"\"8\n3 2 1 6 4 5\n\"\"\") == \"8\"\nassert solution(\"\"\"7\n3 2 1 6 4 5\n\"\"\") == \"4\"\nassert solution(\"\"\"8\n3 2 1 6 4 5\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1 2\\n') == '1'\nassert solution('3\\n1 2 3\\n') == '3'\nassert solution('4\\n1 2 3 4\\n') == '6'\nassert solution('5\\n1 2 3 4 5\\n') == '10'\n"
    },
    {
        "number": 3233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n1 2 3') == '1'\nassert solution('2\\n1 2 3 4') == '2'\nassert solution('2\\n1 2 3 4 5') == '5'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('47') == '1'\nassert solution('523') == '2'\nprint('Tests passed')\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('47') == '1'\nassert solution('523') == '2'\nassert solution('21973214286729523270435820735415425169291871442805451793409129380568365142045761410255') == '1'\nassert solution('47283365795981382839552469047004084246389520982450872645368135169208822778185122533345095180763947') == '3'\nassert solution('21973214286729523270435820735415425169291871442805451793409129380568365142045761410255') == '3'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('47') == '1'\nassert solution('523') == '2'\nassert solution('1') == '0'\nassert solution('42') == '0'\nassert solution('43') == '1'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''47''') == '1'\nassert solution('''523''') == '2'\nassert solution('''1000000001''') == '1'\nassert solution('''10''') == '0'\nassert solution('''1000000000''') == '1'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4') == '1'\nassert solution('47') == '1'\nassert solution('48') == '2'\nassert solution('49') == '3'\nassert solution('50') == '4'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('47') == '1'\nassert solution('523') == '2'\nassert solution('1024') == '8'\nassert solution('1000') == '32'\nassert solution('5000') == '132'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('47') == '1'\nassert solution('523') == '2'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('47') == '1'\nassert solution('523') == '2'\nassert solution('1000000000000') == '1'\nassert solution('10000000000000000000') == '2'\nassert solution('100000000000000000000') == '2'\n"
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\n\"\"\""
    },
    {
        "number": 3234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\"\nassert solution(\"8096206819\") == \"7\"\nassert solution(\"15\") == \"1\"\nassert solution(\"35821288\") == \"1\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1\\n0 1 15'\nassert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\nassert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1\\n0 1 15'\nassert solution('''4 5\n1 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n0 1 15'\nassert solution('''4 5\n1 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n0 1 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n1\\n1\\n15'\nassert solution(\n'''2 2\n0 1 20\n1 0 5\n''') == '1\\n0 1 15'\nassert solution(\n'''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n1\\n1\\n15'\nassert solution(\n'''8 8\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n1\\n1\\n15'\nassert solution(\n'''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n1\\n1\\n15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 2\n1 3\n0 2''') == '0 1 15'\nassert solution('''1 2\n2 3\n0 1 2''') == '1'\nassert solution('''0 3\n1 2 3\n2 0 4\n3 1 4''') == '1'\nassert solution('''0 1\n1 2\n2 3\n3 4''') == '1'\nassert solution('''2 4\n2 3\n3 4\n0 4\n1 2\n0 4\n1 4\n2 1\n2 3\n1 0''') == '0 1 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5') == '0'\nassert solution('2 2') == '1'\nassert solution('3 4 5') == '0 1 2 3'\nassert solution('3 2 10') == '0 1 2 3'\nassert solution('2 0 10') == '0 1 10'\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 5') == '0'\nassert solution('2 2') == '1'\nassert solution('4 5') == '0'\nassert solution('2 2') == '1'"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n') == '0\\n1 1 15\\n'\nprint(solution('2 2\\n0 1 20\\n1 0 5\\n'))\n\"\"\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n\nimport sys\nfrom functools import lru_cache\n\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5''') == '5'\nassert solution('''5 3\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5''') == '1'\nassert solution('''1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2''') == '1'\nassert solution('''5 5\n1 2 4 3 2 1\n1 2\n2 3\n3 4\n4 5\n1 2\n1 2\n1 2\n1 2\n1 2''') == '2'\nassert solution('''2 2\n1 2\n1 2\n1 2''') == '0'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"5\"\nassert solution(\"5 6\") == \"5\"\nassert solution(\"5 6\") == \"5\"\nassert solution(\"5 6\") == \"5\"\nassert solution(\"5 6\") == \"5\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 2\\n2 3\\n3 4\\n4 5') == '1'\nassert solution('1 2\\n1 2\\n2 3\\n3 4\\n4 5') == '1'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n4 5') == '1'\nassert solution('1 2\\n1 2\\n2 3\\n3 4\\n4 5') == '1'\nassert solution('1 2\\n1 2\\n2 3\\n3 4\\n4 5') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == 0\nassert solution(\"1 2 3 4 5\\n2 3\\n1 2\\n3 4\\n4 5\\n1 2\") == 1\nassert solution(\"1 2 3 4 5\\n2 3\\n1 3\\n3 4\\n4 5\\n1 2\\n2 3\") == 3\nassert solution(\"1 2 3 4 5\\n2 3\\n1 3\\n3 4\\n4 5\\n1 2\\n3 4\") == 5\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\nassert solution('''5 4\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '1'\nassert solution('''5 5\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '0'\nassert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n4 5\n3 4\n''') == '3'\nassert solution('''5 5\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n4 5\n3 4\n1 2\n''') == '2'\n"
    },
    {
        "number": 3236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4'\n\n\"\"\""
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('203010') == '7'\nassert solution('20010') == '27'\nassert solution('0203') == '7'\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\nassert solution(\"313213\") == \"20\"\nassert solution(\"1311\") == \"24\"\nassert solution(\"32\") == \"2\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"020302\"\n) == \"7\"\nassert solution(\n    \"1311\"\n) == \"24\"\nassert solution(\n
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0102030405060708091011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374') == '16'\nassert solution
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('11') == '12'\nassert solution('0') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\nTest.describe(\"Example Tests\")\nTest.assertEquals(solution(stdin), stdout)\nTest.assertEquals(solution(\"1311\"), \"12\")\nTest.assertEquals(solution(\"010312\"), \"7\")\nTest.assertEquals(solution(\"010312\"), \"7\")\nTest."
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample1) == '7'\nassert solution(sample2) == '24'\nassert solution(sample3) == '11'\nassert solution(sample4) == '1'\n\nimport unittest\n\nclass TestAssertion(unittest.TestCase):\n    def test_solution(self):\n        pass"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\nassert solution('011101') == '10'\nassert solution
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '24'\n\n\"\"\"\n\nfrom math import sqrt\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open('test1').read()) == '3 1 3 10'\nassert solution(open('test2').read()) == '1 15 5 15'\nprint(solution(open('input').read()))\n\n\"\"\"\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1 1 3 10\"\nassert solution(\"8 10\") == \"3 1 3 10\"\nassert solution(\"9 10\") == \"3 1 3 10\"\nassert solution(\"10 25\") == \"3 1 3 10\"\nassert solution(\"5 10\") == \"3 1 3 10\"\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n4 4\\n#\") == \"1 1 3 3\"\nassert solution(\"2 2\\n#\") == \"1 1 1 1\"\nassert solution(\"2 2\\n.#\") == \"1 1 1 1\"\nassert solution(\"3 3\\n#.#.\\n.#.#.\") == \"1 1 1 1\"\nassert solution(\"3 3\\n.#.#.\\n.#.#.\") == \"1 1 1 1\"\n"
    },
    {
        "number": 3238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"D:/python_practice/Test/large_input.txt\", 'r').read()) == \"1 15 5 15\"\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5.000000000'\n'''\n\n'''\nWrite an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\n\nIntegers in each row are sorted from left to right.\nThe first integer of each row is greater than the last integer of the previous row.\nFor example,\n\nConsider the following matrix:\n\n[\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\nGiven target = 3, return true.\n\n-----Input-----\nThe first line contains two space-separated integers, $m$ and $n$, the number of rows and columns of the matrix respectively.\nThe next $m$ lines each contain $n$ space-separated integers describing the $m$ rows of the matrix.\nThe final line contains an integer, $target$, the target value that we are searching for.\n\n-----Output-----\nIf the target is found, print on a single line \"true\", otherwise print \"false\".\n\n-----Example-----\nInput:\n3 3\n1 2 3\n8 9 4\n3 4 5\n5\nOutput:\ntrue\n\nInput:\n3 3\n1 2 3\n8 9 4\n3 4 5\n0\nOutput:\nfalse\n'''\n\n'''\nWrite an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\n\nIntegers in each row are sorted from left to right.\nThe first integer of each row is greater than the last integer of the previous row.\nFor example,\n\nConsider the following matrix:\n\n[\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\nGiven target = 3, return true.\n\n-----Input-----\nThe first line contains two space-separated integers, $m$ and $n$, the number of rows and columns of the matrix respectively.\nThe next $m$ lines each contain $n$ space-separated integers describing the $m$ rows of the matrix.\nThe final line contains an integer, $target$, the target value that we are searching for.\n\n-----Output-----\nIf the target is found, print on a single line \"true\", otherwise print \"false\".\n\n-----Example-----\nInput:\n3 3\n1 2 3\n8 9 4\n3 4 5\n5\nOutput:\ntrue\n\nInput:\n3 3\n1 2 3\n8 9 4\n3 4 5\n0\nOutput:\nfalse\n'''\n\n'''\nWrite an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\n\nIntegers in each row are sorted from left to right.\nThe first integer of each row is greater than the last integer of the previous row.\nFor example,\n\nConsider the following matrix:\n\n[\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\nGiven target = 3, return true.\n\n-----Input-----\nThe first line contains two space-separated integers, $m$ and $n$, the number of rows and columns of the matrix respectively.\nThe next $m$ lines each contain $n$ space-separated integers describing the $m$ rows of the matrix.\nThe final line contains an integer, $target$, the target value that we are searching for.\n\n-----Output-----\nIf the target is found, print on a single line \"true\", otherwise print \"false\".\n\n-----Example-----\nInput:\n3 3\n1 2 3\n8 9 4\n3 4 5\n5\nOutput:\ntrue\n\nInput:\n3 3\n1 2 3\n8 9 4\n3 4 5\n0\nOutput:\nfalse\n'''\n\n'''\nThis problem can be solved using Binary Search.\n\nIn Binary Search, we try to find the value by dividing the search interval into two parts, one in which the value is smaller than the target and the other one in which the value is greater than the target.\n\nLet's say we have to find the number x in the following array:\n\nx | array[0] | array[1] | array[2] | array[3] | array[4] | array[5] | array[6]\n---|---------|---------|---------|---------|---------|---------|---------|\n0 | 2        | 5        | 9        | 11       | 12       | 16       | 19\n1 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n2 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n3 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n4 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n5 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n6 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n7 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n8 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n9 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n10 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n11 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n12 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n13 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n14 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n15 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n16 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n17 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n18 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n19 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n20 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n21 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n22 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n23 | 1        | 3        | 7        | 10       | 17       | 22       | 25\n\nWrite an efficient algorithm that searches for a value in the array.\n\nIf you search through the entire array, you will have to do $O(n)$ extra work. Can you do this in linear time?\n\nWrite code to solve this problem.\n\n-----Input-----\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5.000000000'\n\"\"\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\nassert solution('8.5 0.33') == '1.449272572'\nprint(\"Test cases passed!\")\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\nprint('Test cases passed.')\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100 0.125') == '16.339203308'\nassert solution('101 0.123') == '5.000000000'\nassert solution('11 0.123') == '0.000000000'\nassert solution('1 0.123') == '0.000000000'\nassert solution('10 0.123') == '0.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n\nn, p = stdin.split()\nn = int(n)\np = float(p)\n\nassert abs(solution(n, p) - 16.339203308) < 10**-6\nassert abs(solution(n, p) - 5.000000000) < 10**-6"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5.000000000\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5.000000000\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2'\nassert solution('3 4\\n1 11\\n0.4 1\\n') == '3'\nassert solution('16 3\\n0.45 1 0\\n0.55 1 1\\n0.9 0 0\\n0.1 0 1\\n0.9 1 1\\n') == '12'\nassert solution('4 6\\n0.44 1 0 0\\n0.57 1 1 1\\n0.05 0 0 0\\n0.19 1 1 1\\n0.15 0 0 0\\n0.6 0 1 1\\n') == '21'\nassert solution('10 10\\n0.11 0 0 1 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 1 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 1 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 1 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 1 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0.11 0 0 0 0"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(2)\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2'\nassert solution('3 2\\n1 11\\n0.4 1\\n') == '3'\nassert solution('2 1\\n0.5 1\\n') == '2'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3'\nassert solution('5 2\\n0.8 5\\n0.6 0\\n0.9 1\\n') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0.5 1\") == \"2\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"1 11\") == \"3\"\nassert solution(\"0.4 1\") == \"2\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == ''\nassert solution(input(\"0\")) == '0'\nassert solution(input(\"1\")) == '1'\nassert solution(input(\"2\")) == '1'\nassert solution(input(\"3\")) == '2'\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n0.5 1\\n0.4 1') == '3'\nassert solution('4 4\\n0.5 1\\n0.4 1\\n0.5 1\\n0.3 0\\n0.2 0\\n0.1 1') == '3'\nprint(solution('4 4\\n0.5 1\\n0.4 1\\n0.5 1\\n0.3 0\\n0.2 0\\n0.1 1'))\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n0.5 1\") == \"2\"\nassert solution(\"3 2\\n1 11\\n0.4 1\") == \"3\"\nassert solution(\"2 3\\n0.4 1\\n0.1 0\\n0.2 0\") == \"2\"\nassert solution(\"2 4\\n0.2 1\\n0.1 0\\n0.7 0\") == \"3\"\nassert solution(\"4 4\\n0.2 1\\n0.2 0\\n0.1 0\\n0.1 0\") == \"3\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2\\n0 1\\n') == '-1'\nassert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'\nassert solution('3\\n2 1\\n4 0\\n0 3\\n10 0') == '10.5'\nassert solution('5\\n10 1\\n5 3\\n10 4\\n10 0') == '8.5'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3''') == '-1'\nassert solution('''3\n2 1\n4 1\n0 3''') == '7.5'\nassert solution('''3\n2 1\n4 1\n5 0''') == '-1'\nassert solution('''3\n2 1\n4 1\n5 1''') == '7.5'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3''') == '-1'\nassert solution('''1000\n3010\n1523\n0''') == '100000000000000.5'\nassert solution('''1000\n1023\n1523\n0''') == '0'\nassert solution('''1000\n1023\n1523\n1000000000''') == '1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"1.0\"\nassert solution(\"1 2\") == \"-1.0\"\nassert solution(\"1 2 1\") == \"0.5\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''5\n7 1\n3 2\n4 0\n0 3\n2 1''') == '3.5'\nassert solution('''6\n7 1\n3 2\n4 0\n0 3\n2 1\n5 0\nSample Output 2:\n-1\n''') == '-1'\nassert solution('''6\n7 1\n3 2\n4 0\n0 3\n2 1\n5 0\n7 1\n3 2\n4 0\n0 3\n2 1\n5 0\n''') == '3.5'\nassert solution('''10\n7 1\n3 2\n4 0\n0 3\n2 1\n5 0\n7 1\n3 2\n4 0\n0 3\n2 1\n5 0\n''') == '3.5'\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3''') == '-1'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0'\nassert solution('''2\n1 1\n1 1\n1 1''') == '2'\nassert solution('''5\n4 2\n2 2\n1 1\n1 1\n1 1''') == '2.5'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 0.5\n2 0.5\n1 0.5''') == '1'\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == '2'\nassert solution('''2 0.5\n2 0.49\n1 0.49''') == '1'\nassert solution('''2 0.5\n2 0.49\n1 0.49''') == '1'\nassert solution('''3 0.25\n3 0.2\n2 0.5\n1 0.49\n2 0.1''') == '3'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"2 0.5\n2 0.51\n1 0.49\"\"\") == '2'\n\nassert solution(\n\"\"\"2 0.5\n2 0.51\n1 0.49\"\"\") == '2'\n\nassert solution(\n\"\"\"1 0.5\n2 0.5\n1 0.5\"\"\") == '0'\n\nassert solution(\n\"\"\"2 0.51\n2 0.51\n1 0.49\"\"\") == '0'\n\nassert solution(\n\"\"\"2 0.5\n2 0.5\n2 0.5\"\"\") == '0'"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 0.5\n2 0.5\n1 0.5''') == '1'\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == '2'\n\nprint(solution('''4 0.5\n2 0.5\n2 0.5\n1 0.5\n1 0.5'''))\nprint(solution('''5 0.5\n2 0.5\n2 0.51\n1 0.49\n1 0.49\n1 0.49'''))\nassert solution('''2 0.5\n2 0.5\n2 0.51\n1 0.49\n1 0.49\n1 0.49''') == '1'\nassert solution('''2 0.5\n2 0.51\n1 0.49\n1 0.49\n1 0.49\n1 0.49''') == '2'\nassert solution('''2 0.5\n2 0.51\n1 0.49\n1 0.49\n1 0.49\n1 0.49''') == '2'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2 0.5\n2 0.51\n1 0.49''') == '1'\nassert solution(\n'''2 0.5\n2 0.51\n1 0.49''') == '2'\nassert solution(\n'''2 0.5\n2 0.5\n1 0.5''') == '0'\nassert solution(\n'''2 0.5\n2 0.5\n1 0.5''') == '1'\nassert solution(\n'''2 0.5\n2 0.51\n1 0.49''') == '2'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 0.5\n2 0.5\n1 0.5''') == '1'\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == '2'\nassert solution('''2 0.5\n1 0.5\n1 0.5\n1 0.5\n1 0.5\n1 0.5\n1 0.5\n1 0.5\n1 0.5''') == '2'\nassert solution('''2 0.5\n2 0.5\n2 0.5\n2 0.5\n2 0.5\n2 0.5\n2 0.5\n2 0.5\n2 0.5''') == '2'\nassert solution('''2 0.5\n2 0.5\n2 0.51\n2 0.49\n2 0.5\n2 0.5\n2 0.5\n2 0.5\n2 0.5''') == '2'\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\"\nassert solution(\"3 0.5\\n2 0.5\\n1 0.49\") == \"3\"\nassert solution(\"3 0.5\\n2 0.51\\n1 0.49\\n3 0.51\") == \"3\"\nassert solution(\"2 0.5\\n3 0.5\\n1 0.49\") == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '2'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n2 0.49\\n2 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n1 0.49\\n"
    },
    {
        "number": 3242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\nimport sys\n\nN, P = [int(s) for s in sys.stdin.readline().split()]\n\nprint(min(sum(int(p) * 10**(2*j) for j, p in enumerate(sys.stdin.readline().split())), N*(N+1)//2 - (N-1)))\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\"\nassert solution(\"2 3 3 4 5 6 7 8 9 10\\n0 1\\n0 3\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"no\"\nprint(solution(\"8 4 5\\n3 0 3 3 3\\n0 2\\n2 4\\n2 1\\n3 4\\n4 2\\n5 4\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\"))\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\n\nassert solution(\n'''5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'yes'\n\nassert solution(\n'''4 4 5\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3''') == 'yes'\nassert solution('''5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n2 3''') == 'no'\nassert solution('''3 5 1\n1 1 3 3\n0 1\n2 2\n1 3\n1 2\n3 3\n''') == 'yes'\nassert solution('''3 3 2\n1 1 3\n0 1\n2 2\n1 3\n1 2\n2 3\n2 4\n''') == 'no'\nassert solution('''2 2 1\n0 1\n1 1\n1 2\n1 2\n1 3\n1 4\n2 3\n1 4\n1 3\n1 2\n1 2\n''') == 'yes'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 4 4\") == \"yes\"\nassert solution(\"5 4 2\") == \"yes\"\nassert solution(\"5 4 4\") == \"yes\"\nassert solution(\"5 4 4\") == \"yes\"\nassert solution(\"5 4 2\") == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n') == 'yes'\nassert solution('3 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n') == 'no'\nassert solution('1 10 2\\n1 2\\n1 3\\n') == 'yes'\nassert solution('1 10 1\\n1 1\\n1 1\\n') == 'yes'\nassert solution('1 10 1\\n1 1\\n1 1\\n') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n\"\"\") == \"yes\"\nassert solution(\n\"\"\"5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n\"\"\") == \"no\"\n\"\"\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2 4\\n1 3\\n0 1\\n1 3\\n1 2\\n2 3\") == \"yes\"\nassert solution(\"5 4 3\\n0 1 3 3 3\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\"\nassert solution(\"4 6 2\\n1 2 3 1 3\\n0 1\\n0 3\\n2 3\\n3 4\") == \"yes\"\nassert solution(\"5 4 3\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\"\nassert solution(\"5 2 3\\n1 2 3\\n0 1\\n2 3\\n3 4\") == \"no\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"30\") == \"\"\nassert solution(\"100\") == \"\"\nassert solution(\"1000\") == \"\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n5\n5\n5''') == '''2\n1\n2\n'''\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5\n5\n5\n5''') == '''2\n1\n2\n2\n2\n'''\nassert solution('''4\n20\n15\n17\n14''') == '''5\n8\n2\n7\n7\n'''\nassert solution('''3\n5\n5\n5\n5''') == '''2\n1\n2\n2\n'''\nassert solution('''4\n20\n15\n17\n14''') == '''5\n8\n2\n7\n7\n'''\nassert solution('''2\n1\n1\n2\n2''') == '''1\n2\n1\n1\n'''\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n20\\n15\\n17\\n14\\n') == '8\\n2\\n7'\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n20\n15\n17\n14''') == '5 8 2 7'\nassert solution('''3\n5\n5\n5''') == '2 1 2'\nassert solution('''5\n20\n15\n17\n14\n19\n20''') == '2 1 2 5 8'\nassert solution('''6\n20\n15\n17\n14\n19\n20\n22\n23\n24\n25\n26''') == '5 8 2 7 6 9 10'\nassert solution('''9\n20\n15\n17\n14\n19\n20\n22\n23\n24\n25\n26\n27\n28\n29''') == '2 1 2 5 8 9 10 12 13'\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n5\\n5\\n5') == '2\\n1\\n2'\nassert solution('3\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7'\nassert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7'\n\"\"\"\n\nN = int(input())\nrings = [int(x) for x in input().split()]"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"100\") == \"1\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n5\n5''') == '2\\n1\\n2'\n\nassert solution('''4\n20\n15\n17\n14''') == '5\\n8\\n2\\n7'\n\nassert solution('''10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n1''') == '5\\n5\\n5\\n5\\n5'\n\nassert solution('''10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n1''') == '5\\n5\\n5\\n5\\n5'\n\nassert solution('''10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n1''') == '5\\n5\\n5\\n5\\n5'"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\".join(map(str, [1, 2, 3, 4, 5, 6, 7, 8]))) == \"\".join(map(str, [1, 2, 3, 4, 5, 6, 7, 8]))\nassert solution(\"\".join(map(str, [3, 1, 2]))) == \"\".join(map(str, [3, 1, 2]))\nassert solution(\"\".join(map(str, [1, 2, 3, 4, 5, 6, 7, 8]))) == \"\".join(map(str, [1, 2, 3, 4, 5, 6, 7, 8]))\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n5\\n5\\n5') == '2\\n1\\n2'\nassert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7'\nassert solution('4\\n20\\n15\\n17\\n14\\n8') == '5\\n8\\n2\\n7'\nassert solution('1\\n2\\n3\\n4\\n5') == '6\\n1\\n2'\nassert solution('2\\n1\\n2\\n3\\n4\\n5') == '6\\n1\\n2'\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"-h\") == \"-h\"\nassert solution(\"-h-\") == \"-h-\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\npython\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"2\\npython\\np^ main.py\\np^ -n 10\\np^ -n 10\\np^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\"\nassert solution(\"2\\npython\\np^ main.py\\np^ -n 10\\np^ -n 10\\np^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\"\nassert solution(\"2\\npython\\np^ main.py\\np^ -n 10\\np^ -n 10\\np^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '4\\n'\n    'python\\n'\n    'p^ main.py\\n'\n    '^ -n 10\\n'\n    'p^ main.py\\n'\n    '^ -n 10\\n'\n    'p^ main.py\\n'\n    '^ -n 10\\n'\n    '^^^\\n'\n    '^^^\\n'\n    '^^^\\n'\n    '^^^\\n'\n    '^^^\\n'\n) == \"\"\"python main.py\npython main.py -n 10\n\"\"\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\njava\npython\n^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''python\np^ main.py\n^ -n 10\n''') == '''python\npython main.py\npython main.py -n 10'''\n\nassert solution('''python\njava\n^\n^^^\n^^^\n''') == '''python\njava\njava\npython\njava\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''python\np^ main.py\n^ -n 10\n''') == 'python\\npython main.py\\npython main.py -n 10'\n\nassert solution('''python\njava\n^\n^^^\n^^^\n''') == 'python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution('''\n3\npython\np^ main.py\n^ -n 10\n''') == 'python\\np^ main.py\\np^ main.py -n 10'\n'''\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\npython\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"5\\npython\\njava\\n^\\n^^^\\n^^^\\n^^^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n\\tpass\\nassert solution(\\\"3\\npython\\np^ main.py\\n^ -n 10\\\") == \\\"python\\npython main.py\\npython main.py -n 10\\\"\"\nassert solution(\"5\\npython\\njava\\n^\\n^^^\\n^^^\\n^^^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n\\tpass\\nassert solution(\\\"5\\npython\\njava\\n^\\n^^^\\n^^^\\n^^^\\\") == \\\"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n\\tpass\\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python java\") == \"java\"\nassert solution(\"python java python\") == \"java\"\nassert solution(\"python java ^\") == \"java\"\nassert solution(\"python java ^ ^\") == \"java\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('python\\nmain.py\\np^ main.py\\n^ -n 10\\n') == 'python main.py -n 10'\nassert solution('python\\njava\\np^ main.py\\n^^^\\n^^^\\n') == 'java main.py'\nassert solution('python\\njava\\n^\\np^ main.py\\n^^^\\n^^^\\n') == 'java main.py'\nassert solution('python\\njava\\n^\\np^ main.py\\n^^^\\n^^^\\n') == 'java main.py'\nassert solution('python\\njava\\np^ main.py\\n^^^\\n^^^\\n') == 'java main.py'\n"
    },
    {
        "number": 3245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample_input_2) == expected_output_2\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne', '5','makes perfect sense sentence this') == 'this sentence makes perfect sense'\nassert solution('hitehre', '2', 'there hello') == 'impossible'\nassert solution('teacher', '3', 'teacher teacher teacher') == 'impossible'\nassert solution('tihssnetnceemkaesprfecetsesne', '5','makes perfect sense sentence this') == 'this sentence makes perfect sense'\nassert solution('hitehre', '2', 'there hello') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''tihssnetnceemkaesprfecetsesne\n5\nmakes\nperfect\nsense\nsentence\nthis\n''') == 'this sentence makes perfect sense'\nassert solution('''hitehre\n2\nthere\nhello\n''') == 'impossible'\nassert solution('''wewwnww\n2\nthere\nwe\n''') == 'impossible'\nassert solution('''twrewsw\n2\ntwo\ntwo\ntwo\ntwo\n''') == 'ambiguous'\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\nprint(\"passed\")\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\ntihssnetnceemkaesprfecetsesne\n5\nmakes\nperfect\nsense\nsentence\nthis\n'''\n    ) == 'this sentence makes perfect sense'\n\nassert solution(\n'''\nhitehre\n2\nthere\nhello\n'''\n    ) == 'impossible'\n\nassert solution(\n'''\nbluze\n1\nblue\n'''\n    ) == 'impossible'\n\nassert solution(\n'''\npit\n4\npipe\npipes\npip\npip\npip\npip\npipe\n'''\n    ) == 'impossible'\n\nassert solution(\n'''\ncat\n3\ncat\ncat\ncat\n'''\n    ) == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''tihssnetnceemkaesprfecetsesne''') == '''this sentence makes perfect sense'''\nassert solution('''hitehre''') == '''impossible'''\nassert solution('''hitehree''') == '''impossible'''\nassert solution('''hitehere''') == '''impossible'''\nassert solution('''hitehreee''') == '''impossible'''\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"tihssnetnceemkaesprfecetsesne\"\n    + \"5\"\n    + \"makes\"\n    + \"perfect\"\n    + \"sense\"\n    + \"sentence\"\n    + \"this\"\n) == \"this sentence makes perfect sense\"\nassert solution(\n    \"hitehre\"\n    + \"2\"\n    + \"there\"\n    + \"hello\"\n) == \"impossible\"\nassert solution(\n    \"hitehre\"\n    + \"2\"\n    + \"there\"\n    + \"hello\"\n    + \"hello\"\n) == \"impossible\"\nassert solution(\n    \"hitehre\"\n    + \"2\"\n    + \"there\"\n    + \"hello\"\n    + \"hello\"\n    + \"hello\"\n) == \"impossible\"\nassert solution(\n    \"hitehre\"\n    + \"2\"\n    + \"there\"\n    + \"hello\"\n    + \"hello\"\n    + \"hello\"\n    + \"hello\"\n) == \"impossible\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    'tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\\nhello\\nthis sentence makes perfect sense\\n') == \"this sentence makes perfect sense\"\nassert solution(\n    'hitehre\\n2\\nthere\\nhello\\n') == \"impossible\"\nassert solution(\n    'hihellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n\nfrom collections import Counter\nfrom typing import List, Tuple"
    },
    {
        "number": 3246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\ntihssnetnceemkaesprfecetsesne\n5\nmakes\nperfect\nsense\nsentence\nthis\n''') == 'this sentence makes perfect sense'\nassert solution(\n'''\nhitehre\n2\nthere\nhello\n''') == 'impossible'\nassert solution(\n'''\nweee\n5\ngreat\nlol\n''') == 'impossible'\nassert solution(\n'''\nweee\n5\nweee\ngreek\nloll\n''') == 'ambiguous'\n'''\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\n\"\"\""
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0 1') == '0'\nassert solution('1 0') == '0'\nassert solution('1 1') == '1'\nassert solution('0 2') == '0'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n\") == 4\nassert solution(\"2 2\\n\") == 16\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom math import factorial\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n'''\n\n\n'''\nSubmission Link: https://www.codechef.com/LRNNBQ20/problems/MASTERSKNIGHTS\n\n'''\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\nassert solution('3 4') == '6'\nassert solution('3 5') == '20'\nassert solution('3 6') == '44'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n') == '4'\nassert solution('2 2\\n') == '16'\nprint(\"Passed!\")\n\"\"\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2''') == '4'\nassert solution('''2 2''') == '16'\nassert solution('''3 3''') == '40320'\nassert solution('''4 4''') == '806432'\nassert solution('''5 5''') == '157248'\n"
    },
    {
        "number": 3247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n\"\"\"\n\"\"\"\nimport sys"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nabcbab\n2\ncb\ncbab\n''') == '2'\nassert solution('''4\nabab\n2\nbac\nbaba\n''') == '4'\nassert solution('''7\nabcdefg\n2\nbc\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\nabcbab\n2\ncb\ncbab\n''') == '2'\n\nassert solution('''4\nabab\n2\nbac\nbaba\n''') == '4'\n\nassert solution('''4\na\n4\nab\nab\n''') == '1'\n\nassert solution('''4\nabab\n2\nbac\nbaba\n''') == '3'\n\nassert solution('''6\nabcdef\n1\nabcdef\n''') == '0'"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\nabcbab\n2\ncb\ncbab''') == '2'\nassert solution('''4\nabab\n2\nbac\nbaba''') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == \"0\"\nassert solution(\"abcab\") == \"1\"\nassert solution(\"abcbab\") == \"2\"\nassert solution(\"a\") == \"0\"\nassert solution(\"ab\") == \"1\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\nfrom functools import lru_cache"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\nabab\\nbac\\nbaba\\n') == '2'\nassert solution('1\\na\\na\\n') == '0'\nassert solution('4\\nabab\\nbac\\nbaba\\n') == '4'\nassert solution('2\\na\\na\\n') == '0'\nassert solution('4\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n6\nabcbab\n2\ncb\ncbab\n''') == '2'\n\nassert solution('''\n4\nabab\n2\nbac\nbaba\n''') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('a') == None\nassert solution('b') == None\nassert solution('ab') == None\nassert solution('abc') == None\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n'\n'cb\\ncbab\\n'\n'bac\\nbaba\\n'\n) == '2\\n'\n\nassert solution('5\\nabcd\\n2\\nbc\\nbd\\n'\n'cd\\ncd\\n'\n'a\\nab\\n'\n'cd\\ncd\\n'\n'b\\nab\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'c\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'c\\ncd\\n'\n'cd\\ncd\\n'\n'b\\nab\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'a\\nab\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'a\\nab\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'b\\nab\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'b\\nab\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'c\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'b\\nab\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'b\\nab\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'b\\nab\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'b\\nab\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\ncd\\n'\n'cd\\n"
    },
    {
        "number": 3248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\nabcbab\n2\ncb\ncbab''') == '2'\n\nassert solution('''4\nabab\n2\nbac\nbaba''') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''50''') == '''6'''\nassert solution('''24''') == '''4'''\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6\\n85\\n90\\n95\\n100\\n105'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 50') == '6\\n85.0\\n90.0\\n95.0\\n100.0\\n105.0'\nassert solution('100 50') == '4\\n17.071067\\n20\\n22.928932\\n25.356485\\n30'\nassert solution('100 500') == '0'\nassert solution('50 50') == '0'\nassert solution('50 500') == '0'\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n-----\n'''\n\n'''\nfrom math import sqrt, ceil\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n50\n4\n110 10\n80 10\n80 0\n110 0\n'''\n) == '6\\n85\\n90\\n95\\n100\\n105\\n'\n\nassert solution(\n'''\n24\n3\n10 10\n30 10\n20 20\n'''\n) == '4\\n17.071067\\n20\\n22.928932\\n'\n\nassert solution(\n'''\n3\n2\n1 1\n2 3\n3 2\n'''\n) == '4\\n1.5\\n1.3333333333333333\\n1.5\\n'\n\nassert solution(\n'''\n10\n3\n3 3\n3 0\n4 2\n2 1\n5 4\n2 1\n5 1\n2 2\n4 2\n'''\n) == '8\\n10.0\\n8.8333333333333334\\n8.0\\n'\n\nassert solution(\n'''\n10\n3\n3 3\n3 0\n4 2\n2 1\n5 4\n2 1\n5 1\n2 2\n4 2\n'''\n) == '8\\n10.0\\n8.8333333333333334\\n8.0\\n'"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6\\n85\\n90\\n95\\n100\\n105'\nassert solution('''24\n3\n10 10\n30 10\n20 20\n''') == '4\\n17.071067\\n20\\n22.928932'\nassert solution('''20\n3\n5 3\n-2 3\n0 0\n3 1\n0 1\n5 -1\n-1 1\n-1 2\n5 2\n0 2\n3 -2\n1 2\n1 3\n1 -2\n5 1\n1 1\n3 1\n0 3\n-3 -1\n0 -1\n3 -2\n0 -2\n5 -3\n3 -2\n-2 -3\n1 -3\n3 -3\n5 1\n0 -3\n-3 1\n1 -3\n-2 -3\n1 -2\n1 -1\n-1 -2\n1 -3\n-1 -3\n-1 -1\n3 -2\n0 -1\n-3 -1\n-3 0\n-1 -2\n-1 -1\n-2 -2\n-1 -1\n0 -2\n-3 -2\n0 -2\n-1 -1\n-1 -2\n-1 -3\n-1 -3\n2 -3\n2 -2\n2 -1\n-1 -2\n2 -2\n2 -3\n-1 -2\n-2 -2\n-2 -3\n2 -3\n2 -1\n0 -3\n-2 -3\n-3 -2\n2 -3\n-3 -3\n-2 -3\n2 -3\n2 -2\n2 -1\n-1 -2\n2 -2\n2 -3\n2 -3\n-3 -3\n-3 -2\n2 -3\n2 -2\n-3 -2\n-2 -3\n2 -3\n-3 -3\n2 -2\n2 -1\n0 -2\n-2 -2\n-3 -2\n2 -2\n-3 -3\n-2 -3\n2 -3\n-3 -3\n-2 -3\n2 -3\n-3 -3\n2 -2\n2 -1\n0 -2\n-2 -2\n-3 -2\n2 -2\n-3 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n-1 -2\n2 -2\n2 -3\n2 -3\n-3 -3\n-3 -2\n2 -3\n2 -2\n-3 -2\n-2 -3\n2 -3\n-3 -3\n2 -2\n2 -1\n0 -2\n-2 -2\n-3 -2\n2 -2\n-3 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n-1 -2\n2 -2\n2 -3\n2 -3\n-3 -3\n-3 -2\n2 -3\n2 -2\n-3 -2\n-2 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n0 -2\n-2 -2\n-3 -2\n2 -2\n-3 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n-1 -2\n2 -2\n2 -3\n2 -3\n-3 -3\n-3 -2\n2 -3\n2 -2\n-3 -2\n-2 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n0 -2\n-2 -2\n-3 -2\n2 -2\n-3 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n-1 -2\n2 -2\n2 -3\n2 -3\n-3 -3\n-3 -2\n2 -3\n2 -2\n-3 -2\n-2 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n0 -2\n-2 -2\n-3 -2\n2 -2\n-3 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n-1 -2\n2 -2\n2 -3\n2 -3\n-3 -3\n-3 -2\n2 -3\n2 -2\n-3 -2\n-2 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n0 -2\n-2 -2\n-3 -2\n2 -2\n-3 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n-1 -2\n2 -2\n2 -3\n2 -3\n-3 -3\n-3 -2\n2 -3\n2 -2\n-3 -2\n-2 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n0 -2\n-2 -2\n-3 -2\n2 -2\n-3 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n-1 -2\n2 -2\n2 -3\n2 -3\n-3 -3\n-3 -2\n2 -3\n2 -2\n-3 -2\n-2 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n0 -2\n-2 -2\n-3 -2\n2 -2\n-3 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n-1 -2\n2 -2\n2 -3\n2 -3\n-3 -3\n-3 -2\n2 -3\n2 -2\n-3 -2\n-2 -3\n2 -3\n-3 -3\n2 -3\n2 -2\n2 -1\n0 -2\n-2 -2\n-3 -2"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6\\n85\\n90\\n95\\n100\\n105'\nassert solution(\n'''24\n3\n10 10\n30 10\n20 20\nSample Output 2:\n4\n17.071067\n20\n22.928932\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('1000000000 1000000000') == 'no'\n\"\"\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 11\\n') == 'yes'\nassert solution('10 11\\n') == 'yes'\nassert solution('5 4\\n') == 'no'\nassert solution('10 7\\n') == 'yes'\nassert solution('10 6\\n') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('10 9') == 'no'\nassert solution('11 9') == 'no'\nassert solution('7 19') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('10 10') == 'no'\nassert solution('10 1') == 'no'\nassert solution('1 1') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\nassert solution(\"20 8\") == \"no\"\nassert solution(\"10 16\") == \"yes\"\nassert solution(\"10 14\") == \"no\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'yes'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'yes'\n\n\"\"\"\n\nn,d=map(int,stdin.split())\nflag=0\nfor i in range(2,int(d**0.5)+1):\n    if d%i==0:\n        flag=1\n        break\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == \"yes\"\nassert solution('10 11') == \"yes\"\nassert solution('10 7') == \"no\"\nassert solution('10 10') == \"no\"\nassert solution('1 1') == \"no\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\nassert solution(\"2 10\") == \"no\"\nassert solution(\"5 14\") == \"no\"\nassert solution(\"10 7\") == \"yes\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3 4\n2 5\n1 6''') == '3\\n1 6\\n2 5\\n3 4'\nassert solution('''5\n10 30\n20 40\n30 50\n10 60\n30 40''') == '3\\n10 60\\n30 50\\n30 40'\n\nimport sys"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 4\n2 5\n1 6''') == '3'\nassert solution('''5\n10 30\n20 40\n30 50\n10 60\n30 40''') == '3'\nassert solution('''1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n95 97\n96 98\n96 99\n97 100\n97 101\n97 102\n97 103\n97 104\n97 105\n97 106\n97 107\n97 108\n97 109\n97 110\n97 111\n97 112\n97 113\n97 114\n97 115\n97 116\n97 117\n97 118\n97 119\n97 120\n97 121\n97 122\n97 123\n97 124\n97 125\n97 126\n97 127\n97 128\n97 129\n97 130\n97 131\n97 132\n97 133\n97 134\n97 135\n97 136\n97 137\n97 138\n97 139\n97 140\n97 141\n97 142\n97 143\n97 144\n97 145\n97 146\n97 147\n97 148\n97 149\n97 150\n97 151\n97 152\n97 153\n97 154\n97 155\n97 156\n97 157\n97 158\n97 159\n97 160\n97 161\n97 162\n97 163\n97 164\n97 165\n97 166\n97 167\n97 168\n97 169\n97 170\n97 171\n97 172\n97 173\n97 174\n97 175\n97 176\n97 177\n97 178\n97 179\n97 180\n97 181\n97 182\n97 183\n97 184\n97 185\n97 186\n97 187\n97 188\n97 189\n97 190\n97 191\n97 192\n97 193\n97 194\n97 195\n97 196\n97 197\n97 198\n97 199\n97 200\n97 201\n97 202\n97 203\n97 204\n97 205\n97 206\n97 207\n97 208\n97 209\n97 210\n97 211\n97 212\n97 213\n97 214\n97 215\n97 216\n97 217\n97 218\n97 219\n97 220\n97 221\n97 222\n97 223\n97 224\n97 225\n97 226\n97 227\n97 228\n97 229\n97 230\n97 231\n97 232\n97 233\n97 234\n97 235\n97 236\n97 237\n97 238\n97 239\n97 240\n97 241\n97 242\n97 243\n97 244\n97 245\n97 246\n97 247\n97 248\n97 249\n97 250\n97 251\n97 252\n97 253\n97 254\n97 255\n97 256\n97 257\n97 258\n97 259\n97 260\n97 261\n97 262\n97 263\n97 264\n97 265\n97 266\n97 267\n97 268\n97 269\n97 270\n97 271\n97 272\n97 273\n97 274\n97 275\n97 276\n97 277\n97 278\n97 279\n97 280\n97 281\n97 282\n97 283\n97 284\n97 285\n97 286\n97 287\n97 288\n97 289\n97 290\n97 291\n97 292\n97 293\n97 294\n97 295\n97 296\n97 297\n97 298\n97 299\n97 300\n97 301\n97 302\n97 303\n97 304\n97 305\n97 306\n97 307\n97 308\n97 309\n97 310\n97 311\n97 312\n97 313\n97 314\n97 315\n97 316\n97 317\n97 318\n97 319\n97 320\n97 321\n97 322\n97 323\n97 324\n97 325\n97 326\n97 327\n97 328\n97 329\n97 330\n97 331\n97 332\n97 333\n97 334\n97 335\n97 336\n97 337\n97 338\n97 339\n97 340\n97 341\n97 342\n97 343\n97 344\n97 345\n97 346\n97 347\n97 348\n97 349\n97 350\n97 351\n97 352\n97 353\n97 354\n97 355\n97 356\n97 357\n97 358\n97 359\n97 360\n97 361\n97 362\n97 363\n97 364\n97 365\n97 366\n97 367\n97 368\n97 369\n97 370\n97 371\n97 372\n97 373\n97 374\n97 375\n97 376\n97 377\n97 378\n97 379\n97 380\n97 381\n97 382\n97 383\n97 384\n97 385\n97 386\n97 387\n97 388\n97 389\n97 390\n97 391\n97 392\n97 393\n97 394\n97 395\n97 396\n97 397\n97 398\n97 399\n97 400\n97 401\n97 402\n97 403\n97 404\n97 405\n97 406\n97 407\n97 408\n97 409\n97 410\n97 411\n97 412\n97 413\n97 414\n97 415\n97 416\n97 417\n97 418\n97 419\n97 420\n97 421\n97 422\n97 423\n97 424\n97 425\n97 426\n97 427\n97 428\n97 429\n97 430\n97 431\n97 432\n97 433\n97 434\n97 435\n97 436\n97 437\n97 438\n97 439\n97 440\n97 441\n97 442\n97 443\n97 444\n97 445\n97 446\n97 447\n97 448\n97 449\n97 450\n97 451\n97 452\n97 453\n97 454\n97 455\n97 456\n97 457\n97 458\n97 459\n97 460\n97 461\n97 462\n97 463\n97 464\n97 465\n97 466\n97 467\n97 468\n97 469\n97 470\n97 471\n97 472\n97 473\n97 474\n97 475\n97 476\n97 477\n97 478\n97 479\n97 480\n97 481\n97 482\n97 483\n97 484\n97 485\n97 486\n97 487\n97 488\n97 489\n97 490\n97 491\n97 492\n97 493\n97 494\n97 495\n97 496\n97 497\n97 498\n97 499\n97 500\n97 501\n97 502\n97 503\n97 504\n97 505\n97 506\n97 507\n97 508\n97 509\n97 510\n97 511\n97 512\n97 513\n97 514\n97 515\n97 516\n97 517\n97 518\n97 519\n97 520\n97 521\n97 522\n97 523\n97 524\n97 525\n97 526\n97 527\n97 528\n97 529\n97 530\n97 531\n97 532\n97 533\n97 534\n97 535\n97 536\n97 537\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 4\n2 5\n1 6''') == '3\\n1 6\\n2 5\\n3 4'\nassert solution('''5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '3\\n10 60\\n30 50\\n30 40'"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"\"\nassert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"\"\nassert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '8'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30') == '29'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 4\n2 5\n1 6\n''') == '3'\n\nassert solution('''5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '3'\n\nassert solution('''1\n2 3\n3 4\n''') == '1'\n\nassert solution('''5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '1'\n\nassert solution('''1\n2 3\n''') == '0'"
    },
    {
        "number": 3251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6890'\n\nprint('You are awesome!')\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''2 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\n'''\n\n'''\nimport sys\nsys.stdin = open('test/03.txt')\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 1') == '1828'\nassert solution('5 2') == '5836'\nassert solution('10 10 5') == '138'\nassert solution('5 2') == '16'\nassert solution('5 1') == '144'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1 2\\n\") == \"\"\nassert solution(\"1 2 3\\n\") == \"\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"5836\"\nassert solution(\"10 10 5\") == \"5836\"\nassert solution(\"9 8 10\") == \"1828\"\nassert solution(\"4 12 20\") == \"4896\"\nassert solution(\"12 4 8\") == \"4896\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\nassert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\nassert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '5836'\n\nassert solution('''\n1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '0'\n\nassert solution('''\n2 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '1828'\n\nassert solution('''\n2 3\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '0'\n\nassert solution('''\n2 3\n3 1 1\n2 3 1\n2 3 1\n1 1 1\n1 1 1\n''') == '4'"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\nassert solution('2 3\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'\nassert solution('2 3\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n9 3 8') == '1663'\nassert solution('2 3\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n9 3 8\\n4 4 12') == '5346'\nassert solution('2 3\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n9 3 8\\n4 4 12\\n4 4 4') == '5346'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\nassert solution('''5 2\n4 5 5\n3 4 4\n2 3 3\n1 2 2\n1 2 1''') == '0'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '36'\n"
    },
    {
        "number": 3252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\n'''\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    7 2401 3299 0\n    6 2401 2399 0\n    2 750 750 99\n''') == '50'\nassert solution('''\n    3\n    7 100 200 200\n    8 100 300 200\n    9 100 400 200\n''') == 'impossible'\nassert solution('''\n    4\n    8 60 45 90\n    7 80 45 80\n    6 78 45 78\n    5 76 45 76\n''') == 'impossible'\nassert solution('''\n    4\n    9 52 438 4\n    8 63 45 38\n    6 67 43 45\n    5 62 43 45\n''') == 'impossible'\nassert solution('''\n    4\n    6 9 0 0\n    5 8 0 0\n    4 7 0 0\n    3 6 0 0\n''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n7\\n1\\n1\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == '50'\nassert solution('7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('1\\n2') == 'impossible'\nassert solution('2\\n1') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n4\\n5 100 200 200\\n6 100 300 200\\n7 100 400 200\\n8 100 500 200\\n9 100 600 200\") == \"50\"\nassert solution(\"6\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n4\\n5 100 200 200\\n6 100 300 200\\n7 100 400 200\\n8 100 500 200\\n9 100 600 200\") == \"impossible\"\nassert solution(\"3\\n6 7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n4\\n5 100 200 200\\n6 100 300 200\\n7 100 400 200\\n8 100 500 200\\n9 100 600 200\") == \"impossible\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n4\\n5 100 200 200\\n6 100 300 200\\n7 100 400 200\\n8 100 500 200\\n9 100 600 200\") == \"50\"\nassert solution(\"6\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n4\\n5 100 200 200\\n6 100 300 200\\n7 100 400 200\\n8 100 500 200\\n9 100 600 200\") == \"impossible\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99''') == '50'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200''') == 'impossible'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 500''') == 'impossible'\nassert solution('''3\n7 1000 1000 1000\n8 1000 1000 1000\n9 1000 1000 1000''') == 'impossible'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 1000 1000 1000\n10 100 200 200\n11 100 300 200\n12 100 400 200\n13 100 500 200''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == '50'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200\n''') == 'impossible'\nassert solution('''2\n2 100 200 100\n3 100 300 200\n''') == 'impossible'\nassert solution('''5\n4 1221 715 8\n5 1221 817 19\n6 1221 948 31\n7 1221 815 20\n8 1221 808 22\n9 1221 943 29\n10 1221 858 32\n11 1221 957 34\n''') == '37'\nassert solution('''7\n100 8000 5000 3000 2000 1000 500 10\n100 8000 5000 3000 2000 1000 500 10\n100 8000 5000 3000 2000 1000 500 10\n100 8000 5000 3000 2000 1000 500 10\n100 8000 5000 3000 2000 1000 500 10\n100 8000 5000 3000 2000 1000 500 10\n100 8000 5000 3000 2000 1000 500 10\n''') == '37'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '50'\nassert solution('7\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == '50'\nassert solution('7\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n8 100 300 200') == 'impossible'\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible'\nassert solution('10\\n1000000 1000000 1 1\\n3 1000000 999999 1') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.splitlines()[0]\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200''') == '50'\nassert solution('''1\n1400 10200 100\n99 200 200 200\n99 200 500 100\n100 200 200 300\n100 500 200 300\n200 200 500 200\n300 200 500 100''') == 'impossible'\nassert solution('''5\n2 104579 74904 70\n1 104579 1011 0\n2 104579 87766 2\n1 104579 74904 3\n2 104579 1011 0\n3 104579 92230 1\n1 104579 87766 1\n2 104579 74904 2\n2 104579 1011 0\n3 104579 92230 1\n1 104579 74904 3''') == 'impossible'\nassert solution('''5\n2 104579 74904 70\n1 104579 1011 0\n2 104579 87766 2\n1 104579 74904 3\n2 104579 1011 0\n3 104579 92230 1\n1 104579 87766 1\n2 104579 74904 2\n2 104579 1011 0\n3 104579 92230 1\n1 104579 74904 3''') == 'impossible'\nassert solution('''5\n2 104579 74904 70\n1 104579 1011 0\n2 104579 87766 2\n1 104579 74904 3\n2 104579 1011 0\n3 104579 92230 1\n1 104579 87766 1\n2 104579 74904 2\n2 104579 1011 0\n3 104579 92230 1\n1 104579 74904 3''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99''') == '50'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200''') == 'impossible'\nassert solution('''10\n1791 2000 4300 0\n1536 1040 4599 0\n1177 1629 3398 0\n834 165 4216 0\n737 1000 1587 0\n656 1019 4226 0\n61 1038 6314 0\n544 1052 5165 0\n519 1074 4292 0''') == '20'\nassert solution('''10\n3 100 200 200\n6 100 300 200\n7 100 400 200\n8 100 500 200\n9 100 600 200\n10 100 700 200\n11 100 800 200\n12 100 900 200\n13 100 1000 200\n14 100 1100 200\n15 100 1200 200\n16 100 1300 200\n17 100 1400 200\n18 100 1500 200\n19 100 1600 200''') == 'impossible'\nassert solution('''7\n7 100 200 200\n8 100 300 200\n9 100 400 200\n10 100 500 200\n11 100 600 200\n12 100 700 200\n13 100 800 200\n14 100 900 200\n15 100 1000 200\n16 100 1100 200\n17 100 1200 200\n18 100 1300 200\n19 100 1400 200\n20 100 1500 200\n21 100 1600 200''') == 'impossible'\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5.0''') == \"0 0 0 0 1\"\nassert solution('''4.5''') == \"0 0 0 1 1\"\nassert solution('''10.1''') == \"0 0 0 1 1\"\nassert solution('''10.5''') == \"0 0 0 1 1\"\nassert solution('''11.1''') == \"0 0 0 1 1\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\"\n\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n\"\"\""
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\"\nassert solution(\"6.5\") == \"0 0 0 1 2\"\nassert solution(\"7.5\") == \"0 0 0 1 2 3\"\nassert solution(\"8.5\") == \"0 0 0 1 2 3 4\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\\n\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\\n\") == \"3\"\nassert solution(\"8 5 1\\n1 7 8 2 6 4 3 5\\n\") == \"6\"\nassert solution(\"8 9 3\\n1 7 8 2 6 4 3 5\\n\") == \"4\"\nassert solution(\"8 11 4\\n1 7 8 2 6 4 3 5\\n\") == \"5\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''8 3 1'''\n) == '8'\nassert solution(\n'''8 2 1'''\n) == '3'\nassert solution(\n'''9 1 1'''\n) == '0'\nassert solution(\n'''5 0 0'''\n) == '4'\nassert solution(\n'''1 2 4 3'''\n) == '2'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5\\n') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3'\nassert solution('8 1 1\\n1 7 8 2 6 4 3 5\\n') == '1'\nassert solution('7 1 1\\n1 7 8 2 6 4 3 5\\n') == '1'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '8'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 7 8 2 6 4 3 5') == '8'\nassert solution('8 2 1') == '3'\nassert solution('1 7 8 2 6 4 3 5') == '8'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 3 1\n1 7 8 2 6 4 3 5\n''') == '8'\n\nassert solution('''8 2 1\n1 7 8 2 6 4 3 5\n''') == '3'\n\nassert solution('''8 2 1\n1 7 8 2 6 4 3 5\n''') == '3'\n\nassert solution('''8 2 1\n-1000000 -1000000 1\n1 7 8 2 6 4 3 5\n''') == '8'\n\nassert solution('''8 2 1\n-1000000 -1000000 1\n1 7 8 2 6 4 3 5\n''') == '8'"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('1 7 8 2 6 4 3 5') == '8'\nassert solution('1 7 8 2 6 4 3 5') == '8'\nassert solution('8 2 1') == '3'\nassert solution('1 7 8 2 6 4 3 5') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 3 1\n1 7 8 2 6 4 3 5''') == '8'\nassert solution('''8 2 1\n1 7 8 2 6 4 3 5''') == '3'\nassert solution('''8 2 3\n1 7 8 2 6 4 3 5''') == '3'\nassert solution('''8 4 3\n1 7 8 2 6 4 3 5''') == '4'\nassert solution('''8 5 3\n1 7 8 2 6 4 3 5''') == '4'\n"
    },
    {
        "number": 3255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5\\n') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3'\nassert solution('3 3\\n2 2 2\\n') == '4'\nassert solution('10 2\\n1 2 3 4 5 6 7 8 9 10\\n') == '6'\nassert solution('10 4\\n1 2 3 4 5 6 7 8 9 10\\n') == '4'\nassert solution('6 3\\n2 2 2\\n') == '3'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4 2\n2 3 4 1\n''') == '3'\n\nassert solution(\n'''\n6 3\n2 2 2 4 4 4\n''') == '4'\n\nassert solution(\n'''\n8 4\n5 5 5 5 5 5 5 5\n''') == '15'\n\nassert solution(\n'''\n14 5\n6 6 6 6 6 6 6 6 6\n''') == '96'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4'\nassert solution('7 3\\n2 2 2 4 4 4 1\\n') == '4'\nassert solution('8 3\\n2 2 2 4 4 4 1 2\\n') == '4'\nassert solution('9 3\\n2 2 2 4 4 4 1 2 2 3\\n') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\"\nassert solution(\"7 4\\n2 2 2 4 4 4\") == \"4\"\nassert solution(\"5 5\\n2 2 2 4 4\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4'\nassert solution('5 5\\n2 1 5 4 3 2\\n') == '0'\nassert solution('8 8\\n1 1 1 1 1 1 1 1\\n') == '256'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 2\n2 3 4 1\"\"\") == \"3\"\nassert solution(\"\"\"5 3\n2 2 2 4 4 4\"\"\") == \"4\"\nassert solution(\"\"\"9 3\n2 2 2 4 4 4 4 1\"\"\") == \"4\"\nassert solution(\"\"\"13 10\n2 2 2 4 4 4 4 4 1\"\"\") == \"4\"\nassert solution(\"\"\"5 1\n0 1 1 0 1\"\"\") == \"3\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n2 3 4 1''') == '3'\nassert solution('''6 3\n2 2 2 4 4 4''') == '4'\nassert solution('''15 4\n2 2 2 4 4 4 4 2 2 2''') == '4'\nassert solution('''10 10\n1 1 1 1 1 1 1 1 1 1''') == '1'\nassert solution('''11 11\n1 1 1 1 1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 4 1') == '3'\nassert solution('2 2 2 4 4 4') == '4'\nassert solution('6 3 2 2 4 4 4') == '4'\nassert solution('2 3 4 1') == '3'\nassert solution('2 2 2 4 4 4') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n2 3 4 1''') == '3'\nassert solution('''6 3\n2 2 2 4 4 4''') == '4'\nassert solution('''6 3\n2 2 2 4 4 4''') == '4'\nassert solution('''6 3\n2 2 2 4 4 4''') == '4'\nassert solution('''6 3\n2 2 2 4 4 4''') == '4'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 3 3.0') == '-1'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 1 1.732050') == '1.732050808'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1.0'\nassert solution('1 2 2.0') == '-1.0'\nassert solution('1 1 0.0') == '-1.0'\nassert solution('1 1 1.0') == '1.0'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == \"-1\"\nassert solution(\"1 1 3.0000001\") == \"1.732050808\"\nassert solution(\"1 1 3.0000001\") == \"1.732050808\"\nassert solution(\"1 1 3.00000001\") == \"1.732050808\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nprint(solution('1 1 3.0'))\n\"\"\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == -1\nassert solution('1 1 1.732050') == 1.732050808\nassert solution('1 1 3.0') == -1\n'''\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 3.0\") == \"1.732050808\"\nassert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3\") == \"-1\"\nassert solution(\"1 1 1\") == \"1.732050808\"\nassert solution(\"1 1 1\") == \"1.732050808\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 10 100') == '9.999999999000002'\nassert solution('0 0 1') == '0.0'\nassert solution('0 0 1.5') == '0.0'\nassert solution('0 0 1.9999999999999') == '0.0'\nassert solution('0 0 2') == '0.0'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\".75\") == \"2.4999999987500003\"\nassert solution(\"0 -100 100\") == \"9.999999999000002\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"0 -1 1\") == \"0.5\"\nassert solution(\"1 -1 1\") == \"0.5\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(solution(stdin))\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n0 1 0\n0 -1 0\n.75''') == '2.4999999987500003'\nassert solution('''1\n1 1 -100\n1 -1 100\n.80''') == '9.999999999000002'\nassert solution('''1\n2 1 -100\n2 -1 100\n.40''') == '13.33333333333333'\nassert solution('''1\n2 1 -100\n2 -1 100\n.50''') == '12.33333333333333'\nassert solution('''1\n2 1 -100\n2 -1 100\n.75''') == '15.0'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n2 3 4\n.75''') == '2.4999999987500003'\nassert solution('''1\n0 0 0\n0 -1 0\n.80''') == '9.999999999000002'\nassert solution('''1\n1 -1 -2\n0 -1 0\n.80''') == '8.0000000000000002'\nassert solution('''1\n1 1 1\n.80\n1 -1 -2\n1 -1 -2\n.80''') == '1.0000000000000002'\nassert solution('''1\n-1 -1 0\n0 -1 0\n.80''') == '1.0000000000000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n-100 -100 100\\n.80') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\nassert solution('''3\n4 8 2\n0 -15 1000\n0 100 100\n.92\n''') == '2.22222222222222226'\nassert solution('''4\n1 3 1 1\n-5 0 0 0\n-15 1 2 3\n0.5\n''') == '1.1111044460165404'\nassert solution('''5\n10 1 1 1 1\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n.5\n''') == '1.0000000000000'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\".75\\n0 100 10\\n0 -100 100\\n.80\") == '2.4999999987500003'\n\nassert solution(\"1\\n3 4 2\\n.75\\n0 100 10\\n0 -100 100\\n.80\\n0.76\\n0.88\\n0.75\\n0.73\\n0.82\\n0.78\\n0.75\\n0.72\\n0.79\\n0.76\\n0.74\\n0.74\\n0.71\\n0.77\\n0.76\\n0.74\\n0.74\\n0.76\\n0.74\\n0.71\\n0.75\\n0.74\\n0.73\\n0.71\\n0.76\\n0.73\\n0.72\\n0.79\\n0.75\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.76\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\n0.77\\n0.76\\n0.74\\n0.73\\n0.72\\n0.79\\n0.75\\n0.74\\n0.73\\n0.71\\"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''1\n-10 -3 4\n.99\n''') == '-8.049999999999998'\nassert solution('''2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\nassert solution('''2\n-2 -2 -2\n-0.6 -0.3 -0.3\n.7\n''') == '-0.34999999999999983'\nassert solution('''3\n0 -2 3\n0 -1 -2\n0 1 2\n.9\n''') == '-1.5'\n"
    },
    {
        "number": 3258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\\\n1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''\\\n2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\nassert solution('''\\\n3\n0 100 10\n0 -100 100\n.75\n''') == '8.00000000000002'\nassert solution('''\\\n4\n0 100 10\n0 -100 100\n.70\n''') == '5.600000000000006'\nassert solution('''\\\n5\n0 100 10\n0 -100 100\n.60\n''') == '3.79999999999999'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin1) == stdout1\nassert solution(stdin2) == stdout2\nassert solution(stdin3) == stdout3\nassert solution(stdin4) == stdout4\nassert solution(stdin5) == stdout5\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '0\\n3\\n'\nassert solution('3 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '3\\n2\\n1\\n0\\n'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'\nassert solution('5 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'\nassert solution('6 10\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 6\\n1 1 5 1 2\\n2 1 6') == '0\\n3\\n'\n\n-----Note-----\nThis is the second one of the eight challenges of the Coding Ninjas rated for the top 5% on codewars.\n\n-----Solution Summary-----\nHere's a brief summary of the solution:\n\n* We create a list with the number of empty boxes. Each empty box is represented by 0.\n* Then we use for loops to add the value of the empty box to the number of stones in that box.\n* Then we use the modulo function to set the number of stones.\n* We print the number of stones.\n* Then we use if statements to set the empty boxes, and iterate through the list from the starting box to the ending box.\n* The if statements check that the empty box is in the correct range. If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* The for loops iterate through the list, from the starting box to the ending box, and sets the number of stones.\n* Then the if statement checks if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* We use the modulo function to set the number of stones.\n* We print the number of stones.\n* We use the for loops to iterate through the list from the starting box to the ending box.\n* If the empty box is in the correct range, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* Then we use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* Then we use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* Then we use for loops to iterate through the list from the starting box to the ending box.\n* If the empty box is in the correct range, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* We use the modulo function to set the number of stones.\n* We print the number of stones.\n* We use the modulo function to set the number of stones.\n* We print the number of stones.\n* We use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* We use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* Then we use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* We use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* Then we use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* We use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* Then we use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* We use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* We use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* Then we use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* We use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* We use if statements to check if the empty box is in the correct range.\n* If it is, it sets the number of stones.\n* The modulo function is used to set the number of stones.\n* We print the number of stones.\n* We use if statements to check if the empty box is in the correct range.\n* If it is, it"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 2 1 2') == '0'\nassert solution('1 1 1 1 1 2') == '3'\nassert solution('1 1 1 1 1 2') == '2'\nassert solution('1 1 1 1 1 2') == '1'\nassert solution('1 1 1 1 1 2') == '2'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4') == '2'\nassert solution('4 5') == '1'\nassert solution('6 3') == '0'\nassert solution('6 3') == '0'\nassert solution('6 3') == '0'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n''') == '0\\n3\\n'\nassert solution('''4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '3\\n2\\n1\\n0\\n'\nassert solution('''1 2\n2 2 2\n3 2\n''') == '3\\n'\nassert solution('''1 2\n3 2\n''') == '0\\n'\nassert solution('''2 2\n3 2\n''') == '0\\n'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''6 3\n2 1 6\n1 1 5 1 2\n2 1 6''') == '''0\n3\n'''\n\nassert solution(\n'''1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '''1\n0\n'''\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 1') == '3'\nassert solution('1 2 3') == '1'\nassert solution('3 1 2') == '0'\nassert solution('2 1 3') == '0'\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 1 4 3 4''') == '1'\nassert solution('''2 2\n2 1 6\n1 1 5 1 2\n2 1 6\n2 2 2\n2 3 3\n2 4 4\n2 5 5''') == '3'\nassert solution('''10 10\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10''') == '10'\nassert solution('''3 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10''') == '13'\nassert solution('''5 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10''') == '100'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '0\\n3\\n'"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\",\n\"\"\"\n\n-----Solution-----\n\n-----Answer-----\n\n------\n\n\"\"\",\n\"\"\"\n\n-----Test-----\n\n\"\"\",\n\"\"\"\n\n-----Answer-----\n\n\"\"\"\n]"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 7 1000000007') == 1\nassert solution('3 2 1000000007') == 4\nassert solution('3 4 1000000007') == 0\nassert solution('10 2 1000000007') == 8\nassert solution('10 4 1000000007') == 4\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 7 1000000007\") == \"4\"\nassert solution(\"3 2 1000000007\") == \"4\"\nassert solution(\"10 2 1000000007\") == \"4\"\nassert solution(\"7 5 1000000007\") == \"4\"\nassert solution(\"10 2 500000007\") == \"4\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 7 1000000007''') == '1'\nassert solution('''3 2 1000000007''') == '4'\nassert solution('''3 3 1000000007''') == '1'\nassert solution('''3 5 1000000007''') == '1'\nassert solution('''3 6 1000000007''') == '2'\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\nassert solution('10 20 1000000007') == '4'\nassert solution('1000 1000 1000000007') == '1'\nassert solution('1000 1000 10000000007') == '1'\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\nassert solution('3 2 10 ** 9 + 7') == '4'\nassert solution('1 2 3') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 10\\n6\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\"\n\nimport sys\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 10\n6\n''') == '5'\nassert solution('''3 5\n11\n''') == '8'\nassert solution('''2 2\n3\n''') == '2'\nassert solution('''1 1\n1\n''') == '0'\nassert solution('''2 3\n4\n''') == '3'\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n\"\"\"\n\n\"\"\"\n    r, c = map(int, stdin.split())\n    k = int(stdin.readline())\n    return bin(r*c-k).count(\"1\")\n\"\"\""
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"5\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"10 10\") == \"5\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 10\n6''') == '5'\nassert solution('''3 5\n11''') == '8'\n\nassert solution('''20 1000000\n999999''') == '999998'\n\nassert solution('''100001 2\n0''') == '999'\n\nassert solution('''100001 9999''') == '99999'"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10\\n6') == '5'\nassert solution('2 10\\n11') == '8'\n\nprint('Tests passed successfully.')\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 10\\n6\\n') == '5'\nassert solution('2 5\\n11\\n') == '8'\nassert solution('3 5\\n11\\n') == '8'\nassert solution('3 3\\n11\\n') == '4'\nassert solution('3 3\\n0\\n') == '0'\n"
    },
    {
        "number": 3261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 10\\n6\\n\") == \"5\"\nassert solution(\"3 5\\n11\\n\") == \"8\"\nassert solution(\"30 30\\n6\\n\") == \"1\"\nassert solution(\"30 30\\n30\\n\") == \"0\"\nassert solution(\"30 30\\n30\\n\") == \"0\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 5 3\") == \"2\"\nassert solution(\"4 5 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\"\nassert solution(\"5 5 3\\n0 1 1\\n0 3 1\\n0 2 1\\n0 4 1\\n0 6 1\\n1 2 1\\n1 4 1\\n3 2 1\\n3 4 1\\n4 6 1\") == \"2\"\n\n-----\n\"\"\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n4\\n5\\n3\\n1\\n2\\n3\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1\\n3\\n2\\n0\\n2\\n3\\n0\\n1\\n2\\n1\\n3\\n1\\n1\\n0\\n1\\n1\\n1"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1''') == '2'\nassert solution('''6 6 2\n0 1 2\n0 2 1\n0 3 1\n0 4 1\n0 5 1\n0 6 1''') == '2'\nassert solution('''7 7 2\n0 1 2\n0 2 1\n0 3 1\n0 4 1\n0 5 1\n0 6 1\n0 7 1\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n2 2 2\n2 3 2\n2 4 2\n2 5 2\n2 6 2\n2 7 2\n2 8 2\n2 9 2\n3 4 2\n3 5 2\n3 6 2\n3 7 2\n3 8 2\n3 9 2\n3 10 2\n3 11 2\n4 4 3\n4 5 3\n4 6 3\n4 7 3\n4 8 3\n4 9 3\n4 10 3\n4 11 3\n4 12 3\n5 6 3\n5 7 3\n5 8 3\n5 9 3\n5 10 3\n5 11 3\n5 12 3\n5 13 3\n6 7 3\n6 8 3\n6 9 3\n6 10 3\n6 11 3\n6 12 3\n6 13 3\n6 14 3\n7 8 3\n7 9 3\n7 10 3\n7 11 3\n7 12 3\n7 13 3\n7 14 3\n7 15 3\n8 9 3\n8 10 3\n8 11 3\n8 12 3\n8 13 3\n8 14 3\n8 15 3\n8 16 3\n9 10 3\n9 11 3\n9 12 3\n9 13 3\n9 14 3\n9 15 3\n9 16 3\n9 17 3\n10 11 3\n10 12 3\n10 13 3\n10 14 3\n10 15 3\n10 16 3\n10 17 3\n10 18 3\n11 12 3\n11 13 3\n11 14 3\n11 15 3\n11 16 3\n11 17 3\n11 18 3\n11 19 3\n12 13 3\n12 14 3\n12 15 3\n12 16 3\n12 17 3\n12 18 3\n12 19 3\n12 20 3\n13 14 3\n13 15 3\n13 16 3\n13 17 3\n13 18 3\n13 19 3\n13 20 3\n13 21 3\n14 15 3\n14 16 3\n14 17 3\n14 18 3\n14 19 3\n14 20 3\n14 21 3\n14 22 3\n15 16 3\n15 17 3\n15 18 3\n15 19 3\n15 20 3\n15 21 3\n15 22 3\n15 23 3\n16 17 3\n16 18 3\n16 19 3\n16 20 3\n16 21 3\n16 22 3\n16 23 3\n16 24 3\n17 18 3\n17 19 3\n17 20 3\n17 21 3\n17 22 3\n17 23 3\n17 24 3\n17 25 3\n18 19 3\n18 20 3\n18 21 3\n18 22 3\n18 23 3\n18 24 3\n18 25 3\n18 26 3\n19 20 3\n19 21 3\n19 22 3\n19 23 3\n19 24 3\n19 25 3\n19 26 3\n19 27 3\n20 21 3\n20 22 3\n20 23 3\n20 24 3\n20 25 3\n20 26 3\n20 27 3\n20 28 3\n21 22 3\n21 23 3\n21 24 3\n21 25 3\n21 26 3\n21 27 3\n21 28 3\n21 29 3\n22 23 3\n22 24 3\n22 25 3\n22 26 3\n22 27 3\n22 28 3\n22 29 3\n22 30 3\n23 24 3\n23 25 3\n23 26 3\n23 27 3\n23 28 3\n23 29 3\n23 30 3\n23 31 3\n24 25 3\n24 26 3\n24 27 3\n24 28 3\n24 29 3\n24 30 3\n24 31 3\n24 32 3\n25 26 3\n25 27 3\n25 28 3\n25 29 3\n25 30 3\n25 31 3\n25 32 3\n25 33 3\n26 27 3\n26 28 3\n26 29 3\n26 30 3\n26 31 3\n26 32 3\n26 33 3\n26 34 3\n27 28 3\n27 29 3\n27 30 3\n27 31 3\n27 32 3\n27 33 3\n27 34 3\n27 35 3\n28 29 3\n28 30 3\n28 31 3\n28 32 3\n28 33 3\n28 34 3\n28 35 3\n28 36 3\n29 30 3\n29 31 3\n29 32 3\n29 33 3\n29 34 3\n29 35 3\n29 36 3\n29 37 3\n30 31 3\n30 32 3\n30 33 3\n30 34 3\n30 35 3\n30 36 3\n30 37 3\n30 38 3\n31 32 3\n31 33 3\n31 34 3\n31 35 3\n31 36 3\n31 37 3\n31 38 3\n31 39 3\n32 33 3\n32 34 3\n32 35 3\n32 36 3\n32 37 3\n32 38 3\n32 39 3\n32 40 3\n33 34 3\n33 35 3\n33 36 3\n33 37 3\n33 38 3\n33 39 3\n33 40 3\n33 41 3\n34 35 3\n34 36 3\n34 37 3\n34 38 3\n34 39 3\n34 40 3\n34 41 3\n34 42 3"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('0 1 1') == '1'\nassert solution('0 3 1') == '0'\nassert solution('0 2 2') == '0'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1\n\"\"\") == '2'\nassert solution(\n    \"\"\"5 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n\"\"\") == '3'\nassert solution(\n    \"\"\"2 2 1\n1 2\n0 1\n\"\"\") == '3'\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 4 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '2'\nassert solution('0 4 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '2'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3'\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n0 3 2\\n3 2 1\") == \"3\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n0 3 2\\n3 2 1\") == \"3\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n0 3 2\\n3 2 1\") == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\") == \"3\"\nassert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\"\nassert solution(\"1 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\") == \"3\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\") == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n\") == \"3\"\nassert solution(\"2 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n\") == \"3\"\nassert solution(\"2 3\\n10\\n10\\n1 10\\n1 10\\n1 10\\n\") == \"3\"\nassert solution(\"3 3\\n10\\n10\\n1 10\\n1 10\\n1 10\\n\") == \"3\"\nassert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n\") == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n\"\"\".strip()) == \"3\"\nassert solution(\n    \"\"\"4 1\n10\n10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n1\\n2') == '3'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n3\\n4\\n1\\n3') == '3'\nassert solution('2\\n3\\n4\\n1\\n3\\n5\\n2\\n1') == '3'\nassert solution('2\\n3\\n4\\n1\\n3\\n5\\n2\\n1\\n1') == '4'\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120') == '3'\nassert solution('2 3\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120') == '3'\nassert solution('1 3\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120') == '3'\nassert solution('1 3\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120') == '3'\nassert solution('1 3\\n10\\n10\\n1 10\\n1 10\\n1 10\\n3 120') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 2\") == \"\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(expected)\n\"\"\"\n\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '5'\nassert solution('''5''') == '1'\nassert solution('''6''') == '8'\nassert solution('''7''') == '14'\nassert solution('''8''') == '21'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '5'\nassert solution('''2''') == '1'\nassert solution('''5''') == '5'\nassert solution('''10''') == '95'\nassert solution('''20''') == '98'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 1\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 5\nassert solution('4') == 11\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '5'\n'''"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n\") == \"1\"\nassert solution(\"3\\n\") == \"5\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2''') == ''\nassert solution('''4''') == '5'\nassert solution('''5''') == '10'\nassert solution('''6''') == '17'\nassert solution('''7''') == '34'\n"
    },
    {
        "number": 3264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\"\n\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"9\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 0 19') == '2'\nassert solution('0 0 2 0') == '-1'\nassert solution('0 5 0 3') == '4'\nassert solution('0 0 0 0') == '-1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1''') == '2'\nassert solution('''3 1''') == '2'\nassert solution('''3 1''') == '2'\nassert solution('''3 1''') == '2'\nassert solution('''4 3''') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 3\\n0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == '2'\nassert solution('2 4\\n0 0 0 0\\n0 0 0 0') == '-1'\nassert solution('2 5\\n0 0 0 0 0\\n0 0 0 0 0') == '-1'\nassert solution('2 1\\n0 1 0') == '-1'\nassert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == '2'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1\\n0 0 2\\n0 5 0 3\\n0 0 0 0') == '2'\nassert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == '2'\nassert solution('3 10\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'\nassert solution('3 10\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '2'\nassert solution('5 10\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 10\") == \"1\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"1 100\") == \"-1\"\nassert solution(\"2 100\") == \"-1\"\nassert solution(\"1 100000\") == \"-1\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 10') == '4 3 5'\nassert solution('1 2 1') == '0 1 2'\nassert solution('0 1 100000') == '2 100000 1'\nassert solution('2 1 0 1') == '2 100000 1'\nassert solution('0 1 2') == '0 1 2'\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 1 2\") == \"4 3 5\"\nassert solution(\"0 1 100\") == \"2 100 1\"\nassert solution(\"1 2 1\") == \"0 1 2\"\nassert solution(\"2 1 100\") == \"2 100 1\"\nassert solution(\"1 2 1\") == \"0 1 2\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\nassert solution('0 1 100000\\n0 2 1\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '2 100000 1\\n0 1 100000\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\n\n-----Hint-----\nThis problem is the exact same as the max flow problem with Ford-Fulkerson algorithm.\n\n-----\n\"\"\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10''') == '4 3 5'\nassert solution('''2 1 0 1\n0 1 100000''') == '2 100000 1'\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2 100000 1\"\n\nassert solution(input()) == \"0 1 100000\"\n\nassert solution(input()) == \"0 2 100000\"\n\nassert solution(input()) == \"0 1 2\"\n\nassert solution(input()) == \"1 2 1\""
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1\\n1 2 1') == '2 100000 1'\nassert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5'\nassert solution('2 1 0 1\\n0 1 100000\\n') == '2 100000 1'\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '0 0 0'\nassert solution('0 2 1') == '1 0 0'\nassert solution('0 2 1 0 1') == '1 0 0'\nassert solution('0 1 2 1 0 1') == '1 0 0'\nassert solution('0 2 1 0 1') == '0 0 0'\n"
    },
    {
        "number": 3266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 1 10\n1 2 1\n1 3 1''') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n'\nassert solution('''4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n'\nassert solution('''3 3 0 2\n1 2 2\n0 1 1\n1 2 2\n2 0 1\n1 2 3\n2 3 2\n1 2\n2 3\n2 3\n''') == '3 3 4\\n0 1 2\\n0 2 1\\n0 3 1\\n1 2 2\\n2 3 1\\n2 3 2\\n2 3 3\\n'\n\nprint('passed')\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\nSMS\\nMMS') == '3 5'\nassert solution('2 3\\nSMS\\nSMS') == '0 0'\n\"\"\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\nSMS\\nMMS') == '3 5'\nassert solution('2 3\\nSM.\\nMS') == '2 0'\nassert solution('2 3\\nSMMS\\nMSMS') == '2 0'\nassert solution('2 3\\nSMMS\\nSMMS') == '2 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2 3\nSMS\nMMS''') == '3 5'\nassert solution(\n'''2 3\nSM.\nMS''') == '2 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\nSMS\nMMS''') == '3 5'\nassert solution('''1 1\n..''') == '0 0'\nassert solution('''2 3\nS.M\nM.S''') == '2 0'\nassert solution('''2 3\nSM.\nMS''') == '3 0'\nassert solution('''1 1\nS.\nS''') == '0 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('MMS.MMS') == '2 0'\nassert solution('MMS.SMS') == '3 5'\nassert solution('MMS.MMSMMS') == '3 5'\nassert solution('MMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMSMSMS.MMSMS"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\"\nassert solution(\"4 4\\nSMSSMS\\nMMSMM\\nMSMSMS\\nSMSSSS\\nMMSSSS\") == \"2 0\"\nassert solution(\"4 3\\nSMSSMS\\nMMS.M\\nMSMSMS\") == \"3 0\"\nassert solution(\"1 2\\nM\") == \"0 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\nprint('solution() passed')\n\"\"\"\n\nstdin = '''2 3\nSMS\nMMS'''\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nSMS\\nMMS\\nSMS\\nSMS\") == \"2 0\"\nassert solution(\"1 1\\n.\\n.\\n\") == \"0 0\"\nassert solution(\"1 1\\n.\\n.\\n.\\n\") == \"0 0\"\nassert solution(\"1 1\\n.\\n.\\n.\\n.\\n.\\n\") == \"0 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(solution('')) == ''\nassert solution(solution('')) == ''\nassert solution(solution('')) == ''\nassert solution(solution('')) == ''\nassert solution(solution('')) == ''\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 1\\n2 1\\n0 3\\n3 1\\n2 3\\n3 2\\n2 1') == '3'\nassert solution('4\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n0 3\\n3 1\\n2 3\\n3 2\\n2 1') == '6'\nassert solution('3\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n0 3\\n3 1\\n2 3\\n3 2\\n2 1') == '1'\nassert solution('11\\n0 B\\n1 B\\n1 T a\\n2 E"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 T a\\n5 G b\\n1 T a\") == \"2\\nc\"\nassert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"1\\n6 b\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 B\") == \"2\"\nassert solution(\"1 B\") == \"3\"\nassert solution(\"2 E a\") == \"6\"\nassert solution(\"2 E b\") == \"6\"\nassert solution(\"2 S\") == \"6\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '1\\n6 b'\n\nassert solution('''\n3\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '3'\n\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1\\n6 b'\n\nassert solution('''\n2\n0 B\n1 B\n''') == '0\\n1'\n\nassert solution('''"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"2\\n3 c\\n6 c\"\nassert solution(\"3\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\"\nassert solution(\""
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2\\n6 b'\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1\\n6 b'\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1\\n6 b'\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''')"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '6 b'\n\nassert solution(\n'''\n3\n0 B\n1 B\n2 E a\n2 S\n5 T a\n''') == '1'\n\nassert solution(\n'''\n11\n0 B\n1 B\n2 E a\n2 S\n5 T a\n6 E a\n6 G b\n6 T a\n7 E a\n7 G b\n7 T a\n7 E b\n7 S\n10 E a\n10 G b\n10 T a\n10 E b\n11 S\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '1'\nassert solution('''0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '2'\nassert solution('''0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1'\nassert solution('''0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1'\nassert solution('''0 B\n1 B\n1 T a\n"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\") == \"2\"\nassert solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"6 b\"\nassert solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 G b\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 G b\\n5"
    },
    {
        "number": 3268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n'''"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\n\nprint('Successful')\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\nassert solution('1 5') == '40'\nassert solution('288 291') == '76'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\nassert solution(\"100000000000000000000000000000000000000000000000 100000000\") == \"40\"\nassert solution(\"1828787212458921123456789012345678901234567890123456789012345678901234567890\") == \"59\"\nassert solution(\"1828787212458921123456789012345678901234567890123456789012345678901234567890\") == \"59\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\nprint(\"\\n\")\n'''\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\nassert solution(\"1 10\") == \"100\"\nassert solution(\"10 100\") == \"200\"\nassert solution(\"10 1000000000000\") == \"200000000000000\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\nassert solution('1 1') == '0'\nassert solution('1 3') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"inputs/test_1.txt\") == \"COG\"\nassert solution(\"inputs/test_2.txt\") == \"GAS\"\nassert solution(\"inputs/test_3.txt\") == \"CAR\"\nassert solution(\"inputs/test_4.txt\") == \"CAT\"\nassert solution(\"inputs/test_5.txt\") == \"HAT\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"COG\"\nassert solution(stdin) == -1\nassert solution(stdin) == 0\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\nCAT\nDOG\nCOT''') == 'COG'\nassert solution('''2\nCAT\nDOG\nSample Output 2:\n0\n-1\n''') == '0'\nassert solution('''4\nCAT\nDOG\nDOT\nCAT\n''') == 'CAT'\nassert solution('''4\nCAT\nDOG\nCAT\nDOT\n''') == 'CAT'\nassert solution('''3\nCAT\nDOG\nCOT\n''') == 'COG'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'a'\nassert solution('b') == 0\nassert solution('ab') == 0\nassert solution('abd') == 0\nassert solution('abcd') == -1\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\"\"1\n\"\"\") == \"\"\nassert solution(\"\"\"3\nCAT\nDOG\nCOT\"\"\") == \"\"\nassert solution(\"\"\"3\nCAT\nDOG\nCOT\"\"\") == \"COG\"\nassert solution(\"\"\"4\nCAT\nDOG\nCOT\nCAT\"\"\") == \"CAT\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('CAT') == 'COG'\nassert solution('DOG') == 'COG'\nassert solution('COT') == 'COG'\n\nassert solution('COT', 'COG') == 'COG'\nassert solution('COT', 'DOG') == 'COG'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == expect\n\"\"\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\nCAT\\nDOG\\nCOT\\n') == 'COG'\nassert solution('2\\nDOG\\nCOT\\n') == '0'\nassert solution('2\\nDOG\\nCOT\\nDOG\\n') == '0'\nassert solution('2\\nCAT\\nDOG\\n') == 'COG'\nassert solution('1\\nCAT\\nDOG\\n') == 'CAT'\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\nprint('Passed!')\n\n---------\nTest Cases\n---------\n\n--Test Case 1--\n\nInput:\n4\nCAT\nDOG\nCOT\nGAS\n\nOutput:\nCAR\n0\n\n--Test Case 2--\n\nInput:\n4\nCAT\nCOT\nCAT\nGAS\n\nOutput:\nCAT\n0\n\n--Test Case 3--\n\nInput:\n4\nCAT\nDOG\nCAT\nGAS\n\nOutput:\nDOG\n0\n\n--Test Case 4--\n\nInput:\n5\nCAT\nDOG\nCAT\nGAS\nDOG\nCAT\n\nOutput:\nGAS\n0\n\n--Test Case 5--\n\nInput:\n6\nCAT\nDOG\nCAT\nGAS\nDOG\nCAT\n\nOutput:\nGAS\n-1\n\n--Test Case 6--\n\nInput:\n1\nCAT\n\nOutput:\n0\n\n--Test Case 7--\n\nInput:\n2\nCAT\nDOG\n\nOutput:\nCAT\n-1\n\n--Test Case 8--\n\nInput:\n3\nCAT\nDOG\nGAS\n\nOutput:\nGAS\n0\n\n--Test Case 9--\n\nInput:\n5\nCAT\nCAT\nCAT\nCAT\nCAT\n\nOutput:\nCAT\n0\n\n--Test Case 10--\n\nInput:\n3\nCAT\nDOG\nGAS\n\nOutput:\nGAS\n-1\n\n--Test Case 11--\n\nInput:\n5\nCAT\nCOT\nCAT\nCOT\nCAT\n\nOutput:\nCAT\n0\n\n--Test Case 12--\n\nInput:\n7\nCAT\nDOG\nCAT\nCOT\nCAT\nDOG\nCAT\n\nOutput:\nCAT\n-1\n\n--Test Case 13--\n\nInput:\n3\nDOG\nCAT\nGAS\n\nOutput:\nGAS\n-1\n\n--Test Case 14--\n\nInput:\n3\nCAT\nDOG\nGAS\n\nOutput:\nGAS\n0\n\n--Test Case 15--\n\nInput:\n3\nDOG\nCAT\nGAS\n\nOutput:\nCAT\n0\n\n--Test Case 16--\n\nInput:\n5\nCAT\nCAT\nCAT\nCAT\nCAT\n\nOutput:\nCAT\n0\n\n--Test Case 17--\n\nInput:\n5\nCAT\nCAT\nCAT\nCAT\nCAT\n\nOutput:\nCAT\n0\n\n--Test Case 18--\n\nInput:\n3\nCAT\nCAT\nGAS\n\nOutput:\nCAT\n-1\n\n--Test Case 19--\n\nInput:\n5\nCAT\nCAT\nCAT\nCAT\nDOG\n\nOutput:\nCAT\n0\n\n--Test Case 20--\n\nInput:\n7\nCAT\nDOG\nCAT\nCOT\nCAT\nDOG\nCAT\n\nOutput:\nCAT\n-1\n\n--Test Case 21--\n\nInput:\n5\nCAT\nDOG\nCAT\nCAT\nCAT\n\nOutput:\nCAT\n0\n\n--Test Case 22--\n\nInput:\n5\nCAT\nCAT\nCAT\nCAT\nCAT\n\nOutput:\nCAT\n0\n\n--Test Case 23--\n\nInput:\n7\nCAT\nDOG\nCAT\nCOT\nCAT\nDOG\nCAT\n\nOutput:\nCAT\n-1\n\n--Test Case 24--\n\nInput:\n4\nCAT\nDOG\nCAT\nGAS\n\nOutput:\nGAS\n0\n\n--Test Case 25--\n\nInput:\n4\nCAT\nCAT\nCAT\nGAS\n\nOutput:\nCAT\n0\n\n--Test Case 26--\n\nInput:\n4\nCAT\nCAT\nCAT\nGAS\n\nOutput:\nCAT\n0\n\n--Test Case 27--\n\nInput:\n4\nCAT\nCAT\nCAT\nGAS\n\nOutput:\nCAT\n0\n\n--Test Case 28--\n\nInput:\n7\nCAT\nDOG\nCAT\nCOT\nCAT\nDOG\nCAT\n\nOutput:\nCAT\n-1\n\n--Test Case 29--\n\nInput:\n4\nCAT\nCAT\nCAT\nGAS\n\nOutput:\nGAS\n0\n\n--Test Case 30--\n\nInput:\n4\nCAT\nCAT\nCAT\nGAS\n\nOutput:\nGAS\n0\n\n--Test Case 31--\n\nInput:\n4\nCAT\nCAT\nCAT\nGAS\n\nOutput:\nCAT\n0\n\n--Test Case 32--\n\nInput:\n5\nCAT\nDOG\nCAT\nCOT\nCAT\n\nOutput:\nCAT\n0\n\n--Test Case 33--\n\nInput:\n4\nCAT\nCAT\nCAT\nGAS\n\nOutput:\nGAS\n0\n\n--Test Case 34--\n\nInput:\n5\nCAT\nCAT\nCAT\nCAT\nCAT\n\nOutput:\nCAT\n0\n\n--Test Case 35--\n\nInput:\n7\nCAT\nDOG\nCAT\nCOT\nCAT\nDOG\nCAT\n\nOutput:\nCAT\n-1\n\n--Test Case 36--\n\nInput:\n7\nCAT\nCAT\nCAT\nCAT\nCAT\nDOG\nCAT\n\nOutput:\nCAT\n0\n\n--Test Case 37--\n\nInput:\n3\nCAT\nCAT\nGAS\n\nOutput:\nCAT\n0\n\n--Test Case 38--\n\nInput:\n4\nCAT\nCAT\nCAT\nGAS\n\nOutput:\nGAS\n0\n\n--Test Case 39--\n\nInput:\n5\nCAT\nCAT\nCAT\nCAT\nCAT\n\nOutput:\nCAT\n0\n\n--Test Case 40--\n\nInput:\n5\nCAT\nCAT\n"
    },
    {
        "number": 3270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\nCAT\nDOG\nCOT''') == 'COG'\nassert solution('''2\nCAT\nDOG\n''') == '0'\nassert solution('''4\nCAT\nDOG\nCOT\nDOT''') == 'COT'\nassert solution('''4\nDOT\nCOT\nDOG\nCAT''') == 'DOG'\nassert solution('''3\nCAT\nDOG\nCOT''') == 'COG'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1\\n') == '9'\nassert solution('1 4\\n') == '3'\nassert solution('2 4\\n') == '3'\nassert solution('3 5\\n') == '0'\nassert solution('4 5\\n') == '1'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 1') == '9'\nassert solution('4 3') == '6'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('1000 1000') == '0'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6'\nassert solution(stdin) == '9'\nassert solution(stdin) == '6'\nassert solution(stdin) == '9'\nassert solution(stdin) == '6'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('1 4') == '3'\nassert solution('1 5') == '4'\nassert solution('1 6') == '5'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('2 2') == '2'\nassert solution('2 2 1') == '2'\nassert solution('2 1 1') == '2'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == '6'\nassert solution('2 3') == '9'\nassert solution('10 3') == '9'\nassert solution('10 4') == '8'\nassert solution('10 5') == '7'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == 1\nassert solution('4 3') == 2\nassert solution('1 5') == 2\nassert solution('10 1000') == 36\nassert solution('4 3') == 2\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 4') == '0'\nassert solution('3 4') == '1'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 3271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"./tc/00-HelloWorld.txt\") == \"Hello World\"\nassert solution(\"./tc/01-HelloWorld.txt\") == \"Hello World\"\nassert solution(\"./tc/02-HelloWorld.txt\") == \"Hello World\"\nassert solution(\"./tc/03-HelloWorld.txt\") == \"Hello World\"\nassert solution(\"./tc/04-HelloWorld.txt\") == \"Hello World\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\\n') == '3'\nassert solution('2 5\\nV...\\nH...V\\n') == '-1'\nassert solution('2 4\\nV..H\\nV..\\n') == '0'\nassert solution('2 3\\nV..\\nH.V\\n') == '-1'\nassert solution('2 3\\nV..\\n.V\\n') == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./''') == '3'\nassert solution('''2 5\nV...\\\nH...V''') == '-1'\nassert solution('''4 5\nV...\\\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == -1\nassert solution('5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\\n') == 3\nassert solution('2 5\\nV...\\nH...V') == -1\nassert solution('2 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\\n') == 3\nassert solution('2 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\\n') == 3\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"./V.\\n./.V.\") == 3\nassert solution(\"V...\\nH...V\") == -1\nassert solution(\"V...\\nV...V\") == 3\nassert solution(\"V...\\nH...V\") == -1\nassert solution(\"H...\\nV...V\") == -1\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./''') == '3'\nassert solution(\n'''5 3\nV...\nH...\nSample Output 2:\n-1''') == '-1'"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('./3.in') == '3'\nassert solution('./3.in') == '1'\nassert solution('./3.in') == '2'\nassert solution('./3.in') == '0'\nassert solution('./3.in') == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5 5\n/...V.\n./.V.\n..#..\n.V.#.\n.V./\n''') == '3'\nassert solution('''\n3 4\n...#\n"
    },
    {
        "number": 3272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n8\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == 'The quick brown fox jumps over the lazy dog.\\n'\n\nassert solution('''\n10\na b c d e\nb c d e f\nc d e f g\nd e f g h\ne f g h i\nf g h i j\ng h i j k\nh i j k l\ni j k l m\n''') == 'AMBIGUOUS\\n'\n\nassert solution('''\n8\na b c d e\nb c d e f\nc d e f g\nd e f g h\ne f g h i\nf g h i j\ng h i j k\nh i j k l\ni j k l m\n''') == 'AMBIGUOUS\\n'\n\nassert solution('''\n12\na b c d e\nb c d e f\nc d e f g\nd e f g h\ne f g h i\nf g h i j\ng h i j k\nh i j k l\ni j k l m\nn o p q r\no p q r s\np q r s t\nq r s t u\nr s t u v\ns t u v w\nt u v w x\nu v w x y\nu v w x z\nu v w x c\nu v w x b\nu v w x a\n''') == 'AMBIGUOUS\\n'\n\nassert solution('''\n1\na\n''') == 'AMBIGUOUS\\n'"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\nn fox jumps ove\nuick brown f\n''') == \"The quick brown fox jumps over the lazy dog.\"\nassert solution('''\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\n''') == \"AMBIGUOUS\"\nassert solution('''\nn fox jumps ove\nuick brown f\nThe quick brown fox jumps over the lazy dog.\n''') == \"The quick brown fox jumps over the lazy dog.\"\nassert solution('''\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\n''') == \"AMBIGUOUS\"\nassert solution('''\nn fox jumps ove\nuick brown f\nabcdefg\n''') == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    'fox jumps over the lazy dog') == 'The quick brown fox jumps over the lazy dog.'\nassert solution(\n    'abcdefghi') == 'AMBIGUOUS'\nassert solution(\n    'cdefghi') == 'AMBIGUOUS'\nassert solution(\n    'zfuzpyhgklzgctzpdxdfmbsfjqyxdyjfmjvxzvb') == 'AMBIGUOUS'\nassert solution(\n    'abcdefghi') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected(stdin)\nprint(solution(stdin))\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n7\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('''\\\n6\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\n''') == 'AMBIGUOUS'\nassert solution('''\\\n1\na\n''') == 'AMBIGUOUS'\nassert solution('''\\\n3\nabcde\nbcdec\nabcdef\n''') == 'AMBIGUOUS'\n'''\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"ABBABAB\"\n\"\"\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('abcde') == 'abcde'\nassert solution('abcd') == 'abcd'\nassert solution('abcdea') == 'abcdea'\nassert solution('abcdeab') == 'abcdeab'\n"
    },
    {
        "number": 3273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"cdefghi\") == \"defghijk\"\nassert solution(\"efghijk\") == \"efghijx\"\nassert solution(\"efghijx\") == \"efghijx\"\nassert solution(\"abcdefg\") == \"abcdefg\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-\\n'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n') == '0+-\\n'\nassert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == '+-+\\n'\nassert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n4 5 1\\n') == 'impossible\\n'\nassert solution('5 7\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n4 5 1\\n4 5 2\\n') == 'impossible\\n'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == '--+0-'\n\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\\nSample Output 2:\") == '0+-\\n'"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == '+-++--'\nassert solution('''-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == 'impossible'"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == '--+0-\\n'\nassert solution('5 6\\n1 2 1\\n-2 0 2\\n') == '0+-\\n'\nassert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == 'impossible'\nassert solution('5 7\\n0 4 1\\n-1 1 0\\n3 4 0\\n0 0 0\\n1 1 1\\n2 5 5\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == 'impossible'\nassert solution('5 7\\n0 4 1\\n-1 1 0\\n3 4 0\\n0 0 0\\n1 1 1\\n2 5 5\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == 'impossible'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '--+0-'\nassert solution('''3 2\n1 2 1\n-2 0 2\n''') == '0+-'\nassert solution('''2 2\n-2 0 2\n-1 1 2\n0 1 4\n2 5 1\n''') == 'impossible'\nassert solution('''3 2\n-1 -1 0\n-1 0 2\n1 1 4\n2 -2 -1\n2 -1 -2\n2 0 2\n0 1 4\n2 5 1\n''') == '+--+'\nassert solution('''10 1\n-8 -7 -4 -3 -2 -1\n0 1 2 3 4 5 6 7 8\n9 10\n-9 -8 -7 -6 -5 -4 -3 -2 -1\n''') == '+--+'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-'\nassert solution('3 2\\n-2 0 2\\n2 3 3\\n-1 1 2') == 'impossible'\nassert solution('3 2\\n-2 0 2\\n2 3 3\\n-1 1 2\\n0 1 4') == '+-0-0-'\nassert solution('5 3\\n1 3 3\\n2 4 4\\n2 3 1\\n1 3 2\\n-1 -1 1') == '-+--++'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2') == '--+0-\\n'\nassert solution('-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2') == '--+0-\\n'\nassert solution('-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2') == '--+0-\\n'\nassert solution('-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2') == '--+0-\\n'\nassert solution('-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2') == '--+0-\\n'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-'\nassert solution('1 1 1\\n-2 0 2\\n') == '0+-'\nassert solution('5 2\\n0 1 2\\n-2 0 2\\n') == '0+-'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n') == '0+-'\nassert solution('6 3\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0+-'\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == '--+0-', \"Example 1\"\nassert solution('''-5 -1 -3\n-3 0 0\n-2 3 -3\n0 0 -5\n1 -1 -2''') == 'impossible', \"Example 2\"\nassert solution('''1\n1 1 1\n1 1 1''') == '+-', \"Example 3\"\nassert solution('''-3 -2 4\n-2 -2 3\n3 3 3\n-1 -1 -1\n-1 -1 -1\n1 1 2\n-1 0 3\n-2 1 1\n-1 0 2\n-1 0 -1\n-1 0 -1\n-1 0 1\n-1 0 1''') == '--++--', \"Example 4\"\nassert solution('''-2 -4\n-2 -3\n-1 -1\n0 1 2\n2 1 2\n1 1 1\n1 1 1''') == '--++-', \"Example 5\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n') == '0+-'\nassert solution('3 3\\n1 1 1\\n-2 -2 -1\\n2 1 1\\n-1 -1 -2\\n0 1 1\\n1 1 2\\n2 1 2\\n0 2 1\\n-1 1 2\\n2 2 1\\n0 0 2\\n0 1 3\\n0 2 2\\n0 3 1\\n-1 1 3\\n1 1 3\\n1 3 2\\n1 2 1\\n') == 'impossible'\nassert solution('4 3\\n2 1 1\\n-2 0 2\\n0 0 2\\n2 2 1\\n-1 -1 -2\\n1 1 3\\n1 3 2\\n1 2 1\\n2 1 1\\n2 2 1\\n0 0 3\\n0 1 2\\n0 2 1\\n-1 1 2\\n2 1 1\\n0 2 1\\n-1 -1 -2\\n1 1 3\\n1 3 2\\n1 2 1\\n2 1 1\\n0 0 2\\n0 1 3\\n0 2 2\\n0 3 1\\n-1 1 3\\n1 1 3\\n1 3 2\\n1 2 1\\n') == '+-+'\nassert solution('4 3\\n1 1 1\\n-2 -2 -1\\n2 1 1\\n-1 -1 -2\\n0 1 1\\n1 1 2\\n2 1 2\\n0 2 1\\n-1 1 2\\n2 1 2\\n0 0 2\\n0 1 3\\n0 2 2\\n0 3 1\\n-1 1 3\\n1 1 3\\n1 3 2\\n1 2 1\\n2 1 1\\n0 0 3\\n0 1 2\\n0 2 1\\n-1 1 2\\n2 1 1\\n0 2 1\\n-1 -1 -2\\n1 1 3\\n1 3 2\\n1 2 1\\n2 1 1\\n0 0 2\\n0 1 3\\n0 2 2\\n0 3 1\\n-1 1 3\\n1 1 3\\n1 3 2\\n1 2 1\\n') == '+--'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution(stdin)\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2 2\n1 1\n1 1\n1\n1 1 1\"\"\") == \"1\\n\"\nassert solution(\"\"\"2 2\n1 2\n2 3\n2\n1 2 2\"\"\") == \"4\\n4\\n\"\nassert solution(\"\"\"6 4\n1 3\n2 4\n2\n1 4 2\n2 2 1\"\"\") == \"5\\n\"\nassert solution(\"\"\"4 2\n1 3\n3 4\n1\n1 1 1\"\"\") == \"2\\n\"\nassert solution(\"\"\"4 2\n1 3\n3 4\n2\n1 3 1\"\"\") == \"0\\n\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 1\\n1 1\\n1') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2') == '4\\n4\\n'\nassert solution('2 2\\n2 2\\n2 2') == '0\\n0\\n'\nassert solution('2 2\\n1 1\\n1 1') == '1\\n'\nassert solution('2 2\\n2 3\\n2\\n1 2 2\\n2 2 2') == '4\\n4\\n'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"2 2\n1 1\n1 1\n1\n1 1 1\"\"\"\n) == \"\"\"1\n4\n\"\"\"\n\nassert solution(\n\"\"\"2 2\n1 2\n2 3\n2\n1 2 2\"\"\"\n) == \"\"\"4\n4\n\"\"\"\n\nassert solution(\n\"\"\"3 2\n1 1\n1 1\n1\n1 1 1\"\"\"\n) == \"\"\"2\n3\n1\n\"\"\"\n\nassert solution(\n\"\"\"5 5\n2 3\n1 2 2\n1 2 1\n3 1 1\n2 3 1\n1 3\n1 1 1 1 1\"\"\"\n) == \"\"\"1\n2\n3\n\"\"\"\n\nassert solution(\n\"\"\"1\n1 1 1 1 1\"\"\"\n) == \"\""
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n') == '4\\n4\\n'\n\nprint(solution(''))\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1\n1 1 1''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2''') == '4'\nassert solution('''2 3\n1 2\n2 3''') == '1'\nassert solution('''3 3\n1 2\n2 3\n2\n1 2 2''') == '3'\nassert solution('''5 5\n3 3\n4 2\n3 1\n4 1\n3 1''') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"1 1\n1 1\n1\n1 1 1\n\"\"\") == \"1\\n\"\n\nassert solution(\n\"\"\"2 2\n1 1\n1 1\n1\n1 1 1\n\"\"\") == \"1\\n\"\n\nassert solution(\n\"\"\"2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n\"\"\") == \"4\\n4\\n\"\n\nassert solution(\n\"\"\"100 100\n1 1\n1 1\n1\n1 1 1\n\"\"\") == \"1\\n\"\n\nassert solution(\n\"\"\"1000 1000\n1 1\n1 1\n1\n1 1 1\n\"\"\") == \"0\\n\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 2') == '2'\nassert solution('1 2 2') == '2'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('WRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n') == 'YES'\nassert solution('WRRR\\nWRRR\\nWRRR\\nWBBBB\\n') == 'NO'\nassert solution('W\\nR\\nR\\nB\\n') == 'YES'\nassert solution('W\\nR\\nR\\nB\\n') == 'YES'\nassert solution('W\\nR\\nR\\nB\\n') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == 'YES'\nassert solution('''4 4\nWWRR\nWRRR\nWRRR\nWBBBB''') == 'NO'\nassert solution('''4 3\nWWW\nWWW\nWWW\nWBB''') == 'NO'\nassert solution('''4 5\nWRRRR\nWRRRR\nWRRRR\nWBBBBB''') == 'YES'\nassert solution('''6 7\nWWWWW\nWWWWWW\nWWWWW\nWBBWWW\nWWWWWW\nWWWWWW''') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\nWBBBB\") == \"NO\"\nassert solution(\"5 5\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\") == \"YES\"\nassert solution(\"5 5\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\") == \"NO\"\nassert solution(\"1 10\\nR\") == \"NO\"\n\"\"\""
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == 'YES'\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\nSample Output 2:\nNO''') == 'NO'\nassert solution('''4 6\nWBBBBWWWW\nWBBBBWWWW\nWBBBBWWWW\nWBBBBWWWW\nWBBBBWWWW\nWBBBBWWWW\nSample Output 3:\nYES''') == 'YES'\nassert solution('''5 6\nWBWBBWW\nWBWBBWW\nWBWBBWW\nWBWBBWW\nWBWBBWW\nWBWBBWW\nSample Output 3:\nNO''') == 'NO'\nassert solution('''10 10\n
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == 'YES'\nassert solution('''5 7\nWRRRG\nWRRRG\nWRRRG\nWBBBB\nWRRRG\nWBBBB''') == 'YES'\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\n''') == 'NO'\nassert solution('''5 6\nWBWBW\nWBWBW\nWBWBW\nWBWBW\nWBWBW''') == 'YES'\nassert solution('''4 7\nWRRRG\nWRRRG\nWRRRG\nWBBBB\nWRRRG\nWBBBB\nWRRRG''') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == \"YES\"\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\n''') == \"NO\"\nassert solution('''3 2\nW\n''') == \"NO\"\nassert solution('''5 5\nWWWWWW\nWBBWBB\nWRWRWR\nWRWRWR\nWWWWWW\n''') == \"YES\"\nassert solution('''7 7\nWWWWWWW\nWBBBBBBR\nWBBRBRBR\nWWWWWWW\nWBBRBRBR\nWRWRWRWR\nWRRRRRRR\n''') == \"YES\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"NO\"\nassert solution(\"5 4\\nRWRR\\nRRRR\\nRWRR\\nWBBB\") == \"NO\"\nassert solution(\"5 4\\nRWRR\\nWRRR\\nWRRR\\nWBBB\") == \"YES\"\nassert solution(\"5 4\\nRWRR\\nWRRR\\nWRRR\\nWBBB\") == \"NO\"\nassert solution(\"5 4\\nRWRR\\nWRRR\\nWRRR\\nWBBB\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('WRRRG') == 'YES'\nassert solution('WRRRG') == 'YES'\nassert solution('WRRRG') == 'YES'\nassert solution('WBBBB') == 'NO'\nassert solution('WWRR') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"2 1\\nW\\nW\") == \"NO\"\nassert solution(\"2 2\\nW\\nW\") == \"NO\"\nassert solution(\"3 3\\nW\\nW\\nW\\nW\\nW\") == \"YES\"\nassert solution(\"3 4\\nW\\nW\\nW\\nW\\nW\") == \"NO\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 5\n1\n2\n3''') == '1'\nassert solution('''6 3 5\n1\n2\n3\n3\n2\n1\n''') == '3'\nassert solution('''10 3 5\n1\n2\n3\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12''') == '5'\nprint(\"Passed.\")\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\n\"\"\"\n\nN, K, S = list(map(int, stdin.split()))\n\nA = []\n\nfor i in stdin.split()[1:]:\n    A.append(int(i))\n\ncounter = 0\n\nwhile K > 0:\n    A_new = []\n    for a in A:\n        if a!= K:\n            A_new.append(a)\n        elif a == K:\n            A_new.append(S)\n    A = A_new\n    K -= 1\n    counter += 1\n\nprint(counter)"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 5\\n1\\n2\\n3') == '1\\n'\nassert solution('6 3 5\\n1\\n2\\n3\\n3\\n2\\n1') == '3\\n'\nassert solution('5 3 5\\n1\\n2\\n3\\n4\\n5') == '0\\n'\nassert solution('6 3 5\\n1\\n2\\n3\\n4\\n5\\n6') == '2\\n'\nassert solution('6 3 5\\n1\\n2\\n3\\n4\\n5\\n6\\n6') == '2\\n'\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"6 3 5\") == \"3\"\nassert solution(\"3 6 4\") == \"3\"\nassert solution(\"4 5 4\") == \"4\"\nassert solution(\"4 5 4\") == \"4\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"3 3 5\") == \"1\"\nassert solution(\"6 3 5\") == \"3\"\nassert solution(\"6 3 5\") == \"3\"\nassert solution(\"6 3 5\") == \"3\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n2\\n1\\n3\") == \"1\"\nassert solution(\"3\\n3\\n3\\n2\\n1\\n3\") == \"3\"\nassert solution(\"4\\n3\\n2\\n1\\n2\\n1\") == \"3\"\nassert solution(\"3\\n3\\n3\\n2\\n1\\n3\") == \"3\"\nassert solution(\"2\\n3\\n1\\n1\\n2\\n1\") == \"3\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 3 5\") == \"1\"\nassert solution(\"2 3 4\") == \"1\"\nassert solution(\"3 3 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\") == 1\nassert solution(\"6 3 5\") == 3\nassert solution(\"6 4 5\") == 2\nassert solution(\"3 3 5\") == 1\nassert solution(\"6 4 5\") == 2\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n0 2\n1 2\n3 3''') == '3 2'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3'\n\nprint(solution('''8\n0 2\n1 3\n3 3\n7 5\n9 5\n8 4\n7 4\n6 3\n5 2\n0 1'''))"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 2\\n1 2\\n3 3') == '3 2'\nassert solution('5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5') == '12 3'\nassert solution('1\\n0 2\\n3 3\\n6 7\\n8 9') == '3 2'\nassert solution('4\\n0 2\\n1 3\\n3 4') == '2 3'\nassert solution('1\\n0 2\\n1 2') == '0 0'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n0 2\n1 2\n3 3''') == '12 3'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n0 2\n1 2\n3 3''') == '3 2'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n0 2\n1 3\n3 3''') == '0 2', '3'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3', '9'\nprint('test success.')\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n0 2\n1 2\n3 3''') == '12 3'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3'\nassert solution('''2\n0 3\n1 5''') == '-1 -1'\nassert solution('''0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1 1'\nassert solution('2') == '4 2'\nassert solution('3') == '8 3'\nassert solution('4') == '16 4'\nassert solution('5') == '32 4'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 2\n1 2\n3 3''') == '3 2'\nassert solution('''2\n2\n2\n3\n3\n4\n5\n7\n9\n13\n15\n17\n19\n''') == '17 3'\nassert solution('''0\n3\n3\n3\n4\n5\n7\n9\n13\n15\n17\n19\n''') == '17 3'\nassert solution('''1\n0\n1\n3\n4\n5\n7\n9\n13\n15\n17\n19\n''') == '17 3'\nassert solution('''1\n0\n1\n2\n3\n4\n5\n7\n9\n13\n15\n17\n19\n''') == '17 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0 2') == '0 2'\nassert solution('3 2') == '3 2'\nassert solution('3 3') == '0 2'\nassert solution('0 0') == '0 1'\n"
    },
    {
        "number": 3278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n0 2\n1 2\n3 3''') == '3 2'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5''') == '12 3'\nassert solution('''10\n0 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '15 1'\nassert solution('''100\n0 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '31 1'\nassert solution('''1000\n0 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '31 1'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\\n1\\n0\\n0\\n0\\n0\\n0\") == \"000000\\n000000\\n000000\\n000000\\n000000\\n000000\\n000000\\n\"\nassert solution(\"1\\n1\\n0\\n0\\n0\\n0\\n0\") == \"00101\\n00010\\n000000\\n000000\\n000000\\n000000\\n000000\\n\"\nassert solution(\"2\\n0\\n1 1\\n1\\n1 1\\n1\\n1\") == \"00100\\n00010\\n00001\\n00001\\n00001\\n00001\\n00001\\n\"\nassert solution(\"1\\n0\\n0\\n0\\n0\\n0\\n0\") == \"10001\\n00010\\n00001\\n00001\\n00001\\n00001\\n00001\\n\"\nassert solution(\"1\\n1\\n0\\n0\\n0\\n0\\n0\") == \"00101\\n00010\\n00001\\n00001\\n00001\\n00001\\n00001\\n\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n1\n0\n0\n3''') == '100'\nassert solution('''2\n1\n1\n1\n1\n1\n''') == '101'\nassert solution('''2\n1\n1\n0\n3\n''') == '0000'\nassert solution('''3\n0\n1 1\n1\n1\n1\n''') == '1000'\nassert solution('''3\n1\n1\n1\n1\n1\n''') == '1000'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n1\\n0\\n0\\n0\\n0\\n0\") == \"100\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n1\n0\n0\n3\n''') == '100'\nassert solution('''2\n1\n0\n1\n1\n1\n1\n''') == '0000'\nassert solution('''2\n1\n1\n1\n1\n1\n1\n''') == '1001'\nassert solution('''3\n0\n1 1\n1\n1 1\n1\n1\n''') == '1010'\nassert solution('''3\n0\n0\n0\n0\n0\n0\n''') == '1010'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n2\\n0\\n3\\n0\\n0') == '100\\n000\\n01\\n01\\n01'\nassert solution('0\\n1\\n0\\n0\\n0') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n000'\nassert solution('1\\n1\\n1\\n1\\n1') == '0000\\n100\\n10\\n100\\n10\\n10'\nassert solution('1\\n2\\n1\\n1') == '00\\n00\\n00\\n00\\n00\\n00'\nassert solution('1\\n2\\n2\\n2\\n2') == '00\\n00\\n00\\n10\\n10\\n10\\n10'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n0') == '100'\nassert solution('2\\n1\\n0') == '100\\n000'\nassert solution('2\\n1\\n0\\n2\\n1') == '1000\\n00\\n01\\n10'\nassert solution('2\\n1\\n0\\n2\\n1\\n3') == '1000\\n00\\n00\\n10\\n01'\nassert solution('2\\n1\\n0\\n2\\n1\\n3\\n2') == '1000\\n00\\n00\\n10\\n01\\n10'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '100'\nassert solution('3\\n1 1\\n1\\n1 1\\n1\\n1') == '100'\nassert solution('0\\n1 1\\n1\\n1 1\\n1\\n1') == '000'\nassert solution('0\\n0\\n0\\n0\\n0\\n0') == '000'\nassert solution('1\\n0\\n0\\n0\\n0\\n0') == '101'\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n\n'''\n---Best Time to Buy and Sell Stock II---\n\nDescription:\n\nShare\nGiven a list of prices [p1, p2,..., pn]. All prices are guaranteed to be unique.\n\nYour goal is to return the maximum profit. You can complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times) with the following restrictions:\n\nAfter you sell your stock, you cannot buy stock on next day.\nAfter you buy your stock, you cannot sell stock on next day.\nNote: You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).\nExample 1:\n\nInput: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\nExample 2:\n\nInput: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\nExample 3:\n\nInput: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n'''\n\n\n'''\n---------------------------------------------------------------------------\nThe problem can be solved with a recursive approach.\n\n'''\n"
    },
    {
        "number": 3279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n0\n1 1\n1\n1 1\n1\n1\n\"\"\") == \"00000101\"\n\nassert solution(\n\"\"\"\n0\n1 1\n1\n1 1\n1\n1\n\"\"\") == \"00101001\"\n\nassert solution(\n\"\"\"\n0\n1 1\n1\n1 1\n1\n1\n\"\"\") == \"00000101\"\n\nassert solution(\n\"\"\"\n0\n1\n1\n1\n1\n\"\"\") == \"100\"\n\nassert solution(\n\"\"\"\n0\n1\n1\n1\n1\n\"\"\") == \"0001\""
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1') == '2'\nassert solution('2\\n1\\n1') == '2'\nassert solution('2\\n3\\n2') == '1'\nassert solution('4\\n1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"1\\n1 2\\n2 3\\n2 3\"\n) == \"2\"\nassert solution(\n    \"4 1\\n1 3\\n4 6\\n7 8\\n2 5\"\n) == \"3\"\nassert solution(\n    \"5\\n2 4\\n1 3\\n2 3\\n2 3\\n2 3\"\n) == \"3\"\nassert solution(\n    \"4 1\\n1 2\\n2 3\\n2 3\\n1 3\\n2 3\"\n) == \"3\"\nassert solution(\n    \"10\\n2 3\\n5 7\\n1 9\\n0 5\\n7 8\\n2 5\\n6 8\\n0 2\\n1 3\\n4 5\"\n) == \"2\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1\n1 2\n2 3\n2 3''') == '2'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5''') == '3'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 1') == '3'\nassert solution('6 1') == '5'\nassert solution('4 1\\n1 3\\n4 6\\n7 8') == '3'\nassert solution('3 1\\n1 3\\n4 6\\n7 8') == '3'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4 1\n1 3\n4 6\n7 8\n2 5\n''') == \"3\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4') == '2'\nassert solution('2\\n1\\n3\\n4') == '1'\nassert solution('2\\n2\\n3\\n4') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1\n1 2\n2 3\n2 3''') == 2\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5''') == 3\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 4\nSample Output 2:\n3''') == 3\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 4\n2 4''') == 3\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 4\n4 4\nSample Output 3:\n2\n''') == 2\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3 1\n1 2\n2 3\n2 3\n'''\n) == '2'\n"
    },
    {
        "number": 3280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 450') == '126.86989765'\nassert solution('5 6 450') == '126.86989765'\nassert solution('5 6 450') == '126.86989765'\nassert solution('5 6 450') == '126.86989765'\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '180.0'\nassert solution(stdin) == '180.0'\nassert solution(stdin) == '180.0'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '90.00000000'\nassert solution('3 4 200\\n0 2\\n-1 3\\n0 1\\n2 1') == '126.86989765'\nassert solution('2 2 1000\\n-1 1\\n1 1') == '126.86989765'\nassert solution('5 3 1000\\n0 1\\n-1 1\\n0 2\\n-1 3\\n0 3\\n-1 4\\n0 4\\n0 5\\n0 6\\n1 6') == '126.86989765'\nassert solution('4 5 500\\n0 1\\n-1 1\\n0 2\\n-1 3\\n0 3\\n-1 4\\n0 4\\n0 5\\n0 6\\n1 6') == 'Impossible'\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''-1 100'''\n) == 'Impossible'\n\nassert solution(\n'''6 10 1'''\n) == '90.00000000'\n\nassert solution(\n'''3 2 1'''\n) == '-14.99999937'\n\nassert solution(\n'''3 3 1'''\n) == '90.00000000'\n\nassert solution(\n'''3 3 4'''\n) == '80.0'"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '90.00000000'\nassert solution(input()) == '126.86989765'\nassert solution(input()) == 'Impossible'\n\"\"\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '90.00000000'\n\"\"\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\"\"\") == \"90.0\"\n\nassert solution(\n\"\"\"5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\"\"\") == \"126.88018836\"\n\nassert solution(\n\"\"\"6 8 20\n0 0\n0 2\n2 0\n2 2\n2 4\n4 0\n4 2\n4 4\n5 0\n5 2\n5 4\n5 6\n6 4\n6 6\n7 4\n7 6\n7 8\"\"\") == \"1.12515\"\n\nassert solution(\n\"\"\"6 8 20\n0 0\n0 2\n2 0\n2 2\n2 4\n4 0\n4 2\n4 4\n5 0\n5 2\n5 4\n5 6\n6 4\n6 6\n7 4\n7 6\n7 8\"\"\") == \"Impossible\"\n\nassert solution(\n\"\"\"5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\"\"\") == \"90.0\""
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 400\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"Impossible\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\"\nassert solution(\"1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"Impossible\"\nassert solution(\"1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"Impossible\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"737\") == \"4 8 29 9 28 11 26 15 22\"\nassert solution(\"30014\") == \"7 85 29929 9 28 11 26 15 22\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(\"10\") == \"0\\n1\\n1\"\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdin, stdout = sys.stdin, sys.stdout\n        sys.stdin, sys.stdout = StringIO(input), StringIO(output)\n        resolve()\n        sys.stdin.close()\n        sys.stdout.close()\n\n    def test_Sample_Input_1(self):\n        self.assertIO(input=\"37\", output=\"4\\n8 29\\n9 28\\n11 26\\n15 22\")\n\n    def test_Sample_Input_2(self):\n        self.assertIO(input=\"30014\", output=\"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\")\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('24') == ''\nassert solution('56') == ''\nassert solution('71') == ''\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\nassert solution(\"38\") == \"1\"\nassert solution(\"24\") == \"2\"\nassert solution(\"38\") == \"1\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(\"10001\") == \"0\"\nassert solution(\"100010\") == \"0\"\nassert solution(\"1000201\") == \"0\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\nprint(\"All tests past.\")\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 1''') == '3.5'\nassert solution('''3 3 2''') == '4.9'\n\nprint(solution('''2 1 4'''))"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3 1''') == '3.5'\nassert solution('''3 3 2''') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\nassert solution('1 0 1') == '0.5'\nassert solution('100 100 100') == '100'\nassert solution('4 4 3') == '5'\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 1''') == '3.5'\nassert solution('''3 3 2''') == '4.9'\nassert solution('''2 3 2''') == '4.9'\nassert solution('''3 5 1''') == '9.0'\nassert solution('''3 5 2''') == '10.0'\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"2 3 1\"\"\") == '3.5'\nassert solution(\n\"\"\"3 3 2\"\"\") == '4.9'\nassert solution(\n\"\"\"1000 2 3 100\"\"\") == '97.69999'\nassert solution(\n\"\"\"1000 2 5 100\"\"\") == '98.50000'\nassert solution(\n\"\"\"100000 100000 100000\"\"\") == '0.5'\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n\"\"\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3.5\""
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\nprint(\"tests passed\")\n\"\"\""
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 5 1 5''') == '19'\nassert solution('''12 12 1 12''') == '4'\nassert solution('''1 100 1 100''') == '49'\nassert solution('''14 8 14 8''') == '2'\nassert solution('''10 13 14 10''') == '0'\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12 12 1 12') == '4'\nassert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\nassert solution('1 5 1 5') == '19'\nassert solution('9 9 1 9') == '0'\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5 1 5') == 19\nassert solution('12 12 1 12') == 4"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''12 12 1 12''') == '4'\nassert solution('''1 5 1 5''') == '19'\nassert solution('''12 12 1 12''') == '4'\nassert solution('''1 6 3 1''') == '3'\nassert solution('''1 1 1 1''') == '1'\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 19\n\n\"\"\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5 1 5') == 19\nassert solution('12 12 1 12') == 4\nprint('The test passed')\n"
    },
    {
        "number": 3284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5 1 5') == 19\nassert solution('12 12 1 12') == 4\nassert solution('1 1 1 1') == 1\nassert solution('123 1 1 1') == 1\nassert solution('123123 1 1 1') == 0\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\n\"\"\""
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('1 2') == '-1'\nassert solution('1 8') == '-1'\nassert solution('1 15') == '5'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"8 7\") == \"4\"\nassert solution(\"2 100\") == \"20\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5') == 4\nassert solution('1 12') == 4\nassert solution('1 1') == 4\nassert solution('1 12') == 4\nassert solution('1 2') == 4\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"4\"\nassert solution(input(\"\")) == \"4\"\nassert solution(input(\"\")) == \"4\"\nassert solution(input(\"\")) == \"4\"\nassert solution(input(\"\")) == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 5''') == '4'\nassert solution('''1 12''') == '4'\nassert solution('''1 10''') == '4'\nassert solution('''1 50''') == '4'\nassert solution('''1 100''') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 12') == '4'\nassert solution('1 5') == '4'\nassert solution('2 10') == '5'\nassert solution('1 19') == '5'\nassert solution('1 1000000') == '19'\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\nassert solution(\"cocac\") == \"cocacor\"\nassert solution(\"caor\") == \"caor\"\nassert solution(\"car\") == \"cocaror\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('cocar') == '2'\nassert solution('car') == '1'\nassert solution('c') == '0'\nassert solution('car'*100000) == '999999'\nassert solution('co'*100000) == '1000000'\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('cocar') == \"2\"\nassert solution('car') == \"1\"\nassert solution('car') == \"1\"\nassert solution('roobar') == \"1\"\nassert solution('roobar') == \"1\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"car\") == \"cocar\"\nassert solution(\"cocar\") == \"cococar\"\nassert solution(\"cococo\") == \"cococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococococcococococococococococococococococococococococococococcococococococococococococcococococococococococococococcocococococococococcocococcocococcococococcococococococococococococococccocococcocococcococococcocococccocccocococccocccocccocccocccocccocccocccocccocccocccocccoccccocccocccoccccocccocccoccccoccccocccocccoccccoccccocccocccoccccocccoccccoccccccoccccocccoccccoccccccoccccccocccoccccccoccccccccoccccoccccccccccccccccccoccccoccccccccccccccccoccccccccccccccccccccccccccccccccoccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\nassert solution(\"co\") == \"co\"\nassert solution(\"car\") == \"cocaror\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('car') == 'cocaror'\nassert solution('cocar') == 'cocaror'\nassert solution('cocarc') == 'cocaror'\nassert solution('cocarot') == 'cocaror'\nassert solution('cocarou') == 'cocaror'\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"car\") == \"cocar\"\nassert solution(\"cocar\") == \"cocococar\"\nassert solution(\"cocar\") == \"cococococar\"\nassert solution(\"cocar\") == \"cococococar\"\nassert solution(\"cocar\") == \"cococococar\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"car\") == \"cocaror\"\nassert solution(\"cocar\") == \"cocaror\"\nassert solution(\"cocaror\") == \"cocaror\"\nassert solution(\"cocarora\") == \"cocaror\"\nassert solution(\"cocarot\") == \"cocaror\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0'"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n0 2 0 1\\n') == '8'\nassert solution('6\\n1000000 1 1 1 1\\n') == '0'\nprint('Testcases passed')\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n0 2 0 1''') == 8\nassert solution('''5\n1000000 1 1 1 1''') == 0\nassert solution('''6\n100000 0 0 0 0 0\nSample Output 2:\n0\n''') == 0\n'''\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 2 0 1\\n\") == \"8\"\nassert solution(\"5\\n1000000 1 1 1 1\\n\") == \"0\"\nassert solution(\"6\\n1000000 1 1 1 1 1\\n\") == \"0\"\nassert solution(\"7\\n1000000 1 1 1 1 1 1\\n\") == \"0\"\nassert solution(\"8\\n1000000 1 1 1 1 1 1 1\\n\") == \"0\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 2 0 1\") == \"8\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\nprint(\"Success\")"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 650\n''') == 'zyz'\nassert solution('''2 651\n''') == '-1'\nassert solution('''3 655\n''') == 'yyzzz'\nassert solution('''2 655\n''') == 'zzz'\nassert solution('''3 655\n''') == 'yyzz'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n\"\"\"\n\nimport sys\nimport operator"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 650\n''') == 'zyz'\nassert solution('''2 651\n''') == '-1'\nprint(solution('''2 650\n'''))\nprint(solution('''2 651\n'''))\n'''\nYou are given an array of numbers. You have to find the maximum sum of all possible subarrays, where the sum of a subarray has to contain at least one number that occurs more than once in it.\n\nExample\n\nFor the array [4, 2, 1, 1], the max sum is 2 + 2 + 1 + 1 = 6.\n\nFor the array [1, 2, 3, 4], the max sum is 4.\n\nFor the array [1, 2, 1, 1, 3], the max sum is 2 + 3 = 5.\n\nFor the array [5, 5, 5, 5, 5], the max sum is 5 + 5 + 5 + 5 + 5 = 30,\n\nand for the array [3, 4, 1, 1, 5, 5], the max sum is 4 + 4 + 1 + 1 + 5 + 5 = 17.\n\n--hint: you can count the number of occurrences of a number in a given array.\n\n--hint: you can find the sum of all the numbers to the left of a number whose count is greater than 1, as well as the sum of all the numbers to the right of a number whose count is greater than 1.\n\n--hint: you can find the sum of all the numbers to the left of a number whose count is greater than 1, as well as the sum of all the numbers to the right of a number whose count is greater than 1, and add them together.\n\n--hint: the maximum sum of the subarray must be smaller than the current maximum sum.\n\n--hint: start from the beginning, and do a sliding window approach.\n\n'''"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 650\n''') == 'zyz'\nassert solution('''2 651\n''') == '-1'\nassert solution('''2 1\n''') == '-1'\nassert solution('''2 9\n''') == '-1'\nassert solution('''2 100\n''') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n\n\"\"\""
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 650''') == 'zyz'\nassert solution('''2 651''') == '-1'\nassert solution('''3 652''') == 'bdb'\nassert solution('''3 653''') == '-1'\nassert solution('''3 654''') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 650\n''') == 'zyz'\nassert solution('''2 651\n''') == '-1'\nassert solution('''3 652\n''') == 'zyx'\nassert solution('''3 653\n''') == '-1'\nassert solution('''4 655\n''') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\nprint(\"Exercise 1, done.\")\n"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 650''') == 'zyz'\nassert solution('''2 651''') == '-1'\n'''"
    },
    {
        "number": 3288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 650''') == 'zyz'\nassert solution('''2 651''') == '-1'\nassert solution('''2 882''') == 'zyzyzyzy'\nassert solution('''2 873''') == 'zzzzz'\nassert solution('''2 894''') == 'zyzyz'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n') == '4'\nassert solution('1\\n6\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '8'\nassert solution('2\\n6\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '12'\nassert solution('3\\n6\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '6'\nassert solution('4\\n6\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '3'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4'\nassert solution('''10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1''') == '8'\nassert solution('''20\n2 8 1\n2 1 1\n0 2 0\n1 1 0\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n4 1 1\n2 3 1\n4 1 0\n2 1 0\n2 0 1\n2 4 1\n1 1 3\n5 2 1\n1 0 0\n1 2 0\n2 4 0\n2 0 0\n2 2 0\n2 2 0\n0 1 1\n2 1 0\n8 2 0\n2 3 1\n5 2 1\n8 2 0\n1 1 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1 1 1\n1 1 1\n1 1 1\n0 1 1\n0 1 1\n1"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n0 0 0\\n1 1 0\\n3 1 0') == '0'\nassert solution('6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n') == '4'\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '8'\nassert solution('15\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '16'\nprint('Success')\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n1\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nassert solution('''\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'\nassert solution('''\n1\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nassert solution('''\n10\n5 3 0\n0 1 0\n0 1 1\n1 3 1\n10 1 0\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 3 1\n''') == '8'\nassert solution('''\n1\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nassert solution('''\n5\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'\nassert solution('''\n3\n0 3 0\n1 1 0\n3 1 0\n''') == '2'\nassert solution('''\n7\n0 3 0\n1 1 0\n2 2 0\n3 3 0\n4 4 0\n5 5 0\n6 6 0\n7 7 0\n''') == '3'\nassert solution('''\n8\n0 3 0\n1 1 0\n2 2 0\n3 3 0\n4 4 0\n5 5 0\n6 6 0\n7 7 0\n8 8 0\n9 9 0\n''') == '5'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1') == '2'\nassert solution('1\\n1\\n1') == '3'\nassert solution('1\\n1\\n1\\n1') == '4'\nassert solution('1\\n1\\n1\\n1\\n1') == '5'\nassert solution('1\\n1\\n1\\n1\\n1') == '6'\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nassert solution('''10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\n\nassert solution('''\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'\n\nassert solution('''\n4\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n''') == '4'\n\nassert solution('''\n11\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '9'\n\nassert solution('''\n11\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '9'"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"/home/ralf/Downloads/test_file.txt\").read()) == \"8\"\nassert solution(open(\"/home/ralf/Downloads/test_file2.txt\").read()) == \"1\"\nprint(solution(open(\"/home/ralf/Downloads/input.txt\").read()))\n"
    },
    {
        "number": 3289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nassert solution('''\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '8'\nassert solution('''\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '8'\nassert solution('''\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nassert solution('''\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '8'\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 4\\n3 4 5 7\\n1 2 10\") == \"0\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4 5\n3 4 5 7\n1 2 10\n''') == '0'\nassert solution('''2 4 5\n3 4 5 7\n1 2 10\n''') == '-1'\nassert solution('''5 4 3\n1 4 7 9 11\n2 3\n''') == '1'\nassert solution('''5 4 3\n1 4 7 9 11\n2 3\n''') == '-1'\nassert solution('''3 4 5\n3 4 5 7\n1 2 10\n''') == '0'\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 4 3\n3 4 5 7\n1 2 10\"\"\") == \"0\"\nassert solution(\"\"\"3 5 2\n1 4 7 9 11\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"7 7 1\n5 6 7 9 8\n7 8 7 5\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10\\n') == '0'\nassert solution('2 3 1\\n4 7 5 9 11\\n1 2 10\\n') == '2'\nassert solution('1 2 3\\n4 7 5 9 11\\n1 2 10\\n') == '2'\nassert solution('1 3 1\\n4 7 5 9 11\\n1 2 10\\n') == '-1'\nassert solution('2 2 1\\n4 7 5 9 11\\n1 2 10\\n') == '1'\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0'\n\nassert solution(stdin) == '2'"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\\n\"\nassert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n2 3\") == \"2\\n\"\nassert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n3 4 5 7\") == \"2\\n\"\nassert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n2 3\\n3 4 5 7\") == \"2\\n\"\nassert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n2 3\") == \"2\\n\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\"\nassert solution(\"3 4 2\\n1 4 7 9 11\\n2 3\") == \"2\"\nassert solution(\"2 3 3\\n1 4 7 9 11\\n2 3\") == \"2\"\nassert solution(\"3 4 3\\n1 4 7 9 11\\n2 3\") == \"1\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == str(0)\n\nassert solution(\"2 4 3\") == str(0)\nassert solution(\"3 4 5 7\") == str(0)\nassert solution(\"1 2 10\") == str(0)\nassert solution(\"2 4 7 9 11\") == str(0)"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n3 2') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4') == '3\\n-1 1\\n2 1\\n0 -2\\n'\n\"\"\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n3 2\\n') == '1\\n-2 -1'\nassert solution('1 2\\n3 4\\n') == '3\\n-1 1'\nassert solution('3 4\\n2 1\\n') == '3\\n-1 1'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n3 2\\n') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4\\n') == '3\\n-1 1\\n2 1\\n0 -2\\n'\nassert solution('1 1\\n3 4\\n') == '3\\n-1 1\\n2 1\\n0 -2\\n'\nassert solution('1 2\\n3 4\\n') == '3\\n-1 1\\n2 1\\n0 -2\\n'\nassert solution('1 1\\n3 4\\n') == '3\\n-1 1\\n2 1\\n0 -2\\n'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n3 2') == '1\\n-2 -1'\nassert solution('1 2\\n3 4') == '3\\n-1 1'\nassert solution('1 1\\n1 1') == '0\\n0'\nassert solution('1 1\\n3 3') == '3\\n0 0'\nassert solution('1 1\\n1 1\\n1 1') == '3\\n0 0\\n0 0'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n3 2''') == '1'\nassert solution('''1 2\n3 4''') == '3'\nassert solution('''2 4\n3 1''') == '-1'\nassert solution('''5 6\n5 6''') == '3'\nassert solution('''2 1\n1 4''') == '-1'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3''') == '1'\nassert solution('''3 2''') == '3'\nassert solution('''3 2''') == '3'\nassert solution('''4 4''') == '3'\nassert solution('''8 16''') == '4'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1\\n-2 -1'\nassert solution('3 2') == '1\\n-2 -1'\nassert solution('1 2') == '3\\n-1 1'\nassert solution('3 4') == '3\\n-1 1\\n2 1\\n0 -2'\nassert solution('1 3') == '2\\n-1 0'\n"
    },
    {
        "number": 3291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2 3\n3 2''') == '1'\nassert solution('''1 2\n3 4''') == '3'\nassert solution('''2 1\n3 4''') == '-1 -1'\nassert solution('''1 1\n1 1''') == '2'\nassert solution('''1 1\n1 1''') == '2'\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('d') == [1,0,0,0,0]\nassert solution('a') == [0,0,0,0,1]\nassert solution('m') == [0,1,0,0,0]\nassert solution('t') == [0,0,0,1,0]\nassert solution('i') == [0,0,1,0,0]\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''IVO\nJASNA\nJOSIPA''') == '4'\nassert solution('''IVO\nIVO\nIVO\nIVO\nIVO''') == '4'\nassert solution('''IVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\nIVO\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\nIVO\\nJASNA\\nJOSIPA\\n2\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO\\nIVO"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\nIVO\nJASNA\nJOSIPA''') == '4'\nassert solution('''5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA''') == '24'\nassert solution('''5\nMAR\nMAT\nMAR\nMAT\nMAR''') == '6'\nassert solution('''6\nMARIA\nMARIA\nMARIA\nMARIA\nMARIA\nMAR''') == '8'\nassert solution('''7\nJOSIPA\nJOSE\nJOSE\nJOSE\nJOSE\nJOSE\nJOSE''') == '15'\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('IVO\\nJASNA\\nJOSIPA') == '4'\nassert solution('IVO\\nJASNA\\nJOSIPA\\nIVO\\nMARICA') == '4'\nassert solution('IVO\\nJASNA\\nJOSIPA\\nIVO\\nIVO') == '4'\nassert solution('IVO\\nJASNA\\nJOSIPA\\nIVO\\nIVO\\nIVO') == '4'\nassert solution('IVO\\nJASNA\\nJOSIPA\\nIVO\\nIVO\\nIVO\\nIVO') == '4'\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('IVO\\nJASNA\\nJOSIPA\\n') == '4'\nassert solution('IVO\\nJASNA\\nJOSIPA\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n') == '24'\nassert solution('IVO\\nJASNA\\nJOSIPA\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\nMARTHA\\nMARY\\n') == '24'\nassert solution('IVO\\nJASNA\\nJOSIPA\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\nMARTHA\\nMARY\\nJOSE\\n') == '24'\nassert solution('IVO\\nJASNA\\nJOSIPA\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\nMARTHA\\nMARY\\nJOSE\\nJOSHUA\\n') == '24'\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\nIVO\nJASNA\nJOSIPA''') == '4'\nassert solution('''5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA''') == '24'\nprint(solution(stdin))"
    },
    {
        "number": 3292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(INPUT_SAMPLE) == OUTPUT_SAMPLE\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n5\\n2') == '39'\nassert solution('2\\n5\\n4\\n3') == '37'\nassert solution('1\\n2\\n3\\n4') == '0'\nassert solution('1\\n2\\n3\\n4\\n5') == '-15'\nassert solution('1\\n2\\n2\\n1') == '0'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\\n2\") == \"2\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '1'\nassert solution('3\\n') == '0'\nassert solution('3\\n') == '0'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39'\nassert solution('''4\n1 2 3 4 1\n2 3 4 5 1\n3 4 5 6 1\n4 5 6 7 1\n''') == '5'\nassert solution('''5\n1 2 3 4 5 1\n2 3 4 5 6 1\n3 4 5 6 7 1\n4 5 6 7 8 1\n5 6 7 8 9 1\n''') == '10'\nassert solution('''6\n1 2 3 4 5 6 1\n2 3 4 5 6 7 1\n3 4 5 6 7 8 1\n4 5 6 7 8 9 1\n5 6 7 8 9 10 1\n6 7 8 9 10 11 1\n''') == '19'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('1 2 3 1') == '3'\nassert solution('2 3 4 1') == '3'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1\n2\n3\n4\n\"\"\") == \"3\"\nassert solution(\"\"\"3\n2\n3\n4\n\"\"\") == \"39\"\nassert solution(\"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"0\"\nassert solution(\"\"\"3\n2\n3\n4\n5\n6\n7\n8\n9\n10\n100\n\"\"\") == \"50\"\nassert solution(\"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''\n3\n1 2 3 1\n2 3 4 1\n1 1 3 1\n''') == '0'\nassert solution('''\n4\n2 2 3 8\n3 1 5 6\n1 9 4 7\n2 1 1 5\n''') == '39'\nassert solution('''\n5\n3 5 4 2 3\n2 3 4 2\n1 2 1 2\n4 3 3 1\n5 4 5 1\n''') == '23'\nassert solution('''\n6\n1 5 5 2 5 3\n2 2 5 2 5\n1 1 3 1 5\n3 2 1 1 1\n4 4 3 1 1\n5 5 5 1 1\n''') == '0'\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n3\n4''') == \"3\"\n\nassert solution('''3\n2\n1 2 3\n4 5 6\n7 8 9''') == \"39\"\n\nassert solution('''3\n2\n1 2 3\n4 5 6\n7 8 9''') == \"39\"\n'''\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n3\\n2 3 4 1\\n2 3 4 1\\n3 4 5 1\\n') == '3'\nassert solution('2\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n4 4 4 4 4\\n4 4 4 4 4\\n') == '39'\n\"\"\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '5 8 4 -2 0 0 -3 2 0 0 3\\n'\n    '8 10 4 -1 -1 1 -1 1 1 -1 1\\n'\n) == '5.2696518641'\n\nprint(solution(\n    '2\\n'\n    '5 8 4 -2 0 0 -3 2 0 0 3\\n'\n    '8 10 4 -1 -1 1 -1 1 1 -1 1\\n'\n))\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\nassert solution('''1\n8 9 3 -14 -14 14 -14 0 20\nSample Output 2:\n9\n''') == '9'\nassert solution('''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '9'\nassert solution('''2\n5 6 2 -2 0 0 -3 2 0 0 3\n6 8 4 -1 -1 1 -1 1 1 -1 1\n''') == '3.8125'\nassert solution('''2\n2 2 2 -2 0 0 -2 2 0 0 2\n2 2 2 -2 0 0 -2 2 0 0 2\n2 2 2 -2 0 0 -2 2 0 0 2\n''') == '-1.125'\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '9'\n\"\"\"\n\nfrom typing import List, Tuple\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1 1 -1 1''') == '5.2696518641'\n'''\nassert solution('''8 9 3 -14 -14 14 -14 0 20\n8 10 4 -1 -1 1 -1 1 1 -1 1 1 -1 1''') == '9'\n'''\nassert solution('''1\n8 9 3 -14 -14 14 -14 0 20\n8 10 4 -1 -1 1 -1 1 1 -1 1 1 -1 1''') == '9'\n'''\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 9 3 -14 -14 14 -14 0 20') == '9'\n\"\"\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 8 4 -2 0 0 -3 2 0 0 3''') == \"5.2696518641\"\nassert solution('''8 10 4 -1 -1 1 -1 1 1 -1 1''') == \"9\"\nassert solution('''8 9 3 -14 -14 14 -14 0 20''') == \"9\"\nassert solution('''7 7 2 -7 -2 -7 0 2 0 7 7''') == \"2.0764732237\"\nassert solution('''1 1 1 -1 1 1 -1 1 1''') == \"0\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5\\n2\\n8\\n4\\n-2\\n0\\n0\\n-3\\n2\\n0\\n0\\n3\\n0\\n0\\n') == '5.2696518641'\nassert solution('5\\n5\\n2\\n8\\n4\\n-1\\n-1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_string) == expected_output\nprint(solution(input_string))\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == '1\\n8\\n4'\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == '6\\n4\\n24'\nassert solution(\"4\\n4 1 1\\n5 2 3\\n5 0 3\") == '4\\n'\nassert solution(\"4\\n5 3 2\\n0 1 1\") == '-1\\n'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 1 1\n2 0 2\n3 1 1\n''') == '1'\nassert solution('''\n1\n0 0 1\n''') == '-1'\nassert solution('''\n1\n0 0 1\n2 0 2\n3 1 1\n''') == '-1'\nassert solution('''\n1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '-1'\nassert solution('''\n1\n1 0 1\n1 1 1\n1 0 1\n''') == '4'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n'''"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '4'\nassert solution('2\\n3\\n1\\n2') == '4'\nassert solution('1\\n2\\n3\\n4') == '4'\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n1 1 1\") == \"-1\"\nassert solution(\"3\\n2 0 2\") == \"8\"\nassert solution(\"3\\n3 1 1\") == \"4\"\nassert solution(\"3\\n4 1 1\") == \"4\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n0\") == \"-1\"\nassert solution(\"3\\n3\\n1\") == \"4\"\nassert solution(\"4\\n2\\n2\") == \"4\"\nassert solution(\"5\\n2\\n1\") == \"8\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\\n1\\n1\\n\"\nassert solution(\"2\\n2\\n2\\n\") == \"4\\n\"\nassert solution(\"3\\n3\\n3\\n\") == \"6\\n\"\nassert solution(\"4\\n4\\n4\\n\") == \"8\\n\"\nassert solution(\"5\\n5\\n5\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n''') == '3'\nassert solution('''\n6 6\n''') == '240'\nassert solution('''\n6\n''') == '240'\nassert solution('''\n5 3\n''') == '12'\nassert solution('''\n5\n''') == '12'\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n'''\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '240'\n'''\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1203'\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n''') == '3'\nassert solution('''6 6\n''') == '240'\nassert solution('''5 1\n''') == '5'\nassert solution('''13 8\n''') == '3'\nassert solution('''0 0\n''') == '0'"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n''') == '3'\nassert solution('''\n6 6\n''') == '240'\n"
    },
    {
        "number": 3296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[7:12]\n\"\"\"\n\nn, k = map(int, stdin.split())"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('S$\\rightarrow $9, E$\\rightarrow $5, N$\\rightarrow $6, D$\\rightarrow $7, M$\\rightarrow $1, O$\\rightarrow $0, R$\\rightarrow $8, Y$\\rightarrow $2') == 'impossible'\nassert solution('A+A=A') == 'impossible'\nassert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('H3K4N+N3R1=T4T') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n\"\"\""
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\nSEND+MORE=MONEY\n''') == '9567+1085=10652'\nassert solution(\n'''\nA+A=A\n''') == 'impossible'\nassert solution(\n'''\nA+B=C\nC=A+B\n''') == 'impossible'\nassert solution(\n'''\nA+B=C\nC=A+B\n''') == 'impossible'\nassert solution(\n'''\nA+B=C\nC=A+B\n''') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\nassert solution(\"A+B=C\") == \"impossible\"\nassert solution(\"AB+CD=EF\") == \"impossible\"\nassert solution(\"A+B=C\") == \"impossible\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nassert solution('B+B=BB') == 'impossible'\nassert solution('B+B=BA') == 'impossible'\nassert solution('B+B=BA') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n-----\nTests\n\n2\nSEND+MORE=MONEY\nSEND+MORE=MONEY\nimpossible\nSEND+MORE=MONEY\nimpossible\nimpossible\n\n3\nA+A=A\nA+A=B\nA+B=A\nimpossible\nA+B=A\nA+B=B\nA+B=A\n\n4\nA+B=A\nA+B=B\nA+B=C\nimpossible\nA+B=D\nimpossible\nimpossible\n\n5\nA+B=A\nA+B=B\nA+B=C\nimpossible\nA+B=D\nimpossible\nimpossible\n\n6\nA+B=A\nA+B=B\nA+B=C\nA+B=D\nimpossible\n\n7\nA+B=A\nA+B=B\nA+B=C\nA+B=D\nimpossible\n\n8\nA+B=A\nA+B=B\nA+B=C\nA+B=D\nimpossible\n\n9\nA+B=A\nA+B=B\nA+B=C\nA+B=D\nimpossible\n\"\"\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nassert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('SEND+MORE=MONEY') == '9567+1085=10652'\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n'''\n"
    },
    {
        "number": 3297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nassert solution('A+B=C') == 'impossible'\nassert solution('A+B=0C') == 'impossible'\nassert solution('A+B=A') == 'impossible'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0\n1\n2\n3''') == '14'\nassert solution('''0\n1\n2\n1\n1''') == '1'\nassert solution('''1\n1\n2\n1\n1''') == '1'\nassert solution('''2\n2\n1\n2\n1''') == '4'\nassert solution('''3\n3\n2\n1\n1''') == '7'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 2 3') == '14'\nassert solution('1 1 2 1 1') == '1'\nassert solution('2 2 1 2') == '2'\nassert solution('2 2 1 2') == '2'\nassert solution('2 1 1') == '1'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 2 3 4 5 6 7 8 9') == '14'\nassert solution('1 1 2 1 1') == '1'\nassert solution('2 2 1 1 2 1') == '0'\nassert solution('5 5 2 2 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1 2 3') == '14'\nassert solution('1 1 2 1 1') == '1'\nassert solution('1 1 2 1 1 1') == '1'\nassert solution('1 1 2 1 1 1 1 1 1 1') == '1'\nassert solution('1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n0 1 2 3\n1 1 2 1 1''') == '14'\nassert solution('''5\n1 1 2 1 1\n1 1 2 1 1''') == '1'\nprint(solution('''6\n1 1 2 1 1 1\n1 1 2 1 1 1'''))\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 1 2 3\") == \"14\"\nassert solution(\"1 1 2 1 1\") == \"1\"\nassert solution(\"1 1 2 3\") == \"14\"\nassert solution(\"1 1 2 3 4\") == \"1\"\nassert solution(\"0 1 2 3 4\") == \"1\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n0 1 2 3\n''') == '14'\nassert solution(\n'''\n0 1 2 3\n''') == '1'\nassert solution(\n'''\n1 1 2 1 1\n''') == '1'\nassert solution(\n'''\n1 1 2 1 1\n''') == '1'\nassert solution(\n'''\n1 1 2 1 3\n''') == '0'\n"
    },
    {
        "number": 3298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 1 2 3\n1 1 2 1 1\n''') == '14'\nassert solution('''0 1 2 3 4\n1 1 2 1 1\n''') == '1'\nassert solution('''0 1 2 3 4 5\n1 1 2 1 1 1\n''') == '1'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '5'\nassert solution('''1\n1\n1\n2\n3\n4\n5\n5\n6\n6\n7\n7\n7\n7\n''') == '1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"1 2 3\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n0 0 3\\n0 1 2 3\") == \"20\"\nassert solution(\"1 2 3\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n0 0 3\\n0 1 2 3\") == \"20\"\nassert solution(\"1 2 3\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n0 0 3\\n0 1 2 3\") == \"20\"\nassert solution(\"1 2 3\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n0 0 3\\n0 1 2 3\\n0 0 1\") == \"16\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n''') == '88'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'\n'''\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n'''\n) == '88'\n\nassert solution(\n'''\n5 5\n1 2 3 4 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n'''\n) == '-1'\n\nassert solution(\n'''\n1 1\n1\n'''\n) == '1'\n\nassert solution(\n'''\n4 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n'''\n) == '0'\n\nassert solution(\n'''\n2 2\n1 1\n2\n'''\n) == '-1'"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n') == '88'\nassert solution('1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n') == '-1'\nassert solution('1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n') == '-1'\nassert solution('1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n') == '-1'\nassert solution('1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == '88'\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n5 6 4 3\") == '-1'\n\"\"\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == '88'\nassert solution('1\\n4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 0 0 0\\n0 0 0 0') == '-1'\nassert solution('1\\n4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 0 0 0\\n0 0 0 0') == '-1'\nassert solution('1\\n4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == '-1'\nassert solution('1\\n4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 0') == '88'\nassert solution('0 0 5 6') == '-1'\nassert solution('0 0 7 8') == '-1'\nassert solution('7 0 0 10') == '88'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n'''\n) == '88'\n\nassert solution(\n'''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n'''\n) == '-1'\n\nassert solution(\n'''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n'''\n) == '-1'\n\nassert solution(\n'''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n1 0 0 10\n'''\n) == '-1'\n\nassert solution(\n'''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n0 0 10 11\n'''\n) == '-1'"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10''') == '88'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == '-1'\nassert solution('''1 1\n2 3 4 0\n0 0 0 5 6\n0 0 0 7 8\n0 0 0 9 10''') == '-1'\nassert solution('''10 10\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n1 2 3 4 0\n0 0 0 5 6\n0 0 0 7 8\n0 0 0 9 10''') == '-1'\nassert solution('''10 10\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n1 2 3 4 0\n0 0 0 5 6\n0 0 0 7 8\n0 0 0 9 10''') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 3 6 9\\n7 0 0 10\") == \"54\"\nassert solution(\"3 2\\n1 2 1\\n2 1 2\") == \"1\"\nassert solution(\"3 2\\n1 2 1\\n2 1 2\") == \"2\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n1 3 6 9\\n7 0 0 10\") == \"-1\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '9999700002.000'\nassert solution(stdin) == '9999700002.000'\nassert solution(stdin) == '9999700002.000'\nassert solution(stdin) == '9999700002.000'\nassert solution(stdin) == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1\\n1 1\\n') == '0.000'\nassert solution('1 99999\\n99999 99999\\n') == '9999700002.000'\nassert solution('1 2\\n1 3\\n') == '0.500'\nassert solution('1 2\\n1 3\\n') == '0.500'\nassert solution('1 2\\n1 3\\n') == '0.500'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1 1''') == '0.000'\nassert solution('''1\n999999999 1''') == '9999700002.000'\nassert solution('''10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '1.000'\nassert solution('''2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '1.000'\nassert solution('''3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '1.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == '0.000'\nassert solution(\"1 2\") == '0.000'\nassert solution(\"1 99999\") == '9999700002.000'\nassert solution(\"99998 8\") == '9999700002.000'\nassert solution(\"99998 99999\") == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 1\n1 1''') == '0.000'\nassert solution('''2\n1 99999\n99999 99999''') == '9999700002.000'\nassert solution('''4\n1 99999\n99999 99999\n1 1\n1 1''') == '0.000'\nassert solution('''4\n1 99999\n99999 99999\n1 1\n1 1''') == '0.000'\nassert solution('''4\n1 99999\n99999 99999\n99999 99999\n1 1\n1 1''') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n1 1\n1 1''') == '0.000'\nassert solution('''2\n1 99999\n99999 99999''') == '9999700002.000'\nassert solution('''3\n5 0\n1 0\n1 0\n2 0\n5 0''') == '0.000'\nassert solution('''10\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11''') == '2.000'\nassert solution('''5\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15''') == '7.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '9999700002.000'\nassert solution('1 1') == '0.000'\nassert solution('1 99999') == '9999700002.000'\nassert solution('99999 99999') == '9999700002.000'\nassert solution('99999 99999 1 1') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '0.000'\nassert solution('2\\n1 99999\\n99999 99999') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\"\nassert solution(\"2\\n1 99999\\n99999 1\") == \"9999700002.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n99999 99999\") == \"9999700002.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n99999 99999\") == \"9999700002.000\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"2 4 2\") == \"Impossible\"\nassert solution(\"2 4 3\") == \"3\"\nassert solution(\"2 4 5\") == \"Impossible\"\nassert solution(\"2 4 4\") == \"3\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4''') == '3'\nassert solution('''1 2 3\n1 3 2\n1 4 3\n2 1 5\n2 3 2\n2 4 5\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4''') == 'Infinity'\nassert solution('''8 1 1\n1 2 3\n1 3 4\n2 4 5\n2 3 6\n3 4 7\n4 5 8\n5 6 7\n5\n1 2\n1 3\n2 4\n3 5\n4 6\n5 7\n6 7\n7 8\n8''') == 'Infinity'\nassert solution('''1 2 3\n1 3 2\n1 4 3\n2 1 5\n2 3 2\n2 4 5\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n8''') == 'Infinity'\nassert solution('''2 1 1\n1 2 3\n1 3 4\n2 4 5\n2 3 6\n3 4 7\n4 5 8\n5 6 7\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 6\n5\n1 3\n1 4\n2 5\n3 6\n4 7\n5 8\n6 7\n7 8\n7\n1 2\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4') == '3'\nassert solution('5 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 3 2 4') == 'Infinity'\nassert solution('1 3 2 4') == 'Infinity'\nassert solution('1 2 3 4 5') == 'Impossible'\nassert solution('1 2 3 4 5') == 'Impossible'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4') == '3'\nassert solution('3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n') == 'Infinity'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 2 5\") == \"Impossible\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"3\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('0\\n') == 'Infinity'\nassert solution('1\\n') == 'Infinity'\nassert solution('1 2\\n') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4'''\n) == '3'\nassert solution(\n'''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\nSample Output 2:\nInfinity'''\n) == 'Infinity'\nassert solution(\n'''9 9 1 7\n1 2 7\n1 3 3\n2 4 5\n2 5 1\n3 6 6\n3 7 1\n4 8 2\n4 9 3\n5 8 2\n5 9 4\n5\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9'''\n) == '6'\nassert solution(\n'''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\nSample Output 2:\nInfinity'''\n) == 'Infinity'\nassert solution(\n'''2 2 1 3\n1 2 4\n1 2 5\n2 3 1\n2\n1 2\n2 3'''\n) == '1'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4''') == '3'\nassert solution('''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\nassert solution('''5 4 1 2\n1 2 3\n1 3 2\n1 2 4\n2 3 1\n2\n1 2\n''') == 'Infinity'\nassert solution('''4 2 1 3\n1 2 3\n1 3 2\n2 3 1\n2\n2 1\n''') == '4'\nassert solution('''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'Impossible'\nassert solution('1 1 1 1 1') == 'Infinity'\nassert solution('1 1 1 1 1 1 1') == 'Impossible'\nassert solution('4 3 1 4') == '3'\nassert solution('1 1 2 1') == '3'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open('test_1.txt').read()) == '000'\nassert solution(open('test_2.txt').read()) == '111'\nassert solution(open('test_3.txt').read()) == '101'\nassert solution(open('test_4.txt').read()) == '000'\nassert solution(open('test_5.txt').read()) == '110'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 1\n6\n''') == 'impossible'\nassert solution('''3 1\n1\n''') == '000'\nassert solution('''4 3\n1 2\n1 3\n3 2\n''') == '1010'\nassert solution('''4 3\n1 2\n1 3\n3 2\n''') == '1010'\nassert solution('''7 3\n1 2\n1 3\n3 2\n''') == '11111'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 1\n6\n''') == \"impossible\"\nassert solution('''3 1\n1\n''') == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\"\n'''\n\nFor this problem we can use the concept of Hamming distance, we can use a simple way to enumerate all possible combinations of palettes. We iterate over all n colors and try to compute for each color a set of unique colors that have the same Hamming distance to the input color.\n\nWe can notice that for each iteration we are computing a set of unique colors that have the same Hamming distance to the input color. For example, for the first iteration we have $6 \\times 6$ = $36$ unique colors.\n\nLet\u2019s denote by $n$ the number of colors, and by $p$ the number of palettes. We then have:\n\n$2^n \\times 2^n \\times... \\times 2^0 \\times 2^1 \\times 2^(p-1)$ colors for $p$ palettes.\n\nIn this way we can enumerate all possible color codes with a given number of palettes.\n\nOBS: The complexity of the solution is exponential.\n\n'''"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1\\n1\\n') == '000\\n001\\n011\\n010\\n110\\n111\\n101\\n100'\nassert solution('2 4\\n2\\n1 4\\n1\\n') == 'impossible\\nimpossible'\nassert solution('1 1\\n1') == 'impossible'\nassert solution('4 1\\n2\\n2\\n2\\n2\\n2') == 'impossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible'\nassert solution('4 5\\n2\\n2 4\\n1 4\\n2\\n2 4\\n1 4\\n2\\n2 4\\n1') == 'impossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'impossible'\nassert solution('2 1') == '010'\nassert solution('3 1') == '110'\nassert solution('4 1') == '111'\nassert solution('5 1') == '101'\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"6 1\n6\n\"\"\"\n    ) == \"\"\"000\n001\n011\n010\n110\n111\n101\n100\nimpossible\"\"\"\n\nassert solution(\n    \"\"\"3 1\n1\n\"\"\"\n    ) == \"\"\"000\n001\n011\n010\n110\n111\n101\n100\"\"\"\n\nassert solution(\n    \"\"\"3 3\n6\n1\n\"\"\"\n    ) == \"\"\"111\n110\n101\n100\n\"\"\"\n\nassert solution(\n    \"\"\"3 3\n1\n\"\"\"\n    ) == \"\"\"111\n110\n101\n100\"\"\"\n\nassert solution(\n    \"\"\"3 3\n1\n\"\"\"\n    ) == \"\"\"111\n110\n101\n100\"\"\""
    },
    {
        "number": 3302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''6 1'''\n) == '''impossible'''\n\nassert solution(\n'''6 2'''\n) == '''000\n001\n011\n010\n110\n111\n101\n100'''\n\nassert solution(\n'''10 1'''\n) == '''000\n001\n011\n010\n110\n111\n101\n100\n110\n111\n101\n100'''\n\nassert solution(\n'''14 3'''\n) == '''000\n001\n011\n010\n110\n111\n101\n100\n110\n111\n101\n100\n110\n111\n101\n100\n110\n111\n101\n100'''\n\nassert solution(\n'''14 2'''\n) == '''000\n001\n011\n010\n110\n111\n101\n100\n110\n111\n101\n100\n110\n111\n101\n100\n110\n111\n101\n100'''"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\n99\\n') == '1'\nassert solution('99\\n10\\n') == '10'\nassert solution('10\\n100\\n') == '2'\nassert solution('100\\n10\\n') == '1'\nassert solution('10\\n100\\n') == '1'\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"9\\n99\") == \"10\"\nassert solution(\"9\\n99\") == \"10\"\nassert solution(\"99\\n9\") == \"10\"\nassert solution(\"99\\n9\") == \"10\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10\\n99') == '1'\nassert solution('90\\n10') == '10'\nassert solution('10\\n10') == '0'\nassert solution('10\\n1') == '10'\nassert solution('99\\n10') == '1'\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n99\\n') == '1'\nassert solution('90\\n10\\n') == '10'\nassert solution('99\\n9\\n') == '9'\nassert solution('999\\n999\\n') == '1'\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10\\n99') == 1\nassert solution('10\\n99\\n999\\n9999') == 1\nassert solution('10\\n999\\n9999') == 10\nassert solution('10\\n999\\n9999\\n9999999\\n99999999') == 10\nassert solution('9\\n999999999') == 1\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9') == 1\nassert solution('99') == 1\nassert solution('999') == 1\nassert solution('99999') == 2\nassert solution('999999999') == 5\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n99''') == 1\nassert solution('''90\n10''') == 10\nassert solution('''10\n999999999''') == 9\nassert solution('''7\n99''') == 1\nassert solution('''8\n99''') == 1\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('10') == 1\nassert solution('99') == 1\nassert solution('99999') == 10\nassert solution('999999999') == 18\n"
    },
    {
        "number": 3303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\n99') == 1\nassert solution('9\\n99') == 1\nassert solution('1\\n9') == 2\nassert solution('10\\n1') == 1\nassert solution('100\\n1') == 1\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\nassert solution('''5\n2 3 3 4 5\n6 6 6 6 6\n5 8 7 10\n4 1 2 6\n''') == '4'\nassert solution('''6\n2 3 3 4 5 6\n6 6 6 6 6 6\n5 8 7 10\n4 1 2 6\n''') == '5'\nassert solution('''7\n2 3 3 4 5 6 7\n6 6 6 6 6 6 6\n5 8 7 10\n4 1 2 6\n''') == '6'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3''') == '2'\nassert solution('''6\n1 2 2 3 3 3\n3 1 1 2 2 3\n2 1 1 2 1 2\n2 1 1 2 1 3\n2 2 2 2 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '5'\nassert solution('''8\n5 4 1 1 4 4 5\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '8'\nassert solution('''8\n5 4 1 1 4 4 5\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '8'\nassert solution('''8\n3 3 1 1 4 4 5\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n3\n2 3 3\n4 1 10\n2 7 3\n\"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4\\n5\\n1\") == \"1\"\nassert solution(\"3\\n4\\n3\\n2\") == \"2\"\nassert solution(\"3\\n2\\n5\\n4\") == \"1\"\nassert solution(\"5\\n1\\n7\\n2\\n3\") == \"1\"\nassert solution(\"2\\n5\\n6\\n1\") == \"0\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_file.txt\", \"r\").read()) == \"1\\n\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n' + '1 1 1 1') == '1'\nassert solution('1\\n' + '1 1 1 1') == '1'\nassert solution('1\\n' + '1 1 1 1') == '1'\nassert solution('2\\n' + '2 2 2 2') == '3'\nassert solution('3\\n' + '2 2 2 2') == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\\n1 1 1\") == \"2\"\nassert solution(\"1 1 1\\n1 1 1\") == \"2\"\nassert solution(\"1 1 1\\n1 1 1\") == \"2\"\nassert solution(\"1 1 1\\n1 1 1\") == \"2\"\nassert solution(\"2 2 1\\n1 1 1\") == \"1\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2 3 3\") == \"2\"\nassert solution(\"2 3 3 4 1 10 2 7 3\") == \"2\"\nassert solution(\"5 8 7 10 4 1 2 6\") == \"1\"\nassert solution(\"4 1 2 6 4 1 2 6\") == \"1\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 3\nbeginning\n1 5\n4 8\n1 9''') == '5'\nassert solution('''6 1\nvelvet\n1 6\nSample Output 2:\n7''') == '7'\nassert solution('''7 1\nindex\n1 7\n2 8\n3 9\n4 10\n5 11\n6 12''') == '7'\nassert solution('''14 10\npeople\n1 4\n2 7\n3 10\n4 11\n5 12\n6 13\n7 16\n8 17\n9 19\n10 22\n11 25\n12 28\n13 32\n14 37\n15 40\n16 43\n17 46\n18 48\n19 52\n20 56\n21 60\n22 65\n23 69\n24 73\n25 78\n26 81\n27 85\n28 89\n29 92\n30 96\n31 99\n32 103\n33 107\n34 110\n35 114\n36 118\n37 122\n38 126\n39 130\n40 134\n41 138\n42 142\n43 146\n44 150\n45 154\n46 158\n47 162\n48 166\n49 170\n50 173\n51 177\n52 181\n53 185\n54 189\n55 192\n56 196\n57 200\n58 204\n59 208\n60 212\n61 216\n62 220\n63 224\n64 228\n65 232\n66 236\n67 240\n68 244\n69 248\n70 252\n71 256\n72 260\n73 264\n74 268\n75 272\n76 276\n77 280\n78 284\n79 288\n80 292\n81 296\n82 300\n83 304\n84 308\n85 312\n86 316\n87 320\n88 324\n89 328\n90 332\n91 336\n92 340\n93 344\n94 348\n95 352\n96 356\n97 360\n98 364\n99 368\n100 372\n101 376\n102 380\n103 384\n104 388\n105 392\n106 396\n107 400\n108 404\n109 408\n110 412\n111 416\n112 420\n113 424\n114 428\n115 432\n116 436\n117 440\n118 444\n119 448\n120 452\n121 456\n122 460\n123 464\n124 468\n125 472\n126 476\n127 480\n128 484\n129 488\n130 492\n131 496\n132 500\n133 504\n134 508\n135 512\n136 516\n137 520\n138 524\n139 528\n140 532\n141 536\n142 540\n143 544\n144 548\n145 552\n146 556\n147 560\n148 564\n149 568\n150 572\n151 576\n152 580\n153 584\n154 588\n155 592\n156 596\n157 600\n158 604\n159 608\n160 612\n161 616\n162 620\n163 624\n164 628\n165 632\n166 636\n167 640\n168 644\n169 648\n170 652\n171 656\n172 660\n173 664\n174 668\n175 672\n176 676\n177 680\n178 684\n179 688\n180 692\n181 696\n182 700\n183 704\n184 708\n185 712\n186 716\n187 720\n188 724\n189 728\n190 732\n191 736\n192 740\n193 744\n194 748\n195 752\n196 756\n197 760\n198 764\n199 768\n200 772\n201 776\n202 780\n203 784\n204 788\n205 792\n206 796\n207 800\n208 804\n209 808\n210 812\n211 816\n212 820\n213 824\n214 828\n215 832\n216 836\n217 840\n218 844\n219 848\n220 852\n221 856\n222 860\n223 864\n224 868\n225 872\n226 876\n227 880\n228 884\n229 888\n230 902\n231 906\n232 910\n233 914\n234 918\n235 922\n236 926\n237 930\n238 934\n239 938\n240 942\n241 946\n242 950\n243 954\n244 958\n245 962\n246 966\n247 970\n248 974\n249 978\n250 982\n251 986\n252 990\n253 994\n254 998\n255 992\n-----Input-----\nThe first line of input contains two integers, $N$ ($1 \\leq N \\leq 200000$) and $Q$ ($1 \\leq Q \\leq 200000$), the length of $S$ and the number of demonstrations you will make, respectively.\n\nThe second line of input contains a string of $N$ lowercase Latin alphabet characters, describing the string $S$.\n\nThe next $Q$ lines contain the descriptions of the demonstrations. In particular, the $i^\\text {th}$ of these lines contains two integers $L_ i$ and $R_ i$ ($1 \\leq L_ i \\leq R_ i \\leq N$), denoting that for the $i^\\text {th}$ demonstration, you will consider only the $L_ i^\\text {th}$ through $R_ i^\\text {th}$ characters of $S$.\n\n-----Output-----\nOutput $Q$ lines. The $i^\\text {th}$ of these lines should contain a single integer, the number of nonempty almost palindromic substrings in the $i^\\text {th}$ demonstration.\n\n-----Examples-----\nSample Input 1:\n9"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''beginning\n1 5\n4 8\n1 9''') == '5'\nassert solution('''velvet\n1 6\nSample Output 2:\n7''') == '7'\nassert solution('''toil\n1 7\n4 9\n5 8\n6 10\nSample Output 2:\n9''') == '9'\nassert solution('''maniac\n1 7\n4 9\n5 8\n6 10\nSample Output 2:\n11''') == '11'\nassert solution('''twister\n1 7\n4 9\n5 8\n6 10\nSample Output 2:\n16''') == '16'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n9 3\nbeginning\n1 5\n4 8\n1 9\n''') == '11'\nassert solution(\n'''\n6 1\nvelvet\n1 6\n''') == '7'\nassert solution(\n'''\n9 1\nhbwv\n1 9\n''') == '5'\nassert solution(\n'''\n9 1\nqpqpq\n1 9\n''') == '6'\nassert solution(\n'''\n9 1\nqpqpq\n1 9\n''') == '5'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9 3\nbeginning\n1 5\n4 8\n1 9''') == '5'\nassert solution('''6 1\nvelvet\n1 6''') == '7'\nassert solution('''6 1\nsbsdf\n1 6''') == '7'\nassert solution('''6 1\nasd\n1 6''') == '7'\nassert solution('''6 1\nasdf\n1 6''') == '7'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('beginning'\n'1 5'\n'4 8'\n'1 9'\n'beginning') == '5'\nassert solution('velvet'\n'1 6'\n'1 2'\n'2 4'\n'3 7'\n'4 8'\n'5 9'\n'6 10'\n'7 11'\n'8 12'\n'9 13'\n'10 14'\n'11 15'\n'12 16'\n'13 17'\n'14 18'\n'15 19'\n'16 20'\n'17 21'\n'18 22'\n'19 23'\n'20 24'\n'21 25'\n'22 26'\n'23 27'\n'24 28'\n'25 29'\n'26 30'\n'27 31'\n'28 32'\n'29 33'\n'30 34'\n'31 35'\n'32 36'\n'33 37'\n'34 38'\n'35 39'\n'36 40'\n'37 41'\n'38 42'\n'39 43'\n'40 44'\n'41 45'\n'42 46'\n'43 47'\n'44 48'\n'45 49'\n'46 50'\n'47 51'\n'48 52'\n'49 53'\n'50 54'\n'51 55'\n'52 56'\n'53 57'\n'54 58'\n'55 59'\n'56 60'\n'57 61'\n'58 62'\n'59 63'\n'60 64'\n'61 65'\n'62 66'\n'63 67'\n'64 68'\n'65 69'\n'66 70'\n'67 71'\n'68 72'\n'69 73'\n'70 74'\n'71 75'\n'72 76'\n'73 77'\n'74 78'\n'75 79'\n'76 80'\n'77 81'\n'78 82'\n'79 83'\n'80 84'\n'81 85'\n'82 86'\n'83 87'\n'84 88'\n'85 89'\n'86 90'\n'87 91'\n'88 92'\n'89 93'\n'90 94'\n'91 95'\n'92 96'\n'93 97'\n'94 98'\n'95 99'\n'96 100'\n'97 101'\n'98 102'\n'99 103'\n'100 104'\n'101 105'\n'102 106'\n'103 107'\n'104 108'\n'105 109'\n'106 110'\n'107 111'\n'108 112'\n'109 113'\n'110 114'\n'111 115'\n'112 116'\n'113 117'\n'114 118'\n'115 119'\n'116 120'\n'117 121'\n'118 122'\n'119 123'\n'120 124'\n'121 125'\n'122 126'\n'123 127'\n'124 128'\n'125 129'\n'126 130'\n'127 131'\n'128 132'\n'129 133'\n'130 134'\n'131 135'\n'132 136'\n'133 137'\n'134 138'\n'135 139'\n'136 140'\n'137 141'\n'138 142'\n'139 143'\n'140 144'\n'141 145'\n'142 146'\n'143 147'\n'144 148'\n'145 149'\n'146 150'\n'147 151'\n'148 152'\n'149 153'\n'150 154'\n'151 155'\n'152 156'\n'153 157'\n'154 158'\n'155 159'\n'156 160'\n'157 161'\n'158 162'\n'159 163'\n'160 164'\n'161 165'\n'162 166'\n'163 167'\n'164 168'\n'165 169'\n'166 170'\n'167 171'\n'168 172'\n'169 173'\n'170 174'\n'171 175'\n'172 176'\n'173 177'\n'174 178'\n'175 179'\n'176 180'\n'177 181'\n'178 182'\n'179 183'\n'180 184'\n'181 185'\n'182 186'\n'183 187'\n'184 188'\n'185 189'\n'186 190'\n'187 191'\n'188 192'\n'189 193'\n'190 194'\n'191 195'\n'192 196'\n'193 197'\n'194 198'\n'195 199'\n'196 200'\n'197 201'\n'198 202'\n'199 203'\n'200 204'\n'201 205'\n'202 206'\n'203 207'\n'204 208'\n'205 209'\n'206 210'\n'207 211'\n'208 212'\n'209 213'\n'210 214'\n'211 215'\n'212 216'\n'213 217'\n'214 218'\n'215 219'\n'216 220'\n'217 221'\n'218 222'\n'219 223'\n'220 224'\n'221 225'\n'222 226'\n'223 227'\n'224 228'\n'225 229'\n'226 230'\n'227 231'\n'228 232'\n'229 233'\n'230 234'\n'231 235'\n'232 236'\n'233 237'\n'234 238'\n'235 239'\n'236 240'\n'237 241'\n'238 242'\n'239 243'\n'240 244'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''beginning\n1 5\n4 8\n1 9''') == '5'\nassert solution('''defending\nbeginning\n1 5\n4 8\n1 9''') == '7'\nassert solution('''tenderest\nbeginning\n1 5\n4 8\n1 9''') == '11'\nassert solution('''hats\nbeginning\n1 5\n4 8\n1 9''') == '16'\nassert solution('''pity\nbeginning\n1 5\n4 8\n1 9''') == '7'\n"
    },
    {
        "number": 3305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n4\\n5\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n4\\n5\\n4\\n5\\n6\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n4\\n5\\n4\\n5\\n6\\n6\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n4\\n5\\n4\\n5\\n6\\n6\\n7\") == \"1\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''2 3\n1 23\n2 17\nSample Output 2:\n23\n''') == '23'\nassert solution('''3 4\n1 1\n2 2\n3 3\nSample Output 2:\n3\n''') == '3'\nassert solution('''1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\nSample Output 2:\n1000000000\n''') == '1000000000'\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3 4\n3 1\n2 2\n1 1\"\"\") == \"2\"\nassert solution(\n\"\"\"2 3\n1 23\n2 17\"\"\") == \"23\"\nassert solution(\n\"\"\"10000000 1000\"\"\") == \"1000000\"\nassert solution(\n\"\"\"50000000 1000000\"\"\") == \"1000000\"\nassert solution(\n\"\"\"2 1000000000\"\"\") == \"1000000\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == 2\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == 23\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4') == '2'\nassert solution('2 3') == '23'\nassert solution('3 4\\n3 1\\n2 2\\n1 1') == '2'"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 23\n2 17''') == '23'\nassert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\nassert solution('''3 4\n3 1\n2 2\n1 1\n2 5''') == '4'\nassert solution('''2 3\n1 1\n2 1''') == '2'\nassert solution('''3 4\n3 1\n2 2\n1 1\n2 1\n2 3''') == '1'\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1') == '2'\nassert solution('3 3\\n3 1\\n2 2\\n1 1') == '2'\nassert solution('3 4\\n3 1\\n2 2\\n1 1\\n1 2') == '2'\nassert solution('1 1\\n1 1') == '1'\nassert solution('3 3\\n1 23\\n2 17\\n1 1') == '23'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3''') == '0.0000000000'\nassert solution('''6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'\n\nprint(solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10'''))\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n2 0\n2 2\n0 2\n0 -1 0 3''') == '0.0000000000'\nassert solution('''6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'\n'''\nimport sys\nsys.setrecursionlimit(10000)\nfrom typing import List\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    0 0\n    2 0\n    2 2\n    0 2\n    0 -1 0 3\n    \"\"\") == \"9.476048311178\"\nassert solution(\n    \"\"\"\n    4\n    0 0\n    2 0\n    2 2\n    0 2\n    0 -1 0 3\n    \"\"\") == \"0.0000000000\"\nassert solution(\n    \"\"\"\n    6\n    0 1\n    0 4\n    3 6\n    7 5\n    4 2\n    7 0\n    5 7 2 0\n    \"\"\") == \"9.476048311178\"\n\"\"\""
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n        \"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\"\n    ) == \"0.0000000000\"\n\nassert solution(\n        \"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\"\n    ) == \"9.476048311178\"\n\nassert solution(\n        \"0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n\"\n    ) == \"0.0000000000\"\n\"\"\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n') == '0.0000000000'\nassert solution('3\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n7 0\\n5 7 2 0\\n') == '9.476048311178'\nassert solution('3\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n') == '9.460165453959'\nassert solution('5\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n') == '9.460165453959'\nassert solution('7\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n') == '9.460165453959'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3''') == '0.0000000000'\nassert solution('''6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'\nprint(solution('''8\n0 0\n-1 0\n2 -3\n3 2\n0 -4\n-1 -1\n-4 0\n-1 -3\n-4 1'''))\n'''4.825949690594e-05\n2.825949690594e-05\n3.825949690594e-05\n'''\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000'\nassert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000'\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0') == '0.0000000000'\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1 1') == '0'\nassert solution('0 0') == '0'\nassert solution('2 0') == '0'\nassert solution('2 0') == '0'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0\n2 0\n2 2\n0 2\n0 -1 0 3''') == '0.0000000000'\nassert solution('''4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3''') == '0.0000000000'\nassert solution('''6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'\nassert solution('''5\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'\nassert solution('''4\n0 1\n0 4\n3 6\n7 5\n0 -1 0 3''') == '0.0000000000'\n"
    },
    {
        "number": 3307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9.476048311178\""
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"8.0000000000\"\nassert solution(\"5\") == \"8.0000000000\"\nassert solution(\"0.2 0.00\") == \"0.0200000000\"\nassert solution(\"0 -0.2\") == \"0.0200000000\"\nassert solution(\"0.0 0\") == \"0.0200000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == ''\nassert solution('''2\n0 0''') == '8.0000000000'\nassert solution('''5\n2 0\n1 1\n0 2\n-2 0\n0 -2''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20''') == '0.0200000000'\nassert solution('''1\n2\n0 0''') == '0.0000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n''') == '0.0200000000'\nassert solution(\n    '''5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n''') == '8.0000000000'\nassert solution(\n    '''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n''') == '0.0200000000'\nassert solution(\n    '''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n''') == '0.0200000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n''') == '0.0200000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n0 1\\n0 -1\") == 0\nassert solution(\"2 2\\n1 1\\n0 2\\n-1 1\") == 8\nassert solution(\"2 2\\n1 1\\n0 2\\n-1 1\") == 8\nassert solution(\"2 2\\n1 1\\n0 2\\n-1 1\") == 8\nassert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\") == 8\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 0\n1 1\n0 2\n-2 0\n0 -2''') == '8.0000000000'\nassert solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20''') == '0.0200000000'\nassert solution('''5\n1.2 0.00\n0 -1.2\n0.0 0\n-1.2 0\n0 0.2''') == '0.0200000000'\nassert solution('''5\n1.2 0.00\n0 -1.2\n0.0 0\n-1.2 0\n0 0.20''') == '0.0200000000'\nassert solution('''5\n1.2 0.00\n0 -1.2\n0.0 0\n-1.2 0\n0 0.2''') == '0.0200000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"8.0000000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n\"\"\") == \"8.0000000000\"\n\nassert solution(\n\"\"\"4\n-1.2 -1.2\n0 0\n0 -1.2\n1 1\n\"\"\") == \"0.20000000000\"\n\nassert solution(\n\"\"\"2\n0 0\n0 0\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"1\n0 0\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"2\n1 1\n0 1\n\"\"\") == \"1.0\""
    },
    {
        "number": 3308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_solution.txt\").read()) == \"2\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9 4 3\n1 1 9 9 1 6 6 39 9\n''') == '2'\nassert solution('''10 2 2\n1 1 1 1 1 2 2 2 2 2\n''') == '2'\nassert solution('''8 2 3\n1 1 1 1 1 2 2 2 2 2\n''') == '0'\n\n'''\n\nimport sys\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9 4 3''') == '2'\nassert solution('''1 1 9 9 1 6 6 39 9''') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''10 2 2\n1 1 1 1 1 2 2 2 2 2''') == '2'\n'''\n\n'''\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9 4 3\n1 1 9 9 1 6 6 39 9\n''') == \"2\"\nassert solution('''10 2 2\n1 1 1 1 1 2 2 2 2 2\n''') == \"2\"\nassert solution('''9 4 3\n1 1 9 9 1 6 6 39 9\n''') == \"2\"\nassert solution('''6 4 2\n1 1 1 1 1 1 1 1\n''') == \"2\"\nassert solution('''9 4 3\n1 1 9 9 1 6 6 39 9\n''') == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_case_1.txt\").read()) == \"2\"\nassert solution(open(\"test_case_2.txt\").read()) == \"1\"\nassert solution(open(\"test_case_3.txt\").read()) == \"1\"\nassert solution(open(\"test_case_4.txt\").read()) == \"1\"\nassert solution(open(\"test_case_5.txt\").read()) == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input1) == \"3.666666667\"\nassert solution(input2) == \"20.000000000\"\n\n\"\"\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"20.000000000\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 2\\n1 2 3') == '3.666666667\\n'\nassert solution('4 11 4\\n10 10 10 10') == '20.000000000\\n'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '3.666666667'\nassert solution('2 3 1') == '2.0'\nassert solution('3 4 1') == '1.5'\nassert solution('7 2 3') == '4.5'\nassert solution('1 2 3') == '3.666666667'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 1''') == '3.666666667'\nassert solution('''4 10 2''') == '20.000000000'\nassert solution('''4 9 10''') == '9.5'\nassert solution('''4 10 1''') == '4.5'\nassert solution('''4 10 100''') == '3.5'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"20.000000000\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('2 1 1') == '1.5'\nassert solution('2 2 2') == '1.25'\nassert solution('2 2 1') == '0.5'\nassert solution('2 2 1') == '0.5'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n'''"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\n\nimport pytest\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nassert solution('1 1') == '0'\nassert solution('5 1000000000 7') == '16317634'\nassert solution('10 10000000 7') == '0'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nassert solution('5 123456789 7') == '16317634'\nassert solution('5 123456789 7123456789') == '16317634'\n\n-----Solution Summary-----\nCalculating the remainder of a value $n$ when dividing by a constant $m$ is quite straightforward. You can use a rather simple algorithm: \nfor each digit in $n$\n - for every digit you can multiply the digit by $m$ and get the remainder by dividing $n$ by $m$. \n - for every resulting digit, add it to the result.\n\nBecause $m$ can be any number, it is easy to see that the algorithm is always equivalent to the following: \n\n\\[ \\begin{align} \\operatorname {exponial}(n) = (n - 1)^{(n - 2)^{(n - 3)^{(n - 4)^{(n - 5)^{(n - 6)^{(n - 7)^{(n - 8)^{(n - 9)^{(n - 10)^{(n - 11)^{(n - 12)^{(n - 13)^{(n - 14)^{(n - 15)^{(n - 16)^{(n - 17)^{(n - 18)^{(n - 19)^{(n - 20)^{(n - 21)^{(n - 22)^{(n - 23)^{(n - 24)^{(n - 25)^{(n - 26)^{(n - 27)^{(n - 28)^{(n - 29)^{(n - 30)^{(n - 31)^{(n - 32)^{(n - 33)^{(n - 34)^{(n - 35)^{(n - 36)^{(n - 37)^{(n - 38)^{(n - 39)^{(n - 40)^{(n - 41)^{(n - 42)^{(n - 43)^{(n - 44)^{(n - 45)^{(n - 46)^{(n - 47)^{(n - 48)^{(n - 49)^{(n - 50)^{(n - 51)^{(n - 52)^{(n - 53)^{(n - 54)^{(n - 55)^{(n - 56)^{(n - 57)^{(n - 58)^{(n - 59)^{(n - 60)^{(n - 61)^{(n - 62)^{(n - 63)^{(n - 64)^{(n - 65)^{(n - 66)^{(n - 67)^{(n - 68)^{(n - 69)^{(n - 70)^{(n - 71)^{(n - 72)^{(n - 73)^{(n - 74)^{(n - 75)^{(n - 76)^{(n - 77)^{(n - 78)^{(n - 79)^{(n - 80)^{(n - 81)^{(n - 82)^{(n - 83)^{(n - 84)^{(n - 85)^{(n - 86)^{(n - 87)^{(n - 88)^{(n - 89)^{(n - 90)^{(n - 91)^{(n - 92)^{(n - 93)^{(n - 94)^{(n - 95)^{(n - 96)^{(n - 97)^{(n - 98)^{(n - 99)^{(n - 100)^{(n - 101)^{(n - 102)^{(n - 103)^{(n - 104)^{(n - 105)^{(n - 106)^{(n - 107)^{(n - 108)^{(n - 109)^{(n - 110)^{(n - 111)^{(n - 112)^{(n - 113)^{(n - 114)^{(n - 115)^{(n - 116)^{(n - 117)^{(n - 118)^{(n - 119)^{(n - 120)^{(n - 121)^{(n - 122)^{(n - 123)^{(n - 124)^{(n - 125)^{(n - 126)^{(n - 127)^{(n - 128)^{(n - 129)^{(n - 130)^{(n - 131)^{(n - 132)^{(n - 133)^{(n - 134)^{(n - 135)^{(n - 136)^{(n - 137)^{(n - 138)^{(n - 139)^{(n - 140)^{(n - 141)^{(n - 142)^{(n - 143)^{(n - 144)^{(n - 145)^{(n - 146)^{(n - 147)^{(n - 148)^{(n - 149)^{(n - 150)^{(n - 151)^{(n - 152)^{(n - 153)^{(n - 154)^{(n - 155)^{(n - 156)^{(n - 157)^{(n - 158)^{(n - 159)^{(n - 160)^{(n - 161)^{(n - 162)^{(n - 163)^{(n - 164)^{(n - 165)^{(n - 166)^{(n - 167)^{(n - 168)^{(n - 169)^{(n - 170)^{(n - 171)^{(n - 172)^{(n - 173)^{(n - 174)^{(n - 175)^{(n - 176)^{(n - 177)^{(n - 178)^{(n - 179)^{(n - 180)^{(n - 181)^{(n - 182)^{(n - 183)^{(n - 184)^{(n - 185)^{(n - 186)^{(n - 187)^{(n - 188)^{(n - 189)^{(n - 190)^{(n - 191)^{(n - 192)^{(n - 193)^{(n - 194)^{(n - 195)^{(n - 196)^{(n - 197)^{(n - 198)^{(n - 199)^{(n - 200)^{(n - 201)^{(n - 202)^{(n - 203)^{(n - 204)^{(n - 205)^{(n - 206)^{(n - 207)^{(n - 208)^{(n - 209)^{(n - 210)^{(n - 211)^{(n - 212)^{(n - 213)^{(n - 214)^{(n - 215)^{(n - 216)^{(n - 217)^{(n - 218)^{(n - 219)^{(n - 220)^{(n - 221)^{(n - 222)^{(n - 223)^{(n - 224)^{(n - 225)^{(n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\nprint(\"The input tests passed\")\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nassert solution('5 123456789 10') == '163177323'\nassert solution('5 123456789 10 13') == '16317634'\nassert solution('5 123456789 10 13 15') == '163177323'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nprint(\"Test cases passed.\")\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 0 0 2\\n1 2 2\\n1 1 1\\n0 1 1') == '0'\nassert solution('1 1 1\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4'\nassert solution('0 1 0 0 2\\n1 2 2\\n1 1 1\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4'\nassert solution('3 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1\n''') == '0'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4'\nassert solution('3 3 4 0 2\\n1 1 2 2\\n1 1 1\\n1 2 1\\n2 2 3\\n2 3 1\\n1 1 3\\n2 2 1\\n0 0 0\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '8'\nassert solution('3 3 4 0 2\\n1 1 2 2\\n1 1 1\\n1 2 1\\n2 2 3\\n2 3 1\\n1 1 3\\n2 2 1\\n0 0 0\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '8'\nassert solution('3 3 4 0 2\\n1 1 2 2\\n1 1 1\\n1 2 1\\n2 2 3\\n2 3 1\\n1 1 3\\n2 2 1\\n0 0 0\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '8'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1\n''') == '0'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''3 2 3 3\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '9'\nassert solution('''3 2 3 3\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '12'\nassert solution('''3 2 3 3\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1\n''') == '0'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1') == '0'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6') == '4'\nassert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n3 3 3') == '2'\nassert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n3 3 3\\n0 1 1\\n0 2 2\\n0 3 3\\n2 1 1\\n1 1 2\\n1 1 2\\n1 1 3') == '2'\nassert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n3 3 3\\n0 1 1\\n0 2 2\\n0 3 3\\n2 1 1\\n1 1 2\\n1 1 2\\n1 1 3') == '2'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 1 1 1 1 1\\n0 1 1 1\\n1 0 1 1\\n1 1 1 1\\n1 1 1 1\\n2 1 1 1\\n0 2 1 1\\n1 2 1 1\\n2 1 1 1\\n1 2 1 1\\n2 2 1 1\\n0 2 1 1\\n1 2 1 1\\n2 1 1 1') == '4'\nassert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n0 2 2\\n2 1 2') == '0'\nassert solution('3 1 1 1 1 1 1\\n0 1 1 1\\n1 0 1 1\\n1 1 1 1\\n1 1 1 1\\n2 1 1 1\\n0 2 2\\n1 2 2\\n2 1 2') == '4'\nassert solution('3 3 4 4 4\\n2 4 3 4\\n3 4 2 4\\n4 4 4 4\\n1 1 2 2\\n2 2 3 3\\n3 3 4 4\\n1 1 2 2\\n2 2 3 3\\n3 3 4 4') == '12'\nassert solution('3 3 4 4 4\\n2 4 3 4\\n3 4 2 4\\n4 4 4 4\\n1 1 2 2\\n2 2 3 3\\n3 3 4 4\\n1 1 2 2\\n2 2 3 3\\n3 3 4 4\\n1 1 2 2\\n2 2 3 3') == '12'\n"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom datetime import datetime"
    },
    {
        "number": 3312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3 1 0 0 2\n1 2 2\n1 1 1\n\"\"\") == \"0\"\nassert solution(\n\"\"\"3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n\"\"\") == \"4\"\nassert solution(\n\"\"\"3 5 1 0 2\n1 2 2\n1 1 1\n\"\"\") == \"0\"\nassert solution(\n\"\"\"3 5 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n\"\"\") == \"4\"\nassert solution(\n\"\"\"3 5 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n') == '3'\nassert solution('5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n') == '3'\nassert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n') == '3'\nassert solution('5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n') == '3'\nassert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n') == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\n\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 100 100') == '3'\nassert solution('5 1 100 100') == '3'\nassert solution('5 1 100 100') == '3'\nassert solution('5 1 100 100') == '3'\nassert solution('5 1 100 100') == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9') == 3\nassert solution('5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n') == 3\nprint(solution(''))\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9''') == \"3\"\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45''') == \"3\"\nassert solution('''6 1 100 100\n28 27\n79 78\n40 93\n62 41\n52 45\n58 59''') == \"5\"\nassert solution('''6 1 100 100\n28 27\n79 78\n40 93\n62 41\n52 45\n58 59\n68 69''') == \"5\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3\nassert solution('BBBCCCBB') == 3\nassert solution('CCCCAAAC') == -1\nassert solution('ABCBCBCABC') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABC') == 2\nassert solution('ABC') == 2\nassert solution('ABBBAAAA') == -1\nassert solution('BBBCCCBB') == 3\nassert solution('CCCCAAAC') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == -1\nassert solution(\"BBBCCCBB\") == 3\nassert solution(\"CAAAACAA\") == 2\nassert solution(\"BBBAAABBA\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3\nassert solution('BBBCCCBB') == -1\nassert solution('CCCCAAAC') == 1\nassert solution('ABBBAAAA') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\nassert solution(\"BBBCCCBB\") == 3\nassert solution(\"CCCCAAAC\") == 3\nassert solution(\"XXXX\") == -1\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ABBBAAAA\") == 2\nassert solution(\"BBBCCCBB\") == 3\nassert solution(\"CCCCAAAC\") == -1\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABCABCABC\") == \"0\"\nassert solution(\"ABBBAAAA\") == \"2\"\nassert solution(\"ABBBAAAAABBCCCBB\") == \"3\"\nassert solution(\"ABBBAAAABBBCCCBB\") == \"-1\"\nassert solution(\"ABBBAAAABBBCCCBBBBAAAAAA\") == \"4\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(EX_0) == EX_1\nassert solution(EX_2) == EX_3\nassert solution(EX_4) == EX_5\nassert solution(EX_6) == EX_7\nassert solution(EX_8) == EX_9\n"
    },
    {
        "number": 3314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABC') == '2'\nassert solution('ABBBAAAA') == '3'\nassert solution('BBBCCCBB') == '3'\nassert solution('CCCCAAAC') == '-1'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('A') == None\nassert solution('A\\nB') == None\nassert solution('A\\nAB') == None\nassert solution('AB\\nBA') == None\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution(\n'''\n8\nA\nABA\nBBB\nABABA\nAAAAAB\nABBABB\nBBABBB\nABABBA\n''') == '3'\nassert solution(\n'''\n6\nA\nB\nAA\nBBB\nABA\nBBB\nAAA\n''') == '1'\nassert solution(\n'''\n4\nA\nA\nA\nA\n''') == '0'\nassert solution(\n'''\n3\nA\nB\nC\n''') == '0'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"0\"\nassert solution(\"ABA\") == \"2\"\nassert solution(\"BBB\") == \"2\"\nassert solution(\"ABABA\") == \"2\"\nassert solution(\"AAAAAB\") == \"2\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\".join([\"A\", \"B\", \"AA\", \"ABB\", \"AAA\", \"\"])) == \"3\"\nassert solution(\"\".join([\"A\", \"ABA\", \"BBB\", \"ABABA\", \"AAAAAB\", \"\"])) == \"3\"\nassert solution(\"\".join([\"A\", \"B\", \"AA\", \"BBB\", \"AAA\", \"\"])) == \"3\"\nassert solution(\"\".join([\"A\", \"B\", \"AA\", \"ABB\", \"AAA\", \"\"])) == \"3\"\nassert solution(\"\".join([\"A\", \"B\", \"AA\", \"ABB\", \"AAA\", \"\"])) == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\nAA\\nBB') == '3'\nassert solution('2\\nAAAAAB') == '3'\nassert solution('2\\nABBAAAAAA') == '8'\nassert solution('2\\nAABABBAAAABA') == '3'\nassert solution('4\\nABA\\nBA\\nAABABA') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution('''\n5\nA\nABA\nBBB\nABABA\nAAAAAB\n''') == '3'\nassert solution('''\n5\nABBA\nBABA\nAABB\nABABA\nAAAAAB\n''') == '5'\nassert solution('''\n5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution('''\n5\nA\nB\nAA\nBBB\nABA\n''') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"1\"\nassert solution(\"abbbb\") == \"2\"\nassert solution(\"ababab\") == \"3\"\nassert solution(\"bbaaa\") == \"2\"\nassert solution(\"bbbaa\") == \"1\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\nA\\nB\\nAA\\nBBB\\nAAA\\n') == '3'\nassert solution('2\\nA\\nAA') == '2'\nassert solution('3\\nABA\\nBBB\\nABABA\\nAAAAAB') == '3'\nassert solution('4\\nA\\nAA\\nABA\\nAAA\\nAAAAA') == '5'\n"
    },
    {
        "number": 3315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('A\\nB\\nAA\\nBBB\\nAAA\\n') == 3\nassert solution('A\\nABA\\nBBB\\nABABA\\nAAAAAB\\n') == 3\nassert solution('A\\nABA\\nBBB\\nABABA\\nAAAAAB\\n') == 3\nassert solution('A\\nABA\\nBBB\\nABABA\\nAAAAAB\\n') == 3\nassert solution('A\\nABA\\nBBB\\nABABA\\nAAAAAB\\n') == 3\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\"\nassert solution(\"100 10 2 0\") == \"0.0\"\nassert solution(\"10 100 2 2 1\") == \"0.1\"\nassert solution(\"10 100 2 2\") == \"0.1909090909\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 2 2') == '0.1909090909'\nassert solution('100 10 2 2') == '0.1909090909'\nassert solution('100 10 2 3') == '0.0909090909'\nassert solution('100 1000 2 3') == '0.1'\nassert solution('100 1000 2 5') == '0.0909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('100 10 2 1\\n') == '0.1'\nassert solution('100 10 2 2\\n') == '0.1909090909'\nassert solution('100 10 2 1\\n') == '0.1'\nassert solution('100 10 2 2\\n') == '0.1909090909'\n\"\"\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"100 10 2 1\") == \"0.1\"\nassert solution(\n\"100 10 2 2\") == \"0.1909090909\"\nassert solution(\n\"100 10 2 1\") == \"0.1\"\nassert solution(\n\"100 10 2 2\") == \"0.1909090909\"\nassert solution(\n\"100 10 2 1\") == \"0.1\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(float(expected1))\nprint(solution(stdin))\nassert solution(stdin) == str(float(expected2))\nprint(solution(stdin))\n'''\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\n\n'''\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''100 10 2 1''') == '0.1'\nassert solution('''100 10 2 2''') == '0.1909090909'\nassert solution('''100 10 2 2 3''') == '0.1909090909'\nassert solution('''100 10 2 1 5''') == '0.0512085657'\nassert solution('''100 10 2 3 3''') == '0.8333333333333334'\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\nassert solution('100 10 2 2') == '0.1909090909'\nassert solution('100 10 2 2') == '0.1909090909'\nassert solution('100 10 2 2') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab' * 1000) == 4\n'''\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABABABcABABAbAbab') == \"4\"\nassert solution('ABABABcABABAbAbab') == \"0\"\nassert solution('ABABABcABABAbAbab') == \"5\"\nassert solution('ABABABcABABAbAbab') == \"0\"\nassert solution('ABABABcABABAbAbab') == \"5\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution('ABABABcABABAbAbab') == '0'\nassert solution('ABABABcABABAbAbab') == '5'\nassert solution('ABABABcABABAbAbab') == '4'\nassert solution('ABABABcABABAbAbab') == '4'\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expect(sample_output)\nprint(solution(fileinput.input()[0]))\n\"\"\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"ABABABcABABAbAbab\"\n) == 4\nassert solution(\n\"AAAAAAAAAAA\"\n) == 7\nassert solution(\n\"ABBABBAAAAAAABABBBA\"\n) == 6\nassert solution(\n\"AABABBAAAAAAABABBBA\"\n) == 5\nassert solution(\n\"AABBAAAAAAABABABBBB\"\n) == 5\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output\nprint(solution(input))\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n\nINPUT:\nAAAAAA\n5\n0 1\n2 3\n3 4\n4 5\n5 6\nSample Output:\n5\n2\n3\n0\n1\n\nINPUT:\nABBA\n5\n0 1\n1 3\n2 4\n3 5\n4 6\nSample Output:\n4\n2\n3\n0\n1\n\"\"\"\nimport sys"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABACACABBA\") == 2\nassert solution(\"ABACACABBABABABABACAB\") == 5\nassert solution(\"ABABABABACAB\") == 4\nassert solution(\"ABACABABBABABABABABACAB\") == 5\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n'''\n) == '4\\n0\\n5'\nassert solution(\n'''\nAAAAABBBBCCDAAABBBBCD\n3\n0 4\n1 6\n0 7\n'''\n) == '2\\n4\\n4'\nassert solution(\n'''\nAAAAABBBBCCDAAABBBBCD\n5\n0 1\n2 4\n3 5\n4 6\n5 7\n'''\n) == '2\\n4\\n4'\nassert solution(\n'''\nAAAAABBBBCCDAAABBBBCD\n5\n0 4\n1 6\n0 7\n1 8\n1 9\n1 10\n'''\n) == '2\\n0\\n0'\nassert solution(\n'''\nAAAAABBBBCCDAAABBBBCD\n5\n0 4\n1 6\n0 7\n1 8\n1 9\n1 10\n1 11\n'''\n) == '2\\n0\\n0'\n"
    },
    {
        "number": 3317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABBA\") == \"1\"\nassert solution(\"ABAB\") == \"2\"\nassert solution(\"ABAA\") == \"2\"\nassert solution(\"ABAB\") == \"2\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n0\\n0\\n1') == '2'\nassert solution('10 10\\n0\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('6 9\\n0\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('15 11\\n0\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14') == '15'\nassert solution('17 12\\n0\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17') == '15'\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0') == '1'\nassert solution('1 0') == '2'\nassert solution('0 1 0') == '1'\nassert solution('1 1 1') == '1'\nassert solution('0 0 1 0') == '2'\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"4 3\n0\n0\n1\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"5 1\n0\n1\n2\n3\n4\n\"\"\"\n) == \"4\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99''') == '2'\nassert solution('''1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '100'\nassert solution('''0\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n0\\n0\\n1') == '2'\nassert solution('3 1\\n0\\n0\\n1\\n0\\n0') == '1'\nassert solution('3 1\\n0\\n0\\n1\\n0\\n1') == '2'\nassert solution('3 1\\n0\\n0\\n1\\n0\\n1\\n0\\n0\\n1') == '3'\nassert solution('5 1\\n0\\n0\\n1\\n0\\n1\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0') == '5'\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''0\n4 3\n0\n0\n1\n''') == \"2\"\n\nassert solution(\n'''0\n4 3\n0\n1\n1\n2\n''') == \"2\"\n\nassert solution(\n'''0\n2 2\n0\n0\n1\n1\n1\n''') == \"2\"\n\nassert solution(\n'''1\n2 2\n0\n0\n1\n1\n''') == \"2\"\n\nassert solution(\n'''2\n2 2\n0\n0\n1\n1\n''') == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n'''\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n0\\n1\\n1\") == 2\nassert solution(\"0\\n0\\n1\\n2\\n1\") == 3\nassert solution(\"0\\n0\\n1\\n1\\n1\") == 4\nassert solution(\"0\\n0\\n1\\n1\\n1\\n1\") == 4\nassert solution(\"0\\n0\\n1\\n1\\n1\\n1\\n1\") == 4\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n\nsolution(stdin)\n"
    },
    {
        "number": 3318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 2\n-----Test1-----\nInput:\n6 3\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nSample Output:\n3\n-----Test2-----\nInput:\n6 2\n0\n0\n1\nSample Output:\n2\n\"\"\""
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '2\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 1 4 2 6 -1 1'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '3\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 1 4 2 6 -1 1\\nP2: 22 1 4 2 6 -1 2'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '4\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 1 4 2 6 -1 1\\nP2: 22 1 4 2 6 -1 2\\nP3: 22 1 4 2 6 -1 3'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '5\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 1 4 2 6 -1 1\\nP2: 22 1 4 2 6 -1 2\\nP3: 22 1 4 2 6 -1 3\\nP4: 22 1 4 2 6 -1 4'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample_input) == '1'\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(2000)"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4\\n5 6 7 8\\n9 10 11 12') == '1'\nassert solution('1 1 1 1\\n2 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16 17 18 19\\n20 21 22 23 24 25 26\\n27 28 29 30 31 32 33 34 35 36 37 38 39 40\\n41 42 43 44 45 46 47 48 49 50 51 52 53 54 55\\n56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\\n100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191\\n192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '1'\nassert solution('1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16 17 18 19\\n20 21 22 23 24 25 26\\n27 28 29 30 31 32 33 34 35 36 37 38 39 40\\n41 42 43 44 45 46 47 48 49 50 51 52 53 54 55\\n56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\\n100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191\\n192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == \"\"\"\n1\nP0: 22 1 4 2 6 -1 0\n\"\"\"\nassert solution(\n\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == \"\"\"\n1\nP0: 22 1 4 2 6 -1 0\n\"\"\"\nassert solution(\n\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == \"\"\"\n1\nP0: 22 1 4 2 6 -1 0\n\"\"\"\nassert solution(\n\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == \"\"\"\n1\nP0: 22 1 4 2 6 -1 0\n\"\"\"\nassert solution(\n\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == \"\"\"\n1\nP0: 22 1 4 2 6 -1 0\n\"\"\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1'\nassert solution('''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n5 5 5 5 5 5 5 5 5\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n''') == '3'\nassert solution('''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n5 5 5 5 5 5 5 5 5\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n''') == '3'\nassert solution('''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n5 5 5 5 5 5 5 5 5\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n10 10 10 10 10 10 10 10\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3\n1 1 1 1 1 1 1 1 1\n3 3 3 3 3"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 2 2 1 8 -6 1\\n10 3 3 1 8 -6 1\\n10 4 4 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 2 4 3 3 -1 0'\nassert solution('3 4 4 4\\n12 34 1 2 3\\n13 4 1 2 3\\n14 4 1 2 3\\n15 4 1 2 3') == '1\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 3 4 3 -1 0\\nP2: 22 4 4 4 -1 0'\nassert solution('3 4 4 4\\n12 34 1 2 3\\n13 4 1 2 3\\n14 4 1 2 3\\n15 4 1 2 3\\n15 4 1 2 3') == '1\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 3 4 3 -1 0\\nP2: 22 4 4 4 -1 0\\nP3: 22 5 4 4 -1 0'\nassert solution('3 4 4 4\\n12 34 1 2 3\\n13 4 1 2 3\\n14 4 1 2 3\\n15 4 1 2 3\\n15 4 1 2 3\\n15 4 1 2 3') == '1\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 3 4 3 -1 0\\nP2: 22 4 4 4 -1 0\\nP3: 22 5 4 4 -1 0\\nP4: 22 5 4 4 -1 0'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1') == '1'\nassert solution('2 2 2 2') == '3'\nassert solution('3 3 3 3') == '6'\nassert solution('4 4 4 4') == '9'\nassert solution('5 5 5 5') == '25'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1''') == '1'\nassert solution('''2 8 8 8\n2 3 2 1 3 2 2 3 2 1 -2\n3 2 2 2 2 2 1 1 2 3 3 3 3 2 -1''') == '0'\nassert solution('''2 8 8 8\n2 2 2 2 2 1 -2 -2 -2 -2 -2 -2\n2 2 2 1 2 2 2 1 1 1 1 1 1 1 1 1 -1''') == '3'\nassert solution('''2 2 3 2 2\n2 2 2 2 1 -2 -2 -2 -2 -2 -2\n2 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 -1''') == '2'\nassert solution('''3 3 3 3\n2 2 2 2 1 -2 -2 -2 -2 -2 -2\n2 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 -1\n2 2 2 1 2 2 1 1 1 1 1 1 1 1 1 1 -1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 3319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('8 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1'\nassert solution('8 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '0'\nassert solution('8 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 2 2 1 8 -6 1') == '0'\nassert solution('8 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1') == '0'\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n\nfrom sys import setrecursionlimit\nsetrecursionlimit(100000)\n\nn, m, q = map(int, stdin.readline().split())\nroads = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b, w = map(int, stdin.readline().split())\n    roads[a].append([b, w])\n    roads[b].append([a, w])"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '1\\n2\\n3\\n'\nassert solution('1 2\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '1\\n2\\n3\\n'\nassert solution('1 2\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '1\\n2\\n3\\n'\nassert solution('1 2\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '1\\n2\\n3\\n'\nassert solution('1 2\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '1\\n2\\n3\\n'\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1\\n2\\n3\\n'\nassert solution('''2 3\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '2\\n'\nassert solution('''3 5\n1 2 1\n2 3 2\n3 4 1\n1 4 1\n2 4 2\n3 4 3\n3\n2 1\n3 4\n''') == '4\\n'\nassert solution('''6 6\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '4\\n'\nassert solution('''5 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '5\\n'\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '2'\nassert solution('''5 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n1 4\n1 5\n3 4\n4 5\n4\n1 2\n1 3\n1 4\n1 5\n''') == '3'\nassert solution('''7 8\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n3 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n3\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n8\") == \"8\"\nassert solution(\"4\\n7\\n8\\n9\\n10\\n11\\n12\") == \"3\"\nassert solution(\"4\\n7\\n8\\n9\\n10\\n11\\n12\\n13\") == \"7\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1\\n2\\n3\\n'\n\nassert solution(\n'''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1\\n2\\n3\\n'\n\nassert solution(\n'''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1\\n2\\n3\\n'\n\nassert solution(\n'''6 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '2\\n3\\n4\\n'\n\nassert solution(\n'''6 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '2\\n3\\n4\\n'"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\n\nassert solution('''\n4\n4 3 2 1\n1 2 3 4\n''') == '2'\n\nassert solution('''\n6\n3 1 2 5 4 6\n6 5 4 3 2 1\n''') == '4'\n\nassert solution('''\n6\n2 4 3 1 6 5\n6 5 4 3 2 1\n''') == '2'\n\nassert solution('''\n7\n1 2 3 4 5 6 7\n6 7 2 1 5 4 3\n''') == '5'"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n1 5 4 3 2 6\n1 2 5 4 3 6''') == '2'\n\nassert solution('''6\n1 5 4 3 2 6\n1 2 5 4 3 6''') == '2'\n\nassert solution('''6\n1 4 3 5 6 2\n6 5 4 3 2 1''') == '1'\n\nassert solution('''6\n1 6 4 3 5 2\n5 4 3 2 6 1''') == '1'\n\nassert solution('''6\n1 5 4 3 2 6\n1 2 6 5 4 3''') == '2'"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 5 4 3 6') == '2'\nassert solution('2 6 4 5 1 3') == '2'\nassert solution('1 2 4 3 6 5') == '2'\nassert solution('1 5 2 4 3 6') == '2'\nassert solution('1 6 5 4 3 2') == '2'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 5 4 3 2\n1 2 5 4 3\n''') == '2'\nassert solution('''3\n1 2 3 4\n1 2 3 4\n''') == '3'\nassert solution('''6\n1 4 5 2 3 6\n2 3 4 5 6 1\n''') == '3'\nassert solution('''5\n1 4 2 5 3\n1 2 4 5 3\n''') == '2'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('2\\n1') == '2'\nassert solution('1\\n2') == '1'\nassert solution('1\\n2\\n1') == '2'\nassert solution('1\\n2\\n2') == '1'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 5 4 3 2 6\n1 2 5 4 3 6''') == '2'\nassert solution('''1\n1\n''') == '1'\nassert solution('''4\n4 2 3 1\n3 2 1 4''') == '1'\nassert solution('''7\n7 5 4 3 2 1 6\n5 4 3 2 1 7 6''') == '2'\nassert solution('''5\n4 3 2 1 5\n3 2 1 4 5''') == '2'\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\nsolution('stdin') == stdout\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 3321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"60\"\nassert solution(\"2 3 2\") == \"-1\"\nassert solution(\"1 1 1\") == \"-1\"\nassert solution(\"1 1 2\") == \"60\"\nassert solution(\"1 1 1\") == \"-1\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\n\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n1 40 2 40\n2 60 3 20''') == '60'\n\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n1 40 2 40\n2 60 3 20\n3 60 3 60\n''') == '60'\n\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n1 40 2 40\n2 60 3 20\n3 60 3 60\n1 60 3 60\n''') == '-1'\n\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n1 40 2 40\n2 60 3 20\n3 60 3 60\n1 60 3 60\n1 60 3 60\n''') == '-1'"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '-1'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 50 1 70\nSample Input:\n3 3 2\n1 30 2 50\n2 70 3 10\n3 50 1 70\nSample Output:\n60\n''') == '60'\nassert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 50 1 70\n''') == '60'\nassert solution('''4 4 2\n1 30 2 50\n2 70 3 10\n3 50 1 70\n4 60 1 50\nSample Input:\n3 3 2\n1 30 2 50\n2 70 3 10\n3 50 1 70\nSample Output:\n-1\n''') == '-1'\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"60\"\n\"\"\"\nimport sys\nfrom functools import lru_cache"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"60\"\nassert solution(\"1\\n30\\n2\\n50\\n3\\n10\\n4\\n20\\n5\\n80\") == \"60\"\nassert solution(\"1\\n30\\n2\\n50\\n3\\n10\\n4\\n20\\n5\\n80\\n6\\n90\\n7\\n10\\n8\\n20\\n9\\n30\\n10\\n40\") == \"60\"\nassert solution(\"1\\n30\\n2\\n50\\n3\\n10\\n4\\n20\\n5\\n80\\n6\\n90\\n7\\n10\\n8\\n20\\n9\\n30\\n10\\n40\\n11\\n50\\n12\\n60\\n13\\n70\\n14\\n80\\n15\\n90\\n16\\n10\\n17\\n20\\n18\\n30\\n19\\n40\\n20\\n50\\n21\\n60\\n22\\n70\\n23\\n80\\n24\\n90\\n25\\n10\\n26\\n20\\n27\\n30\\n28\\n40\\n29\\n50\\n30\\n60\") == \"60\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\n\"\"\""
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3\n10000 0 0\n0 10000 0\n0 0 10000''') == 'Case #1: 1\\nCase #2: 2'\nassert solution('''3\n2\n0 0 10000\n0 2000 0\n0 0 4000''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3'\nassert solution('''7\n5\n2 4 0\n0 100000 2\n0 2 100000\n0 100000 0\n0 1 10000\n1 1 1\n0 0 10000''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 2\\nCase #4: 1\\nCase #5: 2\\nCase #6: 1\\nCase #7: 3'\nassert solution('''7\n7\n2 4 0\n0 100000 2\n0 2 100000\n0 100000 0\n0 1 10000\n1 1 1\n0 0 10000''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 2\\nCase #4: 1\\nCase #5: 2\\nCase #6: 1\\nCase #7: 3'\nassert solution('''7\n7\n2 4 0\n0 100000 2\n0 2 100000\n0 100000 0\n0 1 10000\n1 1 1\n0 0 10000''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 2\\nCase #4: 1\\nCase #5: 2\\nCase #6: 1\\nCase #7: 3'\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1') == 'Case #1: 1'\nassert solution('2\\n1\\n1') == 'Case #1: 1\\nCase #2: 2'\nassert solution('2\\n1\\n1\\n1\\n1') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 1\\nCase #4: 1\\nCase #5: 1\\nCase #6: 1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 1\\nCase #4: 1\\nCase #5: 1\\nCase #6: 1\\nCase #7: 1\\nCase #8: 1\\nCase #9: 1'\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == '''\nCase #1: 1\nCase #2: 2\n'''"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000') == 'Case #1: 1\\nCase #2: 2'\nassert solution('2\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2'\nassert solution('1\\n1\\n1\\n1') == 'Case #1: 1'\nassert solution('1000\\n1000000000\\n1000000000\\n1000000000') == 'Case #1: 1'\nassert solution('1000\\n1000000000\\n1000000000\\n1000000000') == 'Case #2: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000''') == '''Case #1: 1\nCase #2: 2'''\n'''\n\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2'\n'''\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n''') == 'Case #1: 1\\nCase #2: 2\\n'\nassert solution('''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n4\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3\\nCase #4: 4\\n'\nassert solution('''2\n4\n10000 0 0\n0 10000 0\n0 0 10000\n4\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3\\nCase #4: 4\\n'\nassert solution('''2\n5\n10000 0 0\n0 10000 0\n0 0 10000\n4\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3\\nCase #4: 4\\nCase #5: 5\\n'\nassert solution('''2\n6\n10000 0 0\n0 10000 0\n0 0 10000\n4\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3\\nCase #4: 4\\nCase #5: 5\\nCase #6: 6\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected(stdin)\n\"\"\"\n\nfrom sys import stdin,stdout\nfrom collections import Counter\nfor _ in range(int(stdin.readline())):\n    num = int(stdin.readline())\n    lst = [list(map(int,stdin.readline().split())) for _ in range(num)]\n    \n    lst = sorted(lst,key=lambda x:x[0]+x[1]+x[2],reverse=True)\n    \n    lst2 = [0]*3\n    \n    for x,y,z in lst:\n        if lst2[0] < x:\n            lst2[0] = x\n            lst2[1] = y\n            lst2[2] = z\n    \n    print(\"Case #%d: %d\"%(lst.index(lst2)+1,lst2[0]*lst2[1]*lst2[2]))"
    },
    {
        "number": 3323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000'''\n) == 'Case #1: 1\\nCase #2: 2'\n\nassert solution(\n'''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000'''\n) == 'Case #1: 1\\nCase #2: 2'\n\nassert solution(\n'''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000'''\n) == 'Case #1: 1\\nCase #2: 2'\n\nassert solution(\n'''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000'''\n) == 'Case #1: 1\\nCase #2: 2'\n\nassert solution(\n'''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000'''\n) == 'Case #1: 1\\nCase #2: 2'"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n        \"\"\"\n    +1 2 H 2 O 1\n    +1 2 C 1 O 2\n    -1 1 O 2\n    -1 3 C 6 H 12 O 6\n    0 0\n    \"\"\") == \"6 6 6 1\"\n\nassert solution(\n        \"\"\"\n    +1 2 H 2 O 1\n    +1 2 C 1 O 2\n    -1 1 O 2\n    -1 3 C 6 H 12 O 6\n    0 0\n    \"\"\") == \"6 6 6 1\"\n\nassert solution(\n        \"\"\"\n    +1 2 H 2 O 1\n    +1 2 C 1 O 2\n    -1 1 O 2\n    -1 3 C 6 H 12 O 6\n    0 0\n    \"\"\") == \"6 6 6 1\"\n\nassert solution(\n        \"\"\"\n    +1 2 H 2 O 1\n    +1 2 C 1 O 2\n    -1 1 O 2\n    -1 3 C 6 H 12 O 6\n    0 0\n    \"\"\") == \"6 6 6 1\"\n\nassert solution(\n        \"\"\"\n    +1 2 H 2 O 1\n    +1 2 C 1 O 2\n    -1 1 O 2\n    -1 3 C 6 H 12 O 6\n    0 0\n    \"\"\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\n\nprint(solution(open('Test.txt').read()))\nprint(solution(open('Input.txt').read()))\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\n\"\"\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1'\nassert solution('+1 2 C 1 O 2') == '6 6 6 1'\nassert solution('-1 1 O 2') == '1'\nassert solution('-1 3 C 6 H 12 O 6') == '1 3 4 1 1 1'\nassert solution('0 0') == '0'\n\"\"\""
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 2 O 1\n+1 2 C 1 O 2"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n2 2 2 2 2 2 2\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n2 2 2 2 2 2 2\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n2 2 2 2 2 2 2\\n0 0') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(test_input_1) == test_output_1\nassert solution(test_input_2) == test_output_2\nassert solution(test_input_3) == test_output_3\n'''"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"+1 2 H 2 O 1\") == \"6 6 6 1\"\n\nassert solution(\"+1 2 C 1 O 2\") == \"6 6 6 1\"\n\nassert solution(\"-1 1 O 2\") == \"3\"\n\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"3\"\n\nassert solution(\"0 0\") == \"0\""
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(INPUT1) == EXPECTED1\nassert solution(INPUT2) == EXPECTED2\nassert solution(INPUT3) == EXPECTED3\nassert solution(INPUT4) == EXPECTED4\nassert solution(INPUT5) == EXPECTED5\n"
    },
    {
        "number": 3324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\n\nassert solution('''\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\n\nassert solution('''\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\n\nassert solution('''\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\n\nassert solution('''\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '20.83'\n\"\"\""
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == '20.83'\nassert solution('''10\n100 10\n0 0\n100 10\n100 10\n0 0\n0 0\n100 10\n100 10\n0 0\n100 10''') == '25.00'\nassert solution('''10\n10 10\n0 0\n100 10\n100 10\n0 0\n0 0\n100 10\n100 10\n0 0\n100 10''') == '25.00'\nassert solution('''5\n10 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10''') == '25.00'\nassert solution('''5\n10 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0\n100 10\n100 10\n0 0"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == '20.83'\nassert solution('''5\n100 100\n0 0\n100 0\n-10 -10\n100 100\n100 200''') == '-89.00'\nassert solution('''2\n10 10\n10 10\n10 10\n100 100\n100 200''') == '-59.00'\nassert solution('''3\n90 90\n-60 60\n120 120\n100 100\n100 200\n100 300''') == '-29.00'\nassert solution('''4\n45 45\n0 0\n45 45\n-40 -40\n45 45\n50 50\n-30 -30\n30 30\n50 50\n100 100\n100 200\n100 300\n100 400\n100 500\n100 600''') == '-29.00'\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '20.83'\n\"\"\""
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\nassert solution('''\n10\n10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n''') == '20.38'\nassert solution('''\n1\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n20 10\n20 0\n20 40\n20 30\n20 -10\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n1 1\n1 2\n2 1''') == 1.5\nassert solution('''2\n1 2\n2 1\n1 2''') == 1.5\nassert solution('''3\n1 2\n1 3\n2 3''') == 1.5\nassert solution('''4\n1 2\n1 3\n2 3\n1 4''') == 1.5\nassert solution('''5\n1 2\n1 3\n2 3\n1 4\n2 4''') == 1.5\n"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == '20.83'\nassert solution('''1\n40 60\n0 0\n0 0\n100 0\n100 60''') == '60.00'\nassert solution('''1\n1 1\n0 0\n100 0\n100 1''') == '1.00'\nassert solution('''2\n1 1\n0 0\n1 1\n1 1\n0 0\n2 1\n1 1\n2 1\n2 1\n2 1\n2 1\n2 1\n1 1\n3 1\n1 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1"
    },
    {
        "number": 3325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == '20.83'\nassert solution('''4\n5\n-30 5\n0 -30\n-30 0\n0 0''') == '0.0'\nassert solution('''4\n200 200\n200 0\n200 0\n0 0''') == '5.0'\nassert solution('''4\n100 100\n100 0\n100 0\n0 0''') == '0.0'\nassert solution('''4\n200 200\n0 0\n200 0\n0 0''') == '5.0'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 3\n1 2 5\n7 6 4\n9 8 3'''\n) == '49'\n\nassert solution(\n'''2 2\n2 2\n2 2'''\n) == '2'\n\nassert solution(\n'''3 3\n1 2 4\n7 6 8\n9 3 5'''\n) == '3'\n\nassert solution(\n'''1 1\n1 1'''\n) == '1'\n\nassert solution(\n'''2 1\n2 1'''\n) == '2'"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"1 1\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"1 1\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"1 1\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"1 1\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\nassert solution(\n'''\n1 1\n1\n1\n''') == '1'\nassert solution(\n'''\n3 2\n2 1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''2 3\n1 2 5\n7 6 4\n9 8 3''') == '1'\nassert solution('''2 3\n1 2 4\n7 6 4\n9 8 3''') == '2'\nassert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '2'\nassert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '2'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"49\"\n'''"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''6 6\n1 2 3 4 5 6\n7 8 9 10 11 12\n13 14 15 16 17 18\n19 20 21 22 23 24\n25 26 27 28 29 30''') == '1'\nassert solution('''6 6\n1 2 3 4 5 6\n7 8 9 10 11 12\n13 14 15 16 17 18\n19 20 21 22 23 24\n25 26 27 28 29 30''') == '0'\nassert solution('''4 4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16''') == '4'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 9''') == '8'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'\nassert solution('2 2\\n1 2\\n1 2') == '4'\nassert solution('3 2\\n1 2\\n1 2') == '2'\nassert solution('3 3\\n1 2\\n1 2\\n1 2') == '2'\nassert solution('1 1\\n1 1\\n1 1') == '3'\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''2 1\n2''') == '1'\nassert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\n'''\n\n'''\n"
    },
    {
        "number": 3326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''2 2\n1 2\n3 4''') == '0'\nassert solution('''1 1\n1''') == '0'\nassert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'\nassert solution('''5 4\n3 2 1\n2 2\n1 1\n2 2\n3 3''') == '2'\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 15\\n##.........####\\n1') == '##CROSSWORD####'\nassert solution('1 15\\n##.........####\\n2') == '##.........####'\nassert solution('1 15\\n##.........####\\n3') == '##.........####'\nassert solution('1 15\\n##.........####\\n4') == '##.........####'\nassert solution('1 15\\n##.........####\\n5') == '##.........####'\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '''##CROSSWORD####\n'''\n\nassert solution('''2 15\n##.........####\n1\nC#ROSSWOR\n2\nCOS#ROSSWOR\n3\nCROS#ROSSWOR\n4\nCROS#ROS#SWOR\n5\nCROS#ROS#S?W\n6\nCROS#ROS#S?W\n7\nCROS#ROS#S?W\n8\nCROS#ROS#S?W\n9\nCROS#ROS#S?W\n10\nCROS#ROS#S?W\n11\nCROS#ROS#S?W\n12\nCROS#ROS#S?W\n13\nCROS#ROS#S?W\n14\nCROS#ROS#S?W\n15\nCROS#ROS#S?W\n16\nCROS#ROS#S?W\n17\nCROS#ROS#S?W\n18\nCROS#ROS#S?W\n19\nCROS#ROS#S?W\n20\nCROS#ROS#S?W\n21\nCROS#ROS#S?W\n22\nCROS#ROS#S?W\n23\nCROS#ROS#S?W\n24\nCROS#ROS#S?W\n25\nCROS#ROS#S?W\n26\nCROS#ROS#S?W\n27\nCROS#ROS#S?W\n28\nCROS#ROS#S?W\n29\nCROS#ROS#S?W\n30\nCROS#ROS#S?W\n31\nCROS#ROS#S?W\n32\nCROS#ROS#S?W\n33\nCROS#ROS#S?W\n34\nCROS#ROS#S?W\n35\nCROS#ROS#S?W\n36\nCROS#ROS#S?W\n37\nCROS#ROS#S?W\n38\nCROS#ROS#S?W\n39\nCROS#ROS#S?W\n40\nCROS#ROS#S?W\n41\nCROS#ROS#S?W\n42\nCROS#ROS#S?W\n43\nCROS#ROS#S?W\n44\nCROS#ROS#S?W\n45\nCROS#ROS#S?W\n46\nCROS#ROS#S?W\n47\nCROS#ROS#S?W\n48\nCROS#ROS#S?W\n49\nCROS#ROS#S?W\n50\nCROS#ROS#S?W\n51\nCROS#ROS#S?W\n52\nCROS#ROS#S?W\n53\nCROS#ROS#S?W\n54\nCROS#ROS#S?W\n55\nCROS#ROS#S?W\n56\nCROS#ROS#S?W\n57\nCROS#ROS#S?W\n58\nCROS#ROS#S?W\n59\nCROS#ROS#S?W\n60\nCROS#ROS#S?W\n61\nCROS#ROS#S?W\n62\nCROS#ROS#S?W\n63\nCROS#ROS#S?W\n64\nCROS#ROS#S?W\n65\nCROS#ROS#S?W\n66\nCROS#ROS#S?W\n67\nCROS#ROS#S?W\n68\nCROS#ROS#S?W\n69\nCROS#ROS#S?W\n70\nCROS#ROS#S?W\n71\nCROS#ROS#S?W\n72\nCROS#ROS#S?W\n73\nCROS#ROS#S?W\n74\nCROS#ROS#S?W\n75\nCROS#ROS#S?W\n76\nCROS#ROS#S?W\n77\nCROS#ROS#S?W\n78\nCROS#ROS#S?W\n79\nCROS#ROS#S?W\n80\nCROS#ROS#S?W\n81\nCROS#ROS#S?W\n82\nCROS#ROS#S?W\n83\nCROS#ROS#S?W\n84\nCROS#ROS#S?W\n85\nCROS#ROS#S?W\n86\nCROS#ROS#S?W\n87\nCROS#ROS#S?W\n88\nCROS#ROS#S?W\n89\nCROS#ROS#S?W\n90\nCROS#ROS#S?W\n91\nCROS#ROS#S?W\n92\nCROS#ROS#S?W\n93\nCROS#ROS#S?W\n94\nCROS#ROS#S?W\n95\nCROS#ROS#S?W\n96\nCROS#ROS#S?W\n97\nCROS#ROS#S?W\n98\nCROS#ROS#S?W\n99\nCROS#ROS#S?W\n100\nCROS#ROS#S?W\n101\nCROS#ROS#S?W\n102\nCROS#ROS#S?W\n103\nCROS#ROS#S?W\n104\nCROS#ROS#S?W\n105\nCROS#ROS#S?W\n106\nCROS#ROS#S?W\n107\nCROS#ROS#S?W\n108\nCROS#ROS#S?W\n109\nCROS#ROS#S?W\n110\nCROS#ROS#S?W\n111\nCROS#ROS#S?W\n112\nCROS#ROS#S?W\n113\nCROS#ROS#S"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == output(1)\nassert solution(input(\"\")) == output(2)\nassert solution(input(\"\")) == output(3)\nassert solution(input(\"\")) == output(4)\nassert solution(input(\"\")) == output(5)\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"2 8\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROSSWORD\\nCROS"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '''##CROSSWORD####'''\nassert solution('''2 3\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n2 3\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\nprint(\"Check complete: Pass\")\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 15') == '##CROSSWORD####'\nassert solution('2 11') == '##.C.R...####'\nassert solution('4 13') == '..###...#..###...#..'\nassert solution('5 15') == '.#.##...##....##...###'\nassert solution('6 19') == '.##.#.##..##.#.#.#.#.#.'\n"
    },
    {
        "number": 3327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 15\n##.........####''') == '''##CROSSWORD####'''\nassert solution('''1\nCROSSWORD''') == '''##CROSSWORD####'''\nassert solution('''2 2\n##.###\n##...#\n###..#\n##...#\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n2 7 6\n9 5 1\n4 3 8''') == '31'\nassert solution('''3\n2 4 2\n8 4 1\n4 3 8''') == '0'\nassert solution('''3\n2 3 1\n1 3 2\n3 1 1''') == '16'\nassert solution('''10\n5 5 2\n9 4 5\n6 1 2\n8 3 4\n7 1 2\n1 3 4\n6 2 3\n2 5 1\n6 3 1\n4 5 1''') == '40'\nassert solution('''10\n5 5 2\n9 4 5\n6 1 2\n8 3 4\n7 1 2\n1 3 4\n6 2 3\n2 5 1\n6 3 1\n4 5 1''') == '0'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\n'''\nn, m = [int(x) for x in stdin.readline().strip().split()]\n\narray = [list(map(int, stdin.readline().strip().split())) for _ in range(n)]\n\nres = 0"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\nassert solution('''5 1\n7 1\n8 2\n4 5\n3 4\n3 3''') == '4'\nassert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\nassert solution('''3 1\n2 7 6\n9 5 1\n4 3 8\n3 3''') == '4'\nassert solution('''10 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '30'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"data/test1.txt\").read()) == \"1\"\nassert solution(open(\"data/test2.txt\").read()) == \"28\"\nassert solution(open(\"data/test3.txt\").read()) == \"51\"\nassert solution(open(\"data/test4.txt\").read()) == \"54\"\nassert solution(open(\"data/test5.txt\").read()) == \"0\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n2 3\") == \"31\"\nassert solution(\"1 2\\n2 3\") == \"31\"\nassert solution(\"1 2\\n2 3\") == \"31\"\nassert solution(\"1 2\\n2 3\") == \"31\"\nassert solution(\"1 2\\n2 3\") == \"31\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1\n2 7 6\n9 5 1''') == '31'\n'''\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\"\nassert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n0 0 0\\n0 0 0\") == \"7\"\nassert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n3 3 3\") == \"7\"\nassert solution(\"3 2\\n2 7 6\\n9 5 1\\n4 3 8\\n3 3 3\") == \"8\"\nassert solution(\"3 2\\n2 7 6\\n9 5 1\\n4 3 8\\n1 1 1\\n1 1 1\") == \"8\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\nassert solution('''2 1\n2 1''') == '3'\nassert solution('''5 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '12'\nassert solution('''2 1\n1 1''') == '3'\nassert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'\n"
    },
    {
        "number": 3328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == 31\nassert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == 31\nassert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == 31\nassert solution('''3 1\n2 7 6\n9 5 1\n4 3 8\n9 7 2\n9 5 1\n4 3 8\n9 7 2\n9 5 1\n4 3 8\n9 7 2\n9 5 1\n4 3 8\n9 7 2\n9 5 1\n4 3 8\n9 7 2\n9 5 1\n4 3 8\n9 7 2\n9 5 1\n4 3 8\n9 7 2\n9 5 1\n4 3 8\n9 7 2\n9 5 1\n4 3 8''') == 51"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('BBW') == 2\nassert solution('WWWWWW') == 1\nassert solution('BBWBWBW') == 4\n'''"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''BBW\n'''\n) == '2'\n\nassert solution(\n'''WWW\n'''\n) == '4'\n\nassert solution(\n'''WWWWW\n'''\n) == '0'\n\nassert solution(\n'''WBBW\n'''\n) == '1'\n\nassert solution(\n'''WWWWWWW\n'''\n) == '3'"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"BBW\") == \"WW\"\nassert solution(\"WWBBWB\") == \"BBWBWBW\"\nassert solution(\"WWBBWBW\") == \"BBWBWBW\"\nassert solution
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('BBWBBW') == '0'\nassert solution('WWWWWWW') == '4'\nassert solution('BWWWBBW') == '1'\nassert solution('WWWWWWW') == '1'\nassert solution('BBWBBWBBW') == '1'\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"BBW\") == \"2\"\nassert solution(\"WWWWBBWWWWWWWWBBW\") == \"2\"\nassert solution(\"WWWWBBWWWWWWWWBBW\") == \"2\"\nassert solution(\"WWWWBBWWWWWWWWBBW\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"BBW\"\n\"\"\"\n\nfrom collections import Counter, deque"
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n\nimport sys\nassert sys.stdin.read() == \"\"\"[Hint: After much experimentation you come to the conclusion that the only possible starting circle is the white circle.]\"\"\"\nassert sys.stdin.read() == \"\"\"[Hint: After much experimentation you come to the conclusion that the only possible starting circle is the white circle.]\"\"\"\n\n\"\"\""
    },
    {
        "number": 3329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\nassert solution(input5) == output5\n\n-----\n\nA left-leaning staircase with $K$ steps on it is standing at $A$ levels. Its top is at the $K$th level and the bottom is at the $2K$th level. It is allowed to step up or down at a time. The staircase is allowed to be $1$ long and each step on it is allowed to be 1 level higher or lower.\n\nWrite a function that returns the number of ways in which the staircase can be climbed to the top of its bottom. For example, the staircase is allowed to be climbed at $1$ steps, $2$ steps, $3$ steps and so on. The $K$th level is denoted by the $2K$th level. Also, $K$th level is allowed to be climbed at a time.\n\n\n-----\n\nYou are a renowned chemist. You want to build a staircase with $K$ steps.\n\nEach step is supposed to have $2K$ levels. Given the heights of the $K$ steps, find the total number of ways to build the staircase.\n\n-----\n\nThe first two levels are at level 1.\n\nFor example,\n\nLevel 1\n\nStep 1\n\nStep 2\n\nStep 3\n\nStep 4\n\nStep 5\n\nThe total number of ways are 5.\n\n-----\n\nYou are given a set of $K$ integers, $1 \\le K \\le 100$, where $K$ is the number of steps. Your task is to find the total number of ways to climb the staircase of $N$ steps.\n\n-----\n\nFor example,\n\n  * $N = 2$, the staircase is the following:\n\n    1\n    2\n\n  * $N = 3$, the staircase is the following:\n\n    1\n    2\n    3\n\n  * $N = 4$, the staircase is the following:\n\n    1\n    2\n    3\n    4\n\n  * $N = 5$, the staircase is the following:\n\n    1\n    2\n    3\n    4\n    5\n\n  * $N = 6$, the staircase is the following:\n\n    1\n    2\n    3\n    4\n    5\n    6\n\n  * $N = 7$, the staircase is the following:\n\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n\n  * $N = 8$, the staircase is the following:\n\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n\n  * $N = 9$, the staircase is the following:\n\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n\n  * $N = 10$, the staircase is the following:\n\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == \"0.556\"\n\"\"\"\n\n\"\"\"\n1. No.\n2. Yes.\n\"\"\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 1\n3 2 1\n1 2 3\n\"\"\") == \"0.556\"\nassert solution(\n\"\"\"\n1 10\n10\n\"\"\") == \"0.2\"\nassert solution(\n\"\"\"\n3 100\n6 9 1\n4 8 2\n\"\"\") == \"103700\"\nassert solution(\n\"\"\"\n4 3\n3 4 4\n4 3 2\n1 2 3\n\"\"\") == \"6\"\nassert solution(\n\"\"\"\n1 2\n2\n\"\"\") == \"0.5\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0.556'\nassert solution('0 2 1\\n1 2 3') == '0.556'\nassert solution('1 2 1\\n1 2 3') == '0.556'\nassert solution('2 1\\n1 2 3') == '0.556'\nassert solution('2 2\\n1 2 3') == '0.333'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.556\"\nassert solution(stdin) == \"0.500\"\nassert solution(stdin) == \"0.400\"\nassert solution(stdin) == \"0.250\"\nassert solution(stdin) == \"0.125\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n3 2 1') == '0.556'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '2.380'\nassert solution('4 10\\n2 1 1 2\\n1 1 1 1\\n3 3 1 3\\n2 2 1 1\\n1 1 1 1\\n1 1 2 2\\n2 2 1 2\\n1 1 1 1\\n1 1 1 1\\n2 1 1 1\\n1 1 1 1') == '3.016'\nassert solution('10 9\\n5 3 2 5 3 2 3 1\\n4 4 4 4 4 2 2 2\\n3 3 3 3 2 2 2 2\\n2 2 2 2 2 2 1 1\\n1 1 1 1 1 1 1 1\\n2 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1') == '5.518'\nassert solution('9 9\\n5 3 2 5 3 2 3 1\\n4 4 4 4 4 2 2 2\\n3 3 3 3 2 2 2 2\\n2 2 2 2 2 2 1 1\\n1 1 1 1 1 1 1 1\\n2 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == \"0.556\"\nassert solution('''1 1\n2 2 2\n3 3 3''') == \"0.333\"\nassert solution('''3 2\n3 2 3\n2 2 1''') == \"0.000\"\nassert solution('''1 1\n1 1 1''') == \"0\"\nassert solution('''1 1\n1 1 1''') == \"0\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == '0.556'\nassert solution('''2 1\n1 1\n1''') == '0.5'\nassert solution('''1 2\n1 3 4\n1 2''') == '1'\nassert solution('''3 1\n2 4 1\n1 2''') == '0.5'\nassert solution('''1 2\n1 3 4\n1 2''') == '0.5'\n"
    },
    {
        "number": 3330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.556'"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n\nassert solution('5 4 3 2') == '3'\nassert solution('5 5 3 2') == '4'\nassert solution('5 6 5 4') == '5'\nassert solution('5 6 5 4') == '6'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\n\"\"\"\n\nfrom collections import namedtuple\nfrom math import ceil, log2\nfrom math import floor\nfrom sys import maxsize\n\n\nclass Cow(namedtuple(\"Cow\", \"position left right\")):\n    @classmethod\n    def read(cls, data: str) -> \"Cow\":\n        return cls(*map(int, data.split(\" \")))"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4 3 2') == '3'\n\n-----Requirements------\n* *n/a*\n\"\"\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"5 4 3 2\"\n) == \"3\"\n\nassert solution(\n\"10 5 3 9\"\n) == \"4\"\n\nassert solution(\n\"10 1 1 1\"\n) == \"1\"\n\nassert solution(\n\"10 11 2 4\"\n) == \"6\"\n\nassert solution(\n\"12 8 6 7\"\n) == \"8\""
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4 3 2''') == '3'\nassert solution('''20 4 3 2''') == '60'\nassert solution('''100 5 4 3 2''') == '600'\nassert solution('''20 2 2 1''') == '1'\nassert solution('''20 5 3 2''') == '60'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4 3 2''') == '3'\nassert solution('''1 1 2 2''') == '2'\nassert solution('''5 4 3 1''') == '3'\nassert solution('''1 2 2 3''') == '5'\nassert solution('''1 1 1 1''') == '0'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4 3 2''') == '3'\nassert solution('''2 5 8 3''') == '2'\nassert solution('''5 5 6 3''') == '3'\nassert solution('''5 4 3 2''') == '3'\nassert solution('''9 7 8 4''') == '5'\n'''"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('6 3 3 3') == '6'\nassert solution('4 2 4 2') == '4'\nassert solution('4 1 4 2') == '5'\nassert solution('4 4 1 4') == '5'\n"
    },
    {
        "number": 3331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1 2 0''') == 3\nassert solution('''1 1 3 0''') == 5\nassert solution('''1 1 4 3''') == 7\nassert solution('''0 1 2 1''') == 7\nassert solution('''1 1 2 1''') == 4\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 1\n2 4 1\n1 3 1\n3 4 1\n4 5 1\n''') == '11'\n\nassert solution('''\n5\n1 1 2\n2 2 4\n1 4 1\n3 3 5\n5 5 1\n''') == '15'\n\nassert solution('''\n5\n1 1 2\n2 2 4\n3 3 5\n4 4 5\n5 1 2\n''') == '8'\n\nassert solution('''\n10\n1 1 2\n2 1 3\n3 1 5\n4 1 6\n5 1 7\n6 1 8\n7 1 9\n8 1 10\n9 1 11\n10 1 12\n''') == '230'\n\nassert solution('''\n15\n1 1 2\n2 1 3\n3 1 5\n4 1 6\n5 1 7\n6 1 8\n7 1 9\n8 1 10\n9 1 11\n10 1 12\n11 1 13\n12 1 14\n13 1 15\n14 1 16\n15 1 17\n''') == '243'"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(read_input(__file__, '1.in', sample1)) == '8'\nassert solution(read_input(__file__, '2.in', sample2)) == '12'\nassert solution(read_input(__file__, '3.in', sample3)) == '21'\nassert solution(read_input(__file__, '4.in', sample4)) == '24'\nassert solution(read_input(__file__, '5.in', sample5)) == '30'\nprint(solution(read_input(__file__, '6.in')))\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(fileinput.input()[0]) == fileinput.input()[1] # fileinput.input()[0] == fileinput.input()[1]\n\n----Notes----\nIf you implement this in Java, make sure to clear the stack after each operation.\n\n\"\"\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n'''\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(read_input(__file__)) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '231368'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '231368'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '231368'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '231368'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '13'\n'''\n"
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"13\"\n\"\"\""
    },
    {
        "number": 3332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\") == \"3.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n10.000000 20.123456') == '0.000000'\nassert solution('10.000000 20.123456\\n1\\n9.963204 20.123456') == '3.1416'\nassert solution('10.000000 20.123456\\n1\\n15.064528 20.123456') == '3.1416'\nassert solution('10.000000 20.123456\\n1\\n9.963204 20.123456') == '3.1416'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25') == '2.25'\nassert solution('1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n26 27 28 29 30 31') == '2.28125'\nassert solution('1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n26 27 28 29 30 31\\n32 33 34 35 36 37 38 39 40 41') == '2.28125'\nassert solution('1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n26 27 28 29 30 31\\n32 33 34 35 36 37 38 39 40 41\\nnassert solution('1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n26 27 28 29 30 31\\n32 33 34 35 36 37 38 39 40 41\\n44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n10.000000\n1\n13.141593\n20.123456\n\"\"\"\n) == \"\"\"\n3.141593\n\"\"\"\n\nassert solution(\n\"\"\"\n10.000000\n1\n13.141593\n20.123456\n\"\"\"\n) == \"\"\"\n3.141593\n\"\"\"\n\nassert solution(\n\"\"\"\n10.000000\n1\n20.123456\n\"\"\"\n) == \"\"\"\n3.141593\n\"\"\"\n\nassert solution(\n\"\"\"\n10.000000\n1\n20.123456\n\"\"\"\n) == \"\"\"\n3.141593\n\"\"\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10.000000 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456\n1\n13.141593 20.123456''') == '3.141593'\nassert solution('''10.000000 20.123456\n1\n13.141593 17.123456''') == '5.011665'\nassert solution('''10.000000 20.123456\n2\n13.141593 17.123456\n1\n12.123418 17.123456\n1\n7.123456 17.123456\n1\n16.123456 17.123456\n1\n13.123456 17.123456\n1\n13.141593 17.123456''') == '4.430101'\nassert solution('''10.000000 20.123456\n1\n10.000000 22.123456\n1\n10.000000 19.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n10.000000 17.123456\n1\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"10.000000 20.123456\"\"\") == '3.141593'\nassert solution(\"\"\"10.000000 20.123456\"\"\") == '3.141593'\nassert solution(\"\"\"10.000000 20.123456\"\"\") == '3.141593'\nassert solution(\"\"\"10.000000 20.123456\"\"\") == '3.141593'\nassert solution(\"\"\"10.000000 20.123456\"\"\") == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n17.123456 20.123456') == '14.545516'\nassert solution('10.000000 20.123456\\n1\\n23.141593 20.123456') == '14.545016'\nassert solution('10.000000 20.123456\\n1\\n2.141593 20.123456') == '11.545516'\nassert solution('10.000000 20.123456\\n1\\n3.141593 20.123456') == '10.000006'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n13.141593 19.155963\\n') == '4.471698'\nassert solution('10.000000 20.123456\\n1\\n13.141593 19.155963\\n') == '5.612796'\nassert solution('10.000000 20.123456\\n1\\n13.141593 19.155963\\n') == '6.309964'\nassert solution('10.000000 20.123456\\n1\\n13.141593 19.155963\\n') == '6.309964'\n"
    },
    {
        "number": 3333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n\"\"\") == \"\"\n\nassert solution(\n\"\"\"\n10.000000 20.123456\n1\n13.141593 19.241505\n\"\"\") == \"3.141593\"\n\nassert solution(\n\"\"\"\n10.000000 20.123456\n2\n10.0 10.0\n\"\"\") == \"2.00000000\"\n\nassert solution(\n\"\"\"\n10.000000 20.123456\n3\n10.0 10.0\n20.0 10.0\n\"\"\") == \"1.999999\"\n\nassert solution(\n\"\"\"\n10.000000 20.123456\n4\n10.0 10.0\n20.0 10.0\n13.141593 19.241505\n\"\"\") == \"2.153352\""
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '2.13333333333333'\nassert solution('5\\n10\\n6\\n5\\n5\\n5\\n5\\n5\\n5\\n5') == 'impossible'\nassert solution('2\\n1\\n1') == '1.0'\nassert solution('10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'impossible'\nassert solution('8\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n2 3') == '2.3'\nassert solution('2 2\\n4 3') == 'impossible'\nassert solution('2 4\\n3 4') == '2.4'\nassert solution('2 4\\n1 2') == '2'\nassert solution('1 1\\n2 1') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == 'impossible'\nassert solution('1\\n2\\n3\\n2\\n2') == '2.25'\nassert solution('2\\n1\\n1') == '1'\nassert solution('3\\n2\\n2') == '1'\nassert solution('4\\n4\\n2\\n1\\n3\\n2') == '1'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4\n4 4\n2\n''') == '2.13333333333333'\nassert solution(\n'''\n5\n4 2\n3 2\n1 1\n2 2\n4 2\n3 1\n3 3\n1 2\n2 3\n2 4\n3 4\n''') == 'impossible'\nassert solution(\n'''\n4\n1\n2\n3\n4\n''') == '1.5'\nassert solution(\n'''\n5\n2\n2\n2\n2\n2\n''') == '2.0'\nassert solution(\n'''\n2\n1\n1\n1\n1\n''') == '1.0'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n4 4\n2''') == '2.13333333333333'\nassert solution('''4\n6 6\n5\n2\n4 4\n8\nSample Output:\nimpossible\n''') == 'impossible'\nassert solution('''4\n6 6\n5\n2\n4 4\n8\n3\n4\n5\n6\n6\n2\n4\n8\n3\n5\n6\n6\n2\n4\n8\n3''') == '2.7'\nassert solution('''6\n4 4\n4\n2\n1\n5\n5\n2\n3\n4\n6\n2\n4\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n4\n6\n2\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n4\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n5\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n4\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n4\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n2\n5\n6\n2\n6\n2\n4\n6\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n2\n2\n1''') == 'impossible'\nassert solution('''2\n4\n2\n2\n2\n1''') == '2.13333333333333'\nassert solution('''1\n5\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '2.13333333333333'\nassert solution('2') == 'impossible'\nassert solution('5') == 'impossible'\nassert solution('10') == 'impossible'\nassert solution('4') == '2.16666666666666'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n4 4\n2\n''') == '2.13333333333333'\nassert solution('''3\n5 5\n4\n3\n1\n2\n''') == 'impossible'\nassert solution('''3\n5 5\n4\n3\n1\n2\n''') == '2.13333333333333'\nassert solution('''3\n5 5\n4\n3\n1\n2\n''') == '2.13333333333333'\nassert solution('''3\n5 5\n4\n3\n1\n2\n''') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2\n4\n3\n''') == '2.13333333333333'\nassert solution('''\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 3334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 'impossible'\nassert solution('2\\n1\\n3') == 'impossible'\nassert solution('2\\n4\\n4\\n2\\n1\\n3') == '2.240000'\nassert solution('2\\n3\\n5\\n7\\n9\\n10\\n4\\n1\\n5\\n2\\n3\\n6') == 'impossible'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"18\"\nassert solution(\"100\") == \"18\"\nassert solution(\"1000\") == \"18\"\nassert solution(\"10000\") == \"36\"\nassert solution(\"100000\") == \"780\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n7\n13''') == '18'\nassert solution('''7\n7\n11''') == '18'\nassert solution('''5\n5\n13''') == '10'\nassert solution('''10\n10\n31''') == '6'\nassert solution('''20\n10\n91''') == '6'\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(7) == 18\nassert solution(11) == 36\nassert solution(13) == 84\nassert solution(16) == 256\nassert solution(21) == 576\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '18'\nassert solution('1000') == '60'\nassert solution('10001') == '250'\nassert solution('10') == '3'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7''') == '18'\nassert solution('''7''') == '18'\nassert solution('''1''') == '0'\nassert solution('''2''') == '0'\nassert solution('''3''') == '0'\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7') == '18'\n\"\"\"\n\n###############################################################\n\"\"\"\nSolution:\n\"\"\"\n###############################################################\n\nfrom math import sqrt\nimport sys\n\nn = int(sys.stdin.readline())\n\ncount = 0\nfor a in range(1,n):\n    for b in range(a,n):\n        c = sqrt(a*a + b*b)\n        if int(c) == c:\n            if c <= n:\n                count += 1\n\nprint(count)"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n7\n''') == '18'\nassert solution('''\n10\n''') == '84'\nassert solution('''\n1\n''') == '0'\nassert solution('''\n1000\n''') == '3703'\nassert solution('''\n1000\n''') == '3703'\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''7'''\n) == '18'\n\nassert solution(\n'''16'''\n) == '96'\n"
    },
    {
        "number": 3335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7''') == '18'\nassert solution('''100''') == '720'\n'''"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'\nassert solution(\n'''\n4\n35 M classical programming\n0 M baroque skiing\n43 M baroque chess\n30 M baroque soccer\n''') == '0'\nassert solution(\n'''\n4\n35 M classical programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '0'\nassert solution(\n'''\n4\n35 M classical programming\n0 M baroque skiing\n43 M baroque chess\n30 M baroque soccer\n''') == '3'\nassert solution(\n'''\n4\n35 M classical programming\n0 M baroque skiing\n43 M baroque chess\n30 M baroque soccer\n''') == '0'\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\").read()) == open(\"test_output.txt\").read()\n\"\"\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer''') == '3'\nassert solution('''\\\n4\n30 M baroque chess\n43 M baroque chess\n30 F baroque chess\n35 M classicism programming''') == '2'\nassert solution('''\\\n4\n30 M baroque chess\n30 M baroque chess\n30 M baroque chess\n35 M classicism programming''') == '2'\n'''\n\nimport sys\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '0'\nassert solution('1 M classicism programming') == '1'\nassert solution('0 M baroque skiing') == '0'\nassert solution('43 M baroque chess') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n'''\n    ) == '3'\n\nassert solution(\n'''1\n0 M baroque skiing\n0 F baroque soccer\n'''\n    ) == '0'\n\nassert solution(\n'''2\n100 M baroque skiing\n50 M baroque chess\n100 F baroque soccer\n'''\n    ) == '1'\n\nassert solution(\n'''6\n220 M baroque skiing\n220 F baroque chess\n190 M baroque soccer\n205 M jazz\n150 M programming\n220 F baroque chess\n'''\n    ) == '4'\n\nassert solution(\n'''8\n220 M baroque skiing\n220 F baroque chess\n190 M baroque soccer\n205 M jazz\n150 M programming\n220 F baroque chess\n220 M programming\n'''\n    ) == '5'"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'\nassert solution('''4\n29 M programming\n3 M programming\n0 M programming\n10 F programming\n''') == '2'\nassert solution('''4\n35 M programming\n0 M programming\n43 M programming\n30 F programming\n''') == '3'\nassert solution('''4\n0 M programming\n3 M programming\n0 M programming\n10 F programming\n''') == '2'\nassert solution('''4\n0 M programming\n3 M programming\n0 M programming\n10 F programming\n''') == '2'\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer''') == '3'\nassert solution('''4\n4 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n4 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n4 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer''') == '6'\nassert solution('''6\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n3 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n3 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n4 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n4 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer''') == '5'\nassert solution('''10\n35 M baroque programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n4 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M bacend programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer''') == '10'\nassert solution('''3\n4 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming\n0 M baroque skiing\n4 M baroque chess\n30 F baroque soccer\n5 M classical programming"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_1.txt\").read()) == \"3\"\nassert solution(open(\"test_2.txt\").read()) == \"2\"\nassert solution(open(\"test_3.txt\").read()) == \"0\"\nassert solution(open(\"test_4.txt\").read()) == \"1\"\nassert solution(open(\"test_5.txt\").read()) == \"0\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n35 M\n0 M\n43 M\n30 F\n''') == '3'\nassert solution('''9\n35 M\n0 M\n43 M\n30 F\n0 M\n4 M\n34 M\n0 F\n0 F\n4 M\nSample Output:\n5\nassert solution('''10\n35 M\n0 M\n43 M\n30 F\n0 M\n4 M\n34 M\n0 F\n0 F\n4 M\n0 F\n0 M\n4 M\n''') == '5'\nassert solution('''11\n35 M\n0 M\n43 M\n30 F\n0 M\n4 M\n34 M\n0 F\n0 F\n4 M\n0 F\n0 M\n4 M\n0 F\n0 M\n4 M\n''') == '5'\nassert solution('''13\n35 M\n0 M\n43 M\n30 F\n0 M\n4 M\n34 M\n0 F\n0 F\n4 M\n0 F\n0 M\n4 M\n0 F\n0 M\n4 M\n''') == '5'\n"
    },
    {
        "number": 3336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\"\"\") == \"3\"\nassert solution(\"\"\"10\n140 M baroque chess\n180 F baroque chess\n159 F baroque chess\n160 M baroque chess\n171 M baroque chess\n178 M baroque chess\n181 M baroque chess\n183 M baroque chess\n184 M baroque chess\"\"\") == \"10\"\nassert solution(\"\"\"10\n0 M baroque skiing\n1 M baroque skiing\n2 M baroque skiing\n3 M baroque skiing\n4 M baroque skiing\n5 M baroque skiing\n6 M baroque skiing\n7 M baroque skiing\n8 M baroque skiing\n9 M baroque skiing\"\"\") == \"8\"\nassert solution(\"\"\"10\n0 M baroque chess\n1 M baroque chess\n2 M baroque chess\n3 M baroque chess\n4 M baroque chess\n5 M baroque chess\n6 M baroque chess\n7 M baroque chess\n8 M baroque chess\n9 M baroque chess\"\"\") == \"8\"\nassert solution(\"\"\"10\n0 M baroque chess\n1 M baroque chess\n2 M baroque chess\n3 M baroque chess\n4 M baroque chess\n5 M baroque chess\n6 M baroque chess\n7 M baroque chess\n8 M baroque chess\n9 M baroque chess\"\"\") == \"8\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\\n1\\n2\\n2\\n2\"\nassert solution(\"3\") == \"2\\n2\\n2\"\nassert solution(\"4\") == \"0\\n2\\n2\"\nassert solution(\"7\") == \"2\\n1\\n1\\n1\\n2\\n1\"\nassert solution(\"7\") == \"2\\n2\\n2\\n2\\n2\\n2\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('6') == ''\nassert solution('0') == ''\nassert solution('1 2 3') == ''\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '2\\n1\\n2\\n2\\n1'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2\\n2\\n1'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2\\n2\\n1\\n2'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '2\\n1\\n2\\n2\\n2'\nassert solution('4') == '2\\n1\\n2\\n1'\nassert solution('3') == '2\\n0\\n0'\nassert solution('1') == '0\\n0'\nassert solution('2') == '0\\n0'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1\\n') == '1'\nassert solution('\\n1') == '1'\nassert solution('2\\n1') == '0'\nassert solution('1\\n1\\n2') == '2'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\nassert solution('''5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''a 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2'\nassert solution('''a 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2'\nassert solution('''a 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2'\nassert solution('''a 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2'\nassert solution('''a 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2'\n"
    },
    {
        "number": 3337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"5\na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\") == \"1\\n2\\n2\\n2\\n1\"\nassert solution(\n\"\"\"5\na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\") == \"1\\n2\\n2\\n2\\n1\"\nassert solution(\n\"\"\"10\na 0\na 1\nb 2\nc 2 3\nb 4\na 5\na 6\nb 7\na 8\na 9\nc 10\na 11\n\"\"\") == \"1\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\n\"\"\"7\na 0\na 1\nb 2\nc 2 3\nb 4\na 5\na 6\n\"\"\") == \"1\\n2\\n2\\n2\\n1\\n1\"\nassert solution(\n\"\"\"10\na 0\na 1\nb 2\nc 2 3\nb 4\na 5\na 6\na 7\na 8\na 9\na 10\na 11\n\"\"\") == \"1\\n2\\n2\\n2\\n1\\n1\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\"\n'''\n\nimport sys"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0''') == '5'\n'''\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\"\n\nassert solution(\"\") == \"0\"\n\nassert solution(\"6 1\") == \"5\"\n\nassert solution(\"10 1\") == \"5\"\n\nassert solution(\"10 2\") == \"10\""
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\nassert solution('''\n10 1\n47 13 50 24\n64 24 53 70\n58 30 21 15\n50 22 11 3\n60 0 0 0\n20 10 3 0\n''') == '3'\n'''"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_data/seine_input.txt\", \"r\").read()) == \"5\"\nassert solution(open(\"test_data/seine_input1.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"test_data/seine_input2.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"test_data/seine_input3.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"test_data/seine_input4.txt\", \"r\").read()) == \"3\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0''') == '5'\n'''"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"solution.py\", \"r\").read()) == \"5\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0''') == '5'\n'''"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 5\\n\" + \n    \"1 2\\n\" + \n    \"1 3\\n\" + \n    \"1 4\\n\" + \n    \"2 3\\n\" + \n    \"2 4\\n\"\n) == \"4\"\nassert solution(\n    \"3 6\\n\" + \n    \"1 2\\n\" + \n    \"1 3\\n\" + \n    \"1 4\\n\" + \n    \"1 5\\n\" + \n    \"2 3\\n\" + \n    \"2 4\\n\" + \n    \"2 5\\n\" + \n    \"3 4\\n\" + \n    \"3 5\\n\"\n) == \"12\"\nassert solution(\n    \"3 10\\n\" + \n    \"1 2\\n\" + \n    \"1 3\\n\" + \n    \"1 4\\n\" + \n    \"1 5\\n\" + \n    \"1 6\\n\" + \n    \"1 7\\n\" + \n    \"1 8\\n\" + \n    \"2 3\\n\" + \n    \"2 4\\n\" + \n    \"2 5\\n\" + \n    \"2 6\\n\" + \n    \"2 7\\n\" + \n    \"2 8\\n\" + \n    \"2 9\\n\" + \n    \"2 10\\n\" + \n    \"3 4\\n\" + \n    \"3 5\\n\" + \n    \"3 6\\n\" + \n    \"3 7\\n\" + \n    \"3 8\\n\" + \n    \"3 9\\n\" + \n    \"3 10\\n\"\n) == \"12\"\nassert solution(\n    \"7 10\\n\" + \n    \"1 2\\n\" + \n    \"1 3\\n\" + \n    \"1 4\\n\" + \n    \"1 5\\n\" + \n    \"1 6\\n\" + \n    \"1 7\\n\" + \n    \"1 8\\n\" + \n    \"1 9\\n\" + \n    \"1 10\\n\" + \n    \"2 3\\n\" + \n    \"2 4\\n\" + \n    \"2 5\\n\" + \n    \"2 6\\n\" + \n    \"2 7\\n\" + \n    \"2 8\\n\" + \n    \"2 9\\n\" + \n    \"2 10\\n\" + \n    \"3 4\\n\" + \n    \"3 5\\n\" + \n    \"3 6\\n\" + \n    \"3 7\\n\" + \n    \"3 8\\n\" + \n    \"3 9\\n\" + \n    \"3 10\\n\" + \n    \"4 5\\n\" + \n    \"4 6\\n\" + \n    \"4 7\\n\" + \n    \"4 8\\n\" + \n    \"4 9\\n\" + \n    \"4 10\\n\" + \n    \"5 6\\n\" + \n    \"5 7\\n\" + \n    \"5 8\\n\" + \n    \"5 9\\n\" + \n    \"5 10\\n\" + \n    \"6 7\\n\" + \n    \"6 8\\n\" + \n    \"6 9\\n\" + \n    \"6 10\\n\" + \n    \"7 8\\n\" + \n    \"7 9\\n\" + \n    \"7 10\\n\"\n) == \"12\"\nassert solution(\n    \"11 11\\n\" + \n    \"1 2\\n\" + \n    \"1 3\\n\" + \n    \"1 4\\n\" + \n    \"1 5\\n\" + \n    \"1 6\\n\" + \n    \"1 7\\n\" + \n    \"1 8\\n\" + \n    \"1 9\\n\" + \n    \"1 10\\n\" + \n    \"2 3\\n\" + \n    \"2 4\\n\" + \n    \"2 5\\n\" + \n    \"2 6\\n\" + \n    \"2 7\\n\" + \n    \"2 8\\n\" + \n    \"2 9\\n\" + \n    \"2 10\\n\" + \n    \"3 4\\n\" + \n    \"3 5\\n\" + \n    \"3 6\\n\" + \n    \"3 7\\n\" + \n    \"3 8\\n\" + \n    \"3 9\\n\" + \n    \"3 10\\n\" + \n    \"4 5\\n\" + \n    \"4 6\\n\" + \n    \"4 7\\n\" + \n    \"4 8\\n\" + \n    \"4 9\\n\" + \n    \"4 10\\n\" + \n    \"5 6\\n\" + \n    \"5 7\\n\" + \n    \"5 8\\n\" + \n    \"5 9\\n\" + \n    \"5 10\\n\" + \n    \"6 7\\n\" + \n    \"6 8\\n\" + \n    \"6 9\\n\" + \n    \"6 10\\n\" + \n    \"7 8\\n\" + \n    \"7 9\\n\" + \n    \"7 10\\n\" + \n    \"8 9\\n\" + \n    \"8 10\\n\" + \n    \"9 10\\n\"\n) == \"12\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"4 5\n1 2\n1 3\n1 4\n2 3\n2 4\n\"\"\".strip()) == \"4\"\n\nassert solution(\n\"\"\"5 10\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n\"\"\".strip()) == \"24\"\n\nassert solution(\n\"\"\"10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n\"\"\".strip()) == \"1\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5\n1 2\n1 3\n1 4\n2 3\n2 4''') == '4'\nassert solution('''3 3\n1 2\n1 3\n2 3\n2 1\n3 1\n3 2''') == '1'\nassert solution('''3 3\n1 2\n1 3\n2 3\n2 1\n3 1\n3 2''') == '3'\nassert solution('''4 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n2 1\n3 1\n4 1\n3 2''') == '2'\nassert solution('''2 3\n1 2\n1 3\n2 3\n2 1\n3 1\n3 2''') == '1'\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"5 4\") == \"4\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4'\nassert solution('3 4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '3'\nassert solution('2 2\\n1 2\\n1 2\\n') == '0'\nassert solution('2 2\\n1 2\\n1 2\\n1 2\\n') == '0'\nassert solution('2 2\\n1 2\\n1 2\\n') == '0'\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 5\") == \"4\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\") == \"4\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample_input) == answer\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4'\nassert solution('''1 1\n''') == '1'\nassert solution('''4 4\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4'\nassert solution('''1 2\n2 1\n1 3\n2 3\n3 1\n2 4\n''') == '2'\nassert solution('''1 4\n1 3\n2 3\n3 4\n1 2\n2 4\n3 4\n4 1\n''') == '2'\n"
    },
    {
        "number": 3339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5\n1 2\n1 3\n1 4\n2 3\n2 4''') == '4'\nassert solution('''6 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n5 6''') == '4'\nassert solution('''6 7\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n5 6\n6 7''') == '2'\nassert solution('''8 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n7 12\n8 9\n8 10\n8 11\n8 12\n8 13\n9 10\n9 11\n9 12\n9 13\n9 14\n10 11\n10 12\n10 13\n10 14\n10 15\n11 12\n11 13\n11 14\n11 15\n11 16\n12 13\n12 14\n12 15\n12 16\n12 17\n13 14\n13 15\n13 16\n13 17\n13 18\n14 15\n14 16\n14 17\n14 18\n14 19\n15 16\n15 17\n15 18\n15 19\n15 20\n16 17\n16 18\n16 19\n16 20\n16 21\n17 18\n17 19\n17 20\n17 21\n17 22\n18 19\n18 20\n18 21\n18 22\n18 23\n19 20\n19 21\n19 22\n19 23\n19 24\n20 21\n20 22\n20 23\n20 24\n20 25\n21 22\n21 23\n21 24\n21 25\n21 26\n22 23\n22 24\n22 25\n22 26\n22 27\n23 24\n23 25\n23 26\n23 27\n23 28\n24 25\n24 26\n24 27\n24 28\n24 29\n25 26\n25 27\n25 28\n25 29\n25 30\n26 27\n26 28\n26 29\n26 30\n26 31\n27 28\n27 29\n27 30\n27 31\n27 32\n28 29\n28 30\n28 31\n28 32\n28 33\n29 30\n29 31\n29 32\n29 33\n29 34\n30 31\n30 32\n30 33\n30 34\n30 35\n31 32\n31 33\n31 34\n31 35\n31 36\n32 33\n32 34\n32 35\n32 36\n32 37\n33 34\n33 35\n33 36\n33 37\n33 38\n34 35\n34 36\n34 37\n34 38\n34 39\n35 36\n35 37\n35 38\n35 39\n35 40\n36 37\n36 38\n36 39\n36 40\n36 41\n37 38\n37 39\n37 40\n37 41\n37 42\n38 39\n38 40\n38 41\n38 42\n38 43\n39 40\n39 41\n39 42\n39 43\n39 44\n40 41\n40 42\n40 43\n40 44\n40 45\n41 42\n41 43\n41 44\n41 45\n41 46\n42 43\n42 44\n42 45\n42 46\n42 47\n43 44\n43 45\n43 46\n43 47\n43 48\n44 45\n44 46\n44 47\n44 48\n44 49\n45 46\n45 47\n45 48\n45 49\n45 50\n46 47\n46 48\n46 49\n46 50\n46 51\n47 48\n47 49\n47 50\n47 51\n47 52\n48 49\n48 50\n48 51\n48 52\n48 53\n49 50\n49 51\n49 52\n49 53\n49 54\n50 51\n50 52\n50 53\n50 54\n50 55\n51 52\n51 53\n51 54\n51 55\n51 56\n52 53\n52 54\n52 55\n52 56\n52 57\n53 54\n53 55\n53 56\n53 57\n53 58\n54 55\n54 56\n54 57\n54 58\n54 59\n55 56\n55 57\n55 58\n55 59\n55 60\n56 57\n56 58\n56 59\n56 60\n56 61\n57 58\n57 59\n57 60\n57 61\n57 62\n58 59\n58 60\n58 61\n58 62\n58 63\n59 60\n59 61\n59 62\n59 63\n59 64\n60 61\n60 62\n60 63\n60 64\n60 65\n61 62\n61 63\n61 64\n61 65\n61 66\n62 63\n62 64\n62 65\n62 66\n62 67\n63 64\n63 65\n63 66\n63 67\n63 68\n64 65\n64 66\n64 67\n64 68\n64 69\n65 66\n65 67\n65 68\n65 69\n65 70\n66 67\n66 68\n66 69\n66 70\n66 71\n67 68\n67 69\n67 70\n67 71\n67 72\n68 69\n68 70\n68 71\n68 72\n68 73\n69 70\n69 71\n69 72\n69 73\n69 74\n70 71\n70 72\n70 73\n70 74\n70 75\n71 72\n71 73\n71 74\n71 75\n71 76\n72 73\n72 74\n72 75\n72 76\n72 77\n73 74\n73 75\n73 76\n73 77\n73 78\n74 75\n74 76\n74 77\n74 78\n74 79\n75 76\n75 77\n75 78\n75 79\n75 80\n76 77\n76 78\n76 79\n76 80\n76 81\n77 78\n77 79\n77 80\n77 81\n77 82\n78 79\n78 80\n78 81\n78 82\n78 83\n79 80\n79 81\n79 82\n79 83\n79 84\n80 81\n80 82\n80 83\n80 84\n80 85\n81 82\n81 83\n81 84\n81 85\n81 86\n82 83\n82 84\n82 85\n82 86\n82 87\n83 84\n83 85\n83 86\n83 87\n83 88\n84 85\n84 86\n84 87\n84 88\n84 89\n85 86\n85 87\n85 88\n85 89\n85 90\n86 87\n86 88\n86 89\n86 90\n86 91\n87 88\n87 89\n87 90\n87 91\n87 92\n88 89\n88 90\n88 91\n88 92\n88 93\n89 90\n89 91\n89 92\n89 93\n89 94\n90 91\n90 92\n90 93\n90 94\n90 95\n91 92\n91 93\n91 94\n91 95\n91 96\n92 93\n92 94\n92 95\n92 96\n92 97\n93 94\n93 95\n93 96\n93 97\n93 98\n94 95\n94 96\n94 97\n94 98\n94 99\n95 96\n95 97\n95 98\n95 99\n95 100\n96 97\n96 98\n96 99\n96 100\n96 101\n97 98\n97 99\n97 100\n97 101\n97 102\n98 99\n98 100\n98 101\n98 102\n98 103\n99 100\n99 101\n99 102\n99 103\n99 104\n100 101\n100 102\n100 103\n100 104\n100 105\n101 102\n101 103\n101 104\n101 105\n101 106\n102 103\n102 104\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n2 4\n\"\"\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\".strip()\n    ) == \"\"\"\n2\n3 4\n2 4\n\"\"\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2 3\n3 4\n''') == '2'\nassert solution('''1\n2 3\n2 3\n''') == '3 4'\nassert solution('''1\n1 3\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n20 22\n''') == '2 4'\nassert solution('''1\n1 2\n1 3\n2 3\n3 4\n4 5\n4 5\n''') == '2 4'\nassert solution('''1\n1 2\n2 3\n1 2\n1 2\n''') == '1 3'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '3 4'\nassert solution('''6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n''') == '2 3'\nassert solution('''7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == '3 4'\nassert solution('''10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n''') == '5 6'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\\n\"\nassert solution(\"4\\n2 3\\n1 4\\n1 3\") == \"1\\n1 3\\n1 4\\n\"\nassert solution(\"4\\n2 3\\n3 4\\n4 3\") == \"1\\n3 4\\n2 4\\n\"\nassert solution(\"4\\n1 2\\n3 4\\n4 3\\n4 3\") == \"1\\n3 4\\n2 4\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\\n\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('2 3') == '3 4'\nassert solution('3') == '3 3'\nassert solution('4') == '2 4'\nassert solution('10') == '2 9'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open('data/swap-flights').read().strip()) == '2\\n3 4\\n2 4'\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3\n1 2\n2 3\n3 4\n''') == '2\\n3 4\\n2 4'\n\nassert solution(\n'''\n4\n1 2\n2 3\n3 4\n1 4\n1 3\n''') == '1\\n1 3'\n\nassert solution(\n'''\n5\n1 2\n2 3\n3 4\n4 5\n4 1\n1 3\n3 2\n2 4\n2 5\n1 4\n1 5\n3 2\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n2 5\n1 5\n2 4\n1 3\n1 4\n1 5\n1 2\n2 4\n1 3\n1 4\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == '5'\nassert solution('1 1\\n1 1') == '0'\nassert solution('1 1\\n2 1') == '0'\nassert solution('1 1\\n2 1\\n3 1') == '0'\nassert solution('1 1\\n1 2\\n1 2\\n3 1') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2\n1 3\n2 1\n3 5\n7 2''') == '5'\nassert solution('''1 2\n3 4\n5 5\n1 2\n4 3\n2 4''') == '0'\nassert solution('''4 4\n1 1\n1 2\n1 3\n1 4\n2 4\n3 4\n3 5\n3 6\n3 7\n4 5\n5 6\n6 7\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7''') == '0'\nassert solution('''2 1\n1 1\n1 2\n2 1\n2 2''') == '3'\nassert solution('''1 1\n1 2\n1 3\n2 1\n2 2''') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n\nassert stdin == ''\n\nassert stdin == ''\n\nassert stdin == ''\n\nassert stdin == ''"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"1 10\\n1 10\") == \"0\"\nassert solution(\"5 4\\n2 1\\n3 5\\n7 2\\n1 3\\n5 2\") == \"5\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 3\n2 1\n3 5\n7 2''') == '5'\nassert solution('''3 3\n1 3\n2 1\n3 5\n4 4\n5 5''') == '0'\nassert solution('''3 3\n1 3\n2 1\n3 5\n4 4\n5 5\n6 6\n7 7''') == '0'\nassert solution('''3 3\n1 3\n2 1\n3 5\n4 4\n5 5\n6 6\n7 7''') == '7'\nassert solution('''1 10\n1 9\n1 7\n1 4\n1 2\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '15'\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2 2\n1 3\n2 1\"\"\") == \"5\"\nassert solution(\"\"\"2 2\n1 3\n2 1\n3 5\n7 2\n\"\"\") == \"5\"\nassert solution(\"\"\"5 5\n1 3\n2 1\n3 5\n7 2\n\"\"\") == \"5\"\nassert solution(\"\"\"7 7\n1 3\n2 1\n3 5\n7 2\n\"\"\") == \"0\"\nassert solution(\"\"\"7 7\n1 3\n2 1\n3 5\n7 2\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 3\\n2 1\\n3 5\\n7 2') == '5'\nassert solution('1 2\\n1 3\\n2 1\\n3 5\\n7 2') == '5'\nassert solution('1 2\\n1 3\\n2 1\\n3 5\\n7 2\\n5 2') == '0'\nassert solution('1 2\\n1 3\\n2 1\\n3 5\\n7 2\\n5 2\\n6 3\\n8 4\\n9 4\\n10 1') == '0'\nassert solution('1 2\\n1 3\\n2 1\\n3 5\\n7 2\\n5 2\\n6 3\\n8 4\\n9 4\\n10 1\\n1 10\\n1 9\\n1 8\\n1 7\\n1 6\\n1 5\\n1 4\\n1 3\\n1 2') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 3\n2 1\n3 5\n7 2''') == '5'\nassert solution('''1 2\n1 3\n2 1\n3 5\n7 2''') == '0'\nassert solution('''3 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n154 155\n155 156\n156 157\n157 158\n158 159\n159 160\n160 161\n161 162\n162 163\n163 164\n164 165\n165 166\n166 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n198 199\n199 200\n200 201\n201 202\n202 203\n203 204\n204 205\n205 206\n206 207\n207 208\n208 209\n209 210\n210 211\n211 212\n212 213\n213 214\n214 215\n215 216\n216 217\n217 218\n218 219\n219 220\n220 221\n221 222\n222 223\n223 224\n224 225\n225 226\n226 227\n227 228\n228 229\n229 230\n230 231\n231 232\n232 233\n233 234\n234 235\n235 236\n236 237\n237 238\n237 239\n237 240\n237 241\n237 242\n237 243\n237 244\n237 245\n237 246\n237 247\n237 248\n237 249\n237 250\n237 251\n237 252\n237 253\n237 254\n237 255\n237 256\n237 257\n237 258\n237 259\n237 260\n237 261\n237 262\n237 263\n237 264\n237 265\n237 266\n237 267\n237 268\n237 269\n237 270\n237 271\n237 272\n237 273\n237 274\n237 275\n237 276\n237 277\n237 278\n237 279\n237 280\n237 281\n237 282\n237 283\n237 284\n237 285\n237 286\n237 287\n237 288\n237 289\n237 290\n237 291\n237 292\n237 293\n237 294\n237 295\n237 296\n237 297\n237 298\n237 299\n237 300\n237 301\n237 302\n237 303\n237 304\n237 305\n237 306\n237 307\n237 308\n237 309\n237 310\n237 311\n237 312\n237 313\n237 314\n237 315\n237 316\n237 317\n237 318\n237 319\n237 320\n237 321\n237 322\n237 323\n237 324\n237 325\n237 326\n237 327\n237 328\n237 329\n237 330\n237 331\n237 332\n237 333\n237 334\n237 335\n237 336\n237 337\n237 338\n237 339\n237 340\n237 341\n237 342\n237 343\n237 344\n237 345\n237 346\n237 347\n237 348\n237 349\n237 350\n237 351\n237 352\n237 353\n237 354\n237 355\n237 356\n237 357\n237 358\n237 359\n237 360\n237 361\n237 362\n237 363\n237 364\n237 365\n237 366\n237 367\n237 368\n237 369\n237 370\n237 371\n237 372\n237 373\n237 374\n237 375\n237 376\n237 377\n237 378\n237 379\n237 380\n237 381\n237 382\n237 383\n237 384\n237 385\n237 386\n237 387\n237 388\n237 389\n237 390\n237 391\n237 392\n237 393\n237 394\n237 395\n237 396\n237 397\n237 398\n237 399\n237 400\n237 401\n237 402\n237 403\n237 404\n237 405\n237 406\n237 407\n237 408\n237 409\n237 410\n237 411\n237 412\n237 413\n237 414\n237 415\n237 416\n237 417\n237 418\n237 419\n237 420\n237 421\n237 422\n237 423\n237 424\n237 425\n237 426\n237 427\n237 428\n237 429\n237 430\n237 431\n237 432\n237 433\n237 434\n237 435\n237 436\n237 437\n237 438\n237 439\n237 440\n237 441\n237 442\n237 443\n237 444\n237 445\n237 446\n237 447\n237 448\n237 449\n237 450\n237 451\n237 452\n237 453\n237 454\n237 455\n237 456\n237 457\n237 458\n237 459\n237 460\n237 461\n237 462\n237 463\n237 464\n237 465\n237 466\n237 467\n237"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 3\n2 1''') == '5'\nassert solution('''2 2\n1 3\n2 1\n2 2\n2 2''') == '10'\nassert solution('''2 3\n1 3\n2 1\n3 5\n7 2\n3 2\n3 2\n3 2''') == '18'\nassert solution('''10 1\n7 5\n3 2\n4 2\n2 2\n5 3\n3 2\n5 3\n6 5\n6 3\n3 2''') == '9'\nassert solution('''100 1\n99 5\n98 5\n97 2\n96 1\n95 1\n94 1\n93 1\n92 1\n91 1\n90 1\n89 1\n88 1\n87 1\n86 1\n85 1\n84 1\n83 1\n82 1\n81 1\n80 1\n79 1\n78 1\n77 1\n76 1\n75 1\n74 1\n73 1\n72 1\n71 1\n70 1\n69 1\n68 1\n67 1\n66 1\n65 1\n64 1\n63 1\n62 1\n61 1\n60 1\n59 1\n58 1\n57 1\n56 1\n55 1\n54 1\n53 1\n52 1\n51 1\n50 1\n49 1\n48 1\n47 1\n46 1\n45 1\n44 1\n43 1\n42 1\n41 1\n40 1\n39 1\n38 1\n37 1\n36 1\n35 1\n34 1\n33 1\n32 1\n31 1\n30 1\n29 1\n28 1\n27 1\n26 1\n25 1\n24 1\n23 1\n22 1\n21 1\n20 1\n19 1\n18 1\n17 1\n16 1\n15 1\n14 1\n13 1\n12 1\n11 1\n10 1\n9 1\n8 1\n7 1\n6 1\n5 1\n4 1\n3 1\n2 1\n1 1\n1''') == '9'\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n1 1\n3 1\n3 1\n3 1''') == '5'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n0 1\n0 1\n0 1''') == '2'\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n\n\"\"\"\nSolution:\n\nstdin.split() => [1, 5, 3]\n\"\"\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\n-----My Solution-----\n\"\"\"\nL\u00f6kas Tomatcek likes onions. Unfortunately, his friend has done some evil. Unfortunately, his friend also likes L\u00f6kas Tomatcek, and he thinks that L\u00f6kas Tomatcek loves him.\n\nL\u00f6kas Tomatcek wants to protect his favorite kind of onions, but he must upgrade his fence posts to laser fence posts. His friend suggests that he can do this if he wants to raise as many laser fence posts as possible.\n\nAs laser fences are rather expensive, L\u00f6kas Tomatcek can only afford to upgrade $K$ of the fence posts to laser fence posts. If a set of posts are upgraded, the lasers will protect all the onions lying strictly within the convex hull of the selected fence posts. This may not be all of the onions though. L\u00f6kas Tomatcek wonders which posts he should upgrade if he wants to protect as many of his $N$ onions as possible.\n\nThe original fence has the shape of a convex polygon with $M$ fence posts as vertices, and all the onions lie strictly within the fence.\n\nYour job is to find the maximum number of onions that L\u00f6kas Tomatcek can protect.\n\nInput\nThe first line of input consists of three space-separated integers $3 \\le N \\le 10000$, $3 \\le M \\le 400$ and $3 \\le K \\le 400$. These are the number of onions, the number of old fence posts, and the number of fence posts L\u00f6kas Tomatcek can upgrade.\n\nThen follow $N$ lines with two space-separated integers $0 \\le X_ i, Y_ i \\le 10^9$ each. $(X_ i, Y_ i)$ gives the coordinate of the $i$-th onion.\n\nThen follow $M$ lines with two space-separated integers $0 \\le A_ i, B_ i \\le 10^9$ each. $(A_ i, B_ i)$ gives the coordinate of the $i$-th fence post.\n\nThe fence posts will be given in clockwise order of the old fence. No three fence posts will lie on a line.\n\nOutput\nOutput should be a single integer; the maximum number of onions that L\u00f6kas Tomatcek can protect.\n\nConstraints\n1 \u2264 N \u2264 10^4\n1 \u2264 M \u2264 10^4\n0 \u2264 X_i, Y_i \u2264 10^9\n1 \u2264 A_i, B_i \u2264 10^9\n1 \u2264 K \u2264 10^4\n\nSample Input\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\nSample Output\n2\n\"\"\"\nN,M,K=map(int,input().split())\nonions=[]\nfor _ in range(N):\n    X,Y=map(int,input().split())\n    onions.append((X,Y))\n\nfence=[]\nfor _ in range(M):\n    A,B=map(int,input().split())\n    fence.append((A,B))\n\nfence.sort(key=lambda x: x[0])\n\nonions.sort(key=lambda x: x[1])\n\ni=0\nj=M-1\nlasers=0\nwhile i<=j:\n    if (fence[i][0]>onions[j][1] or fences[j][1]>onions[i][0]) and fences[i][1]<=onions[j][1]:\n        lasers+=1\n        j-=1\n    else:\n        i+=1\n\nprint(lasers)\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n1 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1 2\n2 2\n1 4\n0 0\n0 3\n1 4\n3 3\n3 0\n1"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == 2\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n1 1''') == 1\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n0 1\n0 2\n0 3''') == 2\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n1 1\n1 2\n1 3''') == 2\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n1 1\n2 2\n1 3''') == 1\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"2 1\\n1 1\\n2 1\\n3 1\\n3 1\\n3 1\\n4 1\\n4 1\") == 2\nassert solution(\"3 1\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 3\\n3 0\\n0 0\\n3 0\\n0 3\\n3 3\") == 1\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == '2'\nassert solution('3 4 2\\n0 0\\n0 1\\n1 1\\n1 2\\n2 3\\n3 4') == '4'\nassert solution('3 2 1\\n0 0\\n0 1\\n1 1\\n1 2\\n2 3') == '2'\nassert solution('1 1\\n1 2\\n2 3') == '2'\nassert solution('2 2\\n1 1') == '0'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'GHOST'\nassert solution('''4 3\n3 C\n2 C\n1 C\n0 0\n''') == 'SAFE'\nassert solution('''4 3\n3 C\n2 C\n1 C\n0 0\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1 C\n1"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n3 C\n2 C\n1 C''') == 'GHOST'\nassert solution('''4 3\n3 C\n2 C\n1 C''') == 'SAFE'\nassert solution('''4 3\n4 C\n3 C\n2 C\n1 C''') == 'GHOST'\nassert solution('''4 3\n3 C\n2 C\n1 C''') == 'SAFE'\nassert solution('''4 3\n3 C\n2 C\n1 C''') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"GHOST\"\nassert solution(\"1 2 3 4\") == \"SAFE\"\nassert solution(\"1 2 3\") == \"SAFE\"\nassert solution(\"2 3 4 1\") == \"SAFE\"\n\"\"\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"GHOST\"\n'''\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4\\n3 C\\n2 C\\n1 C\\n0 C\\n3 C') == 'SAFE'\nassert solution('5 4\\n3 C\\n2 C\\n1 C\\n0 C\\n4 C') == 'GHOST'\nassert solution('5 4\\n3 C\\n2 C\\n1 C\\n0 C\\n3 D') == 'GHOST'\nassert solution('5 4\\n3 C\\n2 C\\n1 C\\n0 C\\n4 D') == 'GHOST'\nassert solution('5 4\\n3 C\\n2 C\\n1 C\\n0 C\\n2 D') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"GHOST\"\nassert solution(stdin) == \"SAFE\"\nassert solution(stdin) == \"GHOST\"\nassert solution(stdin) == \"SAFE\"\nassert solution(stdin) == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('\\n'.join([\n    '3',\n    'C',\n    '2',\n    'C',\n    '1',\n    'C',\n])) == 'GHOST'\nassert solution('\\n'.join([\n    '2',\n    'C',\n    '1',\n    'C',\n])) == 'GHOST'\nassert solution('\\n'.join([\n    '1',\n    'C',\n    '2',\n    'C',\n])) == 'SAFE'\nassert solution('\\n'.join([\n    '1',\n    'C',\n    '2',\n    'C',\n    '3',\n    'C',\n    '4',\n    'C',\n    '5',\n    'C',\n    '6',\n    'C',\n    '7',\n    'C',\n    '8',\n    'C',\n    '9',\n    'C',\n    '10',\n    'C',\n    '11',\n    'C',\n    '12',\n    'C',\n    '13',\n    'C',\n    '14',\n    'C',\n    '15',\n    'C',\n    '16',\n    'C',\n    '17',\n    'C',\n    '18',\n    'C',\n    '19',\n    'C',\n    '20',\n    'C',\n    '21',\n    'C',\n    '22',\n    'C',\n    '23',\n    'C',\n    '24',\n    'C',\n    '25',\n    'C',\n    '26',\n    'C',\n    '27',\n    'C',\n    '28',\n    'C',\n    '29',\n    'C',\n    '30',\n    'C',\n    '31',\n    'C',\n    '32',\n    'C',\n    '33',\n    'C',\n    '34',\n    'C',\n    '35',\n    'C',\n    '36',\n    'C',\n    '37',\n    'C',\n    '38',\n    'C',\n    '39',\n    'C',\n    '40',\n    'C',\n    '41',\n    'C',\n    '42',\n    'C',\n    '43',\n    'C',\n    '44',\n    'C',\n    '45',\n    'C',\n    '46',\n    'C',\n    '47',\n    'C',\n    '48',\n    'C',\n    '49',\n    'C',\n    '50',\n    'C',\n    '51',\n    'C',\n    '52',\n    'C',\n    '53',\n    'C',\n    '54',\n    'C',\n    '55',\n    'C',\n    '56',\n    'C',\n    '57',\n    'C',\n    '58',\n    'C',\n    '59',\n    'C',\n    '60',\n    'C',\n    '61',\n    'C',\n    '62',\n    'C',\n    '63',\n    'C',\n    '64',\n    'C',\n    '65',\n    'C',\n    '66',\n    'C',\n    '67',\n    'C',\n    '68',\n    'C',\n    '69',\n    'C',\n    '70',\n    'C',\n    '71',\n    'C',\n    '72',\n    'C',\n    '73',\n    'C',\n    '74',\n    'C',\n    '75',\n    'C',\n    '76',\n    'C',\n    '77',\n    'C',\n    '78',\n    'C',\n    '79',\n    'C',\n    '80',\n    'C',\n    '81',\n    'C',\n    '82',\n    'C',\n    '83',\n    'C',\n    '84',\n    'C',\n    '85',\n    'C',\n    '86',\n    'C',\n    '87',\n    'C',\n    '88',\n    'C',\n    '89',\n    'C',\n    '90',\n    'C',\n    '91',\n    'C',\n    '92',\n    'C',\n    '93',\n    'C',\n    '94',\n    'C',\n    '95',\n    'C',\n    '96',\n    'C',\n    '97',\n    'C',\n    '98',\n    'C',\n    '99',\n    'C',\n    '100',\n    'C',\n    '101',\n    'C',\n    '102',\n    'C',\n    '103',\n    'C',\n    '104',\n    'C',\n    '105',\n    'C',\n    '106',\n    'C',\n    '107',\n    'C',\n    '108',\n    'C',\n    '109',\n    'C',\n    '110',\n    'C',\n    '111',\n    'C',\n    '112',\n    'C',\n    '113',\n    'C',\n    '114',\n    'C',\n    '115',\n    'C',\n    '116',\n    'C',\n    '117',\n    'C',\n    '118',\n    'C',\n    '119',\n    'C',\n    '120',\n    'C',\n    '121',\n    'C',\n    '122',\n    'C',\n    '123',\n    'C',\n    '124',\n    'C',\n    '125',\n    'C',\n    '126',\n    'C',\n    '127',\n    'C',\n    '128',\n    'C',\n    '129',\n    'C',\n    '130',\n    'C',\n    '131',\n    'C',\n    '132',\n    'C',\n    '133',\n    'C',\n    '134',\n    'C',\n    '135',\n    'C',\n    '136',\n    'C',\n    '137',\n    'C',\n    '138',\n    'C',\n    '139',\n    'C',\n    '140',\n    'C',\n    '141',\n    'C',\n    '142',\n    'C',\n    '143',\n    'C',\n    '144',\n    'C',\n    '145',\n    'C',\n    '146',\n    'C',\n    '147',\n    'C',\n    '148',\n    'C',\n    '149',\n    'C',\n    '150',\n    'C',\n    '151',\n    'C',\n    '152',\n    'C',\n    '153',\n    'C',\n    '154',\n    'C',\n    '155',\n    'C',"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n3 C\n2 C\n1 C''') == 'GHOST'\nassert solution('''4 3\n3 C\n2 C\n1 C\n3 C''') == 'GHOST'\nassert solution('''4 3\n3 C\n3 C\n2 C\n1 C''') == 'SAFE'\nassert solution('''4 3\n3 C\n2 C\n3 C\n3 C''') == 'SAFE'\nassert solution('''6 4\n1 1\n2 2\n3 3\n4 4\n5 5\n4 4\nSample Output:\nSAFE\n''') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n3 C\n2 C\n1 C''') == 'GHOST'\nassert solution('''4 3\n3 C\n2 C\n1 C''') == 'SAFE'\nassert solution('''5 2\n1 1\n2 3\n3 4\n4 1''') == 'GHOST'\nassert solution('''5 2\n1 1\n2 3\n3 4\n4 1''') == 'SAFE'\nassert solution('''1 3\n1 1\n2 3\n3 4\n4 1''') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"GHOST\"\n\nassert solution(stdin) == \"SAFE\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0.00 2.00\") == \"2\"\nassert solution(\"0.00 2.00 0.01\") == \"0.01\"\nassert solution(\"0.00 2.00 0.01 0.02\") == \"2\"\nassert solution(\"0.00 2.00 0.01 0.02 0.03\") == \"0.03\"\nassert solution(\"0.00 2.00 0.01 0.02 0.03 0.04\") == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n0.00 2.00\n''') == '2'\n'''\n'''\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2 3\n0.00 2.00\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n5 5\n0.00 1.00 2.00 3.00 4.00 5.00\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n3 1\n0.00 1.00 2.00\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n1 1\n0.00 1.00\n\"\"\") == \"no fika\"\nassert solution(\n\"\"\"\n1 1\n0.00 1.00\n\"\"\") == \"no fika\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0.00 2.00\") == \"2\"\nassert solution(\"1.00 2.00\") == \"2\"\nassert solution(\"0.00 3.00\") == \"1\"\nassert solution(\"1.00 3.00\") == \"1\"\nassert solution(\"0.00 4.00\") == \"0.5\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0.00 2.00\") == \"2\"\nassert solution(\"0.00 0.00\") == \"no fika\"\nassert solution(\"0.00 0.01\") == \"no fika\"\nassert solution(\"0.00 0.02\") == \"no fika\"\nassert solution(\"0.00 0.03\") == \"no fika\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n0.00 2.00''') == '2'\nassert solution('''1 2\n0.01 0.02\nSample Output:\n2\nassert solution('''1 1\n0.01 0.01\nSample Output:\n0.1''') == '0.1'\nassert solution('''1 1\n0.02 0.01\nSample Output:\n0.2''') == '0.2'\nassert solution('''1 1\n0.03 0.01\nSample Output:\n0.3''') == '0.3'\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0.00 2.00''') == 2\nassert solution('''2 3\n0.00 2.00\n1.00 1.00\n2.00 0.00\n0.00 1.00''') == 1\n'''\n1.00 2.00\n0.00 2.00\n0.00 1.00\n1.00 0.00\n0.00 1.00\n1.00 2.00\n2.00 1.00\n2.00 0.00\n2.00 1.00\n2.00 2.00\n2.00 3.00\n2.00 4.00\n2.00 5.00\n2.00 6.00\n2.00 7.00\n2.00 8.00\n2.00 9.00\n2.00 10.00\n2.00 11.00\n2.00 12.00\n2.00 13.00\n2.00 14.00\n2.00 15.00\n2.00 16.00\n2.00 17.00\n2.00 18.00\n2.00 19.00\n2.00 20.00\n2.00 21.00\n2.00 22.00\n2.00 23.00\n2.00 24.00\n2.00 25.00\n2.00 26.00\n2.00 27.00\n2.00 28.00\n2.00 29.00\n2.00 30.00\n2.00 31.00\n2.00 32.00\n2.00 33.00\n2.00 34.00\n2.00 35.00\n2.00 36.00\n2.00 37.00\n2.00 38.00\n2.00 39.00\n2.00 40.00\n2.00 41.00\n2.00 42.00\n2.00 43.00\n2.00 44.00\n2.00 45.00\n2.00 46.00\n2.00 47.00\n2.00 48.00\n2.00 49.00\n2.00 50.00\n2.00 51.00\n2.00 52.00\n2.00 53.00\n2.00 54.00\n2.00 55.00\n2.00 56.00\n2.00 57.00\n2.00 58.00\n2.00 59.00\n2.00 60.00\n2.00 61.00\n2.00 62.00\n2.00 63.00\n2.00 64.00\n2.00 65.00\n2.00 66.00\n2.00 67.00\n2.00 68.00\n2.00 69.00\n2.00 70.00\n2.00 71.00\n2.00 72.00\n2.00 73.00\n2.00 74.00\n2.00 75.00\n2.00 76.00\n2.00 77.00\n2.00 78.00\n2.00 79.00\n2.00 80.00\n2.00 81.00\n2.00 82.00\n2.00 83.00\n2.00 84.00\n2.00 85.00\n2.00 86.00\n2.00 87.00\n2.00 88.00\n2.00 89.00\n2.00 90.00\n2.00 91.00\n2.00 92.00\n2.00 93.00\n2.00 94.00\n2.00 95.00\n2.00 96.00\n2.00 97.00\n2.00 98.00\n2.00 99.00\n2.00 100.00\n2.00 101.00\n2.00 102.00\n2.00 103.00\n2.00 104.00\n2.00 105.00\n2.00 106.00\n2.00 107.00\n2.00 108.00\n2.00 109.00\n2.00 110.00\n2.00 111.00\n2.00 112.00\n2.00 113.00\n2.00 114.00\n2.00 115.00\n2.00 116.00\n2.00 117.00\n2.00 118.00\n2.00 119.00\n2.00 120.00\n2.00 121.00\n2.00 122.00\n2.00 123.00\n2.00 124.00\n2.00 125.00\n2.00 126.00\n2.00 127.00\n2.00 128.00\n2.00 129.00\n2.00 130.00\n2.00 131.00\n2.00 132.00\n2.00 133.00\n2.00 134.00\n2.00 135.00\n2.00 136.00\n2.00 137.00\n2.00 138.00\n2.00 139.00\n2.00 140.00\n2.00 141.00\n2.00 142.00\n2.00 143.00\n2.00 144.00\n2.00 145.00\n2.00 146.00\n2.00 147.00\n2.00 148.00\n2.00 149.00\n2.00 150.00\n2.00 151.00\n2.00 152.00\n2.00 153.00\n2.00 154.00\n2.00 155.00\n2.00 156.00\n2.00 157.00\n2.00 158.00\n2.00 159.00\n2.00 160.00\n2.00 161.00\n2.00 162.00\n2.00 163.00\n2.00 164.00\n2.00 165.00\n2.00 166.00\n2.00 167.00\n2.00 168.00\n2.00 169.00\n2.00 170.00\n2.00 171.00\n2.00 172.00\n2.00 173.00\n2.00 174.00\n2.00 175.00\n2.00 176.00\n2.00 177.00\n2.00 178.00\n2.00 179.00\n2.00 180.00\n2.00 181.00\n2.00 182.00\n2.00 183.00\n2.00 184.00\n2.00 185.00\n2.00 186.00\n2.00 187.00\n2.00 188.00\n2.00 189.00\n2.00 190.00\n2.00 191.00\n2.00 192.00\n2.00 193.00\n2.00 194.00\n2.00 195.00\n2.00 196.00\n2.00 197.00\n2.00 198.00\n2.00 199.00\n2.00 200.00\n2.00 201.00"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0.00 2.00\") == 2\nassert solution(\"1.00 3.00\") == 3\nassert solution(\"2.00 4.00\") == 4\nassert solution(\"1.00 5.00\") == 4\nassert solution(\"0.00 1.00\") == 1\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('0.2 0.3 0.4') == '3'\nassert solution('0.1 0.1 0.1') == '0.1'\n"
    },
    {
        "number": 3344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n0.00 2.00\\n') == '2'\nassert solution('1 1\\n0.0 0.0\\n') == '1'\nassert solution('2 10\\n0.0 0.0\\n0.0 0.0\\n') == '1'\nassert solution('2 10\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n') == '1'\nassert solution('2 10\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n') == '1'\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n2 0\n10 0\n2 30 0\n15 0\n''') == '10'\nassert solution('''0 0\n0 0\n5 0\n2 30 0\n15 0\n''') == '15'\n'''\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n10 0\n2\n30 0\n15 0''') == '10'\nassert solution('''0 0\n10 0\n2\n30 0\n15 0\n2\n5 0\n6 0\n3\n1 0\n9 0\n8 0\n7 0\n2\n1 0''') == '5'\nassert solution('''0 0\n10 0\n2\n30 0\n15 0\n2\n5 0\n6 0\n3\n1 0\n9 0\n8 0\n7 0\n2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0''') == '0'\nassert solution('''0 0\n10 0\n2\n30 0\n15 0\n2\n5 0\n6 0\n3\n1 0\n9 0\n8 0\n7 0\n2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0''') == '0'\nassert solution('''0 0\n10 0\n2\n30 0\n15 0\n2\n5 0\n6 0\n3\n1 0\n9 0\n8 0\n7 0\n2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"0 0\n10 0\n2\n30 0\n15 0\"\"\") == \"10\"\n\nassert solution(\n    \"\"\"0 0\n10 0\n2\n30 0\n15 0\n1 1\n5 5\n1 1\n10 10\"\"\") == \"4.00000\"\n\nassert solution(\n    \"\"\"0 0\n10 0\n2\n30 0\n15 0\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\"\"\") == \"5.00000\"\n\nassert solution(\n    \"\"\"0 0\n10 0\n2\n30 0\n15 0\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1 1\n5 5\n1 1\n10 10\n1"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n2 0\n10 0\n2 30 0\n15 0\n''') == '10'\nassert solution('''0 0\n2 0\n3 0\n2 3 0\n3 2 0\n5 0\n2 2 0\n3 3 0\n4 1 0\n4 2 0\n5 3 0\n6 1 0\n6 2 0\n7 1 0\n7 2 0\n8 2 0\n9 1 0\n9 2 0\n10 0\n2 30 0\n15 0\n''') == '1'\nassert solution('''0 0\n1 0\n1 1 0\n1 1 1 0\n2 1 0\n2 1 1 0\n2 1 1 1 0\n3 1 1 1 1 0\n3 1 1 1 1 1 0\n4 1 1 1 1 1 1 1 0\n4 1 1 1 1 1 1 1 1 1 0\n5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0\n
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n0 0\n0 0\n1 1\n0 0\n1 1\n1 1\n2 2\n0 0\n2 2\n1 2\n1 2\n2 2\n1 2\n3 3\n1 1\n2 2\n1 2\n2 2\n2 2\n2 2\n2 2\n2 2\n1 2\n1 2\n2 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 10\n'''\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0\n10 0\n2\n30 0\n15 0''') == '10'\n\nassert solution('''0 0\n5 0\n2\n10 0\n15 0\n4\n15 0\n1\n2\n4\n8\n14\n9\n12\n11\n5\n0 0\n4\n10 0\n5 0\n15 0\n3\n7 0\n3\n6 0\n2\n15 0\n2\n9 0\n14\n5 0\n6 0\n11\n9 0\n12\n13\n10 0\n11\n12\n14\n8\n15 0\n5 0\n14 0\n4\n13 0\n11\n8\n7 0\n13\n15 0\n6 0\n11\n8\n10 0\n8\n15 0\n5 0\n7 0\n9 0\n10 0\n8\n10 0\n15 0\n5 0\n10 0\n7 0\n6 0\n15 0\n6 0\n7 0\n8 0\n13 0\n6 0\n8 0\n7 0\n14 0\n6 0\n14 0\n8 0\n10 0\n14 0\n8 0\n12 0\n6 0\n12 0\n15 0\n12 0\n10 0\n15 0\n10 0\n14 0\n8 0\n10 0\n15 0\n11 0\n12 0\n15 0\n13 0\n13 0\n15 0\n9 0\n15 0\n10 0\n8 0\n15 0\n10 0\n12 0\n15 0\n13 0\n12 0\n11 0\n15 0\n10 0\n15 0\n12 0\n13 0\n10 0\n14 0\n15 0\n13 0\n10 0\n15 0\n11 0\n15 0\n8 0\n15 0\n13 0\n10 0\n10 0\n14 0\n15 0\n10 0\n15 0\n11 0\n15 0\n15 0\n14 0\n15 0\n10 0\n15 0\n10 0\n15 0\n15 0\n10 0\n15 0\n12 0\n15 0\n12 0\n10 0\n15 0\n10 0\n15 0\n11 0\n15 0\n15 0\n9 0\n15 0\n15 0\n10 0\n15 0\n15 0\n12 0\n15 0\n15 0\n10 0\n15 0\n15 0\n10 0\n15 0\n15 0\n10 0\n15 0\n15 0\n11 0\n15 0\n15 0\n12 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n12 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n10 0\n15 0\n10 0\n14 0\n15 0\n14 0\n10 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n14 0\n15 0\n10 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n15 0\n11 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n10 0\n15 0\n10 0\n15 0\n15 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n15 0\n10 0\n15 0\n10 0\n15 0\n15 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n10 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0\n15 0"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0\n10 0\n2\n30 0\n15 0''') == '10'\nassert solution('''0 0\n10 0\n0 0\n2\n30 0\n15 0''') == '10'\nassert solution('''1 1\n10 1\n2\n3 2\n5 5\n0 0\n2\n4 2''') == '1'\nassert solution('''1 1\n10 1\n2\n3 2\n5 5\n0 0\n2\n5 1''') == '1'\nassert solution('''1 1\n10 1\n2\n3 2\n5 5\n0 0\n2\n3 2\n5 3''') == '1'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 2') == '0'\nassert solution('8 3') == '1'\nassert solution('8 3') == '1'\nassert solution('8 3') == '1'\nassert solution('8 3') == '1'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == '0'\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\nE 17 4\") == '0'\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\") == '0'\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\") == '1'\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\") == '2'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''W 10 0\nW 10 3\nE 17 4''') == '0'\nassert solution('''W 10 0\nW 10 3\nE 17 4\nW 10 9\nE 17 4\nW 10 9\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nW 10 9\nE 17 4\nW 10 9\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nW 10 9\nE 17 4\nW 10 9\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nW 10 9\nE 17 4\nW 10 9\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nW 10 9\nE 17 4\nW 10 9\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nW 10 9\nE 17 4\nW 10 9\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nW 10 9\nE 17 4\nW 10 9\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17 4\nE 17"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0'\nassert solution('4 2\\nW 1 1\\nE 2 2\\nW 2 1') == '0'\nassert solution('5 3\\nW 1 1\\nW 3 1\\nE 3 2\\nW 4 1\\nW 4 2') == '1'\nassert solution('3 3\\nW 1 1\\nE 2 2\\nW 2 1') == '1'\nassert solution('4 2\\nW 1 1\\nE 2 2\\nW 2 1') == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test_1.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"test_2.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"test_3.txt\", \"r\").read()) == \"4\"\nassert solution(open(\"test_4.txt\", \"r\").read()) == \"5\"\nassert solution(open(\"test_5.txt\", \"r\").read()) == \"6\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == ''\n\"\"\"\n\nimport sys\n\nn, t = map(int, sys.stdin.readline().strip().split())\n\nl1 = []\nl2 = []\nfor _ in range(n):\n    a, b = map(int, sys.stdin.readline().strip().split())\n    l1.append(a)\n    l2.append(b)\n\nprint(sum(i - j for i, j in zip(l1, l2)) % t)"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nE 21 4\\nW 19 4\\nW 21 4\\nE 19 4\\nW 19 4\\nE 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\") == \"1\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nE 21 4\\nW 19 4\\nW 21 4\\nE 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\nE 19 4\\nW 19 4\\nW 19 4\\"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n10 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n7 8\nW 5 10\nE 1 2\nE 3 5\nE 4 7\nW 2 10\nE 1 10\nE 1 6\n\"\"\"\n) == \"4\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0'\nassert stdin == \"\"\"\\\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n8 3\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\nassert solution('''\n8 3\nW 10 0\nW 10 3\nE 17 4\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\nassert solution('''\n8 3\nW 10 0\nW 10 3\nE 17 4\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\nassert solution('''\n8 3\nW 10 0\nW 10 3\nE 17 4\nW 10 0\nW 10 3\nE 17 4\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\nassert solution('''\n8 3\nW 10 0\nW 10 3\nE 17 4\nW 10 0\nW 10 3\nE 17 4\nW 10 0\nW 10 3\nE 17 4\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 8\n5 6\n3 4\n5 13\n6 10''') == '3'\n\nassert solution('''1\n10\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200''') == '4'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 8\n5 6\n3 4\n5 13\n6 10''') == '3'\nassert solution('''3\n3 4\n2 3\n5 6\n9 8''') == '2'\nassert solution('''9\n3 4\n2 3\n5 6\n9 8\n7 7\n6 5\n2 4\n5 9\n3 8''') == '4'\nassert solution('''15\n3 4\n2 3\n5 6\n9 8\n7 7\n6 5\n2 4\n5 9\n3 8\n2 1\n4 2\n2 4\n5 6\n9 8\n7 7\n6 5\n2 4\n5 9\n3 8\n2 1\n4 2\n2 4\n5 6\n9 8''') == '8'\nassert solution('''10\n1 2\n1 1\n2 2\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1''') == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n') == '3'\nassert solution('6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\\n200 201\\n201 202\\n202 203\\n203 204\\n204 205\\n205 206\\n206 207\\n207 208\\n208 209\\n209 210\\n210 211\\n211 212\\n212 213\\n213 214\\n214 215\\n215 216\\n216 217\\n217 218\\n218 219\\n219 220\\n220 221\\n221 222\\n222 223\\n223 224\\n224 225\\n225 226\\n226 227\\n227 228\\n228 229\\n229 230\\n230 231\\n231 232\\n232 233\\n233 234\\n234 235\\n235 236\\n236 237\\n237 238\\n238 239\\n239 240\\n240 241\\n241 242\\n242 243\\n243 244\\n244 245\\n245 246\\n246 247\\n247 248\\n248 249\\n249 250\\n250 251\\n251 252\\n252 253\\n253 254\\n254 255\\n') == '111'\nassert solution('6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5 8\n5 6\n3 4\n5 13\n6 10''') == '3'\nassert solution('''3\n2 4\n5 4\n1 3''') == '2'\nassert solution('''2\n5 10\n8 5\n6 8\n1 3''') == '3'\nassert solution('''2\n2 10\n8 5\n8 6\n1 3''') == '1'\nassert solution('''1\n2 10\n8 5\n8 6\n1 3''') == '1'\n"
    },
    {
        "number": 3347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 1\\n1 3\\n3 1\") == \"2\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1\\n1 1\") == \"1\"\nassert solution(\"5\\n2 1\\n3 1\\n4 1\\n5 1\") == \"1\"\nassert solution(\"5\\n2 1\\n3 1\\n4 1\\n5 2\") == \"2\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n10 3 3''') == '''impossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n10 3 3''') == 'impossible'\nassert solution('''5 4\n2 3 1''') == 'impossible'\nassert solution('''5 4\n3 2 1''') == 'impossible'\nassert solution('''5 4\n3 1 1''') == 'impossible'\nassert solution('''5 4\n4 1 1''') == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"impossible\"\nassert solution(\"4 4\") == \"impossible\"\nassert solution(\"3 4\") == \"impossible\"\nassert solution(\"4 2\") == \"impossible\"\nassert solution(\"4 1\") == \"impossible\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == 'impossible'\n\"\"\"\n\n\"\"\"\n- There is no known algorithm to find a good arrangement of bonbons (algorithm does not exist in the problem statement).\n- If the number of R and C are even, then there is no possible arrangement.\n- To find a good arrangement, we place the bonbons on the matrix in a manner that makes the number of A's equal to the number of B's, and so on.\n- This process is called knapsack-like algorithm.\n- We can solve this problem using brute force.\n- The brute force solution is to try all possible arrangements.\n- A good algorithm is better than brute force, but we cannot do better than this solution, because it is based on the fact that the solution can be improved by better algorithms, but in this case, such a better algorithm would be probably to use a hash table to store all the arrangements and their cost.\n- However, in this problem, we are dealing with the problem of a set of 5 items (A, B, C, D, E). Therefore, we do not know the order of the permutations (ie, A, B, C, D, E, A, B, C, D, E, A, B, C, D, E,...). Therefore, we cannot guarantee the order of the permutations.\n- The brute force solution takes O(2^5) time. However, we can improve the solution by a little bit.\n- Let\u2019s think about it as a game, and consider all 5 items and their positions (A, B, C, D, E). We try to place the items in a way that would make A\u2019s equal to B\u2019s, C\u2019s equal to D\u2019s, and so on. So, we consider all 5 positions of the items, and try to find one that makes A\u2019s equal to B\u2019s, C\u2019s equal to D\u2019s, and so on.\n- For each position of the items, we try to find a way to make all the values equal. If all values are equal, we return the arrangement.\n- Otherwise, we recursively try to put the items in the remaining positions.\n- Since we are trying to find a good arrangement for the remaining items, we cannot simply do this by recursion.\n- We do not need to re-arrange the items in the remaining positions (we already did this before). Instead, we only try to rearrange the remaining items, which would not lead to a good arrangement.\n- The above algorithm would be O(2^5), but we can reduce it to O(2^4) by making a change to the above algorithm.\n- We can also use a dictionary to store the arrangements and their cost.\n- When we see an arrangement, we look up its cost and if the cost is less than what we have stored, we update the arrangement and its cost.\n- To check whether an arrangement is good, we can compute the number of A\u2019s and B\u2019s in the arrangement and compare it to the number of A\u2019s in the original arrangement.\n- For each arrangement, we store the number of A\u2019s and B\u2019s. If the number of A\u2019s is more than the number of B\u2019s, then it is not a good arrangement.\n- Since we are going to try all the possible arrangements, we can only store the best one. We also need to keep track of the arrangements with the lowest cost.\n- To decide whether an arrangement is good or not, we look at the cost, and compare it to the cost of the lowest cost arrangement.\n- If the cost is equal, it means that there is no improvement in the cost.\n- If the cost is less, then we update the cost of the lowest cost arrangement.\n- The time complexity of this algorithm is O(2^4).\n\"\"\"\n\nR, C = map(int, input().split())\na, b, c = map(int, input().split())\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n10 3 3\n''') == 'impossible'\nassert solution('''10 10\n4 3 4\n''') == 'impossible'\nassert solution('''5 3\n3 4 4\n''') == 'impossible'\nassert solution('''5 4\n3 4 4\n''') == 'impossible'\nassert solution('''2 4\n2 2 2\n''') == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 4\n10 3 3'''\n) == 'impossible'\n\nassert solution(\n'''1 2\n2 2 2'''\n) == 'AB AC AD BA BC BD CD'\nassert solution(\n'''4 3\n2 1 1\n1 2 1'''\n) == 'AB AC AD BA BC BD CD'\nassert solution(\n'''3 3\n1 2 1\n1 1 1'''\n) == 'AB AC AD BA BC BD CD'\nassert solution(\n'''5 4\n1 2 1\n1 1 1\n2 1 1\n1 3 1\n2 2 2'''\n) == 'AB AC AD BA BC BD CD'\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n10 3 3''') == 'impossible'\nassert solution('''4 4\n10 2 3\nSample Output:\nimpossible\n''') == 'impossible'\nassert solution('''4 4\n10 4 4\nSample Output:\nimpossible\n''') == 'impossible'\nassert solution('''4 4\n10 1 2\nSample Output:\nimpossible\n''') == 'impossible'\nassert solution('''4 4\n10 3 3\nSample Output:\naabbb\naaabbb\nabbaba\nabbbab\nbbaaa\nbaaaa\naababa\nbaaaab\n''') == '''aabbb\naaabbb\nabbaba\nabbbab\nbbaaa\nbaaaa\naababa\nbaaaab'''\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('PROGRAMMING LANGUAGE IS AWESOME') == 'PROGRAMMING LANGUAGE IS AWESOME'\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"11\\n\"\n\"BETWEEN\\n\"\n\"SUBTLE\\n\"\n\"SHADING\\n\"\n\"AND\\n\"\n\"THE\\n\"\n\"ABSENCE\\n\"\n\"OF\\n\"\n\"LIGHT\\n\"\n\"LIES\\n\"\n\"NUANCE\\n\"\n\"IQLUSION\\n\"\n\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"1\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\"ALA\\n\"\n\""
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''2\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ''') == 'A B C D E F G H I J K L M N O P Q R S T U V W X Y Z'\nprint(solution(input()))''')\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''4\nDIAGNOSE\nNOISE\nINTUBATION\nBLACKMAIL\nSample Input:\n3\nDIAGNOSE\nNOISE\nINTUBATION\nSample Output:\nDIAGNOSE NOISE INTUBATION\n''') == 'DIAGNOSE NOISE INTUBATION'\nassert solution('''10\nADVANCED\nSCANNER\nFOR\nALIEN\nHACK\n''') == 'ADVANCED SCANNER FOR ALIEN HACK'\nassert solution('''6\nGLASS\nGLASSES\nGLASSED\nGLASSESES\nGLASSING\nGLASSESING\nSample Input:\n10\nWATER\nMUTATION\nBETWEEN\nMAY\n''') == 'WATER BETWEEN MAY'\nassert solution('''6\nGAT\nSAND\nROCK\nWATER\nMUTATION\nBETWEEN\nMAY\n''') == 'GAT SAND ROCK WATER BETWEEN MAY'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n'''\nassert solution(''''1\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\nAAA\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('A') == 'A'\nassert solution('B') == 'AB'\nassert solution('C') == 'ABC'\nassert solution('ABC') == 'ABC'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''7\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\n''') == 'SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''1\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\n''') == 'SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''7\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\n''') == 'SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n'''''') == 'SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''13\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\n''') == 'THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('Kryptos') == 'Kryptos'\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n        'LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n        'LIES THE NUANCE OF IQLUSION'\n        'LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"12\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\nassert solution(\"rachelhellabracadabra\") == \"0\"\nassert solution(\"fjxxzxxhxxhxhxxhxxhxhxxhxxhxxhxxhxxhxxhxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxxhxx"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('abrahellehhelleh') == 12\nassert solution('abrahelleh') == 0\nassert solution('abrahellehll') == 0\nassert solution('rachelhellabracadabra') == 0\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''abrahellehhelleh''') == 12\nassert solution('''rachelhellabracadabra''') == 0\nassert solution('''cvcvvxxzvxzcvxxvxzvxv''') == 0\nassert solution('''bbqllqbqqllqbqqllqbqqll''') == 0\nassert solution('''cvlccccccvlccccccvlcccccc''') == 0\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample) == 12\nassert solution(t) == 0\n\"\"\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abrahellehhelleh') == 12\nassert solution('rachelhellabracadabra') == 0\nassert solution('abbacadabra') == 24\nassert solution('abracadabra') == 0\nassert solution('abracadabra') == 0\n\"\"\"\n\nimport re\n\nre_word = re.compile(r\"\\w*(abra|helleh|abracadabra|rachelhellabracadabra|abbacadabra|rachelhellabracadabra)\")\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\nassert solution(\"rachelhellabracadabra\") == \"0\"\nassert solution(\"abracadabra\") == \"0\"\nassert solution(\"abrakadabra\") == \"0\"\nassert solution(\"abra\") == \"0\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abrahellehhelleh') == 12\n\"\"\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\n\nassert solution('''70\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '140'\n\nassert solution('''52\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '140'\n\nassert solution('''50\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\n\nassert solution(\"3\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\"\n\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"340\"\n\nassert solution(\"3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\"\n\nassert solution(\"3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\""
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '70'\n\nstdin = '''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(sample0) == \"7\"\nassert solution(sample1) == \"11\"\nassert solution(sample2) == \"21\"\nassert solution(sample3) == \"22\"\nassert solution(sample4) == \"24\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"70\"\n\"\"\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == \"70\"\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == \"70\"\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == \"70\"\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == \"70\"\nassert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample_input) == 70\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '70'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '70'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '70'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '70'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '70'\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n8'\n\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n8'\n\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n8'\n\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n8'\n\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n8'"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n0 1\n0 4\n1 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4\n0 1\n0 4"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '7'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '8'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '7'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '8'\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7\\n8\\n'\n\n'''\n"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n8'\n'''"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1"
    },
    {
        "number": 3352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 2 3 4\\n1 2 3 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10'\nassert solution('5 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n0 1\\n0 2\\n1 2\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\") == \"6\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"3 1 1\\n0 1\\n1 -1\\n3 -1\") == \"1\"\nassert solution(\"3 1 1\\n0 1\\n1 -1\\n3 -1\\n0 2\\n1 2\\n2 3\\n3 -1\\n0 1\\n1 -1\\n3 -1\") == \"4\"\nassert solution(\"3 1 1\\n0 1\\n1 -1\\n3 -1\\n0 2\\n1 2\\n2 3\\n3 -1\\n0 1\\n1 -1\\n3 -1\\n0 2\\n1 2\\n2 3\\n3 -1\") == \"2\"\nassert solution(\"3 1 1\\n0 1\\n1 -1\\n3 -1\\n0 2\\n1 2\\n2 3\\n3 -1\\n0 1\\n1 -1\\n3 -1\\n0 2\\n1 2\\n2 3\\n3 -1\\n0 1\\n1 -1\\n3 -1\\n0 2\\n1 2\\n2 3\\n3 -1\\n0 1\\n1 -1\\n3 -1\\n0 2\\n1 2\\n2 3\\n3 -1\\n0 1\\n1 -1\\n3 -1\\n0 2\\n1 2\\n2 3\\n3 -1\\n0 1\\n1 -1\\n3 -1\\n0 2\\n1 2\\n2 3\\n3 -1\\n0 1\\n1 -1\\n3 -1\\n0 2\\n1 2\\n2 3\\n3 -1\") == \"2\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\nassert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n2 0\n-1 1\n-1 2\n2 3\n1 1\n1 2''') == '4'\nassert solution('''3 6 6\n3 0\n0 3\n0 1\n2 3\n2 4\n3 5\n3 6''') == '5'\nassert solution('''3 6 6\n3 0\n0 3\n0 1\n2 3\n2 4\n3 5\n3 6\n0 3\n0 1\n2 3\n2 4\n3 5\n3 6''') == '6'\nassert solution('''3 6 6\n3 0\n0 3\n0 1\n2 3\n2 4\n3 5\n3 6\n3 2\n3 1\n3 0\n1 3\n1 2\n1 0\n0 1\n2 3\n2 4\n3 5\n3 6''') == '3'\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\n'''\n"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\"\nassert solution(open(\"input2.txt\").read()) == \"2\"\n\"\"\""
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\"\"\"\n) == '6'\n\nassert solution(\n\"\"\"2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n0 0\n0 0\n-2 2\n0 -1\n-1 -1\n-1 -1\n1 0\n0 0\n1 0\n-1 0\n-1 0\n1 0\n0 0\n0 0\n0 0\n0 0\"\"\"\n) == '3'\n\nassert solution(\n\"\"\"1 3 2\n0 0\n0 1\n0 0\n1 0\n1 1\n1 1\n0 0\n0 1\n1 0\n0 0\n1 0\n0 1\n1 1\n0 1\n0 0\n1 1\n0 1\n0 1\n1 1\n1 1\n0 1\n1 0\n1 0\n1 0\n1 0\n1 1\n0 0\n0 1\n1 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n1 0\n0 0\n0 0\n1 0\n1 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n1 0\n1 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n-2 3\\n3 2\\n2 1\") == \"6\"\n\"\"\"\n\nfrom queue import Queue"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n\nassert solution(stdin) == '0'\n\nassert solution(stdin) == '0'\n\nassert solution(stdin) == '0'\n\nassert solution(stdin) == '0'"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\"\n\n>>> solution(stdin)\n3\n'''\n\nfrom math import pi, ceil\n\ns, r, n, z = list(map(float, stdin.split()))"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\nassert solution(input5) == output5\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3 1 4 40'''\n) == '3'\n\nassert solution(\n'''5 1 4 40'''\n) == '3'\n\nassert solution(\n'''5 1 4 20'''\n) == '1'\n\nassert solution(\n'''3 1 4 30'''\n) == '2'\n\nassert solution(\n'''2 1 4 30'''\n) == '2'"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1 4 40''') == '3'\nassert solution('''3 0.5 4 40''') == '3'\nassert solution('''6 1 5 40''') == '3'\nassert solution('''6 0.5 4 40''') == '3'\nassert solution('''6 1 1 40''') == '3'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 1 6 40') == '3'\nassert solution('3 1 4 25') == '2'\nassert solution('3 1 4 25 22') == '2'\nassert solution('3 1 4 25 22 25') == '2'\n"
    },
    {
        "number": 3354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40') == '3' # Output is 3\nassert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40') == '3' # Output is 3\nassert solution
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\\n7\\n4\\n2\\n4\\n6\\n4\\n3\\n3\\n8\\n5\\n8\\n7\\n8\\n2\\n1\\n6\\n7\\n6\\n8\\n3\\n2\\n4\\n3\\n4\\n8\\n2\\n5\\n2\\n4\\n2\\n1\\n4\\n5\\n3\\n8\\n7\\n7\\n1\\n6\\n3\\n2\\n6\\n5\\n5\\n8\\n2\\n4\\n4\\n4\\n5\\n2\\n4\\n6\\n4\\n4\\n7\\n1\\n7\\n2\\n2\\n6\\n4\\n6\\n5\\n7\\n5\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n8\\n5\\n2\\n1\\n1\\n3\\n3\\n6\\n1\\n2\\n1\\n4\\n8\\n1\\n2\\n2\\n7\\n2\\n7\\n2\\n3\\n3\\n6\\n4\\n2\\n4\\n8\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n7\\n1\\n1\\n5\\n1\\n6\\n3\\n6\\n2\\n3\\n1\\n5\\n1\\n2\\n2\\n4\\n8\\n1\\n7\\n2\\n2\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n4\\n5\\n3\\n1\\n2\\n2\\n2\\n4\\n5\\n6\\n1\\n3\\n6\\n7\\n7\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n3\\n6\\n2\\n7\\n7\\n6\\n2\\n2\\n2\\n1\\n4\\n3\\n5\\n6\\n2\\n2\\n5\\n2\\n4\\n2\\n2\\n1\\n1\\n2\\n1\\n2\\n1\\n6\\n6\\n1\\n2\\n6\\n2\\n1\\n3\\n4\\n3\\n3\\n4\\n2\\n2\\n2\\n6\\n6\\n1\\n2\\n2\\n1\\n2\\n1\\n3\\n4\\n3\\n2\\n1\\n6\\n3\\n2\\n2\\n1\\n3\\n3\\n1\\n3\\n6\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n4\\n3\\n6\\n2\\n4\\n5\\n2\\n5\\n2\\n1\\n1\\n2\\n1\\n4\\n2\\n2\\n2\\n5\\n2\\n5\\n2\\n4\\n1\\n6\\n4\\n3\\n3\\n4\\n2\\n4\\n1\\n1\\n1\\n2\\n1\\n6\\n2\\n4\\n2\\n1\\n2\\n2\\n6\\n1\\n3\\n4\\n1\\n2\\n1\\n4\\n3\\n2\\n2\\n1\\n1\\n3\\n2\\n3\\n4\\n2\\n2\\n1\\n1\\n2\\n1\\n3\\n4\\n1\\n2\\n1\\n6\\n1\\n2\\n2\\n1\\n1\\n3\\n4\\n1\\n2\\n1\\n1\\n1\\n1\\n3\\n2\\n2\\n1\\n1\\n6\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n1\\n3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n2\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n2\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 356\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99\\n3'\nassert solution('''3 55\n83 34\n86 2\n-1 0 0\n55 0 0\n0 0 0''') == '0\\n0'\nassert solution('''3 53\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99\\n3'\nassert solution('''3 36\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '0\\n0'\nassert solution('''3 31\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '0\\n0'\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99'\nassert solution('''3 364\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1\n99 1 1"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\nassert solution('''0 0\n0 0''') == ''\nassert solution('''0 0\n1 1''') == ''\nassert solution('''2 5\n4 3\n1 3\n1 3''') == '9'\nassert solution('''3 5\n3 1\n2 2\n3 4\n1 2\n1 3''') == '10'\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 0\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 3 2\") == \"0\"\nassert solution(\"3 3 2 4\") == \"99\"\nassert solution(\"3 3 2 4 5\") == \"0\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\n\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\n\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\n\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\n\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 2 2\\n0 2 1\\n1 1 2\\n0 3 0\\n3 0 0\\n-1 0 1\\n2 1 2') == '99\\n3\\n3'\nassert solution('7 2\\n1 2 2\\n0 2 1\\n1 1 2\\n0 3 0\\n3 0 0\\n-1 0 1\\n2 1 2') == '99\\n3\\n3'\nassert solution('7 2\\n1 2 2\\n0 2 1\\n1 1 2\\n0 3 0\\n3 0 0\\n-1 0 1\\n2 1 2') == '99\\n3\\n3'\nassert solution('7 2\\n1 2 2\\n0 2 1\\n1 1 2\\n0 3 0\\n3 0 0\\n-1 0 1\\n2 1 2') == '99\\n3\\n3'\nassert solution('7 2\\n1 2 2\\n0 2 1\\n1 1 2\\n0 3 0\\n3 0 0\\n-1 0 1\\n2 1 2') == '99\\n3\\n3'\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0''') == '99\\n3\\n'\n\nassert solution('''1 2 3 4\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4''') == '0\\n'\n\nassert solution('''1 2 3 4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '\\n'\n\nassert solution('''1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '1 1 2\\n'\n\nassert solution('''1 2 3 4\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n5 5 5 5\n6 6 6 6\n7 7 7 7\n8 8 8 8\n9 9 9 9\n10 10 10 10\n11 11 11 11\n12 12 12 12\n13 13 13 13\n14 14 14 14\n15 15 15 15\n16 16 16 16\n17 17 17 17\n18 18 18 18\n19 19 19 19\n20 20 20 20\n21 21 21 21\n22 22 22 22\n23 23 23 23\n24 24 24 24\n25 25 25 25\n26 26 26 26\n27 27 27 27\n28 28 28 28\n29 29 29 29\n30 30 30 30\n31 31 31 31\n32 32 32 32\n33 33 33 33\n34 34 34 34\n35 35 35 35\n36 36 36 36\n37 37 37 37\n38 38 38 38\n39 39 39 39\n40 40 40 40\n41 41 41 41\n42 42 42 42\n43 43 43 43\n44 44 44 44\n45 45 45 45\n46 46 46 46\n47 47 47 47\n48 48 48 48\n49 49 49 49\n50 50 50 50\n51 51 51 51\n52 52 52 52\n53 53 53 53\n54 54 54 54\n55 55 55 55\n56 56 56 56\n57 57 57 57\n58 58 58 58\n59 59 59 59\n60 60 60 60\n61 61 61 61\n62 62 62 62\n63 63 63 63\n64 64 64 64\n65 65 65 65\n66 66 66 66\n67 67 67 67\n68 68 68 68\n69 69 69 69\n70 70 70 70\n71 71 71 71\n72 72 72 72\n73 73 73 73\n74 74 74 74\n75 75 75 75\n76 76 76 76\n77 77 77 77\n78 78 78 78\n79 79 79 79\n80 80 80 80\n81 81 81 81\n82 82 82 82\n83 83 83 83\n84 84 84 84\n85 85 85 85\n86 86 86 86\n87 87 87 87\n88 88 88 88\n89 89 89 89\n90 90 90 90\n91 91 91 91\n92 92 92 92\n93 93 93 93\n94 94 94 94\n95 95 95 95\n96 96 96 96\n97 97 97 97\n98 98 98 98\n99 99 99 99\n100 100 100 100''') == '99\\n1\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 4 5\n3 1 1\n-1 1 -1\n1 0 1\n1 -1 -1\n-1 1 -1\n-1 -1 -1\n3 3 1\n1 1 1\n-1 -1 -1\n1 1 1\n1 -1 -1\n1 -1 -1\n-1 -1 -1\n1 1 1\n1 -1 -1\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n3 3 1\n3 3 3\n1 1 1\n1 1 1\n-1 -1 -1\n1 1 1\n1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n-1 -1 -1\n-1"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\"\nassert solution(\"2\\n1 2\\n2 3\") == \"2\\n2 3\\n3 2\"\nassert solution(\"2\\n1 2\\n3 2\") == \"2\\n2 3\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"2\\n3 4\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n2 3\\n3 4\\n4 5\") == \"2\\n3 4\\n5 4\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n''') == '2\\n3 4\\n4 2'\n\nassert solution('''\n4\n1 2\n2 3\n3 4\n1 2\n''') == '2\\n1 2'\n\nassert solution('''\n4\n2 1\n2 3\n3 4\n1 2\n''') == '2\\n3 4\\n2 1'\n\nassert solution('''\n4\n4 3\n2 3\n1 2\n''') == '2\\n2 3'\n\nassert solution('''\n2\n1 2\n2 3\n''') == '1 2'"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_1.txt\").read()) == \"2 4\"\nassert solution(open(\"test_2.txt\").read()) == \"1 2\"\nassert solution(open(\"test_3.txt\").read()) == \"2 3\"\nassert solution(open(\"test_4.txt\").read()) == \"3 2\"\nassert solution(open(\"test_5.txt\").read()) == \"2 4\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\nprint('passed')\n\"\"\""
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_solution_1.txt\", \"r\").read()) == \"2\\n3 4\\n4 2\\n\"\nassert solution(open(\"test_solution_2.txt\", \"r\").read()) == \"2\\n4 2\\n\"\nassert solution(open(\"test_solution_3.txt\", \"r\").read()) == \"1\\n4\\n2\\n\"\nassert solution(open(\"test_solution_4.txt\", \"r\").read()) == \"4\\n4 2\\n1 3\\n\"\nassert solution(open(\"test_solution_5.txt\", \"r\").read()) == \"1\\n4\\n1 3\\n\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n4 1''') == '2\\n3 4\\n4 2\\n'\nassert solution('''2\n1 2\n2 1''') == '1\\n2 1\\n'\nassert solution('''2\n1 1\n2 2\n''') == '2\\n1 2\\n'\nassert solution('''2\n1 2\n2 3\n1 3''') == '2\\n1 3\\n'\n'''\nassert solution('''4\n1 2\n2 3\n3 4\n4 1\n''') == '2\\n3 4\\n4 2\\n'\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2\n2 3\n3 4''') == \"2\\n3 4\\n4 2\"\nassert solution('''1 2\n1 3\n3 4\n2 1''') == \"2\\n3 4\\n4 2\"\nassert solution('''1 2\n2 3\n3 4\n3 2\n3 5\n4 5\n4 3''') == \"2\\n3 4\\n4 3\\n5 2\"\nassert solution('''1 2\n2 3\n3 4\n3 2\n3 5\n4 5\n4 3''') == \"2\\n3 4\\n4 3\\n5 2\"\nassert solution('''1 2\n1 2\n1 3\n1 4\n1 5\n3 4\n3 5\n4 5''') == \"2\\n1 3\\n1 4\\n1 5\\n3 4\\n3 5\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n2 3') == '2\\n3 4\\n4 2'\nassert solution('3\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n4 2'\nassert solution('3\\n1 2\\n2 3\\n3 4\\n4 2') == '2\\n3 4\\n4 2'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n4 1') == '2\\n3 4\\n4 2'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n3 1') == '2\\n3 4\\n3 1'\n"
    },
    {
        "number": 3356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '2 3 4'\nassert solution('4\\n2 2\\n2 3\\n3 4') == '2 3 4'\nassert solution('4\\n1 2\\n1 3\\n2 3') == '1 3'\nassert solution('4\\n1 2\\n1 3\\n3 1') == '1 3'\nassert solution('4\\n1 2\\n2 3\\n2 1') == '2 1'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4\n1 1\n2 2\n3 2\n4 1\n\"\"\") == \"\"\"9.0000\n12\n12.00000\n9.0\n\"\"\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 1\n2 2\n3 2\n4 1''') == '9.0000'\nassert solution('''6\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '12'\nassert solution('''3\n1 1\n1 1\n1 1''') == '12'\nassert solution('''9\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9''') == '8.0000'\nassert solution('''10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '9.00000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n1 1\n2 2\n3 2\n4 1\n\"\"\") == \"\"\"\n9.0000\n12\n12.00000\n9.0\n\"\"\"\nassert solution(\"\"\"\n5\n1 1\n2 2\n3 2\n4 1\n5 1\n\"\"\") == \"\"\"\n5\n6\n7\n9.00000\n12\n\"\"\"\nassert solution(\"\"\"\n10\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n\"\"\") == \"\"\"\n10\n11\n12\n18.00000\n36\n\"\"\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1') == '9.0000'\nassert solution('2\\n2\\n2\\n2') == '9.0000'\nassert solution('3\\n3\\n3\\n3') == '9.0000'\nassert solution('4\\n4\\n4\\n4') == '9.0000'\nassert solution('5\\n5\\n5\\n5') == '12.00000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\"\nassert solution(\"3\\n2 1\\n1 1\\n1 1\") == \"12.00000\\n0\\n0.00000\"\nassert solution(\"2\\n3 3\\n1 1\") == \"12.00000\\n0\\n0.00000\"\nassert solution(\"5\\n5 1\\n5 1\\n5 1\\n5 1\") == \"12.00000\\n12.00000\\n12.00000\\n12.00000\\n12.00000\"\nassert solution(\"5\\n5 1\\n5 1\\n5 1\\n5 1\") == \"12.00000\\n12.00000\\n12.00000\\n12.00000\\n12.00000\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 1\n2 2\n3 2\n4 1''') == '9.0000'\nassert solution('''1\n2 2\n3 2\n4 1''') == '12.00000'\nassert solution('''8\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n8 1''') == '28.00000'\nassert solution('''10\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1''') == '90.0000'\nassert solution('''100\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1''') == '1890.0000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 1\n2 2\n3 2\n4 1''') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution('''2\n1 1\n1 1''') == '0.8000'\n'''\nfrom itertools import islice\nfrom bisect import insort_left"
    },
    {
        "number": 3357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4''') == '''9.0000\n12\n12.00000\n9.0'''\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution(9) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL X\\nPL Y\\nDI Y\\n'\nassert solution(7) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL X\\nPL Y\\nZE A\\nDI Y\\n'\nassert solution(8) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL X\\nPL Y\\nZE A\\nST Y\\nDI Y\\n'\nassert solution(60) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL X\\nPL Y\\nZE A\\nST Y\\nZE A\\nST X\\nDI Y\\n'\n\"\"\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('6') == 'ST A\\nST X\\nST X\\nST X\\nST X\\nST X\\nAD\\nPL A\\nPL X\\nPL X\\nAD\\nPL Y\\nDI Y'\nassert solution('60') == 'ST A\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nAD\\nPL A\\nPL X\\nPL X\\nAD\\nPL Y\\nDI Y'\nassert solution('0') == 'ST A\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nAD\\nPL A\\nPL X\\nPL X\\nAD\\nPL Y\\nDI Y'\nassert solution('0') == 'ST A\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nST X\\nAD\\nPL A\\nPL X\\nPL X\\nAD\\nPL Y\\nDI Y'\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\n\nassert solution(\"3\") == \"ST A\\nST X\\nST Y\\nPH A\\nPH X\\nPH Y\\nAD\\nPL Y\\nDI Y\"\n\nassert solution(\"1\") == \"ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nPL Y\\nDI Y\"\n\nassert solution(\"4\") == \"ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nPL Y\\nDI Y\"\n\nassert solution(\"5\") == \"ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nST A\\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"3\") == \"ST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A\\nST X\\nST Y\\nST Z\\nST A"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(3) == \"ST A\\nST X\\nST Y\\nST Z\\nST W\\nST U\\nST T\\nST I\\nST V\\nPL A\\nPH A\\nAD\\nPL Z\\nPL W\\nPL T\\nPL U\\nPL I\\nPL V\\nDI A\\nDI W\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\nDI Z\\nDI W\\nDI U\\nDI T\\nDI I\\nDI V\\nDI U\\nDI Y\\"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\"\nassert solution(\"3\") == \"ST A\\nST X\\nST Y\\nST A\\nST X\\nAD\"\nassert solution(\"4\") == \"ST A\\nST X\\nST Y\\nST A\\nST X\\nST B\\nST A\\nST X\\nAD\"\nassert solution(\"5\") == \"ST A\\nST X\\nST Y\\nST A\\nST X\\nST B\\nST A\\nST X\\nAD\"\nassert solution(\"6\") == \"ST A\\nST X\\nST Y\\nST A\\nST X\\nST B\\nST A\\nST X\\nST C\\nST A\\nST X\\nAD\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('3') == 'ST A\\nST X\\nST Y\\nPH A\\nPH X\\nPL Y\\nPH Y\\nAD\\nPL Y\\nDI Y'\nassert solution('4') == 'ST A\\nST X\\nST Y\\nST Z\\nPH A\\nPH X\\nPL Y\\nPL Z\\nAD\\nPL Y\\nPL Z\\nPH Y\\nAD\\nPL Z\\nDI Z'\nassert solution('5') == 'ST A\\nST X\\nST Y\\nST Z\\nST W\\nPH A\\nPH X\\nPL Y\\nPL Z\\nAD\\nPL Y\\nPL Z\\nPH W\\nAD\\nPL Z\\nPH Y\\nAD\\nPL Z\\nDI Z\\nDI Y'\nassert solution('6') == 'ST A\\nST X\\nST Y\\nST Z\\nST W\\nST U\\nPH A\\nPH X\\nPL Y\\nPL Z\\nAD\\nPL Y\\nPL Z\\nPH W\\nAD\\nPL Z\\nPH U\\nAD\\nPL Z\\nPH Y\\nAD\\nPL Z\\nDI Z\\nDI Y\\nDI U'\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"12345\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST Y\\nPL X\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"7\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST Y\\nPL X\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\n\"\"\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2) == \"STA\"\nassert solution(3) == \"STX\"\nassert solution(4) == \"PHA\"\nassert solution(5) == \"PHX\"\nassert solution(6) == \"AD\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('3') == 'ST A\\nST X\\nST Y\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('4') == 'ST A\\nST X\\nST Y\\nST Z\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('5') == 'ST A\\nST X\\nST Y\\nST Z\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution('6') == 'ST A\\nST X\\nST Y\\nST Z\\nST X\\nST Z\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 5 6\nFFFF FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n'''\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1 5 6\nFFF FFF FFF FFF FFF\nFFF FFF FFF FFF FFF\nFFF FFF FFF FFF FFF\nFFFF FFFF FFF FFF FFF\nFFF FFFF FFFF FFFF\nFFF FFFF FFFF FFFF\nFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFF FFFF FFFF FFFF\nFFF FFFF FFFF FFFF\nFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF\nFFFF FFFF FFF"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(expected)\nprint(f'{solution} successfully passed')\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n\nassert solution('''\n2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n''') == '1'\n\nassert solution('''\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\n\nassert solution('''\n3 4 5\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '0'\n\nassert solution('''\n2 4 6\nBFBFFFFFF\nBFBBFFBFBB\nBFBBBFBFFB\nBBFBFFFBFB\nBFBFFFBBFB\nBFFFFBFFFB\nFFBFFFFBBF\nFFBBBFBBFB\nFBBBBFBFFB\nFFBBFFBFFB\nBBFBFFBFFB\nFFBFBFFBFB\nFBFBFBBBBF\nBFBBBFBBFF\nFBFFBFFBBF\nBBFBFBFFBF\nBBFBFFBBFF\nBFBBFFBBFB\nFBFFFBFFFB\nFFBBBBBFFB\nFFBBBFFFBF\nBFBFBFFBBB\nBFBBBFBBFF\nBBFBFFBFFB\nFFBBBFFBFB\nFBFFBFBFFB\nBBFFBFBBFF\nBFFBBFFBBF\nFFBBBFFBBF\nBFBFBFFBFB\nFFBBBFBFFB\nFBBFFBFFFB\nBFBFFBFFBB\nFFBBBFBBFF\nFFBBFFBFBF\nFBBBBBFBFF\nBBFFBBBFFB\nBBFFFFBFFB\nBFBFBFFBBF\nFBFBFBFFFB\nBBFBBBFFBB\nBFBBBBBFFB\nBBFBFBFFBB\nBBFBBFFBBF\nBBFBFFBFFB\nBFBFFBFFBB\nFFBBBFFBFB\nFFBBBBBFFB\nBBFBFBFFBB\nBFBFBFBFFB\nFBFBFBBFFB\nFFBBFFBBFB\nBBFBBBFFBB\nBFBFBFFBBF\nBFFBFBFFBB\nFFFBFBBFFB\nFBFBBFBBFF\nBBFFBFFBFFB\nFFFBBBBFFB\nFFFBBFBBFF\nFFBBBBBFFB\nFBBFFBFFBB\nFBFFBFFBFFB\nBFBBFBFBBFF\nBBFFBBBBFF\nBFBBBFFBFFB\nFBBFBFBFFB\nFFBBFBFBBF\nBFFBFBFBBB\nBBFFBBBBFF\nBFFBBBBBFF\nFFFBFFBBBB\nBFBBFBFFBB\nBBFFBFBBFF\nFFBBBFFBFFB\nFFFBFBFFBB\nBBFBFFFBFFB\nBFBFFFBFFBB\nBFFBBBFBBFB\nBFBFFBFBFBF\nFFBBFFBFFBF\nBFFBFFFBBBF\nBFFBFBFBBFF\nFFFBFBFBBFF\nBBFFFFBFFB\nFFBBBFFBFFB\nFBBFBBFBBFF\nFFBBFFBBFFB\nBFBBBFFBFFB\nFFBBBFBFFBB\nFBBBBBFBFFB\nBFBBBBBBFFB\nFBFFFFBBFFB\nFFBFFFBBFFB\nBBFFFFFBBFB\nBFBFFBFBBFB\nFFBFBBFBFFB\nBBFFFFFBBBB\nFFBFFFFBBFF\nFBFFFFBBFFB\nBBFFBBBBFFB\nFBBBBBFFBBB\nBBFFFFFBFFB\nBFBBBBBBFFB\nBBFFBBBBFFB\nBFBFFBFFBBB\nFFFBFBFBBFF\nBFBBFBFFBBBB\nFBBFBBFBFFBB\nBBFFFFBFFBB\nFBFBBBBBFFBB\nFFBFFBFFBBBB\nFBBFFBBBFFBB\nFBFFBBFBBFFB\nFBBBFBFBBFFB\nBBFFBBBBFFBB\nBFFFBFBBFBBB\nBBFBFBBBFFBB\nFFBBFBFBFFBB\nBFFBBFBBFFBB\nFFBBBFBBFFBB\nBFBFFBFBFFBB\nFFBBFFBBFFBB\nBFBFFFFBBFFB\nBBFFBBBBFFBB\nFBFFBFBFFBBBB\nFBFBFFBBFFBBB\nFFBBBBBBFFBBB\nFBBFFFFFFBBBB\nBFBFFBBBFFBBB\nBFFFFBFFBBBBB\nFBBBBBFFBBBBB\nBFFFBBBFFBBBB\nBBFBFBFBBBBBB\nBFFFBFFBFFBBBB\nFBBBBFBBFBBBBA\nBFBBFBFFBBBBBB\nFFFBBFBBFBBBBB\nFBBFFBBBBFBFBF\nFFBBFFBFBFFBFF\nBFBBBFBBFBBFBF\nFFBFFBFFBFBFFB\nBBFBFBBFBBBFFB\nBBFBFBFBBFBBB\nFFBBFBFFBBBBBB\nBFBFBFBBFBBFFB\nFBFBFBFBBFBBFB\nBFFBBFFBBFBBFF\nBFBBFFBBBFFFBF\nFBFFBBBBBBFFBB\nBFBBBFFBFFBBBB\nFFBBFBFBBBBBBB\nBFFFBFBBFFBFFB\nFFBBFBFBFBFBBB\nBFBFFFFBBFBBB\nFBBBBFFBFFFBBF\nFBFFBFBFFBBFBF\nFFBBBBFBFBBBBB\nFBFFBBBFFBBBBB\nBFFFFBBBBFFBB\nFBBFFFFBFBFFFF\nBFFBBFBFBBBBBBA\nBFBFFFFBBFFBBB\nFFFBFBFBFFBBBBB\nFBFBBFBBFBBBBB\nBBFFBFBFFBFFBBB\nBFBBBFFBFFBBBBB\nBBFFBBBFFBBBBB\nFFBBBFFBFFBBBBB\nFFBBBFBBFBBBFB\nFFBBBFBBFFBBBB\nFBBBBBBBBFBBBFB\nBFFFBBBFFBFBFFB\nBFBB"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000''') == '2'\nassert solution('''1 5 6\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFF0 FFF0 FFF0 FFF0 FFF0\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF\nFFFF FFFF FFFF FFFF FFFF"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\nassert solution('''1 5 6\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFFF\nFFFFFFFFFF"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('2 5 6') == '2'\nassert solution('3 5 6') == '3'\nassert solution('4 5 6') == '3'\nassert solution('5 5 6') == '3'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('5 6 6') == '2'\nassert solution('2 3 1') == '1'\nassert solution('1 9 1') == '0'\nassert solution('3 3 3') == '4'\n"
    },
    {
        "number": 3359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(dedent(\n\"\"\"\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n\"\"\"\n)) == dedent(\n\"\"\"\n2\n\"\"\"\n))\n\nassert solution(dedent(\n\"\"\"\n1 4 6\nFFFFFFFFFFFFF\nFFFFFFFFFFFFF\nFFFFFFFFFFFFF\nFFFFFFFFFFFFF\n\"\"\"\n)) == dedent(\n\"\"\"\n0\n\"\"\"\n))\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aAb\") == \"Ab\"\nassert solution(\"aAbC\") == \"Ab\"\nassert solution(\"aAbCa\") == \"Ab\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\n\\n\\n\\nwhere are the abaaba palindromes on this line') == 'abaaba'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\n\\n\\n\\nwhere are the abaaba palindromes on this line') == 'NONE'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\n\\n\\n\\nwhere are the abaaba palindromes on this line') == 'abbbbbbbbbbbbbbbbba'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\n\\n\\n\\nwhere are the abaaba palindromes on this line') == 'a'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\n\\n\\n\\nwhere are the abaaba palindromes on this line') == 'a'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'NONE'\n\nassert solution('''\n2\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'NONE'\n\nassert solution('''\n2\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'NONE'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abbbbbbbbbbbbbbbbba'"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'abbbbbbbbbbbbbbbbba'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'a'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'NONE'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'NONE'\nassert solution('S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'abbbbbbbbbbbbbbbbba'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\n    '5',\n    'S -> aSa',\n    'S -> bSb',\n    'S -> a',\n    'S -> b',\n    'S -> ',\n    'where are the abaaba palindromes on this line',\n    'none on this line',\n    'how about this aaaaaaabbbbbbbbbbbbbbbbba',\n    'even a single a or b is a palindrome'\n])) == 'abaaba','sample'\nassert solution('\\n'.join([\n    '1',\n    'S -> aSa',\n    'S -> bSb',\n    'S -> a',\n    'S -> b',\n    'S -> ',\n    'where are the abaaba palindromes on this line',\n    'none on this line',\n    'how about this aaaaaaabbbbbbbbbbbbbbbbba',\n    'even a single a or b is a palindrome'\n])) == 'abaaba', 'trivial'\nassert solution('\\n'.join([\n    '1',\n    'S -> aSa',\n    'S -> bSb',\n    'S -> a',\n    'S -> b',\n    'S -> ',\n    'where are the abaaba palindromes on this line',\n    'none on this line',\n    'how about this aaaaaaabbbbbbbbbbbbbbbbba',\n    'even a single a or b is a palindrome'\n])) == 'abaaba', 'trivial'\nassert solution('\\n'.join([\n    '1',\n    'S -> aSa',\n    'S -> bSb',\n    'S -> a',\n    'S -> b',\n    'S -> ',\n    'where are the abaaba palindromes on this line',\n    'none on this line',\n    'how about this aaaaaaabbbbbbbbbbbbbbbbba',\n    'even a single a or b is a palindrome'\n])) == 'abaaba', 'trivial'\nassert solution('\\n'.join([\n    '1',\n    'S -> aSa',\n    'S -> bSb',\n    'S -> a',\n    'S -> b',\n    'S -> ',\n    'where are the abaaba palindromes on this line',\n    'none on this line',\n    'how about this aaaaaaabbbbbbbbbbbbbbbbba',\n    'even a single a or b is a palindrome'\n])) == 'abaaba', 'trivial'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abaaba'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'a'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'bbbbbbba'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'bbb'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'ba'\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->.\") == \"abaaba\"\nassert solution(\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->.\") == \"NONE\"\nassert solution(\"S -> aa\\nS -> bb\\nS -> aa\\nS -> bb\\nS -> aa\\nS -> bb\\nS ->.\") == \"a\"\nassert solution(\"S -> abaaba\\nS -> none\\nS -> abaaba\\nS -> abaaba\\nS -> aaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\nS -> aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\ns\") == \"s\"\nassert solution(\"\\ns\\n\") == \"s\"\nassert solution(\"\\ns\\n\\n\\n\") == \"s\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\") == \"abaaba\"\nassert solution(\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\") == \"abbbbbbbbbbbbbbbbba\"\nassert solution(\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\") == \"a\"\nassert solution(\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\") == \"a\"\nassert solution(\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\") == \"a\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'abbbbbbbbbbbbbbba'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'abbbbbbbbbbbbbbba'\nassert solution('''\n6\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'ababa'\nassert solution('''\n6\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'abbbbbbbbbbbbbbba'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'abbbbbbbbbbbbbbba'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4'\nassert solution('''10\n3 4 5 9 1 2 6\n1 1 1 1 1 1 1 1\n2 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n''') == '9'\nassert solution('''2\n5\n2 1 4 4\n4\n''') == '2'\nassert solution('''6\n5\n5 3 0 6 4 2\n5 4 1 3 2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '10'\nassert solution('''6\n5\n5 3 0 6 4 2\n5 4 1 3 2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '5'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4'\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n''') == '-1'\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n''') == '3'\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2 4\n2 3 5\n3 4\n4\n5\n3 4 0\n1 2"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"4\"\nassert solution(\n\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4'\n\"\"\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n1\\n2') == '3'\nassert solution('3\\n2\\n1\\n2\\n1') == '4'\nassert solution('4\\n2\\n2\\n1\\n1') == '7'\nassert solution('5\\n4\\n4\\n3\\n2\\n2') == '8'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4'\nassert solution(\n'''\n6\n10 9 0 4 3\n1 2 5\n2 3 7\n2 4\n4\n5\n6\n7\n''') == '19'\nassert solution(\n'''\n2\n5\n7\n9\n10\n3\n1\n2\n4\n5\n6\n7\n''') == '14'\nassert solution(\n'''\n4\n10 10 3 2\n1 2 3\n2 2 3\n3 3 3\n1 3 1\n2 3 1\n3 1\n1\n2\n3\n4\n''') == '19'\nassert solution(\n'''\n4\n7\n8\n9\n10\n5\n6\n7\n8\n9\n10\n4\n3\n2\n1\n1\n2\n3\n4\n''') == '18'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4'\n'''\n    pass\n'''\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '5'\nassert solution('''4\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '6'\nassert solution('''8\n6 7 0 2\n1 3 7\n2 0\n4\n6 1 5\n2 0\n2\n1 1\n''') == '2'\n'''\n'''\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5 0 2\n1 3 7\n2 0\n4\n''') == '4'\nassert solution('''\n4\n0 1 2 3\n1 2 3 4\n2 3 4 5\n3 4 5 6\n''') == '7'\nassert solution('''\n6\n0 1 2 3 4 5\n1 2 3 4 5 6\n2 3 4 5 6 7\n3 4 5 6 7 8\n4 5 6 7 8 9\n5 6 7 8 9 10\n''') == '25'\nassert solution('''\n6\n0 1 2 3 4 5\n1 2 3 4 5 6\n2 3 4 5 6 7\n3 4 5 6 7 8\n4 5 6 7 8 9\n5 6 7 8 9 10\n''') == '46'\nassert solution('''\n5\n0 1 2 3 4\n1 2 3 4 5\n2 3 4 5 6\n3 4 5 6 7\n4 5 6 7 8\n''') == '45'\n"
    },
    {
        "number": 3361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4'\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n1\n''') == '1'\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n2\n''') == '2'\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n3\n''') == '2'\nassert solution('''5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '0'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"3 2\") == \"NO WAY\"\nassert solution(\"1 1\") == \"SUCCESS\"\nassert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"2 3\") == \"GO FOR IT\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"GO FOR IT\"\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"GO FOR IT\"\nassert solution(\"2 3\") == \"NO WAY\"\nassert solution(\"5 10\") == \"NO WAY\"\nassert solution(\"5 8\") == \"NO WAY\"\nassert solution(\"5 4\") == \"GO FOR IT\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n4 4\nWWWW\nWSBB''') == \"GO FOR IT\"\nassert solution('''2 3\n2 4\nWWWW\nWSBB''') == \"NO WAY\"\nassert solution('''2 3\n4 3\nWWWW\nWBBB''') == \"NO WAY\"\nassert solution('''2 3\n2 2\nWWWW\nWWWW''') == \"SUCCESS\"\nassert solution('''1 1\n1 1\nW''') == \"SUCCESS\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'NO WAY'\nassert solution('1 1') == 'NO WAY'\nassert solution('1 2') == 'NO WAY'\nassert solution('3 4') == 'GO FOR IT'\nassert solution('1 5') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"NO WAY\"\n'''\n\n\n'''\nHackerRank (Python) Practice - Extra Credit: Coding Question (Palindrome)\n\nYou are given a string S. Your task is to find out if the string is a palindrome or not.\n\nInput Format\n\nThe first line contains an integer T, the number of test cases.\nThe next T lines contains a string S each.\n\nOutput Format\n\nFor each string S, print \"YES\" if S is a palindrome, else print \"NO\".\n\nConstraints\n\n1 <= T <= 10\n1 <= |S| <= 100\nSample Input:\n2\nhappens\nhappens\nSample Output:\nYES\nNO\nExplanation\n\nFor the first case, the string is \"happens\", which is a palindrome.\nFor the second case, the string is \"happens\", which is not a palindrome.\n'''\n\n\n'''\nHackerRank (Python) Practice - Extra Credit: Coding Question (Triple Step)\n\nYou are given a string S, consisting only of letters \u2019a\u2019, \u2019b\u2019 and \u2019c\u2019, and you have to find the number of triplets that can be made using the letters.\n\nInput Format\n\nThe first line contains an integer T, the number of test cases.\nFor each test case:\n\nThe next line contains a string S, consisting of lowercase letters only.\nOutput Format\n\nPrint the number of triplets for each test case on separate lines.\n\nConstraints\n\n1 <= T <= 10\n1 <= |S| <= 10\nSample Input:\n2\naabb\ncc\naabcca\nSample Output:\n2\n3\nExplanation\n\nThere are 2 triplets that can be made from the letters: \"aabb\" and \"aabcca\".\nFor the second test case, the answer is 3.\n'''\n\n\n'''\nHackerRank (Python) Practice - Extra Credit: Coding Question (Pyramid)\n\nGiven a string S, you have to find if the string is a pyramid or not.\n\nInput Format\n\nThe first line of the input contains an integer T, the number of test cases.\nFor each test case:\n\nThe next line contains a string S, consisting only of lowercase letters.\nOutput Format\n\nFor each test case, output \"YES\" if the string is a pyramid, and output \"NO\" if it is not.\n\nConstraints\n\n1 <= T <= 10\n1 <= |S| <= 10\nSample Input:\n2\nabc\nbcab\nSample Output:\nYES\nNO\nExplanation\n\nFor the first test case, \"abc\" is a pyramid, since for each letter of the string, the new letters are a combination of the previous letter, and the current letter.\nFor the second test case, the string is not a pyramid.\n'''\n\n\n'''\nHackerRank (Python) Practice - Extra Credit: Coding Question (Euler Cycle)\n\nYou are given a string S. Your task is to find out if the string has a cycle or not.\n\nInput Format\n\nThe first line contains an integer T, the number of test cases.\nFor each test case:\n\nThe next line contains a string S.\nOutput Format\n\nFor each test case, output \"YES\" if S has a cycle, and output \"NO\" if it does not.\n\nConstraints\n\n1 <= T <= 10\n1 <= |S| <= 1000\n\nSample Input:\n2\nabc\nxyz\nSample Output:\nYES\nNO\nExplanation\n\nFor the first test case, the string \"abc\" is a cycle, since the string can be formed by \"abcabc\" or \"abca\" (The last letter of the first string is the first letter of the second string, hence the cycle).\nFor the second test case, the string \"xyz\" is not a cycle.\n'''\n\n\n'''\nHackerRank (Python) Practice - Extra Credit: Coding Question (Eulerian Path)\n\nYou are given a string S. Your task is to find out if the string has an Eulerian path or not.\n\nInput Format\n\nThe first line contains an integer T, the number of test cases.\nFor each test case:\n\nThe next line contains a string S.\nOutput Format\n\nFor each test case, output \"YES\" if S has an Eulerian path, and output \"NO\" if it does not.\n\nConstraints\n\n1 <= T <= 10\n1 <= |S| <= 100\n\nSample Input:\n2\nGEEKSFORGEEKS\nGEEKSPEEK\nSample Output:\nYES\nNO\nExplanation\n\nFor the first test case, the string is \"GEEKSFORGEEKS\", the string has an Eulerian path.\nFor the second test case, the string is \"GEEKSPEEK\", it does not have an Eulerian path.\n'''\n\n\n'''\nHackerRank (Python) Practice - Extra Credit: Coding Question (Boxes)\n\nYou are given an integer N, the number of boxes in a line. You are also given a string S consisting of N lowercase letters. Your task is to determine whether or not it is possible to put N boxes into the line such that no two letters are adjacent to each other.\n\nInput Format\n\nThe first line contains an integer N, the number of boxes.\nThe next line contains a string S.\n\nOutput Format\n\nOutput \"YES\" if it is possible to put the boxes in the line, and \"NO\" if it is not.\n\nConstraints\n\n1 <= N <= 10\n\nSample Input:\n5\nabcb\nSample Output:\nYES\nExplanation\n\nWe can put 5 boxes in the line with the letters:\nabc\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4') == ''\nassert solution('1 2 3 4 5 6 7') == 'SUCCESS'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26') == 'GO FOR IT'\nassert solution
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWWWW\\nWSBBB\\nWWWWWW\\nWBWGW') == 'NO CHANCE'\nassert solution('2 3\\n4 4\\nWWWWWWWWWW\\nWSBBBWW\\nWWWWWWWWWW\\nWBWGWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWWWWWWWWWWWWWWWWWWWW\\nWSBBBWW\\nWWWWWWWWWWWWWWWWWWWWWWW\\nWBWGWG') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n4 4\nWWWW\nWSBB\nWWWW\nWBWG''') == 'GO FOR IT'\nassert solution('''2 2\n4 4\nWWWW\nWSBB\nWWWW\nWBWG''') == 'NO WAY'\n'''"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10\\n1') == '9'\nassert solution('1 10\\n4') == '4'\nassert solution('1 10\\n2') == '3'\nassert solution('1 10\\n10') == '10'\nassert solution('1 10\\n100') == '100'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == 5\nassert solution('1 2 3 4 5') == '2243'\nassert solution('1 2 3 4 5') == '2243'\nassert solution('1 2 3 4 5') == '2243'\nassert solution('1 2 3 4 5') == '2243'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2243\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 900\\n800 700 400 300 200\\n') == '2243'\nassert solution('2 30\\n10 20 30') == '120'\nassert solution('2 5\\n10 10 30') == '100'\nassert solution('2 5\\n30 10 10') == '0'\nassert solution('2 5\\n30 10 30') == '0'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 900\n800 700 400 300 200''') == '2243'\nassert solution('''10 1200\n600 300 400 300 200 400 300''') == '10200'\nassert solution('''10 1200\n600 300 400 300 300 400''') == '10090'\nassert solution('''10 1200\n600 300 400 400 400 400''') == '0'\nassert solution('''10 1200\n600 300 400 400 400 400''') == '0'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 700\\n800 700 400 300 200\") == \"2243\"\nassert solution(\"2 700\\n800 700 400 300 200\\n900 600 0 600 200 200\") == \"1074\"\nassert solution(\"1 10000\\n900 900\") == \"9\"\nassert solution(\"1 100\\n900 900\") == \"1\"\nassert solution(\"2 1000\\n900 900\") == \"1\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2243'\nassert solution(stdin) == '2243'\nassert solution(stdin) == '2243'\nassert solution(stdin) == '2243'\nassert solution(stdin) == '2243'\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2243\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 100\\n
    },
    {
        "number": 3363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2243'\n\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 10\n= 1 2\n= 2 3\n? 0 1''') == 'yes'\nassert solution('''2 10\n? 0 1\n? 1 3''') == 'yes'\nassert solution('''10 7\n? 1 2\n? 1 3\n? 0 3\n? 1 3\n? 0 2\n? 2 5\n? 0 1\n? 2 3\n? 2 5\n? 1 2\n? 3 4\n? 2 3\n? 0 2\n? 0 1''') == 'yes'\nassert solution('''10 7\n? 1 2\n? 1 3\n? 0 3\n? 1 3\n? 0 2\n? 2 5\n? 0 1\n? 2 3\n? 2 5\n? 1 2\n? 3 4\n? 2 3\n? 0 2\n? 0 1''') == 'no'\nassert solution('''10 7\n? 1 2\n? 1 3\n? 0 3\n? 1 3\n? 0 2\n? 2 5\n? 0 1\n? 2 3\n? 2 5\n? 1 2\n? 3 4\n? 2 3\n? 0 2\n? 0 1''') == 'no'\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'yes'\nassert solution('1 3 2') == 'no'\nassert solution('1 2 3 4') == 'yes'\nassert solution('1 2 3') == 'no'\nassert solution('1 3') == 'no'\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4') == 'no'\nassert solution('10 2') == 'yes'\nassert solution('2 3') == 'no'\nassert solution('100 1000') == 'yes'\nassert solution('3 3') == 'yes'\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT\n\"\"\"\n\nfrom collections import defaultdict\nfrom sys import stdin"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 4') == 'no'\nassert solution('4 4') == 'yes'\nassert solution('1 2 3') == 'no'\nassert solution('1 1') == 'yes'\nassert solution('7 4') == 'no'\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'no\\nyes\\nno'\nassert solution('''3 3\n? 1 3\n? 2 3\n? 3 3\n= 1 8\n? 1 3\n? 2 3\n? 3 3\n''') == 'yes\\nno\\nno'\nassert solution('''3 3\n? 1 3\n? 2 3\n? 3 3\n? 1 3\n? 2 3\n? 3 3\n''') == 'no\\nno\\nno'\nassert solution('''10 4\n? 1 3\n= 1 8\n? 1 3\n? 2 3\n= 3 8\n? 1 3\n? 2 3\n? 3 3\n? 1 3\n? 2 3\n? 3 3\n''') == 'no\\nno\\nno\\nno'\nassert solution('''3 3\n? 1 3\n? 2 3\n? 3 3\n= 1 8\n? 1 3\n? 2 3\n? 3 3\n''') == 'no\\nno\\nno\\nno'\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n10 4\n? 1 3\n= 1 8\n? 3 8\n? 1 3\n''') == 'no\\nno\\nno'\n'''\n) == 'no\\nno\\nno'\n\nassert solution('''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'yes\\nno\\nno'\n\nassert solution('''\n10 4\n? 1 3\n? 1 3\n? 1 3\n? 1 3\n''') == 'no\\nno\\nno\\nno\\nno'\n\nassert solution('''\n100 10000\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n? 1 100\n?"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"sample.in\").read()) == open(\"sample.out\").read()\n'''\n"
    },
    {
        "number": 3364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n-----\n\n\"\"\"\n\nfrom itertools import combinations\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n0 2 0 1\") == \"0 2 0\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"5 6\\n1 1 1 1 1\") == \"1 1 1\"\nassert solution(\"5 6\\n1 2 3 4 5\") == \"2 2\"\nassert solution(\"5 6\\n1 2 3 4 5 6\") == \"3 3\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == \"2\"\nassert solution('''5 1\n0''') == \"1\"\nassert solution('''10 1\n1''') == \"1\"\nassert solution('''5 2\n0 0 1 1''') == \"1\"\nassert solution('''10 2\n1 1 0 1 0 0 1''') == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 7') == '2'\nassert solution('7 6') == '1'\nassert solution('7 6\\n8 8 8 8') == '0'\nassert solution('7 6\\n8 8 8 8\\n9 9 9 9 9 9 9 9 9 9 9') == '0'\nassert solution('7 6\\n8 8 8 8\\n9 9 9 9 9 9 9 9 9 9 9\\n10 10 10 10 10 10 10 10 10 10') == '2'\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2'\nassert solution('3 2') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('4 4 4 4') == '0'\nassert solution('10 2 10 5 10 6 10 7 10 8 10 9 10') == '12'\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n5 3\n10 5 4 8 3\n\"\"\"\n) == '2'\n\nassert solution(\n    \"\"\"\n1\n1\n\"\"\"\n) == '1'\n\nassert solution(\n    \"\"\"\n100 200\n\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97\n\"\"\"\n) == '64'\n\nassert solution(\n    \"\"\"\n9 9\n\n
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == '2'\nassert solution('''6 3\n100 600 500 1 1000 2''') == '2'\nassert solution('''6 5\n100 600 500 1 1000 2''') == '2'\nassert solution('''3 2\n1 2 4''') == '0'\nassert solution('''6 5\n2 2 4 4 4 2 1''') == '2'\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 5 7 11\") == 2\nassert solution(\"2 4 6 8 10\") == 1\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251\") == 7\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 2\n\"\"\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == \"2\"\nassert solution('''5 3\n10 5 4 8 3''') == \"2\"\nassert solution('''5 3\n
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 127') == 1083\nassert solution('-1 128') == -2\nassert solution('2 -1') == -2\nassert solution('3 0') == 1\nassert solution('3 1') == 2\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 127\") == 1083\nassert solution(\"1 1\") == 0\nassert solution(\"2 3\") == 1\nassert solution(\"10 10\") == 0\nassert solution(\"2 5\") == 2\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 127') == 1083\n\nassert solution('2 1000') == 1172\n\nassert solution('3 10000') == 2040\n\nassert solution('5 1000') == 1087\n\nassert solution('10 1') == 7"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 127') == '1083'\nassert solution('1 10^18') == '1083'\nassert solution('1 10^18 1') == '1083'\nassert solution('1 1') == '0'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1083\"\n\n\"\"\""
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1,127) == 1083\nassert solution(1,100) == 912\nassert solution(1,1000000) == 129751147\nassert solution(1,10**18) == 7961349\nassert solution(1,10**17) == 10730155\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 1083\n'''\n\nfrom typing import List\n\nfrom solutions.kyu_7.multiplication_table import solution\n\nTEST_CASE_ONE = [1, 127]\nTEST_CASE_TWO = [1, 19]\nTEST_CASE_THREE = [1, 10000]\nTEST_CASE_FOUR = [1, 0]\nTEST_CASE_FIVE = [1, 1000]\nTEST_CASE_SIX = [1, 100000]\nTEST_CASE_SEVEN = [1, 100000000]\nTEST_CASE_EIGHT = [1, 999999999]\n\nEXPECTED_RESULTS = [1083, 1083, 1083, 1, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 10"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 1083\nSample Input:\n1 1024\nSample Output:\n16\n\"\"\""
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 127') == '1083'\nassert solution('1 1') == '0'\nassert solution('1 1 2') == '3'\nassert solution('1 1 2 3') == '6'\n"
    },
    {
        "number": 3366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution(stdin) # Ignore lint errors, this line is dynamically populated by the tests\n\"\"\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000'\nassert solution('1 2\\nHello World\\nGoodbye\\nWhat is the air speed velocity of an unladen swallow? African?\\nHello World\\nGoodbye\\nThe first word in a question is What\\nWhat is the air speed velocity of an unladen swallow? African?\\nHello World\\nGoodbye') == '1.0'\n\n---\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0 0') == '0'\nassert solution('How much is 6 times 9? 42') == '42'\nassert solution('How much is 9 times 6? 42') == '42'\nassert solution('Is there intelligent life on Earth? Probably') == 'Probably'\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000'\nassert solution('2 2\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '1.0'\nassert solution('3 2\\nHow much is 6 times 9? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '1.0'\nassert solution('2 2\\nHow much is 6 times 9? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '1.0'\nassert solution('2 2\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '1.0'\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2.0000000000'\n\"\"\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.0000000000\"\n\"\"\""
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == \"2.0000000000\"\nassert solution('''2 1\nFirst!\n''') == \"0.5\"\nassert solution('''3 1\nIs there intelligent life on Earth? Probably\nFirst!\n''') == \"1.0\"\n'''\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\"\"\") == '2.0000000000'\n\nassert solution(\n    \"\"\"3 3\nWhat is the air speed velocity of an unladen swallow? African?\nIs intelligent life on Earth? Probably\nHow much is 9 times 6? 42\"\"\") == '2.0000000000'\n\nassert solution(\n    \"\"\"7 7\nIs intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\nHow much is 6 times 9? 42\"\"\") == '2.0000000000'\n\nassert solution(\n    \"\"\"3 3\nIs intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\nHow much is 9 times 6? 42\"\"\") == '2.0000000000'\n\nassert solution(\n    \"\"\"100 100\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\nHow much is 6 times 9? 42\"\"\") == '2.0000000000'"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\"\nassert solution(\"2\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"0.0\"\nassert solution(\"3 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"1.500000000\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"1.00000000\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4') == '2.0000000000'\nassert solution('4 4') == '2.0000000000'\nassert solution('4 4') == '2.0000000000'\nassert solution('4 4') == '2.0000000000'\nassert solution('4 4') == '2.0000000000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == '2.0000000000'\n\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == '2.0000000000'\n\"\"\"\nfrom __future__ import print_function\nfrom builtins import range\nfrom builtins import object\nfrom random import randint\n\nfrom sys import stdin, stdout\n\n\nclass Solution(object):\n    def __init__(self):\n        self.best_score = 0\n        self.best_length = 0\n\n    def solve(self):\n        t, n = map(int, stdin.readline().split())\n        for _ in range(n):\n            question, answer = stdin.readline().split()\n            question_length = len(question)\n            question = set(question)\n            self.best_length = max(self.best_length, question_length)\n            best_score = 0\n            for _ in range(t):\n                try:\n                    ans = stdin.readline().strip()\n                except:\n                    stdout.write(\"!\\n\")\n                    return\n\n                if ans not in question:\n                    best_score = max(best_score, self.best_score)\n                    self.best_score = 0\n                    stdout.write(\"!\\n\")\n                    return\n                else:\n                    self.best_score += 1\n            if self.best_score > best_score:\n                best_score = self.best_score\n\n            stdout.write(\"%d\\n\" % best_score)\n        stdout.write(\"%d\\n\" % self.best_length)\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == 'FALSE ALARM'\nassert solution(open('test_input1.txt', 'r').read()) == 'POSSIBLE'\nassert solution(open('test_input2.txt', 'r').read()) == 'POSSIBLE'\nassert solution(open('test_input3.txt', 'r').read()) == 'POSSIBLE'\nassert solution(open('test_input4.txt', 'r').read()) == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\npenguin 1 monkey\") == \"FALSE ALARM\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\n2 lion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'POSSIBLE'\nassert solution(stdin) == 'IMPOSSIBLE'\nassert solution(stdin) == 'FALSE ALARM'\n'''\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 6') == 'POSSIBLE'\nassert solution('1 1') == 'FALSE ALARM'\nassert solution('1 1\\n0 1\\n1 1\\n1 1\\n0 1') == 'POSSIBLE'\nassert solution('1 1\\n0 1\\n1 1\\n1 1\\n0 1') == 'POSSIBLE'\nassert solution('1 1\\n0 1\\n1 1\\n1 1\\n1 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\nassert solution('''3 6\npenguin 1 monkey\nlion 3 monkey penguin lion\nmonkey 2 lion penguin''') == 'IMPOSSIBLE'\nassert solution('''1 2\nfox 1''') == 'FALSE ALARM'\nassert solution('''3 4\nabracadabra 1''') == 'POSSIBLE'\nassert solution('''2 3\nABABAB 1''') == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\nassert solution('''1 2\na''') == 'POSSIBLE'\nassert solution('''2 2\na a''') == 'POSSIBLE'\nassert solution('''3 3\na a a\na a a\na a a''') == 'IMPOSSIBLE'\nassert solution('''5 5\na a a a a a\na a a a a a\na a a a a a\na a a a a a\na a a a a a''') == 'FALSE ALARM'\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"FALSE ALARM\"\nassert solution(\"monkey 2 lion penguin\") == \"POSSIBLE\"\nassert solution(\"lion 3 monkey penguin lion\") == \"POSSIBLE\"\nassert solution(\"penguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"\") == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"1 6\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"2 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"1 6\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"2 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\npenguin 1 monkey\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 4\\n0 1 1 2 1 3 1 4\\n3 1 4 1 1 2 1 3\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4') == 'POSSIBLE'\nassert solution('1 4\\n0 1 1 2 1 3 1 4\\n3 1 4 1 1 2 1 3\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4') == 'FALSE ALARM'\nassert solution('1 4\\n0 1 1 2 1 3 1 4\\n3 1 4 1 1 2 1 3\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4') == 'IMPOSSIBLE'\nassert solution('1 4\\n0 1 1 2 1 3 1 4\\n3 1 4 1 1 2 1 3\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4') == 'POSSIBLE'\nassert solution('1 4\\n0 1 1 2 1 3 1 4\\n3 1 4 1 1 2 1 3\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4\\n1 1 1 1 2 1 3 1 4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'random sequence'\nassert solution('1000\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'random sequence'\nassert solution('1000\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'random sequence'\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n\nassert solution('''\n100\n
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n' +\n                 '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n' +\n                 '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n' +\n                 '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n' +\n                 '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n' +\n                 '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n' +\n                 '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n' +\n                 '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n' +\n                 '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n' +\n                 '4 6 3 3 2 7 1 8 7 8"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9'\n) == 'triple correlation 4(1)4(3)3 found'\n\"\"\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n\nassert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n\nassert solution('''\n10000\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n1234567"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'triple correlation 4(1)4(3)3 found'\n\"\"\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '100\\n'\n    '4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n'\n    '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n'\n    '0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n'\n    '2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n'\n    '8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n'\n    ) == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n    '200\\n'\n    '9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\\n'\n    '9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\\n'\n    '9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\\n'\n    '9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\\n'\n    '9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\\n'\n    ) == 'random sequence'\n\nassert solution(\n    '100\\n'\n    '4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n'\n    '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n'\n    '0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n'\n    '2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n'\n    '8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n'\n    ) == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n    '100\\n'\n    '4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n'\n    '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n'\n    '0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n'\n    '2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n'\n    '8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n'\n    '7 1 5 1 4 1 6 3 6 1 3 5 4 4 1 5 5 5 5 1\\n'\n    '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n'\n    '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n'\n    ) == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n    '100\\n'\n    '4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n'\n    '4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n'\n    '0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n'\n    '2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n'\n    '8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n'\n    ) == 'random sequence'"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\") == \"\"\"\ntriple correlation 4(1)4(3)3 found\n\"\"\"\n\nassert solution(\n\"\"\"\n0\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\") == \"\"\"\ntriple correlation 4(1)4(3)3 found\n\"\"\"\n\nassert solution(\n\"\"\"\n1000\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\") == \"\"\"\nrandom sequence\n\"\"\"\n\nassert solution(\n\"\"\"\n0\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\") == \"\"\"\nrandom sequence\n\"\"\"\n\nassert solution(\n\"\"\"\n1000\n6 0 4 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n6 0 4 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\") == \"\"\"\nrandom sequence\n\"\"\""
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n') == 'triple correlation 4(1)4(3)3 found'\nassert solution('5\\n3\\n1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\"
    },
    {
        "number": 3369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    100\n    4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n    4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n    0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n    2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n    8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n    '''\n) == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n    '''\n    1000\n    4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n    4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n    0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n    2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n    8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n    '''\n) == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n    '''\n    100\n    4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n    4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n    0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n    2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n    8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n    '''\n) == 'random sequence'\n\nassert solution(\n    '''\n    100\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n    1 2 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 1\") == \"0.5\"\nassert solution(\"2 1\") == \"0.5\"\nassert solution(\"2 3\") == \"1.5\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == '40.5'\nassert solution('4 2') == '30.00000000000001'\nassert solution('6 3') == '27.00000000000002'\nassert solution('4 5') == '25.81818181818181'\nassert solution('20 1') == '10.00000000000001'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1') == '40.5'\n\nassert solution('3 3') == '35'\n\nassert solution('5 1') == '50'\n\nassert solution('5 3') == '40.5'\n\nassert solution('4 1') == '44.5'"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"40.5\"\nassert solution(\"3 2\") == \"40.5\"\nassert solution(\"3 10\") == \"40.5\"\nassert solution(\"3 10.0001\") == \"40.5\"\nassert solution(\"3 1\") == \"40.5\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 10\") == \"40.5\"\nassert solution(\"4 3\") == \"40.0\"\nassert solution(\"5 4\") == \"45.0\"\nassert solution(\"4 4\") == \"45.0\"\nassert solution(\"5 5\") == \"50.0\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '40.5'\nassert solution('1 2\\n39') == '39'\nassert solution('1 2\\n1') == '0'\nassert solution('1 2\\n10') == '10'\nassert solution('2 3\\n1 2\\n39') == '39'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 1') == ''\nassert solution('1 1\\n39') == '40'\nassert solution('1 1\\n39\\n10') == '40.5'\nassert solution('1 1\\n39\\n10\\n40') == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"40.5\"\nassert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\"\nassert solution(\"3 1\\n10\\n40\") == \"40.5\"\nassert solution(\"3 1\\n10\\n3\") == \"3.0\"\nassert solution(\"3 1\\n10\\n3.1\") == \"3.1\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 40.5\n\n\"\"\"\n\nimport sys\nfrom decimal import *"
    },
    {
        "number": 3370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == '40.5'\nassert solution('3 10') == '40.0'\nassert solution('2 1') == '3.0'\nassert solution('5 2') == '4.5'\nassert solution('5 4') == '6.0'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n''') == 'Impossible'\nassert solution('''\n5 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n''') == '2011'\nassert solution('''\n4 4\n1 2 2\n1 3 3\n2 3 2\n3 4 4\n''') == '2013'\nassert solution('''\n3 4\n1 2 3\n2 3 4\n3 4 1\n''') == '2013'\nassert solution('''\n3 5\n1 2 3 4\n2 4 3 1\n2 4 3\n3 4 1\n''') == '2013'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 4 3 1') == 1\nassert solution('2 3 1 4 1') == 4\nassert solution('1 2 3 4 1') == 1\nassert solution('2 3 4 5 1') == 1\nassert solution('1 2 3 4 5') == 1\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n''') == 'Impossible'\n\nassert solution('''\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n''') == '1948'\n\nassert solution('''\n4 6\n1 2 2000\n2 3 2000\n1 3 2000\n2 4 2000\n1 4 2000\n3 4 2000\n''') == '1948'\n\nassert solution('''\n4 6\n1 2 1970\n2 3 1970\n1 3 1970\n2 4 1970\n1 4 1970\n3 4 1970\n''') == '1948'\n\nassert solution('''\n5 5\n1 2 2000\n2 3 2000\n1 3 2000\n2 4 2000\n1 4 2000\n3 4 2000\n''') == '1948'"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n2 3\\n1 3\\n2 4\\n1 4\\n3 4\\n') == '2008'\nassert solution('2 2\\n2 3\\n1 3\\n2 4\\n1 4\\n3 4\\n') == 'Impossible'\nassert solution('4 3\\n1 2 17\\n2 3 18\\n3 4 19\\n') == '1948'\nassert solution('4 3\\n1 2 17\\n2 3 18\\n3 4 19\\n') == '1948'\nassert solution('3 3\\n1 2 17\\n2 3 18\\n3 4 19\\n') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1987'\nassert solution('4 2') == '1987'\nassert solution('6 2') == '1987'\nassert solution('4 6') == '1987'\nassert solution('6 3') == '1987'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 1\n2 3 3\n1 3 2\n1 4 2\n1 5 3\n1 6 4\n2 6 4\n2 7 5\n2 8 5\n3 8 5\n3 9 6\n3 10 6\n3 11 7\n3 12 7\n3 13 8\n3 14 8\n3 15 9\n3 16 9\n3 17 10\n3 18 10\n3 19 11\n3 20 11\n3 21 12\n3 22 12\n3 23 13\n3 24 13\n3 25 14\n3 26 14\n3 27 15\n3 28 15\n3 29 16\n3 30 16\n3 31 17\n3 32 17\n3 33 18\n3 34 18\n3 35 19\n3 36 19\n3 37 20\n3 38 20\n3 39 21\n3 40 21\n3 41 22\n3 42 22\n3 43 23\n3 44 23\n3 45 24\n3 46 24\n3 47 25\n3 48 25\n3 49 26\n3 50 26\n3 51 27\n3 52 27\n3 53 28\n3 54 28\n3 55 29\n3 56 29\n3 57 30\n3 58 30\n3 59 31\n3 60 31\n3 61 32\n3 62 32\n3 63 33\n3 64 33\n3 65 34\n3 66 34\n3 67 35\n3 68 35\n3 69 36\n3 70 36\n3 71 37\n3 72 37\n3 73 38\n3 74 38\n3 75 39\n3 76 39\n3 77 40\n3 78 40\n3 79 41\n3 80 41\n3 81 42\n3 82 42\n3 83 43\n3 84 43\n3 85 44\n3 86 44\n3 87 45\n3 88 45\n3 89 46\n3 90 46\n3 91 47\n3 92 47\n3 93 48\n3 94 48\n3 95 49\n3 96 49\n3 97 50\n3 98 50\n3 99 51\n3 100 51\n3 101 52\n3 102 52\n3 103 53\n3 104 53\n3 105 54\n3 106 54\n3 107 55\n3 108 55\n3 109 56\n3 110 56\n3 111 57\n3 112 57\n3 113 58\n3 114 58\n3 115 59\n3 116 59\n3 117 60\n3 118 60\n3 119 61\n3 120 61\n3 121 62\n3 122 62\n3 123 63\n3 124 63\n3 125 64\n3 126 64\n3 127 65\n3 128 65\n3 129 66\n3 130 66\n3 131 67\n3 132 67\n3 133 68\n3 134 68\n3 135 69\n3 136 69\n3 137 70\n3 138 70\n3 139 71\n3 140 71\n3 141 72\n3 142 72\n3 143 73\n3 144 73\n3 145 74\n3 146 74\n3 147 75\n3 148 75\n3 149 76\n3 150 76\n3 151 77\n3 152 77\n3 153 78\n3 154 78\n3 155 79\n3 156 79\n3 157 80\n3 158 80\n3 159 81\n3 160 81\n3 161 82\n3 162 82\n3 163 83\n3 164 83\n3 165 84\n3 166 84\n3 167 85\n3 168 85\n3 169 86\n3 170 86\n3 171 87\n3 172 87\n3 173 88\n3 174 88\n3 175 89\n3 176 89\n3 177 90\n3 178 90\n3 179 91\n3 180 91\n3 181 92\n3 182 92\n3 183 93\n3 184 93\n3 185 94\n3 186 94\n3 187 95\n3 188 95\n3 189 96\n3 190 96\n3 191 97\n3 192 97\n3 193 98\n3 194 98\n3 195 99\n3 196 99\n3 197 100\n3 198 100\n3 199 101\n3 200 101\n3 201 102\n3 202 102\n3 203 103\n3 204 103\n3 205 104\n3 206 104\n3 207 105\n3 208 105\n3 209 106\n3 210 106\n3 211 107\n3 212 107\n3 213 108\n3 214 108\n3 215 109\n3 216 109\n3 217 110\n3 218 110\n3 219 111\n3 220 111\n3 221 112\n3 222 112\n3 223 113\n3 224 113\n3 225 114\n3 226 114\n3 227 115\n3 228 115\n3 229 116\n3 230 116\n3 231 117\n3 232 117\n3 233 118\n3 234 118\n3 235 119\n3 236 119\n3 237 120\n3 238 120\n3 239 121\n3 240 121\n3 241 122\n3 242 122\n3 243 123\n3 244 123\n3 245 124\n3 246 124\n3 247 125\n3 248 125\n3 249 126\n3 250 126\n3 251 127\n3 252 127\n3 253 128\n3 254 128\n3 255 129\n3 256 129\n3 257 130\n3 258 130\n3 259 131\n3 260 131\n3 261 132\n3 262 132\n3 263 133\n3 264 133\n3 265 134\n3 266 134\n3 267 135\n3 268 135\n3 269 136\n3 270 136\n3 271 137\n3 272 137\n3 273 138\n3 274 138\n3 275 139\n3 276 139\n3 277 140\n3 278 140\n3 279 141\n3 280 141\n3 281 142\n3 282 142\n3 283 143\n3 284 143\n3 285 144\n3 286 144\n3 287 145\n3 288 145\n3 289 146\n3 290 146\n3 291 147\n3 292 147\n3 293 148\n3 294 148\n3 295 149\n3 296 149\n3 297 150\n3 298 150\n3 299 151\n3 300 151\n3 301 152\n3 302 152\n3 303 153\n3 304 153\n3 305 154\n3 306 154\n3 307 155\n3 308 155\n3 309 156\n3 310 156\n3 311 157\n3 312 157\n3 313 158\n3 314 158\n3 315 159\n3 316 159\n3 317 160\n3 318 160\n3 319 161\n3 320 161\n3 321 162\n3 322 162\n3 323 163\n3 324 163\n3 325 164\n3 326 164\n3 327 165\n3 328 165\n3 329 166\n3 330 166\n3 331 167\n3 332 167\n3 333 168\n3 334 168\n3 335 169\n3 336 169\n3 337 170\n3 338 170\n3 339 171\n3 340 171\n3 341 172\n3 342 172\n3 343 173\n3 344 173\n3 345 174\n3 346 174\n3 347 175\n3 348 175\n3 349 176\n3 350 176\n3 351 177\n3 352 177\n3 353 178\n3"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '2007'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n') == '2007'"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 6') == '3'\nassert solution('5 7') == '4'\nassert solution('3 3 5') == 'Impossible'\nassert solution('3 3 5') == '3'\nassert solution('6 6 7') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\") == \"Impossible\"\nassert solution(\"4 3\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\") == \"1989\"\nassert solution(\"4 3\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\") == \"Impossible\"\nassert solution(\"4 2\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\") == \"Impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 0 1\\n4 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n') == '2'\nassert solution('2 0 1\\n4 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n') == 'impossible'\nassert solution('4 0 1\\n5 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n') == '3'\nassert solution('4 0 1\\n5 1 2\\nN 1 3\\nC 1 1\\n') == 'impossible'\nassert solution('2 0 1\\n4 1 2\\nN 1 3\\nC 1 1\\n') == 'impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1') == 'impossible'\nassert solution('2 1\\nC 0 1\\nC 1 1\\nC 1 2\\nC 2 2') == '3'\nassert solution('2 1\\nC 1 1\\nC 1 2\\nC 2 2') == '3'\nassert solution('1 2\\nN 1 1\\nN 2 1\\nN 1 2') == '3'\nassert solution('2 2\\nN 1 1\\nN 2 1\\nN 1 2') == '3'\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == 'impossible'\nassert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == '3'\nassert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 0''') == '2'\nassert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 0''') == '2'\nassert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == '2'\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"impossible\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"5 2 3\") == \"3\"\nassert solution(\"5 2 4\") == \"2\"\nassert solution(\"5 2 5\") == \"impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == 'impossible'\nassert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == '3'\n'''\nimport sys\nsys.setrecursionlimit(100000)"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1\") == \"impossible\"\nassert solution(\"1 0 1\") == \"impossible\"\nassert solution(\"1 1 1\") == \"impossible\"\nassert solution(\"2 2 2\") == \"impossible\"\nassert solution(\"3 4 4\") == \"2\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\\\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\"\"\") == \"impossible\"\nassert solution(\"\"\"\\\n4 0 1\nN 1 2\nN 1 3\nC 1 1\"\"\") == \"3\"\nassert solution(\"\"\"\\\n4 0 1\nN 1 2\nC 1 2\nC 1 3\nN 1 3\"\"\") == \"4\"\nassert solution(\"\"\"\\\n2 2\nN 1 2\nN 1 3\nC 1 1\"\"\") == \"impossible\"\nassert solution(\"\"\"\\\n2 2\nN 1 2\nN 1 3\nC 1 1\nN 1 3\"\"\") == \"3\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == \"impossible\"\nassert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1''') == \"3\"\nassert solution('''7 7\nC 2 7\nC 5 7\nN 1 4\nC 3 7\nN 1 6\nN 2 3\nN 3 5\nN 4 7\nN 5 6\nN 6 8\n''') == \"8\"\nassert solution('''6 6\nC 2 6\nC 5 6\nN 1 4\nC 3 6\nN 1 6\nN 2 3\nN 3 5\nN 4 7\nN 5 6\nN 6 8''') == \"6\"\nassert solution('''5 6\nC 2 6\nC 5 6\nN 1 4\nN 2 3\nN 3 5\nN 4 7\nN 5 6\nN 6 8''') == \"4\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n') == 'impossible'\nassert solution('3 0 1\\nN 1 2\\nC 2 2\\nC 1 2\\nN 1 3\\nC 1 1\\n') == '3'\nassert solution('4 0 1\\nN 2 1\\nC 1 1\\nN 1 2\\nC 1 1\\n') == '2'\nassert solution('4 0 1\\nN 2 1\\nC 2 2\\nN 1 3\\nC 2 1\\n') == '1'\nassert solution('4 0 1\\nN 1 1\\nC 2 2\\nC 1 3\\nN 2 2\\n') == 'impossible'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n(())\n()(())\n((()))\n(((()))\n()(()))\n((()))()\n()((()))\n()()()\n()()()\n''') == '10'\n\nassert solution('''\n(()\n()()\n((()\n))()\n(()\n))()\n()()()\n()()(()\n()()())\n()()(()())\n(((())))\n((()()))\n(())(())\n((()))()\n()()()\n()()()\n()()(())\n()()()\n()()(())\n()()()()\n()()()(())\n()()()()\n()()(())\n()()()()\n()()(())\n()()()()\n()()()(())\n()()()()()\n()()()()()\n()()()(())\n()()()()()\n()()()()()\n''') == '21'\n\nassert solution('''\n((\n))\n(()\n()\n()\n()\n()()\n()()(()\n()()()()\n()()()()\n(()()\n))\n())(\n((\n))\n((\n))\n((\n))\n((\n))\n()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n()()()\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('())(()') == 10\nassert solution('(()())') == 6\nassert solution('((())())((()()))') == 24\nassert solution('((())())((()()))') == 24\nassert solution('((())())((()()))') == 24\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('(()') == 10\nassert solution('())') == 6\nassert solution('(()(()))') == 4\nassert solution('())()()') == 0\nassert solution('()()(())') == 4\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ')(()'\nassert solution(stdin) == '((()'\nassert solution(stdin) == '()()'\nassert solution(stdin) == '()'\nassert solution(stdin) == '()'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''())\n((()\n)()\n(((''') == 10"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''(())''') == '()()'\nassert solution('''()()()''') == '()()()'\nassert solution('''(()())''') == '(()())'\nassert solution('''()()(()''') == '(()())'\nassert solution('''())''') == '()()'\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"(()())()\"\nassert solution(stdin) == \"()(())()\"\nassert solution(stdin) == \"(())()()\"\nassert solution(stdin) == \"()()(())\"\nassert solution(stdin) == \"()()()()\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"()\") == \"()\"\nassert solution(\"()()\") == \"(())\"\nassert solution(\"()()()\") == \"()()()\"\nassert solution(\"((())\") == \"((())\"\nassert solution(\"((()))\") == \"(()())\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"(()\") == 2\nassert solution(\"()\") == 0\nassert solution(\"())\") == 0\nassert solution(\"(()(()))\") == 6\nassert solution(\"()(())()()\") == 4\n"
    },
    {
        "number": 3373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n1\n(())\n''') == '((()'\nassert solution('''\n2\n((()))\n((()))\n''') == '((()()))'\nassert solution('''\n3\n((((()))))\n(((()())))\n((())()\n''') == '((()(()()))()('\nassert solution('''\n4\n(()((()()()\n()((())((()))\n(((()))()()((())))\n(()()()(()))()\n''') == '(((()((()()()(()())))(()))()((()())))'\n'''\nassert solution('''\n5\n(()((())()\n()((()()()\n())()((()))\n()()(((())))\n(((()))()((()()(()))\n''') == '((()((()()()()(()()(())(())))(())(()))())(()()()(()(()))()(()()()()()())(()()()()()()()()())(())(())(())(())(()())(())(()()())(())(()()())(())(()()()()()()()()())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(()"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n2\\n1 2\\n1 4\") == \"85293\"\n\"\"\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\n\nassert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '996932'\n\nassert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '996932'\n\nassert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '996932'\n\nassert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '996932'"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"85293\"\n\"\"\""
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15''') == '85293'\n\nassert solution('''1\n337 h\n337 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n1 a\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n7\n''') == '85293'\nassert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n7\n''') == '85293'\nassert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n7\n''') == '85293'\nassert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n7\n''') == '85293'\nassert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n7\n''') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n6 5\n3 2\n1 1\n''') == '85293'\nassert solution('''7\n1 3\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n7 5\n3 2\n1 1\n''') == '2934'\nassert solution('''6\n1 3\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n3 4\n4 6\n4 7\n4 9\n5 7\n5 8\n5 9\n5 10\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n6 15\n6 16\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n7 17\n7 18\n7 19\n7 20\n7 21\n7 22\n7 23\n7 24\n7 25\n7 26\n7 27\n7 28\n7 29\n7 30\n7 31\n7 32\n7 33\n7 34\n7 35\n7 36\n7 37\n7 38\n7 39\n7 40\n7 41\n7 42\n7 43\n7 44\n7 45\n7 46\n7 47\n7 48\n7 49\n7 50\n7 51\n7 52\n7 53\n7 54\n7 55\n7 56\n7 57\n7 58\n7 59\n7 60\n7 61\n7 62\n7 63\n7 64\n7 65\n7 66\n7 67\n7 68\n7 69\n7 70\n7 71\n7 72\n7 73\n7 74\n7 75\n7 76\n7 77\n7 78\n7 79\n7 80\n7 81\n7 82\n7 83\n7 84\n7 85\n7 86\n7 87\n7 88\n7 89\n7 90\n7 91\n7 92\n7 93\n7 94\n7 95\n7 96\n7 97\n7 98\n7 99\n7 100\n7 101\n7 102\n7 103\n7 104\n7 105\n7 106\n7 107\n7 108\n7 109\n7 110\n7 111\n7 112\n7 113\n7 114\n7 115\n7 116\n7 117\n7 118\n7 119\n7 120\n7 121\n7 122\n7 123\n7 124\n7 125\n7 126\n7 127\n7 128\n7 129\n7 130\n7 131\n7 132\n7 133\n7 134\n7 135\n7 136\n7 137\n7 138\n7 139\n7 140\n7 141\n7 142\n7 143\n7 144\n7 145\n7 146\n7 147\n7 148\n7 149\n7 150\n7 151\n7 152\n7 153\n7 154\n7 155\n7 156\n7 157\n7 158\n7 159\n7 160\n7 161\n7 162\n7 163\n7 164\n7 165\n7 166\n7 167\n7 168\n7 169\n7 170\n7 171\n7 172\n7 173\n7 174\n7 175\n7 176\n7 177\n7 178\n7 179\n7 180\n7 181\n7 182\n7 183\n7 184\n7 185\n7 186\n7 187\n7 188\n7 189\n7 190\n7 191\n7 192\n7 193\n7 194\n7 195\n7 196\n7 197\n7 198\n7 199\n7 200\n7 201\n7 202\n7 203\n7 204\n7 205\n7 206\n7 207\n7 208\n7 209\n7 210\n7 211\n7 212\n7 213\n7 214\n7 215\n7 216\n7 217\n7 218\n7 219\n7 220\n7 221\n7 222\n7 223\n7 224\n7 225\n7 226\n7 227\n7 228\n7 229\n7 230\n7 231\n7 232\n7 233\n7 234\n7 235\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n5\n2 4\n2 3\n3 4\n5 7\n3 1\n2 3\n1 3\n2 4\n2 1\n1 1\n3 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1 3\n2 4\n1 1\n1 1\n1"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input_1.txt\").read()) == \"4\"\nprint(solution(open(\"input.txt\").read()))\n"
    },
    {
        "number": 3374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'\nassert solution('2\\n1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n1\\n') == '0'\nassert solution('3\\n1\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5'\nassert solution('2 3\\n2 3\\n') == '3'\nassert solution('2 3\\n1 2\\n1 3\\n2 3\\n') == '1'\nassert solution('2 3\\n1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n') == '1'\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4\\n5') == '5'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17') == '3'\nassert solution('4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '3'\nassert solution('4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '3'\nassert solution('4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5'\nassert solution('2 2\\n1 2\\n') == '1'\nassert solution('1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5'\nassert solution('3 2\\n1 2\\n1 3\\n2 3\\n') == '0'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '0'\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\nassert solution('''4 5\n1 2\n1 3\n2 3\n2 4\n1 4\n2 4''') == '5'\nassert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4\n3 4\n1 2\n3 4''') == '6'\nassert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4\n3 4\n2 4\n1 4\n2 4''') == '6'\nassert solution('''5 5\n1 2\n1 3\n2 3\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n3 4\n1 4\n2 4\n1 4\n2 4\n3 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n3 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n3 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"5\"\nassert solution(\"3\\n2\\n1\\n3\") == \"2\"\nassert solution(\"2\\n2\\n1\\n2\") == \"3\"\nassert solution(\"2\\n2\\n1\\n3\\n3\\n4\") == \"1\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\nassert solution(\"3 5\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\") == \"5\"\nassert solution(\"3 5\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n5 6\\n5 6\") == \"5\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n6 7\") == \"5\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 4\") == \"\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == str(5)\n'''\n"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1 2\\n1 3\\n2 3\") == \"5\"\nassert solution(\"1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\") == \"1\"\nassert solution(\"1 2\\n2 1\") == \"1\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 elephant\n500 elephant\n1000 elephant\n1500 cat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '70000'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 elephant\n500 elephant\n1000 elephant\n1500 cat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '70000'\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 elephant\n500 elephant\n1000 elephant\n1500 cat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '70000'\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n') == '0'\nassert solution('1\\n2\\n3\\n') == '4'\nassert solution('1\\n2\\n3\\n') == '12'\nassert solution('2\\n1\\n2\\n') == '4'\nassert solution('2\\n2\\n2\\n') == '6'\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5100\"\n'''\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n') == '5100'\n'''\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n3\n0 rat\n500 rat\n1000 rat\n1500 bat\n2000 bat\n2500 bat\n3000 bat\n3\n0 mouse\n500 mouse\n1000 mouse\n1500 mouse\n2000 mouse\n2500 mouse\n3000 mouse\n3\n0 rabbit\n500 rabbit\n1000 rabbit\n1500 rabbit\n2000 rabbit\n2500 rabbit\n3000 rabbit\n3\n0 rabbit\n500 rabbit\n1000 rabbit\n1500 rabbit\n2000 rabbit\n2500 rabbit\n3000 rabbit\n3\n0 caterpillar\n500 caterpillar\n1000 caterpillar\n1500 caterpillar\n2000 caterpillar\n2500 caterpillar\n3000 caterpillar\n3\n0 mouse\n500 mouse\n1000 mouse\n1500 mouse\n2000 mouse\n2500 mouse\n3000 mouse\n3\n0 elephant\n500 elephant\n1000 elephant\n1500 elephant\n2000 elephant\n2500 elephant\n3000 elephant\n3\n0 mouse\n500 mouse\n1000 mouse\n1500 mouse\n2000 mouse\n2500 mouse\n3000 mouse\n3\n0 rabbit\n500 rabbit\n1000 rabbit\n1500 rabbit\n2000 rabbit\n2500 rabbit\n3000 rabbit\n3\n0 elephant\n500 elephant\n1000 elephant\n1500 elephant\n2000 elephant\n2500 elephant\n3000 elephant\n3\n0 mouse\n500 mouse\n1000 mouse\n1500 mouse\n2000 mouse\n2500 mouse\n3000 mouse\n3\n0 rabbit\n500 rabbit\n1000 rabbit\n1500 rabbit\n2000 rabbit\n2500 rabbit\n3000 rabbit\n3\n0 bat\n500 bat\n1000 bat\n1500 bat\n2000 bat\n2500 bat\n3000 bat\n3\n0 rabbit\n500 rabbit\n1000 rabbit\n1500 rabbit\n2000 rabbit\n2500 rabbit\n3000 rabbit\n3\n0 rabbit\n500 rabbit\n1000 rabbit\n1500 rabbit\n2000 rabbit\n2500 rabbit\n3000 rabbit\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 bat\n500 bat\n1000 bat\n1500 bat\n2000 bat\n2500 bat\n3000 bat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500 rat\n3000 rat\n3\n0 rat\n500 rat\n1000 rat\n1500 rat\n2000 rat\n2500"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_data/problem_2.txt\").read()) == \"1785\"\nassert solution(open(\"test_data/problem_2.txt\").read()) == \"0\"\nassert solution(open(\"test_data/problem_3.txt\").read()) == \"1498\"\nassert solution(open(\"test_data/problem_4.txt\").read()) == \"4782\"\nassert solution(open(\"test_data/problem_5.txt\").read()) == \"9385\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input.txt\").read()))\n\"\"\"\nfrom collections import defaultdict\nfrom functools import lru_cache\n\nfrom sys import maxsize as MAX_INT\nfrom itertools import product"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/problem237_p1.txt\").read()))\n"
    },
    {
        "number": 3376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly''') == '5100'\n\nassert solution('''5\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly''') == '5100'\n\nassert solution('''5\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n3 cat 1\n4 cat\n5 cat\n6 cat\n7 cat\n8 cat\n9 cat\n10 cat\n''') == '90000'\n\nassert solution('''7\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n3 cat 1\n4 cat\n5 cat\n6 cat\n7 cat\n8 cat\n9 cat\n10 cat\n''') == '3000000'\n\nassert solution('''7\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n3 cat 1\n4 cat\n5 cat\n6 cat\n7 cat\n8 cat\n9 cat\n10 cat\n11 cat\n12 cat\n13 cat\n14 cat\n15 cat\n16 cat\n17 cat\n18 cat\n19 cat\n20 cat\n21 cat\n22 cat\n23 cat\n24 cat\n25 cat\n26 cat\n27 cat\n28 cat\n29 cat\n30 cat\n31 cat\n32 cat\n33 cat\n34 cat\n35 cat\n36 cat\n37 cat\n38 cat\n39 cat\n40 cat\n41 cat\n42 cat\n43 cat\n44 cat\n45 cat\n46 cat\n47 cat\n48 cat\n49 cat\n50 cat\n51 cat\n52 cat\n53 cat\n54 cat\n55 cat\n56 cat\n57 cat\n58 cat\n59 cat\n60 cat\n61 cat\n62 cat\n63 cat\n64 cat\n65 cat\n66 cat\n67 cat\n68 cat\n69 cat\n70 cat\n71 cat\n72 cat\n73 cat\n74 cat\n75 cat\n76 cat\n77 cat\n78 cat\n79 cat\n80 cat\n81 cat\n82 cat\n83 cat\n84 cat\n85 cat\n86 cat\n87 cat\n88 cat\n89 cat\n90 cat\n91 cat\n92 cat\n93 cat\n94 cat\n95 cat\n96 cat\n97 cat\n98 cat\n99 cat\n100 cat\n101 cat\n102 cat\n103 cat\n104 cat\n105 cat\n106 cat\n107 cat\n108 cat\n109 cat\n110 cat\n111 cat\n112 cat\n113 cat\n114 cat\n115 cat\n116 cat\n117 cat\n118 cat\n119 cat\n120 cat\n121 cat\n122 cat\n123 cat\n124 cat\n125 cat\n126 cat\n127 cat\n128 cat\n129 cat\n130 cat\n131 cat\n132 cat\n133 cat\n134 cat\n135 cat\n136 cat\n137 cat\n138 cat\n139 cat\n140 cat\n141 cat\n142 cat\n143 cat\n144 cat\n145 cat\n146 cat"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '6'\nassert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '1'\nassert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '6'\nassert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '1'\nassert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '6'\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8') == '6'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8') == '-1'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n9') == '-1'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8') == '-1'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8') == '-1'\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"input/sample5.txt\", \"r\").read()) == \"6\"\nassert solution(open(\"input/sample3.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"input/sample1.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"input/sample2.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input/sample4.txt\", \"r\").read()) == \"0\""
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open('test_input.txt').read()) == '6'\nassert solution(open('test_input2.txt').read()) == '1'\nassert solution(open('test_input3.txt').read()) == '-1'\nassert solution(open('test_input4.txt').read()) == '1'\nassert solution(open('test_input5.txt').read()) == '6'\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '6'\nassert solution(\n'''\n10\n0\n1 1\n1 1\n2 2 3\n1 4\n2 2 3\n3 3 4\n1 1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('''5\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\n'''\nYou are given an integer $n$ and a string $s$ of length $n$. The string is made of $n$ different words, each word consisting of a lowercase letter. The string is constructed by connecting adjacent words in the order they appear in the string.\n\nYou have to find the word which occurs at least $n // 2$ times and is the longest.\n\nFor example, the string given above is\n\n$\"a b c d e e e d a d c d a c e d a d c\"$.\n\nThe word a occurs $4$ times, and the word e occurs $7$ times. Therefore, the word with the longest length is $\"e\".\n\nThe string has an even length. The middle character is \"d\". Therefore, it is not possible to find a word with a length of $5$ (since $4$ is the minimum length), but it is possible to find a word of length $6$ if you include the character \"d\".\n\nThus, the answer is the word e.\n\nInput\nThe first line contains an integer $n$, the number of words in the string. The next line contains a string consisting of space separated lowercase letters, the string itself.\n\nOutput\nPrint the word found.\n\nExample\nSample Input:\n4\na a a a\nSample Output:\na\n'''\n"
    },
    {
        "number": 3377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input1.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"test_input2.txt\", \"r\").read()) == \"6\"\nassert solution(open(\"test_input3.txt\", \"r\").read()) == \"0\"\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\nimport re"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == 10\n\"\"\"\n\nn, d = map(int, stdin.readline().strip().split())\nairfare = [tuple(map(int, stdin.readline().strip().split())) for _ in range(d)]"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"10\"\n\nassert solution(\n    \"\"\"3 3\n1 2 3\n2 1 3\n3 1 2\n1 3 2\n1 2 3\n2 1 3\n2 3 1\n3 2 1\n3 1 2\n1 3 2\n1 2 3\n3 2 1\n1 2 3\n2 1 3\n2 3 1\n3 1 2\n2 3 1\n3 1 2\n3 1 2\n2 3 1\n2 3 1\n3 1 2\n3 1 2\n2 3 1\n2 3 1\n3 1 2\n3 1 2\n3 1 2\n2 3 1\n2 3 1\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n2 3 1\n2 3 1\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3 1 2\n3"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '10'\nassert solution(\n'''1 1\n1 1\n2 1 2\n2 2 2\n4''') == '3'\nassert solution(\n'''1\n1\n2\n2\n3\n3''') == '2'\nassert solution(\n'''2\n1 2 2\n1 2 3\n2 1 3\n2 1 2\n4''') == '2'\nassert solution(\n'''1\n1\n1\n1\n1\n1\n1''') == '2'\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '10'\nassert solution('''1 2 1 2 1\n2\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '10'\nassert solution('''1 2 1 2 1\n2\n1 2 O 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n3\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n3\n1 2 O 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '8'\nassert solution('''1 2 1 2 1\n2\n1 2 O 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n3\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n3\n1 2 O 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '6'\nassert solution('''1 2 1 2 1\n2\n1 2 O 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n3\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n3\n1 2 O 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '5'\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\nassert solution('''10 11\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1 1 R 5\n1 1 O 3\n1 1 O 3\n1"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"25\"\n\"\"\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 1 2 1\") == \"1\"\nassert solution(\"2 5\") == \"\"\nassert solution(\"1 2 1 2 1\") == \"1\"\nassert solution(\"2 5\") == \"\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4\\n1 2 O 1 2 O\\n2 1 O 1 2 O\\n1 2 O 1 2 O\\n1 2 O 1 2 O\\n1 2 O 1 2 O\\n2 1 O 1 2 O\\n1 2 R 1 2 R\\n2 1 R 1 2 R\\n1 2 R 1 2 R\\n1 2 R 1 2 R\\n1 2 O 1 2 O\\n2 1 O 1 2 O') == '20'\nassert solution('1 1\\n2 2\\n3 3\\n4 4') == '12'\nassert solution('2 2\\n1 1 1\\n2 2 2') == '4'\nassert solution('3 4\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3') == '18'\nassert solution('2 2\\n1 1 1\\n2 2 2 2') == '4'\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 2\\n1 2\\n1 2\") == \"1\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n0 3\\n1 2\") == \"0\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n3 1\\n2 0\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\\n1\\n2\\n3\\n4\\n5\\n6\") == \"0\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n\n-----\nimport sys"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"3.test.txt\", \"r\").read()) == \"2\"\n\"\"\"\n\nfrom collections import defaultdict\n\nn, m = [int(x) for x in stdin.readline().split()]\nadj = defaultdict(set)\n\nfor _ in range(m):\n    x, y = [int(x) for x in stdin.readline().split()]\n    adj[x].add(y)\n\nvisited = set()\ncurr_level = set([x for x in range(n) if x not in visited])"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n0 1\n1 2\n2 3\n0 2\n1 3\n2 3\n''') == '1'\nassert solution('''4 4\n0 1\n0 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '2'\nassert solution('''5 6\n0 1\n1 2\n2 3\n3 4\n4 5\n0 1\n1 2\n2 3\n2 4\n3 4\n''') == '3'\n'''\n\n'''\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n0 1\n1 2\n2 3\n''') == '1'\nassert solution('''\n4 4\n0 1\n1 2\n2 3\n3 4\n''') == '3'\nassert solution('''\n5 2\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '2'\nassert solution('''\n8 4\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '2'\nassert solution('''\n7 4\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '3'\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n0 1\n1 2\n2 3\n''') == '1'\nassert solution('''4 3\n0 1\n1 2\n2 3\n3 0\n''') == '1'\nassert solution('''6 4\n0 1\n0 2\n1 3\n2 4\n3 5\n4 5\n''') == '1'\nassert solution('''6 4\n0 1\n0 2\n1 3\n2 4\n2 5\n4 5\n''') == '2'\nassert solution('''6 4\n0 1\n0 2\n1 3\n2 4\n2 5\n4 5\n1 4\n''') == '2'\n"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n\nstdin = \"\"\"4 3\n0 1\n1 2\n2 3\n4 3\n1 3\n2 4\n0 1\n1 2\n2 3\n3 4\n1 4\n1 3\n0 2\n1 4\n0 3\n0 4\n0 1\n1 2\n2 3\n3 4\n\"\"\""
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n'''"
    },
    {
        "number": 3379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 4') == '1'\nassert solution('1 2\\n3 2') == '2'\nassert solution('1 2\\n2 3') == '1'\nassert solution('1 2\\n1 3') == '1'\nassert solution('1 2\\n1 1') == '2'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n'''\n) == '0.96296296296'\n\nassert solution(\n'''5\n'''\n) == '0.82708270827'\n\nassert solution(\n'''7\n'''\n) == '0.764285714286'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n') == '0.96296296296'\nassert solution('4\\n') == '0.96296296296'\nassert solution('4\\n') == '0.96296296296'\nassert solution('3\\n') == '0.48648648648'\nassert solution('3\\n') == '0.48648648648'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4') == '0.962962962963'\nassert solution('2') == '0.5'\nassert solution('5') == '0.242424242424'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.96296296296\"\n\"\"\"\n\n\n\"\"\"\nThis problem can be solved using probability:\nA road network is connected if there is a 1/N chance of it being connected. The probability of a road network being connected is given by the formula:\nP(connected) = (1 - e^(-N/2))/2\nBy rearranging the terms we get:\nP(connected) = 1 - e^(-N/2) = 1 - e^(-N/2 + N)\nP(connected) = 1 - e^(-N/2 + N/2)\nP(connected) = 1 - e^(-N/2 + N/2 + N) = 1 - e^(-2*N/2 + N) = (1 - e^(-2*N/2))/2\n\"\"\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4\n4\n1\n1\n2\n3\n3\n2\n2\n1\n\"\"\") == \"0.962962962963\"\n\nassert solution(\"\"\"5\n5\n2\n1\n1\n1\n2\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"0.962962962963\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1') == '0.0'\nassert solution('2') == '0.0'\nassert solution('3') == '0.0'\nassert solution('4') == '0.16666666666666666'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n\"\"\") == \"0.96296296296\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n'\n                '3\\n'\n                '2\\n'\n                '1\\n'\n                '0') == '0.962962962963'\nassert solution('4\\n'\n                '1\\n'\n                '0\\n'\n                '1\\n'\n                '1') == '1.00000'\nassert solution('4\\n'\n                '1\\n'\n                '0\\n'\n                '1\\n'\n                '1\\n'\n                '2') == '0.99999'\nassert solution('4\\n'\n                '3\\n'\n                '2\\n'\n                '1\\n'\n                '0') == '0.93393'\nassert solution('4\\n'\n                '2\\n'\n                '3\\n'\n                '2\\n'\n                '2') == '0.98999'\n"
    },
    {
        "number": 3380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0.96296296296\"\nassert solution(\"5\") == \"0.9558889558889\"\nassert solution(\"5 10\") == \"0.94545454545455\"\nassert solution(\"5 10 1\") == \"0.95105651629541\"\nassert solution(\"5 10 2\") == \"0.93975903614458\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '''0 0\n40000000 0\n0 40000000'''\nassert solution('''10''') == '''0 0\n0 40000000\n40000000 0\n40000000 0\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000'''\nassert solution('''25''') == '''0 0\n0 40000000\n40000000 0\n40000000 0\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n0 80000000\n40000000 80000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000'''\nassert solution('''100''') == '''0 0\n0 40000000\n40000000 0\n40000000 0\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n0 80000000\n40000000 80000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000'''\nassert solution('''250''') == '''0 0\n0 40000000\n40000000 0\n40000000 0\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n0 80000000\n40000000 80000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000\n80000000 0\n80000000 40000000\n0 80000000\n40000000 80000000'''\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(\"4\\n\") == \"0 0\\n0 40000000\\n40000000 0\\n0 0\"\nassert solution(\"5\\n\") == \"0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\"\nassert solution(\"6\\n\") == \"0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\"\nassert solution(\"7\\n\") == \"0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\\n0 0\\n0 40000000\\n40000000 0\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n') == '0 0'\nassert solution('1\\n') == '0 0'\nassert solution('2\\n') == '0 0'\nassert solution('3\\n') == '0 0'\nassert solution('4\\n') == '0 0'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 4 5 6 7 8 9\n2 4 6 8\n1 2 3 4 5 6 7 8 9''') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('''3\n3 4 5 6 7 8 9\n2 4 6 8\n0 1 2 3 4 5 6 7 8 9''') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('''3\n3 4 5 6 7 8 9\n2 4 6 8\n0 0 1 2 3 4 5 6 7 8 9''') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('''3\n3 4 5 6 7 8 9\n2 4 6 8\n0 0 1 2 3 4 5 6 7 8 9''') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('''3\n3 4 5 6 7 8 9\n2 4 6 8\n0 0 1 2 3 4 5 6 7 8 9''') == '0 0\\n40000000 0\\n0 40000000'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '''0 0\n40000000 0\n0 40000000'''\n\nassert solution('''5''') == '''0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2\n3 0\n3 1\n3 2\n4 0\n4 1\n4 2'''\n\nassert solution('''8''') == '''0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 0\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 0\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n4 0\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n5 0\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n6 0\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n7 0\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7'''\n\nassert solution('''10''') == '''0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 0\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 0\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 0\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 0\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n6 0\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n7 0\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n8 0\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n9 0\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n10 0\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10'''\n\nassert solution('''10000''') == '''0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 0\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 0\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 0\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 0\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n6 0\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n7 0\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n8 0\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n9 0\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n10 0\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10'''"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '0 0'\nassert solution('''4''') == '0 40000000'\nassert solution('''10''') == '0 0'\nassert solution('''11''') == '0 40000000'\nassert solution('''12''') == '0 40000000'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0\\n40000000 0\\n0 40000000') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('2\\n2\\n2') == '0 0\\n0 40000000\\n40000000 0\\n0 40000000\\n40000000 0'\nassert solution('2\\n2\\n2\\n2\\n2') == '0 0\\n0 40000000\\n40000000 0\\n0 40000000\\n0 40000000\\n40000000 0\\n40000000 40000000'\nassert solution('3\\n3\\n3') == '0 0\\n0 40000000\\n40000000 0\\n40000000 0'\nassert solution('3\\n3\\n3\\n3\\n3') == '0 0\\n0 40000000\\n40000000 0\\n40000000 0\\n40000000 0\\n0 40000000\\n40000000 40000000'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == '0 0'\nassert solution('1') == '4000000 4000000'\nassert solution('2') == '0 0'\nassert solution('3') == '40000000 0'\n"
    },
    {
        "number": 3381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3\n''') == '''\n0 0\n40000000 0\n0 40000000\n'''\n\nassert solution(\n'''\n4\n''') == '''\n0 0\n0 40000000\n40000000 0\n40000000 40000000\n'''\n\nassert solution(\n'''\n8\n''') == '''\n0 0\n0 40000000\n40000000 0\n40000000 40000000\n0 40000000\n40000000 40000000\n0 0\n40000000 40000000\n'''\n\nassert solution(\n'''\n6\n''') == '''\n0 0\n0 40000000\n40000000 0\n40000000 40000000\n0 40000000\n40000000 40000000\n'''\n\nassert solution(\n'''\n10\n''') == '''\n0 0\n0 40000000\n40000000 0\n40000000 40000000\n0 40000000\n40000000 40000000\n0 0\n40000000 40000000\n0 40000000\n40000000 40000000\n'''\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(\"1 5 2 3\") == \"1\"\nassert solution(\"3 5 2 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"0\"\nassert solution(\"3 4 4 9\") == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('5 3 5 2') == '1'\nassert solution('5 5 5 2') == '1'\nassert solution('5 5 5 5') == '0'\nassert solution('5 5 5 1') == 'impossible'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5 5 2') == 1\nassert solution('3 5 5 2') == 'impossible'\nassert solution('1 2 2 1') == '1'\nassert solution('2 1 2 2 1 2 2 2 1 1 2 1 2 1 1 1 1 2 1 2 1 2 2 1 2 2 2 1 1 1 1 1 1 2 1 2 2 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n-----\n\n## Testcases\n\n## Testcase 1\ntest.assert_equals(solution('3 5 5 2'), '1', 'incorrect solution')\n\n## Testcase 2\ntest.assert_equals(solution('6 2 5 3'), '2', 'incorrect solution')\n\n## Testcase 3\ntest.assert_equals(solution('2 2 2 2'), 'impossible', 'incorrect solution')\n\n## Testcase 4\ntest.assert_equals(solution('2 2 2 2'), 'impossible', 'incorrect solution')\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"1 4 5 7\") == \"2\"\nassert solution(\"1 5 7 1\") == \"impossible\"\nassert solution(\"3 9 8 8\") == \"impossible\"\nassert solution(\"3 9 8 7\") == \"1\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5 6') == '3'\nassert solution('1 2 3 4 5 6 7') == '4'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('2 3 4 9') == '2'\nassert solution('2 3 4 2') == 'impossible'\nassert solution('2 3 4 6') == '2'\nassert solution('2 3 5 5') == 'impossible'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"2\"\nassert solution(\"2 3 4\") == \"impossible\"\nassert solution(\"5 5 5 2\") == \"impossible\"\nassert solution(\"3 3 5 5 2\") == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1 1') == '1'\nassert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '4'\nassert solution('1 2 2 2') == '2'\nassert solution('3 3 3 3') == '3'\n"
    },
    {
        "number": 3382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '1*2+3*4'\nassert solution('3 5 5 2') == '3+5*5+2'\nassert solution('3 5 5 2') == '3+5+5+2'\nassert solution('3 5 5 2') == '3+5+5-2'\nassert solution('3 5 5 2') == '3*5+5*5+2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5 5 3\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '2'\nassert solution('''\n5 1 1\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '1'\nassert solution('''\n1 1 1\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '0'\nassert solution('''\n5 1 1\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '0'\nassert solution('''\n1 1 1\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.00\"\nassert solution(stdin) == \"2.00\"\nassert solution(stdin) == \"0.02\"\nassert solution(stdin) == \"1.96\"\nassert solution(stdin) == \"2.00\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n-1 -1 -1''') == '0'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n-1 -1 -1''') == '0'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n-1 -1 -1\n0 0 0\n-1 -1 -1\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n-1 -1 -1''') == '0'\nassert solution('''20 3 5 5\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -10 -10\n-10 -"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\n\nassert solution('''20 4 3 8\n3 1 3 2\n0 -5 -5\n0 0 0\n-1 0 0\n5 0 0\n0 0 0\n0 0 0\n3 3 3 3''') == '1'\n\nassert solution('''20 4 5 5\n3 1 3 2\n0 0 0\n-1 -1 -1\n-1 -1 -1\n1 0 0\n0 0 0\n0 0 0\n3 3 3 3''') == '0'\n'''\n-----Alternate-----\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == \"2\"\n\nassert solution('''100 100 100 100 100\n100 10 10 10 10 10\n100 10 10 10 10 10\n100 10 10 10 10 10\n100 10 10 10 10 10\n100 10 10 10 10 10\n100 10 10 10 10 10\n100 10 10 10 10 10\n100 10 10 10 10 10\n100 10 10 10 10 10\n100 10 10 10 10 10\n100 10 10 10 10 10\n100 10 10 10 10 10''') == \"0\"\n\nassert solution(\n'''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == \"2\"\n\nassert solution(\n'''10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n''') == \"0\"\n\nassert solution(\n'''10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n''') == \"0\""
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''100 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0'\nassert solution('''100 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0'\nassert solution('''20 3 5 5\n1 1 0\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20 3 5 5''') == '0.500000'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0.500000'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0.500000'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0.500000'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0.500000'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''30 1 5 5\n0 0 0\n0 0 0\n0 0 0\n0 0 0''') == '2'\nassert solution('''30 1 5 5\n0 0 0\n0 0 0\n0 0 0\n0 0 0''') == '2'\nassert solution('''30 1 5 5\n0 0 0\n-5 0 0\n0 0 0\n0 0 0\n0 0 0''') == '0.5'\nassert solution('''30 1 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n0 0 0''') == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '12'\nassert solution('''8''') == '12 14'\nassert solution('''811''') == '12 14'\nassert solution('''124''') == '12 14'\nassert solution('''12411''') == '12 14'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(12) == \"12 14\"\nassert solution(13) == \"12 14\"\nassert solution(14) == \"12 14\"\nassert solution(16) == \"12 14\"\nassert solution(17) == \"12 14\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"13\") == \"12 14\"\nassert solution(\"123\") == \"12 3\"\nassert solution(\"1231\") == \"123 1\"\nassert solution(\"987654321\") == \"9 9\"\nassert solution(\"987654\") == \"9 9\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"11\"\nassert solution(\"11\") == \"12\"\nassert solution(\"12\") == \"13\"\nassert solution(\"13\") == \"12\"\nassert solution(\"101101\") == \"1011011\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(13) == \"12 14\"\nassert solution(1) == \"1\"\nassert solution(10) == \"1 9\"\nassert solution(11) == \"10 9\"\nassert solution(12) == \"11 9\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('999999999') == '999999991 999999990'\nassert solution('1234') == '1234'\nassert solution('12347') == '12345'\nassert solution('123467') == '1234567'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(\"13\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1234\") == \"\"\nassert solution(\"10110\") == \"\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('abcdefghijklmnopqrstuvwxyz') is None\nassert solution('a1') == 'a1'\nassert solution('a10') == 'a10'\nassert solution('a100') == 'a100'\n"
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1\n\"\"\") == \"12\"\n\nassert solution(\n\"\"\"\n0\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n10\n\"\"\") == \"12\"\n\nassert solution(\n\"\"\"\n13\n\"\"\") == \"12\"\n\nassert solution(\n\"\"\"\n12\n\"\"\") == \"12\""
    },
    {
        "number": 3384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''13''') == '12 14'\nassert solution('''123456789''') == '1234 5678'\nassert solution('''7399243913''') == '7629243923'\nassert solution('''2352134980''') == '2439134978'\nassert solution('''6498163749''') == '6549163748'\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\nassert solution('''\n6\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n4 0 1\n''') == '2'\nassert solution('''\n9\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n4 0 1\n''') == '6'\nassert solution('''\n15\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n4 0 1\n''') == '8'\nassert solution('''\n20\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n4 0 1\n''') == '16'\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_files/Y11R5P1/A.in\").read()) == \"0\"\nassert solution(open(\"test_files/Y11R5P1/B.in\").read()) == \"2\"\nassert solution(open(\"test_files/Y11R5P1/C.in\").read()) == \"8\"\nassert solution(open(\"test_files/Y11R5P1/D.in\").read()) == \"2\"\nassert solution(open(\"test_files/Y11R5P1/E.in\").read()) == \"3\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"3\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"3\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"3\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"3\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\nassert solution('''\n7\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n3 0 1\n3 0 1\n3 0 1\n''') == '3'\nassert solution('''\n6\n2 2 1\n1 2 3\n1 1 3\n2 2 2\n1 2 3\n1 1 3\n''') == '3'\nassert solution('''\n5\n2 2 1\n1 2 3\n1 1 3\n2 2 2\n1 2 3\n1 1 3\n''') == '0'\nassert solution('''\n6\n2 2 1\n1 2 3\n1 1 3\n2 2 2\n1 2 3\n1 1 3\n1 1 3\n''') == '3'\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\nassert solution('''\n10\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n3 0 2\n3 0 3\n3 0 4\n3 0 5\n3 0 6\n3 0 7\n3 0 8\n3 0 9\n''') == '1'\nassert solution('''\n9\n0 0 0\n1 0 1\n2 0 1\n2 0 2\n2 0 3\n2 0 4\n2 0 5\n2 0 6\n2 0 7\n2 0 8\n''') == '0'\nassert solution('''\n5\n1 0 0\n1 0 1\n2 0 1\n2 0 2\n2 0 3\n''') == '1'\nassert solution('''\n10\n0 0 0\n1 0 1\n2 0 1\n2 0 2\n2 0 3\n2 0 4\n2 0 5\n2 0 6\n2 0 7\n2 0 8\n2 0 9\n2 0 10\n''') == '1'\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1''') == '0'\nassert solution(\n'''8\n1 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0''') == '1'\nassert solution(\n'''8\n1 0 1\n2 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0''') == '0'\nassert solution(\n'''8\n1 0 1\n2 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0''') == '0'\nassert solution(\n'''8\n1 0 1\n2 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0''') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1''') == '0'\nassert solution('''10\n1 0 1\n2 0 1\n3 0 1\n3 0 0\n3 0 1\n3 0 2\n5 0 1\n5 0 2\n5 0 3\n5 0 4\n5 0 5''') == '8'\nassert solution('''5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1''') == '2'\nassert solution('''5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n3 0 2\n3 0 3\n3 0 4\n3 0 5''') == '4'\nassert solution('''5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n3 0 2\n3 0 3\n3 0 4\n3 0 5''') == '4'\n"
    },
    {
        "number": 3385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\\\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\nassert solution('''\\\n6\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n3 0 1\n3 0 0\n3 0 1\n''') == '2'\nassert solution('''\\\n7\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n3 0 1\n3 0 0\n3 0 1\n''') == '3'\nassert solution('''\\\n2\n1 0 1\n2 0 1\n''') == '2'\nassert solution('''\\\n3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '4'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3''') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\nassert solution('''1 1''') == '''1 1'''\nassert solution('''2 2''') == '''-1'''\nassert solution('''3 3''') == '''-1'''\nassert solution('''4 4''') == '''-1'''\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0 0') == ''\nassert solution('1 2') == '1 1'\nassert solution('2 1') == '1 1'\nassert solution('1 1') == '1 1'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1 1'\nassert solution('1 2') == '2 2'\nassert solution('1 1') == '1 1'\nassert solution('1 2') == '2 2'\nassert solution('1 2') == '1 2'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\"\nassert solution(\"1 2\") == \"1 2\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('3 5') == '1 1\\n2 2\\n3 3\\n4 4\\n3 5\\n2 4\\n1 3\\n2 5\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\n4 3\\n3 2\\n2 1\\n1 5\\n4 2\\n1 3\\n2 4\\n1 2\\n5 4\\"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\n\"\"\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3''') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('''3 4''') == '1 1\\n2 2\\n3 3\\n'\nassert solution('''5 5''') == '1 1\\n2 2\\n3 3\\n4 4\\n'\nassert solution('''10 10''') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n'\nassert solution('''20 10''') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3\") == \"1 1\"\nassert solution(\"2 3\") == \"1 1\"\nassert solution(\"4 4\") == \"1 1\"\nassert solution(\"4 6\") == \"1 1\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3''') == '1 1'\nassert solution('''1 2''') == '1 1'\nassert solution('''1 2\n2 3''') == '1 1'\nassert solution('''1 2\n2 3\n3 4\n4 5''') == '1 1'\nassert solution('''1 1\n1 2\n2 3''') == '1 1'\n"
    },
    {
        "number": 3386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2\n2 3''') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('''3 2\n3 2''') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('''3 3\n2 1\n1 1''') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('''10 10\n3 3\n2 3\n2 2\n4 1\n4 4\n7 1\n7 4\n7 7\n3 4\n3 7\n1 5\n1 8\n1 9\n2 3\n2 4\n3 2\n3 4\n4 5\n4 6\n4 7\n4 8\n5 4\n5 6\n5 7\n5 8\n6 5\n6 8\n7 5\n7 7\n7 8\n7 9\n8 5\n8 7\n8 8\n8 9\n9 5\n9 6\n9 7\n9 8''') == '1 1\\n2 2\\n3 3\\n4 1\\n4 4\\n5 1\\n5 4\\n5 5\\n5 8\\n5 9\\n6 1\\n6 4\\n7 1\\n7 4\\n7 5\\n7 8\\n7 9\\n8 1\\n8 4\\n8 5\\n8 6\\n8 7\\n8 8\\n8 9\\n9 1\\n9 4\\n9 5\\n9 6\\n9 7\\n9 8\\n9 9'\nassert solution('''10 10\n5 5\n2 3\n4 4\n2 4\n2 3\n3 4\n3 2\n4 4\n2 3\n4 4\n2 3\n1 1\n1 3\n1 4\n1 2\n2 1\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 3\n3 1\n3 4\n3 2\n3 5\n3 6\n3 7\n3 8\n3 9\n4 2\n4 1\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n5 4\n5 3\n5 1\n5 2\n5 6\n5 7\n5 8\n5 9\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n7 2\n7 1\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8''') == '1 1\\n2 2\\n3 3\\n4 1\\n4 4\\n5 1\\n5 4\\n5 5\\n5 8\\n5 9\\n6 1\\n6 4\\n7 1\\n7 4\\n7 5\\n7 8\\n7 9\\n8 1\\n8 4\\n8 5\\n8 6\\n8 7\\n8 8\\n8 9\\n9 1\\n9 4\\n9 5\\n9 6\\n9 7\\n9 8\\n9 9'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 10\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('''1 10\n1 1 1\n1 1 1\n1 1 1''') == '1.0000\\n1.0000\\n1.0000'\nassert solution('''1 10\n1 1 1\n0 10 1\n0 10 1''') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('''1 10\n1 1 1\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('''1 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333\\n3.33333333\\n3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333'\nassert solution('10 1000000\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1') == '9.99999'\nassert solution('1000000000000000000\\n
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''0 10 1\n0 10 1\n0 10 1'''\n    ) == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution(\n'''1 10 1\n0 10 1\n0 10 1\n0 10 1'''\n    ) == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution(\n'''5 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1'''\n    ) == '3.5\\n3.5\\n3.5\\n'\nassert solution(\n'''100 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1'''\n    ) == '3.5\\n3.5\\n3.5\\n'\nassert solution(\n'''1 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1'''\n    ) == '3.5\\n3.5\\n3.5\\n'\n\n-----Idea-----\nThe idea is simple:\n\nThe bandwidth $t$ is the sum of the demands $d_ i$.\n\nThe demand ratio $d_ i$ is the ratio of the demand of species $i$ compared to the total demand.\n\nA bandwidth $x_ i$ is the bandwidth allocated for downloading pictures of the $i$-th species.\n\nThe value $\\sum _{i=1}^{n} \\frac{(x_ i - y_ i)^2}{y_ i}$ is the sum of squares of differences between the demand ratio and the fair share.\n\nSince the value of $\\sum _{i=1}^{n} \\frac{(x_ i - y_ i)^2}{y_ i}$ can be computed as $t \\cdot \\frac{d_ i}{\\sum _{j=1}^{n} d_ j}$ (see the formular below),\n\nfor any given bandwidth $x_ i$ the value of $\\sum _{i=1}^{n} \\frac{(x_ i - y_ i)^2}{y_ i}$ should be as small as possible.\n\nThe minimum absolute value of $\\sum _{i=1}^{n} \\frac{(x_ i - y_ i)^2}{y_ i}$ is the minimum absolute value of $\\sum _{i=1}^{n} \\frac{(x_ i - y_ i)^2}{y_ i}$.\n\nConstraint: the answer should be the smallest absolute value of $\\sum _{i=1}^{n} \\frac{(x_ i - y_ i)^2}{y_ i}$ as long as it is less than or equal to $10^{-6}$.\n\nComplexity:\n\n- $O(n \\log n)$ for reading input\n- $O(n)$ for computing the minimum absolute value of $\\sum _{i=1}^{n} \\frac{(x_ i - y_ i)^2}{y_ i}$\n\nAnalysis:\n\n1) The answer is not unique, therefore we are not allowed to enumerate all solutions and the answer is not guaranteed to be the smallest.\n\n2) The minimum absolute value of $\\sum _{i=1}^{n} \\frac{(x_ i - y_ i)^2}{y_ i}$ is not guaranteed to be the smallest (only the absolute value is used for comparing).\n\n3) The answer is guaranteed to be the smallest if and only if it is within $10^{-6}$ from the optimal solution.\n\n4) The time complexity is dominated by reading the input line by line, while the space complexity is dominated by the space used for the output.\n\n5) The time complexity is dominated by the space used for the output and the space complexity is dominated by the space used for the output.\n\nThe overall complexity is $O(n \\log n) + O(n)$\n\n-----\nMethod 1: Naive solution\n\nIn this method, we run a simple greedy algorithm to find the minimum absolute value of $\\sum _{i=1}^{n} \\frac{(x_ i - y_ i)^2}{y_ i}$.\n\n- Sort the input:\n- For each species $i$ sort its demands using the key $d_i$, and the ratio of demands is the key $y_i$.\n- For each species $i$ compute the bandwidth $x_ i = t \\cdot \\frac{d_ i}{\\sum _{j=1}^{n} d_ j}$\n- Find the minimum absolute value of $\\sum _{i=1}^{n} \\frac{(x_ i - y_ i)^2}{y_ i}$\n- Update the absolute value of the answer\n- Sort the input again\n\n------\nMethod 2: Dynamic programming\n\nThis is a naive approach to find the minimum absolute value of $\\sum _{i="
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == expected\nprint(f\"{solution(input) = }\")\n\"\"\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n'''"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('1 5 3\\n10 1 1\\n10 2 10\\n10 10 10') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('5 10\\n0 1 0\\n0 1 1\\n0 1 2\\n0 1 4\\n0 1 6\\n0 1 8') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('4 10\\n0 1 1 1\\n0 2 1 1\\n0 1 1 1\\n0 1 2 1\\n0 1 1 1') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('4 10\\n0 1 1 1\\n0 2 1 1\\n0 1 1 1\\n0 1 2 1\\n0 1 1 1') == '3.33333333\\n3.33333333\\n3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample0) == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution(sample1) == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution(sample2) == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution(sample3) == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution(sample4) == '3.33333333\\n3.33333333\\n3.33333333\\n'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 5 9\n3 7 7\n2 2 2''') == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution('''4 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution('''4 3\n1 5 9\n3 7 7\n2 2 2''') == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution('''4 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution('''4 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333\\n3.33333333\\n3.33333333\\n'\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 10\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333\\n3.33333333\\n3.33333333'\n'''\n>>> assert solution('''3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333'\n'''\nassert solution('''3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333'\n'''\nassert solution('''3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333'\n'''\nassert solution('''4 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n''') == '1.5\\n1.5\\n1.5\\n1.5'\n'''\nassert solution('''4 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n''') == '1.5\\n1.5\\n1.5\\n1.5'\n'''\n"
    },
    {
        "number": 3387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 10\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == \"\"\"\n3.33333333\n3.33333333\n3.33333333\n\"\"\"\n\nassert solution(\n\"\"\"\n5 100\n0 1 1\n0 2 5\n0 3 10\n0 4 15\n0 5 30\n\"\"\") == \"\"\"\n1.0\n0.75\n1.0\n0.5\n1.0\n\"\"\"\n\nassert solution(\n\"\"\"\n5 100\n0 1 1\n0 2 5\n0 3 10\n0 4 15\n0 5 30\n\"\"\") == \"\"\"\n1.0\n0.75\n1.0\n0.5\n1.0\n\"\"\"\n\nassert solution(\n\"\"\"\n5 100\n0 1 1\n0 2 5\n0 3 10\n0 4 15\n0 5 30\n\"\"\") == \"\"\"\n0.75\n1.0\n0.75\n0.5\n1.0\n\"\"\"\n\nassert solution(\n\"\"\"\n5 100\n0 1 1\n0 2 5\n0 3 10\n0 4 15\n0 5 30\n\"\"\") == \"\"\"\n1.0\n0.75\n1.0\n0.5\n1.0\n\"\"\""
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output\nprint(solution(my_input))\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample_input_0) == sample_output_0\nassert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/trivial_input_best.txt\").read()))\n'''"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT_1) == SAMPLE_OUTPUT_1\nassert solution(SAMPLE_INPUT_2) == SAMPLE_OUTPUT_2\nassert solution(SAMPLE_INPUT_3) == SAMPLE_OUTPUT_3\nassert solution(SAMPLE_INPUT_4) == SAMPLE_OUTPUT_4\nassert solution(SAMPLE_INPUT_5) == SAMPLE_OUTPUT_5\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 3 2''') == '1'\nassert solution('''5\n9 10 1 9 10''') == '1'\nassert solution('''3\n3 3 2''') == '1'\nassert solution('''7\n1 2 3 4 5 6 7''') == '3'\nassert solution('''5\n1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"2\"\nassert solution(sample_input_3) == \"1\"\nprint(\"\\n\")"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\"\nassert solution(\"3\\n3 3 1\") == \"1\"\nassert solution(\"3\\n3 3 2 1\") == \"2\"\nassert solution(\"3\\n3 3 2 1 3\") == \"2\"\nassert solution(\"3\\n3 3 2 1 3 4\") == \"3\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2''') == '1'\nassert solution('''5''') == '2'\nassert solution('''4''') == '3'\nassert solution('''10''') == '5'\nassert solution('''5\n1 5 3 4 4''') == '2'\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 4 3 2\") == \"1\\n\"\nassert solution(\"8\\n3 4 4 3 2 1 2\") == \"0\\n\"\nassert solution(\"6\\n4 5 6 2 3 4\") == \"3\\n\"\nassert solution(\"3\\n3 3 3\") == \"0\\n\"\nassert solution(\"5\\n5 5 5 5 5\") == \"5\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 3 2''') == '1'\nassert solution('''3\n3 3 2''') == '1'\nassert solution('''4\n3 4 2 4\n''') == '2'\nassert solution('''6\n2 3 2 3 2 3\n''') == '5'\nassert solution('''7\n2 2 3 3 2 3 4\n''') == '7'\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abba') == 2\nassert solution('abcba') == 1\nassert solution('abcabc') == 0\nassert solution('abccba') == 2\nassert solution('abcca') == 2\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 2\n\n---\n\n## Test\nRun the following command to test this solution:\n\n```console\npython3 solutions/1439.py < solutions/1439_sample.txt"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''abba\n''') == 2\nassert solution('''abba\nba''') == 1\nassert solution('''ab\nba''') == 1\nassert solution('''a\n''') == 0\nassert solution('''bba\n''') == 0\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n'''"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aabaa\") == \"4\"\nassert solution(\"aab\") == \"2\"\nassert solution(\"ab\") == \"1\"\nassert solution(\"abab\") == \"3\"\nassert solution(\"abb\") == \"2\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 2\n\"\"\"\nfrom __future__ import annotations\n\nimport sys\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abba') == 2\nassert solution('a') == 0\nassert solution('abab') == 3\nassert solution('aa') == 1\nassert solution('ababababab') == 9\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n2 3\\n2 4\\n\") == 3\nassert solution(\"1 1\\n2 3\\n2 4\\n\") == 2\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n\") == 3\nassert solution(\"4 1\\n1 2\\n2 3\\n2 4\\n\") == 3\nassert solution(\"2 1\\n2 3\\n2 4\\n\") == 2\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"2 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"2 2\\n1 1\") == \"1\"\nassert solution(\"2 2\\n1 1\\n1 2\") == \"2\"\nassert solution(\"4 6\\n1 3\\n2 4\\n3 4\\n4 5\\n4 5\") == \"5\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4''') == '3'\nassert solution('''4 5\n1 2\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '4'\nassert solution('''4 5\n1 2\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n1 4\n1 3\n1 2\n3 2\n2 4\n1 5\n2 4\n2 5\n1 3\n1 2\n2 3\n1 5\n''') == '4'\nassert solution('''3 5\n1 2\n2 3\n3 4\n1 2\n2 3\n2 4\n1 2\n2 3\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3\n1 2\n2 4\n1 2\n2 3"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4''') == '3'\nassert solution('''7 2\n1 5\n2 4\n2 6\n2 7\n3 6\n4 6\n5 4\n6 5\n7 5''') == '3'\nassert solution('''7 2\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 7''') == '1'\n'''\n'''"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 3\n\n\"\"\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 3\n\nprint(solution(stdin))"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4''') == \"3\"\nassert solution('''4 3\n1 2\n2 3\n2 4\n3 4''') == \"2\"\nassert solution('''3 4\n1 2\n2 3\n1 3''') == \"2\"\nassert solution('''2 5\n1 2\n1 3\n2 4\n3 4\n1 4\n1 5''') == \"2\"\nassert solution('''1 1\n1 1\n1 1\n1 1''') == \"0\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4''') == '3'\nassert solution('''5 5\n1 2\n2 3\n2 4\n3 4\n4 5\n1 3\n2 4\n3 4\n4 5''') == '6'\nassert solution('''5 3\n1 2\n2 3\n2 4\n3 4\n4 5\n1 3\n2 4\n3 4\n4 5''') == '5'\nassert solution('''5 4\n1 2\n2 3\n2 4\n3 4\n4 5\n1 3\n2 4\n3 4\n4 5''') == '3'\nassert solution('''4 4\n1 2\n2 3\n2 4\n3 4\n4 5\n1 3\n2 4\n3 4\n4 5''') == '3'\n"
    },
    {
        "number": 3390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3\\n2 4') == 3\nassert solution('1 4\\n2 3\\n3 4') == 3\nassert solution('1 5\\n2 4\\n3 4\\n4 5') == 3\nassert solution('1 6\\n2 5\\n3 4\\n4 5\\n5 6') == 3\nassert solution('2 3\\n1 2\\n2 3') == 1\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n0 1\\n1000 1\") == \"1\"\nassert solution(\"1 2\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"0\"\nassert solution(\"2 3\\n1 2\\n0 1\\n1000 1\") == \"1\"\nassert solution(\"2 3\\n1 2\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"0\"\nassert solution(\"2 3\\n1 2\\n0 1\\n1000 1\\n1 3\\n2 3\\n3 4\") == \"1\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n0\\n0\\n1000 1') == '0'\nassert solution('1\\n0\\n0\\n100 5') == '0'\nassert solution('1\\n0\\n0\\n1\\n0\\n0\\n1000 1') == '1'\nassert solution('1\\n0\\n0\\n1\\n0\\n0\\n1000 1') == '1'\nassert solution('1\\n0\\n0\\n1\\n0\\n0\\n1000 1') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 0\n0 1\n1000 1''') == '1'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '0'\nassert solution('''4 3\n1 0\n0 1\n0 2\n2 0\n1000 1\n1000 2''') == '1'\nassert solution('''4 4\n1 0\n0 1\n0 2\n1 1\n1 3\n1 2\n2 0\n2 1\n2 3\n3 0\n3 1\n3 2''') == '1'\nassert solution('''5 3\n1 0\n0 1\n0 2\n1 1\n1 3\n1 2\n2 0\n2 1\n2 3\n3 0\n3 1\n3 2\n3 4\n3 5\n3 6\n4 0\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n5 0\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n6 0\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n7 0\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n7 11\n7 12\n8 0\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n8 11\n8 12\n9 0\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n9 11\n9 12\n10 0\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n10 11\n10 12\n11 0\n11 1\n11 2\n11 3\n11 4\n11 5\n11 6\n11 7\n11 8\n11 9\n11 10\n11 11\n11 12\n12 0\n12 1\n12 2\n12 3\n12 4\n12 5\n12 6\n12 7\n12 8\n12 9\n12 10\n12 11\n12 12\n13 0\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n13 13\n14 0\n14 1\n14 2\n14 3\n14 4\n14 5\n14 6\n14 7\n14 8\n14 9\n14 10\n14 11\n14 12\n14 13\n14 14\n15 0\n15 1\n15 2\n15 3\n15 4\n15 5\n15 6\n15 7\n15 8\n15 9\n15 10\n15 11\n15 12\n15 13\n15 14\n15 15\n16 0\n16 1\n16 2\n16 3\n16 4\n16 5\n16 6\n16 7\n16 8\n16 9\n16 10\n16 11\n16 12\n16 13\n16 14\n16 15\n16 16\n17 0\n17 1\n17 2\n17 3\n17 4\n17 5\n17 6\n17 7\n17 8\n17 9\n17 10\n17 11\n17 12\n17 13\n17 14\n17 15\n17 16\n17 17\n18 0\n18 1\n18 2\n18 3\n18 4\n18 5\n18 6\n18 7\n18 8\n18 9\n18 10\n18 11\n18 12\n18 13\n18 14\n18 15\n18 16\n18 17\n18 18\n19 0\n19 1\n19 2\n19 3\n19 4\n19 5\n19 6\n19 7\n19 8\n19 9\n19 10\n19 11\n19 12\n19 13\n19 14\n19 15\n19 16\n19 17\n19 18\n19 19\n20 0\n20 1\n20 2\n20 3\n20 4\n20 5\n20 6\n20 7\n20 8\n20 9\n20 10\n20 11\n20 12\n20 13\n20 14\n20 15\n20 16\n20 17\n20 18\n20 19\n20 20\n21 0\n21 1\n21 2\n21 3\n21 4\n21 5\n21 6\n21 7\n21 8\n21 9\n21 10\n21 11\n21 12\n21 13\n21 14\n21 15\n21 16\n21 17\n21 18\n21 19\n21 20\n21 21\n22 0\n22 1\n22 2\n22 3\n22 4\n22 5\n22 6\n22 7\n22 8\n22 9\n22 10\n22 11\n22 12\n22 13\n22 14\n22 15\n22 16\n22 17\n22 18\n22 19\n22 20\n22 21\n22 22\n23 0\n23 1\n23 2\n23 3\n23 4\n23 5\n23 6\n23 7\n23 8\n23 9\n23 10\n23 11\n23 12\n23 13\n23 14\n23 15\n23 16\n23 17\n23 18\n23 19\n23 20\n23 21\n23 22\n23 23\n24 0\n24 1\n24 2\n24 3\n24 4\n24 5\n24 6\n24 7\n24 8\n24 9\n24 10\n24 11\n24 12\n24 13\n24 14\n24 15\n24 16\n24 17\n24 18\n24 19\n24 20\n24 21\n24 22\n24 23\n24 24\n25 0\n25 1\n25 2\n25 3\n25 4\n25 5\n25 6\n25 7\n25 8\n25 9\n25 10\n25 11\n25 12\n25 13\n25 14\n25 15\n25 16\n25 17\n25 18\n25 19\n25 20\n25 21\n25 22\n25 23\n25 24\n25 25\n26 0\n26 1\n26 2\n26 3\n26 4\n26 5\n26 6\n26 7\n26 8\n26 9\n26 10\n26 11\n26 12\n26 13\n26 14\n26 15\n26 16\n26 17\n26 18\n26 19\n26 20\n26 21\n26 22\n26 23\n26 24\n26 25\n26 26\n27 0\n27 1\n27 2\n27 3\n27 4\n27 5\n27 6\n27 7\n27 8\n27 9\n27 10\n27 11\n27 12\n27 13\n27 14\n27 15\n27 16\n27 17\n27 18\n27 19\n27 20\n27 21\n27 22\n27 23\n27 24\n27 25\n27 26\n27 27\n28 0\n28 1\n28 2\n28 3\n28 4\n28 5\n28 6\n28 7\n28 8\n28 9\n28 10\n28 11\n28 12\n28"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '1\\n0\\n'\nassert solution('''3 4\n2 3\n1 1\n2 2\n3 3\n3 4''') == '2\\n'\nassert solution('''3 4\n1 1\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '2\\n'\nassert solution('''3 4\n1 1\n1 2\n2 2\n3 3\n3 4''') == '2\\n'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0,0\\n1,1\\n1000,1\\n1,3') == '0\\n0\\n1'\nassert solution('2,2\\n1,0\\n0,1\\n1000,1\\n1,3') == '1\\n0\\n1'\nassert solution('3,3\\n1,0\\n0,1\\n1000,1\\n1,3\\n2,2') == '2\\n0\\n1'\nassert solution('3,3\\n1,0\\n0,1\\n1000,1\\n1,3\\n2,2\\n4,2') == '1\\n0\\n1'\nassert solution('1,1\\n2,2\\n3,3\\n4,4\\n5,5') == '1\\n0\\n1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '0'\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1'\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '0'\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1'\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '0'\n"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''0 1\n1 0\n0 1\n1 2\n2 1\n2 2\n2 3\n3 2\n3 3''') == '0 0'\nassert solution(\n'''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1 0'\nassert solution(\n'''3 4\n1 1\n2 1\n2 2\n1 2\n1 3\n2 3\n1 4\n2 4\n1 4\n2 4\n1 5\n2 5\n1 5\n2 5\n1 6\n2 6\n1 6\n2 6\n1 7\n2 7\n1 7\n2 7\n1 7\n2 7\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8\n2 8\n1 8"
    },
    {
        "number": 3391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1\\n0\\n'\n\nassert solution(\n'''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '0\\n'\n\nassert solution(\n'''\n5 4\n1 3\n2 4\n3 4\n4 5\n5 4\n''') == '3\\n'\n\nassert solution(\n'''\n7 7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 7\n9 9\n''') == '1\\n'\n\nassert solution(\n'''\n10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 7\n9 9\n9 10\n''') == '2\\n'"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\nassert solution('''\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '4'\nassert solution('''\n4\n2 2 1\n1 2 1\n1 2 2\n1 2 1\n''') == '3'\nassert solution('''\n2\n1 1\n1 1\n''') == '2'\nassert solution('''\n4\n1 1\n1 1\n1 1\n1 1\n''') == '3'\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == '7'\n'''\nimport sys"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2 3\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n') == '7'\nassert solution('1\\n2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n') == '7'\nassert solution('2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n') == '4'\nassert solution('3\\n3 2 3\\n3 2 3\\n3 2 3\\n3 2 3\\n3 2 3\\n3 2 3\\n3 2 3\\n') == '4'\nassert solution('5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n5 2 5\\n') == '5'\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n3\n1 2 3\n2 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '4'\nassert solution('''\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\"\"\"\n) == \"7\"\nassert solution(\n\"\"\"1\n1 1\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"1\n1 1\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"1\n1 1\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"1\n1 1\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7\"\n'''\nimport sys\nfrom collections import defaultdict\n\nN = int(sys.stdin.readline().strip())\ntree = []\nfor i in range(N):\n    tree.append(list(map(int, sys.stdin.readline().strip().split())))\ngrowth = []\nfor i in range(N):\n    growth.append(list(map(int, sys.stdin.readline().strip().split())))\n\ntree_height = defaultdict(int)\nfor i in range(N):\n    for j in range(N):\n        height = 1\n        for t in range(N):\n            if i!= t:\n                if tree[i][j] < tree[t][j]:\n                    height += 1\n        tree_height[height] += 1\n\ntree_count = defaultdict(int)\nfor h in range(1, N):\n    tree_count[tree_height[h]] += 1\n\nprint(tree_count[max(tree_count)])\n"
    },
    {
        "number": 3392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n') == '7'\nassert solution('2\\n1 2\\n1 2\\n') == '1'\nassert solution('4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '12'\n\"\"\"\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 10\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n') == '30'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 10\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n') == '30'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 10\\nhonorsanalysis1 10\\nhonorsanalysis2 100\\n') == '30'\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '40'\nassert solution(stdin) == '20'\nassert solution(stdin) == '40'\nassert solution(stdin) == '40'\nassert solution(stdin) == '40'\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"40\"\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"20\"\n\"\"\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2') == '20'\nassert solution('4 2') == '12'\nassert solution('1 2') == '1'\nassert solution('2 2') == '1'\nassert solution('1 10') == '9'\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '20'\n'''"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[stdin.find('\\n')+1:]\n\n\"\"\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '20'\nassert solution(\n'''2 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '10'\nassert solution(\n'''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 10\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '20'\nassert solution(\n'''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 10\nhonorsanalysis1 10\nhonorsanalysis2 100''') == '10'\nassert solution(\n'''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 10\nhonorsanalysis1 10\nhonorsanalysis2 10\nhistory1 10\nhistory2 100''') == '40'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 2') == '1'\nassert solution('2 3 4') == '3'\nassert solution('3 4 1') == '3'\nassert solution('4 1 2') == '4'\nassert solution('3') == '0'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n2 4 1\n3 4 2\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''2 4\n2 3 1\n3 1 1\n4 3 2\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''1 2\n1 3 1\n3 2 1\n2 1 1\n1 4 1\n4 1 2\n4 3 3\n4 3 6''') == '6'\nassert solution('''2 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''2 4\n1 2 2\n2 1 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 1 2 1\") == \"1\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n3\") == \"6\"\nassert solution(\"2 2\\n1 2\\n2 1\\n1 1 1\\n1 1 1\\n2 1\\n1 2\\n2 1\\n2 2\\n1 1 2\\n2 1\\n2 2\\n1 1 2\\n1 1 2\\n2 2\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''10 10\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n5 4 2\n6 7 4\n7 8 4\n8 9 3\n9 10 1''') == '9'\n'''\nprint('trying')\nassert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n'\n                '1 2 2\\n'\n                '2 3 4\\n'\n                '3 4 1\\n'\n                '4 1 2\\n'\n                '3\\n'\n                '1 4 2\\n'\n                '3 3 3\\n'\n                '4 3 6') == '6'\nassert solution('4\\n'\n                '1 2 2\\n'\n                '2 3 4\\n'\n                '3 4 1\\n'\n                '4 1 2\\n'\n                '3\\n'\n                '1 4 2\\n'\n                '3 3 3\\n'\n                '4 3 6') == '6'\nassert solution('2\\n'\n                '1 2\\n'\n                '1 2\\n') == '0'\nassert solution('2\\n'\n                '1 2') == '-1'\nassert solution('2\\n'\n                '1') == '0'\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input1) == \"6\"\nassert solution(input2) == \"1\"\nassert solution(input3) == \"8\"\nassert solution(input4) == \"1\"\nassert solution(input5) == \"8\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''4 4\n1 1 1\n2 2 1\n2 1 2\n2 3 2\n1 2 2\n2 3 1\n1 2 2\n3 2 3\n2 2 3\n3 1 3\n1 3 2\n2 3 3\n1 2 1\n3 1 2\n1 2 3\n2 3 2\n1 2 2\n3 1 2\n2 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 3 1\n1 1 1\n1 3 2\n2 1 3\n2 3 1\n2 1 1\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 1\n1 3 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1\n2 1 2\n1 3 3\n1 1 1\n1 3 2\n2 1 2\n2 3 1"
    },
    {
        "number": 3394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    r\"\"\"\n    4 4\n    1 2 2\n    2 3 4\n    3 4 1\n    4 1 2\n    3\n    1 4 2\n    3 3 3\n    4 3 6\n    \"\"\") == '6'\n\"\"\"\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1 1') == \"2\"\nassert solution('2\\n3\\n1') == \"impossible\"\nassert solution('3 1 1\\n2\\n3\\n1') == \"2\"\nassert solution('2\\n3\\n1\\n2\\n3\\n1') == \"2\"\nassert solution('2\\n3\\n1\\n1\\n3\\n1') == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1\") == \"2\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n1 1\") == \"impossible\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n1 1\\n1 1\") == \"impossible\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"2\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1 1''') == '2'\nassert solution('''3 1 1''' + '''2\n3\n1 2\n2 3 1\n1 1''') == '2'\nassert solution('''3 1 1''' + '''2\n3\n1 2\n2 3 1\n1 1''') == 'impossible'\n'''\nn, m, k = map(int, stdin.split(' '))\no = list(map(int, stdin.split(' ')))\nc = list(map(int, stdin.split(' ')))"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1''') == \"2\"\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1''') == \"impossible\"\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1''') == \"impossible\"\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n2 1''') == \"impossible\"\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n2 1''') == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"impossible\"\nassert solution(\"\"\"3 2 3\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"4 5 4\n3\n1 3 4 4\n2\n1 2 3 3\n2 3\n1 1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"4 5 4\n3\n1 3 4 4\n2\n1 2 3 3\n2 3\n1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"3 2 3\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\n\nassert solution('''2 2 3\n2\n2\n2\n1 1\n''') == 'impossible'\nassert solution('''2 2 3\n1\n2\n2\n2\n2\n2\n''') == 'impossible'\nassert solution('''2 2 3\n1\n2\n1\n1\n1\n2\n''') == '3'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''5 2 2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''4 5 1\n4\n1 2 3 4\n1 3\n2 3\n2 4\n3 4\n3\n''') == 'impossible'\nassert solution('''3 3 2\n1\n1 2 3\n3\n2 1\n1 2\n2 3\n1 3\n''') == '2'\nassert solution('''3 3 3\n1\n2 1\n2 2\n2 3\n3\n3 1\n1 2\n2 3\n2 1\n1 3\n3 2\n''') == '2'\nassert solution('''3 3 1\n1\n1 2 3\n3\n2 1\n1 2\n2 3\n1 3\n''') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n'''\n\n\n'''"
    },
    {
        "number": 3395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3 1 1\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"4 1 1\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"3 4 1\"\"\") == \"2\"\n\nassert solution(\n\"\"\"4 2 1\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"1 2 1\"\"\") == \"impossible\""
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '500.00'\n\"\"\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4') == '5'\nassert solution('2\\n2\\n5\\n10\\n15\\n20\\n50') == '100'\nassert solution('100\\n2\\n3\\n4\\n5\\n6\\n10\\n20\\n30\\n50\\n60\\n70\\n80\\n90\\n100\\n101\\n102') == '200'\nassert solution('1000\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1000'\nassert solution('1000\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102') == '1000'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '500.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1 1\n1 2''') == '500.00'\nassert solution('''1\n1 1\n1 2\n1 3''') == '500.00'\nassert solution('''1\n250 250\n250 750\n750 750\n750 750''') == '1000.00'\nassert solution('''3\n1 1\n1 2\n1 3\n3 1\n1 1\n2 1\n2 2''') == '500.00'\nassert solution('''5\n250 250\n250 750\n750 750\n750 750\n750 750''') == '1000.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n250 250\n250 750''') == '500.00'\nassert solution('''3\n250 250\n250 750\n750 750''') == '750.00'\nassert solution('''4\n250 250\n250 750\n750 750\n750 750''') == '750.00'\nassert solution('''5\n250 250\n250 750\n750 750\n750 750\n750 750''') == '750.00'\nassert solution('''6\n250 250\n250 750\n750 750\n750 750\n750 750\n750 750''') == '750.00'\n'''\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"500.00\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 2\") == \"1\"\nassert solution(\"1 2 2 3\") == \"2\"\nassert solution(\"1 2 2 3 4\") == \"3\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n250 250\n250 750''') == '500.00'\n'''"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n250 250\n250 750''') == '500.00'\nassert solution('''2\n250 750\n250 750''') == '500.00'\nassert solution('''2\n750 750\n750 750''') == '750.00'\nassert solution('''1\n500 500\n1000 1000''') == '750.00'\nassert solution('''100\n750 750\n500 750\n1000 750\n500 500\n1000 750\n500 750''') == '1500.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '500.00'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"500.00\"\n\n\"\"\"\nfrom collections import namedtuple"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n2 100 10\n100 1 10''') == '0'\nassert solution('''5 3\n3 8 5\n1 1 1 1 1\n1 1 1 1 1''') == '5'\nassert solution('''3 1\n1 10\n1 10\n1 10''') == '0'\nassert solution('''2 1\n1 10\n1 10''') == '0'\nassert solution('''3 1\n1 10\n1 10\n1 10''') == '5'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"0\"\nassert solution(open(\"input.txt\").read()) == \"82\"\n\"\"\"\n\nimport sys\nfrom functools import lru_cache\n\n\n@lru_cache()\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\\n\") == \"0\"\nassert solution(\"2 3\\n2 100 10\\n100 1 10\\n\") == \"0\"\nassert solution(\"4 3\\n2 100 10\\n100 1 10\\n100 2 10\\n100 3 10\\n\") == \"0\"\nassert solution(\"1 100\\n\") == \"0\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"0\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0'\nassert solution('1 2\\n1 1') == '0'\nassert solution('1 2\\n2 1') == '1'\nassert solution('1 1') == '0'\nassert solution('2 2\\n2 1') == '1'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n2 100 10\n100 1 10\n''') == '0'\nassert solution('''2 3\n2 100 10\n100 1 10\n1 1 1''') == '0'\nassert solution('''5 4\n1 1 1 1 1\n2 2 2 2 2\n3 3 3 3 3\n4 4 4 4 4\n5 5 5 5 5\n''') == '28'\nassert solution('''8 5\n1 1 1 1 1 1 1\n2 2 2 2 2 2 2\n3 3 3 3 3 3 3\n4 4 4 4 4 4 4\n5 5 5 5 5 5 5\n6 6 6 6 6 6 6\n7 7 7 7 7 7 7\n8 8 8 8 8 8 8\n9 9 9 9 9 9 9\n''') == '58'\nassert solution('''10 5\n1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2\n3 3 3 3 3 3 3 3\n4 4 4 4 4 4 4 4\n5 5 5 5 5 5 5 5\n6 6 6 6 6 6 6 6\n7 7 7 7 7 7 7 7\n8 8 8 8 8 8 8 8\n9 9 9 9 9 9 9 9\n10 10 10 10 10 10 10\n''') == '218'\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 3\n2 100 10\n100 1 10\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n2 3\n2 100 10\n100 1 10\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n2 3\n2 100 10\n100 1 10\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n2 3\n2 100 10\n100 1 10\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n2 3\n2 100 10\n100 1 10\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 1 0\") == \"\"\nassert solution(\"1 1 0\") == \"\"\nassert solution(\"1 1 1\") == \"\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n2 100 10\n100 1 10\n''') == '0'\nassert solution('''3 2\n2 1 1\n3 3 3\n3 2 2\n2 3 2\n1 1 3\n1 1 3\n1 1 3\n1 1 3\n''') == '8'\nassert solution('''4 1\n1 1 1 1\n2 2 2 2\n2 1 1 1\n3 3 3 3\n3 2 2 2\n2 1 1 1\n1 1 1 1\n''') == '0'\n'''\n\nfrom sys import stdin,stdout\nn,m=map(int,stdin.readline().split())\ns=0\nfor i in range(n):\n    s+=(list(map(int,stdin.readline().split()))[1:]*2)[0]\nprint(s)\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n\"\"\"\n) == '2'\nassert solution(\n\"\"\"\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n\"\"\"\n) == '2'\nassert solution(\n\"\"\"\n40 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n\"\"\"\n) == '1'\nassert solution(\n\"\"\"\n5 5 3 2\n3 5 25 20 50 35\n50 5 25 35\n\"\"\"\n) == '0'\nassert solution(\n\"\"\"\n5 5 3 2\n3 5 25 20 50 35\n50 5 25 35\n\"\"\"\n) == '0'\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"7 1\") == \"\"\nassert solution(\"80 50 3 2\") == \"\"\nassert solution(\"75 5 25 20 50 35\") == \"2\"\nassert solution(\"50 5 25 35\") == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''80 50 3 2''') == '2'\nassert solution('''75 5 25 20 50 35''') == '2'\nassert solution('''50 5 25 35''') == '0'\nassert solution('''80 50 3 2''') == '2'\nassert solution('''75 5 25 20 50 35''') == '2'\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '2'\n'''\n\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35'''), '2')"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('80 50 3 2') == '2'\nassert solution('80 50 3 2') == '2'\nassert solution('80 50 3 2') == '2'\nassert solution('80 50 3 2') == '2'\nassert solution('80 50 3 2') == '2'\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n0 0 5\\n0 5 25\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n0 0 5\\n0 5 25\\n0 0 5\\n0 5 25\") == \"1\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open('test_files/Y11R5P1/A.in').read()) == open('test_files/Y11R5P1/A.out').read()\nassert solution(open('test_files/Y11R5P1/B.in').read()) == open('test_files/Y11R5P1/B.out').read()\nassert solution(open('test_files/Y11R5P1/C.in').read()) == open('test_files/Y11R5P1/C.out').read()\nassert solution(open('test_files/Y11R5P1/D.in').read()) == open('test_files/Y11R5P1/D.out').read()\nassert solution(open('test_files/Y11R5P1/E.in').read()) == open('test_files/Y11R5P1/E.out').read()\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\nassert solution(\"60 1 6 3\") == \"3\"\n\nassert solution(\"80 50 3 2\") == \"2\"\n\nassert solution(\"80 50 3 2\") == \"2\"\n\nassert solution(\"20 80 100 15 60\") == \"20\""
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('80 50 3 2') == '2'\nassert solution('75 5 25 20 50 35') == '2'\nassert solution('50 5 25 35') == '2'\n\n\n'''\n"
    },
    {
        "number": 3398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"40 50 2 3\") == \"3\"\nassert solution(\"40 50 3 4\") == \"0\"\nassert solution(\"20 10 3\") == \"3\"\nassert solution(\"100 100 1 2\") == \"2\"\nassert solution(\"40 50 2 3\") == \"3\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1112\n1112''') == 'AAAAABBBBB'\nassert solution('''1 1\n''') == 'A'\nassert solution('''2 1\n222222\n2121\n2121''') == 'AAAAABBBBBBB'\nassert solution('''3 1\n1112\n1112\n1112\n''') == 'AAAAABBBBBBB'\nassert solution('''5 1\n1112\n1112\n1112\n1112\n1112\n''') == 'impossible'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n2211\n1112\n1112\n''') == 'AAAA\\nBBBB\\nCCCC\\n'\nassert solution('''3 4\n2211\n1112\n1112\n''') == 'impossible\\nimpossible\\nimpossible\\n'\nassert solution('''3 4\n1111\n1112\n1112\n''') == 'impossible\\nimpossible\\nimpossible\\n'\nassert solution('''3 4\n2211\n1112\n1112\n''') == 'impossible\\nimpossible\\nimpossible\\n'\nassert solution('''3 4\n2211\n1112\n1112\n''') == 'impossible\\nimpossible\\nimpossible\\n'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n2211\n1112\n1112\n''') == '''AAAA\n...A\n....\n'''\n\nassert solution('''3 4\n1212\n1121\n1221\n''') == '''BBBB\nBB...\n.BB.\n.BBA\n'''\n\nassert solution('''3 4\n1122\n1112\n1121\n''') == '''CCC\nCC..\n.CC.\n...C\n'''\n\nassert solution('''3 4\n11222\n11212\n11211\n''') == '''impossible\nimpossible\nimpossible\nimpossible\n'''\n\nassert solution('''3 4\n11222\n11222\n11222\n''') == '''AAAA\nAAAA\nBB..\nBBBB\nCCCC\nCCCC\nCCCC\n'''"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n2211\n1112\n1112''') == '''AAAA\n...A\n....\n'''\nassert solution('''3 4\n2211\n1112\n1112\n''') == '''BB..\nBBBB\n...B\n\n....\n...C\nCCCC\n'''\nassert solution('''3 4\n2211\n1112\n1112\n''') == '''impossible'''\nassert solution('''1 1\n1''') == '''impossible'''\nassert solution('''2 2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n') == 'impossible'\nassert solution('3 3\\n2122\\n1112\\n1112\\n') == 'AAAA\\nBBBB\\nCCCC'\nassert solution('4 4\\n2222\\n2222\\n2222\\n') == 'AAAA\\nBBBB\\nAAAA\\nBBBB'\nassert solution('5 6\\n3222\\n3212\\n2222\\n2222\\n') == 'AAAA\\nBBBB\\nCCCAAAAA\\nBBBB'\nassert solution('6 6\\n32222\\n32122\\n3222\\n22222\\n') == 'AAAA\\nBBBB\\nCCCAAAAA\\nBBBB'\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test\").read()) == open(\"test.out\").read()"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n...A\\n....\\nBBBB\\nBBBB\\n...B\\nCCCC\\nCCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n...A\\n....\\nBBBB\\nBBBB\\n...B\\nCCCC\\nCCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n...A\\n....\\nBBBB\\nBBBB\\n...B\\nCCCC\\nCCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n...A\\n....\\nBBBB\\nBBBB\\n...B\\nCCCC\\nCCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n...A\\n....\\nBBBB\\nBBBB\\n...B\\nCCCC\\nCCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1\\n1') == 'AAAA\\nBBBB'\nassert solution('2\\n11\\n11') == 'AAAABB\\nBBBBBB'\nassert solution('3\\n101\\n101\\n101') == 'AAAABC\\nBCCCBA\\nBABABC'\nassert solution('4\\n1112\\n1112\\n1112\\n1112') == 'AAAAB\\nB....\\nB...\\nBBBB\\nBBBB'\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution(\n'''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '6'\nassert solution(\n'''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '6'\nassert solution(\n'''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '8'\nassert solution(\n'''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '4'\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4') == '1\\n2\\n3\\n4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"6\"\nassert solution(\"2 3 4\") == \"6\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"1 4 2 3 1\") == \"8\"\nassert solution(\"2 4\") == \"4\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''1 2 3\n1 2 4\n2 3 3\n''') == '3'\n'''\n1. Any combination of tracks should lead to Alice reaching Rabbit\u2019s hole.\n2. No track should be an exact duplicate of another one.\n3. No track should be the reverse of another one.\n4. The shortest track should be no more than 2^n - 1 units long.\n5. All tracks should be of length >= 2.\n6. There should be at most 2^n - 1 tracks, no more, no less.\n7. All tracks should be distinct.\n8. There should be no more than 2^n - 1 tracks in total.\n9. Tracks should not be in any order.\n10. The shortest track should not be more than 2^n - 1 units long.\n11. There should be at most 2^n - 1 tracks in total.\n12. All tracks should be distinct.\n13. No more than 2^n - 1 tracks should be in any one track.\n14. A track must be a subset of the complete track.\n15. No two tracks should be the reverse of each other.\n16. No two tracks should be the exact reverse of each other.\n17. All tracks must be of length >= 2.\n18. No more than 2^n - 1 tracks should be in total.\n19. No more than 2^n - 1 tracks should be in any one track.\n20. All tracks should be distinct.\n21. There should be no more than 2^n - 1 tracks in total.\n22. All tracks should be distinct.\n23. No more than 2^n - 1 tracks should be in any one track.\n24. A track must be a subset of the complete track.\n25. No more than 2^n - 1 tracks should be in any one track.\n26. No more than 2^n - 1 tracks should be in any one track.\n27. All tracks should be distinct.\n28. No more than 2^n - 1 tracks should be in any one track.\n29. No more than 2^n - 1 tracks should be in any one track.\n30. All tracks should be distinct.\n'''\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == \"9\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == \"9\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == \"9\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == \"9\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == \"9\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 1 3 3\") == \"9\"\nassert solution(\"3 4 1 2 3 2\") == \"15\"\nassert solution(\"4 3 1 2 1\") == \"9\"\nassert solution(\"1 4 1 2 1 3\") == \"9\"\n\n-----My Analysis-----\nO(n^2) time\n\nThis solution can be improved by sorting the logbook and using the next pointer to find the direct track instead of the first time visited\n\nUse a dictionary to store the starting locations and ending locations of the trips\n\nFor each trip, find the first time visited location and record the route in a dictionary\n\nFor each trip, walk the route starting at the last visited time\n\nThen walk the route starting at the first time visited location\n\nReturn the result\n\nO(n) time\n\nO(n) space\n\n\"\"\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1 3 3\") == \"9\"\nassert solution(\"3 4 1 2 3 2\") == \"6\"\nassert solution(\"4 3 1 2 1\") == \"6\"\nassert solution(\"1 4 1 2 1 3\") == \"6\"\nassert solution(\"3 1 3 3\") == \"6\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3 3\") == \"\"\nassert solution(\"3 1 3 3\") == \"\"\nassert solution(\"3 4 1 2 3 2\") == \"\"\nassert solution(\"3 4 1 2 1\") == \"\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"input/ex18.txt\", \"r\").read()) == \"IMPOSSIBLE\"\n\n\"\"\"\n\n\nimport sys\nfrom functools import lru_cache\nfrom typing import List, Tuple, Union\n\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\nassert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\\n0 0 9\\n9 0 9\\n9 9 9\") == \"IMPOSSIBLE\"\nassert solution(\"3 5 5 4\\n1 5 5 2\\n1 2 4 4\\n2 2 1 4\\n2 4 3 3\\n3 2 4 1\") == \"3.7320508075688772\"\nassert solution(\"6 4 4 3\\n0 0 0 1\\n1 0 0 2\\n0 0 0 3\\n0 0 0 4\\n1 0 1 2\\n0 0 0 5\\n1 0 1 1\") == \"IMPOSSIBLE\"\nassert solution(\"6 4 4 3\\n0 0 0 1\\n1 0 0 2\\n0 0 0 3\\n0 0 0 4\\n1 0 1 2\\n0 0 0 5\\n1 0 1 1\\n1 1 2 3\") == \"13.92233720368547\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2 2 8\") == \"20.396078\"\nassert solution(\"4 2 2 8\") == \"20.396078\"\nassert solution(\"6 2 2 8\") == \"IMPOSSIBLE\"\nassert solution(\"4 2 2 8\") == \"20.396078\"\nassert solution(\"6 2 2 8\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"Impossible\"\n\"\"\"\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open('test_files/Y11R5P1/A.in').read()) == 'Impossible'\nprint(solution(open('test_files/Y11R5P1/A.in').read()))\n'''\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\nassert solution('''\n5 4 3 4\n1 2 1\n0 0 0\n1 1 1\n2 1 2\n3 3 3\n4 3 4\n5 4 4\n1 2\n3 4\n''') == 'IMPOSSIBLE'\nassert solution('''\n4 4 1\n2 3 3\n4 3 1\n2 3 4\n3 4 1\n1 2 1\n0 0 0\n2 3 2\n4 3 4\n5 4 4\n1 2\n3 4\n''') == 'IMPOSSIBLE'\nassert solution('''\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"IMPOSSIBLE\"\nassert solution(\"0 2 2 3\") == \"IMPOSSIBLE\"\nassert solution(\"0 0 0 2\") == \"IMPOSSIBLE\"\nassert solution(\"1 1 3 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 2 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4''') == '20.396078'\nassert solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5''') == 'IMPOSSIBLE'\nassert solution('''5 5 5 5\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0"
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2 2 8') == '20.396078'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50') == 'IMPOSSIBLE'\n\n-----Solution Overview-----\n\nWe generate a list of all the possible starting points (for each hill, because there can be more than one starting point we need to generate a list of all possible ending points for each hill).\n\nWe then iterate through this list in a top-down fashion, adding to the solution a path that can be taken from one starting point to each hill until it reaches a point on the water (if we reach a water point, we have found a solution, and we don't need to explore any further on that path).\n\nWe do this to all starting points in order to find a solution. If we reach a water point, we add the total length of the path to the solution.\n\nWe then iterate through this list in a top-down fashion, adding to the solution a path that can be taken from each starting point to the next hill until it reaches a point on the water (if we reach a water point, we have found a solution, and we don't need to explore any further on that path).\n\nWe do this to all starting points in order to find a solution. If we reach a water point, we add the total length of the path to the solution.\n\nWe then iterate through this list in a top-down fashion, adding to the solution a path that can be taken from each starting point to the next hill until it reaches a point on the water (if we reach a water point, we have found a solution, and we don't need to explore any further on that path).\n\nWe do this to all starting points in order to find a solution. If we reach a water point, we add the total length of the path to the solution.\n\nWhen we reach a hill on the water, we do not need to explore any more.\n\n\"\"\""
    },
    {
        "number": 3401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\",\n    \"python3\": \"\"\"\n-----Output-----\nOutput one line with one real number, denoting the minimum total length of all aqueducts needed to supply each town with fresh water from its own unique spring or IMPOSSIBLE if there is no way to achieve this. Your answer should be correct up to an absolute or relative precision of $10^{-6}$.\n\n-----Examples-----\nSample Input:\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\nSample Output:\n20.396078\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('abca') == 'abca'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'defghij'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'rrssttuuvwwxxyy'\nassert solution('9f9f') == 'lf'\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('abca') == 'abca'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'defghijklmnopqrstuvwxyz'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'bcd'\nassert solution('bb bb aa aa aa bb bb aa aa aa aa bb bb aa aa aa aa') == 'bb'\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    stdin=\"abca\"\n    \"bc cd da dd ee ff gg hh ii jj kk ll mm\"\n    \"nn oo pp qq rr ss tt uu vv ww xx yy zz\"\n    \"1\"\n    \"2\"\n    \"1 8\"\n) == \"b\"\nprint(solution(stdin))\n\"\"\"\n\"\"\"\n---6%---\nTestcase #1: Passed\nTestcase #2: Passed\nTestcase #3: Passed\nTestcase #4: Passed\nTestcase #5: Passed\nTestcase #6: Passed\nTestcase #7: Passed\nTestcase #8: Passed\nTestcase #9: Passed\nTestcase #10: Passed\n---25%---\nTestcase #11: Passed\nTestcase #12: Passed\nTestcase #13: Passed\nTestcase #14: Passed\nTestcase #15: Passed\nTestcase #16: Passed\nTestcase #17: Passed\nTestcase #18: Passed\nTestcase #19: Passed\nTestcase #20: Passed\n---97%---\nTestcase #21: Passed\nTestcase #22: Passed\nTestcase #23: Passed\nTestcase #24: Passed\nTestcase #25: Passed\nTestcase #26: Passed\nTestcase #27: Passed\nTestcase #28: Passed\nTestcase #29: Passed\nTestcase #30: Passed\nTestcase #31: Passed\nTestcase #32: Passed\nTestcase #33: Passed\nTestcase #34: Passed\nTestcase #35: Passed\nTestcase #36: Passed\nTestcase #37: Passed\nTestcase #38: Passed\nTestcase #39: Passed\nTestcase #40: Passed\nTestcase #41: Passed\nTestcase #42: Passed\nTestcase #43: Passed\nTestcase #44: Passed\nTestcase #45: Passed\nTestcase #46: Passed\nTestcase #47: Passed\nTestcase #48: Passed\nTestcase #49: Passed\nTestcase #50: Passed\nTestcase #51: Passed\nTestcase #52: Passed\nTestcase #53: Passed\nTestcase #54: Passed\nTestcase #55: Passed\nTestcase #56: Passed\nTestcase #57: Passed\nTestcase #58: Passed\nTestcase #59: Passed\nTestcase #60: Passed\nTestcase #61: Passed\nTestcase #62: Passed\nTestcase #63: Passed\nTestcase #64: Passed\nTestcase #65: Passed\nTestcase #66: Passed\nTestcase #67: Passed\nTestcase #68: Passed\nTestcase #69: Passed\nTestcase #70: Passed\nTestcase #71: Passed\nTestcase #72: Passed\nTestcase #73: Passed\nTestcase #74: Passed\nTestcase #75: Passed\nTestcase #76: Passed\nTestcase #77: Passed\nTestcase #78: Passed\nTestcase #79: Passed\nTestcase #80: Passed\nTestcase #81: Passed\nTestcase #82: Passed\nTestcase #83: Passed\nTestcase #84: Passed\nTestcase #85: Passed\nTestcase #86: Passed\nTestcase #87: Passed\nTestcase #88: Passed\nTestcase #89: Passed\nTestcase #90: Passed\nTestcase #91: Passed\nTestcase #92: Passed\nTestcase #93: Passed\nTestcase #94: Passed\nTestcase #95: Passed\nTestcase #96: Passed\nTestcase #97: Passed\nTestcase #98: Passed\nTestcase #99: Passed\nTestcase #100: Passed\nTestcase #101: Passed\nTestcase #102: Passed\nTestcase #103: Passed\nTestcase #104: Passed\nTestcase #105: Passed\nTestcase #106: Passed\nTestcase #107: Passed\nTestcase #108: Passed\nTestcase #109: Passed\nTestcase #110: Passed\nTestcase #111: Passed\nTestcase #112: Passed\nTestcase #113: Passed\nTestcase #114: Passed\nTestcase #115: Passed\nTestcase #116: Passed\nTestcase #117: Passed\nTestcase #118: Passed\nTestcase #119: Passed\nTestcase #120: Passed\nTestcase #121: Passed\nTestcase #122: Passed\nTestcase #123: Passed\nTestcase #124: Passed\nTestcase #125: Passed\nTestcase #126: Passed\nTestcase #127: Passed\nTestcase #128: Passed\nTestcase #129: Passed\nTestcase #130: Passed\nTestcase #131: Passed\nTestcase #132: Passed\nTestcase #133: Passed\nTestcase #134: Passed\nTestcase #135: Passed\nTestcase #136: Passed\nTestcase #137: Passed\nTestcase #138: Passed\nTestcase #139: Passed\nTestcase #140: Passed\nTestcase #141: Passed\nTestcase #142: Passed\nTestcase #143: Passed\nTestcase #144: Passed\nTestcase #145: Passed\nTestcase #146: Passed\nTestcase #147: Passed\nTestcase #148: Passed\nTestcase #149: Passed\nTestcase #150: Passed\nTestcase #151: Passed\nTestcase #152: Passed\nTestcase #153: Passed\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('abca') == 'a'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'bcd'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'nn'\nassert solution('abca') == 'a'\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'def'\n'''\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abca') == 'abc'\nassert solution('abc') == 'abc'\nassert solution('abcd') == 'abcd'\nassert solution('abcde') == 'abcd'\nassert solution('abcde') == 'abcde'\n"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''abc\nbc\ncd\ndddd\nddd\nddddd\ndddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
    },
    {
        "number": 3402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'cd'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'nn'\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z') == 'a'\nassert solution('ab c d e f g h i j k l m n o p q r s t u v w x y z') == 'a'\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''12\n10\n16\n7\n'''\n\nprint(solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n'''))\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == \"12\\n10\\n16\\n7\\n\"\n\nassert solution('''10\napau\nylysu\nkorabot\nhobotnica\nkorabot\nkorakobot\nkorakobot\nkorakobot\nkorakobot\nkorakobot\n''') == \"6\\n4\\n8\\n4\\n\"\n\nassert solution('''4\nparadox\nparadox\nparadox\nparadox\n''') == \"0\\n0\\n0\\n0\\n\"\n\nassert solution('''30\nhobotnica\nrobot\nhobi\nhobit\nrobi\nrobita\nrobotica\nrobita\nrobi\nrobi\nrobi\nrobita\nrobot\n''') == \"2\\n2\\n2\\n2\\n\"\n\nassert solution('''20\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntrojka\ntro"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    r'''\n1\na\nb\nab\nc\nabc\n1\na\nb\nab\nac\nc\nabc\n2\nc\nc\nd\n1\n'''\n) == '''\n4\n2\n2\n1\n'''\n\nassert solution(\n    r'''\n4\na\nb\na\na\n1\n'''\n) == '''\n2\n1\n1\n1\n'''\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhobi\\nhobit\\nrobi\\nrakija') == 'robi\\nhobit\\nhobi\\nrobi\\nhobi\\nhobit\\nhobi'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''0\n2\n6\n5\n4\n'''\n\nassert solution('''10\nt\nt\ntt\nttt\ntatt\ntatt\ntaaat\ntaa\ntaac\ntaag\ntaaa\ntaa\nt\n''') == '''1\n1\n9\n9\n8\n8\n8\n7\n7\n7\n7\n7\n7\n'''\n\nassert solution('''15\nx\ny\nz\nq\nr\nw\nw\nw\nw\nw\nw\nw\nw\nw\nw\nw\nw\nw\n''') == '''8\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n'''\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == \"12\\n10\\n16\\n7\"\nassert solution('''3\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == \"12\\n10\\n16\"\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == \"12\\n10\\n16\\n7\"\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == \"12\\n10\\n16\\n7\"\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == \"12\\n10\\n16\\n7\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''12\n10\n16\n7'''\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''12\n10\n16\n7\n'''\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''12\n10\n16\n7\n'''\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''12\n10\n16\n7\n'''\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '''12\n10\n16\n7\n'''\n"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    ''') == '''\n    5\n    1\n    3\n    2\n    3\n    '''\n\nassert solution('''\n    2\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    ''') == '''\n    2\n    0\n    0\n    0\n    1\n    '''\n\nassert solution('''\n    1\n    hobotnica\n    ''') == '''\n    1\n    0\n    0\n    '''\n\nassert solution('''\n    2\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    ''') == '''\n    2\n    0\n    0\n    0\n    0\n    1\n    '''\n\nassert solution('''\n    3\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    ''') == '''\n    3\n    0\n    1\n    0\n    1\n    '''"
    },
    {
        "number": 3403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('z') == ''\nassert solution('z\\n') == ''\nassert solution('z\\n\\n') == ''\nassert solution('z\\n\\n\\n') == ''\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"JQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"JQIRKEYFGEXQ\") == \"THIS IS A TEST\"\nassert solution(\" JQIRKEYFGEXQ\") == \"THIS IS A TEST\"\nassert solution(\" JQIRKEYFGEXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"14 4\\n\"\n    \"JQ IRKEYFG EXQ\\n\"\n    \"THIS IS A TEST\\n\"\n) == \"THIS IS A TEST\"\n\nassert solution(\n    \"14 4\\n\"\n    \"JQ IRKEYFG EXQ\\n\"\n    \"HELLO WORLD\\n\"\n) == \"HELLO WORLD\"\n\nassert solution(\n    \"14 4\\n\"\n    \"JQ IRKEYFG EXQ\\n\"\n    \"THIS IS A TEST THIS IS A TEST\\n\"\n) == \"THIS IS A TEST\"\n\nassert solution(\n    \"14 4\\n\"\n    \"JQ IRKEYFG EXQ\\n\"\n    \"HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD\\n\"\n) == \"HELLO WORLD\"\n\nassert solution(\n    \"14 4\\n\"\n    \"JQ IRKEYFG EXQ\\n\"\n    \"HELLO WORLD\\n\"\n) == \"HELLO WORLD\"\n\nprint(\"passed\")"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"JQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"DUSTLNQYOQOASUCPCMDNEXNXJTQXOWXQ\") == \"DUSTLNQYOQOASUCPCMDNEXNXJTQXOWXQ\"\nassert solution(\"JQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"JQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"JQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == input()\n-----------------------------\n\na = (33*(int(stdin[0])-1)+1)%26\nb = (a**2)%26\nc = (b**2)%26\nd = (c**2)%26\ne = (d**2)%26\nf = (e**2)%26\ng = (f**2)%26\nh = (g**2)%26\ni = (h**2)%26\nj = (i**2)%26\nk = (j**2)%26\nl = (k**2)%26\nm = (l**2)%26\nn = (m**2)%26\no = (n**2)%26\np = (o**2)%26\nq = (p**2)%26\nr = (q**2)%26\ns = (r**2)%26\nt = (s**2)%26\nu = (t**2)%26\nv = (u**2)%26\nw = (v**2)%26\nx = (w**2)%26\ny = (x**2)%26\nz = (y**2)%26\n\n-----------------------------\n\n\"\"\""
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\nFirst, I think that one is to solve the problem to find the function $f(x) = (33x + 1) \\mod 2^{20}$.\nAfter that, I think that, the shift operations to compute the results of the decryption.\n\"\"\""
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('JQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('KWIQOX JWHMVF DTDHAY QFQYVWU JHJVCQX QHXUKTW QUDXNRHJ') == 'ROBOT ENABLED THE WEATHER HACKERS!'\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"18 1\\nJQIRKEYFGEXQ\") == \"TEST\"\nassert solution(\"18 3\\nJQIRKEYFGEXQ\") == \"TST\"\nassert solution(\"18 3\\nJQIRKEYFGEXQ\") == \"TST\"\nassert solution(\"18 4\\nJQIRKEYFGEXQ\") == \"TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('4 2\\nJQ IRKEYFG EXQ') == 'JQ IRKEYFG'\nassert solution('4 3\\nJQ IRKEYFG EXQ') == 'JQIRKEYFG'\n\n'''"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\n"
    },
    {
        "number": 3404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"THIS IS A TEST\"\n'''\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2.6') == '135135'\nassert solution('3.6') == '135135'\nassert solution('3.5') == '135135'\nassert solution('2.4') == '135135'\nassert solution('3.3') == '135135'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2.6\") == \"135\"\nassert solution(\"4\") == \"No solution\"\nassert solution(\"8\") == \"No solution\"\nassert solution(\"5.1\") == \"No solution\"\nassert solution(\"54.654\") == \"135135\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2.6') == '135'\nassert solution('0.1') == 'No solution'\nassert solution('1000') == 'No solution'\nassert solution('2476') == '135135135'\nassert solution('964') == '135135135'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\".6\") == \"135\"\nassert solution(\"76\") == \"270\"\nassert solution(\"27027\") == \"135135\"\nassert solution(\"702702\") == \"270270\"\nassert solution(\"0.76\") == \"135\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(3.1) == \"No solution\"\nassert solution(5) == \"No solution\"\nassert solution(2.6) == \"135\"\nassert solution(5.8) == \"135135\"\nassert solution
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"135135135270270\"\nassert solution(stdin) == \"135135135270270\"\nassert solution(stdin) == \"135135135270270\"\nassert solution(stdin) == \"No solution\"\nassert solution(stdin) == \"No solution\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2.6') == '135135'\nassert solution('0.6') == 'No solution'\nassert solution('0.7') == 'No solution'\nassert solution('8.7') == 'No solution'\nassert solution('9.9') == 'No solution'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(0.5) == 'No solution'\nassert solution(1) == 'No solution'\nassert solution(2) == 'No solution'\nassert solution(3) == 'No solution'\nassert solution(4) == 'No solution'\n"
    },
    {
        "number": 3405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2.6') == '135135'\nassert solution('5.8') == '270'\nassert solution('1.96') == '270270'\nassert solution('3.01') == 'No solution'\nassert solution('8.12') == 'No solution'\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n4\n1 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n1\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n10\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n12\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_06_01.txt\").read()) == \"4\"\nassert solution(open(\"test_06_02.txt\").read()) == \"3\"\nassert solution(open(\"test_06_03.txt\").read()) == \"2\"\nassert solution(open(\"test_06_04.txt\").read()) == \"1\"\nassert solution(open(\"test_06_05.txt\").read()) == \"0\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\n'''\n'''\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('2\\n0 1\\n1 2\\n1 2') == '1'\nassert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('2\\n0 1\\n1 2\\n1 2') == '1'\nassert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5\\n7\\n0\\n2\\n0\\n6\\n7\\n1\\n9\\n1\\n5\\n0\\n5"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''3\n2 0\n1 1\n5 0\n3 2\n1 1\n2 0\n3 2\n2 0\n1 1\n3 0\n1 1\n2 2\n1 0\n1 1\n2 0\n3 2\n2 1\n1 1\n1 1\n1 1\n2 1\n3 2\n2 1\n1 1\n2 0\n2 0\n2 1\n2 2\n2 2\n2 2\n1 0\n1 1\n1 1\n1 0\n3 0\n1 1\n2 1\n1 1\n2 0\n1 0\n1 0\n1 1\n2 1\n2 1\n1 1\n2 0\n2 0\n2 0\n2 1\n2 1\n2 1\n1 0\n1 0\n1 1\n1 0\n1 1\n1 1\n1 0\n1 1\n1 1\n1 1\n1 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('2\\n0 1\\n1 1') == '1'\nassert solution('2\\n0 1\\n1 1\\n1 2') == '2'\nassert solution('5\\n0 1\\n1 1\\n1 2\\n2 1\\n3 3\\n3 4\\n4 5\\n5 4') == '2'\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n1\\n3\\n7\\n4\\n5\\n6\\n5\\n9\\n1\\n4\\n1\\n6\\n2\\n3\\n2\\n5\\n3\\n5\\n3\\n6\\n4\\n8\\n5\\n4\\n6\\n3\\n') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''0 1\n2 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '0'\nassert solution('''0 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n''') == '0'\nassert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '0'\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5''') == \\\n'''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000'''\nassert solution('''4\n1 2\n1 3\n1 4\n1 5''') == \\\n'''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000'''\nassert solution('''3\n1 2\n1 3\n2 3\n3 4\n3 5\n''') == \\\n'''0.0000000 0.0000000\n1.0000000 0.0000000\n0.0000000 1.0000000\n1.0000000 0.0000000\n0.0000000 -1.0000000'''\nassert solution('''3\n1 2\n1 3\n1 4\n''') == \\\n'''0.0000000 0.0000000\n1.0000000 0.0000000\n1.0000000 0.0000000'''\nassert solution('''2\n1 2\n2 3\n''') == \\\n'''0.0000000 0.0000000\n1.0000000 0.0000000\n1.0000000 0.0000000'''\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n    1 2\n    1 3\n    1 4\n    1 5\n    ''') == '''0.0000000 0.0000000\n    1.0000000 0.0000000\n    -1.0000000 0.0000000\n    0.0000000 1.0000000\n    0.0000000 -1.0000000\n    '''\n\nassert solution('''\n    7\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    1 7\n    ''') == '''0.0000000 0.0000000\n    1.0000000 0.0000000\n    -1.0000000 0.0000000\n    0.0000000 1.0000000\n    0.0000000 -1.0000000\n    '''\n\nassert solution('''\n    5\n    1 2\n    1 3\n    1 4\n    1 5\n    2 4\n    2 3\n    2 5\n    ''') == '''0.0000000 0.0000000\n    1.0000000 0.0000000\n    -1.0000000 0.0000000\n    0.0000000 1.0000000\n    0.0000000 -1.0000000\n    0.0000000 -1.0000000\n    0.0000000 1.0000000\n    '''\n\nassert solution('''\n    7\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    1 7\n    2 4\n    2 3\n    2 6\n    3 5\n    ''') == '''0.0000000 0.0000000\n    1.0000000 0.0000000\n    -1.0000000 0.0000000\n    0.0000000 1.0000000\n    0.0000000 -1.0000000\n    0.0000000 -1.0000000\n    0.0000000 1.0000000\n    '''\n\nassert solution('''\n    11\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    1 7\n    1 8\n    1 9\n    1 10\n    1 11\n    2 10\n    2 9\n    2 11\n    ''') == '''0.0000000 0.0000000\n    1.0000000 0.0000000\n    -1.0000000 0.0000000\n    0.0000000 1.0000000\n    0.0000000 -1.0000000\n    0.0000000 -1.0000000\n    0.0000000 1.0000000\n    '''"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0.0 0.0\"\nassert solution(\"2\") == \"0.0 1.0\"\nassert solution(\"3\") == \"1.0 0.0\"\nassert solution(\"4\") == \"1.0 1.0\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n3 4\\n4 5') == ''\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 4\\n3 4\\n4 5') == ''\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n3 4\\n4 5') == ''\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 4\\n3 4\\n4 5') == ''\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5''') == \"\"\"0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\"\"\"\n'''\n'''\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2\\n1 3\\n1 4') == '0.000000 0.000000\\n1.000000 0.000000\\n-1.000000 0.000000\\n0.000000 1.000000\\n0.000000 -1.000000'\nassert solution('2\\n1 2\\n2 3') == '0.000000 0.000000\\n1.000000 0.000000\\n-1.000000 0.000000'\nassert solution('4\\n1 2\\n2 3\\n3 4') == '0.000000 0.000000\\n1.000000 0.000000\\n-1.000000 0.000000\\n0.000000 1.000000\\n0.000000 -1.000000'\nassert solution('1\\n1') == '0.000000 0.000000\\n1.000000 0.000000\\n-1.000000 0.000000'\nassert solution('2\\n1 2') == '0.000000 0.000000\\n1.000000 0.000000\\n-1.000000 0.000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\""
    },
    {
        "number": 3407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n'''\nassert solution('''7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n1.0000000 1.0000000\n1.0000000 -1.0000000\n'''\nassert solution('''7\n2 1\n2 4\n2 6\n2 7\n1 3\n1 4\n1 5\n1 6\n1 7\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n1.0000000 1.0000000\n1.0000000 -1.0000000\n'''\nassert solution('''7\n2 1\n2 4\n2 6\n2 7\n1 3\n1 4\n1 5\n1 6\n1 7\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n1.0000000 1.0000000\n1.0000000 -1.0000000\n'''\nassert solution('''7\n2 1\n2 4\n2 6\n2 7\n1 3\n1 4\n1 5\n1 6\n1 7\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n1.0000000 1.0000000\n1.0000000 -1.0000000\n'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == 'abc'\nassert solution('3\\n2\\n1') == 'aaa'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == 'abcdefgh'\nassert solution('2\\n1\\n3\\n4\\n5\\n6\\n7') == 'abcdef'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == 'abcdef'\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2\\n1\\n1\\n1') == '3'\nassert solution('1\\n1\\n2\\n1\\n1\\n1\\n1') == '3'\nassert solution('1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n4\\n1\") == \"2\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '''2\n1\n1\n'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n2') == '1\\n2\\n0'\nassert solution('1\\n2\\n1') == '0\\n2\\n1'\nassert solution('1\\n2\\n1\\n2\\n1') == '1\\n1\\n1'\nassert solution('1\\n2\\n3') == '0\\n0\\n0'\nassert solution('1\\n1\\n3\\n2\\n2') == '2\\n3\\n0'\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\naa\\nba\\naaa\\nb\\na\\nb*') == '3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\naa\\nba\\naaa\\nb\\na\\nb*') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\naa\\nba\\naaa\\nb\\na\\nb*') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\naa\\nba\\naaa\\nb\\na\\nb*') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\naa\\nba\\naaa\\nb\\na\\nb*') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\n"
    },
    {
        "number": 3408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '2\\n1\\n1'\n'''\nassert solution('''6 6\naaaaaaaaa\nabcdefghij\nabcde*hg\nabcefgh\nab*c\naa*a*a\naa*a*b\n*aaa\n''') == '5\\n1\\n2\\n1\\n1'\n'''\nassert solution('''10 10\naaaaaaaaa\nabcdefghij\nabcde*hg\nabcefgh\nab*c\naa*a*a\naa*a*b\n*aaa\n''') == '5\\n1\\n2\\n1\\n1'\n'''\nassert solution('''2 2\na\n*a\n''') == '2\\n1'\n'''\nassert solution('''3 3\naaa\nabc\naba\na*a\n*aaa\n*aa\n*a\n''') == '2\\n1\\n1'\n'''\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\nOX\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4 2\nXO\nOX\nXO\nOX'''\n) == '1'\nassert solution(\n'''4 3\nXXX\nXOX\nXOO\nXXO\nXXO\nXXX\nXOO\nXOO\nXXO\nXOX\nXOO\nXXX'''\n) == '0'\n\nassert solution(\n'''2 1\nXX\nXX'''\n) == '1'\n\nassert solution(\n'''2 3\nXOX\nXXO\nOXX'''\n) == '0'\n\nassert solution(\n'''1 1\nX'''\n) == '1'"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nXXOO\\nOOOXX\") == \"1\"\nassert solution(\"4 4\\nXOXOX\\nXOXOX\\nXOXOX\\nXOXOX\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == '1'\nassert solution('5 2') == '0'\nassert solution('3 5') == '1'\nassert solution('2 3') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\n''') == '1'\n\nassert solution('''4 2\nXO\nOX\nXO\nOX\nOX\n''') == '0'\n\nassert solution('''4 2\nXO\nOX\nXO\nOX\nOX\n''') == '0'\n\nassert solution('''5 3\nOXX\nOXX\nXXX\nXOO\nXOO\n''') == '1'\n\nassert solution('''7 4\nOXXO\nOOOO\nOOOXX\nOOOOO\nOOOOX\nXOOOO\nXOXXO\n''') == '0'"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"4 5\") == \"0\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\n''') == '1'\nassert solution('''2 1\nXX\n''') == '0'\nassert solution('''1 1\nXX\n''') == '0'\nassert solution('''2 2\nXO\nOX\n''') == '0'\nassert solution('''2 2\nXO\nOX\n''') == '1'\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('2\\n0 0\\n0 2\\n0 2\\n0 -2\\n0 0\\n0 0') == '4'\nassert solution('2\\n0 0\\n0 2\\n0 2\\n0 0\\n0 2\\n0 0') == '8'\nassert solution('2\\n0 0\\n0 2\\n0 2\\n0 0\\n0 2\\n0 0') == '16'\nassert solution('1\\n0 0') == '0'\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n0 0\n-2 0\n0 -2\n0 0''') == '16'\nassert solution('''3\n2 0\n0 2\n-2 0\n0 -2''') == '18'\nassert solution('''2\n-1 -1\n-1 1''') == '4'\nassert solution('''3\n-1 -1\n-1 1\n-2 -1''') == '6'\nassert solution('''4\n-1 -1\n-1 1\n0 0\n-2 -1''') == '14'\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n0 0\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''4\n2 0\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''6\n0 0\n0 2\n-2 0\n0 -2\n2 0\n0 2\n''') == '48'\nassert solution('''10\n0 0\n0 2\n-2 0\n0 -2\n2 0\n0 2\n4 0\n0 4\n-2 0\n0 -2\n''') == '456'\nassert solution('''20\n1 1\n-1 1\n2 2\n0 2\n-1 2\n0 2\n0 1\n1 1\n-1 -1\n2 -2\n0 -2\n-2 2\n2 2\n-1 1\n1 1\n-1 -1\n1 -2\n0 -2\n-2 -2\n2 -2\n-2 -1\n2 -1\n1 -1\n1 -2\n0 1\n1 1\n1 2\n-1 -1\n-1 -2\n-2 -2\n-2 -1\n2 -1\n-2 2\n2 1\n-1 1\n2 -1\n-2 1\n2 -2\n-1 -1\n2 2\n1 1\n-1 1\n1 -1\n-1 -1\n''') == '6008'\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1 1\") == \"1\"\nassert solution(\"2\\n1 1\") == \"2\"\nassert solution(\"3\\n1 1\") == \"6\"\nassert solution(\"4\\n1 1\") == \"4\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n0 2\\n-2 0\\n0 -2\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n-2 0\\n2 0\") == \"56\"\n\"\"\""
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 16\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"16\"\n\"\"\"\nimport sys"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n0 0\n0 2\n-2 0\n0 -2''') == \"16\"\nassert solution('''3\n3 0\n0 3\n-3 0\n0 -3''') == \"6\"\nassert solution('''4\n1 0\n1 0\n1 0\n1 0''') == \"12\"\nassert solution('''4\n1 0\n0 1\n-1 0\n0 -1''') == \"2\"\nassert solution('''4\n0 0\n-1 0\n1 1\n1 1''') == \"5\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n0 0\n0 2\n-2 0\n0 -2''') == '16'\nassert solution('''8\n3 0\n-3 0\n2 1\n-2 2\n-1 1\n0 0\n1 1\n2 2''') == '23'\nassert solution('''10\n-3 0\n0 0\n3 0\n-3 0\n-2 1\n0 0\n-1 1\n1 1\n2 2\n2 3''') == '23'\nassert solution('''10\n-1 0\n0 0\n1 0\n-1 0\n-2 1\n0 0\n1 1\n2 2\n2 3''') == '23'\nassert solution('''10\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0''') == '24'\n"
    },
    {
        "number": 3410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0\n1 1\n1 -1\n-1 -1''') == 16\nassert solution('''2\n2 0\n0 2\n2 2''') == 32\nassert solution('''2\n-1 -1\n1 1''') == 0\nassert solution('''3\n3 0\n-2 0\n0 -2\n3 3''') == 12\nassert solution('''3\n-1 -1\n1 1\n0 0\n3 3''') == 0\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 10 50\n8 8 2 -2''') == '80'\nassert solution('''8 8 2 -2\n4 4 1 1''') == '80'\nassert solution('''8 8 2 -2\n4 4 1 1''') == '80'\nassert solution('''8 8 2 -2\n8 -2 1 1''') == '80'\nassert solution('''8 8 2 -2\n-2 1 1''') == '80'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 10 50\") == \"80\"\nassert solution(\"8 8 2 -2\") == \"80\"\nassert solution(\"5 10 100\") == \"90\"\nassert solution(\"2 10 100\") == \"90\"\nassert solution(\"4 100 100\") == \"90\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 10 50\") == \"80\"\nassert solution(\"5 10 30\") == \"80\"\nassert solution(\"3 10 30\") == \"60\"\nassert solution(\"5 10 40\") == \"160\"\nassert solution(\"5 10 60\") == \"180\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"8 10 50\"\"\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '80'\n'''\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"80\"\n\n\"\"\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '80'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 10 50') == '80'\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(1000000)\n\nN, C, R = [int(x) for x in stdin.strip().split(' ')]\nS = list(int(x) for x in stdin.strip().split(' '))"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 10 50\\n8 8 2 -2\\n') == '80'\nassert solution('4 10 50\\n8 8 2 -2\\n') == '80'\nassert solution('1 10 50\\n1 1 1 1 1\\n') == '50'\nassert solution('1 10 50\\n1 1 1 1 1\\n') == '50'\nassert solution('1 10 50\\n1 1 1 1 1\\n') == '50'\n"
    },
    {
        "number": 3411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 10 50') == '80'\nassert solution('-10 9 10') == '40'\nassert solution('3 5 4') == '15'\nassert solution('2 8 3') == '9'\nassert solution('1 3 1') == '1'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000'\nassert solution('2 5\\n1 2\\n1 1\\n0 0') == '0.5'\nassert solution('1 1\\n0 0\\n1 0\\n0 0') == '0'\nassert solution('1 1\\n0 0\\n0 0\\n0 0') == '0'\nassert solution('1 1\\n0 0\\n1 0\\n0 0') == '0'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_files/Y11R5P1/A.in\").read()) == \"1.000000000\"\nassert solution(open(\"test_files/Y11R5P1/B.in\").read()) == \"3.000000000\"\nassert solution(open(\"test_files/Y11R5P1/C.in\").read()) == \"0.000000000\"\nassert solution(open(\"test_files/Y11R5P1/D.in\").read()) == \"0.000000000\"\nassert solution(open(\"test_files/Y11R5P1/E.in\").read()) == \"1.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6'''\n    ) == '3.000000000'\n\nassert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n7 6\n8 7\n4 4\n5 3\n3 2\n2 1\n6 1\n8 1\n6 3\n1 0\n3 1\n9 1\n2 3\n3 6\n4 5\n2 7'''\n    ) == '6.000000000'\n\nassert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n7 6\n8 7\n4 4\n5 3\n3 2\n2 1\n6 1\n8 1\n6 3\n1 0\n3 1\n9 1\n2 3\n3 6\n4 5\n2 7'''\n    ) == '10.000000000'\n\nassert solution(\n'''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n7 6\n8 7\n4 4\n5 3\n3 2\n2 1\n6 1\n8 1\n6 3\n1 0\n3 1\n9 1\n2 3\n3 6\n4 5\n2 7'''\n    ) == '18.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'\n'''\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 8') == '3.000000000'\nassert solution('1 9') == '4.000000000'\nassert solution('1 9') == '4.000000000'\nassert solution('1 9') == '4.000000000'\nassert solution('1 9') == '4.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n7 7\n2 2\n9 6''') == '6.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 7\n2 2\n9 6''') == '9.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n7 7\n2 2\n9 6''') == '9.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n7 7\n2 2\n9 6\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n1 1\n1 2\n9 3\n5 6\n0 0 4 4\n2 2\n7 7\n3 3\n8 8\n4 4\n''') == '7.0'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n0 0 4 4\n2 2\n7 7\n3 3\n8 8\n4 4\n''') == '8.0'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n0 0 4 4\n2 2\n7 7\n3 3\n8 8\n4 4\n''') == '6.0'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n0 0 4 4\n2 2\n7 7\n3 3\n8 8\n4 4\n''') == '7.0'\n"
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.050000\"\n\"\"\""
    },
    {
        "number": 3412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3.000000000\"\n\n\"\"\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\n\nassert solution(\"4 3\") == '1'\n\nassert solution(\"4 1\") == '0'\n\nassert solution(\"4 1\") == '0'\n\nassert solution(\"5 3\") == '2'"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 1\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == 1\nassert solution(\"2\\n2\") == 0\nassert solution(\"3\\n1\\n0\\n0\") == 1\nassert solution(\"4\\n1\\n0\\n0\\n1\") == 1\nassert solution(\"5\\n5\\n0\\n0\\n0\\n0\\n1\") == 1\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4''') == \"1\"\nassert solution('''4 4\n1 1 1 1\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4''') == \"3\"\nassert solution('''5 5\n1 1 1 1 1\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n4 5\n2 5\n3 4\n4 5\n2 5\n3 4\n4 5\n2 5\n3 4\n4 5\n2 5\n3 4\n4 5''') == \"4\"\nassert solution('''5 6\n1 1 1 1 1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n2 6\n3 5\n4 5\n5 6\n2 6\n3 5\n4 5\n5 6\n2 6\n3 5\n4 5\n5 6\n2 6\n3 5\n4 5\n5 6\n2 6\n3 5\n4 5\n5 6\n2 6\n3 5\n4 5\n5 6\n2 6\n3 5\n4 5\n5 6''') == \"5\"\nassert solution('''7 5\n1 1 1 1 1 1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n3 7\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n2 7\n3 6\n4 6\n5 6\n6 7\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\nassert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\nassert solution('''3 2\n0 1 0\n1 2\n2 3\n''') == '2'\nassert solution('''4 3\n0 1 0 0\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''3 3\n0 1 0\n1 2\n2 3\n''') == '3'\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\nassert solution('''\n3 4\n0 0\n1 1\n2 2\n2 3\n''') == '2'\nassert solution('''\n4 5\n0 1 0 0\n1 2\n1 3\n2 4\n2 3\n''') == '3'\nassert solution('''\n4 4\n0 1 0 0\n1 2\n1 3\n2 3\n2 4\n''') == '2'\nassert solution('''\n5 5\n0 1 0 0 0\n1 2\n1 3\n2 3\n2 4\n2 5\n''') == '3'\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_data/test_solution_4_3.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"test_data/test_solution_5_6.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"test_data/test_solution_5_7.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"test_data/test_solution_5_8.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"test_data/test_solution_5_9.txt\", \"r\").read()) == \"3\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1 0 0') == '1'\nassert solution('1 2') == '2'\nassert solution('2 3') == '3'\nassert solution('2 4') == '2'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n2\\n2\\n2\\n2\\n2\\n\") == \"4\"\nassert solution(\"3\\n3\\n2\\n2\\n2\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n3\\n3\\n2\\n2\\n\") == \"1\"\nassert solution(\"3\\n3\\n3\\n3\\n3\\n3\\n\") == \"0\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\nassert solution('''4 1\n1 1\n0 0\n1 1\n''') == '1'\nassert solution('''8 6\n0 1 0 0 0 0 0\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n''') == '2'\nassert solution('''8 7\n0 1 0 0 0 0 0\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n''') == '4'\nassert solution('''10 5\n0 1 0 0 0 0 0 0 0 0 0\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n''') == '10'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6.283185'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n0 1\") == \"6.283185\"\nassert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n0 1\") == \"6.283185\"\nassert solution(\"3 4\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n0 1\") == \"0.785398163397448\"\nassert solution(\"3 5\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n0 1\") == \"0.962264150943396\"\nassert solution(\"3 4\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n0 1\") == \"0.785398163397448\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0\") == \"0\"\nassert solution(\"0 1\") == \"1.09\"\nassert solution(\"1 0\") == \"0.785398\"\nassert solution(\"0 1\") == \"1.09\"\nassert solution(\"0 2\") == \"1.141592653589793\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/01-test-data/01-test-data-1.txt\").read()))\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '6.283185'\nassert solution('''5 5\n0 0\n0 1\n1 0\n0 2\n1 2\n0 3\n1 3\n0 4\n1 4\n0 5\n1 5''') == '0'\nassert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '2.5'\nassert solution('''2 5\n0 1\n0 2\n1 2\n1 3\n0 4\n1 4\n0 5\n1 5\n0 6\n1 6\n0 7\n1 7\n0 8\n1 8''') == '0'\nassert solution('''3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2''') == '0'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n') == '6.283185'\nassert solution('2 3\\n1 1\\n0 2\\n1 2\\n0 1\\n0 2\\n0 2') == '0.785398'\nassert solution('2 3\\n1 0\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1') == '1.4386'\nassert solution('3 3\\n1 0\\n0 1\\n0 1\\n0 2\\n0 2\\n1 2') == '0.898'\nassert solution('4 4\\n0 0\\n0 1\\n0 2\\n0 3\\n0 4\\n1 2\\n1 3\\n1 4\\n1 3\\n2 3\\n2 4\\n2 3\\n3 4\\n3 4') == '0.5'\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n') == '6.283185'\n\"\"\"\n\nfrom math import acos, pi\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\"\"\") == \"6.283185\"\n\"\"\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6.283185'\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"1 2 3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1 2\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"6\") == \"1 2 3 4 5 6\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\nsolution = lambda n:''.join([str(i) for i in range(1, 2**n)])\n\nassert solution('2') == '1 2'\n\nsolution = lambda n:''.join([str(i) for i in range(1, 2**n)])\n\nassert solution('2') == '1 2'\n\nsolution = lambda n:''.join([str(i) for i in range(1, 2**n)])\n\nassert solution('2') == '1 2'\n\nsolution = lambda n:''.join([str(i) for i in range(1, 2**n)])\n\nassert solution('2') == '1 2'\n\nsolution = lambda n:''.join([str(i) for i in range(1, 2**n)])"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2''') == '1 2 3'\n'''\nThe tree looks like this:\n     1\n   /   \\\n  2     3\n\nThe sum of the left subtree and right subtree is 2 + 3 = 5, which is 1 - 5 = -4. The sum of the left subtree and the right subtree is 2 + 3 = 5, which is 1 - 5 = -4. The difference is -4. So the binary tree is:\n\n(1)\n   / \\\n (2) (3)\n\nWe have shown you the preorder traversal here. The following are the values of the left and right subtrees.\n\nleft subtree values\n(2) 2\n(3) 3\n\nright subtree values\n(2) 3\n(3) 4\n\nThus the absolute value of the difference is -4, which is written as a space: 1 - 4 = -3.\n\nhttps://www.codewars.com/kata/the-complete-binary-tree-is-made-of-nodes-arranged-in-a-hierarchic-structure-1000000010000\n'''\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('3') == '100'\nassert solution('4') == '1000'\n"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n''') == '1 2 3 4'\n\nassert solution('''6\n''') == '1 2 3 4 5 6'\n\nassert solution('''8\n''') == '1 2 3 4 5 6 7 8'\n\nassert solution('''16\n''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16'\n\nassert solution('''17\n''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17'"
    },
    {
        "number": 3415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == '1 2 3'\nassert solution('''3''') == '1 2 3'\nassert solution('''4''') == '1 2 3 4'\nassert solution('''5''') == '1 2 3 4 5'\nassert solution('''6''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == '1'\nassert solution('''4 4\n1 2\n1 3\n2 4\n2 3\n3 4\n2 1\n''') == '1'\nassert solution('''4 4\n1 2\n1 3\n2 4\n3 4\n3 2\n3 1\n2 4\n2 3\n2 1\n''') == '2'\nassert solution('''2 2\n1 2\n2 1\n''') == '1'\nassert solution('''2 1\n1 2\n2 1\n''') == '1'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == '1\\n1 2 3 4'\n\nassert solution('''2 3\n1 2\n2 3''') == '1\\n2'\n\nassert solution('''4 5\n1 3\n2 4\n3 4\n4 5\n3 2\n1 2\n4 2\n1 3\n3 4\n3 5''') == '1\\n1 3 4 5'\n\nassert solution('''4 4\n1 2\n1 3\n2 3\n3 4\n1 3\n1 2\n2 3\n3 4\n1 2\n1 3\n2 4\n1 3\n1 2\n3 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3''') == '1\\n1 2 3 4'\n\nassert solution('''4 4\n1 2\n1 3\n2 3\n3 4\n1 2\n2 3\n1 3\n1 2\n3 4\n1 2\n1 3\n2 4\n1 3\n1 2\n3 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n1 2\n2 4\n2 3\n1 2\n3 4\n2 3\n1 2\n1 3\n2 4\n1 3\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('1 2') == None\nassert solution('1 2\\n1 3') == None\nassert solution('1 2\\n1 3\\n2 4\\n3 4') == None\nassert solution('1 2\\n1 3\\n2 4\\n3 4\\n4 1') == '1'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1\\n1 2 3 4'\nassert solution('''\n1 1\n1 1\n2 2\n3 3\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1\\n2 3 4'\nassert solution('''\n1 1\n1 1\n2 2\n3 3\n4 4\n1 2\n1 3\n2 4\n1 2\n''') == '1\\n2 3 4'\nassert solution('''\n1 1\n1 1\n2 2\n1 3\n1 3\n2 4\n1 2\n1 3\n1 4\n2 4\n1 2\n''') == '1\\n2 4'\nassert solution('''\n4 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n3 5\n4 5\n''') == '1\\n1 2 3 4 5'\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == '1\\n1 2 3 4\\n'\nassert solution('''4 4\n1 3\n2 4\n2 3\n1 3''') == '\\n'\nassert solution('''4 3\n1 2\n1 3\n2 3\n2 4\n3 4\n1 4''') == '1\\n1 2 3\\n'\nassert solution('''4 4\n1 2\n1 3\n2 4\n1 3''') == '\\n'\nassert solution('''6 5\n1 2\n2 5\n3 5\n2 6\n1 6\n2 6\n2 4\n5 4\n6 4\n1 5\n3 5\n2 4\n6 4\n1 5\n3 5\n2 4\n1 5\n3 5\n2 4\n3 5\n2 4\n1 5\n3 5\n2 4\n1 5\n3 5\n2 4\n1 5\n3 5\n2 4\n1 5\n3 5\n2 4\n1 5\n3 5\n2 4\n3 5\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"\"\nassert solution(\"5 5\") == \"\"\nassert solution(\"4 4\") == \"\"\nassert solution(\"5 5\") == \"\"\nassert solution(\"4 4\") == \"\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == \"1\\n1 2 3 4\\n\"\nassert solution('''4 4\n1 2\n1 3\n2 4\n1 3''') == \"1\\n1 2 3 4\\n\"\nassert solution('''8 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8\n8 7''') == \"1\\n1 2 3 4 5 6 7 8\\n\"\nassert solution('''10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n10 8''') == \"1\\n1 2 3 4 5 6 7 8 9 10\\n\"\nassert solution('''3 2\n1 2\n2 1\n1 3''') == \"1\\n1 2 3\\n\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"6 6\") == \"1 2 3 4 5 6\"\nassert solution(\"5 4\") == \"1 2 3 4\"\nassert solution(\"3 2\") == \"1 2\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 4\n3 4''') == '1\\n1 2 3 4'\nassert solution('''3 3\n2 1\n1 3\n3 2\n2 1''') == '1\\n1 2'\nassert solution('''4 3\n3 1\n1 2\n2 3\n3 1''') == '2\\n1 2 3'\nassert solution('''3 4\n1 2\n2 3\n3 4\n2 1\n1 2\n3 1''') == '1\\n1 2 2 3'\nassert solution('''3 3\n1 2\n1 3\n2 3\n2 1\n3 1\n1 2''') == '1\\n1 2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n'''\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1\n1 2\nSample Output:\n1''') == \"1\"\nassert solution('''2 2\n1 2\nSample Output:\n2''') == \"2\"\nassert solution('''3 3\n1 2\n2 3\n3 4\n3 5\nSample Output:\n3\n''') == \"3\"\nassert solution('''4 7\n1 2\n2 3\n1 3\n2 4\n3 4\n3 5\n4 5\nSample Output:\n5\n''') == \"5\"\nassert solution('''5 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 4\n2 6\n2 7\n2 8\n3 5\n3 9\n3 10\n4 8\n5 7\n6 8\n7 9\n8 10\n9 11\nSample Output:\n8\n''') == \"8\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2\n2 3\n1 3''') == '1'\nassert solution('''1 2\n1 3\n2 3''') == '1'\nassert solution('''1 2\n2 3\n3 4\n1 4''') == '3'\n'''\n\n-----Notes-----\n - Use a queue to find the connected vertices.\n\n'''\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1\n1 2''') == '1'\nassert solution('''2 1\n1 2''') == '1'\nassert solution('''1 3\n1 2\n1 3\n2 3\n2 4\n1 4''') == '3'\nassert solution('''5 4\n1 2\n2 3\n3 4\n4 5\n5 4\n1 4\n2 4\n3 4\n1 3\n2 4\n3 4\n''') == '4'\nassert solution('''5 4\n1 2\n1 3\n2 3\n2 4\n1 4\n3 4\n1 3\n2 4\n1 4\n2 4\n3 4\n''') == '4'\n'''\n-----Solutions-----\n\n## SOLUTION 1\n## -----------------\n## 1. Sorted all the edges in an adjacency list\n## 2. Traverse the edges in the list\n## 3. If an edge is a bridge, add it to the set of bridges\n## 4. Continue with the next vertex in the list\n## 5. If we finish traversing the list, all vertices are bridges\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '2'\nassert solution('1 3') == '2'\nassert solution('2 3') == '2'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1\n1 2\n''') == '1'\nassert solution('''2 2\n1 2\n1 3\n''') == '2'\nassert solution('''3 3\n1 2\n1 3\n2 3\n''') == '3'\nassert solution('''3 4\n1 2\n1 3\n2 3\n1 4\n''') == '3'\nassert solution('''2 4\n1 2\n1 3\n2 3\n1 4\n''') == '3'\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n2 1\n1 2\n''') == '1'\nassert solution(\n'''\n4 5\n1 2\n2 3\n3 4\n4 5\n''') == '2'\nassert solution(\n'''\n4 4\n1 2\n2 3\n3 4\n4 5\n''') == '2'\nassert solution(\n'''\n3 3\n1 2\n2 3\n3 4\n''') == '2'\nassert solution(\n'''\n4 4\n1 2\n2 3\n3 4\n4 5\n''') == '2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 2''') == '1'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''4 3\n1 2\n1 3\n1 4\n2 4\n3 4''') == '3'\nassert solution('''6 5\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n3 4\n4 5\n4 6\n5 6''') == '5'\nassert solution('''7 6\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n5 7''') == '7'\n"
    },
    {
        "number": 3417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\n\n\"\"\"\n\nimport sys\nfrom typing import List, Set, Tuple\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == 45\nassert solution('3') == 864\nassert solution('4') == 1296\nassert solution('10') == 52628\nassert solution('1000') == 10094314166858\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(2) == 45\nassert solution(5) == 130\nassert solution(8) == 350\nassert solution(10) == 750\nassert solution(12) == 1510\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 3\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(2) == \"45\"\nassert solution(3) == \"45\"\nassert solution(4) == \"45\"\nassert solution(5) == \"45\"\nassert solution(6) == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(2) == \"45\"\nassert solution(3) == \"36\"\nassert solution(4) == \"39\"\nassert solution(5) == \"45\"\nassert solution(6) == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2) == 45\nassert solution(3) == 55\nassert solution(5) == 70\nassert solution(8) == 110\nassert solution(10) == 140\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(2) == 45\nassert solution(3) == 60\nassert solution(4) == 100\nassert solution(5) == 120\nassert solution(6) == 144\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"45\"\nassert solution(\"123\") == \"5\"\nassert solution(\"12345\") == \"5\"\nassert solution(\"123456\") == \"45\"\nassert solution(\"1234567\") == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(2) == 45\nassert solution(3) == 90\nassert solution(4) == 190\nassert solution(5) == 280\nassert solution(6) == 370\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 10 10\\n7 11 9 12 2') == '4'\nassert solution('3 1 1\\n1 1 1') == '1'\nassert solution('3 1 1\\n3 2 3\\n3 2 3') == '2'\nassert solution('3 1 1\\n3 2 3\\n1 2 1') == '2'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 20 20\n7 11 9 12 2''') == '4'\n'''\nassert solution('''5 10 30\n1 3 5 6 2''') == '6'\n'''\nassert solution('''5 50 50\n4 5 3 2 1''') == '1'\n'''\nassert solution('''5 50 50\n3 2 1 0 1''') == '5'\n'''\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\n\"\"\"\nfrom functools import lru_cache"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\nassert solution('5 10 10\\n7 11 9 12 2') == '2'\nassert solution('5 10 10\\n7 11 9 11 2') == '3'\nassert solution('5 10 10\\n7 11 9 9 11 2') == '3'\nassert solution('5 10 10\\n7 11 9 9 11 2') == '3'\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\nassert solution('2 100 1000\\n4 10 50 2') == '10'\nassert solution('10 5 10\\n4 10 50 2') == '5'\nassert solution('5 10 10\\n4 10 50 2') == '5'\nassert solution('5 2 4\\n2 2 2') == '3'\n"
    },
    {
        "number": 3419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 1 1\\n1\") == \"2\"\nassert solution(\"5 2 2\\n7 11 9 12 2\") == \"2\"\nassert solution(\"5 1 1\\n1\") == \"2\"\nassert solution(\"5 1 1\\n1\") == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\nassert solution('''2 3\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings''') == '3'\nassert solution('''3 5\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings''') == '4'\nassert solution('''6 2\nlarry 1 harrypotter1\nharry 1 harrypotter1\nlarry 1 harrypotter1\nlarry 1 harrypotter1\nlarry 1 harrypotter1\nlarry 1 harrypotter1''') == '4'\nassert solution('''7 3\nlarry 1 harrypotter1\nharry 1 harrypotter1\nlarry 1 harrypotter1\nlarry 1 harrypotter1\nlarry 1 harrypotter1\nlarry 1 harrypotter1\nlarry 1 harrypotter1''') == '5'\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\nassert stdin == \"\"\"2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\"\"\"\n\nprint(solution(stdin))\n\"\"\"\n\n1 1\nalice1 alice1\nalice1 alice1\nbob1 bob1\nbob1 bob1\nbob1 bob1\nbob1 bob1\nbob1 bob1\n\"\"\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'\nstdin = '''1 1\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings'''\nassert solution(stdin) == '2'\nstdin = '''2 1\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings'''\nassert solution(stdin) == '2'\nstdin = '''2 1\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\njenny 1 harrypotter1\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\nlaura 1 lordoftherings'''\nassert solution(stdin) == '2'\n'''\n\n'''\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\nassert solution(\"2 3\") == \"2\"\n\nassert solution(\"1 1\") == \"2\"\n\nassert solution(\"2 2\") == \"2\"\n\nassert solution(\"1 3\") == \"1\""
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\nassert solution('''3 2\nfred 1 andrew1\njoey 1 andrew1\nsam 1 frank1\nbill 1 andrew1\njames 1 frank1\nsam 1 frank1\nfred 1 andrew1\njoey 1 andrew1\nbill 1 andrew1\nsam 1 frank1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew1\nsam 1 andrew"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2'\nassert solution('1 1\\na 1\\nb 1\\nc 1\\n1 1') == '3'\nassert solution('1 1\\na 1\\nb 1\\nc 1\\n1 1') == '1'\nassert solution('1 1\\na 1\\nb 1\\nc 1\\n1 1') == '2'\nassert solution('1 1\\na 1\\nb 1\\nc 1\\n1 1') == '1'\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\n\nassert solution('''1 1\nbob1\nbob2\nbob3\nbob4''') == '1'\n\nassert solution('''3 3\nmike1\nmike2\nmike3\nmike4\nmike5\nmike6\nmike7\nmike8''') == '1'\n\nassert solution('''4 4\nmike1\nmike2\nmike3\nmike4\nmike5\nmike6\nmike7\nmike8\nmike9\nmike10\nmike11\nmike12''') == '5'\n\nassert solution('''7 8\nmike1\nmike2\nmike3\nmike4\nmike5\nmike6\nmike7\nmike8\nmike9\nmike10\nmike11\nmike12\nmike13''') == '4'"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_input\", \"r\").read()) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n2 2\\nharrypotter1 harry1\\ncharlie1 charlie1\\njenny1 jenny1\\nharrypotter1 harry1\\n1 1\\nharry1 harry1\\ncharlie1 charlie1\\n1 1\\nharry1 harry1\\n1 1\\nharry1 harry1\") == \"2\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n2 2\\nharrypotter1 harry1\\ncharlie1 charlie1\\njenny1 jenny1\\nharrypotter1 harry1\\n1 1\\nharry1 harry1\\ncharlie1 charlie1\\n1 1\\nharry1 harry1\\n1 1\\nharry1 harry1\") == \"2\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n2 2\\nharrypotter1 harry1\\ncharlie1 charlie1\\njenny1 jenny1\\nharrypotter1 harry1\\n1 1\\nharry1 harry1\\ncharlie1 charlie1\\n1 1\\nharry1 harry1\\n1 1\\nharry1 harry1\") == \"4\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n2 2\\nharrypotter1 harry1\\ncharlie1 charlie1\\njenny1 jenny1\\nharrypotter1 harry1\\n1 1\\nharry1 harry1\\ncharlie1 charlie1\\n1 1\\nharry1 harry1\\n1 1\\nharry1 harry1\") == \"4\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n2 2\\nharrypotter1 harry1\\ncharlie1 charlie1\\njenny1 jenny1\\nharrypotter1 harry1\\n1 1\\nharry1 harry1\\ncharlie1 charlie1\\n1 1\\nharry1 harry1\\n1 1\\nharry1 harry1\") == \"5\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2 1'\n\"\"\""
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1 1'\nassert solution('01') == '2 1'\nassert solution('10') == '3 1'\nassert solution('10110') == '4 1'\nassert solution('1000110011') == '10 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('01') == '2 1'\nassert solution('010') == '2 2'\nassert solution('0101') == '2 3'\nassert solution('010101') == '2 5'\nassert solution('01010101') == '2 6'\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n01\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n\n\"-----------------------------------------------------------------------------------\""
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"1\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"1 1\\n\" +\n\"0 1\\n\" +\n\"1 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 1\\n\" +\n\"1 0\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"1 1\\n\" +\n\"1 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 1\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"1 0\\n\" +\n\"0 1\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"1 1\\n\" +\n\"1 1\\n\" +\n\"1 0\\n\" +\n\"0 1\\n\" +\n\"1 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"1 1\\n\" +\n\"1 1\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"1 1\\n\" +\n\"1 1\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"0 1\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"1 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"1 1\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"0 0\\n\" +\n\"0 1\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"1 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\n\" +\n\"0 0\\"
    },
    {
        "number": 3421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n01') == '2 1'\n\"\"\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n\"\"\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\"\n\nassert solution(\n\"\"\"1\n5 4\n0 1 1 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2 1') == ''\nassert solution('2 4') == '4 3'\nassert solution('3 1') == '4 3'\nassert solution('3 5') == '11 5'\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n''') == '4 3'\n\nassert solution('''4\n4 4\n1 2\n1 1\n11\n1 1\n1 1\n1 1\n1 1\n''') == '4 4'\n\nassert solution('''5\n5 5\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '5 5'\n\nassert solution('''6\n6 6\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '6 6'\n\nassert solution('''7\n7 7\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '7 7'"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3'\nassert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3'\nassert solution('''6\n5 7\n11 11\n11 11\n11 11\n11 11\n11 11''') == '2 2'\nassert solution('''6\n3 5\n11 11\n11 11\n11 11\n11 11\n11 11''') == '1 3'\nassert solution('''6\n3 5\n11 11\n11 11\n11 11\n11 11\n11 11''') == '2 3'\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('''4\n3 2\n112\n23\n12\n1 2\n1 2\n''') == '8 4\\n11223\\n12112\\n23122\\n'\nassert solution('''5\n5 3\n1234\n1234\n1234\n1234\n1234\n''') == '1 2\\n234\\n1234\\n2345\\n1234\\n'\nassert solution('''3\n3 3\n11111\n1111\n1111\n''') == '1 2\\n1 2\\n1 2\\n'\nassert solution('''1\n3 1\n''') == '1 2\\n'\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(dedent(\"\"\"\n        4\n        1 4\n        23\n        21\n        10\n        2 2\n        23\n        12\n    \"\"\")) == dedent(\"\"\"\n        4 3\n        2123\n        1012\n        2123\n    \"\"\")\n\n\"\"\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 1\n2123\n2 2\n21\n10''') == '4 3\\n2123\\n1012\\n2123\\n'\n\nassert solution('''3\n4 1\n2123\n2 2\n21\n10''') == '4 3\\n2123\\n1012\\n2123\\n'\n\nassert solution('''5\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n2 1\n23\n12\n"
    },
    {
        "number": 3422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2 libtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nlibtiff libjpeg zlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n\") == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11\"\nassert solution(\"libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nlibtiff libjpeg zlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n\") == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11\"\nassert solution(\"14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nlibtiff libjpeg zlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n\") == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ntiff\\ngtk2\\nvim-X11\"\n\"\"\""
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n1\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''\n\nassert solution('''\n8\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n'''\n\nassert solution('''\n0\n0\n''') == '''\ncannot be ordered\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == '''atk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''\n\nassert solution('''\n1\na\n''') == 'a'\nassert solution('''\n1\nb\n''') == 'b'\nassert solution('''\n2\na\nb\n''') == 'cannot be ordered'\nassert solution('''\n6\na\nb\nc\nd\ne\nf\n''') == 'cannot be ordered'\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\nlibattr vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2 libtiff libjpeg atk pango xorg-x11-libs freetype glib2 freetype gtk2\\nlibjpeg zlib libjpeg libtiff zlib libjpeg pcre gtk2 lisp xorg-x11-libs lisp emacs xorg-x11 lisp\\nemacs xorg-x11 lisp') == 'atk gtk2 freetype atk freetype glib2 vim-common lisp pcre freetype lisp libattr lisp emacs gtk2 xorg-x11 lisp xorg-x11-libs lisp zlib libjpeg libtiff zlib xorg-x11-libs gtk2'\nassert solution('10\\nlibattr vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2 libtiff libjpeg atk pango xorg-x11-libs freetype glib2 freetype gtk2\\nlibjpeg zlib libjpeg libtiff zlib libjpeg pcre gtk2 lisp xorg-x11-libs lisp emacs xorg-x11 lisp\\nemacs xorg-x11 lisp') == 'gtk2 freetype freetype glib2 vim-common lisp pcre libattr atk gtk2 pango pango lisp gtk2 atk libtiff lisp gtk2 lisp atk freetype libjpeg freetype pcre lisp lisp emacs gtk2 atk xorg-x11 lisp'\nassert solution('14\\nlibattr vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2 libtiff libjpeg atk pango xorg-x11-libs freetype glib2 freetype gtk2\\nlibjpeg zlib libjpeg libtiff zlib libjpeg pcre gtk2 lisp xorg-x11-libs lisp emacs xorg-x11 lisp\\nemacs xorg-x11 lisp') == 'atk gtk2 freetype freetype glib2 gtk2 vim-common lisp pcre libattr atk lisp libjpeg freetype lisp libattr lisp atk pango pango lisp gtk2 lisp atk lisp libtiff lisp atk gtk2 lisp libtiff gtk2'\nassert solution('14\\nlibattr vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2 libtiff libjpeg atk pango xorg-x11-libs freetype glib2 freetype gtk2\\nlibjpeg zlib libjpeg libtiff zlib libjpeg pcre gtk2 lisp xorg-x11-libs lisp emacs xorg-x11 lisp\\nemacs xorg-x11 lisp') == 'atk gtk2 freetype freetype glib2 gtk2 vim-common lisp pcre libattr lisp lisp atk gtk2 lisp atk lisp libjpeg freetype lisp libattr atk lisp lisp atk pango pango lisp gtk2 lisp gtk2 lisp atk lisp libtiff lisp lisp atk gtk2 lisp libtiff gtk2'\nassert solution('14\\nlibattr vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2 libtiff libjpeg atk pango xorg-x11-libs freetype glib2 freetype gtk2\\nlibjpeg zlib libjpeg libtiff zlib libjpeg pcre gtk2 lisp xorg-x11-libs lisp emacs xorg-x11 lisp\\nemacs xorg-x11 lisp') == 'atk gtk2 freetype freetype glib2 gtk2 vim-common lisp pcre libattr lisp lisp atk lisp lisp libtiff lisp libattr lisp atk gtk2 lisp atk lisp libjpeg freetype lisp lisp lisp gtk2 lisp atk lisp gtk2 lisp lisp'\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ngtk2\\nvim-X11'\n\nassert solution('14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n1') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2'\nassert solution('\\n1\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n\\n') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2'\nassert solution('\\n1\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n\\n') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2'\nassert solution('\\n1\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n\\n') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2'\nassert solution('\\n1\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n\\n') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2'\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == \"\"\"atk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\"\"\"\n\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == \"\"\"atk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\"\"\"\n\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == \"\"\"atk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\"\"\"\n\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == \"\"\"atk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\"\"\"\n\nassert solution('libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib libjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == \"\"\"atk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\"\"\""
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"A\"\nassert solution(\"A B C\") == \"A\"\nassert solution(\"A B C D\") == \"A\"\nassert solution(\"A B C D E F\") == \"A\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('x') == 'cannot be ordered'\nassert solution('x\\nx\\nx') == 'cannot be ordered'\nassert solution('x\\nx\\nx\\nx') == 'cannot be ordered'\nassert solution('x\\nx\\nx\\nx\\nx') == 'cannot be ordered'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''32 20''') == '16'\nassert solution('''34 9''') == '16'\nassert solution('''31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679\n\n''') == '16'\n'''\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''32 20''') == '16'\n'''\n\nimport sys\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 16\n\"\"\""
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('32 20') == '16'\nassert solution('64 20') == '16'\nassert solution('64 00') == '16'\nassert solution('64 10000') == '16'\nassert solution('64 100000') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('32 20') == '16'\nassert solution('32 50') == '16'\nassert solution('32 200') == '16'\nassert solution('0 200') == '0'\nassert solution('10 200') == '10'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '16'\n\"\"\""
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 10') == '16'\nassert solution('14 4') == '32'\nassert solution('2 1') == '2'\nassert solution('1 2') == '16'\nassert solution('1 3') == '3'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '16'"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''32 20''') == '16'\nassert solution('''32 22''') == '32'\nassert solution('''32 99''') == '32'\nassert solution('''32 111''') == '32'\nassert solution('''32 112''') == '32'\n"
    },
    {
        "number": 3424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('32 20') == '16'\nassert solution('32 30') == '16'\nassert solution('32 10') == '16'\nassert solution('34 15') == '16'\nassert solution('89 96') == '16'\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"5 13\"\nassert solution(\"3 5\") == \"6 16\"\nassert solution(\"5 5\") == \"10 45\"\nassert solution(\"4 3\") == \"7 19\"\nassert solution(\"3 3\") == \"4 2\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n....\n.#.#\n....''') == '5 13'\nassert solution('''5 4\n....\n.#.#\n....\n.#.#\n.#.#''') == '5 13'\nassert solution('''7 7\n.......\n.......\n.......\n.......\n.......\n.......\n.......\n.......\n.......''') == '-1 -1'\nassert solution('''5 5\n...#...\n...#...\n.#.#...\n.##.#..\n.#...#.\n.##...#\n...##..\n....#...''') == '5 5'\nassert solution('''10 10\n.##.#...#..\n.......##.\n.......##.\n.......##.\n...#.....\n...#.....\n...#.....\n.##.....#.\n.##.....#.\n.##.....#.\n.#....#...''') == '11 5'\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5 4\n.###\n....\n.#.#\n....\n''') == '5 13'\n\nassert solution(\n'''\n5 5\n.###.\n.#..#\n....\n.#.#\n.#.##\n''') == '6 12'\n\nassert solution(\n'''\n2 3\n..\n..\n''') == '0 0'\n\nassert solution(\n'''\n3 3\n.###\n...#\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"5 13\"\nassert solution(\"4 5\") == \"5 12\"\nassert solution(\"3 4\") == \"5 10\"\nassert solution(\"3 5\") == \"5 9\"\nassert solution(\"3 3\") == \"6 7\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == (None, None)\nassert solution('1 2') == (1, 2)\nassert solution('3 4') == (3, 1)\nassert solution('..#\\n#.#\\n...') == (2, 2)\nassert solution('....\\n....\\n....') == (1, 1)\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n...\n...\n...\n''') == '5 13'\n\nassert solution('''3 4\n...\n...\n...\n''') == '0 13'\n\nassert solution('''3 4\n..#\n..#\n..#\n''') == '1 13'\n\nassert solution('''3 4\n..#.\n.#.#\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '3 4\\n' +\n    '....\\n' +\n    '.#.#\\n' +\n    '....\\n'\n) == '5 13'\n\nassert solution(\n    '5 2\\n' +\n    '.....\\n' +\n    '..##.\\n' +\n    '.#..#\\n' +\n    '.#..#\\n'\n) == '5 12'\n\"\"\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4 4\n....\n.#.#\n....\n'''\n) == '5 13'\n\nassert solution(\n'''\n5 3\n....\n.#.\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n....\n.#.#\n....\n4 3''') == '5 13'\nassert solution('''4 4\n....\n.#.#\n....\n3 2''') == '5 6'\nassert solution('''5 6\n....\n.#.#\n....\n3 2''') == '5 7'\nassert solution('''4 5\n.....\n...#.\n"
    },
    {
        "number": 3425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == (0, 0)\nassert solution('1') == (1, 1)\nassert solution('2') == (2, 1)\nassert solution('3') == (3, 2)\nassert solution('4') == (4, 6)\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n') == '5'\nassert solution('2\\n3\\n') == '2'\nassert solution('2\\n2\\n') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('2\\n2\\n') == '2'\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\n-----\n\n-----------------\n\n------Datasets------\n\n------Solution-------\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2 3\n1 2 5 1\n2 3 3 1'''\n) == '5'\n\nassert solution(\n'''3 3\n1 2 3 1\n2 3 3 1\n3 1? 0'''\n) == '5'\n\nassert solution(\n'''10 10\n1 2 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\n'''\n\nfrom sys import stdin\nfrom typing import NamedTuple\n\nNode = NamedTuple('Node', [('distance', int), ('station', int), ('cable', bool)])"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\n'''\n    stations = int(stdin.readline())\n    tunnels = int(stdin.readline())\n    tunnels_lengths = []\n    for i in range(tunnels):\n        station1, station2, length, is_cable = [int(x) for x in stdin.readline().strip().split()]\n        tunnels_lengths.append([station1, station2, length, is_cable])\n    tunnels_lengths.sort(key=lambda x: x[2], reverse=True)\n    \n    #print(tunnels_lengths)\n    \n    #station_lengths = [None] * (stations + 1)\n    station_lengths = [0] * (stations + 1)\n    \n    #print(station_lengths)\n    \n    for station in range(1, stations + 1):\n        for tunnel in tunnels_lengths:\n            station1 = tunnel[0]\n            station2 = tunnel[1]\n            \n            if station1 == station:\n                if tunnel[3] == 1:\n                    if station2 == 1:\n                        if station_lengths[station2] == 0 or station_lengths[station2] > tunnel[2]:\n                            station_lengths[station2] = tunnel[2]\n                    else:\n                        station_lengths[station2] = tunnel[2]\n                elif tunnel[3] == 0:\n                    if station2 == 1:\n                        if station_lengths[station1] == 0 or station_lengths[station1] > tunnel[2]:\n                            station_lengths[station1] = tunnel[2]\n                    else:\n                        station_lengths[station1] = tunnel[2]\n    \n    #print(station_lengths)\n    \n    minimum_length = 0\n    for station in range(1, stations + 1):\n        if station_lengths[station] == 0:\n            if station_lengths[station - 1] == 0:\n                minimum_length += 1\n            else:\n                minimum_length += station_lengths[station - 1]\n        else:\n            minimum_length += station_lengths[station]\n    \n    return str(minimum_length)\n\nprint(solution('''3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n'''))\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 2 5 1\n2 3 3 1\n3 1? 0''') == '5'\nassert solution('''2 5\n1 2 5 1\n1 3 3 1''') == '0'\nassert solution('''2 2\n1 2 5 1\n2 1 3 3''') == '5'\nassert solution('''3 3\n1 2 3 1\n2 1 3 3\n3 1? 0''') == '5'\nassert solution('''2 10\n1 2 10 1\n2 2 5 1\n2 3 3 1''') == '2'\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"5\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"5\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"7\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"7\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"8\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == '5'"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"0\n2 3\n-1 0\n-1 1\"\"\") == '0'\nassert solution(\n\"\"\"1\n1\n0\n0\n0\n0\n0\n0\"\"\") == '3'\nassert solution(\n\"\"\"5\n6\n3 4\n2 5\n4 5\n4 4\n0 1\n0 3\n0 2\n1 3\n2 4\n3 4\n4 5\"\"\") == '3'\nassert solution(\n\"\"\"7\n7\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 5\n6 4\n6 3\n6 2\n6 1\n6 0\n7 5\n7 4\n7 3\n7 2\n7 1\n7 0\n7 6\n7 7\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n6 7\n6 6\n6 5\n6 4\n6 3\n6 2\n6 1\n6 0\n7 7\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n5 7\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n5 7\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n5 7\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n5 7\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n5 7\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n5 7\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n5 7\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n5 7\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n5 7\n5 6\n5 5\n5 4\n5 3\n5 2\n5 1\n5 0\n6 6\n6 7\n7 7\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n-1 0\n-1 1''') == '0'\nassert solution('''3 3\n-1 0\n-1 1\n0 1\n2 3\n-1 2\n0 2''') == '3'\nassert solution('''5 2\n0 1\n0 2\n0 3\n0 4\n0 5''') == '4'\nassert solution('''3 3\n-1 0\n-1 1\n0 1\n1 2\n1 3''') == '2'\nassert solution('''3 3\n-1 0\n-1 1\n0 1\n1 2\n0 2''') == '2'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3\n-1 0\n-1 1\n0 1''') == \"0\"\nassert solution('''2 3\n-1 0\n-1 1\n0 1\n0 2\n2 0\n1 1''') == \"1\"\nassert solution('''2 3\n-1 0\n-1 1\n0 1\n1 2\n1 3\n2 4\n2 3''') == \"3\"\nassert solution('''2 3\n-1 0\n-1 1\n0 1\n1 2\n1 3\n1 4\n2 5\n3 4\n3 5\n2 6\n4 5\n4 6\n6 7\n3 7\n4 0\n5 0\n6 0\n7 0\n4 1\n5 1\n6 1\n7 1\n0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0''') == \"5\"\nassert solution('''2 3\n-1 0\n-1 1\n0 1\n1 2\n1 3\n1 4\n2 5\n3 4\n3 5\n2 6\n4 5\n4 6\n6 7\n3 7\n4 0\n5 0\n6 0\n7 0\n4 1\n5 1\n6 1\n7 1\n0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0''') == \"4\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 2\") == \"0\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"5 7\") == \"2\"\nassert solution(\"8 10\") == \"1\"\nassert solution(\"11 15\") == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 3\\n-1 0\\n-1 1\\n0 1') == '3'\nassert solution('1 2\\n0 0\\n-1 1\\n-1 0') == '1'\nassert solution('1 2\\n0 0\\n0 1\\n0 2') == '2'\nassert solution('4 4\\n0 0\\n1 1\\n2 2\\n3 3\\n-1 -1\\n1 2\\n2 3\\n3 0') == '2'\nassert solution('6 6\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n-1 -1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 0') == '5'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-1 0') == 0\nassert solution('0 1') == 1\nassert solution('-1 1') == 2\nassert solution('-1 0') == 1\nassert solution('-1 -1') == 0\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 1') == '1'\nassert solution('-1 -1') == '1'\nassert solution('-1 1') == '1'\nassert solution('0 -1') == '0'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2 3\n-1 0\n-1 1\n0 1'''\n) == '0'\nassert solution(\n'''3 3\n-1 0\n-1 1\n0 1\n-1 2'''\n) == '1'\nassert solution(\n'''2 3\n-1 0\n-1 1\n0 1\n0 1\n-1 2'''\n) == '2'\nassert solution(\n'''2 3\n-1 0\n-1 1\n0 1\n0 1\n0 1\n-1 2'''\n) == '2'\nassert solution(\n'''2 3\n-1 0\n-1 1\n0 1\n0 1\n0 1\n0 1\n-1 2'''\n) == '2'\n"
    },
    {
        "number": 3427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == '3'\nassert solution('2 1\\n-1 0') == '0'\nassert solution('2 2\\n-1 0\\n-1 1') == '1'\nassert solution('3 4\\n0 2\\n1 2\\n2 1\\n2 0\\n1 3\\n0 3') == '4'\nassert solution('4 5\\n0 2\\n1 2\\n2 1\\n2 0\\n1 3\\n0 3\\n0 1\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3\\n1 0\\n2 3\\n2 0\\n0 1\\n1 3"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4') == '1'\nassert solution('2\\n3') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '1'\nassert solution('5\\n1') == '1'\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\nassert solution('9\\n9 7 6 2 2 2 7') == '2'\nassert solution('16\\n16 6 1 6 6 4 5 2 5 1 2 3 3 2 4 1') == '1'\nassert solution('9\\n4 3 2 4 3 2 3 4') == '1'\nassert solution('4\\n4 3 2 3') == '0'\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n1\n4 2\n''') == '6'\nassert solution('''\n4\n9 6 2 4\n''') == '6'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n1\n1 1\n''') == '1'\nassert solution('''\n4\n1 1 1 1\n''') == '3'\n'''\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n9 6 2 4') == '6'\nassert solution('2\\n1 2') == '3'\nassert solution('5\\n1 2 3 4 5') == '1'\nassert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('7\\n1 2 3 4 5 6 7') == '1'\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n9 6 2 4''') == '6'\n'''\n"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n9 6 2 4''') == \"6\"\nassert solution('''3\n8 1 3''') == \"3\"\nassert solution('''1000\n
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n'\n                    '9 6 2 4') == '6'\n'''\n'''\n3.5/100\n'''\n\nimport sys"
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n
    },
    {
        "number": 3428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n9\\n6\\n2\\n4') == '6'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 3 2') == '2.000000'\nassert solution('2 5 1') == '2.000000'\nassert solution('0 2 10') == '10.000000'\nassert solution('-2 1 1 3 2') == '10.000000'\nassert solution('1 -1 1 3 2') == '5.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\"\nassert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\"\nassert solution(\"2 1 1 3 2\") == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\nassert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\n\nprint(solution('''2 1 1 3 2\n2 5 1'''))\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\nassert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\nassert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\nassert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\nassert solution('''2 1 1 3 2\n2 5 1''') == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1 1 3 2''') == \"2.000000\"\nassert solution('''2 5 1''') == \"2.000000\"\nassert solution('''5 5 1''') == \"6.000000\"\nassert solution('''5 5 2''') == \"8.000000\"\nassert solution('''7 2 3 5 5 3''') == \"7.000000\"\n'''\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2.000000'\nstdin = \"\"\"1 2 3 4\n5 6 7 8\n\"\"\"\nassert solution(stdin) == '4.000000'\nstdin = \"\"\"4 8 10\n0 10\n\"\"\"\nassert solution(stdin) == '0.000000'\nstdin = \"\"\"2 2 0\n3 3\n\"\"\"\nassert solution(stdin) == '0.000000'\nstdin = \"\"\"5 1 1\n-10 5\n\"\"\"\nassert solution(stdin) == '10.000000'\nstdin = \"\"\"5 1 1\n-10 5\n\"\"\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == '2.000000'\nassert solution('2 1 1 2 1\\n2 5 1') == '1.000000'\nassert solution('2 1 1 2 1\\n2 5 1') == '0.000001'\nassert solution('2 1 1 2 1\\n2 5 1') == '0.000000'\nassert solution('2 1 1 2 1\\n2 5 1') == '0.000000'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"0\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"0\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"0\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n2 3\n2 4\n1 4''') == '0'\nassert solution('''6\n1 5\n3 1\n5 1\n3 2\n3 4\n4 5''') == '16'\nassert solution('''7\n1 2\n2 3\n4 5\n6 7\n6 7\n1 4\n2 4''') == '12'\nassert solution('''10\n2 4\n1 2\n3 4\n2 6\n3 8\n6 5\n5 8\n8 9\n8 4\n6 9\n9 10''') == '67'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96'\nassert solution('''\n2\n1 2\n2 3\n1 3\n''') == '1'\nassert solution('''\n3\n1 2\n1 3\n1 4\n''') == '2'\nassert solution('''\n5\n1 2\n1 3\n1 4\n1 5\n2 3\n1 4\n2 4\n3 4\n3 5\n''') == '10'\nassert solution('''\n1\n1\n''') == '0'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n2\\n4\\n2\\n4\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3') == '15'\nassert solution('5\\n4\\n1 2\\n2 3\\n3 4\\n4 1\\n4 1\\n1 2\\n2 3\\n3 4') == '108'\nassert solution('5\\n5\\n1 2\\n2 3\\n3 4\\n4 1\\n4 1\\n1 2\\n2 3\\n3 4') == '4'\nassert solution('5\\n5\\n1 2\\n2 3\\n3 4\\n4 1\\n4 1\\n1 2\\n2 3\\n3 4') == '0'\nassert solution('7\\n6\\n5 5\\n5 1\\n6 2\\n1 3\\n3 4\\n2 4\\n2 3\\n4 1') == '9'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 4\n1 5''') == '12'\nassert solution('''3\n1 2\n2 3\n4\n2 3''') == '2'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n2 4\n1 5''') == '3'\nassert solution('''3\n1 2\n1 3\n1 4\n1 5\n2 3\n1 4\n1 5\n1 6''') == '10'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '32'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '8'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '0'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 4\n1 3\n1 2\n''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 4\n1 3\n1 2\n2 1\n''') == '2'\nassert solution('''3\n1 2\n2 3\n4\n1 4\n1 3\n1 2\n1 2\n1 1\n''') == '1'\nassert solution('''3\n1 2\n2 3\n4\n1 4\n1 3\n1 2\n1 1\n1 1\n1 1\n''') == '1'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 4\n2 4\n1 2\n1 3\n1 4''') == '56'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 4\n2 4\n1 2\n1 3\n1 4''') == '56'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 4\n1 2\n2 4\n1 2\n1 3\n1 4''') == '48'\nassert solution('''3\n1 2\n2 3\n4\n1 3\n1 4\n1 2\n1 3\n1 4''') == '48'\n"
    },
    {
        "number": 3430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96'\nassert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '52'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 4\n''') == '35'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 4\n''') == '7'\n'''\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 4\n''') == '10'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"3\\n2 2\\n3 2\\n2 3\\n1 2\\n2 2\") == \"1\"\nassert solution(\"2\\n2\\n2\\n2\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''8\n0 0\n0 1\n0 2\n0 3\n1 0\n1 1\n1 2\n1 3\n2 3\n2 4\n3 4\n4 5\n''') == '8'\nassert solution('''10\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9 7\n9 8\n9 9\n''') == '59'\nassert solution('''100\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9 7\n9 8\n9 9\n''') == '852'\nassert solution('''1000\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9 7\n9 8\n9 9\n''') == '6646'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''8\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2\n2 3''') == '5'\nassert solution('''5\n0 0\n0 1\n1 0\n1 1\n1 2''') == '4'\nassert solution('''7\n0 0\n0 1\n0 2\n0 3\n1 2\n1 4\n2 3\n2 5\n3 4''') == '6'\nassert solution('''100\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n0 11\n0 12\n0 13\n0 14\n0 15\n0 16\n0 17\n0 18\n0 19\n0 20\n0 21\n0 22\n0 23\n0 24\n0 25\n0 26\n0 27\n0 28\n0 29\n0 30\n0 31\n0 32\n0 33\n0 34\n0 35\n0 36\n0 37\n0 38\n0 39\n0 40\n0 41\n0 42\n0 43\n0 44\n0 45\n0 46\n0 47\n0 48\n0 49\n0 50\n0 51\n0 52\n0 53\n0 54\n0 55\n0 56\n0 57\n0 58\n0 59\n0 60\n0 61\n0 62\n0 63\n0 64\n0 65\n0 66\n0 67\n0 68\n0 69\n0 70\n0 71\n0 72\n0 73\n0 74\n0 75\n0 76\n0 77\n0 78\n0 79\n0 80\n0 81\n0 82\n0 83\n0 84\n0 85\n0 86\n0 87\n0 88\n0 89\n0 90\n0 91\n0 92\n0 93\n0 94\n0 95\n0 96\n0 97\n0 98\n0 99\n0 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1 474\n1 475\n1 476\n1 477\n1 478\n1 479\n1 480\n1 481\n1 482\n1 483\n1 484\n1 485\n1 486\n1 487\n1 488\n1 489\n1 490\n1 491\n1 492\n1 493\n1 494\n1 495\n1 496\n1 497\n1 498\n1 499\n1 500\n1 501\n1 502\n1 503\n1 504\n1 505\n1 506\n1 507\n1 508\n1 509\n1 510\n1 511\n1 512\n1 513\n1 514\n1 515\n1 516\n1 517\n1 518\n1 519\n1 520\n1 521\n1 522\n1 523\n1 524\n1 525\n1 526\n1 527\n1 528\n1 529\n1 530\n1 531\n1 532\n1 533\n1 534\n1 5"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''1\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''0 0\n0 1\n1 1\n1 0''') == '3'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''3\n0 0\n0 1\n1 0''') == '1'\nassert solution('''6\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n1 1\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '10'\nassert solution('''100\n5 0\n10 1\n15 2\n20 3\n25 4\n30 5\n35 6\n40 7\n45 8\n50 9\n55 10\n60 11\n65 12\n70 13\n75 14\n80 15\n85 16\n90 17\n95 18\n100 19\n105 20\n110 21\n115 22\n120 23\n125 24\n130 25\n135 26\n140 27\n145 28\n150 29\n155 30\n160 31\n165 32\n170 33\n175 34\n180 35\n185 36\n190 37\n195 38\n200 39\n205 40\n210 41\n215 42\n220 43\n225 44\n230 45\n235 46\n240 47\n245 48\n250 49\n255 50\n260 51\n265 52\n270 53\n275 54\n280 55\n285 56\n290 57\n295 58\n300 59\n305 60\n310 61\n315 62\n320 63\n325 64\n330 65\n335 66\n340 67\n345 68\n350 69\n355 70\n360 71\n365 72\n370 73\n375 74\n380 75\n385 76\n390 77\n395 78\n400 79\n405 80\n410 81\n415 82\n420 83\n425 84\n430 85\n435 86\n440 87\n445 88\n450 89\n455 90\n460 91\n465 92\n470 93\n475 94\n480 95\n485 96\n490 97\n495 98\n500 99\n505 100\n510 101\n515 102\n520 103\n525 104\n530 105\n535 106\n540 107\n545 108\n550 109\n555 110\n560 111\n565 112\n570 113\n575 114\n580 115\n585 116\n590 117\n595 118\n600 119\n605 120\n610 121\n615 122\n620 123\n625 124\n630 125\n635 126\n640 127\n645 128\n650 129\n655 130\n660 131\n665 132\n670 133\n675 134\n680 135\n685 136\n690 137\n695 138\n700 139\n705 140\n710 141\n715 142\n720 143\n725 144\n730 145\n735 146\n740 147\n745 148\n750 149\n755 150\n760 151\n765 152\n770 153\n775 154\n780 155\n785 156\n790 157\n795 158\n800 159\n805 160\n810 161\n815 162\n820 163\n825 164\n830 165\n835 166\n840 167\n845 168\n850 169\n855 170\n860 171\n865 172\n870 173\n875 174\n880 175\n885 176\n890 177\n895 178\n900 179\n905 180\n910 181\n915 182\n920 183\n925 184\n930 185\n935 186\n940 187\n945 188\n950 189\n955 190\n960 191\n965 192\n970 193\n975 194\n980 195\n985 196\n990 197\n995 198\n1000 199\n1015 200\n1020 201\n1025 202\n1030 203\n1035 204\n1040 205\n1045 206\n1050 207\n1055 208\n1060 209\n1065 210\n1070 211\n1075 212\n1080 213\n1085 214\n1090 215\n1095 216\n1100 217\n1105 218\n1110 219\n1115 220\n1120 221\n1125 222\n1130 223\n1135 224\n1140 225\n1145 226\n1150 227\n1155 228\n1160 229\n1165 230\n1170 231\n1175 232\n1180 233\n1185 234\n1190 235\n1195 236\n1200 237\n1205 238\n1210 239\n1215 240\n1220 241\n1225 242\n1230 243\n1235 244\n1240 245\n1245 246\n1250 247\n1255 248\n1260 249\n1265 250\n1270 251\n1275 252\n1280 253\n1285 254\n1290 255\n1295 256\n1300 257\n1305 258\n1310 259\n1315 260\n1320 261\n1325 262\n1330 263\n1335 264\n1340 265\n1345 266\n1350 267\n1355 268\n1360 269\n1365 270\n1370 271\n1375 272\n1380 273\n1385 274\n1390 275\n1395 276\n1400 277\n1405 278\n1410 279\n1415 280\n1420 281\n1425 282\n1430 283\n1435 284\n1440 285\n1445 286\n1450 287\n1455 288\n1460 289\n1465 290\n1470 291\n1475 292\n1480 293\n1485 294\n1490 295\n1495 296\n1500 297\n1510 298\n1515 299\n1520 300\n1525 301\n1530 302\n1535 303\n1540 304\n1545 305\n1550 306\n1555 307\n1560 308\n1565 309\n1570 310\n1575 311\n1580 312\n1585 313\n1590 314\n1595 315\n1600 316\n1605 317\n1610 318\n1615 319\n1620 320\n1625 321\n1630 322\n1635 323\n1640 324\n1645 325\n1650 326\n1655 327\n1660 328\n1665 329\n1670 330\n1675 331\n1680 332\n1685 333\n1690 334\n1695 335\n1700 336\n1705 337\n1710 338\n1715 339\n1720 340\n1725 341\n1730 342\n1735 343\n1740 344\n1745 345\n1750 346\n1755 347\n1760 348\n1765 349\n1770 350\n1775 351\n1780 352\n1785 353\n1790 354\n1795 355\n1800 356\n1805 357\n1810 358\n1815 359\n1820 360\n1825 361\n1830 362\n1835 363\n1840 364\n1845 365\n1850 366\n1855 367\n1860 368\n1865 369\n1870 370\n1875 371\n1880 372\n1885 373\n1890 374\n1895 375\n1900 376\n1905 377\n1910 378\n1915 379\n1920 380\n1925 381\n1930 382\n1935 383\n1940 384\n1945 385\n1950 386\n1955 387\n1960 388\n1965 389\n1970 390\n1975 391\n1980 392\n1985 393\n1990 394\n1995 395\n2000 396\n2005 397\n2010 398\n2015 399\n2020 400\n2025 401\n2030 402\n2035 403\n2040 404\n2045 405\n2050 406\n2055 407\n2060 408\n2065 409\n2070 410\n2075 411\n2080 412\n2085 413\n2090 414\n2095 415\n2100 416\n2105 417\n2110 418\n2115 419\n2120 420\n2125 421\n2130 422\n2135 423\n2140 424\n2145 425\n2150 426\n2155 427\n2160 428\n2175 429\n2190 430\n2195 431\n2200 432\n2205 433\n2210 434\n2215 435\n2220 436\n2225 437\n2230 438\n2235 439\n2240 440\n2245 441\n2250 442\n2265 443\n2270 444\n2275 445\n2280 446\n2285 447\n2290 448\n2295 449\n2300 450\n2305 451\n2310 452\n2315 453\n2320 454\n2325 455\n2330 456\n2335 457\n2340 458\n2345 459\n2350 460\n2355 461\n2360 462\n2365 463\n2370 464\n2375 465\n2380 466\n2385 467\n2390 468\n2395 469\n2400 470\n2405 471\n2410"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n0 1\n1 0\n1 1''') == \"3\"\n'''\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution('''0 0\n0 1\n1 0\n1 1'''), \"3\")\n'''\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''3\n0 0\n0 1\n1 0\n1 1\n2 0''') == '2'\nassert solution('''10\n0 0\n0 1\n1 0\n1 1\n1 2\n2 1\n2 3\n3 1\n3 2\n3 3\n4 2\n4 3''') == '4'\nassert solution('''100\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n2 2\n3 1\n3 2\n3 3\n4 2\n4 3\n4 4\n4 5\n5 1\n5 2\n5 3\n5 4\n5 5''') == '5'\nassert solution('''1000\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n2 2\n3 1\n3 2\n3 3\n4 2\n4 3\n4 4\n4 5\n5 1\n5 2\n5 3\n5 4\n5 5\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9''') == '8'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''10\n-5 -10\n-10 -3\n-3 -5\n-8 -4\n-7 -9\n-3 -7\n-6 -9\n-6 -11\n-2 -9\n-4 -7''') == '6'\nassert solution('''9\n0 0\n0 -1\n1 0\n1 -1\n1 -1\n2 0\n2 1\n3 0\n3 -1\n3 -1''') == '6'\nassert solution('''5\n0 0\n0 1\n1 0\n1 1\n1 -1''') == '2'\nassert solution('''7\n-100000 -100000\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6''') == '6'\n"
    },
    {
        "number": 3431,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''7\n0 0\n0 1\n1 0\n1 1\n2 0\n2 2\n3 0\n3 3''') == '5'\nassert solution('''6\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5''') == '4'\nassert solution('''8\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8''') == '6'\n'''\nExplanation\nFor the first test case, the set of points is divided into three clusters. We compute the weight of a minimum spanning tree with a height of $3$. The result is $3$.\n\nFor the second test case, the set of points is divided into four clusters. We compute the weight of a minimum spanning tree with a height of $4$. The result is $5$.\n\nFor the third test case, the set of points is divided into five clusters. We compute the weight of a minimum spanning tree with a height of $5$. The result is $4$.\n\nFor the fourth test case, the set of points is divided into six clusters. We compute the weight of a minimum spanning tree with a height of $6$. The result is $6$.\n\nFor the fifth test case, the set of points is divided into eight clusters. We compute the weight of a minimum spanning tree with a height of $8$. The result is $6$.\n'''\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4''') == '10'\n'''"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2\n2 8\n3 1\n1 4\"\"\") == \"\"\"10\n10\n9\n\"\"\"\n\nassert solution(\"\"\"5\n2 8\n3 1\n1 4\n5 5\n1 1\"\"\") == \"\"\"9\n9\n8\n7\n5\n\"\"\"\n\nassert solution(\"\"\"1\n1\n\"\"\") == \"\"\"0\n\"\"\"\n\nassert solution(\"\"\"1000\n1000\n\"\"\") == \"\"\"2000\n\"\"\"\n\nassert solution(\"\"\"1000\n1000\n\"\"\") == \"\"\"2000\n2000\n\"\"\""
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n2 8\n3 1\n1 4\"\"\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n2\\n') == '2'\nassert solution('1\\n1\\n1\\n') == '2'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n') == '3'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n') == '6'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n') == '7'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5\n2 8\n3 1\n1 4\n\"\"\"\n) == \"\"\"\n10\n10\n9\n\"\"\"\n\nassert solution(\n\"\"\"\n3\n1 2\n2 1\n1 3\n\"\"\"\n) == \"\"\"\n3\n3\n2\n\"\"\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4''') == '10\\n10\\n9'\nassert solution('''3\n3 1\n1 3\n2 3\nSample Output:\n10\n10\n9''') == '9\\n10\\n10'\nassert solution('''10\n3 2\n2 6\n3 4\n3 1\n1 3\n2 8\n1 4\n4 6\n1 6\n1 2\n2 2\n3 1\n3 2\n''') == '15\\n14\\n9'\n\n'''\nimport sys\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4''') == '10\\n10\\n9'\nassert solution('''1\n10\n100''') == '10'\nassert solution('''2\n99\n100''') == '99'\nassert solution('''10\n99\n100''') == '99'\nassert solution('''3\n1 2\n2 3\n3 1''') == '3'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '10'\nassert solution('''2\n8\n3 1\n1 4''') == '10'\nassert solution('''2\n8\n3 2\n1 4''') == '10'\nassert solution('''2\n10\n5 6\n4 3\n3 2\n1 2\n1 3''') == '10'\nassert solution('''2\n10\n5 3\n4 2\n3 1\n2 1''') == '10'\n"
    },
    {
        "number": 3432,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n2 8\n3 1\n1 4''') == '10\\n10\\n9\\n'\nassert solution('''2\n2 1\n2 3''') == '10\\n1\\n'\nassert solution('''5\n2 2\n2 1\n1 1\n1 2\n1 3''') == '10\\n1\\n'\nassert solution('''2\n3 4\n5 7''') == '8\\n10\\n'\nassert solution('''2\n2 4\n2 3\n3 4\n5 7''') == '12\\n10\\n9\\n'\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1\\n..#\\n###') == 3\nassert solution('2 1\\n#..\\n###') == 'IMPOSSIBLE'\nassert solution('2 2\\n.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#."
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"IMPOSSIBLE\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE' # 3 minutes\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"5 5\\n####\\n#J.F#\\n#.##\\n#.#.\\n#..#\\n#.##\\n####\") == \"3\"\nassert solution(\"3 3\\n###\\n#.J\\n#.F#\\n#.#\\n###\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\\n###\\n#.J\\n#.F#\\n#.#\\n###\") == \"3\"\nassert solution(\"4 5\\n#####\\n#....\\n#....\\n#....\\n#....\\n#####\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nassert solution('2 1 1') == '0.0'\nassert solution('1 1 1') == '1.0'\nassert solution('1 1 1 1') == '0.0'\nassert solution('1 1 1 1 1') == '0.0'\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 2''') == '0.3333333333'\nassert solution('''2\n1 1\n''') == '0.5'\nassert solution('''2\n3\n1 1\n''') == '0.25'\nassert solution('''4\n2\n3 5 2\n4\n3 2 2\n''') == '0.1944'\n'''\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 2''') == '0.3333333333'\nassert solution('''2 1 1''') == '1.0'\nassert solution('''2 2 2''') == '1.0'\nassert solution('''4 2 3''') == '0.125'\nassert solution('''4 2 4''') == '0.25'\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 1 2\") == \"0.3333333333\"\n\nassert solution(\n    \"2 1 2\") == \"0.3333333333\"\n\nassert solution(\n    \"1 1 2\") == \"0.3333333333\"\n\nassert solution(\n    \"1 1 2\") == \"0.3333333333\"\n\nassert solution(\n    \"1 1 2\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0.3333333333'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    stdin = \"\"\n    \"\"\n) == \"0.3333333333\"\nassert solution(\n    stdin = \"\"\n    \"\"\n) == \"0.3333333333\"\nassert solution(\n    stdin = \"\"\n    \"\"\n) == \"0.3333333333\"\nassert solution(\n    stdin = \"\"\n    \"\"\n) == \"0.3333333333\"\nassert solution(\n    stdin = \"\"\n    \"\"\n) == \"0.3333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 2\") == \"0.3333333333\"\nassert solution(\"2 3 4\") == \"0.07692307692307693\"\nassert solution(\"2 4 3\") == \"0.05405405405405405\"\nassert solution(\"1 1 1\") == \"1.0\"\nassert solution(\"6 3 6\") == \"0.03333333333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1 1 1\n2\n1 1\n\"\"\"\n) == '0.3333333333'\nassert solution(\n\"\"\"\n1 1 1\n2\n1 2\n\"\"\"\n) == '0.3333333333'\nassert solution(\n\"\"\"\n2 3 2\n2\n2 1 2\n1\n2 2 2\n\"\"\"\n) == '0.16666666667'\nassert solution(\n\"\"\"\n1 3 3\n3\n3 3 3\n\"\"\"\n) == '0.0'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '1'\nassert solution('1\\n111') == '11'\nassert solution('1\\n10101') == '101'\nassert solution('2\\n*1') == '10'\nassert solution('2\\n11') == '101'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0*\") == \"\"\nassert solution(\"1*\") == \"\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1''') == '1'\nassert solution('''000111''') == '0'\nassert solution('''111111111''') == '2'\nassert solution('''01111''') == '2'\nassert solution('''11111''') == '1'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1') == '2'\nassert solution('*') == '0'\nassert solution
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n10\n01*\n''') == '1023'\nassert solution('''\\\n11\n1*\n''') == '1023'\nassert solution('''\\\n10\n01\n''') == '1023'\nassert solution('''\\\n10\n1**\n''') == '1023'\nassert solution('''\\\n20\n01*\n''') == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n    10\n    *\n''') == 10\n\nassert solution('''\n    10\n    0000\n''') == 0\n\nassert solution('''\n    10\n    0000\n''') == 0\n\nassert solution('''\n    10\n    *\n''') == 10\n\nassert solution('''\n    10\n    1*\n''') == 10"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1010000\\n') == '1023'\nassert solution('5\\n11100010000\\n') == '1023'\nassert solution('6\\n1010111111\\n') == '10011'\nassert solution('6\\n1111111111\\n') == '10011'\nassert solution('8\\n1011101111011110111110111\\n
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n1\n1\n''') == '1'\n\nassert solution(\n    '''\n2\n0001\n''') == '1'\n\nassert solution(\n    '''\n8\n001110\n''') == '1024'\n\nassert solution(\n    '''\n5\n00110\n''') == '1025'\n\nassert solution(\n    '''\n8\n0101010101010101\n''') == '4096'"
    },
    {
        "number": 3435,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == 1\nassert solution('1 1') == 1\nassert solution('2 1') == 2\nassert solution('1 2') == 2\nassert solution('10 10') == 70\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2') == '6'\nassert solution('1 1') == '2'\nassert solution('2 3') == '3'\nassert solution('3 3') == '6'\nassert solution('4 4') == '10'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('3 2') == '8'\nassert solution('3 4') == '15'\nassert solution('3 5') == '22'\nassert solution('3 6') == '28'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2''') == '6'\n'''\nYour input\n2 2\nSample Output\n6\n'''"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''2 1''') == '1'\nassert solution('''1 1''') == '2'\nassert solution('''9 7''') == '7'\nassert solution('''0 0''') == '0'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''1 1''') == '2'\nassert solution('''2 2''') == '6'\nassert solution('''5 1''') == '6'\nassert solution('''10 4''') == '26'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'\nassert solution('10 5') == '36'\nassert solution('2 3') == '12'\nassert solution('10 30') == '6'\nassert solution('101010') == '15'\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2''') == 6\nassert solution('''5 3''') == 1\nassert solution('''5 7''') == 1\nassert solution('''1 4''') == 0\nassert solution('''0 1''') == 1\n"
    },
    {
        "number": 3436,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '6'\nassert solution('0 0') == '0'\nassert solution('0 1') == '1'\nassert solution('0 2') == '2'\nassert solution('0 3') == '3'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == \"2930\"\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == \"Impossible\"\n'''\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500''') == \"2930\"\n\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500\n1000\n1400\n1500''') == \"Impossible\"\n'''\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930'\n'''\n\n'''"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1000 2000 7''') == 'Impossible'\nassert solution('''1000 2000 7''') == '2930'\nassert solution('''100''') == 'Impossible'\nassert solution('''100''') == '100'\nassert solution('''1000 1000 2000 2''') == 'Impossible'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2930'\n\n\"\"\"\n\nfrom typing import List\nfrom collections import defaultdict\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2930\"\nprint(solution(stdin))\n\nassert solution(\"1000000 10000000 4\") == \"Impossible\"\nprint(solution(\"1000000 10000000 4\"))\n\nassert solution(\"1 1 1 2 2 1\") == \"Impossible\"\nprint(solution(\"1 1 1 2 2 1\"))\n\nassert solution(\"1 2 3 4 5 6\") == \"Impossible\"\nprint(solution(\"1 2 3 4 5 6\"))\n\nassert solution(\"1 2 3 4 5 6\") == \"Impossible\"\nprint(solution(\"1 2 3 4 5 6\"))"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1900') == 'Impossible'\n'''"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930'\nassert solution('''1000 2000 7\n100\n1\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_text.txt\").read()) == \"Impossible\"\nassert solution(open(\"test_text.txt\").read()) == \"2930\"\n\"\"\""
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100 4\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930'\nassert solution('1000 2000 7\\n100\\n400\\n500\\n550\\n1000\\n1400\\n1500\\n') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n400\\n500\\n550\\n1000\\n1400\\n1500\\n') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n400\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[1:-1]\n-----\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n    def test(self):\n        self.assertEqual(solution(stdin), stdin[1:-1])"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 3') == '2'\nassert solution('5 2 3') == '3'\nassert solution('3 2 3') == '3'\nassert solution('5 2 3') == '2'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 2\nassert solution('2 2 2') == 1\nassert solution('0') == 0\nassert solution('0 0 0') == 0\nassert solution('1 1 1') == 1\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"2 2 2\\n0\\n0\\n0\\n\") == \"3\"\nassert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"2 2 2\\n0\\n0\\n0\\n\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n2\\n\") == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 1 3\") == \"2\"\nassert solution(\"0 1 2 3\") == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '5'\nassert solution('2 4 3 3') == '3'\nassert solution('1 2 3 4 5') == '6'\nassert solution('2 4 3 3 1') == '3'\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n2 10\n1\n0\n2\n0\n2\n2\n2\n0\n2\n1\n2\n0\n2\n0\n2\n2\n2\n2\n''') == '5'\nassert solution('''\n1 0\n0\n1\n''') == '1'\nassert solution('''\n1 0\n0\n1\n1\n0\n0\n0\n1\n1\n1\n1\n1\n1\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n0\n1\n1\n1\n1\n1\n1\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 3\n0\n0\n1''') == '2'\nassert solution('''1 1 1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n1\n1\n0\n1\n1\n0\n1\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n0 1 2\n0\n0\n1\n\"\"\") == \"1\"\nassert solution(\n    \"\"\"\n2 3 4\n0\n0\n0\n1\n\"\"\") == \"2\"\nassert solution(\n    \"\"\"\n2 3 4\n1\n2\n2\n1\n2\n\"\"\") == \"2\"\nassert solution(\n    \"\"\"\n2 3 4\n1\n2\n2\n1\n1\n\"\"\") == \"2\"\nassert solution(\n    \"\"\"\n3 1 1\n0\n0\n0\n0\n1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1') == '2'\nassert solution('1 2 3\\n0\\n1\\n0\\n0') == '2'\nassert solution('5\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\n\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\n\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n1 -1 -1''') == '20'\n\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n2 1 -1''') == '15'\n\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n3 1 -1''') == '6'"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\n\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n-5 -5\nSample Output:\n6\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n5 -5\nSample Output:\n0\nassert solution('''10 10\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\nassert solution('''2 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\nassert solution('''2 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n1 1''') == '10'\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n1 1\n''') == '10'\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n-1 -1''') == '0'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"10\"\nassert solution(\"-1 -1\") == \"-1\"\nassert solution(\"5 4\") == \"10\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"-5 -5\") == \"0\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\nassert solution(\n'''-5 2 -5\n-1 -2 -1\n5 4 -5\n2 -2\n''') == '4'\nassert solution(\n'''-1 2\n-1 1 1\n-1 0 1\n1 1 1\n0 1 1\n1 0 1\n1 1 1\n1 0 1\n1 1 1\n''') == '2'\nassert solution(\n'''-5 3\n-5 1 -5\n-5 0 -5\n-5 -1 -5\n-5 -5 -5\n-5 -5 -5\n-5 -5 -5\n5 0 -5\n0 -5 -5\n-5 -5 -5\n0 0 -5\n-5 0 -5\n-5 0 -5\n-5 -1 -5\n-5 -5 -5\n-5 -5 -5\n''') == '-6'\nassert solution(\n'''-1 2\n-1 1 1\n-1 0 1\n1 1 1\n0 1 1\n1 0 1\n1 1 1\n1 0 1\n1 1 1\n''') == '1'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5'\n\n\"\"\"\nimport sys"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2'''\n) == '10'\nassert solution(\n'''3 3\n-5 -3 -5\n-1 -2 -1\n5 -2 -5\n2 2'''\n) == '0'\nassert solution(\n'''5 5\n1 2 -5\n-5 -2 -1\n-2 -4 -5\n4 1 -5\n2 4 -5'''\n) == '0'\nassert solution(\n'''3 3\n0 1 -5\n-5 -2 -1\n-1 -4 -5'''\n) == '0'\nassert solution(\n'''5 6\n1 2 -5\n-5 -2 -1\n-2 -4 -5\n4 1 -5\n2 4 -5'''\n) == '10'\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n        \"-5 2 -5\\n\"\n        \"-1 -2 -1\\n\"\n        \"5 4 -5\\n\"\n        \"2 2\\n\"\n        ) == \"10\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 10\n"
    },
    {
        "number": 3439,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1 -1\\n-1 -1\") == \"1\"\nassert solution(\"4 4\\n-1 -1 -1\\n1 -1 -1\\n1 1 1\\n-1 1 1\") == \"20\"\nassert solution(\"5 5\\n1 1 1 1 1 1\\n-1 1 1 1 -1\\n1 1 1 1 1 -1\\n-1 1 1 -1 -1\\n1 1 1 1 1 1\") == \"20\"\nassert solution(\"5 5\\n1 1 1 1 1\\n-1 1 1 1 -1\\n1 1 1 1 1 -1\\n-1 1 1 -1 -1\\n1 1 1 1 1 1\") == \"20\"\nassert solution(\"5 5\\n1 1 1 1 1\\n-1 1 1 1 -1\\n1 1 1 1 1 -1\\n-1 1 1 -1 -1\\n1 1 1 1 1 1\") == \"20\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300') == '3200'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300') == '4100'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300\\"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\") == \"4200\"\nassert solution(\"2\\n1 2 10000\\n2 3 10000\\n3 4 5000\\n1\\n1 4 300\\n2 3 300\\n3 4 300\") == \"3800\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\") == \"4600\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\") == \"4900\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\") == \"4400\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3100'"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n0\\n1\\n2\\n3\\n4\\n5') == '3100'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n0\\n1\\n2\\n3\\n4\\n5\\n5\\n5') == '3100'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n0\\n1\\n2\\n3\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5') == '3100'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n0\\n1\\n2\\n3\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '3100'\nassert solution('''5 5\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n1 4 500\n2 4 200\n3 5 200''') == '11000'\nassert solution('''5 5\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n1 4 500\n2 4 200\n3 5 200\n1 4 300\n2 4 300\n3 4 200''') == '6000'\nassert solution('''3 3\n1 2 1000\n2 3 1000\n3 4 1000\n1\n2 3 2000\n3 4 5000\n1\n2 4 2000\n3 4 5000''') == '5000'\nassert solution('''3 3\n1 2 1000\n2 3 1000\n3 4 1000\n1\n2 3 2000\n3 4 5000\n1\n2 4 2000\n3 4 5000''') == '5000'\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n''') == '2900'\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 4 300\n2 3 1000\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n1\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 100\n2 3 500\n4\n1 2 1000\n2 3 1000\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 3100\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n4\\n1 2 3000\\n3 4 500\\n4 5 500') == '15000'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n4\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500') == '100000'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n4\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800') == '780000'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n4\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3 4 500\\n4 5 500\\n6 7 800\\n6 7 800\\n7\\n1 2 3000\\n3 4 500\\n4 5 500\\n5\\n1 2 3000\\n3"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1000\") == \"3100\"\nassert solution(\"5 3\") == \"2000\"\nassert solution(\"1 2 1000\") == \"2000\"\nassert solution(\"5 3\") == \"2000\"\nassert solution(\"1 2 1000\") == \"2000\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3100\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n0\n0\n1''') == '0'\nassert solution('''1\n1\n0\n1''') == '0'\nassert solution('''2\n2\n0 1\n1 2\n0 2\n1 2''') == '3'\nassert solution('''2\n4\n0 1\n1 3\n0 2\n2 4\n1 3''') == '4'\nassert solution('''2\n5\n0 1\n1 3\n0 2\n2 4\n1 3\n3 4\n1 2''') == '4'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 0\n\nSample Input:\n3 2\n0 1\n1 2\n2 0\nSample Output:\n3\nassert solution(stdin) == 3\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2 1\\n0 1') == '0'\nassert solution('2 1\\n0 1\\n0 1') == '0'\nassert solution('2 1\\n0 1\\n0 2\\n1 1') == '1'\nassert solution('2 1\\n0 1\\n0 2\\n0 3\\n1 1') == '0'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1\n0 1\n2 2''') == '0'\nassert solution('''1 1\n0 1\n1 2''') == '0'\nassert solution('''1 1\n2 1\n1 1\n1 2''') == '1'\nassert solution('''1 1\n2 1\n2 1\n2 2''') == '2'\nassert solution('''1 1\n1 1\n2 1\n2 2''') == '0'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1\n0 1''') == '0'\nassert solution('''5 2\n0 1\n2 4\n3 4\n4 5\n4 3\nSample Output:\n2''') == '2'\nassert solution('''2 1\n0 1\n2 4\n3 4\n5 4\n5 3\n4 3\nSample Output:\n3''') == '3'\nassert solution('''2 1\n0 1\n0 1\n2 4\n3 4\nSample Output:\n1''') == '1'\nassert solution('''2 1\n1 2\n0 1\n2 4\n3 4\nSample Output:\n0''') == '0'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2''') == '0'\nassert solution('''1 2\n0 2''') == '0'\nassert solution('''1 2\n1 2''') == '1'\nassert solution('''1 2\n1 2''') == '1'\nassert solution('''2 1\n1 0''') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == '0'\nassert solution('''3 2\n0 1\n1 2\n2 0\n2 1''') == '2'\nassert solution('''2 3\n0 1\n1 2\n2 3\n3 0\n3 1''') == '2'\nassert solution('''4 3\n0 1\n1 2\n2 3\n3 4\n3 1''') == '1'\n'''\n1 1\n0 1\n1 1\n1 0\n2 0\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1\n0 1\n1 2''') == 0\nassert solution('''3 1\n0 1\n2 1\n1 3''') == 0\nassert solution('''2 3\n0 1\n1 2\n2 3''') == 2\nassert solution('''2 2\n0 1\n1 1\n1 2''') == 1\nassert solution('''2 1\n1 1\n1 2''') == 1\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"0\"\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3441,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1\\n0 1') == '0'\nassert solution('1 1\\n0 1') == '0'\nassert solution('2 2\\n0 1\\n1 2') == '2'\nassert solution('2 1\\n0 1\\n1 2\\n0 1') == '2'\nassert solution('2 3\\n0 1\\n1 2\\n0 1\\n0 1') == '3'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 10\") == 10\nassert solution(\"1 11\") == 0\n\"\"\""
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 10''') == '10'\nassert solution('''1 10''') == '10'\nassert solution('''1 2''') == '0'\nassert solution('''1 3''') == '1'\nassert solution('''1 1000''') == '0'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1000\") == \"0\"\nassert solution(\"1 9\") == \"0\"\nassert solution(\"9 19\") == \"1\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\nassert solution('1 1000000') == '0'\nassert solution('1 100') == '0'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 100') == '0'\nassert solution('1 1') == '0'\nassert solution('0 100') == '0'\nassert solution('100 100') == '0'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 5') == '0'\nassert solution('1 10') == '10'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 1') == '1'\nassert solution('2 10') == '10'\nassert solution('2 100') == '1'\nassert solution('2 111') == '0'\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"10\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"10\"\nassert solution(input(\"1 10\")) == \"10\"\nassert solution(input(\"100 101\")) == \"10\"\nassert solution(input(\"1 10\")) == \"10\"\nassert solution(input(\"1 100\")) == \"1\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 20') == '4'\nassert solution('1 42') == '1'\nassert solution('1 65') == '10'\nassert solution('1 100') == '18'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n1000 0\n0 1000\n1000 1000''') == '0'\n'''\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == 0\nassert solution('10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\\n') == 10\nassert solution('1\\n200\\n') == 0\nassert solution('100\\n1\\n') == 0\nassert solution('2\\n200\\n1\\n') == 0\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000') == 0\nassert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 0\\n1000 1000\\n0 1000\\n1000 0\\n0 0\\n1000 1000\\n0 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''0 0\n1000 0\n0 1000\n1000 1000\n''') == '0'\nassert solution(\n'''1\n-20000 -100000\n0 -9000\n-100000 90000\n90000 100000\n''') == '3'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n1000 0\n0 1000\n1000 1000''') == '0'\nassert solution('''0 0\n0 1000\n1000 1000\n1000 0''') == '1'\nassert solution('''0 0\n0 1000\n1000 0\n1000 1000''') == '2'\nassert solution('''0 0\n0 1000\n1000 1000\n1000 0''') == '3'\nassert solution('''0 0\n1000 0\n1000 1000\n1000 1000\n1000 0''') == '4'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000') == 0\nassert solution('1\\n0 0\\n10 0') == 1\nassert solution('2\\n0 0\\n0 10\\n0 0') == 2\nassert solution('3\\n0 0\\n0 10\\n0 0\\n0 10') == 3\nassert solution('4\\n0 0\\n0 10\\n0 0\\n0 10\\n0 0') == 4\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n1000 0\n0 1000\n1000 1000''') == '0'\nassert solution('''0 0\n100 0\n0 100\n100 100''') == '0'\nassert solution('''0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n8 0\n9 0\n10 0\n11 0\n12 0\n13 0\n14 0\n15 0\n16 0\n17 0\n18 0\n19 0\n20 0\n21 0\n22 0\n23 0\n24 0\n25 0\n26 0\n27 0\n28 0\n29 0\n30 0\n31 0\n32 0\n33 0\n34 0\n35 0\n36 0\n37 0\n38 0\n39 0\n40 0\n41 0\n42 0\n43 0\n44 0\n45 0\n46 0\n47 0\n48 0\n49 0\n50 0\n51 0\n52 0\n53 0\n54 0\n55 0\n56 0\n57 0\n58 0\n59 0\n60 0\n61 0\n62 0\n63 0\n64 0\n65 0\n66 0\n67 0\n68 0\n69 0\n70 0\n71 0\n72 0\n73 0\n74 0\n75 0\n76 0\n77 0\n78 0\n79 0\n80 0\n81 0\n82 0\n83 0\n84 0\n85 0\n86 0\n87 0\n88 0\n89 0\n90 0\n91 0\n92 0\n93 0\n94 0\n95 0\n96 0\n97 0\n98 0\n99 0\n100 0\n101 0\n102 0\n103 0\n104 0\n105 0\n106 0\n107 0\n108 0\n109 0\n110 0\n111 0\n112 0\n113 0\n114 0\n115 0\n116 0\n117 0\n118 0\n119 0\n120 0\n121 0\n122 0\n123 0\n124 0\n125 0\n126 0\n127 0\n128 0\n129 0\n130 0\n131 0\n132 0\n133 0\n134 0\n135 0\n136 0\n137 0\n138 0\n139 0\n140 0\n141 0\n142 0\n143 0\n144 0\n145 0\n146 0\n147 0\n148 0\n149 0\n150 0\n151 0\n152 0\n153 0\n154 0\n155 0\n156 0\n157 0\n158 0\n159 0\n160 0\n161 0\n162 0\n163 0\n164 0\n165 0\n166 0\n167 0\n168 0\n169 0\n170 0\n171 0\n172 0\n173 0\n174 0\n175 0\n176 0\n177 0\n178 0\n179 0\n180 0\n181 0\n182 0\n183 0\n184 0\n185 0\n186 0\n187 0\n188 0\n189 0\n190 0\n191 0\n192 0\n193 0\n194 0\n195 0\n196 0\n197 0\n198 0\n199 0\n200 0\n201 0\n202 0\n203 0\n204 0\n205 0\n206 0\n207 0\n208 0\n209 0\n210 0\n211 0\n212 0\n213 0\n214 0\n215 0\n216 0\n217 0\n218 0\n219 0\n220 0\n221 0\n222 0\n223 0\n224 0\n225 0\n226 0\n227 0\n228 0\n229 0\n230 0\n231 0\n232 0\n233 0\n234 0\n235 0\n236 0\n237 0\n238 0\n239 0\n240 0\n241 0\n242 0\n243 0\n244 0\n245 0\n246 0\n247 0\n248 0\n249 0\n250 0\n251 0\n252 0\n253 0\n254 0\n255 0\n256 0\n257 0\n258 0\n259 0\n260 0\n261 0\n262 0\n263 0\n264 0\n265 0\n266 0\n267 0\n268 0\n269 0\n270 0\n271 0\n272 0\n273 0\n274 0\n275 0\n276 0\n277 0\n278 0\n279 0\n280 0\n281 0\n282 0\n283 0\n284 0\n285 0\n286 0\n287 0\n288 0\n289 0\n290 0\n291 0\n292 0\n293 0\n294 0\n295 0\n296 0\n297 0\n298 0\n299 0\n300 0\n301 0\n302 0\n303 0\n304 0\n305 0\n306 0\n307 0\n308 0\n309 0\n310 0\n311 0\n312 0\n313 0\n314 0\n315 0\n316 0\n317 0\n318 0\n319 0\n320 0\n321 0\n322 0\n323 0\n324 0\n325 0\n326 0\n327 0\n328 0\n329 0\n330 0\n331 0\n332 0\n333 0\n334 0\n335 0\n336 0\n337 0\n338 0\n339 0\n340 0\n341 0\n342 0\n343 0\n344 0\n345 0\n346 0\n347 0\n348 0\n349 0\n350 0\n351 0\n352 0\n353 0\n354 0\n355 0\n356 0\n357 0\n358 0\n359 0\n360 0\n361 0\n362 0\n363 0\n364 0\n365 0\n366 0\n367 0\n368 0\n369 0\n370 0\n371 0\n372 0\n373 0\n374 0\n375 0\n376 0\n377 0\n378 0\n379 0\n380 0\n381 0\n382 0\n383 0\n384 0\n385 0\n386 0\n387 0\n388 0\n389 0\n390 0\n391 0\n392 0\n393 0\n394 0\n395 0\n396 0\n397 0\n398 0\n399 0\n400 0\n401 0\n402 0\n403 0\n404 0\n405 0\n406 0\n407 0\n408 0\n409 0\n410 0\n411 0\n412 0\n413 0\n414 0\n415 0\n416 0\n417 0\n418 0\n419 0\n420 0\n421 0\n422 0\n423 0\n424 0\n425 0\n426 0\n427 0\n428 0\n429 0\n430 0\n431 0\n432 0\n433 0\n434 0\n435 0\n436 0\n437 0\n438 0\n439 0\n440 0\n441 0\n442 0\n443 0\n444 0\n445 0\n446 0\n447 0\n448 0\n449 0\n450 0\n451 0\n452 0\n453 0\n454 0\n455 0\n456 0\n457 0\n458 0\n459 0\n460 0\n461 0\n462 0\n463 0\n464 0\n465 0\n466 0\n467 0\n468 0\n469 0\n470 0\n471 0\n472 0\n473 0\n474 0\n475 0\n476 0\n477 0\n478 0\n479 0\n480 0\n481 0\n482 0\n483 0\n484 0\n485 0\n486 0\n487 0\n488 0\n489 0\n490 0\n491 0\n492 0\n493 0\n494 0\n495 0\n496 0\n497 0\n498 0\n499 0\n500 0\n501 0\n502 0\n503 0\n504 0\n505 0\n506 0\n507 0\n508 0\n509 0\n510 0\n511 0\n512 0\n513 0\n514 0\n515 0\n516 0\n517 0\n518 0\n519 0\n520 0\n521 0\n522 0\n523 0\n524 0\n525 0\n526 0\n527 0\n528 0\n529"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n0\\n1000 0\\n1000 1000\") == \"0\"\nassert solution(\"1\\n0 0\\n1000 0\\n1000 1000\") == \"1\"\nassert solution(\"2\\n0 0\\n1000 0\\n1000 1000\") == \"1\"\nassert solution(\"3\\n0 0\\n1000 0\\n1000 1000\") == \"1\"\nassert solution(\"4\\n0 0\\n1000 0\\n1000 1000\") == \"1\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '0'\nassert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '0'\nassert solution('-20000 -1000000\\n1 1000000\\n1 -1000000\\n-1 -1000000\\n') == '1'\nassert solution('-20000 1000000\\n1 1000000\\n-1 1000000\\n-1 -1000000\\n') == '1'\nassert solution('-20000 -1000000\\n1 1000000\\n-1 -1000000\\n-1 1000000\\n') == '1'\n"
    },
    {
        "number": 3443,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0\n1000 0\n0 1000\n1000 1000''') == '0'\nassert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n104 104\n105 105\n106 106\n107 107\n108 108\n109 109\n110 110\n111 111\n112 112\n113 113\n114 114\n115 115\n116 116\n117 117\n118 118\n119 119\n120 120\n121 121\n122 122\n123 123\n124 124\n125 125\n126 126\n127 127\n128 128\n129 129\n130 130\n131 131\n132 132\n133 133\n134 134\n135 135\n136 136\n137 137\n138 138\n139 139\n140 140\n141 141\n142 142\n143 143\n144 144\n145 145\n146 146\n147 147\n148 148\n149 149\n150 150\n151 151\n152 152\n153 153\n154 154\n155 155\n156 156\n157 157\n158 158\n159 159\n160 160\n161 161\n162 162\n163 163\n164 164\n165 165\n166 166\n167 167\n168 168\n169 169\n170 170\n171 171\n172 172\n173 173\n174 174\n175 175\n176 176\n177 177\n178 178\n179 179\n180 180\n181 181\n182 182\n183 183\n184 184\n185 185\n186 186\n187 187\n188 188\n189 189\n190 190\n191 191\n192 192\n193 193\n194 194\n195 195\n196 196\n197 197\n198 198\n199 199\n200 200\n201 201\n202 202\n203 203\n204 204\n205 205\n206 206\n207 207\n208 208\n209 209\n210 210\n211 211\n212 212\n213 213\n214 214\n215 215\n216 216\n217 217\n218 218\n219 219\n220 220\n221 221\n222 222\n223 223\n224 224\n225 225\n226 226\n227 227\n228 228\n229 229\n230 230\n231 231\n232 232\n233 233\n234 234\n235 235\n236 236\n237 237\n238 238\n239 239\n240 240\n241 241\n242 242\n243 243\n244 244\n245 245\n246 246\n247 247\n248 248\n249 249\n250 250\n251 251\n252 252\n253 253\n254 254\n255 255\n256 256\n257 257\n258 258\n259 259\n260 260\n261 261\n262 262\n263 263\n264 264\n265 265\n266 266\n267 267\n268 268\n269 269\n270 270\n271 271\n272 272\n273 273\n274 274\n275 275\n276 276\n277 277\n278 278\n279 279\n280 280\n281 281\n282 282\n283 283\n284 284\n285 285\n286 286\n287 287\n288 288\n289 289\n290 290\n291 291\n292 292\n293 293\n294 294\n295 295\n296 296\n297 297\n298 298\n299 299\n300 300\n301 301\n302 302\n303 303\n304 304\n305 305\n306 306\n307 307\n308 308\n309 309\n310 310\n311 311\n312 312\n313 313\n314 314\n315 315\n316 316\n317 317\n318 318\n319 319\n320 320\n321 321\n322 322\n323 323\n324 324\n325 325\n326 326\n327 327\n328 328\n329 329\n330 330\n331 331\n332 332\n333 333\n334 334\n335 335\n336 336\n337 337\n338 338\n339 339\n340 340\n341 341\n342 342\n343 343\n344 344\n345 345\n346 346\n347 347\n348 348\n349 349\n350 350\n351 351\n352 352\n353 353\n354 354\n355 355\n356 356\n357 357\n358 358\n359 359\n360 360\n361 361\n362 362\n363 363\n364 364\n365 365\n366 366\n367 367\n368 368\n369 369\n370 370\n371 371\n372 372\n373 373\n374 374\n375 375\n376 376\n377 377\n378 378\n379 379\n380 380\n381 381\n382 382\n383 383\n384 384\n385 385\n386 386\n387 387\n388 388\n389 389\n390 390\n391 391\n392 392\n393 393\n394 394\n395 395\n396 396\n397 397\n398 398\n399 399\n400 400\n401 401\n402 402\n403 403\n404 404\n405 405\n406 406\n407 407\n408 408\n409 409\n410 410\n411 411\n412 412\n413 413\n414 414\n415 415\n416 416\n417 417\n418 418\n419 419\n420 420\n421 421\n422 422\n423 423\n424 424\n425 425\n426 426\n427 427\n428 428\n429 429\n430 430\n431 431\n432 432\n433 433\n434 434\n435 435\n436 436\n437 437\n438 439\n440 440\n441 441\n442 442\n443 443\n444 444\n445 445\n446 446\n447 447\n448 448\n449 449\n450 450\n451 451\n452 452\n453 453\n454 454\n455 455\n456 456\n457 457\n458 459\n460 460\n461 461\n462 462\n463 463\n464 464\n465 465\n466 466\n467 468\n469 470\n471 471\n472 472\n473 473\n474 474\n475 475\n476 476\n477 478\n479 479\n480 480\n481 481\n482 482\n483 483\n484 484\n485 485\n486 486\n487 487\n488 488\n489 489\n490 490\n491 491\n492 492\n493 493\n494 494\n495 495\n496 496\n497 497\n498 498\n499 499\n500 500\n501 501\n502 502\n503 503\n504 504\n505 505\n506 506\n507 507\n508 508\n509 509\n510 510\n511 511\n512 512\n513 513\n514 515\n516 517\n518 519\n520 520\n521 521\n522 523\n524 524\n525"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.500000000 1.000000000\"\n\nSample Input:\n2 1\n0 1 0.5\n0 1 0.5\nSample Output:\n0.500000000 1.000000000\n0.500000000 1.000000000\n\"\"\""
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2 1\n0 1 0.5\n0 1 0.5\n\"\"\"\n) == \"\"\"\n0.500000000 1.000000000\n\"\"\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1\\n0 1 0.5\\n1 1 0.5\\n0 0 0.5') == '0.500000000 1.000000000'\nassert solution('1 1\\n0 0 0.5\\n1 1 0.5\\n0 0 0.5') == '0.500000000 1.000000000'\nassert solution('0 0\\n1 1 0.5\\n0 0 0.5') == '0.500000000 1.000000000'\nassert solution('1 1\\n0 0 0.5\\n1 1 0.5\\n0 0 0.5') == '0.500000000 1.000000000'\nassert solution('0 0\\n0 0 0.5\\n0 0 0.5') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"0.500000000 1.000000000\"\nassert solution(\"1 2 3 4\") == \"-1.0\"\nassert solution(\"3 0 0.5 0.5 0.5\") == \"0.5 0.5 0.5 0.5\"\nassert solution(\"1 1 0 0.5\") == \"0.5 0.5 0.5 0.5\"\nassert solution(\"2 2 1 0 0.5 0.5\") == \"0.5 0.5 0.5 0.5\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1 0.5') == '0.500000000 1.000000000'\nassert solution('1 0 0.5') == '0.500000000 1.000000000'\nassert solution('1 1 1') == '-1.000000000'\nassert solution('2 1 0.5') == '0.500000000 1.000000000'\nassert solution('3 1 0.5') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == '0.500000000 1.000000000'\nassert solution('1 3') == '0.5 0'\nassert solution('2 2') == '0.5 0'\nassert solution('4 4') == '0.5 0'\nassert solution('1 1 1.5') == '0.25 0'\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open('examples/1.in').read()) == open('examples/1.out').read()\nassert solution(open('examples/2.in').read()) == open('examples/2.out').read()\nassert solution(open('examples/3.in').read()) == open('examples/3.out').read()\nassert solution(open('examples/4.in').read()) == open('examples/4.out').read()\nassert solution(open('examples/5.in').read()) == open('examples/5.out').read()\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 1\\n0 0 0.5\") == \"0.500000000 1.000000000\"\nassert solution(\"3 2\\n0 1 0.25\\n1 2 0.75\\n0 2 0.5\") == \"-1.0\"\nassert solution(\"1 1\\n1 0 0.5\") == \"0.500000000 1.000000000\"\nassert solution(\"3 1\\n0 1 0.25\\n1 2 0.75\\n0 2 0.5\") == \"0.500000000 1.000000000\"\nassert solution(\"5 1\\n0 1 0.25\\n1 2 0.75\\n0 2 0.5\\n0 3 0.25\\n1 4 0.75\\n0 4 0.5\") == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1\n0 1 0.5\n''') == \"0.500000000 1.000000000\"\n'''\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"2\"\nassert solution(\"9\") == \"1\"\nassert solution(\"10\") == \"0\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7'\nassert solution('8\\n1 1\\n2 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n10 9\\n9 5\\n7 4\\n4 5\\n2 3\\n2 2\\n2 1\\n4 1\\n1 5\\n10 10') == '7'\nassert solution('7\\n1 1\\n2 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n10 9\\n9 5\\n7 4\\n4 5\\n2 3\\n2 2\\n2 1') == '7'\nassert solution('7\\n1 1\\n2 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n10 9\\n9 5\\n7 4\\n4 5\\n2 3\\n2 2') == '7'\nassert solution('7\\n1 1\\n2 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n10 9\\n9 5\\n7 4\\n4 5\\n2 3\\n2 2\\n2 1') == '7'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"3\\n1 2\\n3 2\\n5 3\\n1 1\\n1 3\\n3 1\") == \"3\"\nassert solution(\"5\\n3 1\\n3 3\\n3 4\\n3 1\") == \"4\"\nassert solution(\"6\\n3 3\\n3 5\\n3 2\\n4 1\\n1 4\\n3 1\\n4 1\") == \"3\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''2\n0 0\n1 1''') == '1'\nassert solution('''2\n4 4\n4 2''') == '5'\nassert solution('''8\n0 0\n1 1\n0 2\n3 4\n5 6\n7 8\n8 9\n0 0''') == '7'\nassert solution('''2\n2 2\n0 0\n1 1''') == '1'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n\") == \"7\"\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n\") == \"7\"\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n\") == \"7\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"3\"\nassert solution(\"5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\"\"\"\n) == \"7\"\nassert solution(\n\"\"\"10\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n1 3\n1 4\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1 474\n1 475\n1 476\n1 477\n1 478"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '7'\nassert solution(stdin) == '7'\nassert solution(stdin) == '7'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"7\"\n\"\"\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n2 1') == '1'\nassert solution('1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n') == '7'\nassert solution('2 2\\n1 1\\n2 2\\n2 1\\n') == '2'\nassert solution('3 3\\n1 1\\n2 2\\n3 3\\n2 1\\n1 2') == '2'\nassert solution('4 2\\n1 1\\n2 2\\n3 3\\n4 4\\n3 3\\n2 2\\n') == '4'\n"
    },
    {
        "number": 3445,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''a b\n3-b 5-b\n6-a 2-b''') == \"8-a\"\nassert solution('''a b\na b\n3-b 5-b\n6-a 2-b''') == \"9-b\"\nassert solution('''a b\na b\n3-b 5-b\n6-a 2-b''') == \"8-a\"\nassert solution('''a b\na b\na b\n3-b 5-b\n6-a 2-b''') == \"9-b\"\nassert solution('''a b\na b\na b\n3-b 5-b\n6-a 2-b''') == \"8-a\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(''.join(sample)) == '9-b'\nassert solution(''.join(sample_2)) == '8-a'\nassert solution(''.join(sample_3)) == '9-b'\nassert solution(''.join(sample_4)) == '8-a'\nassert solution(''.join(sample_5)) == '9-b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0''') == '''9-b\n8-a'''\n\nassert solution(\n'''5\na a a a a a\n4-a 4-a 4-a 4-a\n3-b 3-b 3-b 3-b\n3-a 3-a 3-a 3-a\n0\na a b a a b\n3-a 3-b 3-a 3-b\n4-a 4-a 4-a 4-a\n4-a 4-a 4-a 4-a\n3-b 3-b 3-b 3-b\n3-a 3-a 3-a 3-a\n0''') == '''11-a\n10-b\n9-a\n7-b\n5-a\n3-a\n3-b\n2-a\n2-b\n2-a\n2-b\n'''\n\nassert solution(\n'''1\nabcdefghijklmnopqrstuvwxyz\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '''1\n2-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n2-a\n1-a\n2-a\n1-a\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n1-b\n2-a\n1-a\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba') == '9-b\\n8-a'\nassert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba') == '9-b\\n8-a'\nassert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nab') == '9-b\\n8-a'\nassert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\na') == '9-b\\n8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == 'b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba''') == '9-b\\n8-a'\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n1\n3\naba''') == '9-b\\n8-a'\n'''\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a b\") == \"9-b\"\nassert solution(\"b a\") == \"8-a\"\nassert solution(\"b b\") == \"9-b\"\nassert solution(\"a b c\") == \"9-b\"\nassert solution(\"a b c d\") == \"8-a\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b\\n8-a'\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\nbba\nbba\n0\n''') == '8-a'\n'''"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n') == '9-b\\n8-a\\n'\nassert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n') == '9-b\\n8-a\\n'\n\"\"\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b\\nb-a\\n'\nassert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\nabca\nbba\n0\n''') == '9-b\\nb-a\\n'\nassert solution('''1\na\n''') == '1-a\\n'\nassert solution('''3\nabcd\ncbd\nabcd\n0\n''') == '1-a\\n1-b\\n1-c\\n1-d\\n'\nassert solution('''5\na\nb\na\na\nb\na\n0\n''') == '1-a\\n1-b\\n1-a\\n1-a\\n1-b\\n1-a\\n'\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == 'R'\nassert solution('3') == 'R3'\nassert solution('4') == 'R3246'\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys\nsys.path.append(\"..\")\nfrom utils import timeit\n\n\n@timeit(number=10000, n=None, **{'ns': 'cpu_bound','mem': '3Mb'})\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\necho\n1\nechoecho\n''') == '3246R3246'\nassert solution('''3\ncarp\ncarp\n''') == 'C0R0P0'\nassert solution('''3\ncarp\ncarp\n''') == 'C0R0P0'\nassert solution('''2\ncarp\ncarp\n''') == 'C0R0P0'\nassert solution('''1\ncarp\ncarp\n''') == 'C0R0P0'\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\necho\n1\nechoecho\n''') == '3246R3246'\nassert solution('''2\n123\na\nb\n''') == '23aR23a'\nassert solution('''5\nhey\nwhat\ndoo\nlets\ngo\n''') == '6LLU6LLE6L'\n'''\nThis should be accepted\n'''\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('echo') == '3246R3246'\nassert solution('echoecho') == 'D12D12D3246R3246'\nassert solution('echo') == '3246R3246'\nassert solution('echoecho') == 'D12D12D3246R3246'\n'''\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\ne\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"echo\") == \"R\"\nassert solution(\"echoecho\") == \"R3246\"\nassert solution(\"echoe\") == \"R3246\"\nassert solution(\"echoee\") == \"R3246R\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\necho\n1\nechoecho''') == '3246R3246'\n\nassert solution('''2\nechoecho\n1\nechoecho''') == '3246R3246'\n\nassert solution('''3\necho\n1\nechoecho\n2\nechoecho\n3\nechoecho\n4\nechoecho''') == '3246R3246'\n\nassert solution('''5\necho\n1\nechoecho\n2\nechoecho\n3\nechoecho\n4\nechoecho\n5\nechoecho\n6\nechoecho\n7\nechoecho\n8\nechoecho\n9\nechoecho\n10\nechoecho\n11\nechoecho\n12\nechoecho\n13\nechoecho\n14\nechoecho\n15\nechoecho\n16\nechoecho\n17\nechoecho\n18\nechoecho\n19\nechoecho\n20\nechoecho''') == '3246R3246'\n\nassert solution('''5\nechoecho\n1\nechoecho\n2\nechoecho\n3\nechoecho\n4\nechoecho\n5\nechoecho\n6\nechoecho\n7\nechoecho\n8\nechoecho\n9\nechoecho\n10\nechoecho\n11\nechoecho\n12\nechoecho\n13\nechoecho\n14\nechoecho\n15\nechoecho\n16\nechoecho\n17\nechoecho\n18\nechoecho\n19\nechoecho\n20\nechoecho''') == '3246R3246'"
    },
    {
        "number": 3447,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == '3246'\nassert solution('''echo''') == '3246'\nassert solution('''echo echo''') == '3246'\nassert solution('''1\n2\n3\n4\n5''') == '3246'\nassert solution('''1\n3\n2\n4\n5''') == '3246'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('2 1') == 'NO'\nassert solution('1 1') == 'NO'\nassert solution('3 2') == 'NO'\nassert solution('4 2') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('4 2') == 'YES'\nassert solution('4 3') == 'YES'\nassert solution('5 3') == 'YES'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1''') == 'YES'\nassert solution('''3 2''') == 'YES'\nassert solution('''3 1''') == 'NO'\nassert solution('''4 2''') == 'YES'\nassert solution('''1 1''') == 'YES'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('1 1') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('1 1 1 1') == 'NO'\nassert solution('1 1 1 1 1') == 'YES'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('3 4') == 'YES'\nassert solution('3 5') == 'NO'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"3 1\"\n) == \"YES\"\nassert solution(\n\"3 2\"\n) == \"NO\"\nassert solution(\n\"5 3\"\n) == \"YES\"\nassert solution(\n\"5 5\"\n) == \"YES\"\nassert solution(\n\"7 3\"\n) == \"YES\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'\n\nassert solution('2 1') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('2 2') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1 1 2') == 'NO'\nassert solution('2 1 2') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('3 1') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('2 2') == 'YES'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\"\n\"\"\""
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\n\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '72'\n\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == '238'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\nassert solution('6\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\nassert solution('6\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\nassert solution('6\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n100000') == '300'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n777777') == '0'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n50000000') == '0'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n700000000') == '0'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\nassert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\nassert solution('9\\n1\\n6\\n333333333\\n300003\\n300003\\n300003\\n300003\\n333333333\\n') == '176'\nassert solution('9\\n1\\n6\\n333333333\\n300003\\n300003\\n300003\\n300003\\n333333333\\n') == '176'\nassert solution('9\\n1\\n6\\n333333333\\n300003\\n300003\\n300003\\n300003\\n333333333\\n') == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9\\n1\\n6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\", \"Sample\"\n'''\n"
    },
    {
        "number": 3449,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '12'\nassert solution('5'*100000) == '012'\nassert solution('123456789') == '234'\nassert solution('123456789'*100000) == '234567'\nassert solution('100000'*100000) == '234567'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('12') == '12'\nassert solution('123') == '123'\nassert solution('1234') == '1234'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(5) == \"012\"\nassert solution(100) == \"024\"\nassert solution(123456789) == \"0234567\"\nassert solution(987654321) == \"02345678\"\nassert solution(10000000) == \"02468\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"012\"\nassert solution(\"100\") == \"000\"\nassert solution(\"1000\") == \"000000\"\nassert solution(\"10000\") == \"0000000\"\nassert solution(\"1000000\") == \"00000000\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '12'\nassert solution('12') == '12'\nassert solution('7') == '7'\nassert solution('12345') == '123'\nassert solution('1337') == '13'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('a') == ''\nassert solution('5') == '0'\nassert solution('567') == '0'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('12') == '12'\nassert solution('123') == '123'\nassert solution('123456789') == '4567'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '12'\nassert solution('10') == '12'\nassert solution('100') == '12'\nassert solution('1000') == '12'\nassert solution('10000') == '12'\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(5) == \"012\"\nassert solution(10) == \"012\"\nassert solution(100) == \"0120\"\nassert solution(1000) == \"0123456789\"\nassert solution(123456789) == \"0123456789\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''12''') == '012'\nassert solution('''12456''') == '0123'\nassert solution('''1234567''') == '01234'\nassert solution('''987654321''') == '98765'\n'''"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"((()\") == \"480\"\nassert solution(\"((()))\") == \"480\"\nassert solution(\"((()()))\") == \"480\"\nassert solution(\"((())()(()))\") == \"480\"\nassert solution(\"((()()))\") == \"480\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"(((()(())()()))\") == 480\nassert solution(\"(())\") == 0\nassert solution(\"((())\") == -570\nassert solution(\"(()(()))\") == -570\nassert solution(\"()((()\") == -1000\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"((()\") == \"?\"\nassert solution(\"(((\") == \"?\"\nassert solution(\"((()\") == \"?\"\nassert solution(\"()\") == \"?\"\nassert solution(\"\") == \"?\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_case.txt\", \"r\").read()) == \"??\"\nassert solution(open(\"test_case2.txt\", \"r\").read()) == \"480\"\nassert solution(open(\"test_case3.txt\", \"r\").read()) == \"617\"\nassert solution(open(\"test_case4.txt\", \"r\").read()) == \"??\"\nassert solution(open(\"test_case5.txt\", \"r\").read()) == \"928\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"(())\") == \"?\"\nassert solution(\"((()\") == \"??\"\nassert solution(\"(()()\") == \"?\"\nassert solution(\"(()(()()))\") == \"??\"\nassert solution(\"()()()()()()()\") == \"??\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"??\"\n\nassert solution(\"(((()\") == 8\nassert solution(\"(()\") == 4\nassert solution(\"())\") == 0\nassert solution(\"(())(())\") == 4\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\") == \"480\\n\"\nassert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\") == \"480\\n\"\nassert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\") == \"480\\n\"\nassert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\") == \"480\\n\"\nassert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\") == \"480\\n\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"?\"\n\"\"\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''(()''') == '480'\nassert solution('''))((()''') == '480'\nassert solution('''))((()''') == '480'\nassert solution('''(())(()())''') == '480'\nassert solution('''))((())((()''') == '480'\n"
    },
    {
        "number": 3451,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"?\"\nprint(solution(stdin))\n\nassert solution(stdin) == \"?\"\nprint(solution(stdin))\n\nassert solution(stdin) == \"?\"\nprint(solution(stdin))\n\nassert solution(stdin) == \"?\"\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''13''') == '2 4'\nassert solution('''13''') == '5 6'\nassert solution('''13''') == '7 8 9 10 11 12 13'\nassert solution('''13''') == '2 4'\nassert solution('''13''') == '5 6'\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n3 4\n1 2 3\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n1 2 3\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n1 2 3\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n1 2 3\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n1 2 3\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n1 2 3\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n1 2 3\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2 3 4\n2"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input/farming.txt\").read()))\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 2\\n2 2 1\\n3 3 2\") == \"2 4\"\nassert solution(\"2\\n1 1\\n1 1\") == None\nassert solution(\"1\\n1\") == None\nassert solution(\"3\\n1 1 2\\n2 1 3\\n3 1 2\") == \"2 3 4\"\nassert solution(\"2\\n1 1\\n2 2\") == \"2\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\nassert solution('4\\n3 3 3 3\\n2 2 2 2\\n1 1 1 1\\n2 1 2 2\\n1 1 1 1\\n2 1 2 2\\n1 1 1 1\\n1 1 1 1\\n2 1 2 2\\n1 1 1 1\\n2 1 2 2\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n2 1 2 2') == '1 2 3 4'\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12''') == '2 4 5 6 7 8 9 10 11 12 13'\nassert solution('''12\n
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == 'none'\nassert solution('2\\n2\\n3') == 'none'\nassert solution('3\\n2\\n3') == 'none'\nassert solution('4\\n2\\n3') == 'none'\nassert solution('4\\n2\\n3\\n1') == 'none'\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4 5 6 7 8 9 10 11 12 13'\nassert solution('''7\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n''') == '1 2 3 4 5 6 7 8 9 10 11 12 13'\nassert solution('''7\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n''') == '1 2 3 4 5 6 7 8 9 10 11 12 13'\nassert solution('''9\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n\"\"\"\n) == \"\"\"\n2 4\n5 6\n7 8 9 10 11 12 13\n\"\"\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 1 2') == '2 1\\n'\nassert solution('3\\n3 3 3 3 3 3 3\\n1 2 2\\n2 1 2') == '3 1 3\\n'\nassert solution('3\\n3 3 3 3 3 3 3\\n1 2 2\\n1 1 3\\n2 1 2') == '3 1 3\\n'\nassert solution('3\\n3 3 3 3 3 3 3\\n1 2 2\\n1 1 3\\n2 1 2\\n2 1 2\\n2 1 2') == '3 1 3\\n'\nassert solution('3\\n3 3 3 3 3 3 3\\n1 2 2\\n1 1 3\\n2 1 2\\n2 1 2\\n2 1 2') == '3 1 3\\n'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '35 39 36 27 29'\n\"\"\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution(\n'''1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution(\n'''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n3 4 5\n2 3 4\n2 4 3\n2 3 1\n1 2 3\n3 2 1\n1 2 2\n2 1 3''') == '35 39 36 27 29'\nassert solution(\n'''1 1\n1 1\n1 1\n1 1''') == '1 1 1 1'\nassert solution(\n'''2 2\n1 2\n1 2\n1 2\n1 2''') == '1 1 1 1'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 5') == '35 39 36 27 29'\nassert solution('5 10') == '45 47 48 39 39 40 41'\nassert solution('2 100000') == '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\nassert solution('2 2\\n1 2\\n2 1') == '3'\nassert solution('1 1\\n1 2') == '0'\nassert solution('4 4\\n1 2 3\\n2 3 4') == '0 0 0 0'\nassert solution('3 3\\n1 2 3\\n2 3 1\\n1 3 2') == '3 3 3'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 10\") == \"35 39 36 27 29\"\nassert solution(\"3 10\\n1 2 3\") == \"35 39 36 27 29\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\") == \"43513636371387321\"\nassert solution(\"10 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"43489467182292299\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1 0 0 1\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n') == '35 39 36 27 29'\n'''"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '2'\nassert solution('2 2\\n1 1\\n2 1\\n2 1') == '6'\nassert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\nassert solution('2 2\\n1 1\\n2 1\\n2 1') == '6'\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n5\\n1\\n2\\n3\\n4\\n5') == \"35 39 36 27 29\"\nassert solution('1\\n2\\n1\\n2\\n3\\n4\\n5') == \"35 39 36 27 29\"\nassert solution('1\\n5\\n1\\n2\\n3\\n4\\n5') == \"35 39 36 27 29\"\nassert solution('1\\n2\\n1\\n2\\n3\\n4\\n5') == \"35 39 36 27 29\"\nassert solution('1\\n5\\n1\\n2\\n3\\n4\\n5') == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"27 29 36 27 29\"\n\"\"\"\nfrom math import floor\nN, M = [int(x) for x in stdin.split()]\n\nfor i in range(1, M+1):\n    A, B, L = [int(x) for x in stdin.split()]\n    if A!= B:\n        T = L / (2 * min(A, B))\n        T = floor(T * 10**9)\n        print(T, end=' ')\n"
    },
    {
        "number": 3453,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution('''10 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n5 6 7\n6 7 8\n7 8 9\n8 9 10\n9 10 11\n10 11 12''') == '7 7 7 7 7 7 7 7 7 7 7 7 7'\nassert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n1 1 1\n1 1 1\n1 1 1''') == '7 7 7 7 7 7 7 7 7 7 7 7 7'\n'''\n'''"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 2 1\n''') == '0 672'\n\nassert solution('''5\n1 2 3 4 5\n1 2 3 4\n1 2 3\n1 2\n1\n''') == '0 0'\n\nassert solution('''5\n2 4 3 4 5\n2 4 3 4\n2 4 3\n2 4\n1\n''') == '0 0'\n\nassert solution('''5\n1 1 1 1 1\n1 2 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '0 0'\n\nassert solution('''5\n1 1 1 1 1\n1 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '0 0'"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 4\") == \"0 672\"\nassert solution(\"2 2 1 1\") == \"0 0\"\nassert solution(\"1 1 3 4\") == \"0 0\"\nassert solution(\"1 1 2 3\") == \"0 0\"\nassert solution(\"4 2 1 3\") == \"0 0\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"0 672\"\nassert solution(\"2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"0 672\"\nassert solution(\"3 2 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"0 3456\"\nassert solution(\"3 4 2 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"0 0\"\nassert solution(\"10 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"0 3536\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n3 2 1\n''') == '0 672'\nassert solution('''\n3 4\n3 2 2\n''') == '0 481'\nassert solution('''\n5 5\n2 2 2 2\n''') == '0 996'\nassert solution('''\n5 7\n1 2 1 1 2\n''') == '0 1'\n'''"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n3 2 1') == '0 672'\nassert solution('2 3\\n2 3 1') == '1 0'\nassert solution('2 3\\n2 1 3') == '1 0'\nassert solution('2 3\\n1 3 2') == '0 0'\n\"\"\"\n\nimport sys\nfrom functools import reduce"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n3 2 1\") == \"0 672\"\nassert solution(\"5 6\\n2 3 1 2 3\") == \"0 1268\"\nassert solution(\"1 1\\n1\") == \"0 1\"\n\n-----Custom testing-----\nMake sure your solution passes the following test case."
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3\\n1 3 2') == '0 672'\nassert solution('1 2\\n1 2 3') == '0 36'\nassert solution('2 1\\n1 2 2') == '0 3'\nassert solution('2 2\\n2 2 2') == '0 1'\nassert solution('2 3\\n2 3 2') == '0 2'\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3 3\\n3 2 1') == '0 672'\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n3 2 1''') == '0 672'\nassert solution('''3 3\n3 2 3\nSample Input:\n2 3\n1 2 1\nSample Output:\n2 5\n"
    },
    {
        "number": 3454,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 3\n3 2 1\n\"\"\") == \"0 672\"\n\nassert solution(\n\"\"\"\n4 4\n1 3 2 4\n\"\"\") == \"0 111\"\n\nassert solution(\n\"\"\"\n4 4\n1 1 1 1\n\"\"\") == \"0 1\"\n\nassert solution(\n\"\"\"\n5 5\n1 2 3 4 5\n\"\"\") == \"0 4\"\n\nassert solution(\n\"\"\"\n4 5\n1 1 1 1\n\"\"\") == \"0 1\""
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50''') == '2.500000'\nassert solution('''1 1 10\n0 10 10\n2 2 10\n2 2 10\n2 40 50''') == 'Impossible'\n'''\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 'Impossible'\nassert solution('0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n1 1 6\\n1 1 7\\n2 1 9\\n1 1 8\\n2 2 10\\n1 1 9\\n1 1 10\\n1 1 11\\n1 1 12\\n2 2 13\\n1 1 14\\n1 1 15\\n1 1 16\\n2 2 17\\n2 3 19\\n1 1 18\\n1 1 20\\n2 2 21\\n1 1 22\\n1 1 23\\n2 2 24\\n2 3 26\\n1 1 25\\n1 1 27\\n2 2 28\\n1 1 29\\n1 1 30\\n1 1 31\\n2 2 32\\n1 1 33\\n1 1 34\\n1 1 35\\n2 2 36\\n1 1 37\\n1 1 38\\n1 1 39\\n1 1 40\\n2 2 41\\n2 3 43\\n1 1 42\\n1 1 43\\n1 1 44\\n1 1 45\\n1 1 46\\n1 1 47\\n1 1 48\\n1 1 49\\n1 1 50\\n1 1 51\\n2 2 52\\n1 1 53\\n1 1 54\\n1 1 55\\n1 1 56\\n1 1 57\\n1 1 58\\n1 1 59\\n1 1 60\\n1 1 61\\n2 2 62\\n1 1 62\\n1 1 63\\n1 1 64\\n1 1 65\\n2 2 66\\n1 1 67\\n1 1 68\\n1 1 69\\n1 1 70\\n1 1 71\\n1 1 72\\n1 1 73\\n2 2 74\\n1 1 74\\n1 1 75\\n1 1 76\\n1 1 77\\n1 1 78\\n1 1 79\\n1 1 80\\n1 1 81\\n1 1 82\\n1 1 83\\n1 1 84\\n1 1 85\\n1 1 86\\n1 1 87\\n1 1 88\\n1 1 89\\n1 1 90\\n1 1 91\\n1 1 92\\n1 1 93\\n1 1 94\\n1 1 95\\n1 1 96\\n1 1 97\\n1 1 98\\n1 1 99\\n1 1 100\\n1 1 101\\n1 1 102\\n2 2 103\\n1 1 103\\n1 1 104\\n1 1 105\\n1 1 106\\n1 1 107\\n1 1 108\\n1 1 109\\n1 1 110\\n1 1 111\\n1 1 112\\n1 1 113\\n1 1 114\\n1 1 115\\n1 1 116\\n1 1 117\\n1 1 118\\n1 1 119\\n1 1 120\\n1 1 121\\n1 1 122\\n1 1 123\\n1 1 124\\n1 1 125\\n1 1 126\\n1 1 127\\n1 1 128\\n1 1 129\\n1 1 130\\n1 1 131\\n1 1 132\\n1 1 133\\n1 1 134\\n1 1 135\\n1 1 136\\n1 1 137\\n1 1 138\\n1 1 139\\n1 1 140\\n1 1 141\\n1 1 142\\n1 1 143\\n1 1 144\\n1 1 145\\n1 1 146\\n1 1 147\\n1 1 148\\n1 1 149\\n1 1 150\\n1 1 151\\n1 1 152\\n1 1 153\\n1 1 154\\n1 1 155\\n1 1 156\\n1 1 157\\n1 1 158\\n1 1 159\\n1 1 160\\n1 1 161\\n1 1 162\\n1 1 163\\n1 1 164\\n1 1 165\\n1 1 166\\n1 1 167\\n1 1 168\\n1 1 169\\n1 1 170\\n1 1 171\\n1 1 172\\n1 1 173\\n1 1 174\\n1 1 175\\n1 1 176\\n1 1 177\\n1 1 178\\n1 1 179\\n1 1 180\\n1 1 181\\n1 1 182\\n1 1 183\\n1 1 184\\n1 1 185\\n1 1 186\\n1 1 187\\n1 1 188\\n1 1 189\\n1 1 190\\n1 1 191\\n1 1 192\\n1 1 193\\n1 1 194\\n1 1 195\\n1 1 196\\n1 1 197\\n1 1 198\\n1 1 199\\n1 1 200\\n1 1 201\\n1 1 202\\n1 1 203\\n1 1 204\\n1 1 205\\n1 1 206\\n1 1 207\\n1 1 208\\n1 1 209\\n1 1 210\\n1 1 211\\n1 1 212\\n1 1 213\\n1 1 214\\n1 1 215\\n1 1 216\\n1 1 217\\n1 1 218\\n1 1 219\\n1 1 220\\n1 1 221\\n1 1 222\\n1 1 223\\n1 1 224\\n1 1 225\\n1 1 226\\n1 1 227\\n1 1 228\\n1 1 229\\n1 1 230\\n1 1 231\\n1 1 232\\n1 1 233\\n1 1 234\\n1 1 235\\n1 1 236\\n1 1 237\\n1 1 238\\n1 1 239\\n1 1 240\\n1 1 241\\n1 1 242\\n1 1 243\\n1 1 244\\n1 1 245\\n1 1 246\\n1 1 247\\n1 1 248\\n1 1 249\\n1 1 250\\n1 1 251\\n1 1 252\\n1 1 253\\n1 1 254\\n1 1 255\\n1 1 256\\n1 1 257\\n1 1 258\\n1 1 259"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n\"\"\") == \"2.500000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\"\"\") == \"2.500000\"\nassert solution(\n\"\"\"1 2 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\"\"\") == \"Impossible\"\nassert solution(\n\"\"\"2 2 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\"\"\") == \"1.00000\"\nassert solution(\n\"\"\"1 2 3\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\"\"\") == \"1.00000\"\nassert solution(\n\"\"\"3 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n3 2 15\n3 40 45\"\"\") == \"1.00000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\nassert stdin == ''\n\nassert stdin == ''\n\nassert stdin == ''\n\nassert stdin == ''"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == 'Impossible'\nassert solution(input2) == '2.500000'\nassert solution(input3) == '2.500000'\nassert solution(input4) == '2.500000'\nassert solution(input5) == '2.500000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 'Impossible'\nassert solution('0 0 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n2 2 18') == '2.500000'\nassert solution('0 0 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('0 0 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n2 2 18\\n2 40 50\\n3 2 18\\n2 2 18') == '2.500000'\nassert solution('0 0 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n2 2 18\\n2 40 50\\n3 2 18\\n2 2 18\\n2 2 18\\n2 2 18') == '2.500000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 10\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 2.5\nassert solution('2 4 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 2.500000\nassert solution('1 1 1\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == Impossible\nassert solution('1 1 1\\n0 1 1\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 1.0\nassert solution('1 1 1\\n0 1 1\\n1 0 1\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == Impossible\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('4 5 10\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('2 3 4\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2') == 'Impossible'\nassert solution('2 3 4\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2') == '2.250000'\nassert solution('1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3') == '1.000000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.500000'\nassert solution('''\n5 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == 'Impossible'\nassert solution('''\n5 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n1 7 4\n1 11 9\n1 21 19\n1 22 22\n2 2 18\n2 40 50\n''') == '2.50000'\nassert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n2 4 4\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n2 11 11\n2 12 12\n2 13 13\n2 14 14\n2 15 15\n2 16 16\n2 17 17\n2 18 18\n2 19 19\n2 20 20\n2 21 21\n2 22 22\n2 23 23\n2 24 24\n2 25 25\n2 26 26\n2 27 27\n2 28 28\n2 29 29\n2 30 30\n2 31 31\n2 32 32\n2 33 33\n2 34 34\n2 35 35\n2 36 36\n2 37 37\n2 38 38\n2 39 39\n2 40 40\n2 41 41\n2 42 42\n2 43 43\n2 44 44\n2 45 45\n2 46 46\n2 47 47\n2 48 48\n2 49 49\n2 50 50\n2 51 51\n2 52 52\n2 53 53\n2 54 54\n2 55 55\n2 56 56\n2 57 57\n2 58 58\n2 59 59\n2 60 60\n2 61 61\n2 62 62\n2 63 63\n2 64 64\n2 65 65\n2 66 66\n2 67 67\n2 68 68\n2 69 69\n2 70 70\n2 71 71\n2 72 72\n2 73 73\n2 74 74\n2 75 75\n2 76 76\n2 77 77\n2 78 78\n2 79 79\n2 80 80\n2 81 81\n2 82 82\n2 83 83\n2 84 84\n2 85 85\n2 86 86\n2 87 87\n2 88 88\n2 89 89\n2 90 90\n2 91 91\n2 92 92\n2 93 93\n2 94 94\n2 95 95\n2 96 96\n2 97 97\n2 98 98\n2 99 99\n2 100 100\n3 101 101\n3 102 102\n3 103 103\n3 104 104\n3 105 105\n3 106 106\n3 107 107\n3 108 108\n3 109 109\n3 110 110\n3 111 111\n3 112 112\n3 113 113\n3 114 114\n3 115 115\n3 116 116\n3 117 117\n3 118 118\n3 119 119\n3 120 120\n3 121 121\n3 122 122\n3 123 123\n3 124 124\n3 125 125\n3 126 126\n3 127 127\n3 128 128\n3 129 129\n3 130 130\n3 131 131\n3 132 132\n3 133 133\n3 134 134\n3 135 135\n3 136 136\n3 137 137\n3 138 138\n3 139 139\n3 140 140\n3 141 141\n3 142 142\n3 143 143\n3 144 144\n3 145 145\n3 146 146\n3 147 147\n3 148 148\n3 149 149\n3 150 150\n3 151 151\n3 152 152\n3 153 153\n3 154 154\n3 155 155\n3 156 156\n3 157 157\n3 158 158\n3 159 159\n3 160 160\n3 161 161\n3 162 162\n3 163 163\n3 164 164\n3 165 165\n3 166 166\n3 167 167\n3 168 168\n3 169 169\n3 170 170\n3 171 171\n3 172 172\n3 173 173\n3 174 174\n3 175 175\n3 176 176\n3 177 177\n3 178 178\n3 179 179\n3 180 180\n3 181 181\n3 182 182\n3 183 183\n3 184 184\n3 185 185\n3 186 186\n3 187 187\n3 188 188\n3 189 189\n3 190 190\n3 191 191\n3 192 192\n3 193 193\n3 194 194\n3 195 195\n3 196 196\n3 197 197\n3 198 198\n3 199 199\n3 200 200\n3 201 201\n3 202 202\n3 203 203\n3 204 204\n3 205 205\n3 206 206\n3 207 207\n3 208 208\n3 209 209\n3 210 210\n3 211 211\n3 212 212\n3 213 213\n3 214 214\n3 215 215\n3 216 216\n3 217 217\n3 218 218\n3 219 219\n3 220 220\n3 221 221\n3 222 222\n3 223 223\n3 224 224\n3 225 225\n3 226 226\n3 227 227\n3 228 228\n3 229 229\n3 230 230\n3 231 231\n3 232 232\n3 233 233\n3 234 234\n3 235 235\n3 236 236\n3 237 237\n3 238 238\n3 239 239\n3 240 240\n3 241 241\n3 242 242\n3 243 243\n3 244 244\n3 245 245\n3 246 246\n3 247 247\n3 248 248\n3 249 249\n3 250 250\n3 251 251\n3 252 252\n3 253 253\n3 254 254\n3 255 255\n''') == 'Impossible'\nassert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n2 4 4\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n2 11 11\n2 12 12\n2 13 13\n2 14 14\n2 15 15\n2 16 16\n2 17 17\n2 18 18\n2 19 19\n2 20 20\n2 21 21\n2 22 22\n2 23 23\n2 24 24\n2 25 25\n2 26 26\n2 27 27\n2 28 28\n2 29 29\n2 30 30\n2 31 31\n2 32 32\n2 33 33\n2 34 34\n2 35 35\n2 36 36\n2 37 37\n2 38 38\n2 39 39\n2 40 40\n2 41 41\n2 42 42\n2 43 43\n2 44 44\n2 45 45\n2 46 46\n2 47 47\n2 48 48\n2 49 49\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport unittest\nfrom unittest import result\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n5 3 4''') == '3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '8'\nassert solution('''4\n10 9 8 7 6 5 4 3 2 1''') == '10'\nassert solution('''20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20''') == '41'\nassert solution('''20\n5 4 3 2 1''') == '9'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n5 3 4''') == '3'\nassert solution('''2\n1 2\n3 4\n5 6''') == '6'\nassert solution('''2\n5 4\n1 2 3 4 5''') == '6'\n'''\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n5 3 4''') == \"3\"\nassert solution('''2\n1 5 2''') == \"1\"\nassert solution('''6\n2 4 6 1 5 3''') == \"3\"\nassert solution('''2\n2 2 1''') == \"1\"\nassert solution('''7\n1 2 3 4 5 6 7''') == \"1\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 3 4\n''') == '3'\nassert solution('''4\n1 2 2 2\n''') == '0'\nassert solution('''5\n1 2 2 2 1\n''') == '1'\nassert solution('''6\n6 6 6 6 6\n''') == '5'\nassert solution('''7\n7 7 7 7 7\n''') == '7'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5 3 4') == '3'\nassert solution('10\\n10 7 9 7 9 7 9 7 9 7 9 7 9 7 9 7 9') == '21'\nassert solution('15\\n15 8 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4') == '34'\nassert solution('20\\n17 19 18 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '81'\nassert solution('10\\n10 7 9 7 9 7 9 7 9 7 9 7 9 7 9 7 9') == '21'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n3 4 5 3 2\n\"\"\") == \"\"\"3\"\"\"\nassert solution(\"\"\"3\n5 3 4 2\n\"\"\") == \"\"\"0\"\"\"\nassert solution(\"\"\"10\n9 3 7 1 7 6 3 4\n\"\"\") == \"\"\"10\"\"\"\nassert solution(\"\"\"1\n1\n\"\"\") == \"\"\"0\"\"\"\n\n\"\"\"\nStandard backtracking problem.\n1) We start at a position (x, y) = (1, 0)\n2) We want to reach a position (x, y) = (3, 0)\n3) We can move to a position (x, y) = (x + 1, y)\n4) We can move to a position (x, y) = (x + 1, y - 1)\n5) We can move to a position (x, y) = (x + 1, y + 1)\n6) We can move to a position (x, y) = (x + 1, y)\n7) We can't move at all, we're stuck in a loop\n\n\"\"\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n5 3 4') == '3'\nassert solution('4\\n1 2 3 4') == '5'\nassert solution('5\\n5 5 5 5 5') == '5'\nassert solution('6\\n1 1 1 1 1 1') == '10'\nassert solution('7\\n1 1 1 1 1 1 1') == '14'\n"
    },
    {
        "number": 3456,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 1\") == \"2\"\nassert solution(\"3\\n1 1 1\") == \"3\"\nassert solution(\"4\\n1 1 1 1\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"2\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('10 10 10') == '6'\nassert solution('2 100 2') == '4'\nassert solution('100 50 2') == '6'\nassert solution('6 8 1') == '8'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('2 3 2') == '8'\nassert solution('5 1 1') == '28'\nassert solution('2 1 2') == '1'\nassert solution('5 3 2') == '6'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''4 3 2\n    ''') == \"16\"\nassert solution(\n    '''2 1 1\n    ''') == \"2\"\nassert solution(\n    '''6 5 4\n    ''') == \"848\"\nprint(solution(input()))\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '2'\nassert solution('2 1 1') == '2'\nassert solution('1000 1 1') == '9'\nassert solution('100000 1 1') == '9'\nassert solution('1000000 1 1') == '9'\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '2'\n\"\"\""
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"2 1 1\") == \"2\"\nassert solution(\"2 1 1\") == \"2\"\nassert solution(\"2 1 1\") == \"2\"\nassert solution(\"2 1 1\") == \"2\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1 1''') == 2\n'''"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1 1') == 2\nassert solution('1 1 1') == 1\nassert solution('2 1 1') == 1\nassert solution('2 2 1') == 1\nassert solution('2 3 1') == 1\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n\n-----\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('1 1 1') == '6'\nassert solution('2 3 3') == '12'\nassert solution('3 3 3') == '243'\nassert solution('3 3 2') == '243'\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3 5''') == '7'\nassert solution('''1 1 3 5''') == '7'\nassert solution('''100 10 100 100 100''') == '0'\nassert solution('''10 10 10 10 10''') == '15'\nassert solution
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 5''') == '7'\nassert solution('''5\n6 7 8 9 10''') == '4'\nassert solution('''100\n8 6 5 4 3 2 1''') == '31'\nassert solution('''0\n0''') == '0'\nassert solution('''5\n7 3 2 1 4''') == '8'\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n3\n1 3 5\n''') == '7'\nassert solution('''\\\n6\n2 4 6 8 10 12\n''') == '21'\nassert solution('''\\\n7\n2 4 6 8 10 12 14 16\n''') == '34'\nassert solution('''\\\n20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n''') == '1'\nassert solution('''\\\n5\n2 4 6 8 10 12\n''') == '16'\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 5''') == \"7\"\nassert solution('''4\n1 3 5 9\n''') == \"9\"\nassert solution('''7\n2 4 5 7 11 13 17 19\n''') == \"19\"\nassert solution('''3\n1 1 1\n''') == \"1\"\nassert solution('''5\n1 1 1 1 1\n''') == \"0\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 5') == '7'\n\"\"\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"17\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"15\"\nassert solution(stdin) == \"25\"\nassert solution(stdin) == \"24\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 3 5\n''') == '7'\nassert solution('''\n10\n1 3 5 8 9 10 17 18 19\n''') == '22'\nassert solution('''\n5\n0 1 1 1 1\n''') == '8'\nassert solution('''\n10\n1 3 5 8 9 10 17 18 19\n''') == '22'\nassert solution('''\n1\n0\n''') == '0'\n'''\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n0\") == \"0\"\nassert solution(\"2\\n1 1\") == \"0\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\n\nprint(\"The test is complete\")\n"
    },
    {
        "number": 3458,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_) == \"7\"\n\"\"\"\n\nimport sys\n\nn = int(input())\nnumbers = list(map(int, input().split()))\n\nnumbers.sort()\n\nresult = numbers[0]\n\nfor i in range(1, n):\n    result = result ^ numbers[i]\n\nprint(result)\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution('fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == \"fred jetsons\\njohn jets\\nruth rockets\"\n\"\"\""
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\"\"\"\n) == \"\"\"fred jetsons\njohn jets\nruth rockets\"\"\"\nassert solution(\n\"\"\"8\n8\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n8\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\"\"\"\n) == \"\"\"Impossible\"\"\"\nassert solution(\n\"\"\"4\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\"\"\"\n) == \"\"\"fred jetsons\njohn jets\nruth rockets\"\"\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/test_solution') == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution('inputs/test_solution_2') == 'Impossible'\nassert solution('inputs/test_solution_3') =='mary jetsons\\nruth jetsons\\nruth rockets\\n'\nassert solution('inputs/test_solution_4') =='mary jetsons\\nruth jetsons\\nruth rockets\\n'\nassert solution('inputs/test_solution_5') == 'fred jetsons\\nmary jetsons\\nruth jetsons\\n'\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''1\n5\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n5\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == '''fred jetsons\njohn jets\nruth rockets\n\nfred jetsons\njohn jets\nruth rockets'''\n\nassert solution(\n'''1\n3\nfred dinosaur 2 jets\njohn rhinocerous 2 jets\nmary rhinocerous 2 jets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets\njohn rhinocerous 2 jets\nmary rhinocerous 2 jets\nruth platypus 1 rockets\n3\nfred dinosaur 2 jets\njohn rhinocerous 2 jets\nmary rhinocerous 2 jets\nruth platypus 1 rockets''') == '''Impossible\n\nfred dinosaur 2 jets\njohn rhinocerous 2 jets\nmary rhinocerous 2 jets\nruth platypus 1 rockets\n\nfred dinosaur 2 jets\njohn rhinocerous 2 jets\nmary rhinocerous 2 jets\nruth platypus 1 rockets'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a\\n') == 'Impossible'\nassert solution('a\\n2\\n') == 'Impossible'\nassert solution('a\\n2\\n2\\n') == 'Impossible'\nassert solution('a\\n2\\n2\\n2\\n') == 'Impossible'\nassert solution('a\\n2\\n2\\n2\\n2\\n') == 'Impossible'\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == 'fred jetsons\\njohn jets\\nruth rockets\\n'\n\nassert solution('''4\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == 'Impossible.\\n'\n\nassert solution('''3\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == 'fred jetsons\\njohn jets\\nruth rocket\\n'\n\nassert solution('''8\n8\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nteddy dragon 1 robots\njohannes mikel 1 jetsons\neddie draco 1 jetsons\nrudolph plunde 1 rockets\nteddy dragon 1 robots\njohannes mikel 1 jetsons\neddie draco 1 jetsons\nrudolph plunde 1 rockets\n''') == 'fred jetsons\\njohn jets\\nruth rocket\\neddie draco 1 jetsons\\njohannes mikel 1 jetsons\\n'\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution('''2\n1\njim myers 2 cats\njoe marys 2 cats\njoe bob myers 2 cats\njoe bob myers 2 cats\njoe bob myers 2 cats''') == 'Impossible'\nassert solution('''2\n7\n1\n1\n2\n1\n1\n3\n1\n2\n2\n3\n1\n3\n2\n2\n3\n2\n3\n2\n3\n3\n3\n3\n3\n3\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output\nprint(solution(stdin))\n'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution('''2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets''') == 'Impossible'\nassert solution('''2\n3\na b c\nd e f\ng h i\n1\nd a\n1\ng b\n2\n1\na d\n2\ng c\n3\nh e\n4\ni f\n''') == 'a d\\n1\\ng b\\n2\\na d\\n2\\ng c\\n3\\nh e\\n4\\ni f\\n'\n"
    },
    {
        "number": 3459,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n4\\nfred dinosaur 2 jetsons\\njohn rhinocerous 2 jetsons\\nmary rhinocerous 2 jetsons\\nruth platypus 1 rockets') == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution('2\\n4\\nfred dinosaur 2 jetsons\\njohn rhinocerous 2 jetsons\\nmary rhinocerous 2 jetsons\\nruth platypus 1 rockets') == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution('2\\n4\\nfred dinosaur 2 jetsons\\njohn rhinocerous 2 jetsons\\nmary rhinocerous 2 jetsons\\nruth platypus 1 rockets') == 'Impossible'\nassert solution('4\\n4\\nfred dinosaur 2 jetsons\\njohn rhinocerous 2 jetsons\\nmary rhinocerous 2 jetsons\\nruth platypus 1 rockets') == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution('4\\n4\\nfred dinosaur 2 jetsons\\njohn rhinocerous 2 jetsons\\nmary rhinocerous 2 jetsons\\nruth platypus 1 rockets') == 'Impossible'\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2 1'\nassert solution('3\\n4 3\\n-10 9\\n-2 3') == '1 2 1'\nassert solution('3\\n4 3\\n-10 9\\n-2 3\\n-2 3') == '1 2 1'\nassert solution('3\\n4 3\\n-10 9\\n-2 3\\n-2 3\\n-2 3') == '1 2 1'\nassert solution('3\\n4 3\\n-10 9\\n-2 3\\n-2 3\\n-2 3') == '1 2 1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n-10 9\\n-2 3\\n') == '1 2 1'\nassert solution('3\\n-10 9\\n-2 3\\n') == '1 2 1'\nassert solution('2\\n-10 9\\n-2 3\\n') == '2 1'\nassert solution('1\\n-10 9\\n-2 3\\n') == '1'\nassert solution('0\\n-10 9\\n-2 3\\n') == ''\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-10 9\\n-2 3\\n-10 9\\n-2 3\\n-10 9\\n-2 3\") == \"-2 -1 -1\"\nassert solution(\"3\\n-10 10\\n-2 3\\n-10 9\\n-2 3\\n-10 9\\n-2 3\") == \"-1\"\nassert solution(\"3\\n-10 10\\n-2 3\\n-10 9\\n-2 3\\n-10 9\\n-2 3\") == \"-1\"\nassert solution(\"3\\n-10 10\\n-2 3\\n-10 9\\n-2 3\\n-10 9\\n-2 3\") == \"-1\"\nassert solution(\"2\\n-10 10\\n-2 3\\n-10 9\\n-2 3\\n-10 9\\n-2 3\") == \"-1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n-10 9\n-2 3\n-1 2\n''') == '2'\nassert solution('''\n-10 9\n-2 3\n-5 6\n-7 8\n-9 10\n''') == '1 2 1'\nassert solution('''\n-10 9\n-2 3\n-5 6\n-7 8\n-9 10\n-1 2\n''') == '2'\nassert solution('''\n-10 9\n-2 3\n-5 6\n-7 8\n-9 10\n-1 2\n-4 7\n''') == '2 2 1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1 2 1\"\nassert solution(\"3\\n-2 3\\n-2 -2\\n3\") == \"1 2 1\"\n\"\"\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '1 2 1'\nassert solution('5\\n-10 9\\n-2 3\\n3 2\\n2 3\\n3 3\\n3 3\\n3 3\\n3 3') == '1 2 1'\nassert solution('7\\n-2 9\\n4 1\\n-3 5\\n5 1\\n-2 3\\n-2 3\\n-2 3') == '3 4 1 3 4 1 2'\nassert solution('8\\n-2 9\\n4 1\\n-3 5\\n5 1\\n-2 3\\n-2 3\\n-2 3\\n-2 3') == '4 1 3 4 4 1 2 3'\nassert solution('10\\n-2 9\\n4 1\\n-3 5\\n5 1\\n-2 3\\n-2 3\\n-2 3\\n-2 3\\n-2 3') == '5 1 3 4 4 1 2 3 3'\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"-10 9\\n-2 3\\n0 0\") == \"-10 9\\n-2 9\\n-2 9\\n0 0\\n0 0\"\nassert solution(\"4 3\\n1 1\\n1 3\\n3 3\\n3 1\") == \"1 1\\n1 1\\n1 1\\n0 0\\n0 0\"\nassert solution(\"-10 9\\n-2 3\\n0 0\") == \"-10 9\\n-2 9\\n-2 9\\n0 0\\n0 0\"\nassert solution(\"2 1\\n1 2\\n2 1\") == \"1 1\\n0 0\"\nassert solution(\"1 1\\n0 0\") == \"0 0\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"1 2 1\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"1 2 1 1\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"1 1 2 2 1 1\"\nassert solution(open(\"test_input_4.txt\", \"r\").read()) == \"1 1 1 2 1 1 1\"\nassert solution(open(\"test_input_5.txt\", \"r\").read()) == \"1 1 1 1 1 2 1 1 1 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n-10 9\\n-2 3\\n\") == \"1 2 1\"\nassert solution(\"5\\n5 3\\n1 1\\n3 3\\n2 4\\n4 1\\n\") == \"1 1 0 0 0\"\nassert solution(\"10\\n2 2\\n5 5\\n1 1\\n4 4\\n7 7\\n6 6\\n5 5\\n4 4\\n3 3\\n2 2\\n1 1\\n\") == \"1 1 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"1\\n1 1\\n\") == \"0\"\nassert solution(\"5\\n2 2\\n5 5\\n1 1\\n4 4\\n7 7\\n6 6\\n5 5\\n4 4\\n3 3\\n2 2\\n1 1\\n\") == \"1 1 0 0 0 0 0 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 2 1\""
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.125\"\n\"\"\""
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1 7') == 2.125\nassert solution('2\\n3 2 3') == 2.10714\nassert solution('3\\n5 1 4\\n6 10 10') == 2.10714\nassert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == 2.125\nassert solution('5\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n9 10 10') == 2.10714\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n7\\n3\\n2\\n3\\n5\\n1\\n4\\n10\\n10') == 2.125\nassert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == 2.125\nassert solution('5\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == 2.125\nassert solution('6\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == 2.125\nassert solution('7\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == 2.125\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1 7\") == \"2.125\"\nassert solution(\"1\\n1 1 7\") == \"2.125\"\nassert solution(\"1\\n1 1 7\") == \"2.125\"\nassert solution(\"1\\n1 1 7\") == \"2.125\"\nassert solution(\"1\\n1 1 7\") == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 7') == '2.125'\nassert solution('2 3 4') == '0.489'\nassert solution('3 3 5') == '0.918'\nassert solution('4 2 2') == '0.945'\nassert solution('5 1 4') == '0.833'\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.125\"\nassert solution(stdin) == \"2.10714\"\nassert solution(stdin) == \"2.0\"\nassert solution(stdin) == \"0.0\"\nassert solution(stdin) == \"0.0\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1 1 7') == '2.125'\nassert solution('3\\n1 1 7\\n2 2 3\\n5 1 4') == '2.125'\nassert solution('3\\n3 2 3\\n5 1 4') == '2.125'\nassert solution('6\\n1 1 7\\n2 2 3\\n5 1 4\\n10 10 10') == '2.125'\nassert solution('5\\n1 1 7\\n2 2 3\\n5 1 4') == '2.125'\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('*.*', 4,\n\"main.c\\na.out\\nreadme\\nyacc\") =='main.c\\na.out\\nreadme\\nyacc'\nassert solution('*', 4,\n\"main.c\\na.out\\nreadme\\nyacc\") =='main.c\\na.out\\nreadme\\nyacc'\nassert solution('a*', 1,\n\"abc\") == 'abc'\nassert solution('a*', 4,\n\"a\\na\\na\\na\\n\") == 'a\\na\\na\\na'\nassert solution('a*', 4,\n\"a\\na\\na\\na\") == 'a\\na\\na\\na'\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"*\", \"4\", \"main.c\\na.out\\nreadme\\nyacc\\n\") == \"main.c\\na.out\\nreadme\\nyacc\"\nassert solution(\"*.c\", \"4\", \"main.c\\na.out\\nreadme\\nyacc\\n\") == \"main.c\\na.out\\nreadme\\nyacc\"\nassert solution(\"*.txt\", \"4\", \"main.c\\na.out\\nreadme\\nyacc\\n\") == \"\"\nassert solution(\"*.c\", \"4\", \"main.c\\na.out\\nreadme\\nyacc\\n\") == \"\"\nassert solution(\"c\", \"4\", \"main.c\\na.out\\nreadme\\nyacc\\n\") == \"main.c\\na.out\\nreadme\\nyacc\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('*.*') == ['main.c','a.out']\nassert solution('*.c') == ['main.c','a.out']\nassert solution('a.*') == ['a.out']\nassert solution('a.c') == ['a.out']\nassert solution('a.c*') == ['a.out','a.c']\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('*.*') =='main.c\\na.out\\nreadme\\nyacc'\nassert solution('*') =='main.c\\na.out\\nreadme\\nyacc'\nassert solution('a.c') == 'a.c'\nassert solution('a.c*') == 'a.c'\nassert solution('*.c') =='main.c\\na.c'\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('main.c') =='main.c'\nassert solution('a.out') == 'a.out'\nassert solution('readme') =='readme'\nassert solution('readme.txt') =='readme.txt'\nassert solution('*.*') =='main.c a.out readme.txt'\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''*.*'''\n    '''4'''\n    '''main.c\n    a.out\n    readme\n    yacc''') == '''main.c\na.out\nreadme\nyacc'''\n\nassert solution(\n    '''abc*'''\n    '''2'''\n    '''abc\n    xyz''') == '''abc\nxyz'''\n\nassert solution(\n    '''abc*'''\n    '''3'''\n    '''abc\n    xyz\n    mno''') == '''abc\nxyz\nmno'''\n\nassert solution(\n    '''abc*'''\n    '''3'''\n    '''abc\n    xyz\n    mno.txt''') == '''abc\nxyz\nmno.txt'''\n\nassert solution(\n    '''abc*'''\n    '''3'''\n    '''abc\n    xyz\n    mno.txt''') == '''abc\nxyz\nmno.txt'''"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('*') == ''\nassert solution('abc') == ''\nassert solution('abc*') == 'abc'\nassert solution('a*') == 'a'\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('main.c') =='main.c'\nassert solution('a.out') == 'a.out'\nassert solution('readme') =='readme'\nassert solution('test') == 'test'\nassert solution('*') == '*'\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''*.*''') == ''\nassert solution('''*.*\n4\nmain.c\na.out\nreadme\nyacc''') =='main.c\\na.out\\nreadme\\nyacc'\n\"\"\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''*.*''') == '''main.c\na.out\nreadme\nyacc'''\nassert solution('''*.*\n1''') == '''main.c'''\nassert solution('''*.*\n3''') == '''main.c\na.out\nreadme'''\nassert solution('''*.*\n2\nmain.c\na.out\nreadme\nyacc''') == '''main.c\na.out\nreadme'''\nassert solution('''*.*\n2\nmain.c\na.out\nreadme\nyacc''') == '''main.c\na.out\nreadme'''\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n0.500000''') == '0.500000'\n'''"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0.500000') == '0.500000'\nassert solution('0.1000000') == '0.510000'\nassert solution('0.060000') == '0.290000'\nassert solution('0.040000') == '0.150000'\nassert solution('0.020000') == '0.050000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0.500000\") == \"0.500000\"\nassert solution(\"1 1\") == \"0.500000\"\nassert solution(\"0.000000\") == \"0.000000\"\nassert solution(\"0.1 0.1\") == \"0.2\"\nassert solution(\"0.2 0.1\") == \"0.2\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\"\nassert solution(\"1 1\\n0.500001\") == \"0.500000\"\nassert solution(\"1 1\\n0.499999\") == \"0.499999\"\nassert solution(\"1 1\\n0.1\") == \"0.1\"\nassert solution(\"1 1\\n0.900001\") == \"0.900001\"\n\"\"\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0.5\n0."
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2 1\n0.500000\n0.500000\n\"\"\") == '0.500000'\nassert solution(\n\"\"\"\n4 1\n0.500000\n0.500000\n0.500000\n0.500000\n\"\"\") == '0.142857'\nassert solution(\n\"\"\"\n1 1\n0.500000\n\"\"\") == '0.500000'\nassert solution(\n\"\"\"\n1 1\n0.5\n\"\"\") == '0.5'\nassert solution(\n\"\"\"\n2 2\n0.5\n0.5\n\"\"\") == '1.0'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1\n0.500000''') == '0.500000'\nassert solution('''1 2\n0.050000''') == '0.050000'\nassert solution('''1 3\n0.000000''') == '0.000000'\nassert solution('''1 4\n0.0000000''') == '0.0000000'\nassert solution('''1 6\n0.0000000''') == '0.0000000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1\n0.500000''') == '0.500000'\nassert solution('''1 1\n0.1''') == '0.500000'\nassert solution('''2 2\n0.1\n0.2''') == '0.494998'\nassert solution('''2 2\n0.1\n0.2\n0.3\n0.4\n0.5''') == '0.494998'\nassert solution('''4 4\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9''') == '0.694998'\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0.5\"\nassert solution(\"2 2\") == \"0.5\"\nassert solution(\"2 0\") == \"0.5\"\nassert solution(\"3 3\") == \"0.5\"\nassert solution(\"0 0\") == \"0.5\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1\n0.500000''') == '0.500000'\nassert solution('''1 10\n0.6000000\n0.400001\n0.400001\n0.300001\n0.300001\n0.200001\n0.200001\n0.1000000\n0.1000000''') == '0.1000000'\nassert solution('''2 2\n0.800001\n0.300001\n0.300001\n0.300001\n0.300001\n0.300001\n0.300001\n0.300001''') == '0.300001'\nassert solution('''10 10\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001''') == '0.000000000001'\nassert solution('''10 10\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001\n0.000000000001''') == '0.000000000001'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"10 49.9\") == \"0.0\"\nassert solution(\"-10 49.9\") == \"-0.0\"\nassert solution(\"0 49.8\") == \"0.0\"\nassert solution(\"0 49.7\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(049.9) == '0.0'\nassert solution(0.9) == '0.0'\nassert solution(49.9) == '0.0'\nassert solution(0.9) == '0.0'\nassert solution(50.9) == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 100.0\") == \"0.0\"\nassert solution(\"0 50.0\") == \"0.0\"\nassert solution(\"0 5.0\") == \"0.0\"\nassert solution(\"0 5.1\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 49.9') == '0.0'\nassert solution('2 49.9') == '0.0'\nassert solution('3 49.9') == '0.0'\nassert solution('4 49.9') == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('1 49.9') == '0.0'\nassert solution('1 49.0') == '0.0'\nassert solution('1 49.99') == '0.0'\nassert solution('1 49.999') == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 49.9') == 0.0\nassert solution('2 18.5') == 0.0\nassert solution('50 17.1') == 0.0\nassert solution('35 10.1') == 0.0\nassert solution('0 48.6') == 0.0\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('20 49.9') == '0.0'\nassert solution('20 10.9') == '0.0'\nassert solution('20 0.9') == '0.0'\nassert solution('20 100.9') == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"0 49.9\"\n) == \"0.0\"\n\nassert solution(\n\"1 49.9\"\n) == \"0.0\"\n\nassert solution(\n\"100 49.9\"\n) == \"0.0\"\n\nassert solution(\n\"0 49.9\"\n) == \"0.0\"\n\nassert solution(\n\"1 49.9\"\n) == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\nexamples = [\n    (stdin, stdout),\n]\n\"\"\"\nimport sys\nfrom math import ceil\n\n__author__ = 'lau.wenbo'"
    },
    {
        "number": 3464,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 50.0\") == \"0.0\"\nassert solution(\"10 48.8\") == \"0.0\"\nassert solution(\"0 49.8\") == \"0.0\"\nassert solution(\"10 48.8\") == \"0.0\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n1 2\n2 3\n3 1\n4 1'''\n) == '4 1\\n2 1\\n3 2\\n1 3'\nassert solution(\n'''4\n1 2\n2 3\n3 4\n4 1'''\n) == '4 1\\n2 1\\n3 4\\n1 2'\nassert solution(\n'''3\n1 2\n2 3\n3 4\n4 1'''\n) == '1 2\\n2 1\\n3 4\\n4 1'\nassert solution(\n'''5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n1 3\n3 2\n2 4\n2 5\n5 1\n1 4\n4 2\n1 5\n4 5'''\n) == '1 2\\n2 1\\n3 2\\n3 4\\n3 5\\n4 5'\nassert solution(\n'''6\n1 2\n2 3\n3 4\n4 5\n5 6\n1 2\n2 3\n1 3\n3 2\n2 4\n2 5\n5 1\n1 4\n4 2\n1 5\n4 5'''\n) == '1 2\\n2 1\\n3 2\\n3 4\\n3 5\\n4 5\\n5 6'\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n3\\n3\\n4') == '1 3\\n3 1\\n4 1\\n'\nassert solution('2\\n1 2\\n1 3\\n3 1\\n4 1\\n4 2') == '1 2\\n2 3\\n3 1\\n1 4\\n4 1\\n4 2\\n'\nassert solution('2\\n1 2\\n3 1\\n1 3\\n2 1') == '1 2\\n1 3\\n2 1\\n'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5') == '1 2\\n3 4\\n4 2\\n2 1\\n1 3\\n'\nassert solution('3\\n1 2\\n3 1\\n1 2\\n3 1\\n2 1') == '1 2\\n3 1\\n1 3\\n2 1\\n2 3\\n'\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '1 2'\nassert solution('2\\n1') == '2 1'\nassert solution('2\\n3') == '3 1'\nassert solution('3\\n1') == '3 1'\nassert solution('3\\n2') == '1 2'\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3'\nassert solution('2 3\\n1 2') == '1 2'\nassert solution('1 2\\n3 1\\n2 1') == '1 2'\nassert solution('3 2\\n2 1\\n1 3') == '3 2\\n2 1'\nassert solution('3 2\\n2 1\\n1 3\\n1 3') == '3 2\\n2 1\\n1 3'\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input.txt') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('input2.txt') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('input3.txt') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('input4.txt') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('input5.txt') == '4 1\\n2 1\\n3 2\\n1 3\\n'\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('2\\n3\\n4\\n5\\n') == '4 1\\n5 3\\n2 1\\n1 3\\n'\nassert solution('5\\n1 2\\n3 4\\n4 1\\n3 4\\n') == '3 2\\n1 3\\n1 3\\n2 1\\n4 1\\n2 1\\n4 1\\n1 3\\n'\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3'\nassert solution('8\\n1 2\\n2 3\\n3 1\\n4 1\\n5 2\\n6 3\\n7 4\\n8 1') == '8 1\\n2 1\\n3 2\\n4 1\\n5 2\\n6 3\\n7 4'\nassert solution('10\\n1 2\\n2 3\\n3 4\\n4 1\\n5 3\\n6 4\\n7 3\\n8 5\\n9 6\\n10 1') == '10 1\\n2 1\\n3 2\\n4 1\\n5 3\\n6 4\\n7 3\\n8 5\\n9 6'\n\"\"\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 2\") == \"\"\nassert solution(\"3 2\") == \"\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 2 3 3 4 4 4 4 4\") == \"1 2\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2\n2 3\n3 1\n4 1\n''') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('''4\n2 3\n2 4\n1 2\n1 3\n''') == '4 1\\n2 1\\n2 3\\n1 2\\n1 3\\n'\nassert solution('''4\n1 3\n1 3\n2 3\n2 4\n''') == '4 1\\n2 1\\n2 3\\n1 2\\n1 3\\n'\nassert solution('''4\n1 2\n2 3\n3 4\n1 3\n2 1\n3 4\n2 4\n2 1\n''') == '4 1\\n1 2\\n2 1\\n2 3\\n1 2\\n1 3\\n2 3\\n'\nassert solution('''5\n1 2\n1 3\n2 3\n3 4\n4 5\n''') == '4 1\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n'''\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''1 1\n1 1\n''') == 'forever'\nassert solution('''4 0\n2 1 2 1\n''') == 'forever'\nassert solution('''4 0\n1 1 1 1\n''') == 'forever'\nassert solution('''8 0\n1 1 1 1 1 1 1 1\n''') == 'forever'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''5 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '4'\nassert solution('''5 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '4'\nassert solution('''5 5\n2 1 6 3 5 3\n1 2 5 3 5\n1 1 1 1 1\n''') == 'forever'\nassert solution('''5 5\n2 1 6 3 5 3\n1 2 5 3 5\n1 1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n3\\n1\\n1\\n1\\n1') == '3'\nassert solution('2\\n5\\n1\\n1\\n1\\n1') == 'forever'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == '3'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == \"1\"\n\nassert solution(\n'''\n6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == \"forever\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'forever'\n\"\"\"\n\n\"\"\"\nNext, I did the same for the other person. I defined a greedy algorithm for my cake making business. For each day I took out the sweet with the highest value and added the sweet of the day to my cake.\n\nI then calculated the difference between the target number of sweets and my current number of sweets and if this difference is positive I didn't have enough sweets and I must buy more sweets.\n\nIf the difference is negative I have enough sweets and I can eat more sweets. I use an array to keep track of the number of sweets I have. At each day I pop out the sweet with the highest value and add it to my cake.\n\nMy target is to have enough sweets at the end of the day. The tricky part is determining how many sweets I can eat in between, so I keep track of the number of sweets I have in between the day.\n\n\"\"\""
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\n\nassert solution('''6 5\n2 1 6 3 5 3\n2 1 6 3 5\n''') == 'forever'\n\nassert solution('''6 5\n1 2 5 3 5 3\n1 2 5 3 5\n''') == '2'\n\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\n'''\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n') == 'forever'\nassert solution('6 5\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n') == 'forever'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n') == '1'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == 'forever'\nassert solution('''10 9\n1 6 7 9 6 7\n7 5 5 5 5\n''') == '2'\nassert solution('''10 9\n1 6 7 9 6 7\n7 5 5 5 5\n''') == '2'\nassert solution('''10 9\n1 6 7 9 6 7\n7 5 5 5 5\n''') == 'forever'\n"
    },
    {
        "number": 3466,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == 'forever'\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\nassert solution('''6 5\n2 1 6 3 5 3\n2 2 5 3 5\n''') == '0'\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '0'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 1 2 2 2') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 1 2 2 2\\n0 1 1 2 2 2') == '3'\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 1 2 2 2\\n0 1 1 2 2 2\\n0 1 1 2 2 2') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 1 2 2 2\\n0 1 1 2 2 2\\n0 1 1 2 2 2\\n0 1 1 2 2 2') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\nassert stdin == \"\"\"2 1 10\n0 1 1 2 6\n\"\"\"\n\"\"\"\nNotes:\n\n1. First I was thinking of the approach as a greedy, but it is easier to come up with an intuitive solution.\n2. Let's assume the total number of tram stops is k.\n3. The first step is to figure out what the total time is up until each tram stops.\n4. The second step is to figure out what the time is up until each tram stops.\n5. After this we can say which tram line starts first and what time is up until this line ends.\n6. After this we can say which tram line departs first and what time is up until this line ends.\n7. We can assume the line is not changing at all until we reach the stop and then can say what is the time up until that stop.\n8. Let's define the time up until the stop as t. After each stop we must decide if the tram line departs or not. If it does, t = t - p. If it doesn't, then t = t + d. \n9. Let's define the time up until the stop as t. After each stop we must decide if the tram line departs or not. If it does, t = t - p. If it doesn't, then t = t + d. \n10. Repeat step 9 until we reach the meeting or we can't arrive at the meeting on time.\n11. The answer is t + m\n\n\"\"\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_solution.txt\").read()) == \"3\"\nassert solution(open(\"input03.txt\").read()) == \"4\"\nassert solution(open(\"input04.txt\").read()) == \"4\"\nassert solution(open(\"input05.txt\").read()) == \"3\"\nassert solution(open(\"input06.txt\").read()) == \"3\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1 1 2 6') == '3'\nassert solution('1 2 1 2 3') == 'impossible'\nassert solution('1 2 1 2 3') == 'impossible'\nassert solution('1 1 1 2 3') == '3'\nassert solution('1 1 1 2 3') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 1 1 2 3\n0 1 2 2 3 4\n0 1 2 1 2 3\n0 1 1 1 2 2\n0 1 1 2 1 1\n0 1 2 1 2 1\n0 1 1 1 1 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 2\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 2\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1 1 1 1\n0 1 1 1 2 1\n0 1 1 2 1 1\n0 1 1 2 2 1\n0 1 1 2 2 2\n0 1 1"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1 10\") == \"3\"\nassert solution(\"0 1 1 2 6\") == \"3\"\nassert solution(\"0 1 1 2 6\") == \"3\"\nassert solution(\"0 1 1 2 6\") == \"3\"\nassert solution(\"2 1 10\") == \"3\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 1 2 3 5') == 'impossible'\n\"\"\"\n\nimport sys\n\nclass Trams:\n    def __init__(self, num_stops, num_trams, start_time):\n        self.num_stops = num_stops\n        self.num_trams = num_trams\n        self.start_time = start_time\n        self.stops = [0] * num_stops\n        self.trams = [0] * num_trams\n        self.nxt_trams = [0] * num_trams\n        self.cur_time = start_time\n        self.cur_stop = 0\n        self.cur_tram = 0\n    def change_tram(self):\n        self.cur_time = self.cur_time + self.trams[self.cur_tram][3]\n        self.trams[self.cur_tram][3] = self.trams[self.cur_tram][3] + self.trams[self.cur_tram][4]\n        self.cur_stop = self.cur_stop + self.trams[self.cur_tram][2]\n        self.cur_tram = self.nxt_trams[self.cur_tram]\n    def set_time(self, time):\n        self.cur_time = time\n    def get_time(self):\n        return self.cur_time\n    def get_stop(self):\n        return self.cur_stop\n    def get_tram(self):\n        return self.cur_tram\n    def get_start_time(self):\n        return self.start_time"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1 10\") == \"3\"\nassert solution(\"2 1 10\\n0 1 1 2 6\\n0 2 1 2 4\\n0 2 1 1 5\\n0 1 1 1 1\\n0 1 1 2 3\\n1 1 1 1 1\") == \"3\"\nassert solution(\"2 1 10\\n0 1 1 1 1\\n0 1 1 2 3\\n0 2 1 2 4\\n0 2 1 1 5\\n0 1 1 1 1\\n0 1 1 2 3\\n1 1 1 1 1\") == \"3\"\nassert solution(\"3 1 1000\\n1 1 1 1 1\\n1 1 1 2 3\\n1 1 1 1 1\\n1 1 1 1 1\\n0 2 1 1 5\\n0 2 1 1 5\\n0 2 1 2 4\\n0 2 1 1 5\\n0 2 1 1 5\\n0 2 1 2 4\\n1 1 1 1 1\") == \"3\"\nassert solution(\"2 1 10\\n0 1 1 1 1\\n0 1 1 2 3\\n0 2 1 2 4\\n0 2 1 1 5\\n0 1 1 1 1\\n0 1 1 2 3\\n1 1 1 1 1\\n0 2 1 1 5\\n0 2 1 1 5\\n0 2 1 2 4\\n0 2 1 1 5\\n0 2 1 1 5\\n0 2 1 2 4\\n1 1 1 1 1\") == \"3\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 10') == '3'\nassert solution('0 1 1 2 6') == '3'\nassert solution('0 1 1 2 6') == '3'\nassert solution('0 1 1 2 6') == '3'\nassert solution('0 1 1 2 6') == '3'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n100 1') == '2\\n1 2'\nassert solution('2\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('2\\n1 1\\n99 1') == '2\\n1 2'\nassert solution('2\\n99 1\\n1 99\\n1 99') == '2\\n1 2'\nassert solution('2\\n99 1\\n1 99\\n99 1') == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\nassert solution(\"1 100\\n99 1\\n1 99\") == \"1\"\nassert solution(\"2 100\\n99 1\\n1 99\\n1 98\") == \"1\\n1 2\"\nassert solution(\"1 100\\n99 1\\n1 99\\n1 98\") == \"1\\n1 2\"\nassert solution(\"2 100\\n99 1\\n1 99\\n1 98\\n1 97\") == \"1\\n1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 100\n99 1\n1 99''') == '2\\n1 2'\nassert solution('''2 100\n99 1\n1 99''') == '2\\n1 2'\nassert solution('''2 100\n99 1\n99 1''') == '2\\n1'\nassert solution('''2 100\n99 1\n99 1\n99 1''') == '2\\n1'\nassert solution('''1 10\n2 10\n100 10\n5 10\n3 10\n2 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('2\\n100\\n99 1\\n1 99\\n2 9\\n6 9') == '2\\n1 2'\nassert solution('2\\n100\\n99 1\\n1 99\\n2 9\\n6 9\\n3 9') == '2\\n1 2'\nassert solution('2\\n100\\n99 1\\n1 99\\n2 9\\n6 9\\n3 9\\n4 9') == '2\\n1 2'\nassert solution('2\\n100\\n99 1\\n1 99\\n2 9\\n6 9\\n3 9\\n4 9\\n5 9') == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_data/sample.txt\").read()) == '2\\n1 2'\nassert solution(open(\"test_data/small.txt\").read()) == '0'\nassert solution(open(\"test_data/large.txt\").read()) == '2'\nassert solution(open(\"test_data/intelligent.txt\").read()) == '2\\n1 2 3'\nassert solution(open(\"test_data/harder.txt\").read()) == '2\\n1 2 3'\nprint(solution(open(\"test_data/large.txt\").read()))\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('2 100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('2 100\\n99 1\\n1 99\\n1 100') == '2\\n1 2'\nassert solution('2 100\\n99 1\\n1 99\\n1 100\\n1 99') == '2\\n1 2'\nassert solution('2 100\\n99 1\\n1 99\\n1 100\\n1 99\\n1 100') == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('2 1') == '2'\nassert solution('2 1') == '2'\nassert solution('2 10') == '2'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\nH\nT\n0.5\n'''\n) == '0.5'\n\nassert solution(\n'''\nH\nH\n0.5\n'''\n) == '0'\n\nassert solution(\n'''\nH\nH\n0.5\n'''\n) == '1'\n\nassert solution(\n'''\nT\nT\n0.5\n'''\n) == '0'\n\nassert solution(\n'''\nT\nH\n0.5\n'''\n) == '1'"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('H') == '0.5'\nassert solution('TT') == '0.5'\nassert solution('HTH') == '0.5'\nassert solution('HTHH') == '0.0'\nassert solution('HTTT') == '0.0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('H') == 'H'\nassert solution('HTH') == 'H'\nassert solution('HT') == 'T'\nassert solution('HTH') == 'H'\nassert solution('TTTT') == 'T'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('H') == 'H'\nassert solution('HT') == 'H'\nassert solution('HT') == 'H'\nassert solution('HTH') == 'H'\nassert solution('HT') == 'H'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nH\\n0.5') == '0'\nassert solution('H\\nH\\n0.1') == '0'\nassert solution('H\\nH\\n0.01') == '0'\nassert solution('H\\nH\\n0.001') == '0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''H''') == '''0'''\nassert solution('''HT''') == '''1'''\nassert solution('''HT''') == '''1'''\nassert solution('''HT''') == '''0.5'''\nassert solution('''HTH''') == '''0.5'''\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('TT') == 0\nassert solution('TTTT') == 0\nassert solution('TTTTTT') == 1\nassert solution('TTTTTTTT') == 0\n"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0.5'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.5\"\n\n\"\""
    },
    {
        "number": 3469,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('H') == 'T'\nassert solution('HTH') == 'H'\nassert solution('HHHT') == 'T'\nassert solution('HHHTHTHH') == 'H'\nassert solution('TTTTTTTT') == 'T'\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '8\\n1 3 5 7 9 11 13 15'\nassert solution('4') == '8\\n1 3 5 7 9 11 13'\nassert solution('5') == '8\\n1 3 5 7 9 11'\nassert solution('6') == '8\\n1 3 5 7 9'\nassert solution('7') == '8\\n1 3 5 7'\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n3\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n3\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\") == \"8\\n1 3 5 7 9 11 13 15\\n\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(3) == 8\nassert solution(4) == 16\nassert solution(5) == 52\nassert solution(6) == 184\nassert solution(7) == 282\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"6\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"2\") == \"0\\n\"\n\"\"\""
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('0') == ''\nassert solution('2') == ''\nassert solution('3') == ''\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n5\n5\n5\n5\n2 2 5\n2 3 5\n2 4 5\n2 5 4\n3 4 5\n3 5 4\n3 6 5\n3 7 5\n4 2 5\n4 3 5\n4 4 5\n4 5 3\n4 6 5\n4 7 5\n4 8 5\n5 2 5\n5 3 5\n5 4 5\n5 5 4\n5 6 5\n5 7 5\n5 8 5\n6 2 5\n6 3 5\n6 4 5\n6 5 4\n6 6 5\n6 7 5\n6 8 5\n7 2 5\n7 3 5\n7 4 5\n7 5 4\n7 6 5\n7 7 5\n7 8 5\n8 2 5\n8 3 5\n8 4 5\n8 5 4\n8 6 5\n8 7 5\n8 8 5\n9 2 5\n9 3 5\n9 4 5\n9 5 4\n9 6 5\n9 7 5\n9 8 5\n10 2 5\n10 3 5\n10 4 5\n10 5 4\n10 6 5\n10 7 5\n10 8 5\n11 2 5\n11 3 5\n11 4 5\n11 5 4\n11 6 5\n11 7 5\n11 8 5\n12 2 5\n12 3 5\n12 4 5\n12 5 4\n12 6 5\n12 7 5\n12 8 5\n13 2 5\n13 3 5\n13 4 5\n13 5 4\n13 6 5\n13 7 5\n13 8 5\n14 2 5\n14 3 5\n14 4 5\n14 5 4\n14 6 5\n14 7 5\n14 8 5\n15 2 5\n15 3 5\n15 4 5\n15 5 4\n15 6 5\n15 7 5\n15 8 5\n16 2 5\n16 3 5\n16 4 5\n16 5 4\n16 6 5\n16 7 5\n16 8 5\n17 2 5\n17 3 5\n17 4 5\n17 5 4\n17 6 5\n17 7 5\n17 8 5\n18 2 5\n18 3 5\n18 4 5\n18 5 4\n18 6 5\n18 7 5\n18 8 5\n19 2 5\n19 3 5\n19 4 5\n19 5 4\n19 6 5\n19 7 5\n19 8 5\n20 2 5\n20 3 5\n20 4 5\n20 5 4\n20 6 5\n20 7 5\n20 8 5\n21 2 5\n21 3 5\n21 4 5\n21 5 4\n21 6 5\n21 7 5\n21 8 5\n22 2 5\n22 3 5\n22 4 5\n22 5 4\n22 6 5\n22 7 5\n22 8 5\n23 2 5\n23 3 5\n23 4 5\n23 5 4\n23 6 5\n23 7 5\n23 8 5\n24 2 5\n24 3 5\n24 4 5\n24 5 4\n24 6 5\n24 7 5\n24 8 5\n25 2 5\n25 3 5\n25 4 5\n25 5 4\n25 6 5\n25 7 5\n25 8 5\n26 2 5\n26 3 5\n26 4 5\n26 5 4\n26 6 5\n26 7 5\n26 8 5\n27 2 5\n27 3 5\n27 4 5\n27 5 4\n27 6 5\n27 7 5\n27 8 5\n28 2 5\n28 3 5\n28 4 5\n28 5 4\n28 6 5\n28 7 5\n28 8 5\n29 2 5\n29 3 5\n29 4 5\n29 5 4\n29 6 5\n29 7 5\n29 8 5\n30 2 5\n30 3 5\n30 4 5\n30 5 4\n30 6 5\n30 7 5\n30 8 5\n''') == '''8\n1 3 5 7 9 11 13 15\n'''"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n''') == '8\\n1 3 5 7 9 11 13 15'\nassert solution('''10\n''') == '8\\n1 3 5 7 9 11 13 15 17 19 22 25'\nassert solution('''14\n''') == '8\\n1 3 5 7 9 11 13 15 17 19 22 25 29 32'\nassert solution('''16\n''') == '8\\n1 3 5 7 9 11 13 15 17 19 22 25 29 32 34 35 36 37 38 39'\nassert solution('''25\n''') == '8\\n1 3 5 7 9 11 13 15 17 19 22 25 29 32 34 35 36 37 38 39 41 42 43 44 45 46 47 48 49'\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '8'\nassert solution('''6''') == '8'\nassert solution('''20''') == '6'\nassert solution('''40''') == '5'\nassert solution('''100''') == '23'\n'''\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '8'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3470,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n2\\n3\\n\") == \"\"\nassert solution(\"3\\n2\\n3\\n\") == \"\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n\") == \"\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5''') == '3\\n1\\n0\\n'\nassert solution('''5\n1 2 3 4 5\n3\n2 2\n2 5\n1 5\n1 6\n''') == '5\\n1\\n1\\n'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n''') == '1\\n'\nassert solution('''100\n12 28 64 64 24 28 64 64 24 28 64\n7\n22 22\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '3\\n1\\n0\\n'\n\nassert solution(\n'''\n3\n1 3 5\n2 2\n2 5\n1 5\n''') == '3\\n1\\n0\\n'\n\nassert solution(\n'''\n2\n1 1\n2 2\n''') == '1\\n0\\n'\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 5 7') == '3'\nassert solution('1 3 5 7') == '3'\nassert solution('1 3 5 7') == '3'\nassert solution('1 3 5 7') == '3'\nassert solution('1 3 5 7') == '3'\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 5 7\") == \"3\"\nassert solution(\"1 3 5 7\") == \"3\"\nassert solution(\"2 3 4\") == \"2\"\nassert solution(\"2 3 4\") == \"2\"\nassert solution(\"2 3 4\") == \"2\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"6\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input\", \"r\").read()) == \"3\\n1\\n0\\n\"\n\nprint(solution(open(\"input\", \"r\").read()))\n\"\"\"\n\nfrom collections import deque\nfrom typing import List\n\nfrom shared.util import timeit\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n1\\n2\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"2\\n1\") == \"2\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 3 5 7\n3\n2 2\n2 5\n1 5''') == '3\\n1\\n0'\nassert solution('''1 3 5 7\n3\n2 2\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1 5\n2 3\n1 4\n2 4\n2 5\n1"
    },
    {
        "number": 3471,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '''3\n1\n0\n'''\n\nassert solution(\n'''6\n1 1\n1 1\n2 2\n2 3\n2 3\n3 3\n3 4\n''') == '''3\n1\n0\n'''\n\nassert solution(\n'''4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '''3\n1\n0\n'''\n\nassert solution(\n'''6\n1 1\n1 1\n2 2\n2 3\n2 3\n3 3\n3 4\n''') == '''3\n1\n0\n'''\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"1 1 -2 0\") == \"0\"\nassert solution(\"1 1 2 2\") == \"1\"\nassert solution(\"1 1 2 3\") == \"2\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1\n1 1 -2 0''') == '0'\nassert solution('''2 1\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1 -2 0''') == '0'\nassert solution('''1 1 -2 0''') == '0'\nassert solution('''1 1 -2 0''') == '0'\nassert solution('''1 1 -2 0''') == '0'\nassert solution('''1 1 -2 0''') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 0\n\n\"\"\"\n\n\"\"\"\nTry different division in x-direction and y-direction\n\n\"\"\"\n\nx1, y1, x2, y2 = map(int, stdin.split(\"\\n\")[0].split(\" \"))\nwidth = abs(x2 - x1)\nheight = abs(y2 - y1)\n\ncounter = 0\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0''') == '0'\nassert solution('''1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0''') == '1'\nassert solution('''1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0\n1 1"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1\n1 1 -2 0''') == 0\nassert solution('''3 1\n1 1 -2 0\n1 1 -1 -1\n2 1 -1 0\n2 1 -1 -1\n2 1 0 -1\n3 1 -1 1\n3 1 -1 -1\n3 1 0 1''') == 8\nassert solution('''2 1\n1 1 -2 0\n2 1 -1 0''') == 4\nassert solution('''3 1\n1 1 -2 0\n1 1 -1 -1\n2 1 -1 0\n2 1 -1 -1\n2 1 0 -1\n3 1 -1 1\n3 1 -1 -1\n3 1 0 1''') == 10\nassert solution('''5 2\n1 1 -2 0\n1 1 -1 -1\n2 1 -1 0\n2 1 -1 -1\n2 1 0 -1\n2 1 -1 1\n3 1 -1 -1\n3 1 -1 0\n3 1 0 1''') == 13\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1 -2 0''') == 0\nassert solution('''2 1\n1 1 -2 0''') == 1\nassert solution('''2 1\n1 1 -2 0\n1 1 -2 0''') == 1\nassert solution('''2 2\n1 1 -2 0\n1 1 -2 0''') == 2\nassert solution('''3 1\n1 1 -2 0\n1 1 -2 0\n1 1 -2 0''') == 2\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0'\nassert solution('2 1\\n1 1 0 0\\n1 -1 0 0') == '1'\nassert solution('2 1\\n1 1 -2 0\\n1 -1 0 0') == '1'\nassert solution('2 1\\n1 1 -2 0\\n1 -1 0 0\\n1 -2 0 0') == '1'\nassert solution('2 1\\n1 1 -2 0\\n1 -1 0 0\\n1 -2 0 0\\n1 -3 0 0') == '1'\n"
    },
    {
        "number": 3472,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1\\n1 1 -2 0\\n') == '0'\nassert solution('2 1\\n1 1 2 0\\n') == '1'\nassert solution('2 1\\n1 1 2 1\\n') == '1'\nassert solution('2 1\\n1 1 -2 1\\n') == '1'\nassert solution('2 1\\n1 1 2 1\\n') == '1'\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194'\n\nassert solution('''1\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '0'\n\nassert solution('''1\n0\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '0'\n\nassert solution('''1\n0\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '0'\n\nassert solution('''1\n0\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '0'"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194'\n\nassert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n1 1 1\n1 1 2\n1 1 4\n1 1 7\n1 1 10\n1 1 13\n1 1 16\n1 1 19\n1 1 22\n1 1 25\n1 1 28\n1 1 31\n1 1 34\n1 1 37\n1 1 40\n1 1 43\n1 1 46\n1 1 49\n1 1 52\n1 1 55\n1 1 58\n1 1 61\n1 1 64\n1 1 67\n1 1 70\n1 1 73\n1 1 76\n1 1 79\n1 1 82\n1 1 85\n1 1 88\n1 1 91\n1 1 94\n1 1 97\n1 1 100''') == '189'\n\nassert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n1 1 1\n1 1 2\n1 1 4\n1 1 7\n1 1 10\n1 1 13\n1 1 16\n1 1 19\n1 1 22\n1 1 25\n1 1 28\n1 1 31\n1 1 34\n1 1 37\n1 1 40\n1 1 43\n1 1 46\n1 1 49\n1 1 52\n1 1 55\n1 1 58\n1 1 61\n1 1 64\n1 1 67\n1 1 70\n1 1 73\n1 1 76\n1 1 79\n1 1 82\n1 1 85\n1 1 88\n1 1 91\n1 1 94\n1 1 97\n1 1 100''') == '193'\n\nassert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n1 1 1\n1 1 2\n1 1 4\n1 1 7\n1 1 10\n1 1 13\n1 1 16\n1 1 19\n1 1 22\n1 1 25\n1 1 28\n1 1 31\n1 1 34\n1 1 37\n1 1 40\n1 1 43\n1 1 46\n1 1 49\n1 1 52\n1 1 55\n1 1 58\n1 1 61\n1 1 64\n1 1 67\n1 1 70\n1 1 73\n1 1 76\n1 1 79\n1 1 82\n1 1 85\n1 1 88\n1 1 91\n1 1 94\n1 1 97\n1 1 100''') == '192'\n\nassert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n1 1 1\n1 1 2\n1 1 4\n1 1 7\n1 1 10\n1 1 13\n1 1 16\n1 1 19\n1 1 22\n1 1 25\n1 1 28\n1 1 31\n1 1 34\n1 1 37\n1 1 40\n1 1 43\n1 1 46\n1 1 49\n1 1 52\n1 1 55\n1 1 58\n1 1 61\n1 1 64\n1 1 67\n1 1 70\n1 1 73\n1 1 76\n1 1 79\n1 1 82\n1 1 85\n1 1 88\n1 1 91\n1 1 94\n1 1 97\n1 1 100\n1 1 103\n1 1 106\n1 1 109\n1 1 112\n1 1 115\n1 1 118\n1 1 121\n1 1 124\n1 1 127\n1 1 130\n1 1 133\n1 1 136\n1 1 139\n1 1 142\n1 1 145\n1 1 148\n1 1 151\n1 1 154\n1 1 157\n1 1 160\n1 1 163\n1 1 166\n1 1 169\n1 1 172\n1 1 175\n1 1 178\n1 1 181\n1 1 184\n1 1 187\n1 1 190\n1 1 193\n1 1 196\n1 1 199\n1 1 202\n1 1 205\n1 1 208\n1 1 211\n1 1 214\n1 1 217\n1 1 220\n1 1 223\n1 1 226\n1 1 229\n1 1 232\n1 1 235\n1 1 238\n1 1 241\n1 1 244\n1 1 247\n1 1 250\n1 1 253\n1 1 256\n1 1 259\n1 1 262\n1 1 265\n1 1 268\n1 1 271\n1 1 274\n1 1 277\n1 1 280\n1 1 283\n1 1 286\n1 1 289\n1 1 292\n1 1 295\n1 1 298\n1 1 301\n1 1 304\n1 1 307\n1 1 310\n1 1 313\n1 1 316\n1 1 319\n1 1 322\n1 1 325\n1 1 328\n1 1 331\n1 1 334\n1 1 337\n1 1 340\n1 1 343\n1 1 346\n1 1 349\n1 1 352\n1 1 355\n1 1 358\n1 1 361\n1 1 364\n1 1 367\n1 1 370\n1 1 373\n1 1 376\n1 1 379\n1 1 382\n1 1 385\n1 1 388\n1 1 391\n1 1 394\n1 1 397\n1 1 400\n1 1 403\n1 1 406\n1 1 409\n1 1 412\n1 1 415\n1 1 418\n1 1 421\n1 1 424\n1 1 427\n1 1 430\n1 1 433\n1 1 436\n1 1 439\n1 1 442\n1 1 445\n1 1 448\n1 1 451\n1 1 454\n1 1 457\n1 1 460\n1 1 463\n1 1 466\n1 1 469\n1 1 472\n1 1 475\n1 1 478\n1 1"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n2\\n\") == \"\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"3\\n5\\n2019 10 17\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"215\\n2019 10 25\\n2020 10 30\"\nassert solution(\"3\\n5\\n2019 10 17\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"215\\n2019 10 25\\n2020 10 30\"\nassert solution(\"3\\n5\\n2019 10 17\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"215\\n2019 10 25\\n2020 10 30\"\nassert solution(\"3\\n5\\n2019 10 17\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"215\\n2019 10 25\\n2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194\\n2019 10 25\\n2020 10 30'\nassert solution('''3\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '206\\n2019 10 28\\n2020 10 31'\n'''\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\") == \"194\\n2019 10 25\\n2020 10 30\"\n\nassert solution(\n\"\"\"\n2\n5\n2019 10 17\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\") == \"194\"\n\nassert solution(\n\"\"\"\n2\n5\n2019 10 16\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\") == \"194\"\n\nassert solution(\n\"\"\"\n3\n6\n2019 10 17\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\") == \"534\"\n\nassert solution(\n\"\"\"\n3\n6\n2019 10 22\n2019 10 16\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\") == \"534\""
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\"\"\") == \"194\"\nassert solution(\"\"\"1\n1\n1\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n19\n19\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n31\n31\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n\"\"\") == \"405\"\nassert solution(\"\"\"1\n1\n1\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n19\n19\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n31\n31\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n\"\"\") == \"1934\"\nassert solution(\"\"\"1\n1\n1\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n19\n19\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n31\n31\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n\"\"\") == \"5434\"\nassert solution(\"\"\"1\n1\n1\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n19\n19\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n31\n31\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n\"\"\") == \"5765\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194'\nassert solution('''2\n0\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '194'\nassert solution('''3\n5\n2019 10 19\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '-18'\nassert solution('''3\n0\n2019 10 19\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '-18'\nassert solution('''3\n5\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '-18'\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194\\n2019 10 25\\n2020 10 30'\n"
    },
    {
        "number": 3473,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_data/sample.txt\", \"r\").read()) == \"194\"\nassert solution(open(\"test_data/sample2.txt\", \"r\").read()) == \"4368\"\nassert solution(open(\"test_data/sample3.txt\", \"r\").read()) == \"4368\"\nassert solution(open(\"test_data/sample4.txt\", \"r\").read()) == \"4368\"\nassert solution(open(\"test_data/sample5.txt\", \"r\").read()) == \"4368\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"0 10 10 10 10 0\\n\"\n    \"5 10 10 5 10 0\\n\"\n    \"6 10 10 10 10 0\\n\"\n) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\"\nassert solution(\n    \"0 10 10 10 10 0\\n\"\n    \"5 10 10 5 10 0\\n\"\n    \"6 10 10 10 10 0\\n\"\n) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\"\nassert solution(\n    \"0 10 10 10 10 0\\n\"\n    \"5 10 10 5 10 0\\n\"\n    \"6 10 10 10 10 0\\n\"\n) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\"\nassert solution(\n    \"0 10 10 10 10 0\\n\"\n    \"5 10 10 5 10 0\\n\"\n    \"6 10 10 10 10 0\\n\"\n) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\"\nassert solution(\n    \"0 10 10 10 10 0\\n\"\n    \"5 10 10 5 10 0\\n\"\n    \"6 10 10 10 10 0\\n\"\n) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == '0 -5\\nnegative-infinity -5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity -5\\n5 12.5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == '0 -5\\nnegative-infinity -5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == '0 -5\\nnegative-infinity -5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1\n5\n10\n15\n20\n30\n40\n50\n0\n1"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == '5 12.5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity -5'\nassert solution('5 10 10 10 10 0') == '5 12.5'\nassert solution('5 10 10 5 10 0') == '5 12.5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(test_input) == test_output\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == '5 12.5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity -5'\n'''\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3474,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\n'''\nimport sys\nsys.stdin = open('test1.txt')\nfor line in sys.stdin:\n    if line.strip():\n        x1,y1,x2,y2,x3,y3 = map(float,line.split())\n        result = solution(line)\n        print(result)\n'''"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"data/05.txt\").read()))\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n'''"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n'''\n\n\nimport sys"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n\nassert solution('''\n3 1\n0 1000\n1 -1000\n2 5000\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n\nassert solution('''\n6 2\n0 1000\n1 -1000\n2 5000\n3 -5000\n4 -5000\n5 -1000000\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n5 1\n0 0\n1 0\n2 0\n3 0\n4 0\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == '2'\nassert solution('''6 1\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0''') == 'IMPOSSIBLE'\nassert solution('''2 3\n1 1\n2 2\n3 3''') == '2'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '2'\nassert solution('''2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3475,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == \"2\"\n\nassert solution('''2 2\n50 0\n100 0\n''') == \"IMPOSSIBLE\"\n\nassert solution('''2 2\n50 0\n100 0\n''') == \"IMPOSSIBLE\"\n\nassert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == \"2\"\n\nassert solution('''1 1\n100 0\n''') == \"1\""
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n'''\n'''\n-----Working-----\nrow: 3\ncol: 4\n\ni: 1\nj: 1\n\nrow: 3\ncol: 4\n\ni: 1\nj: 2\n\nrow: 3\ncol: 4\n\ni: 2\nj: 1\n\nrow: 3\ncol: 4\n\ni: 2\nj: 2\n\nrow: 3\ncol: 4\n\ni: 2\nj: 3\n\nrow: 3\ncol: 4\n\ni: 3\nj: 1\n\nrow: 3\ncol: 4\n\ni: 3\nj: 2\n\nrow: 3\ncol: 4\n\ni: 3\nj: 3\n\nrow: 3\ncol: 4\n\ni: 4\nj: 1\n\nrow: 3\ncol: 4\n\ni: 4\nj: 2\n\nrow: 3\ncol: 4\n\ni: 4\nj: 3\n\nrow: 3\ncol: 4\n\ni: 4\nj: 4\n\nrow: 3\ncol: 4\n\ni: 5\nj: 1\n\nrow: 3\ncol: 4\n\ni: 5\nj: 2\n\nrow: 3\ncol: 4\n\ni: 5\nj: 3\n\nrow: 3\ncol: 4\n\ni: 5\nj: 4\n\nrow: 3\ncol: 4\n\ni: 5\nj: 5\n\nrow: 3\ncol: 4\n\ni: 6\nj: 1\n\nrow: 3\ncol: 4\n\ni: 6\nj: 2\n\nrow: 3\ncol: 4\n\ni: 6\nj: 3\n\nrow: 3\ncol: 4\n\ni: 6\nj: 4\n\nrow: 3\ncol: 4\n\ni: 6\nj: 5\n\nrow: 3\ncol: 4\n\ni: 7\nj: 1\n\nrow: 3\ncol: 4\n\ni: 7\nj: 2\n\nrow: 3\ncol: 4\n\ni: 7\nj: 3\n\nrow: 3\ncol: 4\n\ni: 7\nj: 4\n\nrow: 3\ncol: 4\n\ni: 7\nj: 5\n\nrow: 3\ncol: 4\n\ni: 8\nj: 1\n\nrow: 3\ncol: 4\n\ni: 8\nj: 2\n\nrow: 3\ncol: 4\n\ni: 8\nj: 3\n\nrow: 3\ncol: 4\n\ni: 8\nj: 4\n\nrow: 3\ncol: 4\n\ni: 8\nj: 5\n\nrow: 3\ncol: 4\n\ni: 9\nj: 1\n\nrow: 3\ncol: 4\n\ni: 9\nj: 2\n\nrow: 3\ncol: 4\n\ni: 9\nj: 3\n\nrow: 3\ncol: 4\n\ni: 9\nj: 4\n\nrow: 3\ncol: 4\n\ni: 9\nj: 5\n\nrow: 3\ncol: 4\n\ni: 10\nj: 1\n\nrow: 3\ncol: 4\n\ni: 10\nj: 2\n\nrow: 3\ncol: 4\n\ni: 10\nj: 3\n\nrow: 3\ncol: 4\n\ni: 10\nj: 4\n\nrow: 3\ncol: 4\n\ni: 10\nj: 5\n\nrow: 3\ncol: 4\n\ni: 11\nj: 1\n\nrow: 3\ncol: 4\n\ni: 11\nj: 2\n\nrow: 3\ncol: 4\n\ni: 11\nj: 3\n\nrow: 3\ncol: 4\n\ni: 11\nj: 4\n\nrow: 3\ncol: 4\n\ni: 11\nj: 5\n\nrow: 3\ncol: 4\n\ni: 12\nj: 1\n\nrow: 3\ncol: 4\n\ni: 12\nj: 2\n\nrow: 3\ncol: 4\n\ni: 12\nj: 3\n\nrow: 3\ncol: 4\n\ni: 12\nj: 4\n\nrow: 3\ncol: 4\n\ni: 12\nj: 5\n\nrow: 3\ncol: 4\n\ni: 13\nj: 1\n\nrow: 3\ncol: 4\n\ni: 13\nj: 2\n\nrow: 3\ncol: 4\n\ni: 13\nj: 3\n\nrow: 3\ncol: 4\n\ni: 13\nj: 4\n\nrow: 3\ncol: 4\n\ni: 13\nj: 5\n\nrow: 3\ncol: 4\n\ni: 14\nj: 1\n\nrow: 3\ncol: 4\n\ni: 14\nj: 2\n\nrow: 3\ncol: 4\n\ni: 14\nj: 3\n\nrow: 3\ncol: 4\n\ni: 14\nj: 4\n\nrow: 3\ncol: 4\n\ni: 14\nj"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 1\\n2 1\\n') == '3\\n2'\nassert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n') == '345 2'\nassert solution('3 4\\n-8 0 -4 -10\\n11 4 0 100\\n') == '345 2'\nassert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n') == '345 2'\nassert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n') == '345 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == (0, 0)\nassert solution('3 4') == (345, 0)\nassert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == (345, 2)\nassert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n-1 -2 -1') == (344, 3)\nassert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n-1 -2 -1\\n-1 -2 -1') == (345, 6)\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"345 2\\nrotS 2 1\\negR 2\\negR 2\\nrotS 1 1\\negR 1\\negS 1\"\n\"\"\""
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open('test_rotS.in', 'r').read()) == \"345 2\\nrotS 2 1\\n\"\nassert solution(open('test_rotR.in', 'r').read()) == \"345 2\\nrotR 2 1\\n\"\nassert solution(open('test_negR.in', 'r').read()) == \"345 2\\nrotR 2 1\\nnegR 2\\n\"\nassert solution(open('test_negS.in', 'r').read()) == \"345 2\\nrotS 2 1\\nnegS 1\\n\"\nassert solution(open('test_negS.in', 'r').read()) == \"345 2\\nrotS 2 1\\nnegS 1\\n\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('-3 3') == None\nassert solution('1 2 3') == None\nassert solution('1 2 3 4') == None\nassert solution('1 2 3 4 5 6 7 8 9 10') == None\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n-2\\n5\\n200') == '345\\n2'\nassert solution('1\\n-2\\n5\\n200\\n-8\\n0\\n-4\\n-10') == '345\\n2'\nassert solution('1\\n-2\\n5\\n200\\n-8\\n0\\n-4\\n-10\\n11\\n4\\n0\\n100') == '345\\n2'\nassert solution('2\\n1\\n5\\n200\\n-8\\n0\\n-4\\n-10\\n11\\n4\\n0\\n100') == '345\\n2'\nassert solution('3\\n1\\n5\\n200\\n-8\\n0\\n-4\\n-10\\n11\\n4\\n0\\n100\\n-1\\n2\\n5\\n100\\n1\\n2\\n5\\n100\\n1\\n2\\n5\\n100\\n1\\n2\\n5\\n100\\n-1\\n2\\n5\\n100\\n-1\\n2\\n5\\n100') == '345\\n6'\n"
    },
    {
        "number": 3476,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == \"345 2\\nrotS 2 1\\negR 2\"\n\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == \"345 1\\nrotR 1 1\\nrotS 1 1\\negS 1 1\"\n\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('3 3') == '0.5'\nassert solution('3 4') == '0.5'\nassert solution('3 5') == '0.5'\nassert solution('3 6') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n3 1 1\n''') == '0.5'\nassert solution('''2 4\n2 2 2\n2 3 4\n2 2 3\n2 4 2\n2 4 3\n''') == '0.5'\nassert solution('''3 4\n3 4 4 4\n3 2 2 1\n3 2 4 2\n3 3 4 2\n3 2 3 3\n3 1 2 1\n3 1 4 1\n3 3 4 1\n3 2 1 3\n3 4 3 2\n''') == '0.01'\nassert solution('''2 3\n2 2 3\n2 3 2\n1 2 3\n2 3 1\n2 1 2\n2 1 2\n2 3 2\n1 1 2\n2 2 2\n''') == '0.01'\nassert solution('''2 3\n2 2 3\n2 3 2\n2 2 1\n1 1 2\n2 2 2\n2 2 3\n2 1 2\n2 1 2\n2 3 2\n1 1 2\n2 2 2\n''') == '0.1'\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(test) == expected\nprint(solution(stdin))\n\"\"\"\n\n\"\"\"\n1:1\n2:2.5\n\"\"\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2\\n3 1 1\\n') == '0.5'\nassert solution('4 3\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '0.125'\n'''\n\nfrom functools import reduce"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n3 1 1''') == '0.5'\nassert solution('''3 2\n3 1 1''') == '0.5'\nassert solution('''3 2\n3 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n2 1 1''') == '0.125'\nassert solution('''6 4\n1 2 3 4 5 6\n2 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '0.0625'\nassert solution('''6 4\n1 2 3 4 5 6\n2 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '0.03125'\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.5\"\nassert solution(stdin) == \"0.5\"\nassert solution(stdin) == \"0.5\"\nassert solution(stdin) == \"0.5\"\nassert solution(stdin) == \"0.5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('1 1') == '0'\nassert solution('1 2') == '0'\nassert solution('1 1 1') == '0'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n3 1 1\\n3 1 1\\n1 1') == '0.5'\nassert solution('4 3\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n3 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0.5'\n\"\"\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3 2\n3 1 1\n''') == '0.5'\n\nassert solution(\n'''\n4 4\n1 1 1 1\n2 1 2\n3 2 3\n4 2 2\n5 2 2\n6 2 3\n''') == '0.5'\n\nassert solution(\n'''\n5 4\n1 1 1 1 1\n2 1 2\n3 2 3\n4 2 2\n5 2 2\n6 2 3\n''') == '0.5'\n\nassert solution(\n'''\n6 4\n1 1 1 1 1 1\n2 1 2\n3 2 3\n4 2 2\n5 2 2\n6 2 3\n''') == '0.5'\n\nassert solution(\n'''\n7 4\n1 1 1 1 1 1 1\n2 1 2\n3 2 3\n4 2 2\n5 2 2\n6 2 3\n7 2 2\n8 2 3\n''') == '0.5'"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11') == '1 4 5'\nassert solution('2 3 4 5 6 7 8 9 10 11') == '2 6 7'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '1 4 5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '1 4 5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '1 4 5'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n2') == 'impossible'\nassert solution('1\\n1\\n1\\n2') == 'impossible'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n--- Sample Case 2 ---\n4 5\n1 4\n1 3\n2 2\n2 3\n2 4\n3 4\nSample Output:\n2 3 4\n2 4\n'''\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"1 2\\n1 2\\n1 2\\n2 1\\n\") == \"impossible\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"2 2\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 2\\n1 2\\n1 2\\n1 2\\n\") == \"impossible\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == 'impossible'\nassert solution('''9 6\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 4 5'\nassert solution('''9 8\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 4 5'\nassert solution('''4 9\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 8\n2 9\n3 7\n3 8\n3 9\n3 10\n4 9\n4 10\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n8 12\n9 10\n9 11\n9 12\n9 13\n10 11\n10 12\n10 13\n10 14\n11 12\n11 13\n11 14\n11 15\n12 13\n12 14\n12 15\n12 16\n13 14\n13 15\n13 16\n13 17\n14 15\n14 16\n14 17\n14 18\n15 16\n15 17\n15 18\n15 19\n16 17\n16 18\n16 19\n16 20\n17 18\n17 19\n17 20\n17 21\n18 19\n18 20\n18 21\n18 22\n19 20\n19 21\n19 22\n19 23\n20 21\n20 22\n20 23\n20 24\n21 22\n21 23\n21 24\n21 25\n22 23\n22 24\n22 25\n22 26\n23 24\n23 25\n23 26\n23 27\n24 25\n24 26\n24 27\n24 28\n25 26\n25 27\n25 28\n25 29\n26 27\n26 28\n26 29\n26 30\n27 28\n27 29\n27 30\n27 31\n28 29\n28 30\n28 31\n28 32\n29 30\n29 31\n29 32\n29 33\n30 31\n30 32\n30 33\n30 34\n31 32\n31 33\n31 34\n31 35\n32 33\n32 34\n32 35\n32 36\n33 34\n33 35\n33 36\n33 37\n34 35\n34 36\n34 37\n34 38\n35 36\n35 37\n35 38\n35 39\n36 37\n36 38\n36 39\n36 40\n37 38\n37 39\n37 40\n37 41\n38 39\n38 40\n38 41\n38 42\n39 40\n39 41\n39 42\n39 43\n40 41\n40 42\n40 43\n40 44\n41 42\n41 43\n41 44\n41 45\n42 43\n42 44\n42 45\n42 46\n43 44\n43 45\n43 46\n43 47\n44 45\n44 46\n44 47\n44 48\n45 46\n45 47\n45 48\n45 49\n46 47\n46 48\n46 49\n46 50\n47 48\n47 49\n47 50\n47 51\n48 49\n48 50\n48 51\n48 52\n49 50\n49 51\n49 52\n49 53\n50 51\n50 52\n50 53\n50 54\n51 52\n51 53\n51 54\n51 55\n52 53\n52 54\n52 55\n52 56\n53 54\n53 55\n53 56\n53 57\n54 55\n54 56\n54 57\n54 58\n55 56\n55 57\n55 58\n55 59\n56 57\n56 58\n56 59\n56 60\n57 58\n57 59\n57 60\n57 61\n58 59\n58 60\n58 61\n58 62\n59 60\n59 61\n59 62\n59 63\n60 61\n60 62\n60 63\n60 64\n61 62\n61 63\n61 64\n61 65\n62 63\n62 64\n62 65\n62 66\n63 64\n63 65\n63 66\n63 67\n64 65\n64 66\n64 67\n64 68\n65 66\n65 67\n65 68\n65 69\n66 67\n66 68\n66 69\n66 70\n67 68\n67 69\n67 70\n67 71\n68 69\n68 70\n68 71\n68 72\n69 70\n69 71\n69 72\n69 73\n70 71\n70 72\n70 73\n70 74\n71 72\n71 73\n71 74\n71 75\n72 73\n72 74\n72 75\n72 76\n73 74\n73 75\n73 76\n73 77\n74 75\n74 76\n74 77\n74 78\n75 76\n75 77\n75 78\n75 79\n76 77\n76 78\n76 79\n76 80\n77 78\n77 79\n77 80\n77 81\n78 79\n78 80\n78 81\n78 82\n79 80\n79 81\n79 82\n79 83\n80 81\n80 82\n80 83\n80 84\n81 82\n81 83\n81 84\n81 85\n82 83\n82 84\n82 85\n82 86\n83 84\n83 85\n83 86\n83 87\n84 85\n84 86\n84 87\n84 88\n85 86\n85 87\n85 88\n85 89\n86 87\n86 88\n86 89\n86 90\n87 88\n87 89\n87 90\n87 91\n88 89\n88 90\n88 91\n88 92\n89 90\n89 91\n89 92\n89 93\n90 91\n90 92\n90 93\n90 94\n91 92\n91 93\n91 94\n91 95\n92 93\n92 94\n92 95\n92 96\n93 94\n93 95\n93 96\n93 97\n94 95\n94 96\n94 97\n94 98\n95 96\n95 97\n95 98\n95 99\n96 97\n96 98\n96 99\n96 100\n97 98\n97 99\n97 100\n97 101\n98 99\n98 100\n98 101\n98 102\n99 100\n99 101\n99 102\n99 103\n100 101\n100 102\n100 103\n100 104\n101 103\n101 104\n101 105\n102 103\n102 104\n102 105\n102 106\n103 104\n103 105\n103 106\n103 107\n104 105\n104 106\n104 107\n104 108\n105 106\n105 107\n105 108\n105 109\n106 107\n106 108\n106 109\n106 110\n107 108\n107 109\n107 110\n107 111\n108 109\n108 110\n108"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 10\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == 'impossible'\nassert solution('1 5\\n6 1') == 'impossible'\nassert solution('3 10\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5 6 7'\nassert solution('1 1\\n1 2\\n1 3\\n1 4') == '1 1 1 2 2 3 4'\nassert solution('1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6') == 'impossible'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '1 4 5\\n2 6 7'\nassert solution(\n'''5 5\n1 2\n3 4\n5 6\n7 8\n9 10\n4 9\n2 5\n4 8\n3 7\n7 10\n4 1\n3 10\n4 2\n3 5\n2 7\n1 9\n8 10\n3 1\n4 1\n2 2\n3 3\n1 4\n4 5\n1 2\n5 9''') == 'impossible'\nassert solution(\n'''1 1\n1 2''') == 'impossible'\nassert solution(\n'''1 1\n1 2\n1 2''') == 'impossible'\nassert solution(\n'''1 1\n1 2\n2 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2''') == 'impossible'\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3478,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\"\"\"\n) == \"\"\"1 4 5\"\"\"\n\nassert solution(\n\"\"\"9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\"\"\"\n) == \"\"\"Impossible\"\"\"\n\nassert solution(\n\"\"\"3 5\n1 4\n1 2\n1 3\n3 4\n2 3\n2 4\n2 1\n3 4\n2 1\n1 4\n3 4\"\"\"\n) == \"\"\"1 4 2\"\"\"\n\nassert solution(\n\"\"\"6 5\n1 4\n1 2\n1 3\n3 4\n2 3\n2 4\n2 1\n3 4\n2 1\n1 4\n3 4\"\"\"\n) == \"\"\"Impossible\"\"\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '13500'\nassert solution(stdin) == '18000'\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '13500'\nassert solution(\n'''2 10\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000''') == '80000000'\nassert solution(\n'''11 1\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '12000'\nassert solution(\n'''11 1\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '12000'\nassert solution(\n'''11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''1 2\n1\n2''') == '1'\nassert solution(\n'''2 3\n2\n3\n1\n3\n2\n1\n3\n2\n1\n3\n2\n1''') == '6'\nassert solution(\n'''10 4\n9000\n2\n3\n1\n4\n2\n1\n3\n2\n1\n3\n2\n1\n4\n2\n1\n3\n2\n1\n3''') == '20'\nassert solution(\n'''3 10\n4\n1\n6\n1\n9\n9\n1\n2\n2\n1\n2\n3\n2\n3\n1\n3\n2\n1\n3''') == '22'\nassert solution(\n'''3 10\n3\n1\n2\n3\n1\n2\n1\n3\n2\n1\n2\n1\n1\n2\n1\n3\n1''') == '4'\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '13500'\nassert solution('''10 11\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000''') == '90000'\nassert solution('''10 12\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000\n10000''') == '90000'\nassert solution('''10 12\n5000\n5000\n5000\n5000\n5000\n5000\n5000\n5000\n5000\n5000''') == '90000'\nassert solution('''10 12\n0\n5000\n5000\n5000\n5000\n5000\n5000\n5000\n5000\n5000''') == '90000'\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\nassert solution('''\n9 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '10500'\nassert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '28000'\nassert solution('''\n8 2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '10'\nassert solution('''\n8 2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '0'\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '13500'"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(0).read()) == '13500'\nprint(solution(open(0).read()))\n\"\"\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '13500'\nassert solution('''6 7\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '15100'\nassert solution('''8 8\n0\n8\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '52000'\nassert solution('''8 8\n0\n8\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '55000'\nassert solution('''8 8\n0\n8\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '60000'\n"
    },
    {
        "number": 3479,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '2 16\\n'\n    'Hot cross buns! = Hot cross buns! =\\n'\n    '4 4 4 4 4 4 4 4\\n'\n    'One a pen- ny, Two a pen- ny, Hot cross buns! ='\n) == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n\nassert solution(\n    '3 3\\n'\n    'ABC, MJJ, CAB, GED, JIJ, JCD\\n'\n    '2 2 2 4 4 4 4\\n'\n    'ABC, MJJ, CAB, GED, JIJ, JCD'\n) == 'ABC_=______MJJ_=_______CAB_=_______GED_=_______JIJ_=______JCD_=_______\\n'\n\nassert solution(\n    '2 5\\n'\n    'ABCDE, JIJ, ABC, JIJ, CDE\\n'\n    '0 0 0 0 0 4\\n'\n    'ABCDE, JIJ, ABC, JIJ, CDE'\n) == 'ABCDE_=______IJJ_=______CDE_=______\\n'\n\nassert solution(\n    '3 6\\n'\n    'AB, AD, CB, BC, CB, BC\\n'\n    '1 2 2 2 2 2 2\\n'\n    'AB, AD, CB, BC, CB, BC'\n) == 'AB_=______AD_=______CB_=______BC_=______CB_=______\\n'\n\nassert solution(\n    '3 4\\n'\n    'AB, CD\\n'\n    '0 0 2\\n'\n    'AB, CD'\n) == 'AB_=______CD_=\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 4 16\\n4 4 4 4 4 4 4\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == \"\"\"Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 10\\nHot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == \\\n'''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n'''\n) == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''1\n1 2 10\n2 3 22\n3 4 40\n4 5 50\n5 6 60\n6 7 70\n7 8 80\n8 9 90\n9 10 100\n10 11 110\n11 12 120\n12 13 130\n13 14 140\n14 15 150\n15 16 160\n15 17 170\n16 17 180\n16 18 190\n16 19 200\n17 19 210\n17 20 220\n17 21 230\n17 22 240\n18 19 240\n18 20 250\n18 21 260\n18 22 270\n18 23 280\n18 24 290\n18 25 300\n18 26 310\n18 27 320\n18 28 330\n18 29 340\n18 30 350\n18 31 360\n18 32 370\n18 33 380\n18 34 390\n18 35 400\n18 36 410\n18 37 420\n18 38 430\n18 39 440\n18 40 450\n18 41 460\n18 42 470\n18 43 480\n18 44 490\n18 45 500\n18 46 510\n18 47 520\n18 48 530\n18 49 540\n18 50 550\n18 51 560\n18 52 570\n18 53 580\n18 54 590\n18 55 600\n18 56 610\n18 57 620\n18 58 630\n18 59 640\n18 60 650\n18 61 670\n18 62 680\n18 63 690\n18 64 700\n18 65 710\n18 66 720\n18 67 730\n18 68 740\n18 69 750\n18 70 760\n18 71 770\n18 72 780\n18 73 790\n18 74 800\n18 75 810\n18 76 820\n18 77 830\n18 78 840\n18 79 850\n18 80 860\n18 81 870\n18 82 880\n18 83 890\n18 84 900\n18 85 910\n18 86 920\n18 87 930\n18 88 940\n18 89 950\n18 90 960\n18 91 970\n18 92 980\n18 93 990\n18 94 1000\n18 95 1010\n18 96 1020\n18 97 1030\n18 98 1040\n18 99 1050\n18 100 1060\n18 101 1070\n18 102 1080\n18 103 1090\n18 104 1100\n18 105 1110\n18 106 1120\n18 107 1130\n18 108 1140\n18 109 1150\n18 110 1160\n18 111 1170\n18 112 1180\n18 113 1190\n18 114 1200\n18 115 1210\n18 116 1220\n18 117 1230\n18 118 1240\n18 119 1250\n18 120 1260\n18 121 1270\n18 122 1280\n18 123 1290\n18 124 1300\n18 125 1310\n18 126 1320\n18 127 1330\n18 128 1340\n18 129 1350\n18 130 1360\n18 131 1370\n18 132 1380\n18 133 1390\n18 134 1400\n18 135 1410\n18 136 1420\n18 137 1430\n18 138 1440\n18 139 1450\n18 140 1460\n18 141 1470\n18 142 1480\n18 143 1490\n18 144 1500\n18 145 1510\n18 146 1520\n18 147 1530\n18 148 1540\n18 149 1550\n18 150 1560\n18 151 1570\n18 152 1580\n18 153 1590\n18 154 1600\n18 155 1610\n18 156 1620\n18 157 1630\n18 158 1640\n18 159 1650\n18 160 1660\n18 161 1670\n18 162 1680\n18 163 1690\n18 164 1700\n18 165 1710\n18 166 1720\n18 167 1730\n18 168 1740\n18 169 1750\n18 170 1760\n18 171 1770\n18 172 1780\n18 173 1790\n18 174 1800\n18 175 1810\n18 176 1820\n18 177 1830\n18 178 1840\n18 179 1850\n18 180 1860\n18 181 1870\n18 182 1880\n18 183 1890\n18 184 1900\n18 185 1910\n18 186 1920\n18 187 1930\n18 188 1940\n18 189 1950\n18 190 1960\n18 191 1970\n18 192 1980\n18 193 1990\n18 194 2000\n18 195 2010\n18 196 2020\n18 197 2030\n18 198 2040\n18 199 2050\n18 200 2060\n18 201 2070\n18 202 2080\n18 203 2090\n18 204 2100\n18 205 2110\n18 206 2120\n18 207 2130\n18 208 2140\n18 209 2150\n18 210 2160\n18 211 2170\n18 212 2180\n18 213 2190\n18 214 2200\n18 215 2210\n18 216 2220\n18 217 2230\n18 218 2240\n18 219 2250\n18 220 2260\n18 221 2270\n18 222 2280\n18 223 2290\n18 224 2300\n18 225 3300\n18 226 3400\n18 227 3500\n18 228 3600\n18 229 3700\n18 230 3800\n18 231 3900\n18 232 4000\n18 233 4010\n18 234 4020\n18 235 4030\n18 236 4040\n18 237 4050\n18 238 4060\n18 239 4070\n18 240 4080\n18 241 4090\n18 242 4100\n18 243 4110\n18 244 4120\n18 245 4130\n18 246 4140\n18 247 4150\n18 248 4"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    r'''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nassert solution(\n    r'''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '70'\nassert solution(\n    r'''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '34'\nassert solution(\n    r'''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n1 4 3 4\n1 5 10 6\n1 6 8 7''') == '20'\nassert solution(\n    r'''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n1 4 3 4\n1 5 10 6\n1 6 8 7\n1 5 10 7''') == '18'\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nassert solution(\n    '''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nassert solution(\n    '''10 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nassert solution(\n    '''10 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nassert solution(\n    '''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n2 3 1\n1 4 5 6\n2 5 10 5\n1 6 10 5''') == '66'\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nassert solution('''3 2 2\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '70'\nassert solution('''3 4 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n1 4 5 6 7\n3 4 4 6 6''') == '50'\nassert solution('''3 2 4\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n1 4 5 6 7\n3 4 4 6 6''') == '50'\nassert solution('''3 3 3\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n1 4 5 6 7\n3 4 4 6 6\n4 4 4 6 6''') == '54'\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '33'\nassert solution('''3 2 2\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33''') == '70'\n'''\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2 1\") == \"\"\nassert solution(\"3 2 1\") == \"\"\nassert solution(\"1 2 10\") == \"\"\nassert solution(\"1 2 10\") == \"\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\") == \"30\"\nassert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\"\n\nfrom sys import setrecursionlimit\nsetrecursionlimit(10**6)\nprint(solution(stdin))"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 2 1\n    1 2 10\n    1 4 6 6\n    1 6 10 5\n    2 10 30 33\n    \"\"\".strip()\n) == '33'\n\nassert solution(\n    \"\"\"\n    3 2 1\n    1 3 3\n    1 4 3\n    1 2 1\n    2 1 1\n    \"\"\".strip()\n) == '3'\n\nassert solution(\n    \"\"\"\n    5 7 5\n    1 2 3\n    1 3 4\n    1 4 5\n    1 5 6\n    1 6 7\n    1 7 8\n    1 8 9\n    1 9 10\n    2 10 8\n    2 10 9\n    2 11 8\n    2 11 9\n    2 12 8\n    2 12 9\n    2 13 8\n    2 13 9\n    3 13 8\n    3 14 8\n    3 14 9\n    3 15 8\n    3 15 9\n    3 16 8\n    3 16 9\n    4 16 8\n    4 17 8\n    4 17 9\n    4 18 8\n    4 18 9\n    4 19 8\n    4 19 9\n    5 19 8\n    5 20 8\n    5 20 9\n    5 21 8\n    5 21 9\n    5 22 8\n    5 22 9\n    6 22 8\n    6 23 8\n    6 23 9\n    6 24 8\n    6 24 9\n    6 25 8\n    6 25 9\n    7 25 8\n    7 26 8\n    7 26 9\n    7 27 8\n    7 27 9\n    8 27 8\n    8 28 8\n    8 28 9\n    8 29 8\n    8 29 9\n    8 30 8\n    8 30 9\n    9 30 8\n    9 31 8\n    9 31 9\n    9 32 8\n    9 32 9\n    9 33 8\n    9 33 9\n    10 33 8\n    10 34 8\n    10 34 9\n    10 35 8\n    10 35 9\n    10 36 8\n    10 36 9\n    \"\"\".strip()\n) == '3'\n\nassert solution(\n    \"\"\"\n    3 2 1\n    1 2 10\n    1 3 15\n    1 4 14\n    1 5 16\n    1 6 10\n    2 3 9\n    2 4 14\n    2 5 13\n    2 6 19\n    2 7 17\n    2 8 18\n    2 9 22\n    3 9 19\n    3 10 21\n    3 11 19\n    3 12 19\n    4 12 19\n    4 13 19\n    4 14 19\n    4 15 19\n    5 15 19\n    5 16 19\n    5 17 19\n    5 18 19\n    5 19 19\n    6 19 19\n    6 20 19\n    6 21 19\n    6 22 19\n    6 23 19\n    6 24 19\n    6 25 19\n    6 26 19\n    6 27 19\n    6 28 19\n    6 29 19\n    6 30 19\n    7 30 19\n    7 31 19\n    7 32 19\n    7 33 19\n    7 34 19\n    7 35 19\n    7 36 19\n    7 37 19\n    7 38 19\n    7 39 19\n    7 40 19\n    8 39 19\n    8 40 19\n    8 41 19\n    8 42 19\n    8 43 19\n    8 44 19\n    8 45 19\n    8 46 19\n    8 47 19\n    8 48 19\n    8 49 19\n    8 50 19\n    9 50 19\n    9 51 19\n    9 52 19\n    9 53 19\n    9 54 19\n    9 55 19\n    9 56 19\n    9 57 19\n    9 58 19\n    9 59 19\n    9 60 19\n    9 61 19\n    9 62 19\n    9 63 19\n    9 64 19\n    10 64 19\n    10 65 19\n    10 66 19\n    10 67 19\n    10 68 19\n    10 69 19\n    10 70 19\n    10 71 19\n    10 72 19\n    10 73 19\n    10 74 19\n    10 75 19\n    10 76 19\n    10 77 19\n    10 78 19\n    10 79 19\n    10 80 19\n    11 80 19\n    11 81 19\n    11 82 19\n    11 83 19\n    11 84 19\n    11 85 19\n    11 86 19\n    11 87 19\n    11 88 19\n    11 89 19\n    11 90 19\n    11 91 19\n    11 92 19\n    11 93 19\n    11 94 19\n    11 95 19\n    11 96 19\n    11 97 19\n    11 98 19\n    11 99 19\n    12 99 19\n    12 100 19\n    12 101 19\n    12 102 19\n    12 103 19\n    12 104 19\n    12 105 19\n    12 106 19\n    12 107 19\n    12 108 19\n    12 109 19\n    12 110 19\n    12 111 19\n    12 112 19\n    12 113 19\n    12 114 19\n    12 115 19\n    12 116 19\n    12 117 19\n    12 118 19\n    12 119 19\n    12 120 19\n    12 121 19\n    12 122 19\n    12 123 19\n    12 124 19\n    12 125 19\n    12 126 19\n    12 127 19\n    12 128 19\n    12 129 19\n"
    },
    {
        "number": 3481,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open('test_files/Y11R5P1/A.in').read()) == '20'\nassert solution(open('test_files/Y11R5P1/B.in').read()) == '20'\nassert solution(open('test_files/Y11R5P1/C.in').read()) == '22'\nassert solution(open('test_files/Y11R5P1/D.in').read()) == '16'\nassert solution(open('test_files/Y11R5P1/E.in').read()) == '17'\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 15 10\n7 7\n30 0''') == '405'\nassert solution('''3\n20 15 10\n7 7\n30 0\n1 2\n3 4\n5 6''') == '2580'\nassert solution('''3\n20 15 10\n7 7\n30 0\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n37 38\n39 40\n41 42\n43 44\n45 46\n47 48\n49 50''') == '87570'\nassert solution('''3\n20 15 10\n7 7\n30 0\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n37 38\n39 40\n41 42\n43 44\n45 46\n47 48\n49 50\n51 52\n53 54\n55 56\n57 58\n59 60\n61 62\n63 64\n65 66\n67 68\n69 70\n71 72\n73 74\n75 76\n77 78\n79 80\n81 82\n83 84\n85 86\n87 88\n89 90\n91 92\n93 94\n95 96\n97 98\n99 100''') == '176071'\nassert solution('''3\n20 15 10\n7 7\n30 0\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n37 38\n39 40\n41 42\n43 44\n45 46\n47 48\n49 50\n51 52\n53 54\n55 56\n57 58\n59 60\n61 62\n63 64\n65 66\n67 68\n69 70\n71 72\n73 74\n75 76\n77 78\n79 80\n81 82\n83 84\n85 86\n87 88\n89 90\n91 92\n93 94\n95 96\n97 98\n99 100\n101 102\n103 104\n105 106\n107 108\n109 110\n111 112\n113 114\n115 116\n117 118\n119 120\n121 122\n123 124\n125 126\n127 128\n129 130\n131 132\n133 134\n135 136\n137 138\n139 140\n141 142\n143 144\n145 146\n147 148\n149 150\n151 152\n153 154\n155 156\n157 158\n159 160\n161 162\n163 164\n165 166\n167 168\n169 170\n171 172\n173 174\n175 176\n177 178\n179 180\n181 182\n183 184\n185 186\n187 188\n189 190\n191 192\n193 194\n195 196\n197 198\n199 200\n201 202\n203 204\n205 206\n207 208\n209 210\n211 212\n213 214\n215 216\n217 218\n219 220\n221 222\n223 224\n225 226\n227 228\n229 230\n231 232\n233 234\n235 236\n237 238\n239 240\n241 242\n243 244\n245 246\n247 248\n249 250\n251 252\n253 254\n255 256''') == '82332'\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_cases/5_transit.txt\", \"r\").read()) == \"45\"\nassert solution(open(\"test_cases/4_transit.txt\", \"r\").read()) == \"32\"\nassert solution(open(\"test_cases/3_transit.txt\", \"r\").read()) == \"17\"\nassert solution(open(\"test_cases/2_transit.txt\", \"r\").read()) == \"6\"\nassert solution(open(\"test_cases/1_transit.txt\", \"r\").read()) == \"1\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"405\"\n\nimport sys\nsys.setrecursionlimit(2000)"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\\\n2\n7 7\n30 0\n\"\"\") == \"405\"\nassert solution(\"\"\"\\\n5\n20 15 10 13 17\n4 0\n20 0\n5 0\n10 0\n2 0\n3 0\n3 0\n\"\"\") == \"72\"\nassert solution(\"\"\"\\\n10\n10 1\n2\n10 0\n\"\"\") == \"100\"\nassert solution(\"\"\"\\\n5\n10 10\n3 3\n3 1\n3\n10 0\n\"\"\") == \"100\"\nassert solution(\"\"\"\\\n2\n7 7\n2 0\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"20 15 10\n7 7\n30 0\"\"\") == \"405\"\nassert solution(\"\"\"20 15 10\n7 7\n30 0\n7 0\n30 0\n\"\"\") == \"780\"\nassert solution(\"\"\"20 15 10\n7 7\n30 0\n0 0\n30 0\n\"\"\") == \"0\"\nassert solution(\"\"\"20 15 10\n7 7\n30 0\n0 0\n30 0\n30 0\n30 0\n0 0\n30 0\n0 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n0 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n0 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n0 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0\n30 0"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''20 15 10\n7 7\n30 0''') == '405'\nassert solution('''3\n20 15 10\n7 7\n30 0''') == '405'\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '840'\nassert solution('''2\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n3\n20 15 10\n7 7\n30 0''') == '405'\nassert solution('''\\\n3\n20 15 10\n7 7\n30 0\n4 4\n1 2\n3 4''') == '356'\nassert solution('''\\\n3\n20 15 10\n7 7\n30 0\n2 1\n4 1\n3 2\n2 4\n1 1\n2 3\n1 3\n3 4\n3 1\n2 2\n1 2\n1 1\n2 2\n2 3\n1 2\n3 4\n1 1\n2 3\n2 2\n2 1\n2 3\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n2 2\n1 1\n2 3\n1 1\n2 3\n1 3\n3 4\n1 1\n2 3\n1 3\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n1 1\n1 1\n1 3\n2 4\n1 3\n1 1\n1 2\n"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''1\n1 1\n1 1\n1 1\n''') == '2'\nassert solution('''2\n1 1\n1 1\n1 1\n''') == '2'\nassert solution('''4\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"data/transitcard.txt\", \"r\").read()) == \"426\"\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3482,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0''') == '405'\nassert solution('''3\n20 15 10\n7 7\n30 0\n5 0\n4 1\n3 1\n2 1\n1 1\n100 0''') == '4059'\nassert solution('''3\n100 0\n4 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 4 7''') == '28 4 21 14.0000'\n'''\nassert solution('''5\n2 2 3 3 4''') == '28 4 21 14.0000'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '66 8 27 49 3'\n'''\nassert solution('''10\n5 4 3 2 1 6 7 8 9''') == '28 4 21 14.0000'\nassert solution('''1000\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '128 248 268 336 345'\n'''\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2 4 7''') == '28 4 21 14.0'\n\nassert solution('''5\n1 3 9 5 4\nSample Output:\n24 5 10 10.0\n''') == '24 5 10 10.0'\n\nassert solution('''5\n2 2 4 6 3\nSample Output:\n6 6 9 3\n''') == '6 6 9 3'\n\nassert solution('''2\n1 3\nSample Output:\n3 4\n''') == '3 4'\n\nassert solution('''2\n2 4\nSample Output:\n3 4\n''') == '3 4'"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 4 7\n\"\"\"\n) == \"\"\"\n28 4 21 14.0\n\"\"\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4\n1 2 4 7'''\n) == '28 4 21 14.0'\n\nassert solution(\n'''1\n1'''\n) == '1 1 1 1.0'\n\nassert solution(\n'''1\n1000'''\n) == '1 1000 1 1.0'\n\nassert solution(\n'''1\n2'''\n) == '2 2 2 2.0'\n\nassert solution(\n'''1\n1\n2'''\n) == '1 1 1 1.0'"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nN = int(stdin.readline())\nweights = list(map(int, stdin.readline().split()))\nweights.sort()\n\nmax_weight = 0\nmin_weight = 0\nnum_weights = 1\ntotal_weight = 0\nfor i in range(N):\n    total_weight += weights[i]\n    if weights[i]!= weights[i - 1]:\n        num_weights += 1\n        max_weight = max(max_weight, total_weight)\n        min_weight = min(min_weight, total_weight)\n\nprint(max_weight, min_weight, num_weights, float(max_weight - min_weight) / float(num_weights))\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4\n1 2 4 7\n\"\"\") == \"28 4 21 14.0\"\n\nassert solution(\n\"\"\"\n2\n1 2\n\"\"\") == \"2 2\"\n\nassert solution(\n\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"56 10 3\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"40 20 12\"\n\nassert solution(\n\"\"\"\n5\n8 0 2 2 2 2\n\"\"\") == \"32 4 2\""
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 4 7''') == '28 4 21 14.0'\nassert solution('''2\n1 2\n2 3\n3 4\n4 5''') == '27 4 4 1.0'\nassert solution('''1\n1''') == '1 1 1 1.0'\nassert solution('''5\n1 2 3 4 5''') == '49 4 1 1.0'\nassert solution('''4\n2 2 2 2''') == '28 4 4 1.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"4\\n2 3 4\\n\") == \"\"\nassert solution(\"4\\n1 2 4\\n\") == \"\"\nassert solution(\"4\\n1 2 4\\n1 2 4\\n\") == \"\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == 'yes'\nassert solution('2 2') == 'no'\nassert solution('3 4') == 'no'\nassert solution('4 2') == 'yes'\nassert solution('4 4') == 'yes'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'yes'\nassert solution('1 2') == 'yes'\nassert solution('4 2') == 'yes'\nassert solution('4 2 3') == 'no'\nassert solution('4 2 3 4') == 'yes'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n-----\nAssumptions:\n- the grid size is between 1 and 100\n- there are no more than 100 rows to be filled in\n- each row is non-empty\n- all of the values are between 1 and n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2\n1 2 3 4\n2 3 4 1''') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\nassert solution('''6 6\n1 2 3 4 5 6\n2 3 4 5 6 1\n3 4 5 6 1 2\n4 5 6 1 2 3\n5 6 1 2 3 4\n6 1 2 3 4 5''') == 'no'\nassert solution('''8 8\n1 2 3 4 5 6 7 8\n2 3 4 5 6 7 8 1\n3 4 5 6 7 8 1 2\n4 5 6 7 8 1 2 3\n5 6 7 8 1 2 3 4\n6 7 8 1 2 3 4 5\n7 8 1 2 3 4 5 6\n8 1 2 3 4 5 6 7''') == 'yes\\n1 2 3 4 5 6 7 8\\n2 3 4 5 6 7 8 1\\n3 4 5 6 7 8 1 2\\n4 5 6 7 8 1 2 3\\n5 6 7 8 1 2 3 4\\n6 7 8 1 2 3 4 5\\n7 8 1 2 3 4 5 6'\n'''\n## testing for refactor\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes'\nassert solution('''4 2\n1 2 3 4\n2 3 4 1\n''') == '1 2 3 4'\nassert solution('''4 2\n1 2 3 4\n2 3 4 1\n''') == '1 2 3 4'\nassert solution('''4 2\n1 2 3 4\n2 3 4 1\n''') == '1 2 3 4'\nassert solution('''4 2\n1 2 3 4\n2 3 4 1\n''') == '1 2 3 4'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\n\"\"\""
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4\\n2 3 4 1\\n') == 'no'\nassert solution('3 3\\n1 2 3 4\\n2 3 4 1\\n') == 'yes'\nassert solution('2 2\\n1 2 3\\n2 3 4\\n') == 'yes'\nassert solution('2 3\\n1 2 3 4\\n2 3 4 1\\n') == 'no'\nassert solution('2 4\\n1 2 3 4\\n2 3 4 1\\n') == 'no'\n"
    },
    {
        "number": 3484,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes'\nassert solution('''4 2\n1 2 3 4\n2 3 4 1\n''') == '1 2 3 4'\nassert solution('''5 4\n1 2 3 4 5\n2 3 4 5 1\n2 3 4 5\n1 2 3 4\n2 3 4 5\n2 3 4 5\n2 3 4 5\n''') == 'no'\nassert solution('''5 6\n1 2 3 4 5 6\n2 3 4 5 6 1\n2 3 4 5 6\n1 2 3 4 5\n2 3 4 5 6\n2 3 4 5 6\n2 3 4 5 6\n''') == 'no'\nassert solution('''5 7\n1 2 3 4 5 6 7\n2 3 4 5 6 7 1\n2 3 4 5 6 7\n1 2 3 4 5 6\n2 3 4 5 6 7\n2 3 4 5 6 7\n2 3 4 5 6 7\n1 2 3 4 5 6\n''') == 'no'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('10') == 0\nassert solution('-10') == 0\nassert solution('10 -10') == 0\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n10 10 -10 -4 10''') == '10.000000000'\nassert solution('''10\n10 10 -10 -4 10''') == '10.000000000'\nassert solution('''5\n5 5 5 5 5''') == '0.000000000'\nassert solution('''1\n-1 -2 -3 -4 -5''') == '0.000000000'\nassert solution('''7\n-1 -2 -3 -4 -5 -6 -7''') == '0.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n10 10 -10 -4 10''') == '10.000000000'\nassert solution('''10\n
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10 -10 -4 10') == '10.000000000'\nassert solution('2 3 5 -1 -6 -1 4 7 10 11 10') == '9.0534790094'\nassert solution('3 4 5 -1 -6 -1 4 7 10 11 10') == '7.8526260036'\nassert solution('4 5 5 -1 -6 -1 4 7 10 11 10') == '6.8114800122'\nassert solution('5 6 7 -1 -6 -1 4 7 10 11 10') == '5.9408660042'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(10.000000000)\nassert solution(\"2 3 10 -9 1 -10 -10 -5 -4 10 5 -3 10 -10 3 4 -2 -10 -1 -3 -10 -5 -3 -1 -9 -3\") == str(5.000000000)\nassert solution(\"2 1 10 -9 -10 -10 -5 -4 10 5 -3 10 -10 3 4 -2 -10 -1 -3 -10 -5 -3 -1 -9 -3\") == str(5.000000000)\nassert solution(\"1 1 2 3 3 5 5 5 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n-1\\n-1\\n0') == '10.000000000'\nassert solution('1\\n-1\\n-1\\n0') == '10.000000000'\nassert solution('1\\n-1\\n-1\\n-1\\n0') == '10.000000000'\nassert solution('1\\n-1\\n-1\\n-1\\n-1\\n0') == '10.000000000'\nassert solution('1\\n-1\\n-1\\n-1\\n-1\\n-1\\n0') == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"10.000000000\"\nassert solution(\"10\") == \"10.000000000\"\nassert solution(\"-10\") == \"10.000000000\"\nassert solution(\"-4\") == \"10.000000000\"\nassert solution(\"10 -4 -10 -10\") == \"10.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('-10') == '-10'\nassert solution('-10 -4 10') == '-10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"5\"\n) == '10.000000000'\nassert solution(\n\"5 4 -4 3 -1 2\"\n) == '0.3636363636363636'\nassert solution(\n\"5 4 -4 3 -1 2 3 4 5 -6\"\n) == '0.3964396439643964'\nassert solution(\n\"5 4 -4 3 -1 2 3 4 5 -6 4 -1 -2 1 -3 -4 -5 0 -6 -7 -8 -9 -10\"\n) == '0.46153846153846154'\nassert solution(\n\"5 4 -4 3 -1 2 3 4 5 -6 4 -1 -2 1 -3 -4 -5 0 -6 -7 -8 -9 -10\"\n) == '0.46153846153846154'\n"
    },
    {
        "number": 3485,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n10 10 -10 -4 10''') == '10.000000000'\nassert solution('''10\n10 10 -10 -4 10''') == '10.000000000'\nassert solution('''100\n12 20 -10 -4 10''') == '10.000000000'\nassert solution('''200\n120 80 -10 -4 10''') == '10.000000000'\nassert solution('''1000\n12 22 -10 -4 10''') == '10.000000000'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3') == '1'\nassert solution('2\\n3\\n2\\n1') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"30\") == \"\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\\n\") == \"\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n9\\n4\\n3\\n2\\n1\\n10\\n5\\n6\\n7') == '3'\nassert solution('2\\n1\\n2\\n3\\n4') == '0'\nassert solution('6\\n5\\n4\\n3\\n2\\n1\\n10\\n9\\n8\\n7\\n6') == '3'\nassert solution('3\\n2\\n1\\n10\\n9') == '0'\nassert solution('3\\n2\\n3\\n4\\n5\\n6\\n7') == '0'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('2\\n3\\n4\\n5\\n6\\n7') == '5'\nassert solution('2\\n4\\n6\\n8\\n10') == '1'\nassert solution('4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20') == '0'\nassert solution('4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20\\n22\\n24\\n26\\n28\\n30') == '1'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n-----\n'''\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 1\nassert solution('5') == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"4\\n30\\n3\\n2\\n45\") == \"1\\n\"\nassert solution(\n    \"4\\n30\\n3\\n2\\n45\") == \"2\\n\"\nassert solution(\n    \"4\\n30\\n3\\n2\\n45\") == \"1\\n\"\nassert solution(\n    \"4\\n30\\n3\\n2\\n45\") == \"1\\n\"\nassert solution(\n    \"4\\n30\\n3\\n2\\n45\") == \"2\\n\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('2\\n3\\n30\\n45') == '0'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n3\\n5') == '0'\nassert solution('1\\n2\\n3\\n4') == '1'\n"
    },
    {
        "number": 3486,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\n30\n3\n2\n45\n''') == '1'\nassert solution('''\n5\n2\n3\n30\n4\n45\n''') == '0'\nassert solution('''\n100\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '0'\nassert solution('''\n2\n1\n2\n''') == '0'\nassert solution('''\n12\n15\n17\n10\n14\n8\n15\n16\n1\n7\n3\n9\n11\n13\n2\n4\n6\n''') == '0'\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n\"\"\""
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 6 3.0 0.66') == '0.000000000 1.360000000'\nassert solution('2 4 8') == '0.000000000 1.000000000'\nassert solution('4 6 1') == '0.000000000 1.000000000'\nassert solution('3 6 1') == '0.000000000 -1.000000000'\nassert solution('4 5 5') == '0.000000000 0.360000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == \"\"\"0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\"\"\"\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n3 5 1\n3 4 1\n4 3 1\n5 2 1\n1 3 1\n3 2 1''') == \"\"\"0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\"\"\"\nprint(solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3'''))\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == \"\"\"0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\"\"\"\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n3 5 1\n3 4 1\n4 3 1\n5 2 1\n1 3 1\n3 2 1''') == \"\"\"0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\"\"\"\nprint(solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n3 5 1\n3 4 1\n4 3 1\n5 2 1\n1 3 1\n3 2 1'''))\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n3 5 1\n3 4 1\n4 3 1\n5 2 1\n1 3 1\n3 2 1''') == \"\"\"0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\"\"\"\nprint(solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n3 5 1\n3 4 1\n4 3 1\n5 2 1\n1 3 1\n3 2 1''"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 6 3.0 0.66\") == \"0.000000000 1.360000000\"\nassert solution(\"2 4 8\") == \"0.000000000 1.000000000\"\nassert solution(\"4 6 1\") == \"0.000000000 1.000000000\"\nassert solution(\"3 6 1\") == \"0.000000000 1.000000000\"\nassert solution(\"4 5 5\") == \"0.000000000 0.360000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n\nassert solution('''4 4 1.5 0.9\n4 3 2\n3 4 1\n1 1 3\n3 2 1''') == '0.5 0.9\\n1.5 0.9\\n0.5 0.9\\n0.5 0.9\\n0.5 0.9\\n1.5 0.9'\n\nassert solution('''3 3 1\n1 2 3\n2 3 1\n3 1 1\n1 1 1\n2 2 1''') == '1.0 0.0\\n0.0 1.0\\n0.0 0.0\\n-0.0 -1.0\\n0.0 0.0\\n1.0 1.0\\n0.0 0.0\\n0.0 0.0'\n\nassert solution('''4 4 1.5 0.9\n4 3 2\n3 4 1\n1 1 3\n3 2 1\n4 1 2''') == '0.500000 0.000000\\n1.500000 0.000000\\n0.000000 0.500000\\n0.000000 0.000000\\n0.000000 0.000000\\n1.500000 1.000000'\n\nassert solution('''2 2 1\n2 1 2\n1 1 1\n2 2 1\n1 1 2\n2 1 1''') == '0.500000 0.000000\\n0.000000 0.500000\\n0.000000 0.000000\\n0.000000 0.000000\\n0.500000 1.000000\\n0.000000 0.000000'"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n\n'''"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\nfrom fractions import Fraction"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n6 5 4\n3 6 4\n4 3 7\n3 4 5\n1 3 5''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''1 2 3\n4 5 6\n7 8 9''') == '-0.497727976 -1.000000000\\n0.000000000 1.000000000\\n0.000000000 0.181428571\\n0.500714286 0.000000000\\n1.000000000 -0.497727976'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n6 5 4\n3 6 4\n4 3 7\n3 4 5\n1 3 5\n5 4 2\n1 4 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n6 5 4\n3 6 4\n4 3 7\n3 4 5\n1 3 5\n5 4 2\n1 4 3\n5 4 2\n1 4 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('3 3 2.5 0.5\\n1 2 3\\n2 3 1\\n2 1 2\\n3 1 1\\n2 3 3\\n') == '-0.4500000\\n-0.4500000\\n-0.4500000\\n-0.4500000\\n-0.4500000\\n-0.4500000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n"
    },
    {
        "number": 3487,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n        '''\n        6 6 3.0 0.66\n        2 4 8\n        4 6 1\n        3 6 1\n        4 5 5\n        1 5 7\n        3 5 3\n        '''\n    ) == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n'\n\nassert solution(\n        '''\n        2 1 3\n        4 2 1\n        '''\n    ) == '0.000000000 -1.000000000\\n0.000000000 0.360000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n'\n\nassert solution(\n        '''\n        4 1 3\n        4 3 1\n        4 1 1\n        '''\n    ) == '0.000000000 -1.000000000\\n0.000000000 0.360000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n'\n\nassert solution(\n        '''\n        5 5 3\n        2 1 3\n        3 2 1\n        4 5 2\n        1 1 1\n        2 4 1\n        3 1 2\n        '''\n    ) == '0.000000000 -1.000000000\\n0.000000000 0.360000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n'\n\nassert solution(\n        '''\n        5 5 3\n        2 4 3\n        3 2 1\n        4 5 2\n        1 1 1\n        2 4 1\n        3 1 2\n        '''\n    ) == '0.000000000 -1.000000000\\n0.000000000 0.360000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n'"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '4'\nassert solution('''5\n-9 -9\n-9 5\n-9 2\n-8 -8\n-8 2\n-7 -7\n-7 -7\n-7 -5\n-7 -3\n-7 -1\n-7 0\n-6 2\n-6 3\n-5 4\n-5 2\n-4 -3\n-4 -1\n0 1\n1 1\n2 2\n3 3\n3 4\n3 4\n3 5\n3 5\n3 6\n3 6\n4 4\n4 5\n4 5\n4 6\n4 6\n4 7\n4 7\n5 6\n5 6\n5 7\n5 7\n5 8\n5 8\n6 7\n6 7\n6 8\n6 8\n7 7\n7 8\n7 9\n7 9\n8 7\n8 8\n8 9\n8 9\n9 8\n9 9\n9 9\n9 10\n9 10\n10 9\n10 10\n10 11\n10 11\n11 10\n11 11\n11 11\n11 12\n11 12\n12 11\n12 12\n12 12\n12 13\n12 13\n13 12\n13 13\n13 14\n13 14\n14 13\n14 14\n14 14\n14 15\n14 15\n15 14\n15 15\n15 16\n15 16\n16 15\n16 16\n16 17\n16 17\n17 16\n17 17\n17 18\n17 18\n18 17\n18 18\n18 19\n18 19\n19 18\n19 19\n19 20\n19 20\n20 19\n20 20\n20 21\n20 21\n21 19\n21 20\n''') == '5'\n\nassert solution('''1\n-9 -9\n-9 5\n-9 2\n-8 -8\n-8 2\n-7 -7\n-7 -7\n-7 -5\n-7 -3\n-7 -1\n-7 0\n-6 2\n-6 3\n-5 4\n-5 2\n-4 -3\n-4 -1\n0 1\n1 1\n2 2\n3 3\n3 4\n3 4\n3 5\n3 5\n3 6\n3 6\n4 4\n4 5\n4 5\n4 6\n4 6\n4 7\n4 7\n5 6\n5 6\n5 7\n5 7\n5 8\n5 8\n6 7\n6 7\n6 8\n6 8\n7 7\n7 8\n7 8\n7 9\n7 9\n8 7\n8 8\n8 9\n8 9\n9 8\n9 9\n9 9\n9 10\n9 10\n10 9\n10 10\n10 11\n10 11\n11 10\n11 11\n11 11\n11 12\n11 12\n12 11\n12 12\n12 12\n12 13\n12 13\n13 12\n13 13\n13 14\n13 14\n14 13\n14 14\n14 14\n14 15\n14 15\n15 14\n15 15\n15 16\n15 16\n16 15\n16 16\n16 17\n16 17\n17 16\n17 17\n17 18\n17 18\n18 17\n18 18\n18 19\n18 19\n19 18\n19 19\n19 20\n19 20\n20 19\n20 20\n20 21\n20 21\n21 19\n21 20\n''') == '3'\n\nassert solution('''6\n-9 -9\n-9 5\n-9 2\n-8 -8\n-8 2\n-7 -7\n-7 -7\n-7 -5\n-7 -3\n-7 -1\n-7 0\n-6 2\n-6 3\n-5 4\n-5 2\n-4 -3\n-4 -1\n0 1\n1 1\n2 2\n3 3\n3 4\n3 4\n3 5\n3 5\n3 6\n3 6\n4 4\n4 5\n4 5\n4 6\n4 6\n4 7\n4 7\n5 6\n5 6\n5 7\n5 7\n5 8\n5 8\n6 7\n6 7\n6 8\n6 8\n7 7\n7 8\n7 8\n7 9\n7 9\n8 7\n8 8\n8 9\n8 9\n9 8\n9 9\n9 9\n9 10\n9 10\n10 9\n10 10\n10 11\n10 11\n11 10\n11 11\n11 11\n11 12\n11 12\n12 11\n12 12\n12 12\n12 13\n12 13\n13 12\n13 13\n13 14\n13 14\n14 13\n14 14\n14 14\n14 15\n14 15\n15 14\n15 15\n15 16\n15 16\n16 15\n16 16\n16 17\n16 17\n17 16\n17 17\n17 18\n17 18\n18 17\n18 18\n18 19\n18 19\n19 18\n19 19\n19 20\n19 20\n20 19\n20 20\n20 21\n20 21\n21 19\n21 20\n''') == '5'\n\nassert solution('''7\n-9 -9\n-9 5\n-9 2\n-8 -8\n-8 2\n-7 -7\n-7 -7\n-7 -5\n-7 -3\n-7 -1\n-7 0\n-6 2\n-6 3\n-5 4\n-5 2\n-4 -3\n-4 -1\n0 1\n1 1\n2 2\n3 3\n3 4\n3 4\n3 5\n3 5\n3 6\n3 6\n4 4\n4 5\n4 5\n4 6\n4 6\n4 7\n4 7\n5 6\n5 6\n5 7\n5 7\n5 8\n5 8\n6 7\n6 7\n6 8\n6 8\n7 7\n7 8\n7 8\n7 9\n7 9\n8 7\n8 8\n8 9\n8 9\n9 8\n9 9\n9 9\n9 10\n9 10\n10 9\n10 10\n10 11\n10 11\n11 10\n11 11\n11 11\n11 12\n11 12\n12 11\n12 12\n12 12\n12 13\n12 13\n13 12\n13 13\n13 14\n13 14\n14 13\n14 14\n14 15\n14 15\n15 13\n15 14\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '4'\nassert solution('''6\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n2 2\n1 3\n1 1\n2 3\n1 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '4'\nassert solution('0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == '4'\n'''\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\"\nassert solution(\"5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 1\\n2 1\") == \"2\"\nassert solution(\"7\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n4 1\\n2 1\") == \"5\"\nassert solution(\"5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\"\nassert solution(\"5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n4 1\\n2 1\") == \"2\"\n\"\"\""
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4'\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '4'\n'''\n    pass\n'''\nassert solution('''10\n3 3\n3 2\n3 1\n2 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n9 11\n11 12\n11 13\n10 14\n12 15\n13 14\n13 15''') == '3'\n'''\n    pass\n'''\n\nprint(solution('''10\n3 3\n3 2\n3 1\n2 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n9 11\n11 12\n11 13\n10 14\n12 15\n13 14\n13 15'''))\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0\\n0\\n0') == ''\nassert solution('1\\n0\\n0') == '2'\nassert solution('1\\n3\\n3') == '4'\nassert solution('1\\n3\\n2') == '4'\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n0\\n3\\n3\\n') == '4'\nassert solution('1\\n1\\n0\\n3\\n') == '3'\nassert solution('1\\n1\\n0\\n3\\n2\\n3\\n1\\n2\\n') == '4'\nassert solution('0\\n3\\n2\\n2\\n1\\n0\\n3\\n1\\n3\\n0\\n3\\n2\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n3\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n1\\n2\\n1\\n3\\n0\\n2\\n0\\n3\\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3488,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0'\n\n\"\"\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_48_2.txt\").read()) == \"2\\n1 2\\n3 2\\n1 3\\n3 1\"\n\"\"\""
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\nSample Output:\n2\n3 2\n3 1''') == '2\\n3 2\\n3 1'\n'''\n- Every time you go to a new location, you can either move to that location or to a different location. Since your network is small, you can just try moving to any location, and see how many other locations you can reach. If you can reach any location from the current location, you can keep going to the other locations.\n- If you can\u2019t reach any location from the current location, then you can add a passageway and try moving there, again and again. If you can reach any other location from the current location by adding a passageway, then you can keep going to the other locations.\n- If you can\u2019t reach any location, you\u2019re at the end of the network, and you have to add a passageway."
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 1\\n0 2\") == \"2\\n3 2\"\nassert solution(\"1 1\\n0 2\") == \"2\\n3 2\"\nassert solution(\"1 2\\n0 2\") == \"2\\n3 2\"\nassert solution(\"1 3\\n0 2\") == \"2\\n3 2\"\nassert solution(\"2 2\\n0 2\") == \"2\\n3 2\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0') == '2'\nassert solution('1 2\\n1 0') == '2'\nassert solution('0 1\\n1 2\\n2 0') == '2'\nassert solution('2 4\\n0 1\\n0 3\\n1 2\\n1 4\\n2 4') == '2'\nassert solution('10 10\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '0'\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0\n0 1\n0 2\n0 3\n1 2\n1 3\n2 3''') == \"0 2\\n0 3\"\nassert solution('''0 1\n1 2\n0 1\n2 1\n0 1\n2 1\n0 1\n0 2''') == \"0 1\\n0 2\\n1 1\\n1 2\\n2 2\"\nassert solution('''0 0\n0 1\n0 2\n0 3\n1 2\n1 3\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5''') == \"0 2\\n0 3\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\"\nassert solution('''0 1\n0 2\n0 3\n1 2\n1 3\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 4''') == \"0 1\\n0 2\\n0 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n4 1\\n4 2\\n4 3\\n5 1\\n5 2\\n5 3\"\nassert solution('''0 0\n0 1\n0 2\n0 3\n1 2\n1 3\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n5 15\n5 16\n5 17\n5 18\n5 19\n5 20\n5 21\n5 22\n5 23\n5 24\n5 25\n5 26\n5 27\n5 28\n5 29\n5 30\n5 31\n5 32\n5 33\n5 34\n5 35\n5 36\n5 37\n5 38\n5 39\n5 40\n5 41\n5 42\n5 43\n5 44\n5 45\n5 46\n5 47\n5 48\n5 49\n5 50\n5 51\n5 52\n5 53\n5 54\n5 55\n5 56\n5 57\n5 58\n5 59\n5 60\n5 61\n5 62\n5 63\n5 64\n5 65\n5 66\n5 67\n5 68\n5 69\n5 70\n5 71\n5 72\n5 73\n5 74\n5 75\n5 76\n5 77\n5 78\n5 79\n5 80\n5 81\n5 82\n5 83\n5 84\n5 85\n5 86\n5 87\n5 88\n5 89\n5 90\n5 91\n5 92\n5 93\n5 94\n5 95\n5 96\n5 97\n5 98\n5 99\n5 100\n5 101\n5 102\n5 103\n5 104\n5 105\n5 106\n5 107\n5 108\n5 109\n5 110\n5 111\n5 112\n5 113\n5 114\n5 115\n5 116\n5 117\n5 118\n5 119\n5 120\n5 121\n5 122\n5 123\n5 124\n5 125\n5 126\n5 127\n5 128\n5 129\n5 130\n5 131\n5 132\n5 133\n5 134\n5 135\n5 136\n5 137\n5 138\n5 139\n5 140\n5 141\n5 142\n5 143\n5 144\n5 145\n5 146\n5 147\n5 148\n5 149\n5 150\n5 151\n5 152\n5 153\n5 154\n5 155\n5 156\n5 157\n5 158\n5 159\n5 160\n5 161\n5 162\n5 163\n5 164\n5 165\n5 166\n5 167\n5 168\n5 169\n5 170\n5 171\n5 172\n5 173\n5 174\n5 175\n5 176\n5 177\n5 178\n5 179\n5 180\n5 181\n5 182\n5 183\n5 184\n5 185\n5 186\n5 187\n5 188\n5 189\n5 190\n5 191\n5 192\n5 193\n5 194\n5 195\n5 196\n5 197\n5 198\n5 199\n5 200\n5 201\n5 202\n5 203\n5 204\n5 205\n5 206\n5 207\n5 208\n5 209\n5 210\n5 211\n5 212\n5 213\n5 214\n5 215\n5 216\n5 217\n5 218\n5 219\n5 220\n5 221\n5 222\n5 223\n5 224\n5 225\n5 226\n5 227\n5 228\n5 229\n5 230\n5 231\n5 232\n5 233\n5 234\n5 235\n5 236\n5 237\n5 238\n5 239\n5 240\n5 241\n5 242\n5 243\n5 244\n5 245\n5 246\n5 247\n5 248\n5 249\n5 250\n5 251\n5 252\n5 253\n5 254\n5 255\n5 256\n5 257\n5 258\n5 259\n5 260\n5 261\n5 262\n5 263\n5 264\n5 265\n5 266\n5 267\n5 268\n5 269\n5 270\n5 271\n5 272\n5 273\n5 274\n5 275\n5 276\n5 277\n5 278\n5 279\n5 280\n5 281\n5 282\n5 283\n5 284\n5 285\n5 286\n5 287\n5 288\n5 289\n5 290\n5 291\n5 292\n5 293\n5 294\n5 295\n5 296\n5 297\n5 298\n5 299\n5 300\n5 301\n5 302\n5 303\n5 304\n5 305\n5 306\n5 307\n5 308\n5 309\n5 310\n5 311\n5 312\n5 313\n5 314\n5 315\n5 316\n5 317\n5 318\n5 319\n5 320\n5 321\n5 322\n5 323\n5 324\n5 325\n5 326\n5 327\n5 328\n5 329\n5 330\n5 331\n5 332\n5 333\n5 334\n5 335\n5 336\n5 337\n5 338\n5 339\n5 340\n5 341\n5 342\n5 343\n5 344\n5 345\n5 346\n5 347\n5 348\n5 349\n5 350\n5 351\n5 352"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 0\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"0 1\") == \"\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n''') == '2\\n3 2\\n3 1\\n'\n'''assert solution('''4 0\n0 1\n0 2\n1 3\n2 0\n''') == '2\\n3 2\\n3 1\\n'\nassert solution('''4 0\n0 1\n0 2\n1 3\n2 4\n''') == '3\\n2 3\\n1 2\\n0 1\\n'\nassert solution('''5 5\n0 1\n0 2\n0 3\n0 4\n1 2\n2 4\n2 3\n3 4\n''') == '1\\n1 3\\n0 2\\n0 3\\n0 4\\n'\nassert solution('''5 5\n0 1\n0 2\n0 3\n0 4\n1 2\n2 3\n3 4\n3 5\n4 5\n''') == '1\\n1 3\\n0 2\\n0 3\\n0 4\\n'\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3489,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''0 0\n0 1\n0 2\n0 3\n1 0\n2 0\n2 1\n2 2\n2 3\n1 2'''\n) == '2'\n\nassert solution(\n'''4 0\n0 1\n0 2\n0 3\n1 2\n2 3\n2 4\n1 3\n3 4'''\n) == '3'\n\nassert solution(\n'''7 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6'''\n) == '4'\n\nassert solution(\n'''9 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9'''\n) == '5'\n\nassert solution(\n'''9 9\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9'''\n) == '0'"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 0\n0 1.5 0\n''') == 'ok'\n\nassert solution('''2\n0 0 0\n1 0 1.5\n''') == 'ok'\n\nassert solution('''5\n1 1 0\n1 -1 -1\n0 -1 -1\n-1 -1 1\n1 1 1\n''') == 'ok'\n\nassert solution('''5\n1 1 0\n1 -1 -1\n0 -1 -1\n-1 -1 1\n1 1 1\n''') == 'ok'\n\nassert solution('''2\n1 1 0\n1 -1 -1\n''') == 'crash'"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2\n0 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''\n3\n0 0 0\n1 1 1\n1 0 0\n''') == 'ok'\nassert solution('''\n5\n0 0 0\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n''') == 'ok'\nassert solution('''\n8\n0 0 0\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n0 1 1\n''') == 'ok'\nassert solution('''\n8\n0.5 0.5 0.5\n0.5 1.5 1.5\n0.5 1.5 1.5\n0.5 1.5 1.5\n0.5 1.5 1.5\n0.5 1.5 1.5\n0.5 1.5 1.5\n0.5 1.5 1.5\n''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"ok\"\n\nSample Input:\n3\n1.5 0 0\n1 1.5 1.5\n1 1 1 1\nSample Output:\ncrash\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n0 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''\n0 0 0\n0 1.5 0\n0 2.5 0\n''') == 'crash'\nassert solution('''\n1 0 0\n1 1.5 0\n1 2.5 0\n''') == 'crash'\nassert solution('''\n0 0 0\n0 1.5 0\n0 2.5 0\n0 3.5 0\n''') == 'ok'\nassert solution('''\n1 0 0\n1 1.5 0\n1 2.5 0\n1 3.5 0\n''') == 'crash'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\") == \"ok\"\nassert solution(\"0 1.5 0\") == \"ok\"\nassert solution(\"-1 0 0\") == \"ok\"\nassert solution(\"0 2.0 0\") == \"ok\"\nassert solution(\"-1 1.5 0\") == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0 0''') == 'ok'\nassert solution('''0 1.5 0''') == 'ok'\nassert solution('''1 1 1''') == 'ok'\nassert solution('''0 0 0''') == 'ok'\nassert solution('''1.5 0 0''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"ok\"\n\n\"\"\"\n\n\nimport sys\nsys.path.append('..')\nfrom test_framework import *\n\nfrom math import pi, sqrt\n\nclass MyTest(Test):\n    def test(self):\n        self.assertEquals(solution('''\n        2\n        0 0 0\n        0 1.5 0\n        '''), \"ok\")"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n2\n0 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''\n3\n0 0 0\n1.5 1.5 1.5\n2.5 2.5 2.5\n''') == 'crash'\nassert solution('''\n4\n0 0 0\n1.5 1.5 1.5\n2.5 2.5 2.5\n0.25 0.25 0.25\n''') == 'crash'\nassert solution('''\n6\n0 0 0\n1.5 1.5 1.5\n2.5 2.5 2.5\n0.25 0.25 0.25\n0.5 0.5 0.5\n2.5 2.5 2.5\n''') == 'crash'\nassert solution('''\n7\n0 0 0\n1.5 1.5 1.5\n2.5 2.5 2.5\n0.25 0.25 0.25\n0.5 0.5 0.5\n2.5 2.5 2.5\n0.5 0.5 0.5\n''') == 'crash'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'ok'\nassert solution('0 0 0') == 'ok'\nassert solution('0 1.5 0') == 'crash'\nassert solution('0 1 0') == 'ok'\nassert solution('1 1 1') == 'crash'\n"
    },
    {
        "number": 3490,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok'\nassert solution('0 0 0\\n0 1 0') == 'crash'\nassert solution('1 2 3\\n2 1 2') == 'ok'\nassert solution('1 2 3\\n3 1 2') == 'crash'\nassert solution('0 0 0\\n0 1 0\\n1 0 0\\n0 1 0') == 'crash'\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_out\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('4\\n2\\n0\\n3') == '1'\nassert solution('3\\n0\\n1\\n3') == '2'\nassert solution('10\\n2\\n1\\n0\\n3\\n1\\n2\\n3\\n4\\n5\\n7\\n8\\n9') == '4'\nassert solution('4\\n2\\n3\\n0\\n2') == '1'\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str\n\"\"\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4') == '2\\nR 0\\nG 2'\nassert solution('5 5') == '0'\nassert solution('0 0') == '0'\nassert solution('5 5\\n0 2\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n0 2') == '0\\nR 0\\nG 2\\nR 0\\nG 2\\nR 0\\nG 2'\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n0 2') == '2\\nR 0\\nG 2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"/dev/stdin\", \"r\").read()) == \"\"\"R 0\nG 2\n\"\"\"\n\nprint(solution(open(\"/dev/stdin\", \"r\").read()))\nassert solution(open(\"/dev/stdin\", \"r\").read()) == \"\"\"R 0\nG 2\n\"\"\"\n\nprint(solution(open(\"/dev/stdin\", \"r\").read()))\nassert solution(open(\"/dev/stdin\", \"r\").read()) == \"\"\"R 0\nG 2\n\"\"\"\n\nprint(solution(open(\"/dev/stdin\", \"r\").read()))\nassert solution(open(\"/dev/stdin\", \"r\").read()) == \"\"\"R 0\nG 2\n\"\"\"\n\nprint(solution(open(\"/dev/stdin\", \"r\").read()))\nassert solution(open(\"/dev/stdin\", \"r\").read()) == \"\"\"R 0\nG 2\n\"\"\"\n\nprint(solution(open(\"/dev/stdin\", \"r\").read()))\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == \"2\"\nassert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n1 2\n2 3''') == \"R 0\\nG 2\\n\"\nassert solution('''5 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n1 2\n2 3''') == \"R 0\\nG 1\\nG 0\\nR 3\\n\"\nassert solution('''5 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n1 2\n2 3''') == \"R 0\\nG 1\\nG 0\\nR 3\\n\"\nassert solution('''5 5\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n1 2\n2 3\n0 2\n1 4\n0 3\n2 3\n0 4\n2 3\n1 4\n0 3\n2 4\n1 4\n0 4\n2 3\n1 4\n0 3\n2 4\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n2 3\n1 4\n0 4\n"
    },
    {
        "number": 3491,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"G 0\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3\") == \"2\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''1 3\na b\n1 c\n1 d\n1 e\n1 f\n''') == '1'\nassert solution('''1 3\na b\n1 c\n1 d\n1 e\n1 f\n''') == '1'\nassert solution('''1 3\n1 1\n1 2\n1 3\n2 2\n2 1\n2 3\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '3'\nassert solution('''7 4 4 4\nA B C D\nE F G H\n3 A E G\n3 A C E\n3 B D F\n3 E G H\n''') == '3'\nassert solution('''7 4 4 4\nA B C D\nE F G H\n3 A E G\n3 A C E\n3 B D F\n3 E G H\n''') == '3'\nassert solution('''7 4 4 4\nA B C D\nE F G H\n3 A E G\n3 A C E\n3 B D F\n3 E G H\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\n'''\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"0\"\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"3\"\nassert solution('''1 2 3 4\nA B C\nD E F\n''') == \"3\"\nassert solution('''1 2 3 4\nA B C\nD E F\n1 B D\n''') == \"0\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n'''"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A A E\\n3 B B D\\n') == '1'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A A E\\n3 B B D\\n') == '3'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A A E\\n3 B B D\\n') == '4'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A A E\\n3 B B D\\n3 A G C\\n') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A B C\\n3 A E G\\n3 B D F') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A B C\\n3 A E G\\n3 B D F') == '2'\nassert solution('1 1 1 1\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A B C\\n3 A E G\\n3 B D F') == '1'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A B C\\n3 A E G\\n3 B D F') == '3'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A B C\\n3 A E G\\n3 B D F') == '4'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nYYY\nNYY\nYNY''') == '2\\n1 2 3'\nassert solution('''2\nYYY\nNNN''') == '2'\nassert solution('''8\nYYY\nNNN\nNYY\nYNY\nYYY\nNNN\nYYY\nYYY''') == '8'\nassert solution('''10\nYYY\nYYY\nNYY\nYNY\nYYY\nYYY\nNNN\nYYY\nYYY\nNNN''') == '8'\nassert solution('''20\nYYY\nYYY\nNYY\nYNY\nYYY\nNNN\nYYY\nYYY\nNNN\nYNY\nYYY\nNNN\nYYY\nYYY\nNNN\nYNY\nYYY\nNNN\nYYY\nYYY\nNNN\nYNY\nYYY\nNNN\nYNY\nYYY\nNNN\nYNY\nYYY\nNNN''') == '8'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"4\\n\" +\n    \"YYY\\n\" +\n    \"NYY\\n\" +\n    \"YNY\\n\" +\n    \"YYY\"\n) == \"2\\n1 2 3\"\nassert solution(\n    \"4\\n\" +\n    \"YNY\\n\" +\n    \"YNY\\n\" +\n    \"YYY\"\n) == \"1\\n3\\n2\"\nassert solution(\n    \"5\\n\" +\n    \"NYY\\n\" +\n    \"NYY\\n\" +\n    \"YNY\\n\" +\n    \"YYY\"\n) == \"0\\n0\\n1 1\\n2 1\\n2 1\\n3\"\nassert solution(\n    \"4\\n\" +\n    \"YNY\\n\" +\n    \"YYY\\n\" +\n    \"YYY\"\n) == \"1\\n1 2 3\"\nassert solution(\n    \"5\\n\" +\n    \"NYY\\n\" +\n    \"YNY\\n\" +\n    \"YYY\\n\" +\n    \"YYY\"\n) == \"0\\n0\\n0\\n1 1\\n2 1\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\nYYY\nNYY\nYNY''') == '2'\nassert solution('''4\nYYYY\nYYY\nYYY\nYYY''') == '2'\nassert solution('''3\nYYY\nYNY\nNYY''') == '1'\nassert solution('''4\nYYYY\nYYY\nYYY\nYYYY''') == '2'\nassert solution('''2\nYYY\nYNY''') == '1'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    YYY\n    NYY\n    YNY\n''') == '2\\n1 2 3\\n3 1 2\\n'\nassert solution('''\n    10\n    YNYYYYYYYYYYY\n    YYYYYYYYYYYYY\n    YYYYYYYYYYYYY\n    YYYYYYYYYYYYY\n    YYYYYYYYYYYYY\n    YYYYYYYYYYYYY\n    YYYYYYYYYYYYY\n    YYYYYYYYYYYYY\n    YYYYYYYYYYYYY\n''') == '3\\n1 2 3\\n2 1 3\\n3 2 3\\n'\nassert solution('''\n    6\n    YYYYYYYYY\n    YYYYYYYYY\n    YYYYYYYYY\n    YYYYYYYYY\n    YYYYYYYYY\n    YYYYYYYYY\n''') == '4\\n1 2 3\\n1 2 3\\n2 1 3\\n3 2 3\\n'\nassert solution('''\n    6\n    YYYYYYYYY\n    YYYYYYYYY\n    YYYYYYYYY\n    YYYYYYYYY\n    YYYYYYYYY\n    YYYYYYYYY\n''') == '4\\n1 2 3\\n2 1 3\\n3 2 3\\n'\nassert solution('''\n    6\n    NNNN\n    NNNN\n    NNNN\n    NNNN\n    NNNN\n    NNNN\n''') == '3\\n2 3\\n1 3\\n'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\nYYY\\nYNY\\nYNY\\n\") == \"2\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\\n\") == \"2\"\nassert solution(\"3\\nNYY\\nYNY\\nYNY\\n\") == \"2\"\nassert solution(\"2\\nYNY\\nYNY\\n\") == \"2\"\nassert solution(\"1\\nYNY\\nYNY\\n\") == \"0\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3'\nassert solution('4\\nYYY\\nNYY\\nYNY\\nYYY') == '0'\nassert solution('5\\nYYY\\nNYY\\nYNY\\nYYY\\nYYY') == '0'\nassert solution('6\\nYYY\\nNYY\\nYNY\\nYYY\\nYYY\\nYYY') == '3'\nassert solution('7\\nYYY\\nNYY\\nYNY\\nYYY\\nYYY\\nYYY\\nYYY') == '3'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\nYYY\nNYY\nYNY\n''') == '2 3\\n1 2 3\\n3 1 2'\nassert solution(\n'''\n4\nYYY\nYNY\nYNY\nNYY\n''') == '4 1\\n3 1 2\\n3 2 1\\n1 2 3\\n2 1 3'\nassert solution(\n'''\n4\nYYY\nYNY\nYNY\nNYY\n''') == '2 3\\n1 2 3\\n3 1 2\\n1 2 3\\n2 1 3'\nassert solution(\n'''\n4\nYYY\nYNY\nYNY\nYYY\n''') == '4 1\\n3 1 2\\n3 2 1\\n1 2 3\\n2 1 3\\n3 2 1'\nassert solution(\n'''\n5\nYYY\nYNY\nYNY\nNYY\nYYY\n''') == '4 2\\n1 2 3\\n2 1 3\\n3 1 2\\n1 2 3\\n2 1 3'\n"
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\nYNY\nYYY\nYNY\nNYY\n\"\"\") == \"2 1 2 3\"\n\nassert solution(\"\"\"\n3\nNNN\nNNN\nNNN\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n7\nNNN\nNNN\nNNN\nNNN\nYNY\nYYY\nYNY\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n6\nNNN\nNNN\nYYY\nYNY\nNNN\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n6\nNNN\nYYY\nYNY\nNNN\n\"\"\") == \"2\""
    },
    {
        "number": 3493,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('Y') == '1'\nassert solution('YYY') == '2'\nassert solution('YNY') == '2'\nassert solution('YYYN') == '3'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'\nassert solution('4 4\\nx..x\\nx..x\\nx..x\\nx..x\\n3\\n1 3\\n1 1\\n3 2') == '0\\n0\\n1\\n1'\nassert solution('4 4\\n.x.\\nx..x\\nx..x\\nx..x\\n3\\n1 3\\n1 1\\n3 2') == '0\\n0\\n1\\n1'\nassert solution('3 3\\nx.\\n.\\nx.\\n.\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'\nassert solution('4 4\\n.x.\\n.x.\\nx..x\\nx..x\\n3\\n1 3\\n1 1\\n3 2') == '0\\n0\\n1\\n1'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1\\n.\\n.\\n') == '0'\nassert solution('1 1\\n.\\n.\\n') == '0'\nassert solution('1 1\\nx.\\n.\\n') == '4'\nassert solution('1 1\\n.\\n.\\n') == '0'\nassert solution('1 1\\nx.\\n.\\n') == '4'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split()[-1]"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''10 10\nx.x\n...\n...\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x."
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''3 3\n.x\n.x\n.x\n3\n1 1\n1 3\n3 2''') == '0\\n4\\n5'\nassert solution('''3 3\n...\n...\n...\n3\n1 3\n1 1\n3 2''') == '0\\n4\\n5'\nassert solution('''3 3\n...\n...\n...\n3\n1 1\n1 1\n3 2''') == '0\\n0\\n5'\nassert solution('''3 3\n.x\n.x\n.x\n3\n1 1\n1 1\n3 2''') == '0\\n0\\n5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\nx.\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''4 4\nx.x\nx.x\nx.x\nx.x\n3\n1 3\n1 1\n3 2\n1 2\n1 3''') == '0\\n4\\n1'\nassert solution('''3 3\n..\n...\n...\n3\n1 3\n1 1\n3 2''') == '4\\n0\\n5'\nassert solution('''7 7\n..x..x\nx..x..\nx...x.\nx.x.x.\nx..x..\n..x...\nx...x.\n3\n3 2\n1 1\n1 1\n1 1\n1 1''') == '0\\n0\\n0\\n3\\n0\\n0\\n0'\nassert solution('''8 8\nx..x..\n..x...\n...x.x\n.x.x.\n.x.x.\n.x.x.\n.x.x.\n.x.x.\n8\n4 4\n3 3\n4 4\n1 1\n1 1\n3 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '4\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\nx..\n...\n...''') == '''4\n0\n5\n'''\nassert solution('''3 3\n....\n....\n....\n2 2\n1 1\n3 2\n''') == '''0\n0\n5\n'''\nassert solution('''3 3\nx..\n...\n...\n2 2\n1 1\n3 2\n''') == '''0\n0\n5\n'''\nassert solution('''3 3\nx..\n...\n...\n2 2\n1 1\n3 2\n''') == '''0\n0\n5\n'''\nassert solution('''3 3\nx..\n...\n....\n2 2\n1 1\n3 2\n''') == '''0\n0\n5\n'''\n"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '0 4 0 5'\n\nassert solution('''3 4\n....\n....\n....\n3\n1 1\n1 1\n1 1''') == '0'\n\nassert solution('''3 3\n....\n....\n....\n3\n1 1\n1 1\n1 1''') == '0'\n\nassert solution('''3 3\nx..\n....\n....\n3\n1 1\n1 1\n1 1''') == '0'\n\nassert solution('''3 3\n....\n....\n....\n3\n1 1\n1 1\n1 1''') == '0'"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2''') == '0\\n4\\n5'\n\nassert solution('''2 2\nx..\n.x.\n''') == '0'\n\nassert solution('''2 2\nx..\n.x.\n''') == '0'\n\nassert solution('''2 2\nx..\n.x.\n''') == '0'\n\nassert solution('''2 2\nx..\n.x.\n''') == '0'"
    },
    {
        "number": 3494,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'\nassert solution('3 3\\n.x\\n.x\\n.x\\n3\\n1 3\\n1 1\\n3 2\\n1 3\\n1 1\\n3 2') == '0\\n0\\n0\\n0'\nassert solution('1 1\\nx\\nx\\nx\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '0\\n0\\n0\\n0'\nassert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'\nassert solution('1 1\\nx\\nx\\nx\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n5\\n3\\n4\\n5 3\\n5\\n') == '3.923 3.100\\n1.118 2.037\\n5.000 3.000'\nassert solution('2\\n1\\n2\\n3\\n1\\n') == '-1.997 -1.997\\n3.000 3.000'\nassert solution('2\\n1\\n2\\n3\\n1\\n') == '3.000 3.000'\nassert solution('2\\n1\\n2\\n3\\n1\\n') == '3.000 3.000'\nassert solution('2\\n1\\n2\\n3\\n1\\n') == '3.000 3.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n5\n3\n4\n5 3\n''') == '''\n3.923 3.100\n1.118 2.037\n5.000 3.000\n'''\n\nassert solution('''\n3\n5\n3\n4\n5 3\n4\n4\n4\n4\n''') == '''\n3.923 3.100\n1.118 2.037\n5.000 3.000\n'''\n\nassert solution('''\n3\n5\n3\n4\n5 3\n4\n4\n4\n4\n''') == '''\n3.923 3.100\n1.118 2.037\n5.000 3.000\n'''\n\nassert solution('''\n3\n5\n3\n4\n5 3\n4\n4\n4\n4\n''') == '''\n3.923 3.100\n1.118 2.037\n5.000 3.000\n'''\n\nassert solution('''\n3\n5\n3\n4\n5 3\n4\n4\n4\n4\n''') == '''\n3.923 3.100\n1.118 2.037\n5.000 3.000\n'''"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n'\nassert solution('''5\n5\n3\n4\n5 3\n''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n'\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n''') == '0.000 0.000\\n0.000 0.000\\n0.000 0.000\\n0.000 0.000\\n0.000 0.000\\n0.000 0.000\\n0.000 0.000\\n0.000 0.000\\n0.000 0.000\\n'\nassert solution('''5\n5\n3\n4\n5 3\n''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n'\nassert solution('''5\n5\n3\n4\n5 3\n''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n'\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n5\n3\n4\n5 3\n''') == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000\n'''\n\nassert solution('''3\n5\n1\n3\n4\n5 3\n''') == '''1.118 2.037\n5.000 3.000\n'''\n\nassert solution('''3\n5\n6\n3\n4\n5 3\n''') == '''5.000 3.000\n1.118 2.037\n'''\n\nassert solution('''3\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\""
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n3\n4\n5 3\n''') == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000'''\nassert solution('''5\n5\n3\n4\n5 3\n''') == '''1.118 2.037\n5.000 3.000\n6.297 -0.784\n7.997 1.743'''\nassert solution('''10\n5\n3\n4\n5 3\n''') == '''-1.195 -0.723\n5.000 3.000\n6.297 -0.784\n7.997 1.743'''\nassert solution('''15\n10\n7\n5\n9\n3\n3\n7\n5\n5\n''') == '''-1.195 -0.723\n5.000 3.000\n6.297 -0.784\n7.997 1.743\n7.997 1.743\n9.000 -1.057\n5.000 3.000\n4.843 -2.073\n4.000 -0.000'''\nassert solution('''15\n10\n7\n5\n9\n3\n3\n7\n5\n5\n''') == '''-1.195 -0.723\n5.000 3.000\n6.297 -0.784\n7.997 1.743\n7.997 1.743\n9.000 -1.057\n5.000 3.000\n4.843 -2.073\n4.000 -0.000'''\n"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\"
    },
    {
        "number": 3495,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 2\n3''') == '3'\n\nassert solution('''2 3\n1 1\n1 1\n1 1\n1 1''') == '3'\n\nassert solution('''2 3\n1 1\n1 1\n1 1\n1 1''') == '3'\n\nassert solution('''2 3\n1 3\n3 2\n3 2''') == '3'\n\nassert solution('''2 3\n1 3\n3 2\n3 2''') == '3'"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == open(\"output.txt\").read()\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8''') == '3\\n5\\n8\\n10\\n13'\nassert solution('''5 5\n4 2 5 7\n3\n3\n3\n3\n3''') == '7\\n7\\n8\\n8\\n10\\n10\\n13\\n13'\nassert solution('''6 6\n6 6 6 6\n6\n6\n6\n6\n6''') == '7\\n7\\n7\\n8\\n8\\n10\\n10\\n13\\n13'\nassert solution('''6 6\n6 6 6 6\n4\n6\n6\n6\n6''') == '7\\n7\\n7\\n8\\n8\\n10\\n10\\n13\\n13'\nassert solution('''6 6\n6 6 6 6\n6\n6\n6\n6\n6''') == '7\\n7\\n7\\n8\\n8\\n10\\n10\\n13\\n13'\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6''') == '3\\n5\\n8\\n10\\n13'\n'''\nYour code must solve this problem without using recursion.\n\nTest cases will be generated on the fly and you can test your code on them.\n\nSample Input:\n4 1\n1 2 3 4\nSample Output:\n1\n'''"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"3\"\nassert solution(\"2 3 5 7\") == \"3\"\nassert solution(\"2\\n3\\n5\") == \"3\"\nassert solution(\"2\\n3\\n5\\n6\") == \"3\"\nassert solution(\"2\\n3\\n5\\n7\") == \"3\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3\\n5\\n8\\n10\\n13'\nassert solution('1 2 3\\n4\\n5\\n6\\n7\\n8') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8'\nassert solution('1 2 3\\n4\\n5\\n6\\n7\\n8 9 10 11 12 13 14 15 16 17 18 19\\n') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19'\nassert solution('1 2 3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n5\\n5\\n1\\n1\\n1\\n1') == '3'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\nassert solution('4\\n3\\n2\\n1\\n1\\n1') == '0'\nassert solution('4\\n3\\n2\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '3\\n5\\n8\\n10\\n13\\n16\\n19\\n22\\n25\\n28\\n31\\n34\\n37\\n40\\n43\\n46\\n49\\n52\\n55\\n58\\n61\\n64\\n67\\n70\\n73\\n76\\n79\\n82\\n85\\n88\\n91\\n94\\n97\\n100'\n"
    },
    {
        "number": 3496,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6''') == '3\\n5\\n8\\n10\\n13'\nassert solution('''3\n2\n3\n5\n6''') == '3\\n5\\n8\\n10\\n13'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '3\\n5\\n8\\n10\\n13\\n15\\n18\\n20\\n25\\n30\\n35\\n40\\n45\\n50\\n55\\n60\\n65\\n70\\n75\\n80\\n85\\n90\\n95\\n100\\n105\\n110\\n115\\n120\\n125\\n130\\n135\\n140\\n145\\n150\\n155\\n160\\n165\\n170\\n175\\n180\\n185\\n190\\n195\\n200\\n205\\n210\\n215\\n220\\n225\\n230\\n235\\n240\\n245\\n250\\n255\\n260\\n265\\n270\\n275\\n280\\n285\\n290\\n295\\n300\\n305\\n310\\n315\\n320\\n325\\n330\\n335\\n340\\n345\\n350\\n355\\n360\\n365\\n370\\n375\\n380\\n385\\n390\\n395\\n400\\n405\\n410\\n415\\n420\\n425\\n430\\n435\\n440\\n445\\n450\\n455\\n460\\n465\\n470\\n475\\n480\\n485\\n490\\n495\\n500\\n505\\n510\\n515\\n520\\n525\\n530\\n535\\n540\\n545\\n550\\n555\\n560\\n565\\n570\\n575\\n580\\n585\\n590\\n595\\n600\\n605\\n610\\n615\\n620\\n625\\n630\\n635\\n640\\n645\\n650\\n655\\n660\\n665\\n670\\n675\\n680\\n685\\n690\\n695\\n700\\n705\\n710\\n715\\n720\\n725\\n730\\n735\\n740\\n745\\n750\\n755\\n760\\n765\\n770\\n775\\n780\\n785\\n790\\n795\\n800\\n805\\n810\\n815\\n820\\n825\\n830\\n835\\n840\\n845\\n850\\n855\\n860\\n865\\n870\\n875\\n880\\n885\\n890\\n895\\n900\\n905\\n910\\n915\\n920\\n925\\n930\\n935\\n940\\n945\\"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('1 2\\n2 3\\n1 4\\n1 3\\n3 4') == '1'\nassert solution('1 2\\n1 3\\n2 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 8\\n2 9\\n3 9') == '3'\nassert solution('1 2\\n2 3\\n2 4\\n4 5\\n1 3\\n1 5\\n2 3\\n1 4\\n1 5') == '3'\nassert solution('1 2\\n2 3\\n2 4\\n1 3\\n1 5\\n2 3\\n1 4\\n1 5') == '4'\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5''') == '0'\nassert solution('''6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5''') == '1'\nassert solution('''10 7\n0 1\n1 3\n3 4\n0 4\n1 5\n5 6\n5 7\n4 5\n6 7\n2 4\n2 5\n2 6\n2 7\n2 8\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n4 15\n4 16\n4 17\n4 18\n4 19\n4 20\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n5 15\n5 16\n5 17\n5 18\n5 19\n5 20\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n6 15\n6 16\n6 17\n6 18\n6 19\n6 20\n6 21\n6 22\n6 23\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n7 17\n7 18\n7 19\n7 20\n7 21\n7 22\n7 23\n7 24\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n8 17\n8 18\n8 19\n8 20\n8 21\n8 22\n8 23\n8 24\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n9 18\n9 19\n9 20\n9 21\n9 22\n9 23\n9 24\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20\n10 21\n10 22\n10 23\n10 24\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n11 19\n11 20\n11 21\n11 22\n11 23\n11 24\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n12 19\n12 20\n12 21\n12 22\n12 23\n12 24\n13 14\n13 15\n13 16\n13 17\n13 18\n13 19\n13 20\n13 21\n13 22\n13 23\n13 24\n14 15\n14 16\n14 17\n14 18\n14 19\n14 20\n14 21\n14 22\n14 23\n14 24\n15 16\n15 17\n15 18\n15 19\n15 20\n15 21\n15 22\n15 23\n15 24\n16 17\n16 18\n16 19\n16 20\n16 21\n16 22\n16 23\n16 24\n17 18\n17 19\n17 20\n17 21\n17 22\n17 23\n17 24\n18 19\n18 20\n18 21\n18 22\n18 23\n18 24\n19 20\n19 21\n19 22\n19 23\n19 24\n20 21\n20 22\n20 23\n20 24\n21 22\n21 23\n21 24\n22 23\n22 24\n23 24\n''') == '3'"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n''') == '0'\nassert solution('''\n7 4\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n3 4 5\n''') == '1'\nassert solution('''\n2 3\n0 1\n1 2\n''') == '0'\nassert solution('''\n2 3\n0 1\n1 2\n0 2\n''') == '1'\nassert solution('''\n3 4\n0 1\n1 2\n1 3\n2 3\n''') == '2'\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5''') == '0'\nassert solution('''8 6\n0 1\n1 2\n2 3\n2 4\n1 5\n1 6\n2 7\n3 4\n3 5\n4 5\n3 4 2 5 6 7\n3 4 2''') == '4'\nassert solution('''10 9\n0 1\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n7 12\n8 9\n8 10\n8 11\n8 12\n9 10\n9 11\n9 12\n9 13\n10 11\n10 12\n10 13\n10 14\n10 15\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n12 19\n13 14\n13 15\n13 16\n13 17\n13 18\n13 19\n13 20\n13 21\n14 15\n14 16\n14 17\n14 18\n14 19\n14 20\n14 21\n14 22\n14 23\n15 16\n15 17\n15 18\n15 19\n15 20\n15 21\n15 22\n15 23\n15 24\n15 25\n16 17\n16 18\n16 19\n16 20\n16 21\n16 22\n16 23\n16 24\n16 25\n16 26\n17 18\n17 19\n17 20\n17 21\n17 22\n17 23\n17 24\n17 25\n17 26\n17 27\n18 19\n18 20\n18 21\n18 22\n18 23\n18 24\n18 25\n18 26\n18 27\n18 28\n18 29\n19 18\n19 19\n19 20\n19 21\n19 22\n19 23\n19 24\n19 25\n19 26\n19 27\n19 28\n19 29\n19 30\n19 31\n20 19\n20 20\n20 21\n20 22\n20 23\n20 24\n20 25\n20 26\n20 27\n20 28\n20 29\n20 30\n20 31\n20 32\n21 22\n21 23\n21 24\n21 25\n21 26\n21 27\n21 28\n21 29\n21 30\n21 31\n21 32\n21 33\n22 23\n22 24\n22 25\n22 26\n22 27\n22 28\n22 29\n22 30\n22 31\n22 32\n22 33\n22 34\n23 24\n23 25\n23 26\n23 27\n23 28\n23 29\n23 30\n23 31\n23 32\n23 33\n23 34\n23 35\n24 25\n24 26\n24 27\n24 28\n24 29\n24 30\n24 31\n24 32\n24 33\n24 34\n24 35\n25 26\n25 27\n25 28\n25 29\n25 30\n25 31\n25 32\n25 33\n25 34\n25 35\n26 27\n26 28\n26 29\n26 30\n26 31\n26 32\n26 33\n26 34\n26 35\n27 28\n27 29\n27 30\n27 31\n27 32\n27 33\n27 34\n27 35\n28 29\n28 30\n28 31\n28 32\n28 33\n28 34\n28 35\n29 30\n29 31\n29 32\n29 33\n29 34\n29 35\n30 31\n30 32\n30 33\n30 34\n30 35\n31 32\n31 33\n31 34\n31 35\n32 33\n32 34\n32 35\n33 34\n33 35\n34 35\n35 35\n36 36\n36 37\n37 37\n37 38\n37 39\n37 40\n37 41\n38 39\n38 40\n38 41\n38 42\n39 40\n39 41\n39 42\n39 43\n40 41\n40 42\n40 43\n41 42\n41 43\n42 43\n43 43\n44 44\n44 45\n45 45\n45 46\n45 47\n45 48\n45 49\n45 50\n46 47\n46 48\n46 49\n46 50\n47 48\n47 49\n47 50\n48 49\n48 50\n49 50\n50 51\n51 52\n51 53\n51 54\n51 55\n52 53\n52 54\n52 55\n53 54\n53 55\n54 55\n55 56\n55 57\n55 58\n55 59\n55 60\n56 57\n56 58\n56 59\n56 60\n57 58\n57 59\n57 60\n58 59\n58 60\n59 60\n60 61\n61 62\n61 63\n61 64\n62 63\n62 64\n62 65\n63 64\n63 65\n64 65\n65 65\n66 67\n66 68\n66 69\n66 70\n66 71\n67 68\n67 69\n67 70\n68 69\n68 70\n69 70\n70 71\n71 72\n71 73\n71 74\n71 75\n72 73\n72 74\n72 75\n73 74\n73 75\n74 75\n75 76\n76 77\n76 78\n76 79\n75 76\n75 77\n74 78\n74 79\n73 78\n73 79\n73 80\n72 79\n72 80\n72 81\n71 78\n71 79\n71 80\n70 77\n70 78\n70 79\n70 80\n69 77\n69 78\n69 79\n69 80\n68 76\n68 77\n68 78\n68 79\n68 80\n67 76\n67 77\n67 78\n67 79\n67 80\n66 75\n66 76\n66 77\n66 78\n66 79\n66 80\n65 74\n65 75\n65 76\n65 77\n65 78\n65 79\n65 80\n64 73\n64 74\n64 75\n64 76\n64 77\n64 78\n64 79\n64 80\n63 72\n63 73\n63 74\n63 75\n63 76\n63 77\n63 78\n63 79\n63 80\n62 71\n62 72\n62 73\n62 74\n62 75\n62 76\n62 77\n62 78\n62 79\n62 80\n61 70\n61 71\n61 72\n61 73\n61 74\n61 75\n61 76\n61 77\n61 78\n61 79\n61 80\n60 69\n60 70\n60 71\n60 72\n60 73\n60 74\n60 75\n60 76\n60 77\n60 78\n60 79\n60 80\n59 68\n59 69\n59 70\n59 71\n59 72\n59 73\n59 74\n59 75\n59 76\n59 77\n59 78\n59 79\n59 80\n58 69\n58 70\n58 71\n58 72\n58 73\n58 74\n58 75\n58 76\n58 77\n58 78\n58 79\n58 80\n57 68\n57 69\n57 70\n57 71\n57 72\n57 73\n57 74\n57 75\n57 76\n57 77\n57 78\n57 79\n57 80\n56 69\n56 70"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n2\\n1') == 0\nassert solution('2\\n0\\n1') == 1\nassert solution('1\\n2\\n1') == 1\nassert solution('3\\n0\\n1') == 1\nassert solution('3\\n0\\n2') == 2\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\"\n\nimport sys\nsys.path.append(\"..\")\nfrom Test import Test\n\nTest.assert_equals(solution(\"\"), \"\")\nTest.assert_equals(solution(\"1\"), \"0\")\nTest.assert_equals(solution(\"1 2 3\"), \"1\")\nTest.assert_equals(solution(\"1 2 3 4 5 6 7\"), \"2\")\nTest."
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1\\n2\\n2') == '1'\nassert solution('1\\n1\\n1\\n1\\n2\\n2') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3497,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n') == '0'\nassert solution('2 2\\n0 1\\n1 2\\n') == '0'\nassert solution('6 4\\n0 1\\n1 2\\n2 3\\n2 4\\n2 5\\n1 3\\n1 2 3 4 5\\n') == '0'\nassert solution('6 4\\n0 1\\n1 2\\n2 3\\n2 4\\n2 5\\n1 3\\n1 2 3 4 5\\n') == '0'\nassert solution('6 5\\n0 1\\n1 2\\n2 3\\n2 4\\n2 5\\n1 3\\n1 2 3 4 5\\n') == '0'\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == \"106, 107, 71\"\n'''\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1\n50 2 5 C1 L1 C1 U1 C1''') == '106\\n107\\n71'\nassert solution('''1 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '106\\n107\\n71'\n'''\n\n'''"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106\\n107\\n71'\nassert solution('''50 2 5 C1 L1 C1 U1 C1\n50 2 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '107\\n76\\n71'\nassert solution('''50 2 5 C1 L1 C1 U1 C1\n50 2 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '107\\n76\\n71'\nassert solution('''100 200 100 200 200 100\n10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10\n20 20 20 20 20 20 20 20\n10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10\n100 200 100 200 200 100\n10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10\n20 20 20 20 20 20 20 20\n10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10''') == '16\\n100\\n107\\n200\\n110'\n\nassert solution('''50 2 5 C1 L1 C1 U1 C1\n50 2 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106\\n107\\n71'\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106 107 71'\n\nassert solution('''50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n50 1 5"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106 107 71\"\nassert solution(\"\"\"3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106 107 71\"\nassert solution(\"\"\"50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\nnnn1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"100\"\nassert solution(\"2\") == \"101\"\nassert solution(\"3\") == \"103\"\nassert solution(\"4\") == \"104\"\nassert solution(\"5\") == \"105\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"106 107 71\"\nprint(solution(stdin))\n\n@test_performance\n"
    },
    {
        "number": 3498,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == \"106 107 71\"\n\nassert solution(\n'''50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"AA\") == \"51\"\nassert solution(\"AB\") == \"10\"\nassert solution(\"BABA\") == \"21\"\nassert solution(\"BAB\") == \"5\"\nassert solution(\"ABACBA\") == \"56\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"51\"\nassert solution(stdin) == \"51\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"934\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('A') == ''\nassert solution('AA') == ''\nassert solution('AB') == ''\nassert solution('ABA') == ''\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('A') == 1\nassert solution('AA') == 3\nassert solution('AAB') == 5\nassert solution('ABB') == 4\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AA') == 51\nassert solution('BB') == 0\nassert solution('AAAB') == 51\nassert solution('A') == 0\nassert solution('ABBBBBBBBABBB') == 7\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"AA\") == 51\nassert solution(\"AAC\") == 51\nassert solution(\"AAB\") == 51\nassert solution(\"AABCD\") == 51\nassert solution(\"ABAC\") == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('A') == 'A'\nassert solution('AA') == 'AA'\nassert solution('AAA') == 'AA'\nassert solution('ABAB') == 'AAA'\n"
    },
    {
        "number": 3499,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"1\"\nassert solution(\"bbb\") == \"1\"\nassert solution(\"aaa\") == \"1\"\nassert solution(\"bbbba\") == \"10\"\nassert solution(\"bbbbbbbbbbbba\") == \"122\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"no ties\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == 'no ties'\nassert solution('''14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\nSample Output:\n1 2\n''') == '1 2'\n\nassert solution('''3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == '1 2'\n\nassert solution('''1 19 43 50 72\n3 29 45 56 68\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == '1 2'\n\nassert solution('''1 19 43 50 72\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == '1 2'"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\n\"\"\") == \"\"\"no ties\"\"\"\n\nassert solution(\n\"\"\"\n1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'no ties'\n\n\"\"\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 1\\n1 2') == 'no ties'\nassert solution('1\\n2') == '1 2'\nassert solution('1\\n1\\n1\\n1\\n1') == '1 1'\nassert solution('1\\n1\\n2\\n1\\n1\\n1\\n1') == '1 1'\nassert solution('1\\n2\\n2\\n1\\n2\\n1\\n1\\n1') == '1 1'\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"4 2\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"no ties\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"no ties\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"no ties\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == 'no ties'\nassert solution('3 29 45 56 68') == '1 2'\nassert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63') == '1 2'\nassert solution('14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68') == '1 2'\nassert solution('14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n1 19 43 50 72') == '1 2'\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3\\n2 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == '1 2'\nassert solution('3\\n3\\n1 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == '3 2'\nassert solution('1\\n1\\n2 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == 'no ties'\nassert solution('1\\n1\\n1 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == '1 1'\nassert solution('3\\n3\\n1 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == 'no ties'\n"
    },
    {
        "number": 3500,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == '1 2'\n\"\"\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n1 2 1\n2 3 3\n4 4 4''') == '0'\nassert solution('''3\n1 2 1\n2 3 3\n4 4 4''') == '1'\nassert solution('''3\n1 2 1\n2 3 3\n4 4 4''') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 1 2\n1 2 3''') == '1'\nassert solution('''4\n6 2 3 4 1 5\n4 2 1 3 4 5\n3 2 1 4 5 6\n1 2 4 3 5 6''') == '3'\nassert solution('''5\n7 2 4 5 6 3 1\n2 4 1 5 6 3 7\n3 4 1 5 6 3 7\n4 1 5 6 3 7 8\n5 1 5 6 3 7 8''') == '2'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('3\\n1 2 3') == '1'\nassert solution('3\\n3 2 1') == '1'\nassert solution('3\\n1 2 3') == '0'\nassert solution('3\\n2 1 3') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n1 2 3\n1 2 3\n1 2 3''') == '1'\nassert solution('''4\n4 4 4 4\n4 4 4 4\n4 4 4 4\n4 4 4 4''') == '0'\nassert solution('''4\n4 4 4 4\n4 4 4 4\n4 4 4 4\n4 4 4 4''') == '1'\nassert solution('''3\n4 2 2\n2 4 2\n2 2 4''') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n3 1 2''') == '2'\nassert solution('''3\n3 2 1\n1 2 3\n1 1 3''') == '2'\nassert solution('''4\n4 4 4 4\n4 4 4 4\n4 4 4 4''') == '1'\nassert solution('''6\n5 5 4 4 3 2 1\n2 2 3 3 3 3\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '8'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('3\\n1 2 3') == '0'\nassert solution('3\\n2 3 1') == '1'\nassert solution('3\\n1 3 2') == '2'\nassert solution('3\\n1 3 2\\n2 1 3') == '2'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''3\n3 2 1\n1 2 3\n1 2 3\n''') == '3'\nassert solution('''4\n3 2 1 4\n1 2 3 4\n1 2 3 4\n''') == '3'\nassert solution('''5\n3 2 1 4 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '0'\nassert solution('''4\n3 2 1 4\n1 2 3 4\n1 2 3 4\n''') == '3'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\nassert solution(\n'''\n3\n3 1 2\n1 2 3\n1 2 3\n''') == '6'\nassert solution(\n'''\n5\n2 3 1 2 3\n3 1 2 3 2\n1 2 3 2 2\n2 1 3 2 2\n1 2 2 3 2\n''') == '2'\nassert solution(\n'''\n1\n1\n1\n''') == '0'\nassert solution(\n'''\n10\n5 3 2 3 3 1 2 2 2 2 1 3 3 1 4\n1 3 4 4 4 3 1 2 3 1 4 1 4 2 4 1\n1 2 3 3 4 1 2 3 4 1 2 3 1 4 2 4\n1 1 2 3 3 4 2 1 2 3 1 4 1 4 2 4\n1 2 3 4 1 2 3 4 1 2 3 1 4 2 4 2\n1 1 2 3 3 4 2 1 2 3 1 4 1 4 2 4 3\n1 1 2 3 3 4 2 1 2 3 1 4 1 4 2 4 3 3\n1 1 2 3 3 4 2 1 2 3 1 4 1 4 2 4 3 3 4\n1 1 2 3 3 4 2 1 2 3 1 4 1 4 2 4 3 3 4 4\n1 1 2 3 3 4 2 1 2 3 1 4 1 4 2 4 3 3 4 4 4\n1 1 2 3 3 4 2 1 2 3 1 4 1 4 2 4 3 3 4 4 4 4\n1 1 2 3 3 4 2 1 2 3 1 4 1 4 2 4 3 3 4 4 4 4 4\n''') == '24'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1 2 3') == '0'\nassert solution('2\\n1 2 3') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('1\\n1 2 3\\n1 2 3') == '0'\nassert solution('3\\n1 2 3\\n1 2 3') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == '0'\nassert solution('''3\n1 2 3\n1 2 3\n1 2 3''') == '6'\nassert solution('''2\n2 1''') == '1'\nassert solution('''3\n1 2 3\n2 1 3''') == '1'\nassert solution('''3\n2 1 3\n2 1 3''') == '2'\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '0.25'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == '0'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == '0.25'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16') == '0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n1 5 4\\n0 1 4\\n0 0 4\\n0 0 4\\n1 1 4\\n0 1 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4\\n0 0 4"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2 3\n6 2 3\n10 2 3\n16 3 4''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n'''"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 3\n6 2 3\n10 2 3\n16 3 4''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n'''\nThe first line contains an integer $n$ describing the number of traffic lights, $1 \\le n \\le 500$. The following $n$ lines contain three integers $x$, $r$, and $g$ describing a traffic light, where $x$ ($1 \\le x \\le 10^5$) is the position of the light along Main Street in meters, and $r$ and $g$ ($0 \\le r, g$ and $1 \\le r+g \\le 100$) are the durations in seconds of the red and green portions of the light\u2019s period (so the light is red from time $0$ to $r$, from time $r+g$ to $2r+g$, and so on).\n\nThe west end of Main Street is at position $0$, and the lights are listed in order of strictly increasing position.\n\n-----Output-----\nFor each of the $n$ lights, output a line containing the probability that this light will be the first red light an \u201cideal\u201d car hits. Then output a line containing the probability that an \u201cideal\u201d car makes it all the way without stopping. Your answers should have an absolute error of at most $10^{-6}$.\n\n-----Example-----\nInput:\n3\n1 2 3\n6 2 3\n10 2 3\n16 3 4\nOutput:\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n1\n'''\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n0\\n2\\n3\\n4\\n4\\n3\\n2\\n1\\n0\\n0') == '0.4\\n0\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('2\\n1\\n2\\n2\\n1\\n0\\n2\\n3\\n4\\n4\\n4\\n3\\n2\\n1\\n0\\n0') == '0\\n0\\n0\\n0\\n0'\nassert solution('2\\n1\\n2\\n2\\n1\\n0\\n2\\n3\\n4\\n4\\n4\\n3\\n2\\n1\\n0\\n0') == '0\\n0\\n0\\n0'\nassert solution('2\\n1\\n2\\n2\\n1\\n0\\n2\\n3\\n4\\n4\\n4\\n3\\n2\\n1\\n0\\n0') == '0\\n0\\n0'\nassert solution('2\\n1\\n2\\n2\\n1\\n0\\n2\\n3\\n4\\n4\\n4\\n3\\n2\\n1\\n0\\n0') == '0\\n0\\n0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4') == '0.4'\nassert solution('6\\n2\\n3\\n4\\n5\\n6') == '0'\nassert solution('10\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '0'\nassert solution('16\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '0'\nassert solution('16\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16') == '0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n1\n1\n1\n\"\"\") == \"0.5\"\nassert solution(\"\"\"\n2\n2\n2\n2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n3\n3\n3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n4\n4\n4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n5\n5\n5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\") == \"0.0\"\nassert solution(\"0 2 4\") == \"0.0\"\nassert solution(\"2 0 0\") == \"0.0\"\nassert solution(\"6 2 3\") == \"0.94375\"\nassert solution(\"10 2 3\") == \"0.94375\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2 3\n6 2 3\n10 2 3\n16 3 4''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('''1 2 3\n5 2 3\n10 2 3\n16 3 4''') == '0\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('''1 2 3\n1 2 3\n10 2 3\n16 3 4''') == '0\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n'''\n'''"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(INPUT))\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('''5\n3 5\n3 5\n4 5\n-1 -6\n-1 -6''') == 'impossible'\nassert solution('''2\n1 1\n1 1''') == '1 + 1 = 2'\nassert solution('''3\n2 3\n2 3\n2 3''') == 'impossible'\nassert solution('''3\n1 2\n2 1\n1 2''') == '1 + 2 = 3'\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 5\n3 3\n4 5\n-1 -6\n''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1 + 1 = 2'\nassert solution('2\\n-2\\n1') == 'impossible'\nassert solution('1\\n-1') == 'impossible'\nassert solution('1\\n2') == 'impossible'\nassert solution('1\\n1\\n1') == 'impossible'\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1 5\n3 3\n4 5\n-1 -6\n\"\"\") == \"\"\"\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n\"\"\"\n\nassert solution(\"\"\"\n3\n1 4\n-3 -1\n-2 -4\n\"\"\") == \"\"\"\nimpossible\nimpossible\nimpossible\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 4\n1 3\n-1 -4\n-1 -3\n\"\"\") == \"\"\"\n1 + 4 = 5\n1 - 3 = 2\n-1 - 4 = -3\n-1 - 3 = -2\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 3\n1 4\n-1 -3\n-1 -4\n\"\"\") == \"\"\"\n1 + 3 = 4\n1 - 4 = -3\n-1 - 3 = -2\n-1 - 4 = 3\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n1 3\n2 1\n2 3\n3 1\n3 2\n\"\"\") == \"\"\"\n1 + 2 = 3\n1 - 3 = 0\n2 + 1 = 3\n2 - 3 = 0\n3 + 1 = 3\n3 - 2 = 1\n\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\nassert solution('''1 5\n3 3\n4 5\n-1 -6\n1 1\n1 1\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\nimpossible'''\nassert solution('''1 5\n3 3\n4 5\n-1 -6\n1 1\n1 1\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\nimpossible'''\nassert solution('''1 5\n3 3\n4 5\n-1 -6\n1 1\n1 1\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\nimpossible'''\nassert solution('''1 5\n3 3\n4 5\n-1 -6\n1 1\n1 1\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\nimpossible'''\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1 + 2 = 3\"\nassert solution(\"3 3\") == \"3 * 3 = 9\"\nassert solution(\"4 5\") == \"4 - 5 = -1\"\nassert solution(\"-1 -6\") == \"1 - 6 = -5\"\nassert solution(\"\") == \"impossible\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\n\nassert solution(\"3\\n1 2\\n2 1\") == \"impossible\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n3 3\\n4 5\") == \"1 + 2 = 3\\n3 * 3 = 9\\n4 - 5 = -1\"\nassert solution(\"1\\n1 1\\n1 1\") == \"impossible\"\nassert solution(\"2\\n1 2\\n3 3\\n4 5\") == \"1 + 2 = 3\\n3 * 3 = 9\\n4 - 5 = -1\"\nassert solution(\"1\\n1 1\\n1 1\") == \"impossible\"\nassert solution(\"2\\n1 2\\n3 3\\n4 5\") == \"1 + 2 = 3\\n3 * 3 = 9\\n4 - 5 = -1\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4\n1 5\n3 3\n4 5\n-1 -6\"\"\") == \"\"\"1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\"\"\"\nassert solution(\"\"\"3\n1 2\n1 2\n2 2\"\"\") == \"\"\"impossible\"\"\"\nassert solution(\"\"\"1\n1 1\n\"\"\") == \"\"\"impossible\"\"\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0\\n'\nassert solution('''3 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '0\\n1\\n4\\n6\\n'\nassert solution('''2 2\n1 1\n2 1\n1 2''') == '1\\n2\\n0\\n'\nassert solution('''1 1\n1 1\n1 1''') == '0\\n'\nassert solution('''1 1\n1 1\n1 1''') == '0\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '''4\n1\n4\n6\n0\n'''\n\nassert solution('''9 9\n1 3\n1 6\n1 7\n1 8\n2 8\n2 9\n3 9\n3 8\n3 7\n3 6\n3 4\n3 5\n4 5\n4 6\n4 7\n4 8\n5 8\n5 9\n6 8\n6 9\n6 7\n6 6\n6 5\n6 4\n6 3\n7 8\n7 9\n7 7\n7 6\n7 5\n7 4\n7 3\n7 2\n7 1\n7 0\n8 9\n8 8\n8 7\n8 6\n8 5\n8 4\n8 3\n8 2\n8 1\n8 0\n9 8\n9 7\n9 6\n9 5\n9 4\n9 3\n9 2\n9 1\n9 0\n''') == '''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0\\n'\nassert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0\\n'\nassert solution('''5 1\n10 1\n5 2\n''') == '1\\n0\\n'\nassert solution('''5 2\n10 1\n5 2\n''') == '1\\n0\\n'\nassert solution('''5 1\n10 1\n5 2\n10 2\n5 3\n10 3\n5 4\n10 4\n5 5\n10 5\n5 6\n10 6\n5 7\n10 7\n5 8\n10 8\n5 9\n10 9\n5 10\n10 10\n5 11\n10 11\n5 12\n10 12\n5 13\n10 13\n5 14\n10 14\n5 15\n10 15\n5 16\n10 16\n5 17\n10 17\n5 18\n10 18\n5 19\n10 19\n5 20\n10 20\n5 21\n10 21\n5 22\n10 22\n5 23\n10 23\n5 24\n10 24\n5 25\n10 25\n5 26\n10 26\n5 27\n10 27\n5 28\n10 28\n5 29\n10 29\n5 30\n10 30\n5 31\n10 31\n5 32\n10 32\n5 33\n10 33\n5 34\n10 34\n5 35\n10 35\n5 36\n10 36\n5 37\n10 37\n5 38\n10 38\n5 39\n10 39\n5 40\n10 40\n5 41\n10 41\n5 42\n10 42\n5 43\n10 43\n5 44\n10 44\n5 45\n10 45\n5 46\n10 46\n5 47\n10 47\n5 48\n10 48\n5 49\n10 49\n5 50\n10 50\n5 51\n10 51\n5 52\n10 52\n5 53\n10 53\n5 54\n10 54\n5 55\n10 55\n5 56\n10 56\n5 57\n10 57\n5 58\n10 58\n5 59\n10 59\n5 60\n10 60\n5 61\n10 61\n5 62\n10 62\n5 63\n10 63\n5 64\n10 64\n5 65\n10 65\n5 66\n10 66\n5 67\n10 67\n5 68\n10 68\n5 69\n10 69\n5 70\n10 70\n5 71\n10 71\n5 72\n10 72\n5 73\n10 73\n5 74\n10 74\n5 75\n10 75\n5 76\n10 76\n5 77\n10 77\n5 78\n10 78\n5 79\n10 79\n5 80\n10 80\n5 81\n10 81\n5 82\n10 82\n5 83\n10 83\n5 84\n10 84\n5 85\n10 85\n5 86\n10 86\n5 87\n10 87\n5 88\n10 88\n5 89\n10 89\n5 90\n10 90\n5 91\n10 91\n5 92\n10 92\n5 93\n10 93\n5 94\n10 94\n5 95\n10 95\n5 96\n10 96\n5 97\n10 97\n5 98\n10 98\n5 99\n10 99\n5 100\n10 100\n5 101\n10 101\n5 102\n10 102\n5 103\n10 103\n5 104\n10 104\n5 105\n10 105\n5 106\n10 106\n5 107\n10 107\n5 108\n10 108\n5 109\n10 109\n5 110\n10 110\n5 111\n10 111\n5 112\n10 112\n5 113\n10 113\n5 114\n10 114\n5 115\n10 115\n5 116\n10 116\n5 117\n10 117\n5 118\n10 118\n5 119\n10 119\n5 120\n10 120\n5 121\n10 121\n5 122\n10 122\n5 123\n10 123\n5 124\n10 124\n5 125\n10 125\n5 126\n10 126\n5 127\n10 127\n5 128\n10 128\n5 129\n10 129\n5 130\n10 130\n5 131\n10 131\n5 132\n10 132\n5 133\n10 133\n5 134\n10 134\n5 135\n10 135\n5 136\n10 136\n5 137\n10 137\n5 138\n10 138\n5 139\n10 139\n5 140\n10 140\n5 141\n10 141\n5 142\n10 142\n5 143\n10 143\n5 144\n10 144\n5 145\n10 145\n5 146\n10 146\n5 147\n10 147\n5 148\n10 148\n5 149\n10 149\n5 150\n10 150\n5 151\n10 151\n5 152\n10 152\n5 153\n10 153\n5 154\n10 154\n5 155\n10 155\n5 156\n10 156\n5 157\n10 157\n5 158\n10 158\n5 159\n10 159\n5 160\n10 160\n5 161\n10 161\n5 162\n10 162\n5 163\n10 163\n5 164\n10 164\n5 165\n10 165\n5 166\n10 166\n5 167\n10 167\n5 168\n10 168\n5 169\n10 169\n5 170\n10 170\n5 171\n10 171\n5 172\n10 172\n5 173\n10 173\n5 174\n10 174\n5 175\n10 175\n5 176\n10 176\n5 177\n10 177\n5 178\n10 178\n5 179\n10 179\n5 180\n10 180\n5 181\n10 181\n5 182\n10 182\n5 183\n10 183\n5 184\n10 184\n5 185\n10 185\n5 186\n10 186\n5 187\n10 187\n5 188\n10 188\n5 189\n10 189\n5 190\n10 190\n5 191\n10 191\n5 192\n10 192\n5 193\n10 193\n5 194\n10 194\n5 195\n10 195\n5 196\n10 196\n5 197\n10 197\n5 198\n10 198\n5"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0'\nassert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0'\nassert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0'\nassert solution('''3 2\n1 2\n2 1\n1 1\n3 1\n1 2\n3 1\n1 1\n''') == '2\\n1\\n1\\n0\\n0\\n0'\nassert solution('''3 2\n1 2\n2 1\n1 1\n3 1\n1 2\n3 1\n1 1\n''') == '2\\n1\\n1\\n0\\n0\\n0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'\nassert solution('2 7\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'\nassert solution('2 7\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'\nassert solution('2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'\nassert solution('2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n2 3\\n1 3\") == \"0\\n1\\n4\"\nassert solution(\"1 2\\n2 3\\n1 3\") == \"4\\n1\\n4\"\nassert solution(\"1 2\\n2 3\\n1 3\") == \"0\\n1\\n4\"\nassert solution(\"1 2\\n2 3\\n1 3\") == \"4\\n1\\n4\"\nassert solution(\"1 2\\n2 3\\n1 3\") == \"0\\n1\\n4\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n\"\"\") == \"\"\"4\n1\n4\n6\n0\n\"\"\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0'\nassert solution('''5 2\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0'\n'''\nassert solution('''1 1\n1 1\n1 1''') == '0'\n'''\nassert solution('''5 2\n1 8\n1 3\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0'\nassert solution('''3 3\n3 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3''') == '0\\n0\\n0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3 4') == '0 1\\n'\nassert solution('2 3\\n3 2\\n2 3\\n1 2\\n1 2') == '0 0\\n1 1\\n'\nassert solution('2 3\\n2 1\\n2 3\\n1 2\\n1 2\\n3 4') == '0\\n1\\n'\nassert solution('2 3\\n3 2\\n2 3\\n3 2\\n2 3\\n3 2\\n1 2\\n1 2') == '0 0\\n2 1\\n'\nassert solution('5 3\\n3 2\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n3 2\\n1 2\\n1 2') == '0 0\\n2 1\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"[4, 1, 4, 6, 0]\"\nassert solution(stdin) == \"[1, 4, 6, 0]\"\nassert solution(stdin) == \"[4, 1, 4, 6]\"\nassert solution(stdin) == \"[0]\"\nassert solution(stdin) == \"[6, 0]\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 3 4''') == '4'\nassert solution('''3\n1 2 3''') == '6'\nassert solution('''8\n1 2 3 4 5 6 7 8''') == '49'\nassert solution('''12\n-6 -3 -1 0 1 2 3 4 5 6 7 8 9 10 11''') == '7961478'\nassert solution('''20\n-19 -18 -17 -16 -15 -14 -13 -12 -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1''') == '1'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('2 3 1') == '0'\nassert solution('1 2 2') == '2'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2 3') == '3'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == 4\nassert solution('''\n4\n-3 -2 -1 0\n''') == 0\nassert solution('''\n4\n-4 -2 3 4\n''') == 0\nassert solution('''\n4\n0 0 0 0\n''') == 1\nassert solution('''\n4\n0 0 0 0\n''') == 1\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2 3 4') == '4'\nassert solution('4\\n-50000 -50000 -50000 50000\\n0 0 0 0') == '0'\nassert solution('4\\n1 2 3 4\\n-30000 -30000 -30000 30000\\n0 0 0 0') == '1'\n\"\"\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == 4\n\"\"\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 2\") == \"0\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 2 2\") == \"0\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 3 4''') == '4'\n''')\nassert solution('''4 1 2 3''') == '1'\nassert solution('''6 4 4 2 6''') == '5'\nassert solution('''1 4 2 4 3''') == '3'\nassert solution('''1 2 1 2''') == '1'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4\\n') == '4'\nassert solution('1 2 3\\n') == '6'\nassert solution('1 2 3\\n4') == '24'\nassert solution('1 2 3\\n4 5') == '6'\nassert solution('1 2 3\\n4 5 6') == '216'\n"
    },
    {
        "number": 3505,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2\n1 2 3\n''') == '4'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"3 30 10\\n20 30\\n30 30\") == \"0 0\"\nassert solution(\"3 30 10\\n20 30\\n30 30\\n20 60\") == \"4 3\"\nassert solution(\"3 30 10\\n20 30\\n30 30\\n10 50\") == \"4 3\"\nassert solution(\"3 30 10\\n20 30\\n30 30\\n10 50\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('1 3 2\\n20 60\\n50 90') == '1 1'\nassert solution('1 3 2\\n20 60\\n50 90\\n50 60\\n40 40\\n30 30\\n20 60\\n50 90') == '1 1'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90\\n') == '4 3'\nassert solution('1 19 2\\n20 40\\n50 90\\n') == '4 2'\nassert solution('1 19 2\\n20 40\\n50 90\\n') == '4 2'\nassert solution('1 19 2\\n20 40\\n50 90\\n') == '4 2'\nassert solution('1 19 2\\n20 40\\n50 90\\n') == '4 2'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n1 19 2\n20 60\n50 90\n''') == '4 3'\n\nassert solution(\n'''\n5 20 2\n10 30\n30 50\n15 60\n40 70\n''') == '2 1'\n\nassert solution(\n'''\n5 60 1\n20 50\n20 30\n10 40\n20 40\n20 30\n15 50\n''') == '0 2'\n\nassert solution(\n'''\n0 10 1\n10 30\n30 50\n15 60\n''') == '2 1'\n\nassert solution(\n'''\n5 25 1\n20 30\n30 50\n15 60\n40 70\n''') == '0 2'"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '4 3'\nassert solution('''1 31 2\n20 60\n50 90\n0 45\n''') == '1 0'\nassert solution('''1 31 2\n20 60\n50 90\n0 45\n''') == '1 0'\nassert solution('''1 31 2\n20 60\n50 90\n45 45\n''') == '2 2'\nassert solution('''1 31 2\n20 60\n50 90\n45 45\n45 45\n''') == '2 2'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('2 16 3\\n20 10\\n50 50') == '5 1'\nassert solution('5 8 6\\n6 4\\n6 1\\n6 7\\n8 1\\n7 1\\n4 1') == '9 2'\nassert solution('6 7 2\\n5 2\\n7 2\\n3 2\\n4 1\\n5 1\\n5 4\\n5 6\\n5 7') == '10 4'\nassert solution('7 6 5\\n6 1\\n5 1\\n6 1\\n5 1\\n7 1\\n7 3') == '10 5'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('2 31 2\\n20 60\\n50 90') == '0 0'\nassert solution('1 31 2\\n20 50\\n50 90') == '4 3'\nassert solution('1 31 2\\n20 40\\n50 90') == '0 0'\nassert solution('1 31 2\\n20 40\\n50 40') == '2 0'\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 31 2''') == '4 3'\n'''1 31 2'''\nassert solution('''1 31 2''') == '4 3'\n'''1 31 2'''\nassert solution('''3 4 2''') == '-1 -1'\n'''3 4 2'''\nassert solution('''1 5 8''') == '1 2'\n'''1 5 8'''\nassert solution('''2 3 4''') == '2 2'\n'''2 3 4'''\n"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == \"4 3\"\nassert solution('''1 7\n20 60\n50 90''') == \"5 7\"\nassert solution('''1 7\n20 60\n50 90\n10 30\n15 45\n20 60\n25 60\n30 70\n35 85\n40 90\n50 95\n''') == \"7 7\"\nassert solution('''1 7\n20 60\n50 90\n10 30\n15 45\n20 60\n25 60\n30 70\n35 85\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n''') == \"9 60\"\nassert solution('''1 7\n20 60\n50 90\n10 30\n15 45\n20 60\n25 60\n30 70\n35 85\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25 40\n30 60\n35 80\n40 90\n50 95\n7 40\n8 60\n10 50\n15 40\n20 40\n25"
    },
    {
        "number": 3506,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''20 60\n50 90''') == '4 3'\nassert solution('''1 31 2\n20 60''') == '1 3'\nassert solution('''1 1 2\n20 60''') == '3 1'\nassert solution('''1 3 2\n20 60''') == '3 0'\nassert solution('''1 1 2\n20 60\n40 40''') == '3 1'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\nassert stdin == '2 2 1'\nassert solution(stdin) == '6'\n\nassert stdin == '4 4 2'\nassert solution(stdin) == '12'"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '6'\n\"\"\"\n\n\"\"\"\n\n2 2 1\n3\n\n\"\"\""
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2 1''') == '3'\nassert solution('''2 2 3''') == '0'\nassert solution('''2 2 3''') == '0'\nassert solution('''2 3 3''') == '0'\nassert solution('''4 2 1''') == '3'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '6'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n\nSample Input:\n3 3 2\nSample Output:\n6\n\"\"\"\n\n\"\"\"\n\"\"\""
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"6\"\n\nprint(solution(stdin))\n'''\n'''\nSolution\n'''"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('3 2 1') == '1'\nassert solution('3 2 3') == '2'\nassert solution('6 2 3') == '3'\nassert solution('7 2 3') == '0'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '6'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '6'\n"
    },
    {
        "number": 3507,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('1 1 1') == '0'\nassert solution('10 10 10') == '1'\nassert solution('0 0 1') == '0'\nassert solution('10 10 1') == '1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5\n1341 2412 1200 3112 2391'''\n) == '3 1'\n\nassert solution(\n'''3\n1 2 3'''\n) == '0 1'\n\nassert solution(\n'''7\n1 1 1 1 1 1 1'''\n) == '1 1'\n\nassert solution(\n'''5\n1 2412 1200 3112 2391'''\n) == '3 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n5\n1341 2412 1200 3112 2391\n''') == '3 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\n'''\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\n\"\"\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\nassert solution('''7\n3672 2531 4373 4367 4368 832 4372''') == '3 1'\nassert solution('''11\n1017 1043 908 6891 1125 988 1125''') == '3 1'\nassert solution('''10\n45700 29900 52432 5818 3499 43079 4820 58945''') == '5 1'\nassert solution('''10\n42641 9820 6699 30254 52121 6705 22003''') == '3 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\nassert solution('''5\n1000 1000 1000 1000 1000''') == '0 1'\nassert solution('''100\n1000 1000 1000 1000 1000''') == '0 1'\nassert solution('''1000\n1001 1000 1001 1000''') == '0 1'\nassert solution('''100\n99900 9900 9900 9000 9000''') == '5 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391''') == '3 1'\nassert solution('''6\n1214 1747 456 634 4321 9989\n''') == '7 9'\nassert solution('''7\n1747 456 634 4321 9989 1214\n''') == '1 7'\nassert solution('''8\n1747 456 634 4321 9989 1214 1341\n''') == '2 1'\nassert solution('''9\n1747 456 634 4321 9989 1214 1341 2412\n''') == '3 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"13 41\\n2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"13 51\\n2412 1200 3112 2391\") == \"2 2\"\nassert solution(\"13 51\\n2412 1200 3112 2391\") == \"2 2\"\nassert solution(\"13 51\\n2412 1200 3112 2391\") == \"2 2\"\nassert solution(\"13 51\\n2412 1200 3112 2391\") == \"2 2\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2 1\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4''') == \"6\"\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == \"6\"\nassert solution('''5 5\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4''') == \"6\"\nassert solution('''20 19\n6 6\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n2 4 5\n4 2 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n4 5 5\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4''') == '6'\n\nassert solution('''4 10\n5 4\n2 1 1\n3 4 1\n3 5 1\n4 1 4\n1 1 1\n2 2 3\n1 1 1\n2 3 5\n2 3 5\n3 2 1\n2 2 2\n3 1 3\n2 3 2\n2 2 3\n3 1 3\n1 2 3\n2 1 3\n2 2 3\n1 3 2\n2 2 3''') == '10'\n\nassert solution('''1 3\n3 1\n1 1\n1 2\n1 3\n2 1\n2 3\n2 3\n3 1\n1 2\n3 2\n2 3\n3 3\n3 3\n2 2\n2 1\n3 3\n3 3\n2 3\n1 3\n2 2\n3 2\n1 3\n3 2\n3 2\n2 3\n3 2\n1 3\n2 3\n1 3\n3 2\n2 3\n2 3\n1 3\n3 2\n2 3\n3 2\n1 3\n2 3\n2 3\n1 3\n3 2\n2 3\n1 3\n2 3\n2 3\n1 3\n3 2\n2 3\n3 2\n1 3\n2 3\n2 3\n1 3\n2 3\n1 3\n3 2\n1 3\n2 3\n1 3\n2 3\n3 2\n1 3\n2 3\n1 3\n3 2\n1 3\n2 3\n3 2\n1 3\n3 2\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n3 2\n1 3\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n1 3\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n1 3\n3 2\n1 3\n3 2\n3 2\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n1 3\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n1 3\n3 2\n3 2\n1 3\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n3 2\n1 3\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n1 3\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n1 3\n3 2\n3 2\n3 2\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n3 2\n1 3\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n3 2\n1 3\n1 3\n3 2\n3 2\n3 2\n1 3\n1 3\n1 3\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4''') == '6'\n\nassert solution('''3 10\n2 3 4\n2 3 5\n3 2 4\n2 3 6\n2 3 5''') == '4'\n\nassert solution('''1 10\n2 3 4\n2 3 5\n3 2 4\n2 3 6\n2 3 5''') == '1'\n\nassert solution('''1 10\n2 3 4\n2 3 5\n3 2 4\n2 3 6\n2 3 5''') == '0'\n\nassert solution('''1 10\n2 3 4\n2 3 5\n3 2 4\n2 3 6\n2 3 5''') == '3'"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4''') == '6'\n\nassert solution('''10 30\n3 3\n1 1 1\n2 2 1\n3 1 1''') == '2'\n\nassert solution('''10 40\n5 7\n1 5 1\n1 7 1\n2 1 1\n2 7 2\n2 6 1\n3 3 4\n4 1 3\n4 2 1\n4 3 1''') == '5'\n\nassert solution('''10 30\n4 3\n1 1 1\n2 2 1\n3 1 1\n4 1 1\n5 1 1\n5 1 1\n5 1 1''') == '2'\n\nassert solution('''10 30\n3 3\n1 1 1\n2 2 1\n3 1 1\n4 1 1\n5 1 1\n5 1 1\n5 1 1''') == '2'"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 20') == '6'\nassert solution('5 10') == '1'\nassert solution('15 25') == '6'\nassert solution('100 100') == '0'\nassert solution('100100') == '1'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 20\") == \"6\"\n\nassert solution(\"1000 1000\") == \"0\"\n\nassert solution(\"1 10\") == \"9\"\n\nassert solution(\"10 30\") == \"34\"\n\nassert solution(\"1 10 2\") == \"5\""
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 20\") == \"6\"\nassert solution(\"100 100\") == \"0\"\nassert solution(\"10 20\") == \"6\"\nassert solution(\"10 40\") == \"8\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 20') == '6'\nassert solution('100 200') == '111'\nassert solution('2 10') == '9'\nassert solution('5 10') == '10'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 3509,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 20''') == '6'\nassert solution('''10 10''') == '0'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''2 3''') == '3'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1'\nassert solution('2\\n2 b\\n1 a') == '0 -1'\nassert solution('2\\n2 ab\\n1 b') == '-1 0'\nassert solution('2\\n2 ab\\n1 b\\n1 c') == '0 -1'\nassert solution('3\\n3 abc\\n1 ab\\n1 ac') == '-1 -1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n2 ab\n1 b\n''') == '0 1'\nassert solution('''2\n2 ab b\n1 b\n''') == '0 1'\nassert solution('''4\n4 a\n2 ab\n1 b\n3 c\n2 ab\n3 b\n''') == '-1 0'\nassert solution('''4\n4 a\n2 ab\n3 b\n3 c\n2 ab\n3 b\n''') == '-1 0'\nassert solution('''6\n6 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n4 d\n5 a\n2 ab\n3 b\n3 c\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"2 a b c\") == \"\"\nassert solution(\"2 b\") == \"\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ab\\nb\\n') == '0 1'\nassert solution('b') == '-1 0'\nassert solution('bb') == '-1 -1'\nassert solution('bba') == '0 -1'\nassert solution('bab') == '1 -1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 ab b\n1 b\n''') == '0 1\\n-1 0'\nassert solution('''3\n2 ab b c\n1 b\n2 b\n3 b\n''') == '1 1\\n0 -1'\nassert solution('''4\n2 ab c d\n1 b\n2 b\n3 b\n4 b\n''') == '1 2\\n0 -1'\nassert solution('''5\n2 ab c d e\n1 b\n2 b\n3 b\n4 b\n5 b\n''') == '1 2\\n0 -1'\nassert solution('''6\n2 ab c d e f\n1 b\n2 b\n3 b\n4 b\n5 b\n6 b\n''') == '1 2\\n0 -1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2 ab b\n1 b''') == '0 1\\n-1 0'\nassert solution('''2\n2 ab b\n1 b''') == '0 1\\n-1 0'\nassert solution('''5\n3 ab cd ef gh\n4 cb g\n5 e\n6 cb g\n7 ab f\n8 e\n9 ab f\n10 ab\n11 e\n12 ab\n13 cd\n14 gh\n15 cd\n16 f\n17 ab\n18 cd\n19 gh\n20 f\n21 ab\n22 cd\n23 gh\n24 f\n25 ab\n26 cd\n27 gh\n28 f\n29 ab\n30 cd\n31 gh\n32 f\n33 ab\n34 cd\n35 gh\n36 f\n37 ab\n38 cd\n39 gh\n40 f\n41 ab\n42 cd\n43 gh\n44 f\n45 ab\n46 cd\n47 gh\n48 f\n49 ab\n50 cd\n51 gh\n52 f\n53 ab\n54 cd\n55 gh\n56 f\n57 ab\n58 cd\n59 gh\n60 f\n61 ab\n62 cd\n63 gh\n64 f\n65 ab\n66 cd\n67 gh\n68 f\n69 ab\n70 cd\n71 gh\n72 f\n73 ab\n74 cd\n75 gh\n76 f\n77 ab\n78 cd\n79 gh\n80 f\n81 ab\n82 cd\n83 gh\n84 f\n85 ab\n86 cd\n87 gh\n88 f\n89 ab\n90 cd\n91 gh\n92 f\n93 ab\n94 cd\n95 gh\n96 f\n97 ab\n98 cd\n99 gh\n100 f\n101 ab\n102 cd\n103 gh\n104 f\n105 ab\n106 cd\n107 gh\n108 f\n109 ab\n110 cd\n111 gh\n112 f\n113 ab\n114 cd\n115 gh\n116 f\n117 ab\n118 cd\n119 gh\n120 f\n121 ab\n122 cd\n123 gh\n124 f\n125 ab\n126 cd\n127 gh\n128 f\n129 ab\n130 cd\n131 gh\n132 f\n133 ab\n134 cd\n135 gh\n136 f\n137 ab\n138 cd\n139 gh\n140 f\n141 ab\n142 cd\n143 gh\n144 f\n145 ab\n146 cd\n147 gh\n148 f\n149 ab\n150 cd\n151 gh\n152 f\n153 ab\n154 cd\n155 gh\n156 f\n157 ab\n158 cd\n159 gh\n160 f\n161 ab\n162 cd\n163 gh\n164 f\n165 ab\n166 cd\n167 gh\n168 f\n169 ab\n170 cd\n171 gh\n172 f\n173 ab\n174 cd\n175 gh\n176 f\n177 ab\n178 cd\n179 gh\n180 f\n181 ab\n182 cd\n183 gh\n184 f\n185 ab\n186 cd\n187 gh\n188 f\n189 ab\n190 cd\n191 gh\n192 f\n193 ab\n194 cd\n195 gh\n196 f\n197 ab\n198 cd\n199 gh\n200 f\n201 ab\n202 cd\n203 gh\n204 f\n205 ab\n206 cd\n207 gh\n208 f\n209 ab\n210 cd\n211 gh\n212 f\n213 ab\n214 cd\n215 gh\n216 f\n217 ab\n218 cd\n219 gh\n220 f\n221 ab\n222 cd\n223 gh\n224 f\n225 ab\n226 cd\n227 gh\n228 f\n229 ab\n230 cd\n231 gh\n232 f\n233 ab\n234 cd\n235 gh\n236 f\n237 ab\n238 cd\n239 gh\n240 f\n241 ab\n242 cd\n243 gh\n244 f\n245 ab\n246 cd\n247 gh\n248 f\n249 ab\n250 cd\n251 gh\n252 f\n253 ab\n254 cd\n255 gh\n256 f\n257 ab\n258 cd\n259 gh\n260 f\n261 ab\n262 cd\n263 gh\n264 f\n265 ab\n266 cd\n267 gh\n268 f\n269 ab\n270 cd\n271 gh\n272 f\n273 ab\n274 cd\n275 gh\n276 f\n277 ab\n278 cd\n279 gh\n280 f\n281 ab\n282 cd\n283 gh\n284 f\n285 ab\n286 cd\n287 gh\n288 f\n289 ab\n290 cd\n291 gh\n292 f\n293 ab\n294 cd\n295 gh\n296 f\n297 ab\n298 cd\n299 gh\n300 f\n301 ab\n302 cd\n303 gh\n304 f\n305 ab\n306 cd\n307 gh\n308 f\n309 ab\n310 cd\n311 gh\n312 f\n313 ab\n314 cd\n315 gh\n316 f\n317 ab\n318 cd\n319 gh\n320 f\n321 ab\n322 cd\n323 gh\n324 f\n325 ab\n326 cd\n327 gh\n328 f\n329 ab\n330 cd\n331 gh\n332 f\n333 ab\n334 cd\n335 gh\n336 f\n337 ab\n338 cd\n339 gh\n340 f\n341 ab\n342 cd\n343 gh\n344 f\n345 ab\n346 cd\n347 gh\n348 f\n349 ab\n350 cd\n351 gh\n352 f\n353 ab\n354 cd\n355 gh\n356 f\n357 ab\n358 cd\n359 gh\n360 f\n361 ab\n362 cd\n363 gh\n364 f\n365 ab\n366 cd\n367 gh\n368 f\n369 ab\n370 cd\n371 gh\n372 f\n373 ab\n374 cd\n375 gh\n376 f\n377 ab\n378 cd\n379 gh\n380 f\n381 ab\n382 cd\n383 gh\n384 f\n385 ab\n386 cd\n387 gh\n388 f\n389 ab\n390 cd\n391 gh\n392 f\n393 ab\n394 cd\n395 gh\n396 f\n397 ab\n398 cd\n399 gh\n400 f\n401 ab\n402 cd\n403 gh\n404 f\n405 ab\n406 cd\n407 gh\n408 f\n409 ab\n410 cd\n411 gh\n412 f\n413 ab\n414 cd\n415 gh\n416 f\n417 ab\n418 cd\n419 gh\n420 f\n421 ab\n422 cd\n423 gh\n424 f\n425 ab\n426 cd\n427 gh\n428 f\n429 ab\n430 cd\n431 gh\n432 f\n433 ab\n434 cd\n435 gh\n436 f\n437 ab\n438"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\"\nassert solution(\"2\\n1 b\\n1 b\") == \"0 -1\"\nassert solution(\"3\\n1 b\\n1 b\") == \"0 -1\"\nassert solution(\"3\\n1 ab\\n1 b\") == \"0 1\"\nassert solution(\"3\\n1 ab\\n1 a\") == \"0 -1\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1'\nassert solution('3\\n3 ab ab ab\\n1 ab\\n2 ab') == '1 0'\nassert solution('2\\n2 ab b\\n1 b') == '0 1'\nassert solution('3\\n3 ab ab ab\\n1 ab\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab b\\n1 b') == '0 1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"2 4\n1 1 2\n2\n1 1 2\"\"\"\n) == \"\"\"1\n3\"\"\"\nassert solution(\n    \"\"\"2 4\n1 1 2\n2\n1 1 2\"\"\"\n) == \"\"\"0.5\n8\"\"\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 4\n1 1 2\n2''') == '1\\n3'\nassert solution('''3 4\n1 1 2\n1 1 3\n2\n1 1 2\n2\n1 1 3''') == '1\\n3\\n1\\n4'\n'''\nimport sys\nimport numpy as np\nn, m = map(int, sys.stdin.readline().split())\nX = np.array(list(map(int, sys.stdin.readline().split()))).reshape(m, n)\nfor _ in range(int(sys.stdin.readline())):\n    u, v = map(int, sys.stdin.readline().split())\n    print(1 - np.mean(X[u-1:v, u-1:v]))\n'''"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n2 4\n1 1 2\n2\n1 1 2\n2\n\"\"\".strip()) == \"\"\"\n1\n3\n\"\"\".strip()\n\nassert solution(\n    \"\"\"\n1 1 2\n2\n1 1 2\n2\n\"\"\".strip()) == \"\"\"\n0\n2\n\"\"\".strip()\n\nassert solution(\n    \"\"\"\n2 2\n1 1 2\n2\n1 1 2\n2\n\"\"\".strip()) == \"\"\"\n1\n2\n\"\"\".strip()\n\nassert solution(\n    \"\"\"\n2 4\n1 1 2\n2\n1 1 2\n2\n\"\"\".strip()) == \"\"\"\n1\n4\n\"\"\".strip()\n\nassert solution(\n    \"\"\"\n1 1 1\n2\n1 1 2\n2\n1 1 2\n2\n\"\"\".strip()) == \"\"\"\n0\n0\n\"\"\".strip()"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\n3'\n\n---\n\nProblem 8\n\nWe define $N$ as the number of black boxes with $Q$ queries, and $M$ as the number of queries per box. We are all obsessed with Pokenom, so we will ask Bash to answer $Q$ queries. The answer to a query is the probability that $A$ is between the range $[u, v]$ after each query.\n\nBash would like to answer each query in turn. Hence, Bash has to answer each query in turn and save the result in a variable. The probability is equal to $A$ in the interval $[u, v]$ after each query.\n\nAfter answering all queries, the Bash would like to calculate the probability that $A$ is in the interval $[u, v]$\n\nThe Bash would need $N$ black boxes to answer each query, but he can only use the $M$ queries per box. Thus, if $A$ is in the interval $[u, v]$, it is possible to answer each query by only using the $M$ queries.\n\nThus, if $N$ is the number of black boxes, and $M$ is the number of queries per box, then the probability that $A$ is in the interval $[u, v]$ is \n\n$\\sum_{i = 1}^{N}{A}_i$\n\nwhere $A_i$ is the number of queries answered for the $i$th box.\n\nNote: The answer to the last query is the probability that $A$ is in the interval $[u, v]$, with the remaining probability being zero.\n\nFor each query, your job is to print the answer to the query.\n\n-----Input-----\nThe first line of input contains $N$ and $M$ separated by a space. The next line contains $N$ integers, each integer is in the range [0, 1].\n\nThe $M$ lines of input follow the same format as the queries, each line contains exactly one query.\n\n-----Output-----\nFor each query, print the answer to the query, rounded to 3 decimal places. The answer should be in the interval $[0, 1]$.\n\n-----Examples-----\nSample Input:\n3 3\n0.3333333333333333333333333333\n0.8\n1 1\n1 1\nSample Output:\n0.333\n0.8\n0\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0.333\n0.8\n0.333\n0.8\n0.5\n0.8\n0"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == '2'\nassert solution('3 2') == '2'\nassert solution('3 2') == '2'\nassert solution('3 2') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 2\\n2') == '1\\n3'\nassert solution('2\\n2\\n1') == '2\\n4'\nassert solution('2\\n1\\n1') == '2\\n1'\nassert solution('1\\n1\\n1') == '1\\n1'\nassert solution('1 1 2\\n1') == '1\\n1'\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 4\n1 1 2\n2''') == '1\\n3'\nassert solution('''2 4\n1 1 2\n2\n1 1 2\n2''') == '1\\n3'\nassert solution('''2 4\n1 1 2\n2\n1 1 2\n2''') == '1\\n3'\nassert solution('''2 4\n1 1 2\n2\n1 1 2\n2''') == '1\\n3'\nassert solution('''2 4\n1 1 2\n2\n1 1 2\n2''') == '1\\n3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\") == \"1\\n3\"\nassert solution(\"4 3\\n1 2 3 4\\n2\\n1 2 3\\n3\\n1 2\\n2\") == \"2\\n3\"\nassert solution(\"5 6\\n1 2 3 4 5\\n2\\n1 2 3\\n3\\n1 2\") == \"1\\n1\"\nassert solution(\"8 9\\n1 2 3 4 5 6 7 8\\n2\\n1 2 3\\n3\\n1 2 3\\n4\\n1 2\") == \"1\\n1\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\\n2\\n1 2 3\\n3\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 5 2\n5 0 4\n2 4 0''') == '7'\n'''\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0\\n1\\n2') == '1'\nassert solution('1\\n1\\n0') == '2'\nassert solution('2\\n0\\n1') == '1'\nassert solution('3\\n0\\n1\\n0') == '1'\nassert solution('4\\n0\\n1\\n0\\n0') == '2'\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 5 2\\n5 0 4\\n2 4 0') == '7'\n\n-----Note-----\n1. The cities are labeled from $1$ to $N$.\n2. Each city is visited exactly once.\n3. There is a city with no flight at all.\n4. The maximum possible flight duration is $1000$, or about $10^6$.\n5. The minimum possible flight duration is $0$, or about $-10^6$.\n6. You are given as your own goal to try to find the minimum possible total flight duration.\n7. It is guaranteed that you will be able to get the required minimum total flight duration.\n8. If you do not know how to start, the easiest approach is to try to solve the problem for a small range of values.\n9. For larger values of $N$, try solving the problem by brute force.\n\n-----\n    def solution(stdin: str) -> str:\n        pass\n\n-----\n    return solution(stdin)\n\"\"\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\nassert solution(\"1\\n0\\n\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n2\n0 5 2\n5 0 4\n2 4 0\n''') == '7'\n\nassert solution('''\n3\n0 5 2\n5 0 4\n2 4 0\n''') == '11'\n\nassert solution('''\n6\n0 5 2\n5 0 4\n2 4 0\n3 1 0\n6 0 5\n5 0 4\n2 4 0\n''') == '15'\n\nassert solution('''\n3\n0 5 2\n5 0 4\n2 4 0\n''') == '7'\n\nassert solution('''\n4\n0 5 2\n5 0 4\n2 4 0\n3 1 0\n''') == '13'"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\nassert solution(\"5 10 10\\n10 5 5\\n5 5 5\") == \"30\"\nassert solution(\"4 6 0\\n4 5 1\\n6 6 2\\n6 7 0\") == \"9\"\nassert solution(\"4 6 0\\n4 5 1\\n6 6 2\\n6 7 0\") == \"9\"\nassert solution(\"4 5 0\\n4 1 0\\n5 3 1\\n5 6 0\") == \"1\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\nassert solution(\n\"\"\"3\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\nassert solution(\n\"\"\"0\n5\n0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"5\n0\n5\n0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"3\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n    3\n    0 5 2\n    5 0 4\n    2 4 0\n''') == '7'\nassert solution('''\n    3\n    0 5 2\n    5 0 4\n    2 4 0\n''') == '7'\n'''\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n5\\n2') == '7'\nassert solution('0\\n5\\n2\\n0\\n4\\n2') == '7'\nassert solution('0\\n5\\n2\\n0\\n4\\n2\\n0\\n4\\n2') == '7'\n'''\n"
    },
    {
        "number": 3512,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 5 2\\n5 0 4\\n2 4 0') == '7'\nassert solution('2 3\\n2 2\\n3 3') == '2'\nassert solution('3 4\\n3 3\\n4 1\\n3 1') == '1'\nassert solution('1\\n1\\n1') == '0'\nassert solution('2\\n1\\n2\\n3\\n3\\n4\\n4') == '2'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1099511627776''') == 8\nassert solution('''1''') == 0\nassert solution('''12345678910111213141516171819''') == 0\nassert solution('''123456789101112131415161718''') == 1\nassert solution('''12345678910111213141516171819''') == 1\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output\nprint(f\"\\nPassed!\\n\")\n\"\"\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '8'\n\nassert solution('101') == '1'\nassert solution('1010') == '1'\nassert solution('101101') == '3'\nassert solution('10110110110100') == '8'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1099511627776) == 8\nassert solution(1024) == 1\nassert solution(100000) == 4\nassert solution(999999) == 9\nassert solution(9999999) == 18\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('15') == '0'\nassert solution('15'*999) == '999999'\nassert solution('15'*999*1000) == '9999999'\nassert solution('1'*10**6) == '99999999'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1099511627776) == '8'\nassert solution(25) == '1'\nassert solution(15) == '3'\nassert solution(1) == '0'\nassert solution(2) == '0'\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n1099511627776\n''') == 8\n"
    },
    {
        "number": 3513,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('1000000000') == '8'\nassert solution('9999999999') == '8'\nassert solution('10000') == '0'\nassert solution('100000') == '0'\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == 2\n\"\"\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\nx..\n.x.\nx.x''') == '2'\nassert solution('''10 10\n.x.\n.x.\nx.x\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n''') == '0'\nassert solution('''10 10\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n.x.\n''') == '9'\nassert solution('''30 30\nx....\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n....x\n...."
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"2 3\") == \"0\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 2\n\n---"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 3') == '1'\nassert solution('2 3') == '0'\nassert solution('3 2') == '1'\nassert solution('3 1') == '0'\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(2)\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\""
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3') == 2\nassert solution('3 1') == 1\nassert solution('1 1') == 1\nassert solution('4 4') == 4\nassert solution('4 2') == 2\n"
    },
    {
        "number": 3514,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == '0'\nassert solution('3 3\\nx..\\n.x.\\nx.x\\n') == '2'\nassert solution('2 2\\nx..\\n.x.\\nx.x\\n') == '1'\nassert solution('1 1\\nx..\\n.x.\\nx.x\\n') == '0'\nassert solution('1 3\\nx..\\n.x.\\nx.x\\n') == '1'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n') == '9\\n-1\\n5\\n6'\n\"\"\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0''') == '9\\n-1\\n5\\n6'\nassert solution('''\\\n6\n1 2 1\n2 2 1\n3 0 2\n4 2 2\n5 3 1\n6 4 1''') == '-1\\n9\\n2\\n6\\n3'\nassert solution('''\\\n6\n1 2 1\n2 2 1\n3 0 2\n4 2 2\n5 3 1\n6 4 1\n6 5 1\n6 6 1''') == '-1\\n9\\n2\\n6\\n3'\n'''\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '9\\n-1\\n5\\n6\\n7\\n8'\nassert solution('1\\n1\\n1\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '9\\n-1\\n5\\n6\\n7\\n8'\nassert solution('1\\n1\\n1\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '9\\n-1\\n5\\n6\\n7\\n8'\nassert solution('1\\n1\\n1\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '9\\n-1\\n5\\n6\\n7\\n8'\nassert solution('2\\n1 2 3\\n2 4 5\\n3 4 6') == '9\\n-1'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n'''\n    ) == '''9\n-1\n5\n6'''\n\nassert solution(\n'''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n'''\n) == '''9\n-1\n5\n6'''\n\nassert solution(\n'''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n'''\n) == '''9\n-1\n5\n6'''\n\nassert solution(\n'''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n4 3 4\n4 5 4\n'''\n) == '''9\n-1\n5\n6'''\n\nassert solution(\n'''3\n3 2 1\n2 1 2\n1 2 1\n'''\n) == '''3\n-1\n2\n0'''"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"2\\n3\\n4\") == \"-1\"\nassert solution(\"1\\n3\\n4\") == \"6\"\nassert solution(\"1\\n2\\n3\\n4\") == \"9\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '9'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '8'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '7'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '4'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0''') == '9\\n-1\\n5\\n6'\nassert solution('''3\n1 1 1\n2 1 2\n3 1 3''') == '-1\\n1\\n0'\nassert solution('''3\n1 3 1\n2 3 2\n3 1 3''') == '-1\\n-1\\n0'\nassert solution('''3\n2 3 1\n1 1 2\n3 1 3''') == '-1\\n-1\\n-1'\nassert solution('''3\n1 3 1\n2 1 2\n3 1 3''') == '-1\\n-1\\n0'\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\"\nassert solution(\"1\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n6 5 5\\n7 4 1\\n8 6 2\") == \"10\\n11\\n7\\n7\"\nassert solution(\"2\\n1 3 1\\n2 4 2\") == \"-1\"\nassert solution(\"3\\n1 2 1\\n2 3 2\\n3 1 3\") == \"1\"\nassert solution(\"4\\n1 2 1\\n2 3 2\\n3 1 3\\n4 4 4\") == \"-1\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0''') == '9\\n-1\\n5\\n6'\n'''\n\nimport sys\nsys.setrecursionlimit(10**9)"
    },
    {
        "number": 3515,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(100000)"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2 1\\n1 2 1\\n1 2 3\") == \"15\"\nassert solution(\"1\\n1 2 1\\n1 2 1\\n1 2 3\") == \"3\"\nassert solution(\"2\\n1 1 1 1\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\") == \"1\"\nassert solution(\"2\\n1 1 1 1\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\") == \"6\"\nassert solution(\"3\\n1 1 1 1 1\\n1 2 1 2 2\\n1 2 1 2 2\\n1 2 1 2 2\\n1 2 1 2 2\\n1 2 1 2 2\") == \"12\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n4 1 95 50 30 20 30') == '91'\nassert solution('1\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n4 1 95 50 30 20 30') == '91'\nassert solution('1\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n4 1 95 50 30 20 30') == '91'\nassert solution('1\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n4 1 95 50 30 20 30') == '91'\nassert solution('1\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n4 1 95 50 30 20 30') == '91'\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == '91'\n'''\n\nimport sys"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == \"91\"\nassert solution('''4\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 45 30 20 10\n5 1 75 95 50 30''') == \"205\"\nassert solution('''7\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 45 30 20 10\n5 1 75 95 50 30\n6 1 100 95 50 30''') == \"312\"\nassert solution('''7\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 45 30 20 10\n5 1 75 95 50 30\n6 1 100 95 50 30\n7 1 95 100 50 30''') == \"291\"\nassert solution('''7\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 45 30 20 10\n5 1 75 95 50 30\n6 1 100 95 50 30\n7 1 95 100 50 30\n8 1 95 100 50 30''') == \"276\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\n'''\nassert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\n'''\nassert solution('''10\n
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('2\\n3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '93'\nassert solution('3\\n3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '109'\nassert solution('4\\n3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n4 1 60 30 20 10\\n4 1 40 30 20 10') == '102'\nassert solution('5\\n3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n4 1 60 30 20 10\\n4 1 40 30 20 10') == '96'\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == \"91\"\n\nassert solution('''\n5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 40 30 20 10\n1 1 40 30 20 10\n''') == \"123\"\n\nassert solution('''\n3\n1 1 40 30 20 10\n2 1 95 50 30 20\n4 1 40 30 20 10\n''') == \"123\"\n'''\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == '91'\nassert solution('''3\n2 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == '92'\nassert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n3 1 20 40 30 10''') == '94'\nassert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n1 1 30 40 30 10''') == '169'\nassert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n1 1 30 40 30 10\n3 1 30 40 30 10''') == '169'\n"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(INPUT))"
    },
    {
        "number": 3516,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == '91'\nassert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n4 1 97 100 30 25\n6 1 99 100 30 22\n3 2 100 100 30 19\n1 2 99 100 30 19\n2 3 100 100 30 17\n1 3 97 100 30 17\n2 4 100 100 30 16\n3 4 97 100 30 16\n2 5 100 100 30 15\n3 5 97 100 30 15\n1 6 100 100 30 15\n2 6 97 100 30 15\n3 6 97 100 30 15\n2 7 100 100 30 14\n3 7 97 100 30 14\n1 8 100 100 30 14\n2 8 97 100 30 14\n3 8 97 100 30 14\n1 9 100 100 30 14\n2 9 97 100 30 14\n3 9 97 100 30 14\n1 10 100 100 30 13\n2 10 97 100 30 13\n3 10 97 100 30 13\n1 11 100 100 30 13\n2 11 97 100 30 13\n3 11 97 100 30 13\n1 12 100 100 30 12\n2 12 97 100 30 12\n3 12 97 100 30 12\n1 13 100 100 30 12\n2 13 97 100 30 12\n3 13 97 100 30 12\n1 14 100 100 30 11\n2 14 97 100 30 11\n3 14 97 100 30 11\n1 15 100 100 30 11\n2 15 97 100 30 11\n3 15 97 100 30 11\n1 16 100 100 30 10\n2 16 97 100 30 10\n3 16 97 100 30 10\n1 17 100 100 30 10\n2 17 97 100 30 10\n3 17 97 100 30 10\n1 18 100 100 30 9\n2 18 97 100 30 9\n3 18 97 100 30 9\n1 19 100 100 30 8\n2 19 97 100 30 8\n3 19 97 100 30 8\n1 20 100 100 30 8\n2 20 97 100 30 8\n3 20 97 100 30 8\n1 21 100 100 30 7\n2 21 97 100 30 7\n3 21 97 100 30 7\n1 22 100 100 30 6\n2 22 97 100 30 6\n3 22 97 100 30 6\n1 23 100 100 30 6\n2 23 97 100 30 6\n3 23 97 100 30 6\n1 24 100 100 30 5\n2 24 97 100 30 5\n3 24 97 100 30 5\n1 25 100 100 30 4\n2 25 97 100 30 4\n3 25 97 100 30 4\n1 26 100 100 30 3\n2 26 97 100 30 3\n3 26 97 100 30 3\n1 27 100 100 30 2\n2 27 97 100 30 2\n3 27 97 100 30 2\n1 28 100 100 30 2\n2 28 97 100 30 2\n3 28 97 100 30 2\n1 29 100 100 30 1\n2 29 97 100 30 1\n3 29 97 100 30 1\n1 30 100 100 30 1\n2 30 97 100 30 1\n3 30 97 100 30 1\n1 31 100 100 30 1\n2 31 97 100 30 1\n3 31 97 100 30 1''') == '140'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n15 20\n0\n1 1\n1 2\n1 3\n2 1\n2 3\n3 1\n3 2\n3 4\n4 1\n4 2\n4 3\n5 1\n5 2\n5 3\n5 4\n6 1\n6 2\n6 3\n6 4\n7 1\n7 2\n7 3\n7 4\n8 1\n8 2\n8 3\n8 4\n9 1\n9 2\n9 3\n9 4\n10 1\n10 2\n10 3\n10 4\n11 1\n11 2\n11 3\n11 4\n12 1\n12 2\n12 3\n12 4\n13 1\n13 2\n13 3\n13 4\n14 1\n14 2\n14 3\n14 4\n15 1\n15 2\n15 3\n15 4\n16 1\n16 2\n16 3\n16 4\n17 1\n17 2\n17 3\n17 4\n18 1\n18 2\n18 3\n18 4\n19 1\n19 2\n19 3\n19 4\n20 1\n20 2\n20 3\n20 4\n21 1\n21 2\n21 3\n21 4\n22 1\n22 2\n22 3\n22 4\n23 1\n23 2\n23 3\n23 4\n24 1\n24 2\n24 3\n24 4\n25 1\n25 2\n25 3\n25 4\n26 1\n26 2\n26 3\n26 4\n27 1\n27 2\n27 3\n27 4\n28 1\n28 2\n28 3\n28 4\n29 1\n29 2\n29 3\n29 4\n30 1\n30 2\n30 3\n30 4\n31 1\n31 2\n31 3\n31 4\n32 1\n32 2\n32 3\n32 4\n33 1\n33 2\n33 3\n33 4\n34 1\n34 2\n34 3\n34 4\n35 1\n35 2\n35 3\n35 4\n36 1\n36 2\n36 3\n36 4\n37 1\n37 2\n37 3\n37 4\n38 1\n38 2\n38 3\n38 4\n39 1\n39 2\n39 3\n39 4\n40 1\n40 2\n40 3\n40 4\n41 1\n41 2\n41 3\n41 4\n42 1\n42 2\n42 3\n42 4\n43 1\n43 2\n43 3\n43 4\n44 1\n44 2\n44 3\n44 4\n45 1\n45 2\n45 3\n45 4\n46 1\n46 2\n46 3\n46 4\n47 1\n47 2\n47 3\n47 4\n48 1\n48 2\n48 3\n48 4\n49 1\n49 2\n49 3\n49 4\n50 1\n50 2\n50 3\n50 4\n51 1\n51 2\n51 3\n51 4\n52 1\n52 2\n52 3\n52 4\n53 1\n53 2\n53 3\n53 4\n54 1\n54 2\n54 3\n54 4\n55 1\n55 2\n55 3\n55 4\n56 1\n56 2\n56 3\n56 4\n57 1\n57 2\n57 3\n57 4\n58 1\n58 2\n58 3\n58 4\n59 1\n59 2\n59 3\n59 4\n60 1\n60 2\n60 3\n60 4\n61 1\n61 2\n61 3\n61 4\n62 1\n62 2\n62 3\n62 4\n63 1\n63 2\n63 3\n63 4\n64 1\n64 2\n64 3\n64 4\n65 1\n65 2\n65 3\n65 4\n66 1\n66 2\n66 3\n66 4\n67 1\n67 2\n67 3\n67 4\n68 1\n68 2\n68 3\n68 4\n69 1\n69 2\n69 3\n69 4\n70 1\n70 2\n70 3\n70 4\n71 1\n71 2\n71 3\n71 4\n72 1\n72 2\n72 3\n72 4\n73 1\n73 2\n73 3\n73 4\n74 1\n74 2\n74 3\n74 4\n75 1\n75 2\n75 3\n75 4\n76 1\n76 2\n76 3\n76 4\n77 1\n77 2\n77 3\n77 4\n78 1\n78 2\n78 3\n78 4\n79 1\n79 2\n79 3\n79 4\n80 1\n80 2\n80 3\n80 4\n81 1\n81 2\n81 3\n81 4\n82 1\n82 2\n82 3\n82 4\n83 1\n83 2\n83 3\n83 4\n84 1\n84 2\n84 3\n84 4\n85 1\n85 2\n85 3\n85 4\n86 1\n86 2\n86 3\n86 4\n87 1\n87 2\n87 3\n87 4\n88 1\n88 2\n88 3\n88 4\n89 1\n89 2\n89 3\n89 4\n90 1\n90 2\n90 3\n90 4\n91 1\n91 2\n91 3\n91 4\n92 1\n92 2\n92 3\n92 4\n93 1\n93 2\n93 3\n93 4\n94 1\n94 2\n94 3\n94 4\n95 1\n95 2\n95 3\n95 4\n96 1\n96 2\n96 3\n96 4\n97 1\n97 2\n97 3\n97 4\n98 1\n98 2\n98 3\n98 4\n99 1\n99 2\n99 3\n99 4\n100 1\n100 2\n100 3\n100 4\n101 1\n101 2\n101 3\n101 4\n102 1\n102 2\n102 3\n102 4\n103 1\n103 2\n103 3\n103 4\n104 1\n104 2\n104 3\n104 4\n105 1\n105 2\n105 3\n105 4\n106 1\n106 2\n106 3\n106 4\n107 1\n107 2\n107 3\n107 4\n108 1\n108 2\n108 3\n108 4\n109 1\n109 2\n109 3\n109 4\n110 1\n110 2\n110 3\n110 4\n111 1\n111 2\n111 3\n111 4\n112 1\n112 2\n112 3\n112 4\n113 1\n113 2\n113 3\n113 4\n114 1\n114 2\n114 3\n114 4\n115 1\n115 2\n115 3\n115 4\n116 1\n116 2\n116 3\n116 4\n117 1\n117 2\n117 3\n117 4\n118 1\n118 2\n118 3\n118 4\n119 1\n119 2\n119 3\n119 4\n120 1\n120 2\n120 3\n120 4"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n5 4 3 2 1\\n0') == 15\nassert solution('5\\n1 2 3 4 5\\n1 1 2 1 1') == 7\nassert solution('7\\n1 2 3 4 5 6 7\\n1 1 2 1 1 1 1') == 7\nassert solution('7\\n1 2 3 4 5 6 7\\n1 1 2 1 1 1 1 1') == 7\nassert solution('8\\n1 2 3 4 5 6 7 8\\n1 1 2 1 1 1 1 1 1') == 7\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '15'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"15\"\nassert stdin == \"\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n15 20\\n0\\n1 1\\n0\\n1 1\\n0\\n1 1\") == \"15\"\nassert solution(\"2\\n1 1\\n0\\n1 1\") == \"1\"\nassert solution(\"5\\n1 1 2 4\\n1 4 4 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"2\"\nassert solution(\"7\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\") == \"10\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\") == \"11\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2\n15 20\n0\n1 1\n''') == '15'\nassert solution(\n'''\n3\n15 20 1\n2 2 1\n3 3 1\n''') == '2'\nassert solution(\n'''\n4\n15 20 1\n2 2 1\n3 3 1\n4 4 1\n''') == '1'\nassert solution(\n'''\n5\n15 20 1\n2 2 1\n3 3 1\n4 4 1\n5 5 1\n''') == '0'\nassert solution(\n'''\n6\n15 20 1\n2 2 1\n3 3 1\n4 4 1\n5 5 1\n6 6 1\n''') == '1'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n1') == '0'\nassert solution('1\\n2\\n1\\n1') == '0'\nassert solution('10\\n1\\n10\\n1') == '1'\nassert solution('4\\n1\\n3\\n2\\n1') == '0'\nassert solution('5\\n1\\n3\\n2\\n1') == '2'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n5''') == '15'\nassert solution('''0\n5\n1 2\n1 3\n3 2\n1 3\n2 4\n3 4\n''') == '15'\nassert solution('''0\n5\n1 2\n1 3\n3 2\n2 4\n2 5\n2 4\n1 3\n1 2\n1 3\n1 2\n''') == '15'\nassert solution('''0\n5\n1 2\n1 3\n3 2\n2 4\n2 5\n2 4\n2 3\n2 1\n3 1\n1 2\n1 3\n1 2\n''') == '15'\nassert solution('''0\n5\n1 2\n1 3\n3 2\n2 4\n2 5\n2 4\n2 3\n2 1\n3 1\n1 2\n1 3\n1 2\n''') == '15'\n"
    },
    {
        "number": 3517,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'impossible'\n'''\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"3 4\n3 2 371\n1 4 606\n2 3 752\"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"2 3\n1 2 7\n3 1 9\"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"4 3\n1 2 7\n3 1 9\n4 2 9\n1 3 5\"\"\"\n) == \"20\"\n\nassert solution(\n    \"\"\"5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n1 4 813\"\"\"\n) == \"25\""
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == \"impossible\"\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n3 1 75''') == \"1\"\nassert solution('''10 2\n2 4 729\n4 5 271\n7 2 425\n3 4 832\n1 6 407\n5 3 726\n2 8 485\n3 9 952\n4 6 931\n1 3 1005\n2 9 4987\n2 8 4774\n3 7 958\n4 8 963\n1 4 842\n2 6 662\n3 7 143\n4 8 14\n5 2 949\n7 4 597\n8 8 12\n9 8 57\n3 1 336\n2 7 95\n3 4 512\n4 6 11\n7 1 526\n8 4 672\n9 8 16\n3 4 948\n1 2 972\n2 8 776\n3 6 937\n4 8 121\n5 2 543\n7 4 391\n8 7 90\n9 9 28''') == \"1\"\nassert solution('''10 4\n1 2 87\n2 3 57\n3 4 26\n4 5 89\n5 6 24\n6 7 99\n7 8 46\n8 9 57\n9 10 22''') == \"1\"\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n3 1 75''') == \"1\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''2 4\n1 3 14\n2 4 25''') == '15'\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n2 4 142\n1 4 79\n3 4 43''') == 'impossible'\nassert solution('''2 4\n1 3 14\n2 4 25''') == '15'\nassert solution('''1 4\n1 4 14\n1 3 14''') == '15'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'impossible'\n'''"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''6 4\n2 3 351\n1 4 312\n2 4 394\n3 5 413\n1 4 308\n2 5 50\n3 5 237''') == '580'\nassert solution('''7 4\n2 3 243\n1 4 139\n2 5 217\n3 6 216\n4 5 17\n5 6 5\n1 5 82''') == '217'\nassert solution('''7 4\n2 3 248\n1 4 198\n2 5 271\n3 6 303\n4 5 48\n5 6 292\n1 5 99''') == '211'\nassert solution('''8 4\n2 3 257\n1 4 233\n2 5 252\n3 6 222\n4 5 250\n5 6 204\n6 7 183\n1 5 79''') == '147'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9') == 'impossible'\nassert solution('2 3\\n1 2 123\\n3 4 456\\n5 6 7') == 'impossible'\nassert solution('3 3\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6') == 'impossible'\nassert solution('4 4\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7') == 'impossible'\nassert solution('5 4\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8') == 'impossible'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''3 4\n1 1 1\n2 2 1\n3 3 2''') == '0'\nassert solution('''7 5\n4 1 173\n3 2 166\n5 3 165\n6 4 164\n7 5 155\n7 6 134\n7 7 102''') == '10'\nassert solution('''3 4\n1 2 1\n2 3 2\n1 3 1''') == '4'\nassert solution('''7 4\n1 1 1\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n2 2 2\n2 3 2\n3 3 3''') == '4'\n"
    },
    {
        "number": 3518,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98''') == 'impossible'\nassert solution('''5 4\n1 1 1\n3 1 4\n2 1 2\n3 2 2\n1 3 3\n4 3 3''') == 'impossible'\nassert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n2 2 5''') == 'impossible'\nassert solution('''5 4\n1 1 1\n3 1 4\n2 1 2\n3 2 2\n1 3 3\n2 3 3''') == 'impossible'\nassert solution('''5 4\n3 1 375\n2 1 383\n1 3 163\n2 3 164\n1 3 167\n2 3 166\n1 3 171\n2 3 173\n1 3 178\n2 3 179\n1 3 175\n2 3 183\n1 3 185\n2 3 182\n1 3 179\n2 3 163\n1 3 159\n2 3 150\n1 3 146\n2 3 143\n1 3 142\n2 3 134\n1 3 131\n2 3 132\n1 3 122\n2 3 120\n1 3 114\n2 3 111\n1 3 100\n2 3 98\n1 3 93\n2 3 89\n1 3 86\n2 3 85\n1 3 81\n2 3 79\n1 3 76\n2 3 75\n1 3 71\n2 3 69\n1 3 66\n2 3 65\n1 3 64\n2 3 62\n1 3 60\n2 3 59\n1 3 57\n2 3 54\n1 3 55\n2 3 52\n1 3 51\n2 3 49\n1 3 47\n2 3 46\n1 3 43\n2 3 41\n1 3 40\n2 3 38\n1 3 37\n2 3 34\n1 3 33\n2 3 32\n1 3 31\n2 3 29\n1 3 28\n2 3 26\n1 3 25\n2 3 24\n1 3 22\n2 3 21\n1 3 19\n2 3 18\n1 3 17\n2 3 16\n1 3 15\n2 3 14\n1 3 13\n2 3 12\n1 3 11\n2 3 10\n1 3 9\n2 3 8\n1 3 7\n2 3 6\n1 3 5\n2 3 4\n1 3 3\n2 3 2\n1 3 1\n2 3 0\n1 2 3\n2 2 3\n1 2 2\n2 1 2\n1 1 2\n2 0 2\n1 0 1\n0 0 1\n2 1 0\n1 2 1\n0 1 2\n1 1 2\n2 1 1\n1 2 0\n1 1 0\n2 0 1\n1 1 1\n0 1 0\n2 2 0\n0 1 1\n1 1 0\n2 0 0\n1 1 1\n1 1 1\n2 1 1\n0 1 0\n1 1 1\n2 1 1\n1 0 1\n1 1 1\n2 1 1\n0 1 0\n1 0 0\n1 1 0\n2 0 1\n1 0 1\n2 0 0\n1 1 0\n0 1 0\n1 1 0\n2 0 0\n1 0 0\n2 0 0\n1 1 0\n0 1 0\n1 0 0\n2 0 0\n0 1 0\n1 0 0\n1 1 0\n2 0 0\n0 1 0\n0 1 0\n1 1 0\n2 0 0\n0 1 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0\n0 1 0\n1 0 0\n2 0 0\n0 1 0\n0 1 0\n1 0 0\n0 1 0\n0 1 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0\n0 1 0\n1 0 0\n2 0 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '2.000000000'\nassert solution('3') == '2.500000000'\nassert solution('4') == '2.75000000'\nassert solution('5') == '3.000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '0.8571428571'\nassert solution('3') == '0.4285714286'\nassert solution('4') == '0.2857142857'\nassert solution('5') == '0.1428571429'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"1.000000000\"\nassert solution(3) == \"1.000000000\"\nassert solution(4) == \"1.000000000\"\nassert solution(5) == \"1.000000000\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '1.000000000'\nassert solution('4') == '2.000000000'\nassert solution('10') == '4.000000000'\nassert solution('40') == '18.000000000'\nassert solution('100') == '29.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('5') == '0.7500000'\nassert solution('100') == '1.0000000'\n\"\"\""
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1.000000000'\n'''\n\n'''\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '1.000000000'\nassert solution('3') == '1.000000000'\nassert solution('4') == '2.000000000'\nassert solution('5') == '2.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1.000000000'\n\n\"\"\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '1'\n) == '1.000000000'\nassert solution(\n    '10'\n) == '10.000000000'\nassert solution(\n    '100'\n) == '99.999999999'\nassert solution(\n    '1000'\n) == '999.99999999'\nassert solution(\n    '10000'\n) == '999.99999999'\n"
    },
    {
        "number": 3519,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"1.3333333333\"\nassert solution(3) == \"1.6666666667\"\nassert solution(4) == \"1.16666666667\"\nassert solution(5) == \"1.2\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\nassert solution('''1000 5 100\n10 10 10\n100 10 10\n1000 10 10\n10 10 10\n100 10 10''') == '100.000000000'\nassert solution('''1000 5 100\n10 10 10\n100 10 10\n1000 10 10\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10''') == '10.000000000'\nassert solution('''1000 5 100\n10 10 10\n100 10 10\n1000 10 10\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10''') == '100.000000000'\nassert solution('''1000 5 100\n10 10 10\n100 10 10\n1000 10 10\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10\n1000 5 100\n10 10 10\n100 10 10''') == '1.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9''') == '120.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9''') == '142.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2\n90 10 9\n0 0 1\n15 99 98\n40 3 2\n40 0 1\n40 3 2"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\nassert solution('''2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n1"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"115.000000000\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nassert solution('''100 3 10\n90 10 9\n90 10 9\n''') == '149.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '156.000000000'\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '158.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"115.000000000\"\n\"\"\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == '115.000000000'\n\nassert solution('''100 1 1000\n7 2 7\n7 9 1\n9 9 2\n''') == '7000000000'\n\nassert solution('''100 1 1000\n7 2 7\n7 9 1\n9 9 2\n''') == '7000000000'\n\nassert solution('''100 1 1000\n7 2 7\n7 9 1\n9 9 2\n''') == '7000000000'\n\nassert solution('''100 1 1000\n7 2 7\n7 9 1\n9 9 2\n''') == '7000000000'"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"115.000000000\"\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"115.000000000\"\n\"\"\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == \"115.000000000\"\n\"\"\"\n\n\"\"\"\n\nProblem statement:\nGiven a list of $n$ integers, write a function that returns a list of $n$ strings, where each string is formatted as \"x_i x_j x_k\". For the $i^{th}$ element, $x_i$ is the $i^{th}$ integer and $x_j$ and $x_k$ are the two integers that make up $x_i$. Your function should return the $i^{th}$ element of your list as a string, as well as the $i^{th}$ element of the second list.\n\nFor example, if the list was $[5,10,2]$, then your function would return:\n\n\"5 10 2\"\n\"5 10 2\"\n\n-----Input-----\nThe first line of input consists of one integer, $n$, representing the number of integers in your list. The second line contains the $n$ integers in your list, $p_1$, $p_2$,..., $p_n$.\n\n-----Output-----\nOutput a single string, formatted as \"x_i x_j x_k\".\n\n-----Example-----\nFor example, if the list was [5,10,2], then your function would return:\n\n\"5 10 2\"\n\"5 10 2\"\n\"\"\"\n\n\"\"\"\n\nProblem statement:\nWrite a function that counts the number of ways to reach the end of an array. Your function should take as input a parameter $n$, an integer, representing the size of the array, and an integer, representing the value to start with. Your function should return the number of ways to reach the end of the array by repeatedly adding and subtracting 1 from the value.\n\nFor example, if the array was [0,2,3], then your function would return 2 because there are two ways to reach the end:\n\n1. Starting with 0, your number of ways is 1\n2. Starting with 1, your number of ways is 1\n3. Starting with 2, your number of ways is 2\n4. Starting with 3, your number of ways is 2\n5. Starting with 0, your number of ways is 2\n6. Starting with 1, your number of ways is 2\n7. Starting with 2, your number of ways is 2\n8. Starting with 3, your number of ways is 2\n9. Starting with 0, your number of ways is 2\n10. Starting with 1, your number of ways is 2\n11. Starting with 2, your number of ways is 2\n12. Starting with 3, your number of ways is 2\n13. Starting with 0, your number of ways is 2\n14. Starting with 1, your number of ways is 2\n15. Starting with 2, your number of ways is 2\n16. Starting with 3, your number of ways is 2\n\nIn this example, your function would return 16.\n\n-----Input-----\nThe first line of input consists of one integer, $n$, representing the number of integers in your array.\n\nThe second line of input consists of $n$ integers, $p_1$, $p_2$,..., $p_n$.\n\n-----Output-----\nOutput a single integer, the number of ways to reach the end of the array.\n\n-----Example-----\nFor example, if the array was [0,2,3], then your function would return 16.\n\n-----Constraints-----\n1. $n \\ge 2$\n2. $p_i \\ge 1$\n3. $p_i$ are integers\n4. $n \\ge 2 \\cdot 10^5$\n5. $p_i$ are integers\n6. $1 \\le n \\le 10^5$\n7. $p_i \\le 10^5$\n8. $1 \\le p_i \\le 10^5$\n9. $p_i$ are distinct\n10. $1 \\le p_i \\le 10^5$\n11. $p_i$ are distinct\n12. $0 \\le p_i \\le 10^5$\n13. $p_i$ are distinct\n14. $1 \\le p_i \\le 10^5$\n15. $p_i$ are distinct\n16. $0 \\le p_i \\le 10^5$\n17. $0 \\le p_i \\le 10^5$\n18. $0 \\le p_i \\le 10^5$\n19. $0 \\le p_i \\le 10^5$\n20. $0 \\le p_i \\le 10^5$\n21. $0 \\le p_i \\le 10^5$\n22. $0 \\le p_i \\le 10^5$\n23. $0 \\le p_i \\le 10^5$\n24. $0 \\le p_i \\le 10^5$\n25. $0 \\le p_i \\le 10^5$\n26. $0 \\le p_i \\le 10^5$\n27. $0 \\le p_i \\le 10^5$\n28. $0 \\le p_i \\le 10^5$\n29. $0 \\le p_i \\le 10^5$\n30. $0 \\le p_i \\le 10^5$\n31. $0 \\le p_i \\le 10^5$\n32. $0 \\le p_i \\le 10^5$\n33. $0 \\le p_i \\le 10^5$\n34. $0 \\le p_i \\le 10^5$\n35. $0 \\le p_i \\le 10^5$\n36. $0 \\le p_i \\le 10^5$\n37. $0 \\le p_i \\le 10^5$\n38. $0 \\le p_i \\le 10^5$\n39. $0 \\le p_i \\le 10^5$\n40. $0 \\le p_"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2\n100 1 1\n100 1 1.5\n''') == '199.500000'\nassert solution('''\n3\n100 1 1\n100 1 1.5\n100 1 1.6\n''') == '199.500000'\nassert solution('''\n4\n1 1 1 1\n1 1 1 1.5\n1 1 1 1.5\n1 1 1 1.5\n''') == '199.500000'\nassert solution('''\n1\n1 1 1\n''') == '0.00000'\nassert solution('''\n2\n1 1 1\n1 1 1.5\n''') == '0.00000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''100 1 1''') == '199.500000'\nassert solution('''100 1 1.5''') == '199.500000'\nassert solution('''1000 1 1''') == '399.999999'\nassert solution('''1000 1 1.5''') == '399.999999'\nassert solution('''1000 1 1.99''') == '399.999999'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\\\n2\n100 1 1\n100 1 1.5\n''') == '199.500000'\nassert solution('''\\\n4\n100 1 1\n100 1 1.5\n1000 1 1\n100 1 1.5\n''') == '299.500000'\nassert solution('''\\\n5\n100 1 1\n100 1 1.5\n1000 1 1\n100 1 1.5\n10001 1 1\n''') == '299.500000'\nassert solution('''\\\n8\n100 1 1\n100 1 1.5\n1000 1 1\n100 1 1.5\n1000 1 1\n10000 1 1\n10001 1 1\n''') == '299.500000'\nassert solution('''\\\n10\n100 1 1\n100 1 1.5\n1000 1 1\n100 1 1.5\n1000 1 1\n10000 1 1\n10001 1 1\n10000 1 1\n10001 1 1\n''') == '299.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '2\\n100 1 1\\n100 1 1.5'\n) == '199.500000'\n'''\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''100 1 1\n100 1 1.5''') == '199.500000'\n'''\nfrom math import pi, radians\nT, S, A = [float(x) for x in input().split()]\nprint(sum([(T - S * radians(a)) for a in radians(A)]))\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''100 1 1\n100 1 1.5''') == '199.500000'\nassert solution(\n'''3\n20 1 1\n60 1 1.5\n90 1 1.5''') == '54.000000'\nassert solution(\n'''5\n0 0 1.5 1.5 1.5\n5 3 1 1 1.5\n5 1 3 1 1.5\n1 1 1 1 1.5''') == '38.000000'\nassert solution(\n'''7\n8 4 0.2 0.6 0.5 0.1 0.1\n5 3 1 1.5 1.5 1.5\n2 1 1 1 1.5 1.5\n5 1 3 1 1.5 1.5\n5 1 3 1 1.5 1.5\n1 1 1 1 1.5 1.5''') == '64.000000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"199.500000\"\n\nprint(\"Success\")\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100 1 1') == '199.500000'\nassert solution('100 1 1.5') == '199.501984'\nassert solution('100 1.1 1.5') == '199.501854'\nassert solution('100 1.15 1.5') == '199.501874'\nassert solution('100 1.159 1.5') == '199.501901'\n"
    },
    {
        "number": 3521,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"199.500000\"\n\nprint(solution(stdin))\nassert solution(stdin) == \"199.500000\"\n\nprint(solution(stdin))\nassert solution(stdin) == \"199.500000\"\n\nprint(solution(stdin))\nassert solution(stdin) == \"199.500000\"\n\nprint(solution(stdin))\nassert solution(stdin) == \"199.500000\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\n\"\"\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''2 3\n2 3 4 5 6 7 8 9 10 11 12''') == '0'\nassert solution('''2 4\n1 2 3 4 5 6 7 8 9 10 11 12''') == '2'\nassert solution('''2 4\n2 4 3 4 4 4 4 4 4 4 4 4 4''') == '4'\n'''\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''4 4\n1 2 3 4 5 6 7 8 9 10 11 12''') == '0'\nassert solution('''5 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '2'\nassert solution('''4 1\n1 2 3 4 5''') == '0'\nassert solution('''3 1\n1 2 3''') == '0'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5 6 7 8 9 10 11 12\") == \"2\"\nassert solution(\"2 3\\n1 1 1 1 1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"2 3\\n1 2 1 1 2 1 1 2 1 1\") == \"0\"\nassert solution(\"2 3\\n1 2 1 1 2 1 1 2 1 1\") == \"0\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('4 4\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16') == '2'\nassert solution('4 4\\n2 5 4 5 6 7 8 9 10 11 12 13 14 15 16') == '1'\nassert solution('4 4\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16') == '2'\nassert solution('4 4\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16') == '2'\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''4 3\n1 3 3 2 1''') == '2'\nassert solution('''2 2\n1 1''') == '0'\nassert solution('''2 3\n1 1 2 1''') == '1'\nassert solution('''5 3\n2 3 1 1 4''') == '3'\n'''\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n4 2 5 6 7 8 9 10 11 12\") == \"2\"\nassert solution(\"2 3\\n4 3 1 2 5 6 7 8 9 10 11 12\") == \"3\"\nassert solution(\"2 3\\n4 3 3 2 1 2 5 6 7 8 9 10 11 12\") == \"2\"\nassert solution(\"2 3\\n4 3 3 2 2 1 2 5 6 7 8 9 10 11 12\") == \"3\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"2\"\nassert solution(\"\") == \"\"\nassert solution(\"3\") == \"Impossible\"\nassert solution(\"0\") == \"0\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == '5'\nassert solution(stdin) == '5'\nassert solution(stdin) == '5'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"13\") == \"5\"\nassert solution(\"15\") == \"Impossible\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n    3 2 1 1\n    ''') == 'Impossible'\nassert solution('''2\n    2 2 2 2\n    ''') == '3'\nassert solution('''1\n    1 1 1 1\n    ''') == '1'\nassert solution('''2\n    1 1 1 1\n    ''') == '1'\nassert solution('''12\n    1 1 1 1 1 1 1 1 1 1\n    ''') == '1'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 2 1 1\") == \"5\"\nassert solution(\"5\\n3 2 1 1\") == \"Impossible\"\nassert solution(\"5\\n0 2 1 1\") == \"0\"\nassert solution(\"5\\n0 2 3 1\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5\") == \"6\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''13''') == '5'\nassert solution(\n'''13''') == 'Impossible'\nassert solution(\n'''100''') == '10'\nassert solution(\n'''100''') == '10'\nassert solution(\n'''49''') == '5'\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n13\n3 2 1 1\n''') == '5'\nassert solution(\n'''\n20\n1 5 4 3\n''') == 'Impossible'\nassert solution(\n'''\n30\n10 25 10 5\n''') == '15'\n'''\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"9\\n2 2 1 1\") == \"5\"\nassert solution(\"7\\n1 1 1 1\") == \"Impossible\"\nassert solution(\"2\\n1 2 1\") == \"Impossible\"\nassert solution(\"8\\n1 1 1 1 1\") == \"Impossible\"\nassert solution(\"3\\n2 2 2\") == \"Impossible\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'Impossible'\nassert solution('1 2 3 4') == '4'\nassert solution('4 3 3 1') == '4'\nassert solution('1 1 1 1 1') == '1'\nassert solution('4 1 3 3') == '3'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\nassert solution('a') == 'yes'\nassert solution('b') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'yes'\nassert solution('abcad') == 'yes'\nassert solution('aabcadabacad') == 'yes'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\nassert solution('aacd') == 'yes'\nassert solution('abcd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'yes'\nassert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\nassert solution('asdasda') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\nassert solution('abc') == 'no'\nassert solution('aabcad') == 'yes'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'yes'\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10**9)"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\"\nassert solution(\"abc\") == \"no\"\nassert solution(\"abcd\") == \"no\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''abcad\naba\nacd''') == 'yes'\nassert solution('''aabcad\naba\nacd''') == 'no'\nassert solution('''aaaaaa\naaa\naaa\naa\na''') == 'no'\nassert solution('''a\na\na\na\na\na\na\na\na''') == 'yes'\nassert solution('''aaaaa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\naa\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\nassert solution('abcd') == 'yes'\nassert solution('abc') == 'yes'\n"
    },
    {
        "number": 3524,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == 'yes'\n'''\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''2 1 1\n1 1 1\n2 2 1\n1 1 1''') == '3'\nassert solution('''1 2 3\n1 3 2\n1 1 1\n2 2 1\n1 1 1''') == '2'\nassert solution('''1 2 3\n1 3 2\n2 3 1\n1 1 1\n2 2 1\n1 1 1''') == '2'\nassert solution('''1 2 3\n1 3 2\n2 3 1\n1 1 1\n2 2 1\n1 1 1''') == '3'\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5'\nassert solution('2 4 3 5\\n4 2 8 9\\n3 1 1 6\\n3 4 7 10\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10') == '5'\nassert solution('5 6 3\\n4 1 6 1\\n5 4 3 1\\n3 1 4 1\\n2 1 4 4\\n5 1 4 4') == '2'\nassert solution('3 3 3\\n2 1 1 1\\n2 1 1 2\\n2 1 1 1\\n3 1 1 2') == '3'\nassert solution('3 3 4\\n1 1 2 1\\n2 1 2 2\\n2 1 2 1\\n1 1 2 1') == '4'\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '5'\n'''\n\n'''\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    4 5 10\n    3 2\n    1 2 4 7\n    3 1 1 6\n    3 4 7 10\n    2 4 3 5\n    4 2 8 9\n''') == '5'\n\nassert solution('''\n    5 6 9\n    2 2\n    3 1\n    3 4\n    3 4\n    4 1\n''') == '5'\n\nassert solution('''\n    5 6 9\n    2 2\n    3 1\n    3 4\n    3 4\n    4 1\n''') == '0'\n\nassert solution('''\n    2 2\n    2 1\n''') == '1'\n\nassert solution('''\n    2 2\n    3 1\n''') == '0'"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5 10\") == \"5\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"2 4 3 5\") == \"5\"\nassert solution(\"4 2 8 9\") == \"4\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 4 7\\n1 1 1 6\\n3 4 7 10\\n2 4 3 5') == '5'\nassert solution('2 2 1\\n1 1 1 1\\n2 2 2 2') == '1'\nassert solution('2 2 1\\n1 1 1 1\\n2 2 2 2') == '1'\nassert solution('1 1 1 1\\n2 2 2 2\\n3 3 3 3') == '0'\nassert solution('4 3 1\\n1 1 3\\n1 2 4 3\\n3 1 2 2\\n2 3 2 1') == '3'\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution('''4 5 10\n3 2\n1 3 4 7\n2 2 3 5\n3 3 6 7\n2 3 3 5\n3 3 7 9''') == '8'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '8'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '8'\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '5'\nassert solution(\n'''5 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '6'\nassert solution(\n'''5 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '7'\nassert solution(\n'''5 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '8'\nassert solution(\n'''5 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9''') == '9'\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\nassert stdin == \"5 2\\n2 4 same\\n3 5 same\\n2 4 same\\n3 5 same\\n2 4 same\\n3 5 same\\n2 4 same\\n3 5 same\"\n\nprint(\"All Tests Passed!\")\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\""
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"2 4 same\\n\"\n    \"3 5 same\\n\") == \"4\"\nassert solution(\n    \"5 2\\n\"\n    \"2 4 same\\n\"\n    \"3 5 same\\n\") == \"0\"\nassert solution(\n    \"5 2\\n\"\n    \"2 4 same\\n\"\n    \"3 5 diff\\n\") == \"1\"\nassert solution(\n    \"5 3\\n\"\n    \"2 4 diff\\n\"\n    \"3 5 diff\\n\") == \"2\"\nassert solution(\n    \"5 3\\n\"\n    \"2 4 diff\\n\"\n    \"3 5 diff\\n\") == \"0\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 2 same') == '1'\nassert solution('1 2 same\\n2 3 same') == '1'\nassert solution('1 2 same\\n3 4 same') == '1'\nassert solution('1 2 same\\n3 4 different') == '2'\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n\nclass Answer:\n    def __init__(self, answers: list) -> None:\n        self.answers = answers\n        self.count = defaultdict(lambda: 0)\n        for answer in self.answers:\n            self.count[answer] += 1\n    \n    def __str__(self):\n        result = \"\"\n        for answer, count in self.count.items():\n            result += \"%s: %d\\n\" % (answer, count)\n        return result"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 1\n0 2\n3 4\n3 5\n''') == '3'\nassert solution('''0 1\n0 2\n2 3\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''0 1\n0 2\n1 3\n3 4\n2 4\n3 5\n2 5\n3 4\n''') == '3'\nassert solution('''0 1\n0 2\n2 3\n1 3\n3 4\n2 4\n1 5\n2 4\n''') == '2'\nassert solution('''0 1\n0 2\n1 3\n3 4\n2 4\n1 5\n2 4\n1 6\n3 5\n''') == '1'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 1\\n0 2\") == \"3\"\nassert solution(\"1 2\\n0 2\\n0 3\\n3 4\\n1 4\\n2 4\\n2 3\") == \"3\"\nassert solution(\"0 1\\n0 2\\n0 3\") == \"3\"\nassert solution(\"0 1\\n0 2\\n0 3\\n3 4\\n3 5\") == \"3\"\nassert solution(\"0 1\\n0 2\\n0 3\\n4 5\\n3 5\") == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n0 1\\n0 2\\n3 4\\n3 5\\n') == '3'\nassert solution('5\\n0 1\\n0 2\\n3 4\\n3 5\\n0 4\\n') == '1'\nassert solution('5\\n0 1\\n0 2\\n3 4\\n3 5\\n0 4\\n') == '1'\nassert solution('5\\n0 1\\n0 2\\n3 4\\n3 5\\n0 4\\n') == '1'\nassert solution('5\\n0 1\\n0 2\\n3 4\\n3 5\\n0 4\\n') == '1'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 4\n0 1\n0 2\n3 4\n3 5''') == '3'\nassert solution('''6 4\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n0 11\n1 2\n1 3\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n''') == '5'\nassert solution('''6 4\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n0 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n''') == '0'\nassert solution('''6 4\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n0 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n''') == '0'\nassert solution('''6 4\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n0 11\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n6 7\n6 8\n6 9\n6 10\n6 11\n7 8\n7 9\n7 10\n7 11\n8 9\n8 10\n8 11\n9 10\n9 11\n10 11\n''') == '0'\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_cable\").read()) == 3\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1 4\\n0 1\\n2 3\\n0 2\\n3 4\\n0 1\") == \"2\"\nassert solution(\"2 2\\n0 1\\n0 2\\n1 2\") == \"2\"\nassert solution(\"2 4\\n0 1\\n1 2\\n1 3\") == \"2\"\nassert solution(\"1 4\\n0 1\\n1 2\\n0 2\\n1 3\\n0 3\") == \"3\"\nassert solution(\"2 4\\n0 1\\n0 2\\n1 2\\n1 3\") == \"2\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 1\n0 2\n3 4\n3 5''') == '3'\nassert solution('''0 1\n0 2\n1 3\n1 4\n2 5\n3 6\n4 7\n4 8\n5 9\n5 10\n5 11\n6 12\n6 13\n6 14\n6 15\n7 16\n7 17\n7 18\n8 19\n8 20\n8 21\n8 22\n9 23\n9 24\n9 25''') == '8'\nassert solution('''0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n1 10\n2 11\n3 12\n4 13\n4 14\n4 15\n5 16\n5 17\n5 18\n5 19\n5 20\n5 21\n5 22\n5 23\n6 24\n6 25\n6 26\n7 27\n7 28\n7 29\n7 30\n8 31\n8 32\n8 33\n8 34\n8 35\n8 36\n8 37\n8 38\n8 39\n8 40\n8 41\n8 42\n9 43\n9 44\n9 45\n9 46\n9 47\n9 48\n9 49\n9 50\n9 51\n9 52\n9 53\n9 54\n9 55\n9 56\n9 57\n9 58\n9 59\n9 60\n9 61\n9 62\n9 63\n9 64\n9 65\n9 66\n9 67\n9 68\n9 69\n9 70\n9 71\n9 72\n9 73\n9 74\n9 75\n9 76\n9 77\n9 78\n9 79\n9 80\n9 81\n9 82\n9 83\n9 84\n9 85\n9 86\n9 87\n9 88\n9 89\n9 90\n9 91\n9 92\n9 93\n9 94\n9 95\n9 96\n9 97\n9 98\n9 99\n9 100\n10 101\n10 102\n10 103\n10 104\n10 105\n10 106\n10 107\n10 108\n10 109\n10 110\n10 111\n10 112\n10 113\n10 114\n10 115\n10 116\n10 117\n10 118\n10 119\n10 120\n10 121\n10 122\n10 123\n10 124\n10 125\n10 126\n10 127\n10 128\n10 129\n10 130\n10 131\n10 132\n10 133\n10 134\n10 135\n10 136\n10 137\n10 138\n10 139\n10 140\n10 141\n10 142\n10 143\n10 144\n10 145\n10 146\n10 147\n10 148\n10 149\n10 150\n10 151\n10 152\n10 153\n10 154\n10 155\n10 156\n10 157\n10 158\n10 159\n10 160\n10 161\n10 162\n10 163\n10 164\n10 165\n10 166\n10 167\n10 168\n10 169\n10 170\n10 171\n10 172\n10 173\n10 174\n10 175\n10 176\n10 177\n10 178\n10 179\n10 180\n10 181\n10 182\n10 183\n10 184\n10 185\n10 186\n10 187\n10 188\n10 189\n10 190\n10 191\n10 192\n10 193\n10 194\n10 195\n10 196\n10 197\n10 198\n10 199\n10 200\n10 201\n10 202\n10 203\n10 204\n10 205\n10 206\n10 207\n10 208\n10 209\n10 210\n10 211\n10 212\n10 213\n10 214\n10 215\n10 216\n10 217\n10 218\n10 219\n10 220\n10 221\n10 222\n10 223\n10 224\n10 225\n10 226\n10 227\n10 228\n10 229\n10 230\n10 231\n10 232\n10 233\n10 234\n10 235\n10 236\n10 237\n10 238\n10 239\n10 240\n10 241\n10 242\n10 243\n10 244\n10 245\n10 246\n10 247\n10 248\n10 249\n10 250\n10 251\n10 252\n10 253\n10 254\n10 255\n10 256\n10 257\n10 258\n10 259\n10 260\n10 261\n10 262\n10 263\n10 264\n10 265\n10 266\n10 267\n10 268\n10 269\n10 270\n10 271\n10 272\n10 273\n10 274\n10 275\n10 276\n10 277\n10 278\n10 279\n10 280\n10 281\n10 282\n10 283\n10 284\n10 285\n10 286\n10 287\n10 288\n10 289\n10 290\n10 291\n10 292\n10 293\n10 294\n10 295\n10 296\n10 297\n10 298\n10 299\n10 300\n10 301\n10 302\n10 303\n10 304\n10 305\n10 306\n10 307\n10 308\n10 309\n10 310\n10 311\n10 312\n10 313\n10 314\n10 315\n10 316\n10 317\n10 318\n10 319\n10 320\n10 321\n10 322\n10 323\n10 324\n10 325\n10 326\n10 327\n10 328\n10 329\n10 330\n10 331\n10 332\n10 333\n10 334\n10 335\n10 336\n10 337\n10 338\n10 339\n10 340\n10 341\n10 342\n10 343\n10 344\n10 345\n10 346\n10 347\n10 348\n10 349\n10 350\n10 351\n10 352\n10 353\n10 354\n10 355\n10 356\n10 357\n10 358\n10 359\n10 360\n10 361\n10 362\n10 363\n10 364\n10 365\n10 366\n10 367\n10 368\n10 369\n10 370\n10 371\n10 372\n10 373\n10 374\n10 375\n10 376\n10 377\n10 378\n10 379\n10 380\n10 381\n10 382\n10 383\n10 384\n10 385\n10 386\n10 387\n10 388\n10 389\n10 390\n10 391\n10 392\n10 393\n10 394\n10 395\n10 396\n10 397\n10 398\n10 399\n10 400\n10 401\n10 402\n10 403\n10 404\n10 405\n10 406\n10 407\n10 408\n10 409\n10 410\n10 411\n10 412\n10 413\n10 414\n10 415\n10 416\n10 417\n10 418\n10 419\n10 420\n10 421\n10 422\n10 423\n10 424\n10 425\n10 426\n10 427\n10 428\n10 429\n10 430\n10 431\n10 432\n10 433\n10 434\n10 435\n10 436\n10 437\n10 438\n10 439\n10 440\n10 441\n10 442\n10 443\n10 444\n10 445\n10 446\n10 447\n10 448\n10 449\n10 450\n10 451\n10 452\n10 453\n10 454\n10 455\n10 456\n10 457\n10 458\n10 459\n10 460\n10 461\n10 462\n10 463\n10 464\n10 465\n10 466\n10 467\n10 468\n10 469\n10 470\n10 471\n10 472\n10 473\n10 474\n10 475\n10 476\n10 477\n10 478\n10 479\n10 480\n10 481\n10 482\n10 483\n10 484\n10 485\n10 486\n10 487\n10 488\n10 489\n10 490\n10 491\n10 492\n10 493\n10 49"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\n'''\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\nassert solution('''1\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\nassert solution('''2\n1 2\n2 3\n3 1\n4 1\n1 3\nLUR''') == '6.5\\n2.5'\nassert solution('''1\n1 2\n2 3\n3 1\n4 1\n1 3\n''') == '6.5'\nassert solution('''1\n1 2\n2 3\n3 1\n4 1\n1 3\n4 1\n1 3\n''') == '6.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\n''') == '9.0 6.5 2.5'\nassert solution('''\n9\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\nassert solution('''10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\nLUR''') == '25.0'\nassert solution('''20\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\n'''\nassert solution('''4\n1 2\n2 3\n3 4\n1 2''') == '2.0'\n\nassert solution('''5\n1 4\n2 3\n3 4\n4 5\n1 4\n''') == '2.0'\n\nassert solution('''3\n1 2\n2 3\n3 4\n4 1\n1 2\n2 3''') == '3.0'\n\nassert solution('''10\n1 5\n2 5\n3 4\n4 1\n1 2\n2 3\n3 4\n4 5\n1 4\n1 2\n''') == '3.0'"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\nLUR\\n') == '9.0\\n6.5\\n2.5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\nLLR\\n') == '9.0\\n6.5\\n2.5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\nRRDD\\n') == '9.0\\n6.5\\n2.5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\nLLLL\\n') == '9.0\\n6.5\\n2.5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\nUUUU\\n') == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\n'''\n) == '9.0\\n6.5\\n2.5'\n\nassert solution(\n'''\n5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\n'''\n) == '9.0\\n6.5\\n2.5'\n\nassert solution(\n'''\n3\n1 2\n2 2\n1 1\n'''\n) == '3.0'\n\nassert solution(\n'''\n4\n1 2\n2 2\n1 1\n1 1\n'''\n) == '4.0'\n\nassert solution(\n'''\n7\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n'''\n) == '1.0'"
    },
    {
        "number": 3528,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n'''\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\n\n--- 32 ms ---\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'\nassert solution('5 5 5\\nB 4 1 2\\nR 1 4 2\\nR 2 3 3\\nR 3 4 4\\nB 1 4 3\\nB 3 4 5\\nR 4 3 1') == '1'\nassert solution('7 7 6\\nB 2 1 1\\nR 4 1 2\\nB 1 4 3\\nR 5 6 4\\nR 6 4 3\\nR 3 4 5\\nB 1 4 6\\nB 3 4 5\\nB 2 3 6\\nR 3 1 4') == '1'\nassert solution('7 7 6\\nB 2 1 1\\nR 4 1 2\\nB 1 4 3\\nR 5 6 4\\nR 6 4 3\\nR 3 4 5\\nB 1 4 6\\nB 3 4 5\\nR 4 3 1\\nB 3 1 5') == '1'\nassert solution('7 7 6\\nB 2 1 1\\nR 4 1 2\\nB 1 4 3\\nR 5 6 4\\nR 6 4 3\\nR 3 4 5\\nB 1 4 6\\nB 3 4 5\\nR 4 3 1\\nB 3 1 5') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 2') == '1'\nassert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'\nassert solution('5 3 2\\nB 1 2\\nB 2 3\\nB 3 4\\nR 3 1\\nB 1 3\\nB 2 4\\nB 3 5\\nR 4 1\\nR 5 2') == '1'\nassert solution('4 5 2\\nR 1 2\\nR 2 3\\nR 3 4\\nR 4 5') == '0'\nassert solution('3 4 1\\nR 1 2\\nR 2 3\\nR 3 4\\nR 4 5') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\nassert stdin == \"\"\"3 3 2\nB 1 2\nB 2 3\nR 3 1\"\"\"\n\n\"\"\"\n    n: int = int(stdin.readline().strip())\n    m: int = int(stdin.readline().strip())\n    k: int = int(stdin.readline().strip())\n    graph: List[List[int]] = [[] for _ in range(n)]\n    for i in range(m):\n        u, v, c = stdin.readline().strip().split(\" \")\n        u, v, c = int(u), int(v), int(c)\n        if c == 2:\n            graph[u].append(v)\n            graph[v].append(u)\n    blue: int = 0\n    red: int = 0\n    visited: List[int] = [False] * n\n    for node in range(n):\n        if not visited[node]:\n            red += 1\n            if blue == k:\n                return \"0\"\n            if check(graph, visited, node):\n                blue += 1\n                if blue == k:\n                    return \"1\"\n                visited[node] = True\n    return \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''2 2 2\nB 1 2\nB 2 3\nR 2 3\n''') == '0'\nassert solution('''4 4 2\nB 1 2\nB 2 3\nB 3 4\nR 1 4\nR 2 3\nR 3 4\nR 4 1\n''') == '1'\nassert solution('''5 4 2\nB 1 2\nB 2 3\nB 3 4\nB 4 5\nR 1 4\nR 2 3\nR 3 4\nR 4 5\n''') == '0'\nassert solution('''5 5 3\nB 1 2\nB 2 3\nB 3 4\nB 4 5\nB 5 6\nR 1 4\nR 1 5\nR 2 3\nR 2 4\nR 2 5\nR 3 4\nR 3 5\nR 4 5\nR 5 6\n''') == '1'\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\n1 1 1\\n1 2 1\\n1 1 1\\n1 2 1\\n1 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 2 1\\n1 2 1\\n1 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 2 1\\n1 2 1\\n1 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1"
    },
    {
        "number": 3529,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n5 0 5\n7 0 7\n4\n88\n5''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''2\n3 2 4\n5 0 6\n7 0 7\n4\n13\n5\n6\n7\n''') == '12\\n5\\n5\\n5\\n5'\nassert solution('''2\n1 4 0\n5 0 1\n7 0 7\n4\n2\n5\n6\n7''') == '8\\n5\\n5\\n5\\n7'\nassert solution('''2\n1 4 0\n2 4 0\n5 0 1\n7 0 7\n4\n2\n5\n6\n7''') == '8\\n5\\n5\\n5\\n7'\nassert solution('''1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n2 1 1\n3 1 3\n5 1 5\n6 1 6\n8 1 8\n9 1 9\n10 1 10\n11 1 11\n12 1 12\n13 1 13\n14 1 14\n15 1 15\n16 1 16\n17 1 17\n18 1 18\n19 1 19\n20 1 20\n21 1 21\n22 1 22\n23 1 23\n24 1 24\n25 1 25\n26 1 26\n27 1 27\n28 1 28\n29 1 29\n30 1 30\n31 1 31\n32 1 32\n33 1 33\n34 1 34\n35 1 35\n36 1 36\n37 1 37\n38 1 38\n39 1 39\n40 1 40\n41 1 41\n42 1 42\n43 1 43\n44 1 44\n45 1 45\n46 1 46\n47 1 47\n48 1 48\n49 1 49\n50 1 50\n51 1 51\n52 1 52\n53 1 53\n54 1 54\n55 1 55\n56 1 56\n57 1 57\n58 1 58\n59 1 59\n60 1 60\n61 1 61\n62 1 62\n63 1 63\n64 1 64\n65 1 65\n66 1 66\n67 1 67\n68 1 68\n69 1 69\n70 1 70\n71 1 71\n72 1 72\n73 1 73\n74 1 74\n75 1 75\n76 1 76\n77 1 77\n78 1 78\n79 1 79\n80 1 80\n81 1 81\n82 1 82\n83 1 83\n84 1 84\n85 1 85\n86 1 86\n87 1 87\n88 1 88\n89 1 89\n90 1 90\n91 1 91\n92 1 92\n93 1 93\n94 1 94\n95 1 95\n96 1 96\n97 1 97\n98 1 98\n99 1 99\n100 1 100\n101 1 101\n102 1 102\n103 1 103\n104 1 104\n105 1 105\n106 1 106\n107 1 107\n108 1 108\n109 1 109\n110 1 110\n111 1 111\n112 1 112\n113 1 113\n114 1 114\n115 1 115\n116 1 116\n117 1 117\n118 1 118\n119 1 119\n120 1 120\n121 1 121\n122 1 122\n123 1 123\n124 1 124\n125 1 125\n126 1 126\n127 1 127\n128 1 128\n129 1 129\n130 1 130\n131 1 131\n132 1 132\n133 1 133\n134 1 134\n135 1 135\n136 1 136\n137 1 137\n138 1 138\n139 1 139\n140 1 140\n141 1 141\n142 1 142\n143 1 143\n144 1 144\n145 1 145\n146 1 146\n147 1 147\n148 1 148\n149 1 149\n150 1 150\n151 1 151\n152 1 152\n153 1 153\n154 1 154\n155 1 155\n156 1 156\n157 1 157\n158 1 158\n159 1 159\n160 1 160\n161 1 161\n162 1 162\n163 1 163\n164 1 164\n165 1 165\n166 1 166\n167 1 167\n168 1 168\n169 1 169\n170 1 170\n171 1 171\n172 1 172\n173 1 173\n174 1 174\n175 1 175\n176 1 176\n177 1 177\n178 1 178\n179 1 179\n180 1 180\n181 1 181\n182 1 182\n183 1 183\n184 1 184\n185 1 185\n186 1 186\n187 1 187\n188 1 188\n189 1 189\n190 1 190\n191 1 191\n192 1 192\n193 1 193\n194 1 194\n195 1 195\n196 1 196\n197 1 197\n198 1 198\n199 1 199\n200 1 200\n201 1 201\n202 1 202\n203 1 203\n204 1 204\n205 1 205\n206 1 206\n207 1 207\n208 1 208\n209 1 209\n210 1 210\n211 1 211\n212 1 212\n213 1 213\n214 1 214\n215 1 215\n216 1 216\n217 1 217\n218 1 218\n219 1 219\n220 1 220\n221 1 221\n222 1 222\n223 1 223\n224 1 224\n225 1 225\n226 1 226\n227 1 227\n228 1 228\n229 1 229\n230 1 230\n231 1 231\n232 1 232\n233 1 233\n234 1 234\n235 1 235\n236 1 236\n237 1 237\n238 1 238\n239 1 239\n240 1 240\n241 1 241\n242 1 242\n243 1 243\n244 1 244\n245 1 245\n246 1 246\n247 1 247\n248 1 248\n249 1 249\n250 1 250\n251 1 251\n252 1 252\n253 1 253\n254 1 254\n255 1 255\n256 1 256\n257 1 257\n258 1 258\n259 1 259\n260 1 260\n261 1 261\n262 1 262\n263 1 263\n264 1 264\n265 1 265\n266 1 266\n267 1 267\n268 1 268\n269 1 269\n270 1 270\n271 1 271\n272 1 272\n273 1 273\n274 1 274\n275 1 275\n276 1 276\n277 1 277\n278 1 278\n279 1 279\n280 1 280\n281 1 281\n282 1 282\n283 1 283\n284 1 284\n285 1 285\n286 1 286\n287 1 287\n288 1 288\n289 1 289\n290 1 290\n291 1 291\n292 1 292\n293 1 293\n294 1 294\n295 1 295\n296 1 296\n297 1 297\n298 1 298\n299 1 299\n300 1 300\n301 1 301\n302 1 302\n303 1 303\n304 1 304\n305 1 305\n306 1 306\n307 1 307\n308 1 308\n309 1 309\n310 1 310\n311 1 311\n312 1 312\n313 1 313\n314 1 314\n315 1 315\n316 1 316\n317 1 317\n318 1 318\n319 1 319\n320 1 320\n321 1 321\n322 1 322\n323 1 323\n324 1 324\n325 1 325\n326 1 326\n327 1 327\n328 1 328\n329 1 329\n330 1 330\n331 1 331\n332 1 332\n333 1 333\n334 1 334\n335 1 335\n336 1 336\n337 1 337\n338 1 338\n339 1 339\n340 1 340\n341 1 341\n342 1 342\n343 1 343\n344 1 344\n345 1 345\n346 1 346\n347 1 347\n348 1 348\n349 1 349\n350 1 350\n351 1 351\n352 1 352\n353 1 353\n354 1 354\n355 1 355\n356 1 356\n357 1 357\n358 1 358\n359 1 359\n360 1 360\n361 1 361\n362 1 362\n363 1 363\n364 1 364\n365 1 365\n366 1 366\n367 1 367\n368 1 368\n369 1 369\n370 1 370\n371 1 371\n372 1 372\n373 1 373\n374 1 374\n375 1 375\n376 1 376\n377 1 377\n378 1 378\n379 1 379\n380 1 380\n381 1 381\n382 1 382\n383 1 383\n384 1 384"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"88\\n5\\n5\\n7\\n7\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1661\\n1234\\n1631\\n721\\n62\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\n'''"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7''') == '88\\n5\\n5\\n7\\n7'\nassert solution('''4\n1 1 1\n1 2 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3530,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(solution.readstdin()) == str(solution(input))\n\"\"\"\n\nn, m, k, w = map(int, stdin.readline().split())\nS = sorted(list(map(int, stdin.readline().split())))"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\n\n-----Solution-----\n\n1. Find the minimum cost to create a nature park.\n2. If it is possible, then try to find the minimum cost to blaze the trails from the special places.\n\n\"\"\""
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '3 3 1 2'\n    '2'\n    '1 2 2'\n    '1 3 1'\n    '2 3 3'\n) == '5'\nassert solution(\n    '5 5 1 2'\n    '1'\n    '1 2 2'\n    '1 3 1'\n    '2 3 3'\n) == '-1'\nassert solution(\n    '2 2 1 1'\n    '1'\n    '1 2 2'\n    '1 3 1'\n    '2 3 3'\n) == '-1'\nassert solution(\n    '3 3 1 2'\n    '1'\n    '1 2 2'\n    '1 3 1'\n    '2 3 3'\n) == '5'\nassert solution(\n    '2 2 1 1'\n    '1'\n    '1 2 2'\n    '1 3 1'\n    '2 3 3'\n) == '-1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '5'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '-1'\nassert solution('''4 2 1 2\n2\n1 2 1\n1 3 1\n2 3 3''') == '-1'\nassert solution('''4 2 1 2\n2\n1 2 1\n1 3 1\n2 3 3''') == '0'\nassert solution('''4 2 1 2\n2\n1 2 1\n1 3 1\n2 3 3''') == '0'\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '5'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '-1'\nassert solution('''4 4 1 2\n3\n1 2 2\n1 3 1\n2 3 3\n2 4 1\n2 3 1''') == '7'\nassert solution('''4 4 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n2 4 1\n2 3 1''') == '-1'\nassert solution('''4 4 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n2 4 1\n2 3 1''') == '9'\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == -1\nassert solution(\"2 2 1 2\") == 5\nassert solution(\"2 3 1 3\") == 8\nassert solution(\"2 3 3 1\") == 3\nassert solution(\"3 3 1 2\") == 8\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\nassert solution(\"2 2 2 2\") == \"\"\nassert solution(\"3 3 3 3\") == \"\"\nassert solution(\"4 4 4 4\") == \"\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n2\\n1\\n1\") == 3\nassert solution(\"2\\n1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n3\\n3\") == 7\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n3\\n3\") == -1\nassert solution(\"3\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n3\\n3\") == 9\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n3\\n3\") == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1000000\") == \"2\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\n\nassert solution('mirkovC4nizCC44') =='mirkovniz'\n\nassert solution('cc') == 'FRULA'\n\nassert solution('CC') == 'FRULA'\n\nassert solution('cc') == 'FRULA'"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''C4nizCC44''') =='mirkovniz'\nassert solution('C4') =='mirkovniz'\nassert solution('nizCC4') =='mirkovniz'\nassert solution('C4nizCC44') =='mirkovniz'\nassert solution('nizCC4C4C4C4C4C4') =='mirkovniz'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44\", \"C4\") == \"mirkovniz\"\nassert solution(\"abcd\", \"abcd\") == \"FRULA\"\nassert solution(\"zCz\", \"zCz\") == \"FRULA\"\nassert solution(\"aba\", \"a\") == \"FRULA\"\n\n---\n\n## Python3"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ccnizC') == 'FRULA'\nassert solution('ccnizC') == 'FRULA'\nassert solution('ccnizC') == 'FRULA'\nassert solution('ccnizC') == 'FRULA'\nassert solution('ccnizC') == 'FRULA'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('Hello World') == 'World'\nassert solution('B!') == 'B'\nassert solution('B!c') == 'BC'\nassert solution('B!cC!cC!cC!c') == 'c'\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"FRULA\"\nassert solution(\"ccCCCCCC\") == \"FRULA\"\nassert solution(\"CCCCCCCC\") == \"FRULA\"\nassert solution(\"CCCCCCCCCCCCCCCCCC\") == \"FRULA\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"FRULA\"\nassert solution(\"CCCCCCCCCC\") == \"FRULA\"\nassert solution(\"PYTHON\") == \"PYTHON\""
    },
    {
        "number": 3532,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'FRULA'\nassert solution('abcde') == 'bcde'\nassert solution('abcdeabcde') == 'abcde'\nassert solution('abcdeabcde') == 'abcde'\nassert solution('abcdeabcde') == 'abcde'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 65\n45 10\n60 25''') == '32'\nassert solution('''2\n10 10\n10 10''') == '0'\nassert solution('''3\n45 10\n10 45\n10 10''') == '9'\nassert solution('''3\n45 45\n45 45\n45 45''') == '0'\nassert solution('''5\n20 25\n20 35\n20 45\n20 25\n20 25''') == '10'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == '32'\nassert solution('5\\n5 90\\n30 90\\n20 25\\n45 25') == '48'\nassert solution('5\\n5 90\\n30 90\\n20 25\\n45 25\\n60 25') == '59'\nassert solution('6\\n5 90\\n30 90\\n20 25\\n45 25\\n60 25') == '59'\nassert solution('4\\n5 90\\n30 90\\n20 25\\n45 25\\n60 25') == '59'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\"\"3\n3 65\n45 10\n60 25\"\"\") == \"32\"\nassert solution(\"\"\"4\n0 1\n1 10000000\n1 10000000\n1 10000000\n1 10000000\"\"\") == \"8\"\nassert solution(\"\"\"10\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\"\"\") == \"12\"\nassert solution(\"\"\"7\n6 3\n2 1\n4 8\n9 7\n8 8\n9 8\n9 8\n8 8\"\"\") == \"21\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == '32'\nassert solution('5\\n34 43\\n5 9\\n5 5\\n1 11\\n19 8\\n5 10\\n5 9\\n5 1') == '10'\nassert solution('5\\n4 12\\n5 1\\n6 9\\n6 1') == '6'\nassert solution('10\\n13 4\\n3 7\\n6 10\\n8 8\\n4 9\\n4 2\\n5 6\\n7 3') == '30'\nassert solution('3\\n3 2\\n2 3\\n1 1\\n1 1') == '0'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n3 65\n45 10\n60 25\"\"\") == \"32\"\nassert solution(\"\"\"3\n3 65\n45 10\n60 25\"\"\") == \"32\"\nassert solution(\"\"\"2\n3 21\n5 25\n7 25\"\"\") == \"50\"\nassert solution(\"\"\"2\n3 21\n5 25\n7 25\"\"\") == \"50\"\nassert solution(\"\"\"1\n1 1\n1 1\n1 1\"\"\") == \"0\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"2_tolls.in\").read()) == \"14\"\n\nprint(solution(open(\"1_tolls.in\").read()))\n\nprint(solution(open(\"2_tolls.in\").read()))\n\nprint(solution(open(\"3_tolls.in\").read()))\n\nprint(solution(open(\"4_tolls.in\").read()))\n\nprint(solution(open(\"5_tolls.in\").read()))\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '32'\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n----------------------------------------------------------------------------------------------------------\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"32\"\n\nprint(\"Input (stdin) and output (stdout) are same!\")\n"
    },
    {
        "number": 3533,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 5\") == \"5\"\nassert solution(\"3\\n3 7\") == \"1\"\nassert solution(\"3\\n3 3\") == \"2\"\nassert solution(\"3\\n5 9\") == \"4\"\nassert solution(\"3\\n9 7\") == \"2\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 0 3 1''') == '3\\n2'\nassert solution('''10\n7 1 9 8 3 2 4 1''') == '5'\nassert solution('''100\n3 1 3 2 3 2 3 3 3''') == '7'\nassert solution('''10\n9 9 7 5 7 5 7 5''') == '8'\nassert solution('''10\n3 4 4 4 4 4 4 4 4''') == '3'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"5\\n1\"\n\"\"\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ['3', '2']\nassert solution(\"2 2 1 1 3\") == ['2', '2']\nassert solution(\"1 1 1 1 1 1\") == ['2', '1']\nassert solution(\"3 3 2 1 1\") == ['3', '1']\nassert solution(\"3 1 2 3 1\") == ['3', '2']\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '[3,2,1]'\n\"\"\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    5\n    1 2 0 3 1\n    '''\n    ) == '3'\n\nassert solution(\n    '''\n    6\n    1 2 0 3 1 4\n    '''\n    ) == '3'\n\nassert solution(\n    '''\n    6\n    1 2 0 3 1 4 5\n    '''\n    ) == '3'\n\nassert solution(\n    '''\n    6\n    1 2 0 3 1 4 5 6\n    '''\n    ) == '3'\n\nassert solution(\n    '''\n    6\n    1 2 0 3 1 4 5 6 7\n    '''\n    ) == '3'"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 0 3 1''') == '3'\nassert solution('''3\n1 2 0''') == '2'\nassert solution('''4\n1 2 0 3 1''') == '2'\nassert solution('''6\n1 2 0 3 1 4 2''') == '2'\nassert solution('''10\n1 2 0 3 1 4 2 5 2 3 1''') == '5'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[2]\nSample Input 1:\n5\n-10 1 2 3 1\nSample Output 1:\n1\nSample Input 2:\n5\n-10 -10 -10 -10 -10\nSample Output 2:\n3\nSample Input 3:\n5\n1 -1 -1 -1 -1\nSample Output 3:\n3\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 0 3 1''') == '3'\nassert solution('''5\n1 2 0 3 1''') == '2'\nassert solution('''5\n1 2 0 3 4''') == '3'\nassert solution('''5\n1 2 0 3 4''') == '2'\nassert solution('''5\n1 2 0 3 4''') == '2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"5\\n1 2 0 3 1\\n\"\n\"5\\n0 1 3 2 0\\n\"\n\"5\\n0 1 3 2 0\\n\"\n\"5\\n0 1 3 2 0\") == '3\\n2'\nassert solution(\n\"10\\n5 9 7 2 8 4 5 6 2 0\\n\"\n\"6\\n4 2 0 0 2 0 2 0 0\\n\"\n\"5\\n0 0 0 1 0 0 1 1 1\\n\"\n\"6\\n3 0 1 1 0 1 1 0\\n\"\n\"5\\n1 1 1 1 1 1 1 1 1\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\") == '7\\n5'\nassert solution(\n\"10\\n5 9 7 2 8 4 5 6 2 0\\n\"\n\"6\\n4 2 0 0 2 0 2 0 0\\n\"\n\"5\\n0 0 0 1 0 0 1 1 1\\n\"\n\"6\\n3 0 1 1 0 1 1 0\\n\"\n\"5\\n1 1 1 1 1 1 1 1 1\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\") == '7\\n5'\nassert solution(\n\"10\\n5 9 7 2 8 4 5 6 2 0\\n\"\n\"6\\n4 2 0 0 2 0 2 0 0\\n\"\n\"5\\n0 0 0 1 0 0 1 1 1\\n\"\n\"6\\n3 0 1 1 0 1 1 0\\n\"\n\"5\\n1 1 1 1 1 1 1 1 1\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\") == '7\\n5'\nassert solution(\n\"10\\n5 9 7 2 8 4 5 6 2 0\\n\"\n\"6\\n4 2 0 0 2 0 2 0 0\\n\"\n\"5\\n0 0 0 1 0 0 1 1 1\\n\"\n\"6\\n3 0 1 1 0 1 1 0\\n\"\n\"5\\n1 1 1 1 1 1 1 1 1\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\\n\"\n\"4\\n0 0 0 0 0 0 0 0 0\") == '7\\n5'\n"
    },
    {
        "number": 3534,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3') == '3'\nassert solution('1\\n3\\n2\\n1\\n3') == '3'\nassert solution('2\\n3\\n2\\n1\\n3') == '3'\nassert solution('1\\n3\\n2\\n1\\n3\\n2\\n1\\n3') == '3'\nassert solution('2\\n3\\n2\\n1\\n3\\n2\\n1\\n3') == '3'\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"inputs/test_solution\").read()) == \"0\"\nassert solution(open(\"inputs/test_solution_2\").read()) == \"2\"\nassert solution(open(\"inputs/test_solution_3\").read()) == \"16\"\nassert solution(open(\"inputs/test_solution_4\").read()) == \"12\"\nassert solution(open(\"inputs/test_solution_5\").read()) == \"8\""
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 4') == '2'\n\"\"\""
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(\"2 1 4\") == \"0\"\n\nassert solution(\"2 1 2\") == \"2\"\n\nassert solution(\"3 1 2\") == \"2\"\n\nassert solution(\"3 1 3\") == \"6\""
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == '2'\n'''\nSample Output:\n2\n'''\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 4 4\"\n    \"+ 1 1\"\n    \"- 1 2\"\n    \"+ 1 3\"\n    \"- 1 4\"\n) == \"2\"\nassert solution(\n    \"3 3 1\"\n    \"+ 1 1\"\n    \"- 1 1\"\n    \"+ 1 1\"\n    \"- 1 1\"\n    \"- 1 1\"\n) == \"6\"\nassert solution(\n    \"4 5 4\"\n    \"+ 1 1\"\n    \"- 1 1\"\n    \"+ 1 1\"\n    \"- 1 1\"\n    \"- 1 1\"\n) == \"2\"\nassert solution(\n    \"6 4 5\"\n    \"+ 1 1\"\n    \"- 1 1\"\n    \"+ 1 1\"\n    \"- 1 1\"\n    \"- 1 1\"\n) == \"2\"\nassert solution(\n    \"1 2 1\"\n    \"+ 1 1\"\n    \"- 1 1\"\n    \"+ 1 1\"\n    \"- 1 1\"\n    \"- 1 1\"\n) == \"3\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"/home/nikhil/Documents/trainings/hack/2015-5/bernstein-code-testing/test/templates/test_1.txt\").read()) == \"2\"\n\"\"\"\n\nfrom math import factorial"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n''') == '2'\n\nassert solution(\n'''\n1 1 1\n1 1\n1 1\n''') == '3'\n\nassert solution(\n'''\n1 1 1\n1 1\n1 1\n''') == '1'\n\nassert solution(\n'''\n3 3 3\n+ 1 1\n+ 2 2\n+ 3 3\n- 1 1\n- 2 2\n- 3 3\n''') == '2'\n\nassert solution(\n'''\n3 3 3\n+ 1 1\n+ 2 2\n+ 3 3\n- 1 1\n- 2 2\n- 3 3\n''') == '2'"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n\"\"\") == '2'\nassert solution(\n    \"\"\"2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n\"\"\") == '2'\n\"\"\"\n=======\nMaximum Subarray\n\nGiven a non-empty array of integers, find the k-th largest element in the array.\n\nNote that it is the kth largest element in the sorted order, not the kth distinct element.\n\nExample 1:\n\nInput: [3,2,1,5,6,4] and k = 2\nOutput: 5\nExample 2:\n\nInput: [3,2,3,1,2,4,5,5,6] and k = 4\nOutput: 4\nNote:\nYou may assume k is always valid, 1 \u2264 k \u2264 array's length.\n\"\"\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nassert solution('1 1 1\\n- 1 1\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '0'\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3535,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input/1.txt\").read()) == \"2\"\nassert solution(open(\"test_input/2.txt\").read()) == \"2\"\nassert solution(open(\"test_input/3.txt\").read()) == \"8\"\nassert solution(open(\"test_input/4.txt\").read()) == \"5\"\nassert solution(open(\"test_input/5.txt\").read()) == \"11\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0\\n1 1\\n0 0') == '500000004'\nassert solution('1\\n0\\n1') == '500000004'\nassert solution('1000000000 0\\n1000000000 1\\n0 0\\n0 1') == '500000004'\nassert solution('1000000000 0\\n1000000000 1\\n0 0\\n1 1') == '500000004'\nassert solution('1000000000 0\\n1000000000 1\\n0 0\\n1 0') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1000000000 0\n1000000000 1\n''') == '500000004'\nassert solution('''\n3\n1000000000 0\n1000000000 1\n1000000000 2\n''') == '100000002'\nassert solution('''\n10\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5\n1000000000 6\n1000000000 7\n1000000000 8\n1000000000 9\n1000000000 10\n''') == '1'\nassert solution('''\n10\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5\n1000000000 6\n1000000000 7\n1000000000 8\n1000000000 9\n1000000000 10\n1000000000 11\n''') == '1'\nassert solution('''\n10\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5\n1000000000 6\n1000000000 7\n1000000000 8\n1000000000 9\n1000000000 10\n1000000000 11\n''') == '1'\n'''\n'''"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"500000004\"\n\nNote:\n$n\\!\\equiv \\! 1 \\pmod {10^9{+}7}$\n$b\\!\\equiv \\! 0 \\pmod {10^9{+}7}$\n$p\\!\\equiv \\! 0 \\pmod {10^9{+}7}$\n$Q\\!\\equiv \\! 0 \\pmod {10^9{+}7}$\n$P\\!\\equiv \\! 0 \\pmod {10^9{+}7}$"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == \"500000004\"\nassert solution(open(\"test_input.txt\").read()) == \"500000004\"\n\nprint(solution(open(\"input.txt\").read()))\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1000000000 0\n1000000000 1''') == '500000004'\n'''"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000000000 0') == '500000004'\nassert solution('1000000000 1') == '500000004'\nassert solution('10000 1000 0') == '500000004'\nassert solution('10000 1000 1') == '500000004'\nassert solution('100 1000 0') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1000000000 0\n1000000000 1''') == '500000004'\nassert solution('''3\n1000000000 0\n1000000000 1\n1000000000 2''') == '500000004'\nassert solution('''4\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3''') == '500000004'\nassert solution('''4\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4''') == '500000004'\nassert solution('''8\n1000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5\n1000000000 6\n1000000000 7''') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 500000004\n\"\"\"\n\nfrom fractions import gcd\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1000000000 0\") == \"10000000\"\nassert solution(\"1000000000 1\") == \"1000000000\"\nassert solution(\"1000000000 2\") == \"1000000000\"\nassert solution(\"1000000000 3\") == \"1000000000\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1000000000 0\n1000000000 1\n''') == '500000004'\nassert solution('''50000000 4\n1000000000 0\n1000000000 1\n''') == '500000004'\nassert solution('''6000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5\n1000000000 6\n''') == '500000004'\nassert solution('''6000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5\n1000000000 6\n1000000000 7\n1000000000 8\n1000000000 9\n1000000000 10\n1000000000 11\n1000000000 12\n1000000000 13\n''') == '500000004'\nassert solution('''7000000000 0\n1000000000 1\n1000000000 2\n1000000000 3\n1000000000 4\n1000000000 5\n1000000000 6\n1000000000 7\n1000000000 8\n1000000000 9\n1000000000 10\n1000000000 11\n1000000000 12\n1000000000 13\n1000000000 14\n1000000000 15\n1000000000 16\n1000000000 17\n1000000000 18\n1000000000 19\n1000000000 20\n1000000000 21\n1000000000 22\n1000000000 23\n1000000000 24\n1000000000 25\n1000000000 26\n1000000000 27\n1000000000 28\n1000000000 29\n1000000000 30\n1000000000 31\n1000000000 32\n1000000000 33\n1000000000 34\n1000000000 35\n1000000000 36\n1000000000 37\n1000000000 38\n1000000000 39\n1000000000 40\n1000000000 41\n1000000000 42\n1000000000 43\n1000000000 44\n1000000000 45\n1000000000 46\n1000000000 47\n1000000000 48\n1000000000 49\n1000000000 50\n1000000000 51\n1000000000 52\n1000000000 53\n1000000000 54\n1000000000 55\n1000000000 56\n1000000000 57\n1000000000 58\n1000000000 59\n1000000000 60\n1000000000 61\n1000000000 62\n1000000000 63\n1000000000 64\n1000000000 65\n1000000000 66\n1000000000 67\n1000000000 68\n1000000000 69\n1000000000 70\n1000000000 71\n1000000000 72\n1000000000 73\n1000000000 74\n1000000000 75\n1000000000 76\n1000000000 77\n1000000000 78\n1000000000 79\n1000000000 80\n1000000000 81\n1000000000 82\n1000000000 83\n1000000000 84\n1000000000 85\n1000000000 86\n1000000000 87\n1000000000 88\n1000000000 89\n1000000000 90\n1000000000 91\n1000000000 92\n1000000000 93\n1000000000 94\n1000000000 95\n1000000000 96\n1000000000 97\n1000000000 98\n1000000000 99\n1000000000 100\n1000000000 101\n1000000000 102\n1000000000 103\n1000000000 104\n1000000000 105\n1000000000 106\n1000000000 107\n1000000000 108\n1000000000 109\n1000000000 110\n1000000000 111\n1000000000 112\n1000000000 113\n1000000000 114\n1000000000 115\n1000000000 116\n1000000000 117\n1000000000 118\n1000000000 119\n1000000000 120\n1000000000 121\n1000000000 122\n1000000000 123\n1000000000 124\n1000000000 125\n1000000000 126\n1000000000 127\n1000000000 128\n1000000000 129\n1000000000 130\n1000000000 131\n1000000000 132\n1000000000 133\n1000000000 134\n1000000000 135\n1000000000 136\n1000000000 137\n1000000000 138\n1000000000 139\n1000000000 140\n1000000000 141\n1000000000 142\n1000000000 143\n1000000000 144\n1000000000 145\n1000000000 146\n1000000000 147\n1000000000 148\n1000000000 149\n1000000000 150\n1000000000 151\n1000000000 152\n1000000000 153\n1000000000 154\n1000000000 155\n1000000000 156\n1000000000 157\n1000000000 158\n1000000000 159\n1000000000 160\n1000000000 161\n1000000000 162\n1000000000 163\n1000000000 164\n1000000000 165\n1000000000 166\n1000000000 167\n1000000000 168\n1000000000 169\n1000000000 170\n1000000000 171\n1000000000 172\n1000000000 173\n1000000000 174\n1000000000 175\n1000000000 176\n1000000000 177\n1000000000 178\n1000000000 179\n1000000000 180\n1000000000 181\n1000000000 182\n1000000000 183\n1000000000 184\n1000000000 185\n1000000000 186\n1000000000 187\n1000000000 188\n1000000000 189\n1000000000 190\n1000000000 191\n1000000000 192\n1000000000 193\n1000000000 194\n1000000000 195\n1000000000 196\n1000000000 197\n1000000000 198\n1000000000 199\n1000000000 200\n1000000000 201\n1000000000 202\n1000000000 203\n1000000000 204\n1000000000 205\n1000000000 206\n1000000000 207\n1000000000 208\n1000000000 209\n1000000000 210\n1000000000 211\n1000000000 212\n1000000000 213\n1000000000 214\n1000000000 215\n1000000000 216\n1000000000 217\n1000000000 218\n1000000000 219\n1000000000 220\n1000000000 221\n1000000000 222\n1000000000 223\n1000000000 224\n1000000000 225\n1000000000 226\n1000000000 227\n1000000000 228\n1000000000 229\n1000000000 230\n1000000000 231\n1000000000 232\n1000000000 233\n1000000000 234\n1000000000 235\n1000000000 236\n1000000000 237\n1000000000 238\n1000000000 239\n1000000000 240\n1000000000 241\n1000000000 242\n1000000000 243\n1000000000 244\n1000000000 245\n1000000000 246\n1000000000 247\n1000000000 248\n1000000000 249\n1000000000 250\n1000000000 251\n1000000000 252\n1000000000 253\n1000000000 254\n1000000000 255\n1000000000 256"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12'\nassert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '36'\nassert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '36'\nassert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '36'\nassert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '36'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_data/flights/small.in\").read()) == \"8\"\nassert solution(open(\"test_data/flights/medium.in\").read()) == \"109\"\nassert solution(open(\"test_data/flights/large.in\").read()) == \"2673\"\n\nprint(solution(open(\"data/flights/medium.in\").read()))\nprint(solution(open(\"data/flights/large.in\").read()))\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12'\n'''\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"2\"\nassert solution(\"1 2 1 10\") == \"2\"\nassert solution(\"2 4 11 16\") == \"2\"\nassert solution(\"2 1 9 12\") == \"2\"\nassert solution(\"3 5 28 100\") == \"1\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12'\nassert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12'\nassert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12'\nassert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12'\nassert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27') == '12'\nassert solution('4 4\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n2 4 6 6') == '6'\nassert solution('5 5\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n2 4 6 6') == '5'\nassert solution('5 5\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n2 4 6 6\\n2 3 4 4') == '0'\nprint(solution('5 5\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n2 4 6 6\\n2 3 4 4'))\nprint(solution('5 5\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n2 4 6 6\\n2 3 4 4\\n2 3 4 4\\n2 3 4 4'))\nassert solution('2 2\\n1 1') == '0'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12'\n'''\n'''\n\nfrom math import pow\nn,m = [int(x) for x in stdin.split()]\nfrustration = [0]*n\n\nfor _ in range(m):\n    a,b,s,e = [int(x) for x in stdin.split()]\n    if a == b:\n        frustration[a-1] += pow(e-s, 2)\n    else:\n        frustration[a-1] += pow(e-s, 2)\n        frustration[b-1] += pow(s-e, 2)\n\nprint(sum(frustration))"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\nassert solution('''8 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '0'\nassert solution('''10 10\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '20'\nassert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '20'\nassert solution('''10 10\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '20'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12'\nassert solution('''8 6\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '27'\nassert solution('''10 10\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n1 2 3 14\n4 3 19 19\n1 3 15 17\n3 5 22 22\n1 3 16 19''') == '41'\nassert solution('''10 10\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n1 2 3 14\n4 3 19 19\n1 3 15 17\n3 5 22 22\n1 3 16 19''') == '49'\nassert solution('''4 2\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n1 2 3 14\n4 3 19 19\n1 3 15 17\n3 5 22 22\n1 3 16 19''') == '25'\n"
    },
    {
        "number": 3537,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 3\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12'\n'''\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 19\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''2 4\n1 1 1\n1 1 1\n1 1 1''') == '2'\nassert solution('''4 20\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '3'\nassert solution('''2 10\n2 5 4\n5 2 4\n2 1 2\n3 3 3\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '9'\nassert solution('''3 10\n4 5 4\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '6'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\"\nassert solution(\"2 3\\n2 2 1\\n3 2 1\") == \"2\"\nassert solution(\"3 10\\n15 2 7\\n16 5 10\\n17 9 9\") == \"4\"\nassert solution(\"3 10\\n14 6 6\\n15 9 9\\n16 9 9\") == \"1\"\nassert solution(\"3 10\\n15 2 7\\n16 6 6\\n17 9 9\") == \"2\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 19\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''1 2 3\n4 5 6\n7 8 9\nSample Output:\n7''') == '7'\nassert solution('''2 2 3\n3 3 3\n2 4 1\nSample Output:\n2''') == '2'\nassert solution('''10 10 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '3'\nassert solution('''10 10 2\n2 2 3\n3 4 4\n5 4 4\n6 4 4\n7 4 4\n8 4 4\n9 4 4\n10 4 4\nSample Output:\n8\n''') == '8'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\n\"\"\""
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 19\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''3 20\n13 17 2\n18 4 4\n1 9 5''') == '2'\nassert solution('''3 21\n14 19 6\n19 8 5\n20 10 2\n1 9 8''') == '2'\nassert solution('''3 22\n14 21 6\n19 8 5\n20 10 2\n1 9 8''') == '2'\nassert solution('''3 23\n14 22 6\n19 8 5\n20 10 2\n1 9 8''') == '2'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''15 19\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''3 10\n15 5 3\n12 4 4\n20 10 5''') == '0'\nassert solution('''8 16\n10 9 8\n10 9 8\n11 9 8\n11 9 8\n11 9 8\n11 9 8\n11 9 8\n11 9 8''') == '4'\nassert solution('''8 16\n10 9 8\n10 9 8\n11 9 8\n11 9 8\n11 9 8\n11 9 8\n11 9 8\n11 9 8''') == '1'\nassert solution('''8 16\n10 9 8\n10 9 8\n11 9 8\n11 9 8\n11 9 8\n11 9 8\n11 9 8\n11 9 8''') == '1'\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1 1\\n1 1') == 1\nassert solution('1 1\\n1 1\\n1 1') == 1\nassert solution('1 1\\n1 1\\n1 1') == 1\nassert solution('1 1\\n1 1\\n1 1') == 1\nassert solution('1 1\\n1 1\\n1 1') == 1\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"3 19\n15 5 3\n12 4 4\n20 10 5\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"4 4\n5 2 2\n5 4 2\n5 2 2\n6 4 2\n7 4 2\n3 6 4\n7 6 4\n2 2 2\n4 2 2\n7 2 2\n2 2 2\n4 2 2\n7 2 2\n2 2 2\n3 6 4\n7 6 4\n2 2 2\n4 2 2\n7 2 2\n2 2 2\n3 6 4\n7 6 4\n2 2 2\n4 2 2\n7 2 2\n2 2 2\n3 6 4\n7 6 4\n2 2 2\n4 2 2\n7 2 2\n2 2 2\"\"\"\n) == \"13\"\nprint(solution(input()))"
    },
    {
        "number": 3538,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 19\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''1 3\n2 1 5\n3 4 4\n4 3 1''') == '4'\nassert solution('''1 1\n1 1 1\n2 3 2''') == '5'\n'''\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n1 2') == '0'\nassert solution('3\\n1 1 1') == '1'\nassert solution('4\\n1 1 2 2') == '0'\nassert solution('4\\n1 1 2 2 1') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 1\") == \"1\"\nassert solution(\"2\\n2 1 2\\n2 2 3\") == \"2\"\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 2\") == \"4\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1 1') == 1\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 2\") == \"0\"\nassert solution(\"1 1 2 2\") == \"0\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1\\n') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n1 1''') == '1'\nassert solution('''2\n1 2\n1 2\n''') == '4'\nassert solution('''3\n1 2\n2 3\n2 3\n''') == '9'\nassert solution('''4\n1 2\n1 2\n1 3\n1 3\n2 3\n''') == '5'\nassert solution('''5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '13'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2 3') == '5'\nassert solution('3\\n1 2 2') == '7'\nassert solution('3\\n1 2 1') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1\n1 1''') == '1'\nassert solution('''3 2\n1 3\n2 3\n3 4\n2 4\n1 4\n3 2''') == '2'\nassert solution('''8 5\n1 2\n1 1\n1 1\n2 2\n2 1\n1 1\n1 2\n1 2\n2 3\n1 1\n2 1\n2 1\n3 3\n2 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 1\n2 3\n2 2\n2 1\n1 1\n2 1\n1 1\n1 2\n1 1\n1 2\n1 2\n1 3\n2 1\n2 1\n2 1\n1 2\n2 3\n1 2\n1 3\n1 1\n1 3\n2 2\n1 3\n1 1\n1 2\n2 1\n1 1\n1 2\n1 2\n2 1\n1 1\n1 2\n1 1\n2 1\n1 1\n2 1\n1 1\n2 1\n1 1\n1 1\n2 2\n1 1\n1 2\n2 1\n1 2\n2 1\n2 1\n1 1\n2 1\n1 1\n1 2\n1 1\n2 1\n2 2\n2 1\n1 1\n1 2\n1 2\n1 3\n1 1\n1 1\n1 2\n2 1\n2 1\n2 1\n1 2\n2 3\n1 2\n1 3\n1 1\n1 3\n2 2\n1 3\n1 1\n1 2\n2 1\n1 1\n1 2\n1 1\n1 2\n1 1\n2 1\n2 3\n1 2\n1 3\n1 1\n1 3\n2 2\n1 3\n1 1\n1 2\n2 1\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n2 1\n2 3\n1 2\n1 3\n1 1\n1 3\n2 2\n1 3\n1 1\n1 2\n2 1\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n2 1\n2 3\n1 2\n1 3\n1 1\n1 3\n2 2\n1 3\n1 1\n1 2\n2 1\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n2 1\n2 3\n1 2\n1 3\n1 1\n1 3\n2 2\n1 3\n1 1\n1 2\n2 1\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n"
    },
    {
        "number": 3539,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n1 1''') == 1\nassert solution('''1\n1 1''') == 1\nassert solution('''2\n2 2\n2 2''') == 0\nassert solution('''1\n1 1\n1 2\n1 2''') == 1\nassert solution('''10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10''') == 3537\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RGGR') == '0'\nassert solution('GBGB') == '2'\nassert solution('BYBY') == '2'\nassert solution('YRYR') == '7'\nprint('All cases passed.')"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RGGR') == '2'\nassert solution('GBGB') == '0'\nassert solution('BYBY') == '2'\nassert solution('YRYR') == '3'\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"RYBYY\") == 3\nassert solution(\"RRYBY\") == 3\nassert solution(\"YYYYYY\") == 1\nassert solution(\"YYYYY\") == 1\nassert solution(\"RGRGRGR\") == 1\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('RRRR') == 0\nassert solution('RGYB') == 1\nassert solution('GGGB') == 1\nassert solution('BGBBY') == 2\nassert solution('GGGR') == 1\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('RGGR') == '3'\nassert solution('GBGB') == '2'\nassert solution('BYBY') == '2'\nassert solution('YRYR') == '2'\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RGGR\") == 3\nassert solution(\"GBGB\") == 3\nassert solution(\"BYBY\") == 3\nassert solution(\"YRYR\") == 3\nassert solution(\"GRGR\") == 2\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('RGBY') == 3\nassert solution('GBGR') == 2\nassert solution('RRYG') == 4\nassert solution('YYRBY') == 4\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    'RGGR\\nGBGB\\nBYBY\\nYYYY'\n) == '3'\nassert solution(\n    'RGGR\\nGBGB\\nYYYY\\nYYYY'\n) == '1'\nassert solution(\n    'RGBGY\\nRGBGY\\nYGGB\\nGBGB'\n) == '6'\nassert solution(\n    'YYYYY\\nYYYYY\\nRGBYY\\nYYYYY'\n) == '5'\nassert solution(\n    'YYYYY\\nYYYYY\\nYYYYY\\nYYYYY'\n) == '4'\n"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"RGGR\\n\"\n    \"GBGB\\n\"\n    \"BYBY\\n\"\n    \"YRYR\\n\"\n) == 3\n\"\"\"\n\nfrom sys import stdin,stdout"
    },
    {
        "number": 3540,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('R') == 'R'\nassert solution('GRGR') == 'GRGR'\nassert solution('YYYY') == 'YYYY'\nassert solution('RGGR') == 'RYRY'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'\nassert solution('5\\n2 1 0 -1 -2\\n2 1 0 -1 -2') == 'BBBBA'\nassert solution('7\\n-2 -1 0 1 2 3\\n2 1 0 -1 -2 -3\\n-3 1 0 -1 -2 -2') == 'AAAABBBBBB'\nassert solution('4\\n1 1 0 -1\\n-1 -1 1 1\\n1 -1 -1 1') == 'AAAA'\nassert solution('6\\n-3 -1 -1 -1 -1 1\\n-3 -1 1 1 1 1\\n-3 1 1 1 -1 1') == 'AAAAAA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5\n-2 -1 0 1 2\n2 1 0 -1 -2\n\"\"\") == \"AAAAA\"\nassert solution(\n\"\"\"6\n5 3 -5 3 3 3\n-5 -5 1 -5 1\n\"\"\") == \"BBBBB\"\nassert solution(\n\"\"\"7\n5 3 -5 3 3 3\n-5 -5 1 -5 1\n\"\"\") == \"BBBBBBBB\"\nassert solution(\n\"\"\"8\n5 3 -5 3 3 3\n-5 -5 1 -5 1\n\"\"\") == \"BBBBBBBBBBBB\""
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"AAAAAAAABBBBBBBB\"\n\"\"\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''4\n1 -2 1 2\n2 1 -1 -2''') == 'BBBB'\nassert solution('''8\n0 -8 -5 -4 -1 -8 -2 -3 -4 -1 -4 -3 -1 -5 -2 -6 -6 -6 -5 -1 -4 -8 -4 -6 -2 -3 -1 -4 -2 -1 -3 -4 -2 -3 -4 -5 -6 -6 -6 -5 -4 -1 -4 -3 -2 -1 -3 -3 -1 -5 -1 -5 -1 -2 -1 -2 -2 -2 -2 -3 -3 -4 -4 -4 -1 -1 -2 -2 -4 -1 -4 -4 -1 -2 -2 -4 -2 -1 -2 -2 -3 -2 -4 -4 -4 -3 -1 -1 -2 -1 -3 -4 -4 -1 -2 -4 -1 -3 -2 -1 -2 -1 -3 -2 -4 -2 -4 -2 -4 -2 -5 -2 -3 -3 -2 -3 -2 -3 -4 -4 -4 -1 -2 -4 -1 -4 -4 -4 -4 -5 -2 -4 -3 -4 -2 -4 -1 -3 -2 -5 -4 -4 -2 -4 -4 -3 -1 -2 -5 -1 -2 -5 -1 -2 -5 -1 -5 -1 -4 -3 -2 -2 -2 -2 -2 -3 -1 -4 -4 -3 -1 -4 -4 -2 -4 -3 -2 -5 -4 -3 -4 -5 -1 -1 -3 -5 -2 -4 -5 -4 -2 -1 -4 -2 -1 -1 -3 -1 -2 -1 -4 -1 -1 -5 -4 -3 -4 -2 -1 -1 -4 -4 -5 -5 -4 -2 -2 -4 -3 -3 -1 -3 -2 -2 -1 -2 -3 -2 -5 -3 -3 -3 -2 -5 -2 -2 -1 -5 -2 -3 -4 -5 -5 -1 -4 -2 -4 -2 -1 -2 -5 -1 -1 -3 -3 -4 -1 -4 -5 -1 -5 -4 -2 -1 -2 -4 -3 -1 -5 -1 -3 -1 -1 -4 -1 -4 -3 -2 -2 -1 -2 -3 -2 -2 -3 -3 -4 -4 -5 -1 -3 -5 -4 -5 -5 -3 -1 -5 -4 -3 -4 -1 -3 -4 -1 -3 -3 -2 -4 -1 -1 -1 -4 -5 -4 -5 -5 -1 -2 -5 -4 -3 -5 -2 -5 -3 -5 -2 -3 -1 -5 -1 -2 -4 -1 -3 -5 -3 -1 -3 -3 -4 -3 -3 -1 -4 -3 -2 -4 -5 -4 -5 -1 -5 -3 -4 -2 -1 -5 -1 -3 -1 -5 -1 -3 -2 -5 -2 -5 -1 -4 -3 -2 -4 -5 -1 -5 -1 -4 -3 -1 -5 -1 -2 -3 -1 -4 -1 -2 -1 -5 -2 -3 -4 -2 -3 -1 -4 -3 -4 -2 -2 -2 -2 -3 -5 -5 -1 -5 -1 -2 -3 -3 -2 -3 -4 -4 -4 -1 -4 -5 -5 -5 -1 -4 -4 -5 -4 -5 -5 -1 -2 -5 -3 -4 -4 -5 -2 -5 -1 -1 -5 -1 -2 -5 -2 -3 -1 -5 -4 -3 -2 -4 -3 -4 -3 -2 -2 -5 -5 -5 -4 -2 -4 -5 -5 -4 -4 -2 -5 -4 -5 -5 -5 -5 -5 -3 -5 -4 -5 -1 -5 -1 -4 -3 -5 -3 -5 -2 -2 -5 -1 -5 -5 -5 -5 -1 -1 -4 -3 -5 -5 -2 -4 -5 -3 -5 -4 -2 -5 -5 -5 -5 -4 -1 -5 -1 -5 -2 -4 -1 -4 -5 -4 -5 -5 -1 -2 -5 -5 -1 -5 -3 -2 -2 -3 -5 -2 -5 -2 -2 -3 -5 -4 -5 -5 -3 -2 -5 -3 -5 -3 -5 -5 -1 -1 -5 -5 -1 -3 -1 -5 -3 -1 -2 -5 -4 -2 -4 -5 -5 -1 -5 -3 -4 -1 -5 -5 -5 -4 -2 -5 -4 -5 -3 -4 -2 -1 -5 -5 -5 -5 -1 -5 -5 -4 -5 -5 -5 -5 -4 -2 -5 -5 -5 -5 -1 -5 -4 -5 -1 -5 -5 -5 -1 -5 -3 -5 -5 -4 -5 -4 -5 -5 -5 -5 -1 -5 -5 -1 -4 -4 -3 -5 -1 -1 -5 -4 -2 -1 -5 -3 -5 -1 -5 -4 -5 -4 -5 -5 -1 -5 -2 -4 -5 -5 -1 -5 -5 -5 -1 -2 -5 -4 -5 -3 -5 -3 -2 -5 -5 -4 -4 -3 -5 -5 -5 -1 -5 -4 -5 -1 -5 -5 -5 -1 -5 -5 -5 -5 -1 -5 -5 -5 -5 -5 -5 -4 -5 -5 -5 -1 -5 -5 -5 -1 -1 -5 -4 -1 -5 -5 -1 -5 -5 -5 -5 -5 -2 -5 -3 -4 -5 -4 -5 -5 -5 -1 -5 -5 -5 -5"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution(\n'''7\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20''') == 'ABCAB'\nassert solution(\n'''5\n10 -1 9 -2 8 -3 7 -4 6 -5 5 -6 4 -7 3 -8 2 -9 1\n9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21 -22 -23 -24 -25 -26 -27 -28 -29 -30 -31 -32 -33 -34 -35 -36 -37 -38 -39 -40 -41 -42 -43 -44 -45 -46 -47 -48 -49 -50 -51 -52 -53 -54 -55 -56 -57 -58 -59 -60 -61 -62 -63 -64 -65 -66 -67 -68 -69 -70 -71 -72 -73 -74 -75 -76 -77 -78 -79 -80 -81 -82 -83 -84 -85 -86 -87 -88 -89 -90 -91 -92 -93 -94 -95 -96 -97 -98 -99 -100''') == 'ACBABCAB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == \"AAAAA\"\nassert solution('''6\n-3 -1 -2 -3 -4 -5\n2 -1 -2 -1 -2 -3\nSample Output:\nBFFFF\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"A\"\nassert solution(\"2\") == \"AB\"\nassert solution(\"3\") == \"ABC\"\nassert solution(\"4\") == \"AAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == \"AAAAA\"\nassert solution('''10\n-2 -1 0 1 2 3 4 5 6 7 8 9 10\n2 1 0 -1 -2 -3 -4 -5 -6 -7 -8 -9''') == \"ABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"\nassert solution('''30\n-2 -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n2 1 0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21 -22 -23 -24 -25 -26 -27 -28 -29 -30''') == \"ABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[:-1]\n'CCB'\nassert solution('AAA') == 'CCB'\n'BBBB'\nassert solution('AAAA') == 'BBBB'\n'BB'\nassert solution('A') == 'A'\n'BBBB'\nassert solution('BBBBBBBB') == 'BBBBBBBB'\n'BBB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[:6]\nassert solution(stdin) == stdin[6:9]\nassert solution(stdin) == stdin[9:13]\nassert solution(stdin) == stdin[13:18]\nassert solution(stdin) == stdin[18:22]\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n2 3\n4 0\n0 2\n6 1''') == 'IMPOSSIBLE'\nassert solution('''4 2\n2 3\n4 0\n0 2''') == '4'\nassert solution('''2 4\n2 3\n4 0\n0 2''') == 'IMPOSSIBLE'\nassert solution('''10 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '10'\nassert solution('''5 6\n0 1\n3 4\n5 6\n7 8\n''') == '7'\n'''\n'''\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3\n2 3\n4 0\n0 2\n6 1''') == 'IMPOSSIBLE'\nassert solution('''2 3\n2 2\n2 1\n1 2''') == 'IMPOSSIBLE'\nassert solution('''2 3\n2 1\n2 0\n1 0''') == '4'\nassert solution('''2 3\n3 2\n2 0\n2 0''') == '4'\nassert solution('''6 3\n6 2\n0 0\n0 2\n6 1\n4 0''') == '4'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"/sample/sample_input.txt\", \"r\").read()) == \"IMPOSSIBLE\"\nassert solution(open(\"/sample/sample_expected_output.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"/sample/sample_input2.txt\", \"r\").read()) == \"4\"\nprint(\"Tests passed successfully!\")\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'\nassert solution('2 3\\n2 3\\n4 0\\n0 2\\n6 1\\n4 0\\n0 2') == '4'\nassert solution('2 3\\n2 3\\n4 0\\n0 2\\n6 1\\n4 0\\n0 2\\n4 0\\n0 2') == '6'\nassert solution('2 3\\n2 3\\n4 0\\n0 2\\n6 1\\n4 0\\n0 2\\n6 1\\n4 0\\n0 2') == 'IMPOSSIBLE'\nassert solution('4 4\\n0 0\\n1 1\\n2 2\\n3 3\\n0 0\\n0 0') == '3'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3\n2 3\n4 0\n0 2\n6 1\n''') == 'IMPOSSIBLE'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '0'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n''') == '3'\nassert solution('''3 2\n1 1\n3 2\n1 3\n2 3\n1 2\n3 2\n1 2\n3 2\n1 2\n3 2\n1 3\n2 3\n1 3\n''') == '6'\nassert solution('''3 2\n1 1\n2 2\n1 2\n3 2\n1 3\n2 3\n1 3\n3 2\n1 2\n3 2\n1 3\n2 3\n1 3\n''') == '6'\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"7 3\\n4 0\\n6 0\\n0 2\\n6 1\") == \"7\"\nassert solution(\"8 3\\n4 0\\n6 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"8 3\\n4 0\\n6 0\\n0 2\\n6 1\") == \"7\"\nassert solution(\"9 3\\n4 0\\n6 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\nassert solution('10 10\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n') == '4'\nassert solution('20 10\\n0 0\\n20 20\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'\nassert solution('1 2\\n1 1\\n2 1') == '2'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'\nassert solution('10 10\\n1 1\\n5 9\\n5 4\\n0 8\\n9 7\\n4 6\\n3 5\\n6 7\\n8 9') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''12\n4\n11\n3\n2\n'''\nassert solution('''3 3\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''3\n1\n2\n2\n'''\nassert solution('''3 3\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''3\n1\n2\n2\n'''\nassert solution('''4 2\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''4\n2\n2\n2\n2\n'''\nassert solution('''4 3\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''4\n2\n2\n2\n2\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx''') == '''12\n4\n11\n3\n2\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx''') == \"\"\"12\n4\n11\n3\n2\n\"\"\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('austria') == '12'\nassert solution('autocorrect') == '4'\nassert solution('program') == '11'\nassert solution('programming') == '3'\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx''') == '''12\n4\n11\n3\n2\n'''\n\nassert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria''') == '''12\n4\n11\n3\n2\n'''\n\nassert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\nautocorrect\naustria\nautocorrection\naustria\nautocorrection\nautocorrect''') == '''12\n4\n11\n3\n2\n'''\n\nassert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\nautocorrect\naustria\nautocorrection\naustria\nautocorrection\nautocorrection\nautocorrect''') == '''12\n4\n11\n3\n2\n'''\n\nassert solution('''6 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\nautocorrect\naustria\nautocorrection\naustria\nautocorrection\nautocorrect''') == '''12\n4\n11\n3\n2\n'''"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == \\\n'''12\n4\n11\n3\n2\n'''\n\nassert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == \\\n'''12\n4\n11\n3\n2\n'''\n\nassert solution('''2 3\nabcdefghijklmnopqrstuvwxyz\na\na\na\na\na\na\n''') == \\\n'''4\n2\n2\n1\n1\n'''\n\nassert solution('''1 1\nabcd\nabcd\nabcd\n''') == \\\n'''2\n2\n2\n1\n'''\n\nassert solution('''1 1\na\na\na\na\na\na\n''') == \\\n'''3\n2\n2\n1\n'''"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\\n\") == \"\"\"\n12\n4\n11\n3\n2\n\"\"\"\nassert solution(\"2 1\\n\") == \"\"\"\n3\n\"\"\"\nassert solution(\"4 1\\nacct\\nacc\\nacc\\nacc\\n\") == \"\"\"\n5\n\"\"\"\nassert solution(\"1 1\\n\") == \"\"\"\n1\n\"\"\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3543,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''12\n4\n11\n3\n2\n'''\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n0 0 0\n0 1 1\n0 0 1\n''') == 3\nassert solution('''\n0 0 0\n0 1 1\n0 0 1\n''') == 3\nassert solution('''\n2\n2\n2\n''') == 2\nassert solution('''\n7\n7\n7\n7\n7\n7\n7\n7\n''') == 12\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == 0\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 0\") == \"\"\nassert solution(\"0 1\") == \"\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n0 1 1''') == '3'\nassert solution('''3\n0 1 1''') == '3'\nassert solution('''3\n0 1 1\n0 0 0''') == '3'\nassert solution('''2\n1 0''') == 'impossible'\nassert solution('''2\n1 0''') == 'impossible'\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n0 1 1\\n') == '3'\nassert solution('1\\n0\\n') == '1'\nassert solution('3\\n0 1 1\\n0\\n') == 'impossible'\nassert solution('3\\n0 1 1\\n1\\n') == 'impossible'\nassert solution('3\\n0 1 1\\n1 1\\n') == 'impossible'\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n0\\n0\") == \"impossible\"\nassert solution(\"1\\n0\\n0\") == \"impossible\"\nassert solution(\"3\\n1 1 0\") == \"3\"\nassert solution(\"5\\n0 1 1 1 1\") == \"impossible\"\nassert solution(\"5\\n0 1 1 1 1\") == \"impossible\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1 1') == 3\nassert solution('0 2 1') == 3\nassert solution('0 1 1 1') == 2\nassert solution('1 1 1') == 1\nassert solution('1 1 2') == 1\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n\n\"\"\""
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 1 1\n0 0 1\n1 1 1\n''') == '3'\nassert solution('''0 1 1\n0 0 1\n1 1 1\n''') == 'impossible'\nassert solution('''2\n2 1 1\n2 1 1\n1 1 1\n''') == '3'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1 1\n''') == 'impossible'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1\n''') == 'impossible'\n"
    },
    {
        "number": 3544,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1 1') == '3'\nassert solution('0 1 1\\n3') == '3'\n\"\"\"\nimport sys"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('ABCD') == 'ABCD'\nassert solution('EKMFLGDQVZNTOWYHXUSPAIBRCJ') == 'ABCD'\nassert solution('XKPQNRCJ') == 'ABCD'\nassert solution('AJKDLSI412K4JSJ9D') == 'ABCD'\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nassert solution(\"HFBIGEDCJA\") == \"Pre Post In In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\nHGBFDJIY\nFDBHGIGJ\nDGFCIJBG\n''') == '''\nPre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\n'''\nassert solution('''\nHGBFDJIY\nFDBHGIGJ\nDGFCIJBG\n''') == '''\nPre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\n'''\nassert solution('''\nHGBFDJIY\nFDBHGIGJ\nDGFCIJBG\n''') == '''\nPre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\n'''\nassert solution('''\nHGBFDJIY\nFDBHGIGJ\nDGFCIJBG\n''') == '''\nPre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\n'''\nassert solution('''\nHGBFDJIY\nFDBHGIGJ\nDGFCIJBG\n''') == '''\nPre Post In In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\n'''\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n) == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nprint(solution(\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n))\nPre Post In Post In Pre\n\"\"\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''HFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n''') == '''Pre Post In Post In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH'''\n\nassert solution('''SNAIAR\nPQRTYLK\nPQRTYLK\n''') == '''Pre Pre In In\nPQRTYLK\nSNAIAR\nPQRTYLK\nPQRTYLK'''\n\nassert solution('''H\nH\nH\n''') == '''Pre Pre In In\nH\nH\nH'''\n\nassert solution('''A\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n''') == '''Pre Pre In In\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ'''\n\nassert solution('''J\nE\nG\nK\nG\nK\nH\nG\nK\nK\nL\nJ\nF\nG\nK\nI\nI\nH\nH\nH\nH\nA\nH\nI\nH\nJ\nK\nK\nK\nL\nH\nJ\nG\nG\nH\nJ\nG\nH\nG\nJ\nF\nG\nF\nF\nH\nJ\nJ\nI\nG\nH\nK\nJ\nI\nH\nH\nJ\nK\nK\nK\nL\nH\nJ\nG\nK\nI\nI\nH\nJ\nH\nH\nH\nJ\nJ\nJ\nH\nJ\nK\nK\nK\nL\nH\nJ\nG\nH\nH\nJ\nH\nH\nH\nJ\nG\nH\nH\nJ\nJ\nI\nH\nH\nJ\nH\nH\nH\nJ\nH\nJ\nJ\nH\nH\nH\nH\nH\nJ\nJ\nJ\nH\nJ\nH\nG\nJ\nH\nJ\nJ\nI\nJ\nH\nH\nJ\nJ\nH\nH\nJ\nH\nJ\nJ\nH\nH\nJ\nJ\nJ\nH\nJ\nH\nH\nJ\nH\nJ\nJ\nH\nJ\nJ\nH\nH\nJ\nH\nJ\nJ\nH\nH\nJ\nJ\nH\nH\nH\nJ\nH\nJ\nH\nJ\nJ\nH\nH\nH\nJ\nH\nH\nJ\nH\nJ\nJ\nH\nH\nH\nJ\nH\nJ\nH\nH\nJ\nJ\nH\nH\nJ\nH\nH\nH\nH\nJ\nH\nH\nH\nJ\nH\nH\nJ\nH\nH\nH\nJ\nH\nJ\nH\nH\nH\nH\nH\nJ\nH\nH\nH\nJ\nH\nH\nH\nH\nJ\nH\nH\nH\nH\nH\nJ\nH\nH\nH\nH\nH\nH\nJ\nH\nH\nH\nH\nH\nH\nH\nJ\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nJ\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH\nH"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In In Pre'\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'\nassert solution('BCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In In Pre'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'\nassert solution('BIGEDCJFAH') == 'BIGEDCJFAH'\nassert solution('HFBIGEDCJA') == 'Pre Post In In Pre'\n\n-----\nNotes\n\n- In each print routine, the $n$ characters in the string are printed in descending order of frequency.\n- All possible reconstructions are listed in ascending lexicographic order of the alphabetically first trees.\n\n\"\"\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nassert solution(\"HFBJCDEGIA\") == \"HFBJCDEGIA\"\nassert solution(\"HFBJCDEGIA\") == \"HFBJCDEGIA\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"HFBIGEDCJA\"\n    \"BIGEDCJFAH\"\n    \"BIGEDCJFAH\"\n) == \"Pre Post In Post In Pre\"\n\nassert solution(\n    \"BYBFHUAGFOOPQRRTWXU\"\n    \"UXBFFDBFXBFFFQFBB\"\n    \"QFBFFBQFFFBBF\"\n) == \"BYBFHUAGFOOPQRRTWXU\"\n\nassert solution(\n    \"GFHIDLWRVYXZPEPQJCT\"\n    \"LWFRWJUOJFLYZXMCQ\"\n    \"WYFKMEEQBPYUCPX\"\n) == \"GFHIDLWRVYXZPEPQJCT\"\n\nassert solution(\n    \"QJHXUJFCUFBCKLJRCVO\"\n    \"JFNHQGHJDUYVEQPJSK\"\n    \"FHFCQJUBCQKXJODH\"\n) == \"QJHXUJFCUFBCKLJRCVO\"\n\nassert solution(\n    \"HFXBQFJBMFQPWEQKWQD\"\n    \"HFJQVFFLBRDICJXVXDK\"\n    \"KWFQVVQLGXJKGWDKD\"\n) == \"HFXBQFJBMFQPWEQKWQD\""
    },
    {
        "number": 3545,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\nIf you want to check whether you are on the right track, here is an example run of the program, where the input is a text version of the example from above (sample input and output lines are given in bold font):\n\nC:/Users/username/Desktop/Coursera/Algorithms_Coursera_Python_Bootcamp-master/Assignment 1/Week 1 - Data Structures/Assignment_1_Week_1_Data_Structures/1_2_Recursive_Print_Solution.py\n\n----------------------------------------------------------------------\n\nSample Input:\nABC\nBCD\nCDA\nSample Output:\n\nPre In Post\nCDABC\nBCDAA\n\nExplanation\n\nSample input 1:\nABC\nBCD\nCDA\n\nPre    In    Post\n\nA    B    C\n\nB    C    D\n\nC    D    A\n\nSample input 2:\nABC\nCDA\nCDA\n\nPre    In    Post\n\nA    B    C\n\nB    C    D\n\nC    D    A\n\nSample input 3:\nABC\nBCD\nCDA\n\nPre    In    Post\n\nA    B    C\n\nB    C    D\n\nC    D    A\n\nSample input 4:\nABC\nBCD\n\nPre    In    Post\n\nA    B    C\n\nB    C    D\n\nC    D    A\n\nExplanation:\n\nSample input 1 is the only correct reconstruction of the sample input\nand the first test tree is the only tree that produces the correct\noutput.\n\nSample input 2 is the only correct reconstruction of the sample input\nand the first test tree is the only tree that produces the correct\noutput.\n\nSample input 3 is the only correct reconstruction of the sample input\nand the first test tree is the only tree that produces the correct\noutput.\n\nSample input 4 is the only correct reconstruction of the sample input\nand the first test tree is the only tree that produces the correct\noutput.\n\nSo far, there have been no errors in your code and the computations have\nbeen done correctly. But Anatoly is not so wise now: he did not understand\nthe recursive calls and so he started to forget what they meant. He simply\nadded two extra recursive calls to each procedure, one before the recursive\ncall to prePrint, and one after the recursive call to postPrint. He is thus\nchanging the tree traversals, as he forgot to rename the procedure calls.\n\nThe results of the three print routines were correct, but Anatoly\nobserved that he did not change the correct traversals in the three print\nroutines: prePrint and postPrint, but called them before and after the\nrecursive calls, respectively. Therefore, Anatoly did not know how to\nobserve the correct behavior of the three print routines and thus confused\nhimself with the actual program.\n\nAnatoly now suspects you have changed the program. You will have to come up\nwith a correct reconstruction of Anatoly\u2019s code in order to understand\nhim.\n\n-----My Code-----\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1\n2\n10 0\n3 1 1\n1\n4 1 0''') == '10'\nassert solution(\n'''2\n2\n10 0\n3 1 1\n1\n4 1 0''') == '13'\nassert solution(\n'''3\n2\n10 0\n3 1 1\n1\n4 1 0\n2\n4 2 0\n1\n4 1 0''') == '10'\nassert solution(\n'''4\n2\n10 0\n3 1 1\n1\n4 1 0\n2\n4 2 0\n1\n4 1 0''') == '14'\nassert solution(\n'''5\n2\n10 0\n3 1 1\n1\n4 1 0\n2\n4 2 0\n1\n4 1 0''') == '13'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n3\\n2\\n1\\n1') == '4'\nassert solution('2\\n3\\n2\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1''') == '10'\nassert solution('''1\n1\n5 0\n2 1 2\n1\n2 1 0\n5 0\n2 1 2\n1\n2 1 0\n5 0\n2 1 2''') == '12'\nassert solution('''2\n3\n3 0\n1 1 1\n1\n2 1 0\n5 0\n2 1 2\n1\n2 1 0\n5 0\n2 1 2''') == '6'\nassert solution('''2\n4\n3 0\n1 1 1\n1\n2 1 0\n5 0\n2 1 2\n1\n2 1 0\n5 0\n2 1 2''') == '9'\nassert solution('''2\n5\n3 0\n1 1 1\n1\n2 1 0\n5 0\n2 1 2\n1\n2 1 0\n5 0\n2 1 2''') == '13'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('2\\n2\\n5 1 5\\n2 2 2 2\\n1 1 1 1 1 1\\n0') == '31'\nassert solution('2\\n2\\n4 1 4\\n1 1 0\\n1 1 0\\n1 1 0') == '31'\nassert solution('2\\n2\\n2 1 2\\n0') == '20'\nassert solution('2\\n3\\n1 1 1\\n1 1 1\\n1 1 1') == '31'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1') == '10'\nassert solution('3\\n3\\n10 0\\n1 1 0\\n2 2 1\\n1\\n2 1\\n3 3 2\\n3 2 1\\n1 1 2\\n2 2 3') == '10'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n3 3 2\\n3 2 1\\n1 1 2\\n2 2 3') == '10'\nassert solution('2\\n2\\n1\\n0\\n1 1 0\\n3 2 1') == '2'\nassert solution('1\\n1\\n10 0\\n2 2 1\\n1 1 2\\n2 2 3\\n1 1 2\\n2 2 3') == '2'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('3\\n3\\n10 0\\n3 1 1\\n1\\n4 1 0\\n4 2 1 0\\n1\\n4 1 0') == '12'\nassert solution('3\\n3\\n10 0\\n3 1 1\\n1\\n4 1 0\\n4 2 1 0\\n1\\n4 1 0') == '13'\nassert solution('3\\n3\\n10 0\\n3 1 1\\n1\\n4 1 0\\n4 2 1 0\\n1\\n4 1 0') == '15'\nassert solution('3\\n3\\n10 0\\n3 1 1\\n1\\n4 1 0\\n4 2 1 0\\n1\\n4 1 0\\n4 2 1 0') == '15'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n2\n2\n10 0\n3 1 1\n1\n4 1 0\n''') == '10'\nassert solution(\n'''\n3\n3\n5 3 4\n1\n1\n1\n''') == '11'\nassert solution(\n'''\n3\n3\n5 3 4\n1\n2\n2\n''') == '7'\nassert solution(\n'''\n3\n3\n5 3 4\n1\n1\n2\n''') == '6'\nassert solution(\n'''\n3\n3\n5 3 4\n1\n1\n1\n''') == '5'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1') == '10'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1') == '10'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1') == '10'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1') == '10'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1') == '10'\n"
    },
    {
        "number": 3546,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1') == '10'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('3\\n3\\n10 0\\n1 2 0\\n1 0 2\\n2 0 1') == '10'\nassert solution('5\\n6\\n10 0\\n2 3 1\\n3 2 1\\n2 3 2\\n3 2 2\\n2 3 3\\n3 2 3\\n2 3 4\\n3 2 4\\n2 3 5\\n3 2 5\\n2 3 6\\n3 2 6\\n2 3 7\\n3 2 7\\n2 3 8\\n3 2 8\\n2 3 9\\n3 2 9\\n2 3 10\\n3 2 10\\n2 3 11\\n3 2 11\\n2 3 12\\n3 2 12\\n2 3 13\\n3 2 13\\n2 3 14\\n3 2 14\\n2 3 15\\n3 2 15\\n2 3 16\\n3 2 16\\n2 3 17\\n3 2 17\\n2 3 18\\n3 2 18\\n2 3 19\\n3 2 19\\n2 3 20\\n3 2 20') == '40'\nassert solution('5\\n6\\n10 0\\n3 1 1\\n3 2 1\\n2 3 2\\n3 2 2\\n2 3 3\\n3 2 3\\n2 3 4\\n3 2 4\\n2 3 5\\n3 2 5\\n2 3 6\\n3 2 6\\n2 3 7\\n3 2 7\\n2 3 8\\n3 2 8\\n2 3 9\\n3 2 9\\n2 3 10\\n3 2 10\\n2 3 11\\n3 2 11\\n2 3 12\\n3 2 12\\n2 3 13\\n3 2 13\\n2 3 14\\n3 2 14\\n2 3 15\\n3 2 15\\n2 3 16\\n3 2 16\\n2 3 17\\n3 2 17\\n2 3 18\\n3 2 18\\n2 3 19\\n3 2 19\\n2 3 20\\n3 2 20') == '40'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''0 0 100 100''') == '10000.00'\nassert solution(\n'''0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution(\n'''3\n0 0 100 100\n0 0 100 100\n0 0 100 100''') == '36000.00'\nassert solution(\n'''2\n0 0 100 100\n0 0 100 100''') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0\\n0\\n100\\n100') == 10000\nassert solution('2\\n0 0 100 100\\n30 30 60 60\\n') == 10000\nassert solution('1\\n0 0 100 100\\n30 30 60 60\\n') == 0\nassert solution('2\\n0 0 100 100\\n30 30 60 60\\n1 1 1 1\\n') == 0\nassert solution('2\\n0 0 100 100\\n30 30 60 60\\n1 1 1 1\\n0 0 100 100\\n0 0 100 100\\n') == 0\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution('''2\n0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution('''10\n-1.458056e+02 0.00000000e+00 1.458056e+02 0.00000000e+00\n0.00000000e+00 0.00000000e+00 -1.458056e+02 0.00000000e+00\n0.00000000e+00 -1.458056e+02 0.00000000e+00 0.00000000e+00\n1.458056e+02 0.00000000e+00 1.458056e+02 0.00000000e+00\n0.00000000e+00 0.00000000e+00 -1.458056e+02 0.00000000e+00\n-0.00000000e+00 -1.458056e+02 0.00000000e+00 0.00000000e+00\n-0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0 100 100\") == \"10000.00\"\nassert solution(\"30 30 60 60\") == \"10000.00\"\nassert solution(\"-10 -10 -10 -10\") == \"0.00\"\nassert solution(\"1.5 1.5 2.5 2.5\") == \"2.00\"\nassert solution(\"0 0 100 100\") == \"10000.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60') == '10000.00'\nassert solution('3\\n30 30 60 60\\n0 0 100 100\\n50 50 60 60') == '40000.00'\nassert solution('2\\n0 0 100 100\\n30 30 60 60') == '10000.00'\nassert solution('2\\n-20.0 10.0 -20.0 10.0') == '1.5'\nassert solution('2\\n-20.0 10.0 -20.0 10.0\\n20.0 0.0 20.0 0.0') == '8.5'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0') == '0.00'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n0') == '0.00'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0.00'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60') == 10000.0\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 100 100') == 10000\nassert solution('30 30 60 60') == 10000\nassert solution('-2.0 -2.0 3.0 4.0') == 10000\nassert solution('0 0 100 100\\n-2.0 -2.0 3.0 4.0') == 10000\nassert solution('1\\n0 0 10 10') == 100\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 100 100') == '10000.00'\nassert solution('30 30 60 60') == '10000.00'\nassert solution('0 0 100 100 30 30 60 60') == '10000.00'\nassert solution('30 30 60 60 30 30 60 60') == '10000.00'\nassert solution('1 1 1 1 1 1') == '1.00000'\n"
    },
    {
        "number": 3547,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"test_data/test.txt\").read()) == \"100.00\"\n\nprint(solution(open(\"data/2.txt\").read()))\nprint(solution(open(\"data/3.txt\").read()))\nprint(solution(open(\"data/4.txt\").read()))\nprint(solution(open(\"data/5.txt\").read()))\nprint(solution(open(\"data/6.txt\").read()))"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n'''\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == input()\n\n\"\"\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3\\n4 5\\n2 4\\n\") == \"5\"\nassert solution(\"1 1\\n2 2\\n\") == \"0\"\nassert solution(\"2 3\\n1 2\\n\") == \"1\"\nassert solution(\"4 6\\n1 2\\n3 4\\n5 6\\n4 5\\n3 4\\n\") == \"4\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"3\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 3\n1 3\n4 5\n2 4\n\"\"\") == '5'\nassert solution(\"\"\"10 2\n3 1\n4 5\n5 8\n2 1\n6 7\n1 2\n5 2\n2 6\n6 5\n2 1\n8 7\n4 6\n8 4\n\"\"\") == '5'\nassert solution(\"\"\"10 2\n3 1\n4 5\n5 8\n2 1\n6 7\n1 2\n5 2\n2 6\n6 5\n2 1\n8 7\n4 6\n8 4\n\"\"\") == '5'\nassert solution(\"\"\"10 2\n3 1\n4 5\n5 8\n2 1\n6 7\n1 2\n5 2\n2 6\n6 5\n2 1\n8 7\n4 6\n8 4\n\"\"\") == '5'\nassert solution(\"\"\"10 2\n3 1\n4 5\n5 8\n2 1\n6 7\n1 2\n5 2\n2 6\n6 5\n2 1\n8 7\n4 6\n8 4\n\"\"\") == '5'\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5'\n\n'''\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4\\n') == '5'\nassert solution('4 10\\n1 2\\n1 4\\n4 5\\n1 3\\n1 5\\n1 6\\n1 7\\n4 8\\n4 9\\n3 10\\n1 3\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8') == '5'\nassert solution('5 5\\n1 2\\n1 4\\n1 5\\n2 4\\n3 4\\n4 5\\n1 3\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8') == '5'\nassert solution('5 9\\n1 3\\n2 4\\n3 4\\n4 5\\n1 3\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 8') == '3'\nassert solution('9 10\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 8\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 8\\n1 2\\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 3\n4 5\n2 4''') == 5\nassert solution('''5 5\n1 3\n4 5\n2 4\n1 3\n4 5''') == 7\nassert solution('''5 4\n1 3\n4 5\n2 4\n1 3\n2 4\n1 3\n2 4''') == 8\nassert solution('''5 4\n1 3\n4 5\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n4 5''') == 13\nassert solution('''5 4\n1 3\n4 5\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3\n2 4\n1 3"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5'\n'''\n"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 3548,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 3\\n2 4\\n3 4\\n4 5\\n3\\n3\\n5\\n4\") == \"5\"\nassert solution(\"2\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n4\\n5\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''11 13 17\n5 2 4\n0 0 0'''\n) == '2095'\n\nassert solution(\n    '''11 13 17\n5 2 4\n0 0 0\n'''\n) == '2095'\n\nassert solution(\n    '''11 13 17\n5 2 4\n1 1 1\n'''\n) == '2095'\n\nassert solution(\n    '''11 13 17\n5 2 4\n1 2 2\n'''\n) == '2095'\n\nassert solution(\n    '''11 13 17\n5 2 4\n1 2 2\n'''\n) == '2095'"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('m_1 m_2 m_3\\n5 2 4\\n0 0 0') == '2095'\nassert solution('m_1 m_2 m_3\\n5 2 4\\n5 1 3') == '2095'\nassert solution('m_1 m_2 m_3\\n5 2 4\\n5 2 4') == '2095'\nassert solution('m_1 m_2 m_3\\n5 2 4\\n5 1 3\\n0 0 0') == '2095'\nassert solution('m_1 m_2 m_3\\n5 2 4\\n5 2 4\\n0 0 0') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''11 13 17\n5 2 4\n0 0 0''') == '2095'\nassert solution('''11 13 17\n5 2 4\n5 3 6\n1 4 2''') == '2095'\nassert solution('''11 13 17\n5 2 4\n5 3 6\n0 0 0''') == '2095'\nassert solution('''11 13 17\n5 2 4\n5 3 6\n100 100 100''') == '2095'\nassert solution('''11 13 17\n5 2 4\n5 3 6\n1000 1000 1000''') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 11 13 17') == '2095'\nassert solution('2 11 13 17\\n5 2 4\\n0 0 0') == '2095'\nassert solution('2 11 13 17\\n5 2 4\\n0 1 1') == '2'\nassert solution('2 11 13 17\\n5 2 4\\n0 1 1\\n6 4 1') == '6'\nassert solution('2 11 13 17\\n5 2 4\\n0 1 1\\n6 4 1\\n6 1 1') == '11'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2095'\nassert stdin == '11 13 17\\n5 2 4\\n0 0 0'\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"2095\"\nassert solution(\"1 2 3\") == \"2095\"\nassert solution(\"1 1 3\") == \"2095\"\nassert solution(\"1 1 3\") == \"2095\"\nassert solution(\"1 1 3\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"11 13 17\n5 2 4\n0 0 0\"\"\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11 13 17\n5 2 4\n0 0 0''') == '2095'\nassert solution('''11 13 17\n5 2 4\n10 2 5\n1 1 1''') == '1'\nassert solution('''11 13 17\n5 2 4\n1 1 1''') == '1'\nassert solution('''11 13 17\n5 2 4\n2 1 5\n1 1 1''') == '1'\nassert solution('''11 13 17\n5 2 4\n2 1 5\n1 1 1''') == '1'\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\n\nassert solution(\n\"\"\"\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${a}`;\nend.\n\"\"\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\n\nassert solution(\n\"\"\"\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${a}`;\nend.\n\"\"\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\n\nassert solution(\n\"\"\"\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${a}`;\nend.\n\"\"\") == \"\"\"My name is Gon\nMy name is Gon\"\"\"\n\nassert solution(\n\"\"\"\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${a}`;\nend.\n\"\"\") == \"\"\"My name is Gon\nMy name is Gon\"\"\""
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon'\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nvar d = `My name is ${a}`;\nprint d;\nend.\n''') == 'My name is Gon\\nMy name is Gon\\nMy name is Gon'\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nend.\n''') == 'My name is Gon'\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nend.\n''') == 'My name is Gon'\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint a;\nprint `My name is ${b}`;\nprint a;\nend.\n''') == 'My name is Gon\\nGon\\nMy name is Gon\\nGon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('var a = \"Gon\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";var b = a;var c = `My name ${a}`;print c;print `My name ${b}`;end.') == 'My name Gon\\nMy name Gon'\nassert solution('var a = \"Gon\";var b = a;var c = `My name ${a}`;print c;print `My name ${b}`;end.') == 'My name Gon\\nMy name Gon'\nassert solution('var a = \"Gon\";var b = a;var c = `My name ${a}`;print c;print `My name ${b}`;end.end.') == 'My name Gon\\nMy name Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.''') == 'My name is Gon\\nMy name is Gon\\n'\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon\\n'\n'''\n'''"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint ${c};\\nprint `My name is ${b}`;\\nend') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint ${c};\\nprint `My name is ${b}`;\\nend') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = `a`;\\nvar c = `${a}`;\\nprint ${c};\\nprint `${b}`;\\nend') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = `Gon`;\\nvar b = `${a}`;\\nvar c = `${a}`;\\nprint ${c};\\nprint `${b}`;\\nend') == 'My name is Gon\\nMy name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"var a = \\\"Gon\\\";\\n\"\n\"var b = a;\\n\"\n\"var c = `My name is ${a}`;\\n\"\n\"print c;\\n\"\n\"print `My name is ${b}`;\\n\"\n\"end\") == \"My name is Gon\\nMy name is Gon\"\n\nassert solution(\n\"var a = \\\"Gon\\\";\\n\"\n\"var b = a;\\n\"\n\"var c = `My name is ${a}`;\\n\"\n\"print c;\\n\"\n\"print `My name is ${b}`;\\n\"\n\"end\") == \"My name is Gon\\nMy name is Gon\"\n\nassert solution(\n\"var a = \\\"Gon\\\";\\n\"\n\"var b = `My name is ${a}`;\\n\"\n\"print b;\\n\"\n\"end\") == \"My name is Gon\"\n\nassert solution(\n\"var a = \\\"Gon\\\";\\n\"\n\"var b = `My name is ${a}`;\\n\"\n\"print b;\\n\"\n\"end\") == \"My name is Gon\"\n\nassert solution(\n\"var a = \\\"Gon\\\";\\n\"\n\"var b = `My name is ${a}`;\\n\"\n\"var c = `My name is ${b}`;\\n\"\n\"print c;\\n\"\n\"end\") == \"My name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a b c d') == 'a b c d'\nassert solution('a b c d e') == 'a b c d e'\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('var a = \"Gon\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\";var b = `My name ${a}`;var c = `My name ${b}`;print c;print `My name ${a}`;end.') == 'My name Gon\\nMy name Gon'\nassert solution('var a = \"Gon\";var b = `My name ${a}`;var c = `My name ${b}`;print c;print `My name ${a}`;end.') == 'My name Gon\\nMy name Gon'\nassert solution('var a = \"Gon\";var b = `My name ${a}`;var c = `My name ${b}`;print c;print `My name ${b}`;end.') == 'My name Gon\\nMy name Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\n\nassert solution('''\nvar a = \"Gon\";\nvar b = `My name is ${a}`;\nprint b;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"transfer 2 0\"\n\"\"\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Dino loves ice cream. In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n'His recipe for making ice cream includes exactly 10 liters of dry ice. Unfortunately, he has no marked containers in his office. Instead, he keeps a set of bottles of known total volume.\\n'\n'He wants to use this in order to transfer 10 liters of dry ice from his dry ice container to the container in which he is mixing his ice cream. To do this, he may perform three different kinds of actions:\\n'\n'1. Fill a bottle with dry ice from the dry ice container until the bottle is full.\\n'\n'2. Empty the contents of a bottle into the ice container.\\n'\n'3. Transfer dry ice from one bottle into another until either the first bottle becomes empty or the target bottle becomes full.\\n'\n'Can you help Dino construct a plan in order to transfer 10 liters of dry ice into the ice cream mix?\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0'\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n7 8\n10''') == 'fill 2'\nassert solution('''2\n7 8\n10\n7''') == 'fill 0'\nassert solution('''2\n7 8\n10\n8''') == 'transfer 0 1'\nassert solution('''2\n7 8\n10\n11''') == 'transfer 1 2'\nassert solution('''3\n9 9 9\n7 7 7\n11 11 11''') == 'fill 0'\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Dino loves ice cream.\\n'\n                'In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n                'His recipe for making ice cream includes exactly $T$ liters of dry ice.\\n'\n                'Unfortunately, he has no marked containers in his office.\\n'\n                'Instead, he keeps a set of bottles of known total volume.\\n'\n                'He wants to use this in order to transfer $T$ liters of dry ice from his dry ice container to the container in which he is mixing his ice cream.\\n'\n                'To do this, he may perform a sequence of three different kinds of actions.\\n'\n                'He may either fill a bottle with dry ice from the dry ice container until the bottle is full,\\n'\n                'empty the contents of a bottle into the ice container, or transfer dry ice from one bottle into other until either\\n'\n                'the first bottle becomes empty or the target bottle becomes full.\\n'\n                'Can you help Dino construct a plan in order to transfer $T$ liters of dry ice into the ice cream mix?\\n') == '''fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1'''\n\nassert solution('Dino loves ice cream.\\n'\n                'In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n                'His recipe for making ice cream includes exactly $T$ liters of dry ice.\\n'\n                'Unfortunately, he has no marked containers in his office.\\n'\n                'Instead, he keeps a set of bottles of known total volume.\\n'\n                'He wants to use this in order to transfer $T$ liters of dry ice from his dry ice container to the container in which he is mixing his ice cream.\\n'\n                'To do this, he may perform a sequence of three different kinds of actions.\\n'\n                'He may either fill a bottle with dry ice from the dry ice container until the bottle is full,\\n'\n                'empty the contents of a bottle into the ice container, or transfer dry ice from one bottle into other until either\\n'\n                'the first bottle becomes empty or the target bottle becomes full.\\n'\n                'Can you help Dino construct a plan in order to transfer $T$ liters of dry ice into the ice cream mix?\\n') == '''fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1'''\n\nassert solution('Dino loves ice cream.\\n'\n                'In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n                'His recipe for making ice cream includes exactly $T$ liters of dry ice.\\n'\n                'Unfortunately, he has no marked containers in his office.\\n'\n                'Instead, he keeps a set of bottles of known total volume.\\n'\n                'He wants to use this in order to transfer $T$ liters of dry ice from his dry ice container to the container in which he is mixing his ice cream.\\n'\n                'To do this, he may perform a sequence of three different kinds of actions.\\n'\n                'He may either fill a bottle with dry ice from the dry ice container until the bottle is full,\\n'\n                'empty the contents of a bottle into the ice container, or transfer dry ice from one bottle into other until either\\n'\n                'the first bottle becomes empty or the target bottle becomes full.\\n'\n                'Can you help Dino construct a plan in order to transfer $T$ liters of dry ice into the ice cream mix?\\n') == '''fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1'''\n\nassert solution('Dino loves ice cream.\\n'\n                'In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n                'His recipe for making ice cream includes exactly $T$ liters of dry ice.\\n'\n                'Unfortunately, he has no marked containers in his office.\\n'\n                'Instead, he keeps a set of bottles of known total volume.\\n'\n                'He wants to use this in order to transfer $T$ liters of dry ice from his dry ice container to the container in which he is mixing his ice cream.\\n'\n                'To do this, he may perform a sequence of three different kinds of actions.\\n'\n                'He may either fill a bottle with dry ice from the dry ice container until the bottle is full,\\n'\n                'empty the contents of a bottle into the ice container, or transfer dry ice from one bottle into other until either\\n'\n                'the first bottle becomes empty or the target bottle becomes full.\\n'\n                'Can you help Dino construct a plan in order to transfer $T$ liters of dry ice into the ice cream mix?\\n') == '''fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1'''\n\nassert solution('Dino loves ice cream.\\n'\n                'In case he ever run out of ice cream at his office, he keeps a stash of dry ice in order to quickly make new ice cream.\\n'\n                'His recipe for making ice cream includes exactly $T$ liters of dry ice.\\n'\n                'Unfortunately, he has no marked containers in his office.\\n'\n                'Instead, he keeps a set of bottles of known total volume.\\n'\n                'He wants to use this in order to transfer $T$ liters of dry ice from his dry ice container to the container in which he is mixing his ice cream.\\n'\n                'To do this, he may perform a sequence of three different kinds of actions.\\n'\n                'He may either fill a bottle with dry ice from the dry ice container until the bottle is full,\\n'\n                'empty the contents of a bottle into the ice container, or transfer dry ice from one bottle into other until either\\n'\n                'the first bottle becomes empty or the target bottle becomes full.\\n'\n                'Can you help Dino construct a plan in order to transfer $T$ liters of dry ice into the ice cream mix"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n7 8\n10''') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n'\nassert solution('''4\n1 2 3 4 5 6 7 8 9\n5\n''') == 'fill 1\\ndiscard 1\\ndiscard 2\\ndiscard 3\\ndiscard 4\\n'\nassert solution('''7\n10 5 2 3 4 6 8 9\n1\n''') == 'fill 5\\ndiscard 1\\ndiscard 3\\ndiscard 4\\ndiscard 6\\ndiscard 7\\ndiscard 8\\ndiscard 9\\ndiscard 2\\nfill 1\\n'\nassert solution('''7\n1 5 2 3 4 6 8 9\n10\n''') == 'fill 1\\ndiscard 1\\ndiscard 2\\ndiscard 3\\ndiscard 4\\ndiscard 6\\ndiscard 7\\ndiscard 8\\ndiscard 9\\ndiscard 2\\n'\nassert solution('''7\n1 2 3 4 5 6 7 8\n10\n''') == 'impossible\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n-----BEGIN SAMPLE-----\n2\n7 8\n10\n7\nSample Output:\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n8\n10\n''') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n'\n\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'impossible'\nassert solution('''7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"7\n8\n10\"\"\") == \"fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\"\") == \"fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\"\nassert solution(\"\"\"7\n8\n10\"\"\") == \"impossible\"\nassert solution(\"\"\"7\n8\n10\"\"\") == \"fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\"\") == \"fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\"\nassert solution(\"\"\"7\n8\n10\"\"\") == \"impossible\"\nassert solution(\"\"\"7\n8\n10\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2\n7 8\n10\n'''\n) == '''fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n'''\n"
    },
    {
        "number": 3551,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n7 8\\n10\\n') == 'fill 2\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('3\\n7 8 9 10\\n11 12 13 14\\n15 16 17 18 19\\n20 21 22 23 24\\n25 26 27 28 29\\n30 31 32 33 34\\n35 36 37 38 39\\n40 41 42 43 44\\n45 46 47 48 49\\n50 51 52 53 54\\n55 56 57 58 59 60\\n') == 'fill 1\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('1\\n0\\n') == 'impossible'\nassert solution('4\\n0 0 0 0\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n') == 'fill 1\\ntransfer 2 1\\ntransfer 2 0\\nfill 2\\ntransfer 2 1\\ntransfer 2 0'\nassert solution('2\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n') == 'fill 1\\ntransfer 2 1\\ntransfer 2 0'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"27\"\n\"\"\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('5 4 3') == '35'\nassert solution('1000 5 4 3') == '1780'\nassert solution('9 7 4 3') == '19'\nassert solution('1000000000 1000000000 1000000000 1000000000') == '0'\nprint('All cases passed successfully.')\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\nIn a typical problem, there is a massive army of gnomes coming in and attacking the walls of the fortress. If you consider the case of hundreds of thousands of gnomes, then you would need to divide them into groups and attack each group separately. You have $n$ gnomes at your disposal. Before the battle, they must be divided into at most $m$ non-empty groups. The battle will then proceed in turns. Each turn, your gnomes will attack the enemy, causing one unit of damage for each living gnome. Then the enemy will attack by throwing a lightning bolt at one of the $m$ groups. The lightning bolt kills $k$ of the gnomes in that group, or all of them if the number of living gnomes in the group is less than $k$. The battle ends when all gnomes are dead. The enemy will always throw the lightning bolts in an optimal way such that the total damage caused by the gnomes is minimized.\n\nNow you wonder, what is the maximum amount of damage you can cause to the enemy if you divide the gnomes into groups in an optimal way?\n\nFor example, if as in Sample Input 1 you have $n=10$ gnomes that are to be divided into $m=4$ groups, and the lightning bolt does at most $k=3$ damage, then an optimal solution would be to create one large group of size $7$ and three small groups of size $1$. In the first round, you cause $10$ damage and the lightning bolt reduces the large group by $3$. In the next round, you cause $7$ damage and the large group is reduced down to size $1$. In the remaining four rounds you do $4$, $3$, $2$, and $1$ damage respectively and the lightning bolt removes one group each round. In total you do $10+7+4+3+2+1 = 27$ damage.\n\n-----Input-----\nThe input consists of a single line containing the three integers $n$, $m$, and $k$ ($1 \\le n \\le 10^9$, $1 \\le m, k \\le 10^7$), with meanings as described above.\n\n-----Output-----\nOutput the maximum amount of damage you can cause to the enemy.\n\n-----Examples-----\nSample Input:\n10 4 3\nSample Output:\n27\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4 3') == '27'\nassert solution('10 4 3') == '27'\nassert solution('10 5 3') == '27'\nassert solution('10 4 3') == '27'\nassert solution('10 9 3') == '27'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"27\"\n\"\"\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '27'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 4 3\") == '27'\nassert solution(\"1 1 1\") == '1'\nassert solution(\"1 1 10\") == '10'\nassert solution(\"1 100 100\") == '100'\nassert solution(\"100 1 1\") == '100'\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2 1 3 4 2 2 3 1 2 1 1 3 4 1 3 2 2 1 1 3 2 1 3 4 2 2 1 3 3 2 1 1 3 1 3 2 1 3 1 1 3 2 1 1 3 2 1 3 3 4 2 2 2 3 3 1 1 3 1 2 2 3 1 3 2 2 1 3 4 3 3 1 2 1 3 1 1 3 3 1 1 2 1 3 2 1 1 1 3 1 1 3 1 4 3 2 1 3 1') == '1 3 2 1 2'\nassert solution('1 3 2 1 3 4 2 2 3 1 2 1 1 3 4 1 3 2 2 1 1 3 2 1 3 4 2 2 1 3 3 2 1 1 3 1 3 2 1 3 3 4 2 2 1 3 3 1 1 3 2 1 3 1 1 3 2 1 1 1 3 1 1 3 1 1 2 1 3 2 1 1 1 3 1 1 3 1 4 3 2 1 3 1') == '-1'\nassert solution('1 3 2 1 3 4 2 2 3 1 2 1 1 3 4 1 3 2 2 1 1 3 2 1 3 4 2 2 1 3 3 2 1 1 3 1 3 2 1 3 3 4 2 2 1 3 3 1 1 3 2 1 3 1 1 3 2 1 1 1 3 1 1 3 1 1 2 1 3 2 1 1 1 3 1 1 3 1 4 3 2 1 3 1') == '4'\nassert solution('1 3 2 1 3 4 2 2 3 1 2 1 1 3 4 1 3 2 2 1 1 3 2 1 3 4 2 2 1 3 3 2 1 1 3 1 3 2 1 3 3 4 2 2 1 3 3 1 1 3 2 1 3 1 1 3 2 1 1 1 3 1 1 3 1 1 2 1 3 2 1 1 1 3 1 1 3 1 4 3 2 1 3 1') == '3'\nassert solution('1 3 2 1 3 4 2 2 3 1 2 1 1 3 4 1 3 2 2 1 1 3 2 1 3 4 2 2 1 3 3 2 1 1 3 1 3 2 1 3 3 4 2 2 1 3 3 1 1 3 2 1 3 1 1 3 2 1 1 1 3 1 1 3 1 1 2 1 3 2 1 1 1 3 1 1 3 1 4 3 2 1 3 1') == '2'\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('2 3 1 2') == '3'\nassert solution('1 3 3') == '4'\nassert solution('1 1 1') == '4'\nassert solution('2 3 1 2') == '3'\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 5\\n2 3 1 2\\n2') == '3'\nassert solution('1 1 1\\n1\\n1\\n1') == '-1'\nassert solution('1 1 1\\n1\\n1\\n1') == '4'\nassert solution('1 2 2\\n1\\n2') == '3'\nassert solution('1 2 2\\n1\\n2\\n2') == '-1'\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint('Passed.')"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\") == \"3\\n-1\\n4\\n\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n\"\"\") == \"\"\"3\n-1\n4\n\"\"\"\n\nassert solution(\"\"\"5 1 2 3 4 5\n1\n2\n3\n4\n5\n4\n1\n2\n3\n1\n2\n3\n\"\"\") == \"\"\"3\n-1\n3\n3\n3\n3\n-1\n3\n4\n\"\"\"\n\nassert solution(\"\"\"10 10 9\n9 10 8\n8 10 7\n7 8 6\n6 7 5\n5 6 4\n4 5 3\n3 4 2\n2 3 1\n2\n1 1 1\n1\n\"\"\") == \"\"\"9\n-1\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n\"\"\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2''') == '3\\n-1\\n4\\n4'\n\nassert solution('''1 1 1\n1\n1\n1\n1\n1''') == '-1\\n1\\n0\\n1'\n\nassert solution('''1 1 1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3553,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1000 3000 1000''') == '533.3333333333'\nassert solution('''1000 2000 2000''') == '533.3333333333'\nassert solution('''100000 3000 5000''') == '1000000'\nassert solution('''0 0 0''') == '0'\nassert solution('''2 2 2''') == '0'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1000 3000 1000''') == '533.3333333333'\n'''"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1000 3000 1000''') == '533.3333333333'\n'''"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"533.3333333333\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('10 2000 100') == '0.05'\nassert solution('100 30 60') == '0.01'\nassert solution('100 30 10') == '0.001'\nassert solution('100 30 10 4') == '0.0000001'\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\"\nassert solution(\"100000000 0 0\") == \"0.000000000000000000\"\nassert solution(\"0 0 0\") == \"0.000000000000000000\"\nassert solution(\"0 0 1\") == \"0.000000000000000000\"\nassert solution(\"0 1 0\") == \"0.000000000000000000\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\"\n\"\"\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"1000 3000 1000\") == \"533.3333333333\"\nassert solution(\n\"5 1000 10\") == \"533.3333333333\"\nassert solution(\n\"1000 10 100\") == \"533.3333333333\"\nassert solution(\n\"1000 1000 1000\") == \"533.3333333333\"\nassert solution(\n\"1000 1000 100\") == \"533.3333333333\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"1000 3000 1000\"\n) == \"533.3333333333\"\n\nassert solution(\n\"1000 3000 10000\"\n) == \"533.3333333333\"\n\nassert solution(\n\"10000 100000 10000\"\n) == \"533.3333333333\"\n\nassert solution(\n\"10 1000000 100\"\n) == \"533.3333333333\"\n\nassert solution(\n\"10 1000000 1000\"\n) == \"533.3333333333\""
    },
    {
        "number": 3554,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('200 200 100') == '32.5'\nassert solution('1000 2000 10000') == '1081.8'\nassert solution('1000 2000 500000') == '845.5'\nassert solution('1000 2000 5000100') == '845.5'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n1 1\n0 0''') == '1.01'\nassert solution('''0 0\n1 1\n1 0''') == '3.01'\nassert solution('''0 0\n1 1\n1 1''') == '3.01'\nassert solution('''0 0\n1 1\n0 1\n1 0''') == '5.71'\nassert solution('''0 0\n1 1\n0 1\n0 0\n1 1\n1 0''') == '7.12'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'\nassert solution('5 3\\n0 0\\n2 2\\n0 1\\n4 4\\n0 2\\n1 1\\n2 1\\n5 1\\n1 2\\n1 3') == '16.00'\nassert solution('5 3\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0.00'\nassert solution('10 5\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '100.00'\nassert solution('10 5\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '101.00'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0\n1 1\n1 1''') == '0.01'\nassert solution('''0 0\n0 0\n0 0''') == '0.001'\nassert solution('''0 0\n10 0\n1 1\n10 10\n10 10''') == '14.14'\nassert solution('''0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 0\n10 10''') == '14.14'\nassert solution('''5 0\n0 0\n1 0\n3 0\n4 0''') == '9.71'\nassert solution('''6 0\n0 0\n1 0\n1 0\n1 0\n2 0''') == '6.63'\nassert solution('''6 0\n0 0\n1 0\n2 0\n4 0\n6 0''') == '6.63'\nassert solution('''2 0\n0 0\n1 0\n2 0\n4 0\n6 0''') == '6.63'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10\\n2\\n2') == '14.14'\nassert solution('1\\n0\\n0') == '0.00'\nassert solution('1\\n0\\n0\\n0') == '0.00'\nassert solution('1\\n0\\n0\\n1\\n0') == '2.00'\nassert solution('2\\n1\\n1\\n1\\n1') == '3.00'\n"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0\n10 0\n10 10''') == '14.14'\nassert solution('''5 2\n1 2\n1 1\n2 1\n5 1\n4 1''') == '3.57'\nassert solution('''0 0\n5 5\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0\n5 0"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == '14.14'\nassert solution('''1 2\n1 1\n1 3''') == '3.80'\n'''\n'''"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == '14.14'\n'''\nfrom math import *\nn,m = map(int,stdin.split())\npos = {(0,0):1}\ntoys = sorted(map(int,stdin.split()),reverse=True)\ntrees = set(map(int,stdin.split()))"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 3555,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0\n1 0\n1 1\n''') == '2.00'\nassert solution('''0 0\n1 0\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n''') == '11.21'\nassert solution('''0 0\n1 0\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n14 1\n15 1\n16 1\n17 1\n18 1\n19 1\n20 1\n21 1\n22 1\n23 1\n24 1\n25 1\n26 1\n27 1\n28 1\n29 1\n30 1\n31 1\n32 1\n33 1\n34 1\n35 1\n36 1\n37 1\n38 1\n39 1\n40 1\n41 1\n42 1\n43 1\n44 1\n45 1\n46 1\n47 1\n48 1\n49 1\n50 1\n''') == '32.84'\nassert solution('''0 0\n1 0\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n14 1\n15 1\n16 1\n17 1\n18 1\n19 1\n20 1\n21 1\n22 1\n23 1\n24 1\n25 1\n26 1\n27 1\n28 1\n29 1\n30 1\n31 1\n32 1\n33 1\n34 1\n35 1\n36 1\n37 1\n38 1\n39 1\n40 1\n41 1\n42 1\n43 1\n44 1\n45 1\n46 1\n47 1\n48 1\n49 1\n50 1\n51 1\n52 1\n53 1\n54 1\n55 1\n56 1\n57 1\n58 1\n59 1\n60 1\n61 1\n62 1\n63 1\n64 1\n65 1\n66 1\n67 1\n68 1\n69 1\n70 1\n71 1\n72 1\n73 1\n74 1\n75 1\n76 1\n77 1\n78 1\n79 1\n80 1\n81 1\n82 1\n83 1\n84 1\n85 1\n86 1\n87 1\n88 1\n89 1\n90 1\n91 1\n92 1\n93 1\n94 1\n95 1\n96 1\n97 1\n98 1\n99 1\n100 1\n''') == '72.81'\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == \\\n'''123457 0\n0 2\n123458 1\n'''\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == \\\n'''123457 0\n0 2\n123458 1\n'''\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == \\\n'''123457 0\n0 2\n123458 1\n'''\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == \\\n'''123457 0\n0 2\n123458 1\n'''\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == \\\n'''123457 0\n0 2\n123458 1\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\") == \"\"\"123457 0\n0 2\n123458 1\n\"\"\"\n\nprint(solution(open(\"data/d4_sample_in.txt\").read()))\nprint(solution(open(\"data/d4_in.txt\").read()))\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\nassert solution(\"2 2\\n110000 1048576\\n120000 1000000000\") == \"110000 1048576\\n120000 0\"\nassert solution(\"1 0\\n1000000\\n1000000\") == \"0 0\"\nassert solution(\"2 2\\n110000 1048576\\n120000 1000000000\\n100000 1000000\\n1000000 1000000\\n1000000 1000000\\n1000000 1000000\") == \"1 0\\n1000000 0\\n1000000 1\\n1000000 1\"\nassert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\\n123457 1\""
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '''123457 0\n0 2\n123458 1'''\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '''123457 0\n0 2\n123458 1'''\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '''123457 0\n0 2\n123458 1'''\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '''123457 0\n0 2\n123458 1'''\nassert solution('''5 5\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '''123457 0\n0 2\n123458 1'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '''123457 0\n0 2\n123458 1'''\n\nassert solution('''2 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '''123457 0\n0 2\n123458 1'''\n\nassert solution('''2 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123457\n123458\n123457''') == '''123457 0\n0 2\n123458 1'''\n\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '''123457 0\n0 2\n123458 1'''\n\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457''') == '''123457 0\n0 2\n123458 1'''"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456''') == '123457 0\\n0 2\\n123458 1\\n'\nassert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456''') == '123457 0\\n0 2\\n123458 1\\n'\nassert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123457\n123458\n123457''') == '123457 0\\n0 2\\n123458 1\\n'\nassert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123457\n123458\n123457''') == '123457 0\\n0 2\\n123458 1\\n'\nassert solution('''123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123458\n123457\n123458''') == '123458 0\\n0 2\\n123458 1\\n'\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\n\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\n\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\n\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''\n\nassert solution('''3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''123457 0\n0 2\n123458 1\n'''"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\nassert solution(\"2 2\\n1 1\") == \"1 1\"\nassert solution(\"1 1\\n1 1\") == \"0 0\"\nassert solution(\"3 3\\n1 1\\n2 2\\n3 3\") == \"1 1\\n0 0\\n2 2\\n3 3\"\nassert solution(\"3 3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"1 1\\n0 0\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '12345678'\nassert solution('3\\n2\\n1') == '0 2'\nassert solution('5\\n5\\n5\\n5\\n5') == '0 0'\nassert solution('2\\n2\\n2') == '123456 0'\nassert solution('4\\n4\\n4\\n4') == '0 0'\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n2\\n2\\n3') == '3'\nassert solution('2\\n4\\n2\\n3') == '18'\nassert solution('1\\n3\\n2\\n2') == '17'\nassert solution('3\\n3\\n1\\n2') == '18'\nassert solution('1\\n2\\n2\\n3') == '3'\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"90\"\n\"\"\"\n\nn = int(input())\ncoaches = []\nfor _ in range(n):\n    coaches.append(int(input()))\n\norder = [int(x) for x in input().split()]\n\ncosts = 0\nfor coach in range(n):\n    num = coaches[coach]\n    if num % 10 == 0:\n        costs += num\n    else:\n        costs += (num//10 + 1) * 10\n\ncosts += sum(coaches)\n\nn = len(order)\n\ndp = [0] * (costs + 1)\ndp[0] = 1\n\nfor coach in range(n):\n    num = coaches[order[coach]]\n    if num % 10 == 0:\n        for i in range(num, costs + 1, 10):\n            dp[i] += dp[i - num]\n    else:\n        for i in range(num, costs + 1, 10):\n            dp[i] += dp[i - num]\n\ncosts %= 10\nprint(dp[costs])\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3 5 10 2 5\n2 4 5 1 3\n2 4 5 1 3\n''') == '90'\nassert solution('''2\n3 4\n1 3\n1 3\n''') == '5'\nassert solution('''3\n1 2 3\n1 3 4\n1 2 3\n''') == '7'\nassert solution('''10\n4 4 5 2 9 2 8 3 7 9 2 6\n3 8 9 1 4 3 9 8 9 2 7\n4 5 3 9 1 7 3 4 9 2 8\n3 9 8 4 2 5 9 4 1 2\n1 8 2 3 3 2 8 6 1 5\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3 5 10 2 5\n2 4 5 1 3\n1 2 3 4 5''') == '90'\nassert solution('''1\n5\n5\n5\n5\n5''') == '25'\nassert solution('''7\n11 11 2 3 5 5 6 7\n7 10 10 1 2 6 8 8 10\n2 3 4 5 8 9 7 10 11''') == '195'\nassert solution('''11\n
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n1') == ''\nassert solution('1\\n2\\n3') == ''\nassert solution('2\\n1\\n2') == '6'\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n3 2\\n2 3\\n3 2') == '2'\nassert solution('3\\n5 5 5\\n1 3\\n2 1\\n2 2\\n2 3') == '10'\nassert solution('3\\n5 5 5\\n1 3\\n2 1\\n2 2\\n2 3') == '10'\nassert solution('3\\n5 5 5\\n1 3\\n2 1\\n2 2\\n2 3') == '10'\nassert solution('3\\n5 5 5\\n1 3\\n2 1\\n2 2\\n2 3') == '10'\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n3 5 10 2 5\n2 4 5 1 3\n2 4 5 1 3''') == \"90\"\nassert solution('''5\n3 5 10 2 5\n2 4 5 1 3\n1 4 3 2 5''') == \"45\"\nassert solution('''6\n3 5 10 2 5 2 1\n2 4 5 1 3 2 3\n2 4 5 1 3 2 3''') == \"125\"\nassert solution('''10\n4 5 5 1 3 2 4 2 1\n4 5 5 1 3 2 4 2 1\n1 2 4 3 5 6 7 8 9 10\n1 2 4 3 5 6 7 8 9 10''') == \"570\"\nassert solution('''5\n3 5 10 2 5\n2 4 5 1 3\n2 4 5 1 3''') == \"90\"\n'''\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3 5 10 2 5\n2 4 5 1 3\n''') == '90'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '60'\nassert solution('''2\n5\n1 1 1\n2\n2\n2\n2\n2\n''') == '5'\nassert solution('''4\n1\n2\n2\n4\n''') == '8'\nassert solution('''3\n2\n2\n3\n''') == '3'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6.000000'\n\"\"\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n0 0 0\n0 0 0\n0 0 0''') == '0.000000'\nassert solution('''3 10\n1 0 0\n0 0 0\n0 0 0''') == '0.000000'\nassert solution('''3 10\n1 2 3\n0 4 4\n0 6 6''') == '2.000000'\nassert solution('''3 10\n0 0 0\n0 0 0\n0 0 0''') == '0.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n1 2 6\n1 1 5\n1 3 2''') == '5.000000'\nassert solution('''3 10\n0 3 7\n1 7 4\n1 3 8''') == '6.000000'\nassert solution('''3 10\n0 1 4\n1 1 2\n1 4 4''') == '7.000000'\nassert solution('''3 10\n0 1 3\n0 4 1\n1 1 2''') == '7.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''5 10\n0 2 4\n1 3 4\n2 1 6\n3 3 3\n4 5 4\n5 4 6\nSample Output:\n8.000000''') == '8.000000'\nassert solution('''2 10\n0 2 4\n1 3 4\n2 1 6\n3 3 3\n4 5 4\n5 4 6\nSample Output:\n3.50000\nassert solution('''1 10\n0 1 1\nSample Output:\n1.000000''') == '1.000000'\n'''"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n8\\n2\\n0\\n1\\n0\") == \"3.000000\"\nassert solution(\"1\\n3\\n8\\n2\\n0\\n1\\n0\\n1\\n0\\n1\\n0\") == \"6.000000\"\nassert solution(\"1\\n3\\n8\\n2\\n0\\n1\\n0\\n1\\n0\\n1\\n0\") == \"6.000000\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'\nassert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n0 3 4\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1 1\\n0 0 2\\n0 1"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 10\\n0 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\n\nprint(solution(open(\"test_input.txt\", \"r\").read()))\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\nassert solution('''3 10\n1 2 6\n0 5 9\n0 4 7''') == '6.000000'\nassert solution('''3 10\n1 2 6\n0 3 3\n0 8 2''') == '2.000000'\nassert solution('''3 10\n0 2 10\n0 4 9\n0 6 8''') == '6.000000'\nassert solution('''3 10\n0 2 10\n0 3 9\n0 6 8''') == '2.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6.000000'\n\"\"\"\n\n\nimport sys\nfrom functools import lru_cache\nfrom typing import List\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n0 0\n0 0\n1.\n..''') == '''1.\n..\n'''\n\nassert solution('''1\n1\n0\n0\n1.\n''') == '''2\n..\n'''\n\nassert solution('''2\n1\n1\n0\n0\n2.\n''') == '''3\n.2.\n'''\n\nassert solution('''4\n1\n1\n0\n0\n2.\n''') == '''3\n.2.\n'''\n\nassert solution('''1\n0\n1\n1\n0\n2.\n''') == '''2\n.2.\n'''"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..'\nassert solution('2\\n1 1\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n2..'\nassert solution('2\\n2 2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n2..'\nassert solution('2\\n2 2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n2..\\n2..'\nassert solution('2\\n2 2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n2..\\n2..'\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0 0') == '0 0'\nassert solution('0 0\\n0 0') == '0 0'\nassert solution('0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0'\nassert solution('0 0\\n0 0\\n1.\\n..\\n0\\n0 0\\n0 0\\n0 0\\n0 0') == '1.\\n..\\n0'\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0 0') == ''\nassert solution('1 2') == '1.'\nassert solution('1 2 1') == '1'\nassert solution('1 2 1 3') == '1'\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '2\\n2\\n0 0\\n0 0\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n0\\n'\nassert solution(\n    '2\\n1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n0\\n'\nassert solution(\n    '2\\n2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n0\\n'\nassert solution(\n    '2\\n2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n0\\n'\nassert solution(\n    '2\\n2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n0\\n'\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n0 0\n1.\n..\n0\n''') == '''1.\n..\n'''\n\nassert solution('''0 0\n0 0\n1.\n..\n0\n''') == '''1.\n..\n'''\n\nassert solution('''0 0\n0 0\n0 1\n0 0\n1.\n..\n0\n''') == '''1.\n.\n.\n.\n.\n'''\n\nassert solution('''0 0\n0 0\n0 1\n0 0\n1.\n..\n0\n''') == '''1.\n.\n.\n.\n.\n'''\n\nassert solution('''0 0\n0 0\n1 1\n0 0\n1.\n..\n0\n''') == '''1.\n.\n.\n.\n.\n'''"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('0 0') == '0'\nassert solution('0 1') == '0'\nassert solution('0 0') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0\n0 0\n1.\n..\n0\n''') == '1.\\n..'\nassert solution('''0 0\n0 0\n2\n.\n.\n''') == '2\\n'\nassert solution('''0 0\n0 0\n2\n.\n.\n''') == '2\\n'\nassert solution('''0 0\n0 0\n2\n.\n.\n''') == '2\\n'\nassert solution('''0 0\n0 0\n2\n.\n.\n''') == '2\\n'\n"
    },
    {
        "number": 3559,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0\n0 0\n1.\n..\n0''') == '1.\\n..'\nassert solution('''0 0\n0 0\n0 1\n0 0\n0 1\n1.\n..\n0''') == '1.\\n..'\nassert solution('''0 0\n0 0\n1 1\n0 0\n0 1\n1.\n..\n0''') == '1.\\n1.\\n..'\nassert solution('''0 0\n0 0\n1 1\n0 0\n0 1\n1.\n..\n0''') == '1.\\n1.\\n..'\nassert solution('''0 0\n0 0\n1 1\n0 0\n0 1\n1.\n.\n0''') == '1.\\n1.\\n..'\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '1\\n1\\n'\nassert solution('''6\ngg\ng\ngg\n3\n1 gg\n2 1\n2 2''') == '1\\n'\nassert solution('''7\ngg\ng\ngg\n3\n1 gg\n2 1\n2 2\n2 3''') == '1\\n'\nassert solution('''7\ngg\ng\ngg\n3\n1 gg\n2 1\n2 2\n2 3''') == '1\\n'\nassert solution('''7\ngg\ng\ngg\n3\n1 gg\n2 1\n2 2\n2 3''') == '1\\n'\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\na\nbc\nabc''') == '''1\n1\n1'''\nassert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '''1\n1\n1'''\nassert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '''1\n1\n1'''\nassert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '''1\n1\n1'''\nassert solution('''5\nabc\nbca\nbcb\ncba\ncbb\ncbc\n3\n1 abc\n2 bca\n2 bcb\n2 cba\n2 cbb\n2 cbc''') == '''1\n2\n2\n2\n2\n2'''\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\\n\"\nassert solution(\"3\\nabc\\na\\nb\\n\") == \"2\\n\"\nassert solution(\"3\\na\\nb\\nc\\n\") == \"1\\n\"\nassert solution(\"3\\na\\nb\\nc\\n1\") == \"1\\n\"\nassert solution(\"3\\na\\nb\\nc\\n1\\nabca\\na\") == \"2\\n\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '1'\n\nassert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '1'\n\nassert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n2 3\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"3\\na\") == \"1\"\nassert solution(\"3\\nb\") == \"1\"\nassert solution(\"3\\nc\") == \"1\"\nassert solution(\"3\\na\\nb\") == \"1\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    3\n    a\n    bc\n    abc\n    3\n    1 abca\n    2 1\n    2 3\n    '''\n) == '1\\n1\\n'\n\n\nassert solution(\n    '''\n    2\n    z\n    zz\n    3\n    1 zz\n    2 1\n    2 3\n    '''\n) == '1\\n1\\n'\n\nassert solution(\n    '''\n    3\n    z\n    zz\n    abc\n    3\n    1 zz\n    2 1\n    2 3\n    '''\n) == '1\\n1\\n'\n\nassert solution(\n    '''\n    5\n    a\n    b\n    c\n    d\n    e\n    3\n    1 ab\n    2 1\n    2 3\n    '''\n) == '1\\n1\\n'\n\nassert solution(\n    '''\n    5\n    a\n    b\n    c\n    d\n    e\n    3\n    1 ab\n    2 1\n    2 3\n    '''\n) == '1\\n1\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\na\nbc\nabc''') == '1'\nassert solution('''3\nabc\nabc\n3\n1 abca\n2 1\n2 3''') == '1'\nassert solution('''3\na\nbc\nabc''') == '1'\nassert solution('''3\na\nbc\nabc''') == '1'\nassert solution('''3\na\nbc\nabc''') == '1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\na\nbc\nabc\n\"\"\") == \"1\\n1\\n1\"\nassert solution(\"\"\"3\na\nbc\nabc\n\"\"\") == \"1\\n1\\n1\"\nassert solution(\"\"\"3\nb\nc\nd\n\"\"\") == \"1\\n1\\n1\"\nassert solution(\"\"\"3\na\nb\nc\n\"\"\") == \"0\\n0\\n0\"\nassert solution(\"\"\"3\na\nb\nc\n\"\"\") == \"1\\n1\\n1\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1 1 1''') == 'YES'\nassert solution('''2 3 2 3''') == 'YES'\nassert solution('''1 3 3 5''') == 'NO'\nassert solution('''10 5 3 2''') == 'NO'\nassert solution('''10 5 1 2''') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 1 2 2\") == \"NO\"\nassert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 2 2 3\") == \"YES\"\nassert solution(\"3 1 3 1\") == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n---\n\n...\n...\n..."
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 1 1 2\") == \"NO\"\nassert solution(\"2 2 2 2\") == \"YES\"\nassert solution(\"3 3 3 3\") == \"YES\"\nassert solution(\"4 4 4 4\") == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"0 1 1 1\") == \"NO\"\nassert solution(\"1 1 2 2\") == \"NO\"\nassert solution(\"1 2 2 1\") == \"NO\"\nassert solution(\"1 2 3 3\") == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1 1 1''') == \"YES\"\nassert solution('''1 1 1 1''') == \"NO\"\nassert solution('''1 1 1 1''') == \"YES\"\n'''\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"1 1 1 1\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"1 1 1 1\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"0 1 1 1\"\"\"\n) == \"NO\"\n\nassert solution(\n    \"\"\"1 1 1 1\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"2 2 2 2\"\"\"\n) == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('0 1 1 1') == 'NO'\nassert solution('10 10 10 10') == 'YES'\nassert solution('10 10 10 9') == 'NO'\nassert solution('10 10 10 10') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2 2\") == \"YES\"\nassert solution(\"10 1 2 2\") == \"NO\"\nassert solution(\"100 1 2 2\") == \"NO\"\n\"\"\""
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 96\") == \"80.5696000000\"\n\n---5.8 minutes ---"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1.5'\nassert solution('-0.0080 1.5417 25.0000') == '80.5696'\nassert solution('-0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000') == '80.5696'\nassert solution('-0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000') == '80.5696'\nassert solution('-0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000') == '80.5696'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"80.571928\"\nassert solution(\"0.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0\") == \"80.5696\"\nassert solution(\"1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0\") == \"80.5696\"\nassert solution(\"1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0\") == \"80.5696\"\nassert solution(\"0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\") == \"0.0\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\nfrom functools import reduce"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696000000'\nassert solution('''1 2\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696000000'\nassert solution('''1 2\n1.1252 1.9446 26.0000\n1.1252 1.9446 26.0000''') == '80.5696000000'\nassert solution('''1 2\n1.0167 1.5491 25.0008\n1.0167 1.5491 25.0008''') == '80.5696000000'\nassert solution('''1 2\n1.0011 1.5000 25.0009\n1.0011 1.5000 25.0009''') == '80.5696000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000'''\n) == '80.5696000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 1') == '0'\nassert solution('3 1') == '0'\nassert solution('4 1') == '1'\nassert solution('4 1') == '1'\n"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696'\n\nassert solution('''-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696'\n\nassert solution('''-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696'\n\nassert solution('''-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696'\n\nassert solution('''-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696'"
    },
    {
        "number": 3562,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_) == expect\n\nNote:\nTest set 1 (Visible Verdict) contains multiple test cases with the exact same input. In contrast, the specific input of each test case is random, making it difficult to predict the correct output.\nTest set 2 (Visible Verdict) contains only one test case with the exact same input as the above test case.\nTest set 3 (Visible Verdict) contains multiple test cases with the exact same input, but the correctness of each test case is very different from the above test case. In contrast, the specific input of each test case is random, making it difficult to predict the correct output.\n'''\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 0 0 1 1 1 0 0 1') == '2'\nassert solution('2 1 1 1 1 1 1 1 1') == '1'\nassert solution('1 0 0 1 1 1 0 0 1') == '2'\nassert solution('1 2 3 4 5 6 7 8 9') == '2'\nassert solution('10 0 0 1 1 1 0 0 1') == '3'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(solution.read_input(__file__)) == solution.read_expected_output(__file__)\nsolution(solution.read_input(__file__)) == solution.read_expected_output(__file__)\n\n'''\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n2 0 0 1 1 1 0 0 1\n''') == \"2\"\n'''\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"4 0 0 1 1 1 0 0 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\nassert solution(\"1 1 1 2 2 2 0 0 1\") == '2'\nassert solution(\"4 0 0 1 1 1 0 0 1\") == '2'\nassert solution(\"-1000000 1000000 1 1000000\") == '1'\nassert solution(\"1000 1000 1000 1000\") == '1'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n0 0 0 1 1 1 0 0 1''') == '2'\nassert solution('''2\n1 1 1\n0 0 0''') == '1'\nassert solution('''4\n-1000000 1 1000000 1 1000000 1''') == '2'\nassert solution('''4\n1000000 -1000000 1 1000000 1''') == '2'\nassert solution('''6\n1000000 0 1000000 1 1000000 1 1000000 1''') == '4'\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    solution.read(stdin)\n) == '2'\n\nsolution.verify(solution(\n    '4\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000\\n-1000000"
    },
    {
        "number": 3563,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('$1$\\n1 0 0 1 1 1 0 0 1\\n') == '2'\nassert solution('$2$\\n1 1 1 0 1 1 1 1 1 1\\n') == '2'\nassert solution('$3$\\n0 1 1 0 1 1 1 0 1 1\\n') == '2'\nassert solution('$4$\\n1 1 1 0 1 1 1 1 1 1\\n') == '2'\nassert solution('$5$\\n0 0 1 1 1 1 0 0 0 0\\n') == '2'\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == '1400'\n\nassert solution('''2 2 2\n0 0 400\n2000 0 400\n3000 0 200''') == 'impossible'\n\nassert solution('''2 2 2\n0 0 400\n2000 0 400\n3000 0 200\n5000 0 100\n5000 0 100''') == 'impossible'\n\nassert solution('''5 4 2\n0 0 1000\n3000 0 200\n4000 0 150\n2000 0 400\n3000 0 150\n500 0 100\n3000 0 100\n5000 0 100\n3000 0 200\n2000 0 400''') == '1400'\n\nassert solution('''5 4 2\n0 0 1000\n2000 0 400\n3000 0 200\n4000 0 150\n2000 0 400\n3000 0 150\n500 0 100\n3000 0 100\n5000 0 100\n3000 0 200\n2000 0 400\n3000 0 150\n''') == 'impossible'"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2 3''') == '1400'\nassert solution('''0 0 400''') == '0'\nassert solution('''1000 0 400''') == 'impossible'\nassert solution('''2000 0 400''') == 'impossible'\nassert solution('''300 0 150''') == '1400'\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1400'\n\n\"\"\n\"\"\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2 3''') == '''1400'''\nassert solution('''3 2 3''') == '''1400'''\nassert solution('''1 2 2''') == '''impossible'''\nassert solution('''2 1 1''') == '''1400'''\nassert solution('''2 1 1''') == '''1400'''\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2 3''') == '''1400\n'''\nassert solution('''4 5 2''') == '''impossible\n'''\nassert solution('''3 1 1''') == '''1000\n'''\nassert solution('''3 2 2''') == '''1400\n'''\nassert solution('''3 2 3''') == '''1400\n'''\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2 3''') == '1400'\nassert solution('''3 2 3''') == 'impossible'\nassert solution('''3 4 3''') == 'impossible'\nassert solution('''100 200 100''') == 'impossible'\nassert solution('''3 2 1''') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\"\"\"\n) == \"1400\"\n\nassert solution(\n\"\"\"2 1 1\n1 1 1\n1 1 1\"\"\"\n) == \"impossible\"\n\nassert solution(\n\"\"\"1 1 1\n0 0 0\n1 1 1\"\"\"\n) == \"impossible\"\n\nassert solution(\n\"\"\"2 1 1\n0 0 0\n1 1 1\"\"\"\n) == \"1400\"\n\nassert solution(\n\"\"\"2 1 1\n0 0 0\n100 0 0\n1 1 1\"\"\"\n) == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1400'\n\"\"\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"2\\n3\\n5\\n6\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10"
    },
    {
        "number": 3564,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == '1400'\nassert solution('''4 2 1\n0 0 600\n2000 0 600\n3000 0 600\n400 0 300\n1300 0 300''') == 'impossible'\nassert solution('''10 10 4\n0 0 600\n1000 0 600\n2000 0 600\n3000 0 600\n4000 0 600\n5000 0 600\n6000 0 600\n7000 0 600\n8000 0 600\n9000 0 600\n10000 0 600''') == '8000'\nassert solution('''30 30 4\n0 0 600\n1000 0 600\n2000 0 600\n3000 0 600\n4000 0 600\n5000 0 600\n6000 0 600\n7000 0 600\n8000 0 600\n9000 0 600\n10000 0 600''') == 'impossible'\nassert solution('''30 30 2\n0 0 600\n1000 0 600\n2000 0 600\n3000 0 600\n4000 0 600\n5000 0 600\n6000 0 600\n7000 0 600\n8000 0 600\n9000 0 600\n10000 0 600''') == '6000'\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input/22.txt\").read()))\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam''') == '3907'\n\nassert solution('''2 2\na\nb\n3\na b\nb c\nc d\n1 2 3''') == '0'\n\nassert solution('''9 9\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\n1 2 3\n1 2 4\n1 2 5\n1 2 6\n1 2 7\n1 2 8\n1 2 9''') == '4940'\n\nassert solution('''8 8\na\nb\nc\nd\ne\nf\ng\nh\ni\n1 2 3\n1 2 4\n1 2 5\n1 2 6\n1 2 7\n1 2 8\n1 2 9''') == '10699'\n\nassert solution('''1 1\na\nb\n3\na b\nb c\nc d\n1 2 3\n1 2 4\n1 2 5\n1 2 6\n1 2 7\n1 2 8\n1 2 9''') == '0'"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\n\nassert solution('''\n1 100\na\nb\n''') == '3'\n\nassert solution('''\n1 100\na\na\nb\n''') == '2'\n\nassert solution('''\n1 100\na\na\na\nb\n''') == '2'\n\nassert solution('''\n2 1\na\nb\n''') == '0'"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam') == '3907'\n\n---"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\") == \"3907\"\nassert solution(\"3 2\\na\\nba\\nb\\nb\\nba\\nb\\nb\\nb\") == \"0\"\nassert solution(\"3 2\\na\\nba\\nb\\nb\\nba\\nb\\nb\\nb\") == \"0\"\nassert solution(\"5 6\\na\\nab\\nabc\\nabc\\nab\\nba\") == \"29\"\nassert solution(\"5 6\\na\\nba\\nbc\\nabc\\nabc\\nab\\nba\") == \"29\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n') == '0'\nassert solution('2 3\\n') == '1'\nassert solution('4 5\\n') == '2'\nassert solution('1 2\\n1 3\\n2 3\\n') == '3'\nassert solution('1 2\\n1 3\\n1 4\\n') == '2'\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\n\nassert solution('''3 10\na\nb\nc\n2 2\na b\nb c\nc a\nb a\nc c\n1 2\na\nb\nc\n''') == '8'\n\nassert solution('''10 12\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nx\ny\nz\n1 2\na b\na c\nd e\nd f\ne f\nf g\nf h\nh i\nh j\ni j\nk l\nk m\nl m\nl o\nm o\nn p\np q\nq r\nq s\nr s\ns t\n''') == '8'\n\nassert solution('''10 15\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nx\ny\nz\n1 2\na b\na c\nd e\nd f\ne f\nf g\nf h\nh i\nh j\ni j\nk l\nk m\nl m\nl o\nm o\nn p\np q\nq r\nq s\nr s\ns t\n''') == '8'\n\nassert solution('''10 10\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nx\ny\nz\n1 2\na b\na c\nd e\nd f\ne f\nf g\nf h\nh i\nh j\ni j\nk l\nk m\nl m\nl o\nm o\nn p\np q\nq r\nq s\nr s\ns t\n''') == '36'"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('1\\n1') == '1'\nassert solution('\\n2\\n1') == '2'\nassert solution('\\n2\\n1\\n2\\n1\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n2\\n1\\n2\\n1\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n-----Notes-----\nThe first line of the input contains the number of cities and railway routes in the map. The next $n$ lines define the names of the $n$ cities. The next $m$ lines define the train route pairs and the cost of the train route pair.\n\nEach city name is at most $20$ characters long and consists solely of lower case letters (\u2019a\u2019-\u2019z\u2019). The next $n$ lines contain the names of two cities and an integer $1 \\le c \\le 10000$, giving the cost of the train route between the two cities.\n\nYou may assume that it is always possible to set up a train line from any city to any other city.\n\nAfter this, there are four lines, each containing the names of two cities, giving the four train line assignments.\n\nIn the last four lines, you will be given the names of two cities, giving the four train line assignments.\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 3565,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\nassert solution('''15 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '25442'\nassert solution('''15 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3892'\nassert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '28222'\nassert solution('''15 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '25342'\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1''') == '2'\nassert solution('''10 10\n7 1 5 3 6 4 8 9 10\n0 5\n0 9\n4 5\n2 1''') == '1'\nassert solution('''10 10\n2 2 4 3 6 4 8 9 10\n0 5\n0 9\n4 5\n2 1''') == '1'\nassert solution('''10 10\n2 2 4 3 6 4 8 9 10\n0 9\n0 9\n4 5\n2 1''') == '0'\nassert solution('''10 10\n2 2 4 3 6 4 8 9 10\n0 5\n0 9\n2 1''') == '2'\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1''') == '2\\n1\\n2\\n1\\n'\nassert solution('''4 3\n1 3 2 4\n0 4\n0 2\n2 1''') == '2\\n1\\n2\\n1\\n'\nassert solution('''5 5\n7 1 7 4 2 3\n4 2\n0 5\n0 9\n4 5\n2 1''') == '2\\n1\\n2\\n1\\n'\nassert solution('''5 4\n1 3 2 4 3\n0 5\n0 9\n4 5\n2 1''') == '1\\n2\\n1\\n2\\n1\\n'\nassert solution('''5 4\n1 3 2 4 3\n0 5\n0 9\n4 5\n2 1''') == '1\\n2\\n1\\n2\\n1\\n'\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"5 3\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"1\\n2\\n1\\n\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == \"\"\"2\n1\n2\n1\n1\n\"\"\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 4') == '1'\nassert solution('5 5') == '2'\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1''') == '2\\n1\\n2\\n1\\n'\nassert solution('''6 1\n2\n2\n3\n1\n2\n0\n3\n2\n2''') == '1\\n2\\n2\\n2\\n1\\n0\\n1\\n2\\n2\\n1\\n0\\n1\\n1\\n'\nassert solution('''4 1\n2\n2\n3\n1\n2\n0\n3\n2\n2''') == '1\\n1\\n1\\n2\\n2\\n2\\n0\\n1\\n1\\n1\\n1\\n1\\n'\nassert solution('''3 1\n1\n1\n2\n0\n1\n2\n2\n2\n2\n''') == '0\\n1\\n1\\n2\\n1\\n2\\n2\\n0\\n2\\n2\\n0\\n1\\n1\\n'\nassert solution('''5 1\n5\n5\n5\n5\n5\n5\n5\n5\n''') == '0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3566,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 10\\n2 3 4 1 1 1 1\\n0 1\\n0 5\\n4 5\\n2 1\\n5\\n2 1\\n5\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n000000\\n000000') == '10100'\nassert solution('2 4\\n0100101\\n1110111\\n1001111\\n0110011\\n1010000\\n00000000') == '00010000'\nassert solution('3 4\\n000000\\n000000\\n000000\\n000000\\n000000\\n000000') == '00000001'\nassert solution('5 4\\n00111000\\n01101111\\n10110110\\n10110111\\n11110100\\n11101101') == '00010010'\nassert solution('4 1\\n000001\\n000001\\n000001\\n000001') == '0000001'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n01001\n11100\n10111''') == '00010'\nassert solution('''4\n01010\n11110\n10110\n00011''') == '11110'\nassert solution('''4\n01010\n11110\n10110\n00011''') == '00011'\nassert solution('''4\n00001\n01100\n11110\n10110\n00011''') == '11110'\nassert solution('''4\n00001\n01100\n11110\n10110\n00011''') == '00011'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('10010001') == '00010'\nassert solution('1110001') == '00011'\nassert solution('1100010101') == '000110001'\nassert solution('1101101111') == '0001010101'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 5\n01001\n11100\n10111''') == '00010'\n'''\n\nfrom itertools import combinations\n\nn, k = map(int, stdin.split())\n\nprint(''.join(str(int(''.join(x)) + int(''.join(y)) + int(''.join(z)) + int(''.join(t))).count('1') % 2 for x, y, z, t in combinations(stdin.strip().split('\\n'), 4)))\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\nassert solution('1 2\\n1 1\\n1 1') == '11111'\nassert solution('1 2\\n1 1\\n0 0\\n1 1') == '00000'\nassert solution('1 3\\n1 1\\n1 0\\n0 1\\n0 0\\n0 1') == '10001'\nassert solution('1 3\\n1 0\\n0 1\\n0 0\\n1 0\\n0 0') == '10111'\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\nassert solution(\"4 4\\n000000\\n000000\\n000000\\n000000\") == \"000000\"\nassert solution(\"3 6\\n000000\\n000000\\n000000\\n000000\\n000000\\n000000\") == \"000000\"\nassert solution(\"3 7\\n000000\\n000000\\n000000\\n000000\\n000000\\n000000\\n000000\") == \"000000\"\nassert solution(\"3 8\\n000000\\n000000\\n000000\\n000000\\n000000\\n000000\\n000000\\n000000\") == \"000000\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n1 0\\n1 1 1') == '01010'\nassert solution('1 2 3\\n0 0\\n0 0\\n0 1\\n0 1 1\\n0 0\\n1 1 1') == '110101'\nassert solution('1 2 3\\n0 0\\n0 0\\n0 0\\n0 1\\n0 0\\n1 1\\n0 1\\n1 1 1') == '01001'\nprint(solution(''))\n\n'''\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 3567,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5\n01001\n11100\n10111''') == '00010'\nassert solution('''3 4\n11100\n10111\n10100\n01100''') == '01100'\n'''\n\nimport sys"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 2\n0 4\n6 12''') == 'possible'\nassert solution('''4 2\n0 1\n2 3\n0 3\n1 6''') == 'possible'\nassert solution('''5 2\n0 1\n1 1\n2 3\n0 3\n1 6''') == 'impossible'\nassert solution('''5 3\n0 1\n1 2\n2 4\n0 4\n1 7''') == 'possible'\nassert solution('''5 3\n0 1\n1 1\n2 3\n0 4\n1 7''') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n6 2\n0 4\n6 12\n''') == 'possible'\nassert solution('''1\n4 2\n0 3\n5 7\n7 10\n''') == 'impossible'\nassert solution('''1\n2 2\n0 1\n0 2\n1 2\n''') == 'possible'\nassert solution('''2\n4 4\n0 1\n0 2\n1 1\n1 2\n2 1\n2 2\n''') == 'impossible'\nassert solution('''1\n1 1\n0 2\n0 2\n''') == 'possible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"possible\"\nassert solution(\"6\") == \"possible\"\nassert solution(\"10\") == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n2\n0 4\n6 12''') == 'possible'\nassert solution('''7\n2\n0 4\n6 12\n0 6\n2 1\n2 3\n5 4\n1 3\n''') == 'impossible'\n'''"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == 'possible'\nassert solution('1') == 'possible'\nassert solution('2') == 'possible'\nassert solution('3') == 'possible'\nassert solution('4') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"impossible\"\n\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"impossible\"\n\nassert solution(stdin) == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"possible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"possible\"\nassert solution(\"5\") == \"impossible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution('') == \"possible\"\nassert solution('3') == \"possible\"\nassert solution('1') == \"possible\"\nassert solution('-100 2') == \"impossible\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\n\nassert solution('''10\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n5 0 1\n-5 0 1\n10 0 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -5 1\n-5 0 1\n5 0 1\n0 -"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1\n-10.0099999000 1.000199999 1.009999999\n0.00000009 0.00000009 1.000000001\n10.00000009 0.00000009 1.000000001''') == '2'\nassert solution(\n'''1\n-10.0099999000 1.000199999 1.009999999\n0.00000009 0.00000009 1.000000001\n10.00000009 0.00000009 1.000000001\n0.00000009 -1.000000001 1.00000009\n0.00000009 -1.00000009 1.00000009\n0.00000009 -1.00000009 -1.00000009\n0.00000009 -1.00000009 -1.00000009\n-1.00000009 -1.00000009 1.00000009\n-1.00000009 -1.00000009 -1.00000009\n-1.00000009 -1.00000009 -1.00000009''') == '4'\nassert solution(\n'''5\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n''') == '6'\nassert solution(\n'''7\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n''') == '4'\nassert solution(\n'''10\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n''') == '3'\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\nassert solution('''4\n5 0 1\n5 0 1\n10 0 1\n0 5 1''') == '3'\nassert solution('''8\n5 0 1\n5 0 1\n10 0 1\n0 5 1\n-5 0 1\n0 -5 1\n-5 0 1\n0 0 1''') == '3'\nassert solution('''6\n5 0 1\n5 0 1\n10 0 1\n0 5 1\n-5 0 1\n-5 0 1''') == '3'\nassert solution('''7\n5 0 1\n5 0 1\n10 0 1\n0 5 1\n-5 0 1\n-5 0 1\n0 0 1''') == '4'\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nassert solution('3\\n1 2 1\\n5 -1 2\\n-2 2 -1') == '1'\nassert solution('1000\\n-10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n-10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n-10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n-10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n-10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n-10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n-10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n-10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n-10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9\\n-10^9 10^9 0 10^9\\n10^9 -10^9 10^9 0 10^9') == '1000'\n\nprint('Done')\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\n\nprint(solution('10\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1'))\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1'''\n    ) == '2'\nassert solution(\n'''5\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0'''\n    ) == '5'\nassert solution(\n'''10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n-10 -10 -10 -10 -10 -"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\nassert solution('''2\n2 0 0\n3 0 0\n0 1 1''') == '1'\nassert solution('''2\n0 0 1\n2 0 0''') == '1'\nassert solution('''3\n1 0 0\n0 -2 0\n-1 0 0''') == '3'\nassert solution('''4\n0 1 0\n-1 1 0\n-2 1 0\n-3 1 0''') == '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n\n---\n\nBergur\u2019s PWA breaks with style so it will end up firing a lot of shots. Unfortunately, he\u2019s stuck in an endless loop of shooting shots and can\u2019t make any progress.\n\nAs he is progressing his classic game, he comes across a new style of attack, the \u201cclassic\u201d game of \u201cDoom.\u201d Its aim is to shoot at the opponents and their neighbourhood, but the game has been modified and the aim is to shoot a new opponent in such a way that the player will be hit if the opponent hit him with a single shot.\n\nThe game follows the classic game style: At any given time the player can choose to shoot at three enemies in the neighbourhood of the player. The player wins if they shoot at the player. The player loses if they shoot at a circle with radius smaller than the player\u2019s radius.\n\nThe player can shoot at four different enemies: each time they shoot at an opponent, they can either hit it or miss it. If they hit the opponent, the opponent\u2019s radius is reduced by 1.\n\nFor example, consider the following opponent structure:\n\n     _   _   _   _   _   _   _\n    |_|_|_|_|_|_|_|_|_|_|_|_|\n\nThe player can shoot at two enemies in the neighbouring area. The first enemy is hit, so its radius is reduced to 0, and the game is over. The second enemy is hit, and its radius is reduced to 1. The player wins the game.\n\nFor the other two enemies, the player loses.\n\nBergur has been given the task of writing a program to determine the maximum number of opponents he can hit with one shot by shooting at the player. Can you help him?\n\nInput\nThe first line of the input contains an integer $1 \\leq n \\leq 10^5$, which denotes the number of opponents Bergur has on the plane. Then $n$ lines follow, the $i$th of which contains three real numbers $-10^9 \\leq x_ i, y_ i \\leq 10^9$ which denote an opponent centered at point $(x_ i, y_ i)$ in the plane with radius $r_ i$. All real numbers will have at most six digits after the decimal point. It is guaranteed that there is a neighbourhood around an optimal angle of radius $10^{-9}$ such that all angles in the neighbourhood give the same number of hit enemies.\n\nOutput\nThe only line of the output should contain the maximum number of opponents Bergur can hit with one shot.\n\nExamples\nSample Input:\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\nSample Output:\n2\nExplanation:\nBergur\u2019s PWA breaks with style so it will end up firing a lot of shots. However, he is stuck in an endless loop of shooting shots and can\u2019t make any progress.\n\nThe player can shoot at two enemies in the neighbouring area. The first enemy is hit, so its radius is reduced to 0, and the game is over. The second enemy is hit, and its radius is reduced to 1. The player wins the game.\n\nFor the other two enemies, the player loses.\n\nBergur has been given the task of writing a program to determine the maximum number of opponents he can hit with one shot by shooting at the player. Can you help him?\n\nInput\nThe first line of the input contains an integer $1 \\leq n \\leq 10^5$, which denotes the number of opponents Bergur has on the plane. Then $n$ lines follow, the $i$th of which contains three real numbers $-10^9 \\leq x_ i, y_ i \\leq 10^9$ which denote an opponent centered at point $(x_ i, y_ i)$ in the plane with radius $r_ i$. All real numbers will have at most six digits after the decimal point. It is guaranteed that there is a neighbourhood around an optimal angle of radius $10^{-9}$ such that all angles in the neighbourhood give the same number of hit enemies.\n\nOutput\nThe only line of the output should contain the maximum number of opponents Bergur can hit with one shot.\n\nExamples\nSample Input:\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\nSample Output:\n2\nExplanation:\nBergur\u2019s PWA breaks with style so it will end up firing a lot of shots. However, he is stuck in an endless loop of shooting shots and can\u2019t make any progress.\n\nThe player can shoot at two enemies in the neighbouring area. The first enemy is hit, so its radius is reduced to 0, and the game is over. The second enemy is hit, and its radius is reduced to 1. The player wins the game.\n\nFor the other two enemies, the player loses.\n\nBergur has been given the task of writing a program to determine the maximum number of opponents Bergur can hit with one shot by shooting at the player. Can you help him?\n\nInput\nThe first line of the input contains an integer $1 \\leq n \\leq 10^5$, which denotes the number of opponents Bergur has on the plane. Then $n$ lines follow, the $i$th of which contains three real numbers $-10^9 \\leq x_ i, y_ i \\leq 10^9$ which denote an opponent centered at point $(x_ i, y_ i)$ in the plane with radius $r_ i$. All real numbers will have at most six digits after the decimal point. It is guaranteed that there is a neighbourhood around an optimal angle of radius $10^{-9}$ such that all angles in the neighbourhood give the same number of hit enemies.\n\nOutput\nThe only line of the output should contain the maximum number of opponents Bergur can hit with one shot.\n\nExamples\nSample Input:\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\nSample Output:\n2\nExplanation:\nBergur\u2019s PWA breaks with style so it will end up firing a lot of shots. However, he is stuck in an endless loop of shooting shots and can\u2019t make any progress.\n\nThe player can shoot at two enemies in the neighbouring area. The first enemy is hit, so its radius is reduced to 0, and the game is over. The second enemy is hit, and its radius is reduced to 1. The player wins the game.\n\nFor the other two enemies, the player loses.\n\nBergur has been given the task of writing a program to determine the maximum number of opponents Bergur can hit with one shot by shooting at the player. Can you help him?\n\nInput\nThe first line of the input contains an integer $1 \\leq n \\leq 10^5$, which"
    },
    {
        "number": 3569,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\"\n) == \"\"\"3 Just A Dream\"\"\"\n\nassert solution(\n\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\"\n) == \"\"\"3 Just A Dream\"\"\"\n\nassert solution(\n\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\"\n) == \"\"\"3 Just A Dream\"\"\"\n\nassert solution(\n\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\"\n) == \"\"\"3 Just A Dream\"\"\"\n\nassert solution(\n\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\"\n) == \"\"\"3 Just A Dream\"\"\""
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == '''Plot Error\n3 Just A Dream\nYes\n'''\n\nprint(solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n'''))\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\nimport sys\nimport os\n\ncurrent_dir = os.path.dirname(os.path.realpath(__file__))\nsys.path.append(current_dir + \"/../\")\n\nfrom Test import Test\nfrom solution import solution"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == 'Plot Error'\nassert solution(\"4\\nE stuff_happens\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == 'Plot Error'\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == 'Plot Error'\nassert solution(\"2\\nE stuff_happens\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == 'Yes'\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == 'Yes'\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == '3 Just A Dream'\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == '3 Just A Dream'\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '3 Just A Dream'\nassert solution('2\\n') == 'Yes'\nassert solution('3\\n') == 'Plot Error'\nassert solution('4\\n') == 'Plot Error'\nassert solution('5\\n') == 'Plot Error'\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"\"\"\n3 Just A Dream\nYes\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == '''Plot Error\n3 Just A Dream\nYes\nPlot Error\n'''\n\nassert solution('''10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == '''Plot Error\n3 Just A Dream\nYes\nPlot Error\n'''\n"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error'\nassert solution('1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n1\\nE business_as_usual\\nE bobby_dies\\nS 1 b"
    },
    {
        "number": 3570,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"1\\n2\") == \"Plot Error\"\nassert solution(\"1\\n2\\n3\") == \"Plot Error\"\nassert solution(\"1\\n2\\n3\\n4\") == \"Plot Error\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"Plot Error\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 3 10\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+\\n|exercitation ullamco    |^\\n|laboris nisi ut aliquip | \\n|ex ea commodo consequat | \\n|Duis aute irure dolor in |v\\n|reprehenderit in        |\\n+------------------------+'\nassert solution('2 5 7 2\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+\\n|exercitation ullamco    |^\\n|laboris nisi ut aliquip | \\n|ex ea commodo consequat | \\n|Duis aute irure dolor in |v\\n|reprehenderit in        |\\n+------------------------+'\nassert solution('2 3 7 3\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+\\n|exercitation ullamco    |^\\n|laboris nisi ut aliquip | \\n|ex ea commodo consequat | \\n|Duis aute irure dolor in |v\\n|reprehenderit in        |\\n+------------------------+'\nassert solution('2 4 5 3\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+\\n|exercitation ullamco    |^\\n|laboris nisi ut aliquip | \\n|ex ea commodo consequat | \\n|Duis aute irure dolor in |v\\n|reprehenderit in        |\\n+------------------------+'\nassert solution('1 2 3\\nSUBTRACT H FROM L GIVING DENOMINATOR. SUBTRACT 3 FROM H. MULTIPLY F BY H GIVING NUMERATOR. DIVIDE NUMERATOR BY DENOMINATOR GIVING"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"euler_12_data\").read()) == \"^vX+\"\n\"\"\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4 7 8') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\nassert solution('6 10 3 4') == '+------------------------+\\n|exercitation ullamco    |^\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\nassert solution('9 7 2 1') == '+------------------------+\\n|exercitation ullamco    |^\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\nassert solution('0 3 4 3') == '+------------------------+\\n|exercitation ullamco    |^\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\nassert solution('10 7 1 1') == '+------------------------+\\n|exercitation ullamco    |^\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in | |\\n|reprehenderit in        |v|\\n+------------------------+-+'\nassert solution('exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in | |\\n|reprehenderit in        |v|\\n+------------------------+-+'\nassert solution('exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in | |\\n|reprehenderit in        |v|\\n+------------------------+-+'\nassert solution('exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in | |\\n|reprehenderit in        |v|\\n+------------------------+-+'\nassert solution('exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in | |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 8 7') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\nassert solution('2 0 1') == '+---------------------+\\n|        |              |\\n|        |              |\\n+---------------------+'\nassert solution('24 5 8 7') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\nassert solution('3 1 2') == '+---------------------+\\n|            |              |\\n|            |              |\\n+---------------------+'\nassert solution('3 1 2') == '+---------------------+\\n|            |              |\\n|            |              |\\n+---------------------+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''24 5 8 7''') == '+------------------------+\\n|exercitation ullamco    ^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+'\nassert solution('''25 19 1 5''') == '+------------------------+\\n|consectetur                |X|\\n|adipisicing                | |\\n|elit                    |v|\\n|tempor incididunt        | |\\n|ut                     |v|\\n|labore                     | |\\n|et dolore                    | |\\n|magna aliqua             |X|\\n|consequat                | |\\n|ullamco laboris         |v|\\n+------------------------+'\nassert solution('''26 19 2 5''') == '+------------------------+\\n|adipisicing                | |\\n|elit                    |v|\\n|tempor incididunt        | |\\n|ut                     |v|\\n|labore                     | |\\n|et dolore                    | |\\n|magna aliqua             |X|\\n|consequat                | |\\n|ullamco laboris         |v|\\n+------------------------+'\nassert solution('''27 19 3 5''') == '+------------------------+\\n|adipisicing                | |\\n|elit                    |v|\\n|tempor incididunt        | |\\n|ut                     |v|\\n|labore                     | |\\n|et dolore                    | |\\n|magna aliqua             |X|\\n|consequat                | |\\n|ullamco laboris         |v|\\n+------------------------+'\nassert solution('''28 19 4 5''') == '+------------------------+\\n|adipisicing                | |\\n|elit                    |v|\\n|tempor incididunt        | |\\n|ut                     |v|\\n|labore                     | |\\n|et dolore                    | |\\n|magna aliqua             |X|\\n|consequat                | |\\n|ullamco laboris         |v|\\n+------------------------+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-'\n\nassert solution('4 4 6 3') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-'\n\nassert solution('18 1 3 1') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-'\n\nassert solution('7 1 3 1') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-'\n\nassert solution('5 4 7 5') == '+------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-'"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n\"\"\") == \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n\n\"\"\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1 1 1 1 1 1 1') == '+----------------------------+\\n|exercitation ullamco laboris |^|\\n|nisi ut aliquip ex ea commodo |X|\\n|consequat duis aute irure dolor in | |\\n|reprehenderit in velit ipsum dolore |v|\\n+----------------------------+'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n') == 'possible'\n\nassert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 0 1 2\\n2 3 1 0\\n1 2 4 3\\n3 1 2 4\\n2 3 4 1\\n3 4 2 0\\n1 2 3 4\\n4 2 3 1\\n') == 'impossible'\n'''\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'possible'\nassert solution(stdin) == 'impossible'\n\nassert solution('4 10') == 'possible'\nassert solution('4 10') == 'impossible'\n\nassert solution('1 10') == 'impossible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0''') == 'possible'\nassert solution('''4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0''') == 'possible'\nassert solution('''4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0''') == 'impossible'\nassert solution('''6 5\n1 2 4\n1 3 5\n1 4 6\n2 4 5\n3 5 4\n3 4 6''') == 'possible'\nassert solution('''6 5\n1 2 4\n1 3 5\n1 4 6\n2 4 5\n3 5 4\n3 4 6\n1 3 2''') == 'impossible'\n'''\n---test---\n100 lines\n...\n...\n...\n'''\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'possible'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == 'possible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('1 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\nassert solution('2 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\nassert solution('3 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\nassert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0''') == 'possible'\nassert solution('''4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0''') == 'impossible'\nassert solution('''4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0''') == 'possible'\nassert solution('''4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0''') == 'possible'\nassert solution('''4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0''') == 'impossible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"possible\"\n\"\"\""
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0\n3\n2\n1\n''') == 'possible'\nassert solution('''0\n2\n1\n3\n''') == 'impossible'\nassert solution('''0\n1\n1\n1\n''') == 'impossible'\nassert solution('''0\n2\n3\n''') == 'impossible'\nassert solution('''2\n1\n1\n2\n1\n''') == 'possible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0''') == 'possible'\nassert solution('''3 1\n0 3 2\n1 3 3''') == 'possible'\nassert solution('''3 2\n0 1 2\n3 0 1 3''') == 'impossible'\nassert solution('''1 1\n0 1 2''') == 'possible'\nassert solution('''3 2\n0 1 2\n0 1 2\n1 3 3''') == 'impossible'\n'''"
    },
    {
        "number": 3572,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 10\\n3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"0 10\\n3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\nassert solution(\"0 10\\n3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"0 10\\n3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\nassert solution(\"0 10\\n1 2 1\\n1 3 2\\n2 1 3\\n3 0 1 3\") == \"possible\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1''') == '1.00000000'\nassert solution('''1\n2\n3''') == '1.00000000'\nassert solution('''2 1 1\n1''') == '1.00000000'\nassert solution('''1\n1\n1''') == '0.500000000'\nassert solution('''1\n1\n2''') == '0.500000000'\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 1 1\n1\n2'''\n) == '1.00000000'\nassert solution(\n'''2 2 2\n1\n2\n2\n2'''\n) == '0.5'\nassert solution(\n'''1 1 1\n2\n1\n2\n1\n2'''\n) == '0.25'\n\nprint('ok')\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1.00000000'\n\nassert solution(stdin) == '0.66666667'\n\nassert solution(stdin) == '0.33333333'\n\nassert solution(stdin) == '0.00000000'\n\nassert solution(stdin) == '0.5'"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1 1''') == '1.00000000'\nassert solution('''2 1 1''') == '1.00000000'\nassert solution('''4 2 2''') == '0.750'\nassert solution('''5 3 3''') == '0.500'\nassert solution('''4 3 3''') == '0.250'\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == \"1.0\"\nassert solution(\"2 1 2\") == \"0.5\"\nassert solution(\"5 2 1\") == \"0.2\"\nassert solution(\"5 2 4\") == \"0.125\"\nassert solution(\"5 2 10\") == \"0.05\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == \"1.00000000\"\nassert solution(\"1\\n2\\n2\") == \"1.00000000\"\nassert solution(\"2 2 2\") == \"0.500000000\"\nassert solution(\"1\\n1\\n1\") == \"0.500000000\"\nassert solution(\"1 1 1\") == \"0.500000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 1 1\\n1\\n2\"\n) == '1.00000000'\nassert solution(\n    \"2 4 10\\n2\\n2\\n2\\n2\"\n) == '0.788'\nassert solution(\n    \"2 4 10\\n2\\n2\\n2\\n2\"\n) == '0.788'\nassert solution(\n    \"4 5 10\\n2\\n2\\n2\\n2\"\n) == '0.57'\nassert solution(\n    \"4 5 10\\n2\\n2\\n2\\n2\"\n) == '0.57'\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1.00000000\"\n\n\"\"\"\n\nN, D, C = map(int, stdin.split())\nCesar = stdin.split()\nRaul = stdin.split()\nn = sum(range(1, D+1))\nt = D - (C-1)\ns = n + t - D\nu = D - C\nl = C\ns += l/2\ns += u/2\ns += u/2\n\nprint(s/n)\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1 1\n1''') == '1.00000000'\nassert solution('''2 1 1\n2''') == '0.500000000'\nassert solution('''4 1 2\n1\n2\n3\n4''') == '0.2500000000'\nassert solution('''3 2 3\n1\n2\n3''') == '0.16666666667'\nassert solution('''5 2 4\n1\n2\n3\n4\n5''') == '0.0625'\n"
    },
    {
        "number": 3573,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1.00000000'\n\n-----Solution Summary-----\nSince each player picks $D$ balls, it is expected that the number of rounds will be $D$-1. We do not need to consider $D$ rounds as the game finishes when a player has all the numbers he picked.\n\nFor example, if the player picked 1 3 5 4, the game will finish as soon as the remaining number of balls is not enough for a win.\n\nThere are two solutions to the problem, the first is the naive solution. Since each player picks a different number in each round, it is expected that the number of rounds will be $D$-1. In each round, the game stops when a player has marked all the numbers he chose.\n\nThe second solution is the improved solution. In the improved solution, the game finishes when the number of balls remaining is even. The even number of balls indicates that the game is a draw.\n\n-----Detailed Explanation-----\n\nFor the first example, $D$ is 2 and $C$ is 3. Then there are $N-C$ balls in the box and $N-C$ balls have been drawn so far.\n\nIn the improved solution, $D$ is 2 and $C$ is 3.\n\nIn the improved solution, each player will win $D$ balls in each round.\n\nThere is a draw in each round.\n\nThere is a draw in each round.\n\nFinally, since $D$ is 2, the number of rounds will be 2.\n\nIt is not a draw, since there is no number that is repeated twice.\n\nThe second example, is the improved solution for the second example.\n\nIn the improved solution, $D$ is 2 and $C$ is 3.\n\nIn the improved solution, each player will win $D$ balls in each round.\n\nThere is a draw in each round.\n\nThere is a draw in each round.\n\nFinally, since $D$ is 2, the number of rounds will be 2.\n\nIt is a draw, since there is no number that is repeated twice.\n\"\"\"\n\n\"\"\"\n  @author: smv\n  @date: 17/05/2016\n\"\"\"\n\nfrom fractions import Fraction"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 4 3 3 2''') == '2'\nassert solution('''5\n5 4 3 3 2''') == '1'\nassert solution('''5\n5 4 3 3 2''') == '3'\nassert solution('''5\n5 4 3 3 2''') == '2'\nassert solution('''5\n5 4 3 3 2''') == '1'\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2 1\\n2\\n1 1\\n') == '2\\n'\nassert solution('3\\n3 4 3\\n2 2 3\\n3 1\\n') == '2\\n'\nassert solution('10\\n10 9 8 7 6 5 4 3 2 1\\n5\\n1 1 1 1 1 1 1 1 1 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n2 1\\n2\\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint('Passed!')"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(f\"Largest magical sub-array for {input()} numbers of length {input()}: {solution(input())}\")\n\"\"\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('3\\n3') == '3'\nassert solution('2\\n1\\n1') == '1'\n"
    },
    {
        "number": 3574,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n5\\n3\\n3\\n2\\n') == '1\\n1\\n1\\n1\\n1'\nassert solution('1\\n5\\n3\\n3\\n2\\n') == '2\\n1\\n3\\n3\\n2'\nassert solution('1\\n3\\n1\\n2\\n4\\n') == '1\\n1\\n1\\n1\\n1'\nassert solution('1\\n3\\n1\\n2\\n4\\n') == '1\\n1\\n1\\n1\\n1'\nassert solution('1\\n5\\n3\\n3\\n2\\n') == '2\\n1\\n3\\n3\\n2'\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''0 1\n1 2\n0 2''') == '1'\nassert solution(\n'''0 1\n1 2\n1 3\n0 3''') == 'never meet'\nassert solution(\n'''0 1\n2 1\n0 2''') == '2'\nassert solution(\n'''0 1\n2 3\n0 3''') == '2'\nassert solution(\n'''0 1\n1 2\n2 0\n1 3''') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 1\n1 2\n0 2''') == '1'\nassert solution('''0 1\n1 2\n1 3\n2 3''') == '1'\nassert solution('''0 1\n0 2\n1 2''') == 'never meet'\nassert solution('''0 1\n1 2\n0 2\n0 3\n1 3\n2 3''') == '1'\nassert solution('''0 1\n1 2\n1 3\n2 3\n0 1''') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n0 1\n1 2\n0 2''') == '1'\nassert solution('''3 3\n0 1\n0 2\n2 1\n2 3\n1 0''') == 'never meet'\nassert solution('''3 3\n0 1\n0 2\n2 1\n2 3\n2 0''') == '2'\nassert solution('''3 3\n1 0\n1 2\n2 0\n2 3\n3 2\n2 3\n3 1''') == '2'\nassert solution('''3 4\n0 1\n1 2\n0 2\n1 3\n1 0\n0 1\n2 3\n1 1\n3 3\n2 2\n2 3''') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n0 1\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n1 3\\n2 3\") == \"3\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n0 1\") == \"never meet\"\n\"\"\""
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"3 2\n0 1\n1 2\n0 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"4 3\n0 1\n0 2\n0 3\n1 2\n1 3\n2 3\n\"\"\") == \"never meet\"\n\nassert solution(\n\"\"\"4 3\n0 1\n0 2\n0 3\n1 2\n2 3\n2 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == '1'\n\"\"\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n0 1\\n1 2\\n0 2\\n') == '1'\nassert solution('3 4\\n0 1\\n1 2\\n2 0') == '1'\nassert solution('5 2\\n0 1\\n0 2\\n0 3\\n2 1\\n1 3\\n3 0\\n') == '3'\nassert solution('3 3\\n0 1\\n1 2\\n2 0\\n0 3\\n1 2\\n2 3\\n') == '1'\nassert solution('5 4\\n0 1\\n0 2\\n0 3\\n0 4\\n1 2\\n2 3\\n3 4\\n') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 1\n\nstdin = '''4 3\n0 1\n1 2\n0 2\n1 3\n2 3\n'''\nassert solution(stdin) == 1\n\nstdin = '''7 4\n0 1\n1 2\n0 3\n1 4\n2 3\n2 4\n3 4\n4 5\n5 6\n'''\nassert solution(stdin) == 1.5\n\nstdin = '''4 3\n0 1\n1 2\n0 2\n'''\nassert solution(stdin) == 'never meet'\n\nstdin = '''4 5\n0 1\n1 2\n0 2\n1 3\n1 4\n2 3\n2 4\n2 5\n'''\nassert solution(stdin) == 2\n\nstdin = '''9 6\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n'''\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\n'''\n"
    },
    {
        "number": 3575,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n0 1\n1 2\n0 2\n3 1''') == '1'\nassert solution('''3 2\n0 1\n1 2\n0 2\n3 1\n0 1\n1 2\n0 2''') == 'never meet'\n'''"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '14500000001'\n'''\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4 2''') == '14500000001'\n'''\n5 4 2\n10 5 2\n10 4 2\n5 4 2\n1 1 2\n1 2 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '5 4 2'\n) == '14500000001'\n'''\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\n\"\"\"\n\nfrom fractions import Fraction\n\nr, c, k = [int(x) for x in stdin.split()]\nprint(Fraction(r * c * k + 1, (r + c) * (r + c) + 3) * 10**11)\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"14500000001\"\n\nprint('Testing the solution...')\nassert solution('3 5 2') == '14500000001'\nprint('Passed')\n\"\"\"\n\nfrom fractions import Fraction\n\nR, C, K = map(int, input().split())"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4 2') == '14500000001'\nassert solution('4 4 2') == '4'\nassert solution('3 2 2') == '4'\nassert solution('7 7 2') == '9'\nassert solution('20 3 3') == '3'\n\"\"\""
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 4 2\") == \"14500000001\"\nassert solution(\"1000000 1 1000000\") == \"1462514\"\nassert solution(\"1000000 1 1000000\") == \"1462514\"\nassert solution(\"2 1000000 2\") == \"2\"\nassert solution(\"2 1000000 2\") == \"2\"\n\n\"\"\"\n\nfrom fractions import gcd\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4 2') == '14500000001'\nassert solution('0 0 0') == '0'\nassert solution('1000000000 100000000 1000000000') == '1000000000'\nassert solution('3 5 4') == '38580'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4 2''') == '14500000001'\nassert solution('''100 10 100''') == '13539951'\nassert solution('''1 1 1''') == '0'\nassert solution('''10 10 100''') == '36'\nassert solution('''1 10 1''') == '0'\n"
    },
    {
        "number": 3576,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4 2') == '14500000001'\nassert solution('5 4 3') == '12345000000'\nassert solution('5 4 4') == '1234567890123'\nassert solution('5 4 5') == '12345678901234'\nassert solution('5 4 6') == '123456789012345'\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n4\n3 7\n1 6\n2 6''') == '0\\n1\\n1\\n2\\n'\nassert solution('''2\n1 4\n3 7\n1 6\n2 6''') == '0\\n1\\n1\\n2\\n'\nassert solution('''5\n1 4\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1 474\n1 475\n1 476\n1 477\n1 478\n1 479\n1 480\n1 481\n1 482\n1 483\n1 484\n1 485\n1 486\n1 487\n1 488\n1 489\n1 490\n1 491\n1 492\n1 493\n1 494\n1 495\n1 496\n1 497\n1 498\n1 499\n1 500\n1 501\n1 502\n1 503\n1 504\n1 505\n1 506\n1 507\n1 508\n1 509\n1 510\n1 511\n1 512\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\"\nassert solution(\"2\\n1 1\\n2 1\") == \"0\\n1\"\nassert solution(\"1\\n1 1\\n1 1\") == \"0\\n0\"\nassert solution(\"2\\n1 1\\n2 1\") == \"1\\n1\"\nassert solution(\"1\\n2 1\\n2 1\") == \"1\\n0\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 4\n3 7\n1 6\n2 6''') == '0\\n1\\n1\\n2'\nassert solution('''2\n1 1\n1 1\n1 1\n1 1''') == '0\\n0'\nassert solution('''10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '2\\n6\\n12\\n24\\n36\\n48\\n60\\n72\\n84\\n96\\n108\\n120\\n132\\n144\\n156\\n168\\n180\\n192\\n204\\n216\\n228\\n240\\n252\\n264\\n276\\n288\\n300\\n312\\n324\\n336\\n348\\n360\\n372\\n384\\n396\\n408\\n420\\n432\\n444\\n456\\n468\\n480\\n492\\n504\\n516\\n528\\n540\\n552\\n564\\n576\\n588\\n600\\n612\\n624\\n636\\n648\\n660\\n672\\n684\\n696\\n708\\n720\\n732\\n744\\n756\\n768\\n780\\n792\\n804\\n816\\n828\\n840\\n852\\n864\\n876\\n888\\n900\\n912\\n924\\n936\\n948\\n960\\n972\\n984\\n996\\n998''')\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 4\n3 7\n1 6\n2 6''') == '0\\n1\\n1\\n2'\nassert solution('''5\n1 4\n2 3\n3 4\n4 5\n5 6''') == '0\\n1\\n1\\n2\\n2'\nassert solution('''5\n1 4\n2 3\n3 4\n4 5\n4 3''') == '0\\n0\\n0\\n1\\n1'\nassert solution('''3\n1 4\n2 3\n3 4''') == '0\\n0\\n0'\nassert solution('''7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '0\\n0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 4\n3 7\n1 6\n2 6''') == '0\\n1\\n1\\n2'\n'''\n\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0\\n1\\n1\\n1'\nassert solution('2\\n2\\n2\\n2') == '0\\n0\\n0\\n0'\nassert solution('5\\n2\\n2\\n3\\n3') == '0\\n0\\n1\\n0\\n0'\nassert solution('3\\n3\\n2\\n2') == '0\\n0\\n0\\n0'\nassert solution('3\\n3\\n2\\n2\\n2') == '0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'\nassert solution('1\\n4\\n3 7\\n1 6\\n2 6\\n1 1') == '0\\n1\\n1\\n2\\n1'\nassert solution('1\\n4\\n3 7\\n1 6\\n2 6\\n1 1\\n1 1') == '0\\n1\\n1\\n2\\n1\\n1'\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2\\n') == '0\\n1\\n1\\n2\\n2'\nassert solution('1\\n1\\n1\\n') == '0\\n0\\n0'\nassert solution('2\\n2\\n') == '0\\n1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == '0\\n0\\n0\\n0\\n0'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n') == '0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3577,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\"\nassert solution(\"3\\n1 4\\n2 5\\n2 7\") == \"2\\n0\\n1\\n1\"\nassert solution(\"4\\n1 2\\n2 2\\n3 3\") == \"0\\n1\\n1\\n2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n0\\n0\\n1\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n0\\n0\\n1\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n2 4 500\n4 1 400\n4 2 400\n''') == '8000'\nassert solution('''1\n2\n''') == '0'\nassert solution('''1\n2\n2\n3\n2\n''') == '200'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '1000'\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n3\n1 4 300\n3 5 300\n4\n1 4 300\n3 5 300\n5\n1 4 300\n3 5 300\n''') == '320'\nassert solution('''4 2\n1 1 0\n1 2 4\n1 3 2\n1 4 4\n2\n1 1 1\n2 1 1\n3 1 1\n4 1 1\n''') == '24'\nassert solution('''3 2\n1 1 0\n1 2 4\n1 3 2\n1 4 4\n1\n2 1 1\n3 1 1\n4 1 1\n''') == '8'\nassert solution('''4 2\n1 1 0\n1 2 4\n1 3 2\n1 4 4\n1\n1 1 1\n1 1 1\n2 1 1\n3 1 1\n4 1 1\n''') == '8'\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '3100'\n\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 3 700\n1 4 1000\n1 5 700\nSample Output:\n4700\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 1000\n1 5 1000\n1\n2 3 700\n1 4 1000\n1 5 700\nSample Output:\n4700\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 3 700\n1 4 1000\n1 5 700\nSample Output:\n4700\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 3 700\n1 5 700\n1\n2 3 700\n1 4 1000\n1 5 1000\nSample Output:\n4700\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n1\\n1 4 300\\n3 5 300') == '3100'\nassert solution('2 2\\n1 2 10\\n2 1 10\\n1 2 10\\n2 1 10') == '30'\nassert solution('7 1\\n1 1 1\\n2 1 2\\n3 1 3\\n4 1 4\\n5 1 5\\n6 1 6') == '0'\nassert solution('1 1\\n1 2 2\\n1 3 3\\n1 4 4\\n1 5 5\\n1 6 6') == '6'\nassert solution('10 1\\n1 1 1\\n2 1 2\\n3 1 3\\n4 1 4\\n5 1 5\\n6 1 6\\n7 1 7\\n8 1 8\\n9 1 9\\n10 1 10') == '98'\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\") == \"3100\"\n\nassert solution(\"3 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\") == \"3000\"\n\nassert solution(\"3 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\") == \"3350\"\n\nassert solution(\"3 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\") == \"3350\"\n\nassert solution(\"3 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\") == \"3350\""
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"3 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n\"\"\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n2 2 300\n3 5 300\n''') == '2000'\n\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n2 2 300\n3 3 600\n''') == '1700'\n\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 3 600\n2 4 500\n''') == '2100'\n\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 3 600\n2 4 500\n1 2 600\n''') == '2000'"
    },
    {
        "number": 3578,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''5 4\n1 2 1000\n1 4 300\n4 5 500\n1\n1 2 1000\n1 3 1000\n3 4 1000\n2\n2 3 1000\n2 4 300\n2 5 500\n''') == '6400'\nassert solution('''6 4\n1 2 1000\n1 3 1000\n1 4 1500\n2 4 500\n1 4 500\n3 4 700\n1\n1 4 700\n1 5 1000\n3 4 1000\n4 5 2000\n''') == '6200'\nassert solution('''6 5\n1 2 1000\n1 3 1000\n1 4 1500\n2 4 500\n1 4 500\n3 4 700\n1\n1 4 700\n1 5 1000\n3 4 1000\n4 5 2000\n''') == '6400'\nassert solution('''6 4\n1 2 1000\n1 3 1000\n1 4 1500\n2 4 500\n1 4 500\n3 4 700\n1\n1 4 700\n1 5 1000\n3 4 1000\n4 5 2000\n''') == '6200'\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1 8') == '5.25'\nassert solution('2 2\\n1 8\\n6 5\\n2 5') == '5.25'\nassert solution('3 3\\n1 8\\n6 5\\n2 5\\n2 9') == '5.25'\nassert solution('4 4\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.25'\nassert solution('3 3\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n0') == '5.25'\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5.25\"\n\n-----\n\nstdin\n\n4 2\n1 8\n6 5\n2 5\n2 9\n7 13\n\n-----\n\nstdout\n\n5.25\n\n\"\"\"\n\n\"\"\"\nRUN SAMPLE\n\n$ python3 median_of_all_densities_naive.py < input_samples/sample_median_of_all_densities_naive_small.txt\n5.25\n\n$ python3 median_of_all_densities_naive.py < input_samples/sample_median_of_all_densities_naive_large.txt\n5.25\n\n\"\"\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000'\nassert solution('1 1\\n1 1') == '1'\nassert solution('2 4\\n1 2\\n2 3\\n3 4\\n4 5') == '0'\nassert solution('2 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '2'\nassert solution('2 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '2'\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.25'\nassert solution('5 4\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.25'\nassert solution('4 4\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.25'\nassert solution('1 1\\n1 1') == '1.0'\nassert solution('2 2\\n1 1') == '2.0'\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5.25\"\n'''\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 8\n6 5\n2 5\n2 9\n7 13''') == '5.25'\nassert solution('''1 1\n1 1\n1 1\n1 1''') == '0'\nassert solution('''2 2\n1 8\n6 5\n2 5\n2 9\n7 13''') == '5.25'\nassert solution('''1 1\n1 1\n1 1\n1 1''') == '0'\nassert solution('''2 2\n1 8\n6 5\n2 5\n2 9\n7 13\n3 4\n4 5\n5 6''') == '5.25'\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_out\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 8\n6 5\n2 5''') == '5.25'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1''') == '0'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"5.250000000\"\nassert solution(\"1 8\") == \"1.250000000\"\nassert solution(\"6 5\") == \"5.81818182\"\nassert solution(\"2 5\") == \"3.75\"\nassert solution(\"2 9\") == \"6.28571429\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '5.25'\nassert solution('5 4') == '5.5'\nassert solution('1 2 9') == '10.0'\nassert solution('1 4 9') == '10.0'\nassert solution('6 5') == '5.0'\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7'\nassert solution('''\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '0'\nassert solution('''\n3\n1 3 1 2\n1 2 1 2\n2 2 2 3\n''') == '2'\nassert solution('''\n3\n1 3 1 2\n1 2 1 2\n2 2 2 3\n''') == '2'\nassert solution('''\n6\n1 2 3 4 1 2 1\n3\n2 2 1 1\n2 2 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '5'\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n>>> import os\n>>> import ast\n>>> import json\n>>> import tempfile\n>>> test_file = os.path.join(tempfile.gettempdir(), __file__)\n>>> with open(test_file, 'w') as f:\n...     f.write(stdin)\n>>> with open(test_file) as f:\n...     input = f.read()\n...     expected = ast.literal_eval(input)\n>>> input = json.loads(input)\n>>> actual = solution(input)\n>>> assert actual == expected"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n2\\n3\\n3\\n2\\n2\\n2\\n2\\n2\\n3\\n1\\n3\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n3\\n1\\n3\\n2\\n2\\n2\\n3\\n3\\n2\\n2\\n2\\n3\\n3\\n2\\n2\\n2\\n2\\n3\\n1\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n2\\n3\\n2\\n3\\n3\\n3\\n2\\n3\\n2\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n2\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n2\\n3\\n3\\n3\\n2\\n3\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n2\\n3\\n2\\n2\\n2\\n3\\n3\\n3\\n2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\nassert solution('''3\n2\n1 2\n2\n1\n2\n''') == '0\\n1\\n1'\nassert solution('''5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '5\\n5\\n5\\n5\\n5'\nassert solution('''5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '0\\n0\\n0\\n0\\n0'\nassert solution('''3\n2\n1 2\n2\n1\n2\n''') == '0\\n1\\n1'\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7'\nassert solution('''2\n1 2\n2 3\n2 3\n1 1\n1 2\n1 3\n''') == '2'\nassert solution('''7\n2 3 1 2 1 2 1\n1 3 1 2 3\n2 1 2 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7'\nassert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7'\nassert solution('''2\n1 2\n2 3\n2 3\n1 1\n1 2\n1 3\n''') == '2'\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 3 1 2 1 1''') == '1 2 3'\nassert solution('''1 2 3 1 2 1 1''') == '1 2 3'\nassert solution('''3\n3 2 3 1 1 2 1 1''') == '3'\nassert solution('''3\n3 2 3 1 1 2 1 1''') == '3'\nassert solution('''6\n1 2 3 1 2 1 1''') == '3'\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\nassert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\nassert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\nassert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\nassert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 1 2 1 1\") == \"2\"\nassert solution(\"1 2 3 1 2 1 1\") == \"2\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1 2 3 1 2 1 1\") == \"2\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7'\n\nassert solution('''1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '2'\n\nassert solution('''1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '2'\n\nassert solution('''1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '2'\n\nassert solution('''1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '2'"
    },
    {
        "number": 3580,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n7\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n7\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n7\\n') == '7\\n2\\n2\\n0\\n4\\n'\nassert solution('1\\n7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n7\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n7\\n') == '7\\n2\\n2\\n0\\n4\\n'\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"1.0\"\nassert solution(\"2\") == \"0.5\"\nassert solution(\"3\") == \"0.333333333\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '32.6405451448'\nprint(\"PASSED\")\n\"\"\""
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nassert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '28.9389829114'\nassert solution('''5\n2 2 2 3 3 3\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n''') == '27.9993466337'\nassert solution('''5\n3 3 3 3 3 3\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0\n''') == '26.5025842814'\nassert solution('''6\n3 3 3 3 3 3 3\n0.0 0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0 0.0 0.0\n''') == '25.6641198466'\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '32.6405451448'\nprint(solution(input()))\n\"\"\"\n\n\"\"\"\nWe can assume that after the ball has bounced $b$ times, the probability that it has not fallen into a hole is at most (1 - 10^-3)^(\\lfloor b/H \\rfloor ).\nWe can also assume that the probability that the ball does not enter a hole is 0.\nWe can ignore the probability that the ball falls into a hole because we know that it is always at most (1 - 10^-3)^(\\lfloor b/H \\rfloor ).\nWe know the number of times the ball has fallen into a hole and that the probability of this happening is (1 - 10^-3)^(\\lfloor b/H \\rfloor ).\n\"\"\"\n\nfrom sys import stdin\nfrom math import exp, log\nfrom random import random"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n\nassert solution('''6\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.2 0.2 0.2 0.2 0.2\n0.0 0.0 0.0 0.0 0.0\n0.2 0.2 0.2 0.2 0.2\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0.3 0.3 0.3\n0.0 0.0 0.0 0.0 0.0\n0.3 0.3 0."
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n    4\n    40 30 30 40 20 40 50 30 30 50\n    0.0 0.0 0.45 0.45 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.2 0.2 0.2 0.2 0.2\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.8 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nassert solution('''\n    6\n    40 40 40 40 40 40 40 40\n    0.0 0.0 0.0 0.0 0.0\n    0.0 0.3 0.3 0.3 0.3\n    0.3 0.0 0.3 0.0 0.3\n    0.0 0.3 0.3 0.3 0.3\n    0.3 0.0 0.3 0.0 0.3\n    0.0 0.3 0.3 0.3 0.3\n''') == '73.2980221353'\nassert solution('''\n    7\n    45 57 48 95 51 70 65 82\n    0.0 0.0 0.0 0.0 0.0\n    0.0 0.3 0.3 0.3 0.3\n    0.3 0.0 0.3 0.0 0.3\n    0.0 0.3 0.3 0.3 0.3\n    0.3 0.0 0.3 0.0 0.3\n    0.0 0.3 0.3 0.3 0.3\n    0.0 0.3 0.3 0.3 0.3\n''') == '108.3588222376'\nassert solution('''\n    5\n    40 40 40 40 40 40 40\n    0.0 0.0 0.0 0.0 0.0\n    0.0 0.3 0.3 0.3 0.3\n    0.3 0.0 0.3 0.0 0.3\n    0.0 0.3 0.3 0.3 0.3\n    0.3 0.0 0.3 0.0 0.3\n''') == '108.3588222376'\nassert solution('''\n    6\n    50 30 25 40 30 30 25\n    0.0 0.0 0.0 0.0 0.0\n    0.0 0.3 0.3 0.3 0.3\n    0.3 0.0 0.3 0.0 0.3\n    0.0 0.3 0.3 0.3 0.3\n    0.3 0.0 0.3 0.0 0.3\n    0.0 0.3 0.3 0.3 0.3\n''') == '114.287992658'\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n    4\n    40 30 30 40 20 40 50 30 30 50\n    0.0 0.0 0.45 0.45 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.2 0.2 0.2 0.2 0.2\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.8 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nassert solution('''\n    4\n    40 30 30 40 20 40 50 30 30 50\n    0.0 0.0 0.45 0.45 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.2 0.2 0.2 0.2 0.2\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.8 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nassert solution('''\n    4\n    30 30 30 30 30 30 30 30 30 30\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n''') == '0.0'\nassert solution('''\n    5\n    10 10 10 10 10 10 10 10\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n''') == '0.0'\nassert solution('''\n    5\n    10 10 10 10 10 10 10 10\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n    0.0 0.0 0.0 0.0 0.0 0.0\n''') == '0.0'\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0.45 0.45 0.1') == '0.5'\nassert solution('0.3 0.3 0.1') == '0.333333333333333333333333333333333333333333333333333333'\nassert solution('0.3 0.3 0.1') == '0.333333333333333333333333333333333333333333333333333333'\nassert solution('0.3 0.3 0.1') == '0.333333333333333333333333333333333333333333333333333333'\nassert solution('0.3 0.3 0.1') == '0.333333333333333333333333333333333333333333333333333333'\n"
    },
    {
        "number": 3581,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2''') == '32.6405451448'\nassert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2''') == '-2.101343994038514'\nassert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2''') == '-2.101343994038514'\nassert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2''') == '-2.101343994038514'\nassert solution('''8\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2''') == '-3.2248699598381544'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n'''\n\n'''\nReference: https://www.hackerrank.com/challenges/gagglers\n'''"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '2 3 4 1'\nassert solution('''\n10\n10 7 12 1 4 8 9 1\n''') == '9 1 10 3 7 8 2'\nassert solution('''\n10\n1 4 3 2 5 6 7 8 9 10\n''') == '9 1 10 3 2 5 6 7 8'\nassert solution('''\n10\n1 4 3 2 5 6 7 8 9 10\n''') == '9 1 10 3 2 5 6 7 8'\nassert solution('''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\nstdin = '''3\n1 2 3\n2 3 2'''\n\nassert solution(stdin) == stdin\n\nstdin = '''5\n2 4 1 1 3\n4 4 4 3 2'''\n\nassert solution(stdin) == stdin\n\nstdin = '''5\n1 2 3 4 5\n5 1 4 2 3'''\n\nassert solution(stdin) == stdin\n\nstdin = '''10\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1'''\n\nassert solution(stdin) == stdin\n\nstdin = '''20\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2\n3 4\n''') == '2 3 4 1'\nassert solution('''3\n1 2\n2 3\n3 4\n''') == '3 4 2 1'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n''') == '4 3 2 5 1'\nassert solution('''10\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'\nassert solution('''10\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n''') == '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 1 4 3\n''') == '2 3 4 1'\nassert solution('''4\n1 3 2 4\n''') == '1 2 3 4'\nassert solution('''6\n1 2 3 4 5 6\n''') == '1 3 4 2 5 6'\nassert solution('''5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''8\n1 2 2 4 3 3 3 4 4\n''') == '1 2 3 4 2 3 3 4'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n2 1 4 3') == '2 3 4 1'\nassert solution('4\\n2 1 4 3\\n2 1 4 3\\n2 1 4 3\\n2 1 4 3') == '2 3 4 1'\nassert solution('3\\n1 1 1\\n1 1 1\\n1 1 1') == '1 1 1'\nassert solution('4\\n2 1 4 3\\n2 1 4 3\\n2 1 4 3\\n2 1 4 3') == '2 3 4 1'\nassert solution('4\\n2 1 4 3\\n2 1 4 3\\n2 1 4 3\\n2 1 4 3') == '2 3 4 1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '2 3 4 1'\n\nassert solution('''\n4\n2 2 1 1\n''') == '2 3 1 2'\n\nassert solution('''\n6\n6 6 6 1 6 2\n''') == '6 1 6 2 6 3'\n\nassert solution('''\n7\n1 1 1 1 1 1 1\n''') == '1 1 1 1 2 1'\n\nassert solution('''\n6\n2 2 2 2 2 2\n''') == '2 1 1 2 1 1'"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4\n2 1 4 3\n\"\"\") == \"\"\"\n2 3 4 1\n\"\"\"\nassert solution(\n\"\"\"\n2\n1 4 3\n\"\"\") == \"\"\"\n2 3 4 1\n\"\"\"\nassert solution(\n\"\"\"\n4\n2 1 4 3\n\"\"\") == \"\"\"\n2 3 4 1\n\"\"\"\nassert solution(\n\"\"\"\n5\n5 1 4 3 2\n\"\"\") == \"\"\"\n2 3 4 1\n\"\"\"\nassert solution(\n\"\"\"\n6\n6 1 4 3 2 5\n\"\"\") == \"\"\"\n2 3 4 1\n\"\"\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n1 4 3\n''') == '2 3 4 1'\n\nassert solution('''3\n1 2 1\n2 3 2\n1 3 3\n''') == '2 3 4 1'\n\nassert solution('''1000\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n''') == '1 2 3 4 1'\n\nassert solution('''1000\n11 11 11 12 13 13 14 15 15 16 16 17 17 18 18 19 19 19 20 20 21 21 22 22 22 23 24 24 25 25 26 26 27 27 28 28 29 29 29 30 30 31 31 32 33 34 35 35 36 36 37 38 39 39 39 40 40 41 41 42 43 44 45 45 46 47 48 49 50 50 51 52 53 54 55 56 57 58 59 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255\n''') == '1 2 3 4 1'\n\nassert solution('''1000\n111 111 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255\n''') == '1 2 3 4 1'"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    6\n    1 2\n    1 3\n    2 4\n    3 3\n    3 2\n    2 1\n    \"\"\"\n    ) == \"7.656854249492381\"\n\nassert solution(\n    \"\"\"\n    8\n    1 2\n    1 3\n    2 4\n    3 3\n    3 2\n    2 1\n    3 4\n    4 3\n    \"\"\"\n    ) == \"7.577708342516093\"\n\nassert solution(\n    \"\"\"\n    10\n    1 2\n    1 3\n    2 4\n    3 3\n    3 2\n    2 1\n    3 4\n    4 3\n    3 5\n    5 4\n    \"\"\"\n    ) == \"5.82274644929\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('2\\n1 1\\n1 2\\n2 1\\n1 1') == '1'\nassert solution('2\\n1 1\\n1 2\\n2 1') == '1'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\"\"\"\n    ) == '7.656854249492381'\n\nassert solution(\n\"\"\"5\n1 1\n1 3\n2 2\n1 1\n1 1\"\"\"\n    ) == '3.41'\n\nassert solution(\n\"\"\"6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\"\"\"\n    ) == '7.656854249492381'\n\nassert solution(\n\"\"\"15\n5 4\n1 2\n2 3\n3 4\n4 5\n1 5\n2 4\n3 2\n4 5\n1 3\n2 3\n3 1\n2 1\n1 1\"\"\"\n    ) == '9.0'\n\nassert solution(\n\"\"\"10\n3 1\n1 2\n1 3\n2 4\n2 5\n2 6\n2 7\n3 8\n3 9\n4 9\n1 7\n1 6\n1 5\n1 4\n1 3\n1 2\"\"\"\n    ) == '10.0'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"3\\n1 2\\n1 3\\n2 4\\n3 3\") == \"7.656854249492381\"\nassert solution(\"2\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\n\n\"\"\"\n\n\"\"\"\nANSWER:\n    def solution(stdin: str) -> str:\n        pass\n\nassert solution(\"2\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"3\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381'\nassert solution('5\\n1 5 10\\n1 2 1\\n1 3 3\\n2 1 1\\n2 4 4\\n3 1 3\\n3 3 2\\n4 1 1\\n4 4 4') == '8.906172857545414'\nassert solution('100\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\n-4 6\\"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\nassert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n1 1\n''') == '7.656854249492381'\nassert solution('''\n6\n1 2\n2 1\n1 2\n3 4\n2 3\n3 1\n''') == '7.656854249492381'\nassert solution('''\n6\n1 2\n2 1\n1 1\n2 1\n3 1\n3 2\n''') == '7.656854249492381'\nassert solution('''\n1\n2\n3\n4\n5\n6\n''') == '6'\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 2\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nprint(solution(input()))\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 2 1 3\") == \"4\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1 2\") == \"1.0\"\nassert solution(\"2\\n1 3\") == \"1.1666666666666665\"\nassert solution(\"3\\n1 2\\n2 3\") == \"1.4142135623730951\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"1.5\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"7.656854249492381\"\nassert solution(\"2\\n1 2\\n2 3\\n1 3\") == \"7.656854249492381\"\nassert solution(\"3\\n1 2 3\\n1 3 2\\n2 3 1\") == \"7.656854249492381\"\nassert solution(\"4\\n1 2 3 4\\n2 3 4 1\\n1 3 4 2\\n1 4 3 2\\n3 4 1\") == \"7.656854249492381\"\nassert solution(\"5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\n\n'''\n"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == \"2\"\nassert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n3 3\n3 0\"\"\") == \"3\"\nassert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == \"3\"\n\"\"\"\nExplanation:\n\nFor the first example, the longest fence post will protect one of the two remaining onions, and the other will be protected by the fence post on the third right.\n\nFor the second example, the longest fence post will protect the first two remaining onions, and the third will be protected by the fence post on the left.\n\nFor the third example, the longest fence post will protect the first and the third remaining onions, and the second will be protected by the fence post on the right.\n\nIn this case, the maximum number of onions L\u00f6kas can protect is three.\n\"\"\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(dedent(\"\"\"\n    3 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0\n    \"\"\")) == \"2\"\n\nassert solution(dedent(\"\"\"\n    10 10 10\n    0 0\n    0 10\n    5 5\n    4 4\n    6 6\n    7 7\n    8 8\n    9 9\n    5 5\n    \"\"\")) == \"4\"\n\nassert solution(dedent(\"\"\"\n    10 10 10\n    0 0\n    0 10\n    5 5\n    4 4\n    6 6\n    7 7\n    8 8\n    9 9\n    5 5\n    \"\"\")) == \"5\"\n\nassert solution(dedent(\"\"\"\n    10 10 10\n    0 0\n    0 10\n    5 5\n    4 4\n    6 6\n    7 7\n    8 8\n    9 9\n    5 5\n    \"\"\")) == \"5\"\n\nassert solution(dedent(\"\"\"\n    3 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0\n    \"\"\")) == \"5\""
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n) == '2'\n\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n) == '2'\n\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n0 0\n0 3\n1 4\n3 3\n3 0\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n) == '2'\n\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n0 0\n0 3\n1 4\n3 3\n3 0\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n) == '2'\n\nassert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n0 0\n0 3\n1 4\n3 3\n3 0\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0'''\n) == '2'"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == 2\n\nassert solution(\n'''\n3 1 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == 2\n\nassert solution(\n'''\n5 4 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == 3\n\nassert solution(\n'''\n3 1 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == 3\n\nassert solution(\n'''\n5 3 1\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == 4"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 5 3\") == \"2\"\nassert solution(\"3 5 3\") == \"2\"\nassert solution(\"3 5 3\") == \"2\"\nassert solution(\"3 5 3\") == \"2\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\n\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\n\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\n\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n2 1\n2 0\n1 2\n0 1\n0 3\n1 4\n3 3\n3 0''') == '2'\n\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n2 1\n2 0\n1 2\n0 1\n0 3\n1 4\n3 3\n3 0\n2 1\n2 0\n1 2\n0 1\n0 3\n1 4\n3 3\n3 0''') == '2'"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''1 3\n1 4\n1 5\n3 3\n3 0\n0 0\n0 3\n1 4\n3 3\n3 0\n0 0\n0 3\n1 4\n3 3\n3 0''') == '1'\nassert solution('''4 4 5\n1 1\n2 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8''') == '8'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n3 23\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n3 23\n3 24\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n3 23\n3 24\n3 25\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n3 23\n3 24\n3 25\n3 26\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n3 23\n3 24\n3 25\n3 26\n3 27\n2 2\n2 3\n2 4"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n\n\"78.93\"\n\"2 3\"\n\"5 1\"\n\"6 7\"\n\"5 3\"\n\"0 0\"\n\"2 2\"\n\"7 6\"\n\"2 1\"\n\"7 6\"\n\"0 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2\"\n\"2 1\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"0 0\"\n\"2 2\"\n\"3 0\"\n\"4 1\"\n\"3 0\"\n\"1 2"
    },
    {
        "number": 3584,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''6 7 3\n6 6\n1 1\n2 2\n0 0\n1 3\n2 3\n3 4\n2 4\n0 1\n0 3\n1 4\n3 3\n3 0\n0 2\n2 0\n1 2\n1 3\n3 1''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n0 2\n2 0\n1 2\n1 3\n3 1''') == '2'\nassert solution('''10 10 2\n0 1\n1 2\n0 2\n1 2\n0 3\n1 2\n1 4\n0 4\n1 4\n0 5\n1 5\n0 5\n0 2\n0 1\n1 2\n0 1\n0 0\n1 2\n0 3\n1 2\n1 2\n1 2\n0 0\n0 3\n1 4\n3 3\n3 0\n0 2\n2 0\n1 2\n1 3\n3 1''') == '2'\nassert solution('''5 5 2\n0 1\n1 2\n1 3\n0 3\n0 4\n1 4\n2 3\n2 1\n1 2\n3 2\n3 0\n4 3\n3 1\n1 1\n0 4\n4 3\n4 3\n4 3\n1 1\n0 0\n0 2\n1 3\n0 0\n0 1\n0 2\n0 3\n1 2\n0 1\n1 3\n0 4\n1 3\n0 4\n1 2\n0 1\n0 0\n1 2\n0 3\n1 2\n0 3\n0 4\n1 2\n0 4\n1 3\n1 3\n1 3\n0 3\n0 4\n1 4\n1 4\n1 4\n1 4\n0 2\n0 1\n1 2\n0 1\n0 0\n1 2\n0 3\n1 2\n0 3\n0 4\n1 2\n0 4\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n0 3\n0 4\n1 4\n1 4\n1 4\n1 4\n0 3\n0 4\n1 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n0 4\n0 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n0 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n0 4\n0 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == 1\nassert solution('2 1') == 1\nassert solution('2 1') == 1\nassert solution('2 10') == 5\nassert solution('2 100') == 0\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1') == '9'\nassert solution('7 1') == '9'\nassert solution('5 1') == '8'\nassert solution('9 9') == '8'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '9'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('4 2') == '1'\nassert solution('5 2') == '3'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1''') == '9'\nassert solution('''1 1''') == '0'\nassert solution('''2 1''') == '9'\nassert solution('''1 1''') == '0'\nassert solution('''3 2''') == '6'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == '9'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1''') == '9'\nassert solution('''1 1''') == '1'\nassert solution('''2 2''') == '1'\nassert solution('''1 2''') == '1'\nassert solution('''2 2''') == '1'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '9'\nassert solution('2 2') == '0'\nassert solution('2 10') == '0'\nassert solution('4 2') == '3'\nassert solution('10 4') == '7'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1\n''') == '9'\nassert solution('''2 1\n''') == '9'\nassert solution('''2 1\n''') == '9'\nassert solution('''3 1\n''') == '18'\nassert solution('''3 1\n''') == '18'\n"
    },
    {
        "number": 3585,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '9'\nassert solution(stdin) == '9'\nassert solution(stdin) == '9'\n\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\nassert solution('5\\n2\\n3\\n5\\n7\\n1') == '1'\nassert solution('5\\n2\\n3\\n5\\n7\\n9') == '9'\nassert solution('5\\n2\\n3\\n5\\n7\\n8') == '8'\nassert solution('5\\n2\\n3\\n5\\n7\\n10') == '10'\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n3\n5\n7\n12''') == \"12\"\nassert solution('''2\n3\n5\n7\n11\n''') == \"\"\nassert solution('''4\n-1\n4\n-7\n9\n-2''') == \"9\"\nassert solution('''4\n-7\n8\n-9\n10\n''') == \"8\"\nassert solution('''8\n-7\n8\n9\n10\n11\n-12\n13\n-14''') == \"10\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\"\n\n\"\"\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '12'\nassert solution('2\\n3\\n5\\n7\\n12') == '12'\nassert solution('3\\n5\\n7\\n12') == '12'\nassert solution('3\\n5\\n7\\n5') == '12'\nassert solution('3\\n5\\n7\\n6') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n-----\n\n>>> from sys import stdin, stdout\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()]\n>>> d = 0\n>>> for x in S:\n    for y in S:\n        if x + y not in S:\n            break\n        elif y + x not in S:\n            break\n        else:\n            d = max(d, x + y + y)\n    if d > 0:\n        break\n\n>>> stdout.write(str(d))\n\n>>> from sys import stdin\n>>> n = int(stdin.readline())\n>>> S = [int(x) for x in stdin.readline().split()"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"12\"\n'''"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n5\\n7\\n12') == '12'\nassert solution('5\\n7\\n12\\n15\\n20\\n23\\n29\\n32\\n35\\n39\\n47\\n53\\n59\\n67\\n76\\n87\\n98\\n105\\n122\\n127\\n135\\n145\\n153\\n160\\n167\\n176\\n187\\n198\\n209\\n227\\n237\\n248\\n263\\n271\\n279\\n292\\n299\\n308\\n327\\n337\\n345\\n353\\n362\\n369\\n377\\n388\\n397\\n406\\n417\\n428\\n439\\n449\\n464\\n470\\n475\\n482\\n489\\n496\\n505\\n514\\n526\\n532\\n535\\n545\\n554\\n561\\n566\\n568\\n569\\n576\\n583\\n592\\n596\\n597\\n605\\n614\\n621\\n626\\n627\\n632\\n639\\n646\\n651\\n656\\n661\\n666\\n676\\n681\\n686\\n690\\n694\\n695\\n698\\n704\\n711\\n716\\n718\\n722\\n734\\n739\\n743\\n748\\n753\\n756\\n761\\n768\\n779\\n792\\n798\\n799\\n804\\n817\\n826\\n827\\n832\\n833\\n837\\n843\\n848\\n852\\n859\\n867\\n874\\n879\\n895\\n900\\n909\\n919\\n928\\n934\\n939\\n949\\n957\\n966\\n976\\n977\\n984\\n991\\n996\\n1000\\n1005\\n1010\\n1014\\n1021\\n1026\\n1031\\n1035\\n1039\\n1047\\n1052\\n1059\\n1067\\n1072\\n1075\\n1084\\n1099\\n1104\\n1120\\n1127\\n1134\\n1139\\n1146\\n1151\\n1156\\n1165\\n1179\\n1194\\n1210\\n1214\\n1222\\n1229\\n1235\\n1242\\n1249\\n1255\\n1264\\n1270\\n1281\\n1288\\n1294\\n1299\\n1307\\n1318\\n1335\\n1346\\n1358\\n1366\\n1376\\n1383\\n1390\\n1401\\n1408\\n1420\\n1425\\n1434\\n1445\\n1455\\n1464\\n1472\\n1480\\n1488\\n1495\\n1510\\n1519\\n1532\\n1537\\n1545\\n1552\\n1559\\n1568\\n1576\\n1583\\n1598\\n1606\\n1614\\n1621\\n1627\\n1635\\n1642\\n1649\\n1658\\n1666\\n1684\\n1698\\n1703\\n1714\\n1725\\n1734\\n1747\\n1753\\n1759\\n1766\\n1774\\n1779\\n1789\\n1795\\n1805\\n1822\\n1836\\n1847\\n1855\\n1865\\n1877\\n1889\\n1902\\n1917\\n1935\\n1944\\n1961\\n1976\\n1983\\n1994\\n2001\\n2007\\n2021\\n2035\\n2043\\n2052\\n2069\\n2083\\n2096\\n2107\\n2124\\n2135\\n2142\\n2149\\n2155\\n2162\\n2179\\n2207\\n2216\\n2226\\n2235\\n2252\\n2263\\n2272\\n2287\\n2295\\n2303\\n2310\\n2316\\n2332\\n2339\\n2346\\n2356\\n2363\\n2370\\n2377\\n2385\\n2394\\n2405\\n2421\\n2427\\n2431\\n2434\\n2444\\n2449\\n2456\\n2463\\n2470\\n2479\\n2487\\n2494\\n2502\\n2515\\n2526\\n2539\\n2546\\n2555\\n2567\\n2579\\n2588\\n2599\\n2604\\n2618\\n2625\\n2632\\n2639\\n2647\\n2654\\n2662\\n2670\\n2679\\n2689\\n2708\\n2726\\n2732\\n2739\\n2745\\n2752\\n2767\\n2774\\n2782\\n2789\\n2807\\n2816\\n2825\\n2831\\n2838\\n2852\\n2859\\n2874\\n2885\\n2891\\n2896\\n2904\\n2914\\n2932\\n2939\\n2946\\n2951\\n2958\\n2966\\n2972\\n2982\\n2990\\n3003\\n3010\\n3023\\n3034\\n3043\\n3053\\n3061\\n3076\\n3081\\n3088\\n3095\\n3105\\n3119\\n3136\\n3144\\n3161\\n3168\\n3175\\n3193\\n3201\\n3208\\n3226\\n3235\\n3247\\n3255\\n3270\\n3284\\n3294\\n3312\\n3327\\n3333\\n3338\\n3345\\n3352\\n3359\\n3366\\n3372\\n3383\\n3390\\n3401\\n3408\\n3425\\n3433\\n3442\\n3450\\n3467\\n3476\\n3484\\n3491\\n3498\\n3516\\n3536\\n3545\\n3554\\n3571\\n3580\\n3588\\n3603\\n3610\\n3627\\n3642\\n3653\\n3659\\n3666\\n3673\\n3679\\n3686\\n3703\\n3710\\n3719\\n3726\\n3734\\n3751\\n3761\\n3776\\n3784\\n3791\\n3797\\n3814\\n3832\\n3841\\n3853\\n3867\\n3874\\n3880\\n3888\\n3895\\n3909\\n3926\\n3934\\n3950\\n3970\\n3978\\n3992\\n4002\\n4009\\n4026\\n4035\\n4045\\n4053\\n4071\\n4079\\n4097\\n4104\\n4120\\n4136\\n4145\\n4154\\n4161\\n4168\\n4176\\n4191\\n4208\\n4223\\n4237\\n4244\\n4251\\n4296\\n4312\\n4330\\n4347\\n4354\\n4361\\n4"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2\n3\n5\n7\n12\n''') == '12'\nassert solution('''5\n2\n3\n5\n7\n12\n''') == '12'\nassert solution('''5\n2\n3\n3\n5\n7\n''') == '0'\nassert solution('''5\n2\n3\n3\n5\n7\n''') == '0'\nassert solution('''5\n2\n3\n3\n7\n12\n''') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '12'\nassert stdin == '5\\n2\\n3\\n5\\n7\\n12\\n'\nassert solution(stdin) == '12'\nassert stdin == '5\\n2\\n3\\n5\\n7\\n12\\n'\nassert solution(stdin) == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n-12\") == \"NO SOLUTION\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n8\") == \"NO SOLUTION\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n-8\") == \"NO SOLUTION\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n-3\") == \"NO SOLUTION\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111''') == '11'\n\nassert solution('''1\n''') == '-1'\n\nassert solution('''3\n10\n01\n00\n''') == '01'\n\nassert solution('''3\n10\n01\n00\n110\n111\n''') == '11'\n\nassert solution('''3\n10\n01\n00\n110\n111\n1000\n1001\n1010\n1011\n10001\n10010\n10100\n10101\n101010\n101011\n1000100\n1000101\n10001010\n10001011\n100000100\n100000101\n1000001010\n1000001011\n100001000\n100001001\n100001010\n100001011\n100001100\n100001101\n100001110\n100001111\n100000110\n100000111\n1000010110\n1000010111\n1000011101\n1000011110\n1000011111\n10000000\n1000010100\n1000010101\n10000101010\n10000101011\n10000101100\n10000101101\n10000101110\n10000101111\n100001011000\n100001011001\n100001011010\n100001011011\n100001011100\n100001011101\n100001011110\n100001011111\n1000011000000\n1000011000001\n1000011000010\n1000011000100\n1000011000200\n1000011001000\n1000011001100\n1000011011100\n10000111001100\n1000011111100\n1000010110000\n10000111000110\n10000111000101\n100001110001010\n100001110001011\n100001110001100\n100001110001101\n100001110001110\n100001110001111\n100001110010010\n100001110010011\n100001110010100\n100001110010101\n1000011100101010\n1000011100101011\n1000011100101100\n1000011100101101\n1000011100101110\n1000011100101111\n100001110011000\n100001110011001\n100001110011010\n100001110011011\n100001110011100\n100001110011101\n100001110011110\n100001110011111\n100001110100000\n100001110100001\n100001110100010\n100001110100011\n100001110100100\n100001110100101\n100001110100110\n100001110100111\n100001110101000\n100001110101001\n100001110101010\n100001110101011\n100001110101100\n100001110101101\n100001110101110\n100001110101111\n100001110110000\n100001110110001\n100001110110010\n100001110110011\n100001110110100\n100001110110101\n100001110110110\n100001110110111\n100001110111000\n100001110111001\n100001110111010\n100001110111011\n100001110111100\n100001110111101\n100001110111110\n100001110111111\n100001111000000\n100001111000001\n100001111000010\n100001111000100\n100001111000200\n100001111001000\n100001111001100\n100001111011100\n1000011111001100\n1000011111001101\n1000011111001110\n1000011111001111\n1000011111010000\n1000011111010001\n1000011111010010\n1000011111010011\n1000011111010100\n1000011111010101\n1000011111010110\n1000011111010111\n1000011111011000\n1000011111011001\n1000011111011010\n1000011111011011\n1000011111011100\n1000011111011101\n1000011111011110\n1000011111011111\n1000011111000000\n1000011111000001\n1000011111000010\n1000011111000100\n1000011111000200\n1000011111001000\n1000011111001100\n1000011111001101\n1000011111001110\n1000011111001111\n1000011111000000\n1000011111000001\n1000011111000010\n1000011111000011\n10000111110000100\n10000111110000101\n10000111110000110\n10000111110000111\n10000111110001000\n10000111110001001\n10000111110001010\n10000111110001011\n10000111110001100\n10000111110001101\n10000111110001110\n10000111110001111\n10000111110010000\n100001111100001001\n100001111100001010\n100001111100001011\n100001111100001100\n100001111100001101\n100001111100001110\n100001111100001111\n100001111100000110\n100001111100000111\n100001111100001000\n100001111100001001\n100001111100001010\n100001111100001011\n100001111100001100\n100001111100001101\n100001111100001110\n100001111100001111\n100001111100001001\n100001111100001010\n100001111100001011\n100001111100001100\n100001111100001101\n100001111100001110\n100001111100001111\n100001111100000110\n100001111100000111\n100001111100001000\n100001111100001001\n100001111100001010\n100001111100001011\n100001111100001100\n100001111100001101\n100001111100001110\n100001111100001111\n100001111100000110\n100001111100000111\n100001111100001000\n100001111100001001\n100001111100001010\n100001111100001011\n100001111100001100\n100001111100001101\n100001111100001110\n100001111100001111\n100001111100001001\n100001111100001010\n100001111100001011\n100001111100001100\n100001111100001101\n100001111100001110\n100001111100001111\n100001111100001001\n100001111100001010\n100001111100001011\n100001111100001100\n100001111100001101\n100001111100001110\n100001111100001111\n100001111100000110\n100001111100000111\n100001111100001000\n100001111100001001\n100001111100001010\n100001111100001011\n100001111100001100\n100001111100001101\n100001111100001110\n100001111100001111\n100001111100000110\n100001111100000111\n100001111100001000\n100001111100001001\n100001111100001010\n100001111100001011\n100001111100001100\n100001111100001101\n100001111100001110\n100001111100001111\n100001111100000110\n1000011111000001"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n00\n01\n10\n110\n111\n''') == '11'\nassert solution('''\n2\n00\n10\n''') == '-1'\nassert solution('''\n4\n0101\n0101\n1111\n0110\n1101\n0011\n0110\n''') == '0011'\nassert solution('''\n15\n0001111101000101\n''') == '0011'\nassert solution('''\n15\n1111111\n111111\n11011\n11111\n1101\n11111\n10111\n1111\n111\n1\n''') == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111\n''') == '11'\nassert solution('''5\n00\n01\n10\n110\n111\n''') == '11'\nassert solution('''5\n00\n01\n10\n110\n111\n''') == '11'\nassert solution('''2\n00\n01\n''') == '00'\nassert solution('''3\n00\n01\n10\n''') == '10'\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == -1\nassert solution('00') == '00'\nassert solution('0') == '0'\nassert solution('100') == '0'\nassert solution('10') == '0'\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"coding\") == \"coding\"\nassert solution(\"coding\"[0]) == \"c\"\nassert solution(\"coding\"[1]) == \"o\"\nassert solution(\"coding\"[2]) == \"d\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    5\n    00\n    01\n    10\n    110\n    111\n    ''') == '11'\n\nassert solution(\n    '''\n    5\n    1010\n    1011\n    1010\n    1011\n    1011\n    ''') == '1011'\n\nassert solution(\n    '''\n    5\n    1010\n    1011\n    1010\n    1011\n    1011\n    ''') == '1011'\n\nassert solution(\n    '''\n    3\n    110\n    111\n    110\n    111\n    ''') == '110'\n\nassert solution(\n    '''\n    10\n    111111\n    111111\n    111111\n    111111\n    111111\n    111111\n    111111\n    111111\n    111111\n    111111\n    ''') == '111111'"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n5\n00\n01\n10\n110\n111\n''') == '11'\n\nassert solution('''\n5\n00\n00\n00\n00\n00\n''') == '-1'\n\nassert solution('''\n3\n00\n10\n01\n''') == '00'\n\nassert solution('''\n3\n10\n00\n01\n''') == '01'\n\nassert solution('''\n5\n00\n00\n00\n00\n00\n''') == '-1'"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111''') == '11'\nassert solution('''5\n00\n01\n10\n110\n111\n110\n000\n000''') == '00'\nassert solution('''5\n00\n01\n10\n110\n111\n111''') == '-1'\nassert solution('''5\n00\n01\n10\n110\n111\n111\n111''') == '11'\nassert solution('''5\n00\n01\n10\n110\n111\n111\n111\n111''') == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n0\n''') == '0'\nassert solution('''\n01\n''') == '01'\nassert solution('''\n00\n01\n10\n11\n100\n101\n110\n111\n1000\n1001\n1010\n1011\n1100\n1101\n1110\n1111\n''') == '11'\nassert solution('''\n0101\n0001\n0111\n0000\n1011\n1001\n1010\n1110\n0111\n1010\n1011\n1100\n1101\n1110\n11111\n''') == '11'\nassert solution('''\n
    },
    {
        "number": 3587,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n00\n01\n10\n110\n111\n''') == '11'\nassert solution('''\n1\n100\n''') == '-1'\nassert solution('''\n7\n01101\n01111\n01010\n00001\n01100\n01110\n01010\n01100\n01110\n01010\n00001\n01100\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01010\n00001\n01110\n01"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n1\\n1\\n1\") == \"100 250 320\"\nassert solution(\"3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\") == \"100 250 320\"\nassert solution(\"3\\n3\\n2\\n2\\n1\\n1\\n3\\n3\\n2\\n2\\n1\\n1\\n3\") == \"100 250 320\"\nassert solution(\"3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\") == \"100 250 320\"\nassert solution(\"3\\n3\\n2\\n2\\n1\\n1\\n3\\n3\\n2\\n2\\n1\\n1\\n3\") == \"100 250 320\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '100 250 320'\nassert solution('''3\n2\n20 100\n100 10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n\") == '100 250 320'\nassert solution(\"4\\n2\\n20 100\\n100 10\\n1\\n50 50\\n1\\n50 100\\n\") == '100 250 320'\nassert solution(\"4\\n2\\n20 100\\n100 10\\n1\\n50 50\\n1\\n50 100\\n\") == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 2\") == '100 100'\nassert solution(\"1 2\\n2 1\") == '100'\nassert solution(\"1 2\\n1 1\") == '100'\nassert solution(\"1 2\\n1 2\") == '100'\nassert solution(\"1 2\\n1 2\\n1 2\") == '100 100'\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320'\n\nassert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320'\n\nassert solution('4\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320'\n\nassert solution('5\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320'\n\nassert solution('6\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100''') == \"100 250 320\"\nassert solution('''3\n3\n1\n1\n2\n3\n10\n1\n2\n2\n1\n2\n1\n2\n1\n2\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100'''\n) == '100 250 320'\nassert solution(\n'''3\n2\n20 100\n100 10\n1\n1\n1\n1\n1\n1'''\n) == '1 1 1 1 1'\nassert solution(\n'''3\n3\n30 10\n100 5\n3\n2\n3\n2\n1\n1\n'''\n) == '2 1 4'\nassert solution(\n'''3\n3\n30 10\n100 5\n3\n2\n3\n2\n1\n1\n1\n'''\n) == '2 1 4'\nassert solution(\n'''6\n4\n30 10\n100 5\n3\n2\n3\n2\n1\n1\n1\n1\n'''\n) == '2 1 4'\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''3\n1\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n''') == '0 100 50 60 90 120 150 180 240 300 350 400 450 500 550 600 700 750 800 900 1000'\nassert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '0 100 50 60 90 120 150 180 240 300 350 400 450 500 550 600 700 750 800 900 1000'\nassert solution('''3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n''') == '0 100 50 60 90 120 150 180 240 300 350 400 450 500 550 600 700 750 800 900 1000'\n"
    },
    {
        "number": 3588,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 7 4 6 5 7 2 15 2\"\nassert stdin == '50 100'\n\"\"\""
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n\nprint(solution(stdin))\n-----\n\n\"\"\""
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n\nprint(solution(input()))\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''50 100''') == '3 7 4 6 5 7 2 15 2'\n'''\n5 5\n3 3\n2 2\n1 1\n0 0\n2 0\n1 1\n1 0\n'''\nassert solution('''10 10''') == '0 0 0 0 0 0 0 0 0'\nassert solution('''100 100''') == '0 0 0 0 0 0 0 0 0'\nassert solution('''0 0''') == '0 0 0 0 0 0 0 0 0'\nassert solution('''1 1''') == '0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''50 100''') == '3 7 4 6 5 7 2 15 2'\nassert solution('''9 4''') == '1 1 1 1 1 1 1 1 1'\nassert solution('''5 5''') == '0 1 1 1 1'\n'''"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"10 0\") == \"1 0 0 0 0 0 0 0 0 0\"\nassert solution(\"10 5\") == \"1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"-10 10\") == \"1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"-20 2\") == \"0 0 0 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 1') == ''\nassert solution('1 2') == ''\nassert solution('10 10') == ''\nassert solution('0 10') == ''\n"
    },
    {
        "number": 3589,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('30 15') == '0 0 0 0 0 0 0 0 0 0 0'\nassert solution('1000000 50001') == '0 0 0 0 0 0 0 0 0 0 0'\nassert solution('5 5') == '0 0 0 0 0 0 0 0 0 0 0'\nassert solution('1 1') == '0 0 0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n7 7\n11 11\n10 10\n5 5\n3 3\n1 1\n2 2''') == '28.97493528'\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n7 7\n11 11\n10 10\n5 5\n3 3\n1 1\n2 2\n3 3''') == '9.958333772'\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n7 7\n11 11\n10 10\n5 5\n3 3\n1 1\n2 2\n3 3\n4 4\n5 5''') == '19.97096668'\nassert solution('''3\n3 3\n2 2\n1 1\n1 1\n3 3''') == '2.5'\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '44.285945703125'\n'''\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'\n'''\nassert solution('''3\n0 0\n0 2\n1 1\n1 1\n1 2\n2 2\n2 1\n3 0\n4 3\n5 2\n7 3\n7 4\n8 1\n8 3\n9 4\n9 5\n10 0\n10 4\n10 6\n''') == '48.5'\n\nassert solution('''3\n0 0\n0 2\n1 1\n1 1\n1 2\n2 2\n2 1\n3 0\n4 3\n5 2\n7 3\n7 4\n8 1\n8 3\n9 4\n9 5\n10 0\n10 4\n10 6''') == '48.5'\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'\nassert solution('''0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n2 2\n5 5\n5 7\n1 8\n1 1\n3 2\n7 4\n10 4\n8 5\n8 4\n4 3\n3 3\n3 1''') == '7.0000000000'\nassert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n2 2\n5 5\n5 7\n1 8\n1 1\n3 2\n7 4\n10 4\n8 5\n8 4\n4 3\n3 3\n3 1''') == '7.0000000000'\nassert solution('''5\n2 2\n1 3\n3 2\n2 1\n3 1\n0 0\n15 0\n10 15\n14 10\n13 14\n8 4\n8 3\n3 2\n2 1\n0 0\n0 4\n2 4\n3 4\n3 3\n1 1\n1 2\n3 3\n4 4\n4 4\n4 3\n4 1\n1 2\n1 2\n1 3\n1 3\n1 3\n1 2\n1 1\n2 1\n1 1\n2 1\n1 1\n2 1\n2 1\n2 1\n1 1\n1 1\n1 1\n2 1\n1 1\n1 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"8.9999999999\"\n\nassert solution(stdin) == \"0.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"0.0000000000\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == \"40.0000000000\"\nassert solution('''0 0\n0 14\n15 14\n15 0\n4\n5 4\n7 7\n8 8\n10 10\n12 12\n13 13\n14 14\n16 16\n17 17\n18 18\n19 19\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n104 104\n105 105\n106 106\n107 107\n108 108\n109 109\n110 110\n111 111\n112 112\n113 113\n114 114\n115 115\n116 116\n117 117\n118 118\n119 119\n120 120\n121 121\n122 122\n123 123\n124 124\n125 125\n126 126\n127 127\n128 128\n129 129\n130 130\n131 131\n132 132\n133 133\n134 134\n135 135\n136 136\n137 137\n138 138\n139 139\n140 140\n141 141\n142 142\n143 143\n144 144\n145 145\n146 146\n147 147\n148 148\n149 149\n150 150\n151 151\n152 152\n153 153\n154 154\n155 155\n156 156\n157 157\n158 158\n159 159\n160 160\n161 161\n162 162\n163 163\n164 164\n165 165\n166 166\n167 167\n168 168\n169 169\n170 170\n171 171\n172 172\n173 173\n174 174\n175 175\n176 176\n177 177\n178 178\n179 179\n180 180\n181 181\n182 182\n183 183\n184 184\n185 185\n186 186\n187 187\n188 188\n189 189\n190 190\n191 191\n192 192\n193 193\n194 194\n195 195\n196 196\n197 197\n198 198\n199 199\n200 200\n201 201\n202 202\n203 203\n204 204\n205 205\n206 206\n207 207\n208 208\n209 209\n210 210\n211 211\n212 212\n213 213\n214 214\n215 215\n216 216\n217 217\n218 218\n219 219\n220 220\n221 221\n222 222\n223 223\n224 224\n225 225\n226 226\n227 227\n228 228\n229 229\n230 230\n231 231\n232 232\n233 233\n234 234\n235 235\n236 236\n237 237\n238 238\n239 239\n240 240\n241 241\n242 242\n243 243\n244 244\n245 245\n246 246\n247 247\n248 248\n249 249\n250 250\n251 251\n252 252\n253 253\n254 254\n255 255''') == \"500.0000000000\"\nassert solution('''0 0\n0 14\n15 14\n15 0\n4\n5 4\n7 7\n8 8\n10 10\n12 12\n13 13\n14 14\n16 16\n17 17\n18 18\n19 19\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n104 104\n105 105\n106 106\n107 107\n108 108\n109 109\n110 110\n111 111\n112 112\n113 113\n114 114\n115 115\n116 116\n117 117\n118 118\n119 119\n120 120\n121 121\n122 122\n123 123\n124 124\n125 125\n126 126\n127 127\n128 128\n129 129\n130 130\n131 131\n132 132\n133 133\n134 134\n135 135\n136 136\n137 137\n138 138\n139 139\n140 140\n141 141\n142 142\n143 143\n144 144\n145 145\n146 146\n147 147\n148 148\n149 149\n150 150\n151 151\n152 152\n153 153\n154 154\n155 155\n156 156\n157 157\n158 158\n159 159\n160 160\n161 161\n162 162\n163 163\n164 164\n165 165\n166 166\n167 167\n168 168\n169 169\n170 170\n171 171\n172 172\n173 173\n174 174\n175 175\n176 176\n177 177\n178 178\n179 179\n180 180\n181 181\n182 182\n183 183\n184 184\n185 185\n186 186\n187 187\n188 188\n189 189\n190 190\n191 191\n192 192\n193 193\n194 194\n195 195\n196 196\n197 197\n198 198\n199 199\n200 200\n201 201\n202 202\n203 203\n204 204\n205 205\n206 206\n207 207\n208 208\n209 209\n210 210\n211 211\n212 212\n213 213\n214 214\n215 215\n216 216\n217 217\n218 218\n219 219\n220 220\n221 221\n222 222\n223 223\n224 224\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\nassert solution('''1\n1 1\n1 2\n2 2\n2 1\n3 4\n4 4\n4 3\n4 5\n5 4\n5 3\n5 1\n6 7\n7 7\n7 6\n8 9\n9 9\n9 8\n9 7\n9 6\n10 11\n11 11\n11 10\n12 13\n13 13\n13 12\n14 15\n15 15\n15 14\n16 17\n17 17\n17 16\n18 19\n19 19\n19 18\n''') == '2.77777777778'\nassert solution('''2\n1 1\n1 2\n2 2\n2 1\n3 4\n4 4\n4 3\n4 5\n5 4\n5 3\n5 1\n6 7\n7 7\n7 6\n8 9\n9 9\n9 8\n9 7\n9 6\n10 11\n11 11\n11 10\n12 13\n13 13\n13 12\n14 15\n15 15\n15 14\n16 17\n17 17\n17 16\n18 19\n19 19\n19 18\n''') == '2.79090909091'\nassert solution('''3\n0 0\n1 1\n2 2\n2 1\n3 4\n4 4\n4 3\n4 5\n5 4\n5 3\n5 1\n6 7\n7 7\n7 6\n8 9\n9 9\n9 8\n9 7\n9 6\n10 11\n11 11\n11 10\n12 13\n13 13\n13 12\n14 15\n15 15\n15 14\n16 17\n17 17\n17 16\n18 19\n19 19\n19 18\n''') == '5.0'\nassert solution('''6\n0 0\n0 1\n1 1\n1 2\n2 2\n2 1\n3 4\n4 4\n4 3\n4 5\n5 4\n5 3\n5 1\n6 7\n7 7\n7 6\n8 9\n9 9\n9 8\n9 7\n9 6\n10 11\n11 11\n11 10\n12 13\n13 13\n13 12\n14 15\n15 15\n15 14\n16 17\n17 17\n17 16\n18 19\n19 19\n19 18\n''') == '9.25'\n"
    },
    {
        "number": 3590,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n0\\n0\\n0\\n4\\n8\\n3\\n6\\n7\\n10\\n11\\n7') == '40.0000000000'\nassert solution('0\\n0\\n0\\n0\\n4\\n8\\n3\\n6\\n7\\n10\\n11\\n7') == '40.0000000000'\nassert solution('0\\n0\\n0\\n0\\n3\\n8\\n3\\n6\\n7\\n10\\n11\\n7') == '40.0000000000'\nassert solution('0\\n0\\n0\\n0\\n3\\n8\\n3\\n6\\n7\\n10\\n11\\n7') == '40.0000000000'\nassert solution('0\\n0\\n0\\n0\\n3\\n8\\n3\\n6\\n7\\n10\\n11\\n7') == '40.0000000000'\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n3''') == '1\\n1'\nassert solution('''2\n4\n1 2 3 4''') == '0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n3\n2 1 3''') == '1'\nassert solution('''2\n2\n1 2''') == '1'\nassert solution('''3\n2 1 3\n3 1 3''') == '3'\nassert solution('''4\n2\n1 2\n1 3\n1 4''') == '1'\nassert solution('''5\n2\n1 2\n1 3\n1 4\n1 5''') == '1'\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n1\n3\n2 1 3\n''') == '1'\nassert solution('''\n2\n2\n1 2\n''') == '1'\nassert solution('''\n2\n3\n1 3\n''') == '1'\nassert solution('''\n3\n3\n1 3 2\n''') == '1'\nassert solution('''\n3\n3\n1 3 4\n''') == '2'\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3\n2 1 3'''\n) == '1'\nassert solution(\n'''2\n3\n4 5 6'''\n) == '1'\nassert solution(\n'''3\n1 2 3\n1 2 3'''\n) == '0'\nassert solution(\n'''2\n2\n1 1'''\n) == '1'\nassert solution(\n'''1\n1\n2\n3\n4\n5'''\n) == '1'\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    1\n    3\n    2 1 3\n    ''') == '1'\n\nassert solution(\n    '''\n    2\n    4\n    3 1 4 3\n    2 2 2 2\n    ''') == '1'\n\nassert solution(\n    '''\n    2\n    3\n    1 3\n    1 1 1\n    ''') == '2'\n\nassert solution(\n    '''\n    2\n    3\n    3\n    1 2 2\n    1 3 3\n    ''') == '0'\n\nassert solution(\n    '''\n    1\n    3\n    2 1 3\n    ''') == '1'"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n3\n2 1 3''') == '1\\n1\\n'\nassert solution('''1\n10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1''') == '10\\n1\\n'\nassert solution('''1\n10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1''') == '1\\n'\nassert solution('''1\n10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1''') == '1\\n'\nassert solution('''1\n10\n2 1 3''') == '0\\n'\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n3\n2 1 3''') == '1'\nassert solution('''1\n3\n3 1 3''') == '1'\nassert solution('''1\n3\n1 3 3''') == '2'\nassert solution('''1\n2\n1 3''') == '0'\nassert solution('''1\n2\n1 3 1''') == '0'\n"
    },
    {
        "number": 3591,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n1\n3\n2 1 3\n'''\n    ) == '1\\n1\\n'\n\nassert solution(\n'''\n2\n5\n3 2 1 3 1\n3\n1 3 2\n'''\n    ) == '2\\n1\\n'\n\nassert solution(\n'''\n3\n4\n4 1 2 3 4\n4\n4 1 2 3\n2\n3 4 1\n'''\n    ) == '2\\n1\\n'\n\nassert solution(\n'''\n4\n4\n4 1 2 3 4\n4\n4 1 2 3\n2\n3 4 1\n'''\n    ) == '2\\n1\\n'\n\nassert solution(\n'''\n5\n5\n5 1 2 3 4 5\n5\n5 1 2 3\n3\n1 3 4 5\n'''\n    ) == '2\\n1\\n'"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''725.85 1.71 2.38''') == '199 162'\nassert solution('''0.0 0.0 0.0''') == 'none'\nassert solution('''2.74 1.76 1.00''') == 'none'\nassert solution('''1.19 2.17 0.00''') == '199 162'\nassert solution('''2.29 2.72 1.99''') == '191 161'\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nimport sys\nfrom typing import Tuple"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\n\nassert solution('844.82 3.60 6.19') == '199 162'\n\nassert solution('402.80 3.15 2.50') == '199 162'\n\nassert solution('565.54 3.15 2.50') == '199 162'\n\nassert solution('1811.19 4.00 3.93') == '199 162'"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"545.49 1.10 2.76\") == \"0 0\"\nassert solution(\"400.51 4.15 4.18\") == \"1 0\"\nassert solution(\"200.10 6.29 3.73\") == \"0 0\"\nassert solution(\"1.01 2.41 3.46\") == \"0 0\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"5 1.64 2.24\") == \"1 0\"\nassert solution(\"5 1.64 1.64\") == \"0 1\"\nassert solution(\"3 1.64 1.64\") == \"1 0\"\nassert solution(\"3 4.18 2.12\") == \"1 1\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''725.85 1.71 2.38''') == '199 162'\n\n\"\"\"\n\nfrom collections import defaultdict, Counter"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n\"\"\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"1765.24 1.25 2.20\") == \"202 19\"\nassert solution(\"1274.00 1.00 1.50\") == \"45 47\"\nassert solution(\"1274.00 1.00 1.50\") == \"45 47\"\nassert solution(\"200.00 1.00 2.00\") == \"0 0\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"50.00 1.71 1.71\") == \"0 0\"\nassert solution(\"5.00 100.00 1.71\") == \"0 1\"\nassert solution(\"5.00 100.00 1.71\") == \"0 1\"\nassert solution(\"5.00 100.00 1.71\") == \"0 1\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\nassert solution('2106.40 0.01 0.04') == '55 41'\nassert solution('0.04 1.03 2.20') == 'none'\nassert solution('713.60 0.01 0.02') == 'none'\nassert solution('-2 0.01 0.02') == 'none'\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == 16\nassert solution('1 10\\n0 1 3\\n2 1 5\\n0 3 7') == 12\nassert solution('1 10\\n0 1 3\\n2 1 5\\n0 3 7') == 12\nassert solution('1 10\\n0 1 3\\n2 1 5\\n0 3 7') == 12\nassert solution('1 10\\n0 1 3\\n2 1 5\\n0 3 7') == 12\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2 3\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"1\\n2 3\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"1\\n2 3\\n1 1 2\\n3 3 0\") == \"18\"\nassert solution(\"1\\n2 3\\n1 2 3\\n3 3 0\") == \"18\"\nassert solution(\"1\\n2 3\\n1 2 3\\n3 3 0\") == \"18\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == 16"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n') == '16\\n'\nassert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n') == '16\\n'\n\"\"\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n3\\n1\\n2\\n3\\n4\\n5\\n0\\n1\\n2\\n3\\n4\\n5\") == \"16\"\n\"\"\""
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n\") == \"16\"\nassert solution(\"2 5\\n1 1 1\\n1 1 -1\\n1 -1 -1\\n-1 -1 1\\n-1 1 1\\n1 1 -1\\n\") == \"6\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0''') == '16'\nassert solution(\n'''1 1 1\n1 2 2\n1 3 3''') == '3'\nassert solution(\n'''1 1 1\n1 2 2\n1 3 3''') == '6'\n"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n8"
    },
    {
        "number": 3593,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"16\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2' == '2')\n\nassert solution('1') == '1'\n\nassert solution('O 1') == '1'\n\nassert solution('E 3') == '3'\n\nassert solution('E 2') == '2'"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1 1 4'\n\nsolution('1') == '1'\n\nassert solution('1') == '1'\n\nassert solution('2') == '2 1'\n\nassert solution('4') == '1 1 4'\n\nassert solution('3') == '2 1 4'"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''O 4\nO 5\nO 3\nO 1\nE 2\nE 5\nE 5\nI 2\nI 2''') == '''2 1 4\n'''\n\nassert solution('''O 4\nE 5\nO 3\nI 2''') == '''1 2 3\n'''\n\nassert solution('''O 1\nE 5\nO 2\nI 4\nO 1\nE 3\nE 2\nO 3\nI 4\nE 1\nI 4\nO 2\nO 2\nI 2\nE 1\nI 3\nO 1\nE 2\nE 1\nI 3\nO 2\nE 1\nI 4\nO 4\nE 2\nO 1\nI 2\nE 2\nO 2\nI 4\nE 1\nI 3\nO 1\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI 4\nO 2\nO 1\nI 4\nE 1\nI 3\nE 2\nE 1\nI"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\\n1\") == \"1 1\"\nassert solution(\"2\\n1\") == \"1 2\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"O 4\"\"\") == \"\"\"2 1 4\"\"\"\n\nassert solution(\"\"\"E 4\"\"\") == \"\"\"1 2 4\"\"\"\n\nassert solution(\"\"\"I 4\"\"\") == \"\"\"1 2 4\"\"\"\n\nassert solution(\"\"\"I 1\"\"\") == \"\"\"1 2 4\"\"\"\n\nassert solution(\"\"\"I 2\"\"\") == \"\"\"2 2 4\"\"\""
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('O 4\\nO 2') == '2 1 4'\nassert solution('I 3\\nO 1') == '2 1 4'\nassert solution('I 3\\nE 1') == '1 2 3'\nassert solution('I 3\\nI 1') == '1 2 3'\nassert solution('I 3\\nI 1\\nI 1') == '1 2 1'\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '2 1 4'\nassert solution('O 4') == '2 1 4'\nassert solution('O 2') == '2 1 4'\nassert solution('E 2') == '2 1 4'\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '0 0'\nassert solution('O 1') == '1 0'\nassert solution('E 2') == '0 2'\nassert solution('I 3') == '3 1'\nassert solution('I 2') == '2 2'\n"
    },
    {
        "number": 3594,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''O 4\nE 2\nO 3\nE 3\nO 1\nE 4'''\n) == '2 1 4'\n\nassert solution(\n    '''I 4\nE 2\nO 3\nE 3\nO 1\nE 4'''\n) == '2 1 4'\n\nassert solution(\n    '''E 4\nE 2\nO 3\nE 3\nO 1\nE 4'''\n) == '2 1 4'\n\nassert solution(\n    '''I 1\nE 1\nO 1\nE 4\nO 2\nE 2\nO 1\nE 4\nO 3\nE 3\nO 2\nE 3\nO 1\nE 1\nO 4\nE 2\nO 3\nE 3\nO 2\nE 3\nO 1\nE 1\nO 4\nE 2\nO 3\nE 3\nO 2\nE 3\nO 1\nE 1\nO 4\nE 2\nO 3\nE 3\nO 2\nE 3\nO 1\nE 1\nO 4\nE 2\nO 3\nE 3\nO 2\nE 3\nO 1\nE 1\nO 4\nE 2\nO 3\nE 3\nO 2\nE 3\nO 1\nE 1\nO 4\nE 2\nO 3\nE 3\nO 2\nE 3\nO 1\nE 1'''\n) == '2 1 4'\n\nassert solution(\n    '''O 4\nE 2\nO 3\nE 3\nO 1\nE 4'''\n) == '2 1 4'"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14''') == '4'\nassert solution(\n'''5 8\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '5'\nassert solution(\n'''2 3\n1 2 2\n1 3 3\n2 3 4\n2 1 1''') == '4'\nassert solution(\n'''1 10\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nassert solution('2 2\\n2 1 2 1\\n2 2 2 2') == '0'\nassert solution('1 1\\n1 1 1 1') == '2'\nassert solution('1 1\\n1 1 1 1\\n1 1 1 1') == '0'\nassert solution('1 1\\n1 1 1 1\\n1 1 1 1') == '1'\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n''') == '4'\nassert solution('''2 2\n5 5\n5 4\n5 3\n5 2\n1 1\n''') == '3'\nassert solution('''2 1\n5 5\n5 4\n5 3\n5 2\n1 1\n''') == '3'\nassert solution('''1 1\n5 5\n5 4\n5 3\n5 2\n1 1\n''') == '2'\nassert solution('''1 1\n5 5\n5 4\n5 3\n5 2\n1 1\n''') == '1'\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14''') == '4'\nassert solution('''8 9\n1 3 2 3\n5 4 5 6\n4 3 4 3\n2 5 7 10\n7 3 8 6\n2 4 2 4\n1 5 1 5''') == '4'\nassert solution('''1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '1'\nassert solution('''2 2\n0 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0''') == '2'\nassert solution('''8 8\n1 1 2 1\n2 2 2 1\n2 2 2 1\n2 1 2 1\n2 1 2 1\n2 1 2 1\n2 1 2 1\n2 1 2 1''') == '4'\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14''') == '4'\nassert solution('''2 2\n1 1 1 1\n1 2 2 2''') == '0'\nassert solution('''3 3\n1 1 1 1\n2 2 2 2\n3 3 3 3''') == '1'\nassert solution('''8 8\n1 1 1 1 1 1 1 1\n1 2 2 2 2 2 2 2\n1 3 3 3 3 3 3 3\n1 4 4 4 4 4 4 4\n1 5 5 5 5 5 5 5\n1 6 6 6 6 6 6 6\n1 7 7 7 7 7 7 7\n1 8 8 8 8 8 8 8''') == '10'\nassert solution('''1 1\n1 1 1 1 1\n1 2 2 2 2\n1 3 3 3 3\n1 4 4 4 4\n1 5 5 5 5\n1 6 6 6 6\n1 7 7 7 7\n1 8 8 8 8''') == '7'\n"
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    stdin='5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nassert solution(stdin='8 18\\n7 10 19 16\\n13 6 16 15 14 8 17\\n11 9 10 22 19 17\\n10 17 18 16 15 19\\n
    },
    {
        "number": 3595,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"10 9\") == \"3\"\nassert solution(\"5 8\") == \"4\"\nassert solution(\"2 1 4 5\") == \"4\"\nassert solution(\"5 1 12 4\") == \"2\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"-99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9\\n\") == \"9.585073\"\nassert solution(\n    \"-99.99 -99.99 9999.99\\n99 9 9 9999\\n9 9 9 9\\n\") == \"99.999999999\"\nassert solution(\n    \"-99.99 -99.99 99999.99\\n99 9 9 99999\\n9 9 9 99999\\n\") == \"99.9999999999999\"\nassert solution(\n    \"-99.99 -99.99 99999.99\\n99 9 9 99999\\n9 9 9 99999\\n\") == \"99.99999999999999\"\nassert solution(\n    \"-99.99 -99.99 99999.99\\n99 9 9 99999\\n9 9 9 99999\\n\") == \"99.99999999999999\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n'''\n\n'''\nUseful reference:\n\nhttps://math.stackexchange.com/questions/274846/how-to-approximate-exponential-in-python\nhttps://en.wikipedia.org/wiki/Gaussian_function\nhttps://en.wikipedia.org/wiki/Taylor_polynomial\n\nAlgorithm:\n\n1. Get the input values\n2. Calculate the location of the opponent\n3. Define a function f(x) = \\sum c_0 x^0 + \\sum c_1 x^1 + \\sum c_2 x^2 +...\n\n4. Define a polynomial P(x) = \\sum c_0 x^0 + \\sum c_1 x^1 + \\sum c_2 x^2 +...\n\n5. Calculate g(n) = (P(n) + l) / (1 / e + l) + 1 / l\n\n6. Calculate h(n) = (g(n) + l) / (1 / e + l) + 1 / l\n\n7. Calculate P_n(x) = P(n) / g(n)\n\n8. Calculate g(n + 1) = (P_n(x) + l) / (1 / e + l) + 1 / l\n\n9. Repeat from step 3 until n equals 0, which gives you the answer to Arnar\u2019s opponent\n\n'''\n\na, b, c = [float(x) for x in stdin.strip().split()]\nt = [int(x) for x in stdin.strip().split()[1:]]\nn, k, r, s, l = [int(x) for x in stdin.strip().split()[3:]]\nf = lambda x: sum([c[i] * x**i for i in range(len(c))])\nP = lambda n: sum([c[i] * x**i for i in range(len(c))])\ng = lambda n: (P(n) + l) / (1 / math.e + l) + 1 / l\nh = lambda n: (g(n) + l) / (1 / math.e + l) + 1 / l\nPn = lambda x: P(n) / g(n)"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '9.585073'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '9.585073'\nassert solution(input()) == '9.585073'\nassert solution(input()) == '9.585073'\nassert solution(input()) == '9.585073'\nassert solution(input()) == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"-99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9\\n\"\n    \"0 0 0 1 1 10\") == \"9.585073\"\nassert solution(\"-100.0 100.0 9999.99\\n99 9 999 9999\\n9 99 9 99 9\\n\"\n    \"0 0 0 1 1 10\") == \"1.000000\"\nassert solution(\"-10000.0 10000.0 9999.99\\n99 9 999 9999\\n9 99 9 99 9\\n\"\n    \"0 0 0 1 1 10\") == \"1.0000000\"\nassert solution(\"-100.0 100.0 9999.99\\n99 9 999 9999\\n9 99 9 99 9\\n\"\n    \"0 0 0 1 1 10\") == \"1.000000\"\nassert solution(\"-100.0 100.0 9999.99\\n99 9 999 9999\\n9 99 9 99 9\\n\"\n    \"0 0 0 1 1 10\") == \"1.000000\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\n\nassert solution(\n'''\n0 0 0 0\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '3.3333333333333335'\n\nassert solution(\n'''\n
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\nassert solution('''99\n9 99 9 99\n99 9 9 9\n''') == '9.585073'\nassert solution('''-99.99\n99\n9999\n99999\n999999\n9999999\n999999999\n9999999999\n999999999999\n99999999999999\n999999999999999\n9999999999999999\n999999999999999999\n9999999999999999999\n9999999999999999999999\n99999999999999999999999\n99999999999999999999999999\n999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n9999999999999999999999999999\n999999999999999999999999"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 1') == '9.585073'\nassert solution('1 2 3 1 1 1 1') == '9.585073'\nassert solution('0 0 0 0 0') == '0.0'\nassert solution('0 0 0 1') == '0.0'\nassert solution('99 99 99 999 999') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''-99.99 99.99 99999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\nassert solution('''-99.99 99.99 9999999\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\nassert solution('''-99.99 99.99 99999999\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\n'''"
    },
    {
        "number": 3596,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"-99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9\\n\"\n) == \"9.585073\"\nassert solution(\n    \"-99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9\\n\"\n) == \"9.585073\"\nassert solution(\n    \"-99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9\\n\"\n) == \"9.585073\"\nassert solution(\n    \"-99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9\\n\"\n) == \"9.585073\"\nassert solution(\n    \"-99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 999 9\\n\"\n) == \"9.585073\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 10 20 2 24 18 28 10') == '12.74 127.83'\nassert solution('20 30') == 'impossible'\nassert solution('6 10 19 12 19 22 19 22') == '4.32 27.78'\nassert solution('1 11 11 21 22 22 22 22') == '2.00 22.00'\nassert solution('20 30') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 1 2 3 4 5 6 7 8\") == \"0 1 2 3 4 5 6 7 8\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 10\") == \"impossible\"\nassert solution(\"20 30\") == \"impossible\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0\") == \"impossible\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0\") == \"impossible\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"20 30\") == \"12.74 127.83\"\nassert solution(\"10 10\") == \"impossible\"\nassert solution(\"30 30\") == \"impossible\"\nassert solution(\"2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nassert solution(\"5 3 2 1 1 1 1\") == \"4.78 145.17\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nassert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"impossible\"\n\n----- Explanation -----\n\nThe figure in the picture above shows the pool table. The dashed line at the bottom shows the line on which the cue ball must bounce. The cue ball is (x=0,y=30). The figure in the picture above is the initial state of the game.\n\nIn the first round of user testing, the cue ball comes towards the left. It comes directly into the hole at (x=0,y=0), so it hits the ball at (x=0,y=0). The ball starts moving to the right and hits the ball at (x=2,y=0). The ball is now in the hole at (x=0,y=0), and the cue ball has returned. The cue ball has hit the ball at (x=0,y=0). The cue ball is now at (x=2,y=0). The cue ball is now at (x=4,y=0). The cue ball is now at (x=6,y=0). The cue ball is now at (x=8,y=0), and the cue ball has returned to (x=2,y=0).\n\nNote that the cue ball cannot hit the ball at (x=0,y=0) because the pool table is vertical, and the cue ball cannot hit the ball at (x=2,y=0) because the cue ball is too far from the ball at (x=0,y=0). However, the cue ball can hit the ball at (x=4,y=0), because the cue ball is inside the hole, and the cue ball can hit the ball at (x=6,y=0), because the cue ball is too far from the ball at (x=8,y=0).\n\nIn the second round of user testing, the cue ball comes towards the right. It comes directly into the hole at (x=w,y=l), so it hits the ball at (x=w,y=l). The ball starts moving to the left and hits the ball at (x=0,y=l). The ball is now in the hole at (x=0,y=l), and the cue ball has returned. The cue ball has hit the ball at (x=0,y=l), and the cue ball is now at (x=0,y=l). The cue ball is now at (x=0,y=l). The cue ball is now at (x=0,y=l). The cue ball is now at (x=0,y=l). The cue ball has returned to (x=0,y=0).\n\nThe cue ball cannot hit the ball at (x=0,y=l), because the pool table is vertical, and the cue ball cannot hit the ball at (x=0,y=l), because the cue ball is too far from the ball at (x=0,y=l). However, the cue ball can hit the ball at (x=0,y=l), because the cue ball is inside the hole, and the cue ball can hit the ball at (x=0,y=l), because the cue ball is too far from the ball at (x=0,y=l).\n\nBecause the cue ball can hit the ball at (x=0,y=l), the cue ball can hit the ball at (x=0,y=l), because the cue ball is inside the hole, and the cue ball can hit the ball at (x=0,y=l), because the cue ball is too far from the ball at (x=0,y=l).\n\nIn the third round of user testing, the cue ball comes towards the left. It comes directly into the hole at (x=0,y=l), so it hits the ball at (x=0,y=l). The ball starts moving to the right and hits the ball at (x=2,y=l). The ball is now in the hole at (x=0,y=l), and the cue ball has returned. The cue ball has hit the ball at (x=0,y=l), and the cue ball is now at (x=0,y=l). The cue ball is now at (x=0,y=l). The cue ball is now at (x=0,y=l). The cue ball is now at (x=0"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('20 30') == '12.74 127.83'\nassert solution('100 60') == 'impossible'\nassert solution
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20 30''') == ''\nassert solution('''2 10 20 2 24 18 28 10''') == ''\nassert solution('''12.7 2.0 2.0 2.0 3.0 18.8 28.9 10.7''') == '12.74 127.83'\nassert solution('''6 6\n2 4 4 2 6 6\n2 4 4 2 6 6''') == 'impossible'\nassert solution('''100 50\n50 70 50 70 70 70 70 70\n70 70 70 70 70 70 70 70\n70 70 70 70 70 70 70 70''') == '80.00 81.00'\n'''"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\n\nassert solution(\n'''\n10 30\n2 10 20 2 24 18 28 10\n''') == 'impossible'\n\nassert solution(\n'''\n20 30\n1 2 1 2 5 1 5 1 1\n''') == '1 2'\n\nassert solution(\n'''\n20 30\n2 10 10 2 24 18 28 10\n''') == 'impossible'\n\nassert solution(\n'''\n20 30\n2 10 10 2 24 18 28 10\n''') == 'impossible'"
    },
    {
        "number": 3597,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12.74 127.83\"\n\n\"\"\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"010\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"110\") == \"0116\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''110\n6''') == '0116'\nassert solution('''2\n110\n6''') == '0116'\nassert solution('''3\n110\n6\n99''') == '0116'\nassert solution('''4\n110\n6\n99\n999''') == '0116'\nassert solution('''10\n110\n6\n99\n999\n9999\n999999\n999999999''') == '0116'\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n110\n6''') == '0116'\nassert solution('''3\n100\n8\n3\n''') == '004'\nassert solution('''9\n100\n9\n3\n9\n3\n3\n8\n8\n''') == '00008'\nassert solution('''4\n300\n8\n0\n3\n8\n0\n''') == '00003'\nassert solution('''4\n270\n5\n4\n4\n''') == '00454'\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''110\n6''') == '0116'\nassert solution('''100\n2\n0\n1\n8\n6\n9\n0\n1\n2\n9\n8\n0\n1\n2\n6\n7\n8\n0\n1\n2\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9''') == '0112'\nassert solution('''40\n23\n45\n24\n25\n76\n25\n13\n24\n45\n26\n29\n32\n29\n27\n30\n31\n33\n34\n37\n36\n35\n31\n32\n28\n26\n25\n24\n20\n19\n18\n17\n17\n17\n16\n15\n15\n15\n14\n14\n13\n14\n13\n14\n13\n14\n13\n13\n13\n13\n13\n13\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5\n1106\n5\n1109\n5\n1110\n5\n0222\n5\n0202\n5\n2\n0\nSample Output:\n0116\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'\nassert solution('2\\n3\\n5\\n9\\n8\\n7\\n6\\n') == '0037'\nassert solution('2\\n5\\n5\\n5\\n') == '0055'\nassert solution('2\\n10\\n1\\n1\\n9\\n') == '0119'\nassert solution('2\\n11\\n0\\n1\\n9\\n') == '0059'\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'\nassert solution('3\\n101\\n12\\n121\\n123\\n1213\\n12314\\n131415\\n') == '1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"110\") == \"1110\"\nassert solution(\"1106\") == \"1110\"\nassert solution(\"11099\") == \"1110\"\nassert solution(\"110999\") == \"1110\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''110\n6''') == '0116'\nassert solution('''\n110\n6\n''') == '0116'\nassert solution('''\n999\n7\n''') == '7'\nassert solution('''\n1000\n7\n''') == '77'\nassert solution('''\n1000\n7\n9\n''') == '77'\n"
    },
    {
        "number": 3598,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0116\"\n\"\"\"\n\nfrom io import StringIO\nfrom itertools import combinations\nfrom functools import reduce\nfrom typing import Iterator"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n4 4 4\\n\") == \"0 2 4\"\nassert solution(\"3 4\\n4 4 4\\n\") == \"0 1 1\"\nassert solution(\"5 4\\n5 4 4 1\\n\") == \"0 1 1\"\nassert solution(\"7 5\\n7 5 6 2 1 4 5\\n\") == \"0 1 1\"\nassert solution(\"7 7\\n7 5 6 2 1 4 5\\n\") == \"0 1 1\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n8 3\n4 4 4\n\"\"\") == '0 2 4'\n\nassert solution(\n\"\"\"\n5 4\n4 4 4\n\"\"\") == '0 3 2'\n\nassert solution(\n\"\"\"\n4 4\n1 1 1 1\n\"\"\") == '1 1 1'\n\nassert solution(\n\"\"\"\n7 3\n1 1 1 1 1 1 1\n\"\"\") == '0 3 2'\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0 2 4\"\n'''\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3\\n4 4 4\\n') == '0 2 4'\nassert solution('8 2\\n1 1\\n') == '0 0'\nassert solution('4 4\\n2 2 2 2\\n') == '0 0 2'\nassert solution('2 4\\n2 2 2\\n') == '0 0 2'\nassert solution('2 4\\n2 2 2\\n') == '0 0 2'\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 3\n4 4 4''') == '0 2 4'\n'''\n\nprint(solution('''8 3\n4 4 4'''))\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 3\n4 4 4\n''') == '0 2 4'\n'''"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nimport sys\n\nnum_musicians = int(sys.stdin.readline().strip())\nnum_breaks = int(sys.stdin.readline().strip())\nbreaks = [int(sys.stdin.readline().strip()) for _ in range(num_musicians)]\n\ncurrent_break = 0\ntime_left = 0\n\nfor i in range(num_musicians):\n    if breaks[i] > current_break:\n        if breaks[i] - current_break > time_left:\n            time_left = breaks[i] - current_break\n        current_break = breaks[i]\n    else:\n        time_left -= current_break - breaks[i]\n\nprint(time_left)\n"
    },
    {
        "number": 3599,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 4\n4 4 4''') == '0 2 4'\nassert solution('''8 3\n4 4 4''') == '0 2 4'\nassert solution('''8 3\n1 2 3''') == '0 3'\nassert solution('''8 3\n2 2 1''') == '0 2 1'\nassert solution('''8 3\n1 2 1''') == '0 1'\n"
    },
    {
        "number": 3600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n\"\"\""
    },
    {
        "number": 3600,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''5\n2\n1\n2\n2\n2\n3\n1\n4\n2\n2\n3\n2\n3\n1\n2\n1\n''') == 'impossible'\nassert solution('''2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 3600,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n7\\n1 2 3\\n1 2 3 4\\n1 2 3 4 5\\n1 2 3 4 5 6\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8 9') == 'impossible'\nassert solution('1\\n2\\n3\\n4\\n5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1 2 4 5\\n2 3 4\\n3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2 3\\n2 3 4\\n1"
    },
    {
        "number": 3600,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('0') == 'impossible'\nassert solution('3') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5''') == 'impossible'\nassert solution('''4\n5\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5''') == 'impossible'\nassert solution('''2\n5\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5''') == 'impossible'\nassert solution('''2\n4\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5''') == 'impossible'\nassert solution('''2\n10\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5''') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5''') == 'impossible'\nassert solution('''4\n4\n2 1 1\n1 1 2\n1 2 3\n2 1 4\n1 2\n1 3\n3 1 4\n1 3\n2 4''') == 'impossible'\nassert solution('''5\n9\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1 2 1 2 1\n1 1 1 1 1 1\n1 1"
    },
    {
        "number": 3600,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n') == 'impossible'\nassert solution('5\\n7\\n') == 'possible'\nassert solution('1\\n1\\n') == 'possible'\nassert solution('3\\n2\\n') == 'impossible'\nassert solution('2\\n2\\n') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5''') == 'impossible'\nassert solution('''2\n5\n5\n3 3 4 4 5\n4 1 3 5\n4 2 4\n3 1 3\n4 2 4\n1 1\n3 2\n3 1''') == 'impossible'\nassert solution('''5\n5\n5\n3 3 4 4 5\n4 1 3 5\n4 2 4\n3 1 3\n4 2 4\n1 1\n3 2\n3 1''') == 'impossible'\nassert solution('''5\n5\n5\n3 3 4 4 5\n4 1 3 5\n4 2 4\n3 1 3\n4 2 4\n1 1\n3 2\n3 1''') == 'impossible'\nassert solution('''5\n5\n5\n3 3 4 4 5\n4 1 3 5\n4 2 4\n3 1 3\n4 2 4\n1 1\n2 2\n3 1''') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''\n5\n4\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''\n5\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n3 1\n2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n4 3\n2 6 4\n''') == 'impossible'\nassert solution('''\n2\n3\n2 3\n''') == 'impossible'\nassert solution('''\n1\n3\n1\n''') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\"\"\"\n) == \"impossible\"\n\nassert solution(\n\"\"\"1\n2\n3\n4\n5\"\"\"\n) == \"impossible\"\n\nassert solution(\n\"\"\"2\n1\n2\n2\n3\"\"\"\n) == \"impossible\"\n\nassert solution(\n\"\"\"1\n2\n3\n4\n5\"\"\"\n) == \"impossible\"\n\nassert solution(\n\"\"\"3\n4\n5\n6\n7\n8\n9\"\"\"\n) == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4.00000'\n\"\"\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n0 10\n2\n4 10\n4 0''') == \"4.00000\"\nassert solution('''0 0\n0 10\n2\n4 10\n4 0\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 3601,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0\n0 10\n2\n4 10\n4 0''') == '4.00000'\nassert solution('''2\n0 0\n0 10\n2\n4 10\n4 0''') == 'impossible'\n\nprint(solution('''10\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 3601,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3601,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 0\") == \"4.00000\"\nassert solution(\"0 10\") == \"4.00000\"\nassert solution(\"2 4\") == \"impossible\"\nassert solution(\"4 10\") == \"impossible\"\nassert solution(\"2 4 4 2 2\") == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\nassert solution(\n'''\n2\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\nassert solution(\n'''\n3\n0 0\n0 10\n2\n4 10\n4 0\n''') == 'impossible'\n'''\n"
    },
    {
        "number": 3601,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n0 10\n2\n4 10\n4 0''') == \"4.00000\"\nassert solution('''0 0\n0 10\n2\n4 10\n4 0''') == \"impossible\"\n'''\n[execution time limit] 4 seconds (py3)\n\n[input] string stdin\n\n[output] string\n\n[description]\n\n'''"
    },
    {
        "number": 3601,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3601,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1'\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '0'\nassert solution('2 2\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1'\n\"\"\""
    },
    {
        "number": 3602,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\n\nsolution = lambda stdin: '0' if True else '1'\n\nassert solution('1 3') == '1'\nassert solution('3 1') == '0'\nassert solution('3 3') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 3602,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin, stdout\nfrom itertools import permutations"
    },
    {
        "number": 3602,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2''') == '1'\nassert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2''') == '0'\nassert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2''') == '1'\nassert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2''') == '0'\nassert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2''') == '0'\n"
    },
    {
        "number": 3602,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2''') == '1'\nassert solution('''10 10 10\n5 5 5\n2 3 2\n8 8 8\n3 2 3\n4 2 4\n7 5 4\n4 4 2\n8 8 2\n7 7 2\n2 2 2''') == '0'\nassert solution('''7 7 7\n5 5 5\n2 3 2\n8 8 8\n3 2 3\n4 2 4\n7 5 4\n4 4 2\n8 8 2''') == '1'\nassert solution('''2 2 1\n2 2 1\n2 2 1\n2 2 1''') == '1'\nassert solution('''4 4 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1''') == '0'\n"
    },
    {
        "number": 3602,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 1\n\"\"\""
    },
    {
        "number": 3602,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3602,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3602,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '1'\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '0'\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '0'\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '0'\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '0'\n"
    },
    {
        "number": 3603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '''5 3\n1 0\n2 4\n'''\n\nassert solution('''7 12\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n5 6\n6 7\n7 8\n3 4\n0 5\n9 10\n''') == '''Impossible\n'''\n"
    },
    {
        "number": 3603,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 6') == '5 3'\nassert solution('5 6') == '5 3'\nassert solution('10 3') == 'impossible'"
    },
    {
        "number": 3603,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3''') == 'impossible'\nassert solution('''2 2\n1 1\n0 0\n''') == 'impossible'\nassert solution('''4 2\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n2 3\n3 4\n1 2\n0 3\n1 4\n''') == '1 0\\n1 1\\n2 1\\n2 0\\n'\nassert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n2 3\n1 4\n2 4\n2 3\n3 4\n1 4\n0 4\n1 3\n''') == 'impossible'\nassert solution('''8 2\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n2 3\n1 4\n2 4\n2 3\n3 4\n1 4\n0 4\n1 3\n''') == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n-----Tests-----\n"
    },
    {
        "number": 3603,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n-----\n\n\"\"\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 1\n0 2\n1 3\n2 3\n1 2\n4 3''') == 'impossible'\nassert solution('''0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n0 2\n0 2\n0 2\n0 2\n1 2\n1 2\n1 2\n1 2\n1 2\n0 2\n0 2\n0 2\n1 2\n1 2\n1 2\n0 2\n1 2''') == 'impossible'\nassert solution('''0 1\n0 2\n1 3\n2 3\n1 2\n0 3\n1 3\n2 3\n0 2\n1 3\n1 3\n0 2\n0 3\n1 3\n0 2\n1 3\n1 3\n0 2\n1 3\n1 3\n0 2\n1 3\n1 3\n0 2\n1 3\n1 3\n0 2\n1 3\n1 3\n0 2\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n1 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n0 3\n1 3\n1 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n0 3\n1 3\n1 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n1 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n0 3\n1 3\n1 3\n0 3\n0 3\n1 3\n1 3\n0 3\n0 3\n1 3\n1 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n1 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3\n1 3\n0 3\n1 3"
    },
    {
        "number": 3603,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'impossible'\nassert solution('2 4') == '2 1'\nassert solution('5 3') == 'impossible'\nassert solution('1 2') == 'impossible'\nassert solution('1 2 1') == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '5 3'\nassert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n3 4\n''') == 'impossible'\nassert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n3 4\n''') == 'impossible'\nassert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n3 4\n0 1\n0 2\n1 3\n2 3\n1 2\n3 4\n''') == '3 1'\nassert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n3 4\n0 1\n0 2\n1 3\n2 3\n1 2\n3 4\n''') == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == 'impossible'\nassert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n0 4\n''') == 'impossible'\nassert solution('''5 6\n0 1\n0 2\n0 3\n0 4\n0 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '0 0'\nassert solution('''5 6\n0 1\n1 2\n2 3\n3 4\n4 5\n0 4\n1 4\n1 5\n1 2\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '1 1'\nassert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n0 4\n''') == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"/dev/stdin\").read()))\n"
    },
    {
        "number": 3604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample) == '2\\n1 2'\nassert solution(sample1) == '1\\n1'\nassert solution(sample2) == '0\\n'\nassert solution(sample3) == '0\\n1'\nassert solution(sample4) == '0\\n0'\n"
    },
    {
        "number": 3604,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 3\") == \"1 2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"1 2\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == \"2\"\nassert solution('''10 4\n0 0\n0 1\n0 2\n1 2\n1 3\n2 1\n2 4\n2 5\n3 4\n3 6\n4 6\n4 7\n5 6\n5 7\n6 7''') == \"7\"\nassert solution('''7 9\n0 2\n1 1\n2 3\n3 4\n4 6\n5 5\n6 7\n7 8''') == \"2\"\nassert solution('''4 1\n0 0\n1 1\n1 2\n1 3''') == \"1\"\nassert solution('''8 4\n0 2\n1 1\n2 3\n3 4\n4 6\n5 5\n6 7\n7 8\n8 9''') == \"5\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''0 0\n0 1\n1 0\n1 1'''\n) == '2\\n1 2'\nassert solution(\n'''5 2\n0 0\n0 1\n0 2\n0 3\n0 4\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n2 0\n2 1\n2 2\n2 3\n2 4\n2 5\n3 0\n3 1\n3 2\n3 3\n3 4\n3 5\n4 0\n4 1\n4 2\n4 3\n4 4\n4 5\n'''\n) == '9\\n1 2 3 4 5 6 7 8'\nassert solution(\n'''10 2\n-10000 -10000\n-10000 10000\n10000 -10000\n10000 10000'''\n) == '6\\n1 2 3 4 5'\nassert solution(\n'''10 3\n-10000 -10000\n-10000 10000\n10000 -10000\n10000 10000\n10000 -10000\n10000 10000\n10000 10000\n10000 -10000\n10000 10000\n10000 -10000\n10000 10000\n10000 -10000\n10000 10000\n10000 -10000\n10000 10000\n10000 -10000\n10000 10000\n10000 -10000\n10000 10000\n10000 -10000\n10000 10000\n10000 -10000\n10000 10000\n10000 -10000\n10000 10000'''\n) == '6\\n1 2 3 4 5 6'\nassert solution(\n'''4 2\n0 0\n1 0\n2 0\n3 0\n4 0'''\n) == '2\\n1 2'\n"
    },
    {
        "number": 3604,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2\\n'\nassert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2\\n'\nassert solution('10 10\\n-10000 -10000\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1\\n5 0\\n5 1\\n6 0\\n6 1\\n7 0\\n7 1\\n8 0\\n8 1\\n9 0\\n9 1\\n') == '8\\n1 2 3 4\\n'\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3604,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == '2\\n1 2\\n'\nassert solution('''10 10\n-2 -3\n-5 -6\n-7 -8\n-3 -4\n-1 -2\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n3 0\n3 1''') == '6\\n2 1 3 4 5 6\\n'\nassert solution('''100 100\n-1000 -1000\n-100 -100\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n3 0\n3 1''') == '1\\n'\nassert solution('''10 10000\n0 1\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 4\n4 5\n5 6\n5 7\n6 8\n6 9\n7 9\n7 10\n8 10\n8 9\n9 10\n9 11\n10 11\n10 12''') == '4\\n1 2 3 4\\n'\nassert solution('''1 2\n3 4\n1 2\n1 2\n3 4\n1 2\n3 4''') == '1\\n'\n"
    },
    {
        "number": 3604,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == \"2\\n1 2\"\nassert solution('''8 3\n-1000000000 -1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n''') == \"4\"\nassert solution('''8 4\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n''') == \"2\"\nassert solution('''4 2\n-1000000000 -1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n''') == \"1\"\nassert solution('''4 3\n-1000000000 -1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n1000000000 1000000000\n''') == \"2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == \"2\\n1 2\"\nassert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == \"2\\n1 2\"\nassert solution('''4 1\n0 0\n0 1\n1 0\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n4 5\n4 6\n4 7\n5 6\n5 7\n5 8\n6 7\n6 8\n6 9\n7 8\n7 9\n7 10\n8 9\n8 10\n8 11\n9 10\n9 11\n9 12\n10 11\n10 12\n10 13\n11 12\n11 13\n11 14\n12 13\n12 14\n12 15\n13 14\n13 15\n13 16\n14 15\n14 16\n14 17\n15 16\n15 17\n15 18\n16 17\n16 18\n16 19\n17 18\n17 19\n17 20\n18 19\n18 20\n18 21\n19 20\n19 21\n19 22\n20 21\n20 22\n20 23\n21 22\n21 23\n21 24\n22 23\n22 24\n22 25\n23 24\n23 25\n23 26\n24 25\n24 26\n24 27\n25 26\n25 27\n25 28\n26 27\n26 28\n26 29\n27 28\n27 29\n27 30\n28 29\n28 30\n28 31\n29 30\n29 31\n29 32\n30 31\n30 32\n30 33\n31 32\n31 33\n31 34\n32 33\n32 34\n32 35\n33 34\n33 35\n33 36\n34 35\n34 36\n34 37\n35 36\n35 37\n35 38\n36 37\n36 38\n36 39\n37 38\n37 39\n37 40\n38 39\n38 40\n38 41\n39 40\n39 41\n39 42\n40 41\n40 42\n40 43\n41 42\n41 43\n41 44\n42 43\n42 44\n42 45\n43 44\n43 45\n43 46\n44 45\n44 46\n44 47\n45 46\n45 47\n45 48\n46 47\n46 48\n46 49\n47 48\n47 49\n47 50\n48 49\n48 50\n48 51\n49 50\n49 51\n49 52\n50 49\n50 51\n50 52\n50 53\n51 50\n51 52\n51 53\n51 54\n52 50\n52 53\n52 54\n52 55\n53 50\n53 51\n53 52\n53 53\n53 54\n53 55\n54 50\n54 51\n54 52\n54 53\n54 54\n54 55\n55 50\n55 51\n55 52\n55 53\n55 54\n55 55\n55 56\n56 55\n56 56\n56 57\n55 56\n55 57\n55 58\n54 57\n54 58\n54 59\n55 58\n55 59\n55 60\n56 57\n56 58\n56 59\n56 60\n56 61\n57 60\n57 61\n57 62\n58 59\n58 60\n58 61\n58 62\n58 63\n59 62\n59 63\n59 64\n60 62\n60 63\n60 64\n60 65\n61 62\n61 63\n61 64\n61 65\n61 66\n62 63\n62 64\n62 65\n62 66\n62 67\n63 64\n63 65\n63 66\n63 67\n63 68\n64 65\n64 66\n64 67\n64 68\n64 69\n65 66\n65 67\n65 68\n65 69\n65 70\n66 67\n66 68\n66 69\n66 70\n66 71\n67 68\n67 69\n67 70\n67 71\n67 72\n68 69\n68 70\n68 71\n68 72\n68 73\n69 70\n69 71\n69 72\n69 73\n69 74\n70 71\n70 72\n70 73\n70 74\n70 75\n71 72\n71 73\n71 74\n71 75\n71 76\n72 73\n72 74\n72 75\n72 76\n72 77\n73 74\n73 75\n73 76\n73 77\n73 78\n74 75\n74 76\n74 77\n74 78\n74 79\n75 76\n75 77\n75 78\n75 79\n75 80\n76 77\n76 78\n76 79\n76 80\n76 81\n77 78\n77 79\n77 80\n77 81\n77 82\n78 79\n78 80\n78 81\n78 82\n78 83\n79 80\n79 81\n79 82\n79 83\n79 84\n80 81\n80 82\n80 83\n80 84\n80 85\n81 82\n81 83\n81 84\n81 85\n81 86\n82 83\n82 84\n82 85\n82 86\n82 87\n83 84\n83 85\n83 86\n83 87\n83 88\n84 85\n84 86\n84 87\n84 88\n84 89\n85 86\n85 87\n85 88\n85 89\n85 90\n86 87\n86 88\n86 89\n86 90\n86 91\n87 88\n87 89\n87 90\n87 91\n87 92\n88 89\n88 90\n88 91\n88 92\n88 93\n89 90\n89 91\n89 92\n89 93\n89 94\n90 91\n90 92\n90 93\n90 94\n90 95\n91 92\n91 93\n91 94\n91 95\n91 96\n92 93\n92 94\n92 95\n92 96\n92 97\n93 94\n93 95\n93 96\n93 97\n93 98\n94 95\n94 96\n94 97\n94 98\n94 99\n95 96\n95 97\n95 98\n95 99\n95 100\n96 97\n96 98\n96 99\n96 100\n96 101\n97 98\n97 99\n97 100\n97 101\n97 102\n98 99\n98 100\n98 101\n98 102\n98 103\n99 100\n99 101\n99 102\n99 103\n99 104\n100 101\n100 102\n100 103\n100 104\n100 105\n101 104\n101 105\n101 106\n102 103\n102 104\n102 105\n102 106\n102 107\n103 104\n103 105\n103 106\n103 107\n103 108\n104 105\n104 106\n104 107\n104 108\n104 109\n105 106\n105 107\n105 108\n105 109\n105 110\n106 107\n106 108\n106 109\n106 110\n106 111\n107 108\n107 109\n107 110\n107 111\n107 112\n108 109\n108 110\n108 111\n108 112\n108 113\n109 110\n109 111\n109 112\n109 113\n109 114\n110 111\n110 112\n110 113\n110 114\n110 115\n111 112\n111 113\n111 114\n111 115\n111 116\n112 113\n112"
    },
    {
        "number": 3604,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1\\n0 0\") == \"1\\n0\"\nassert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\"\nassert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1\") == \"2\\n1 2\\n4\"\nassert solution(\"4 4\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1\\n5 0\\n5 1\\n6 0\\n6 1\") == \"2\\n1 2\\n3\"\nassert solution(\"6 6\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1\\n5 0\\n5 1\\n6 0\\n6 1\") == \"4\\n1 2\\n2 3\\n3 4\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 2''') == '1'\nassert solution('''10 0''') == '0'\nassert solution('''10 2''') == '1'\nassert solution('''10 3''') == '1'\nassert solution('''10 1''') == '0'\n"
    },
    {
        "number": 3605,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n2\") == \"\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 2''') == '1'\nassert solution('''3 3''') == '0'\nassert solution('''10 1''') == '5'\nassert solution('''10 3''') == '0'\nassert solution('''10 5''') == '5'\n"
    },
    {
        "number": 3605,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\nassert solution(\"1 2\\n3 4\") == \"\"\n\"\"\""
    },
    {
        "number": 3605,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 2\n1 3 5 7 9 11 13 15 17 16''') == '1'\n'''\n"
    },
    {
        "number": 3605,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"1 10\") == \"9\"\nassert solution(\"2 10\") == \"6\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 3 5\\n7\") == 1\nassert solution(\"10 5\\n3 1 4 1 5 5 6 5 7 7 8 8 9 9 10\") == 1\nassert solution(\"5 1\\n3 1 4 1 5\") == 0\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\") == 3\nassert solution(\"10 5\\n2 1 4 1 5\") == 3\n"
    },
    {
        "number": 3605,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\n\nassert solution(\n'''\n3 3\n1 2 3\n''') == '0'\n\nassert solution(\n'''\n10 4\n1 3 2 4 5 6 7 8 9 10\n''') == '1'\n\nassert solution(\n'''\n100 4\n6 10 13 15 17 20 21 22 23 24 25 26\n''') == '1'\n\nassert solution(\n'''\n5 5\n1 2 3 4 5\n''') == '0'"
    },
    {
        "number": 3605,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 2\n1 3 5 7 9 11 13 15 17 16''') == '1'\nassert solution('''1 1\n1''') == '0'\nassert solution('''1 100\n1''') == '1'\nassert solution('''5 2\n1 2 3 4 5''') == '1'\nassert solution('''5 2\n1 2 3 4 5''') == '0'\n"
    },
    {
        "number": 3605,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 2\n1 3 5 7 9 11 13 15 17 16''') == '1'\nassert solution('''20 3\n3 3 4 6 8 10 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100''') == '1'\nassert solution('''10 2\n1 3 5 7 9 11 13 15 17 16''') == '1'\nassert solution('''20 3\n9 9 8 7 6 5 4 3 2 1 1''') == '1'\nassert solution('''20 4\n9 9 8 7 6 5 4 3 2 1 1''') == '1'\n"
    },
    {
        "number": 3606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open('/dev/stdin').read()) == '7 4'\nprint(solution(open('test.txt').read()))\nprint(solution(open('data/data01.txt').read()))\n"
    },
    {
        "number": 3606,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"AC\") == \"\"\nassert solution(\"ACBB\") == \"\"\nassert solution(\"ABCDE\") == \"\"\nassert solution(\"ABCDE\") == \"\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4'\nassert solution('5 4\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16') == '3 4'\nassert solution('7 7\\nCACBD\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '5 6'\nassert solution('7 7\\nAACBD\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '3 4'\nassert solution('7 7\\nAACBD\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '5 6'\n"
    },
    {
        "number": 3606,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7''') == '7 4'\nassert solution('''7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7''') == '3 7'\nassert solution('''7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7''') == '5 6'\nassert solution('''7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7''') == '9 4'\nassert solution('''7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7''') == '7 6'\n"
    },
    {
        "number": 3606,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4\\n'\n\nassert solution('7 5\\nABCD\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '1 10\\n'\n\nassert solution('7 5\\nABCD\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4\\n'\n\nprint(solution('7 5\\nABCD\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7'))\n"
    },
    {
        "number": 3606,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7''') == '7 4'\nassert solution('''5 3\n8 9\n1 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 5\n1 2\n3 4\n1 2\n1 2''') == '1 2'\nassert solution('''6 3\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7''') == '1 2'\nassert solution('''10 10\nBACDBA\n1 1\n5 6\n2 2\n1 3\n2 4\n5 6\n3 4\n4 5\n6 7\n7 8\n8 9\n9 10\n2 2''') == '1 1'\nassert solution('''10 10\nBACDBA\n1 1\n5 6\n2 2\n1 3\n2 4\n5 6\n3 4\n4 5\n6 7\n7 8\n8 9\n9 10\n2 2''') == '1 1'\n"
    },
    {
        "number": 3606,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7'''\n) == '7 4'\nassert solution(\n'''6 5\nACD\n3 3\n1 1\n3 4\n5 2\n3 4\nSample Output:\n3 4\n'''\n) == '3 4'\nassert solution(\n'''7 8\nABCDD\n9 7\n8 1\n7 5\n3 9\n6 4\n5 8\n8 9\n3 3\nSample Output:\n5 3\n'''\n) == '5 3'\nassert solution(\n'''7 5\nACB\n2 2\n1 1\n3 4\n5 2\n3 4\nSample Output:\n3 3\n'''\n) == '3 3'\nassert solution(\n'''8 8\nABCACD\n6 6\n8 9\n7 4\n5 8\n6 1\n3 4\n4 2\n1 4\n2 6\n1 3\nSample Output:\n4 3\n'''\n) == '4 3'\n"
    },
    {
        "number": 3606,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\\n\"\nassert solution(\"7 5\\nABBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"4 4\\n\"\nassert solution(\"10 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\") == \"\"\nassert solution(\"5 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\") == \"\"\nassert solution(\"7 10\\nABBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\"\nassert solution(\"8 7\\n
    },
    {
        "number": 3606,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4'\nassert solution('7 5\\nABDCD\\n1 1\\n3 3\\n1 3\\n1 1\\n4 6\\n1 3\\n1 1\\n4 4\\n1 1\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n4 1\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 3607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('''\n1 LET A = 0\n2 PRINT \"HELLO THERE \"\n3 PRINTLN A\n4 IF A <> 0 THEN GOTO 5\n5 PRINTLN \"DONE\"\n6 GOTO 1\n7 PRINT \"DONE\"\n8 GOTO 9\n9 GOTO 10\n10 PRINT \"DONE\"\n''') == 'HELLO THERE 0\\nDONE'\n'''\n"
    },
    {
        "number": 3607,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n\"\"\") == \"\"\"HELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\"\"\"\nassert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 IF A > 10 THEN GOTO 70\n70 PRINTLN \"DONE\"\n\"\"\") == \"\"\"HELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\"\"\"\nassert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 IF A > 10 THEN GOTO 70\n70 IF A <= 5 THEN GOTO 90\n80 PRINTLN \"DONE\"\n\"\"\") == \"\"\"HELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\"\"\"\nassert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 IF A > 10 THEN GOTO 70\n70 IF A <= 5 THEN GOTO 90\n80 IF A < 15 THEN GOTO 100\n90 IF A < 15 THEN GOTO 110\n100 PRINTLN \"DONE\"\n\"\"\") == \"\"\"HELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\"\"\"\nassert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 IF A > 10 THEN GOTO 70\n70 IF A <= 5 THEN GOTO 90\n80 IF A < 15 THEN GOTO 100\n90 IF A < 15 THEN GOTO 110\n100 IF A < 15 THEN GOTO 120\n110 IF A < 15 THEN GOTO 130\n120 PRINTLN \"DONE\"\n\"\"\") == \"\"\"HELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\"\"\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n\nassert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n\nassert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n'''\n"
    },
    {
        "number": 3607,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '1 2 3 4'\nassert solution('1 2 3 4\\n5 6 7 8') == '1 2 3 4\\n5 6 7 8'\nassert solution('1 2 3 4\\n5 6 7 8\\n10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('1 2 3 4\\n5 6 7 8\\n10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n5 5 5') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('1 2 3 4\\n5 6 7 8\\n10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n5 1 1') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\") == \"HELLO THERE 1\"\nassert solution(\"20 PRINT \\\"HELLO THERE \\\"\") == \"HELLO THERE 1\"\nassert solution(\"30 PRINTLN A\") == \"HELLO THERE 1\"\nassert solution(\"40 LET A = A + 1\") == \"HELLO THERE 2\"\nassert solution(\"50 IF A <= 5 THEN GOTO 20\") == \"HELLO THERE 2\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n\"\"\"\n  return solution(stdin)\n"
    },
    {
        "number": 3607,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\"\"\n\"\"\") == \"\"\nassert solution(\"\"\"\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 GOTO 90\n70 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 IF A > 5 THEN GOTO 40\n70 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nDONE'\nassert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 IF A > 5 THEN GOTO 40\n70 IF A <= 7 THEN GOTO 60\n80 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nDONE'\n'''\n\nimport sys\nsys.setrecursionlimit(1000000)"
    },
    {
        "number": 3607,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n\"\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\nassert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 IF A > 5 THEN GOTO 30\n70 PRINTLN \"DONE\"\n\"\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nDONE\"\n\nassert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 IF A > 5 THEN GOTO 30\n70 IF A > 10 THEN GOTO 40\n80 PRINTLN \"DONE\"\n\"\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nDONE\"\n\nassert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 IF A > 5 THEN GOTO 40\n50 IF A > 10 THEN GOTO 50\n60 IF A > 20 THEN GOTO 60\n70 PRINTLN \"DONE\"\n\"\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nDONE\"\n\nassert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 IF A > 5 THEN GOTO 40\n50 IF A > 10 THEN GOTO 50\n60 IF A > 20 THEN GOTO 60\n70 IF A > 30 THEN GOTO 70\n80 PRINTLN \"DONE\"\n\"\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\nLET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('''\nLET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('''\nLET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('''\nLET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('''\nLET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 0 1\n0 1\n''') == '3'\nassert solution('''6\n1 0 1 0 1 0\n2 2 2\n''') == '1'\nassert solution('''6\n1 0 1 0 1 0\n2 2 2\n''') == '6'\nassert solution('''10\n10 0 10 0 10 0 10 0 10\n2 1 2 1 1 1\n''') == '6'\nassert solution('''9\n3 0 1 0 1 0 1\n1 0 1\n''') == '1'\n"
    },
    {
        "number": 3608,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n3 0 1\\n0 1\") == \"\"\nassert solution(\"3\\n3 0 1\\n0 1\\n0 1\") == \"\"\nassert solution(\"3\\n3 0 1\\n0 1\\n0 1\") == \"\"\nassert solution(\"3\\n3 0 1\\n0 1\\n1 0\") == \"\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3608,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\nimport sys\nsys.stdin = open(__file__, 'r')\n"
    },
    {
        "number": 3608,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 0 1\n0 1\n''') == '3'\nassert solution('''6\n6 0 1 1 1 1\n1 1\n0 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '10'\nassert solution('''8\n8 0 1 1 1 1 1\n1 1\n0 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\nassert solution('''8\n8 0 1 1 1 1 1\n1 1\n0 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\nassert solution('''14\n14 0 1 1 1 1 1 1 1 1\n1 1\n0 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\n"
    },
    {
        "number": 3608,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1') == 1\nassert solution('2\\n1 0\\n1 1') == 1\nassert solution('3\\n1 0 1\\n1 1 1\\n2 2 1') == 6\nassert solution('4\\n1 0 1 1\\n1 1 1 1\\n2 2 1 2\\n3 3 1 3\\n4 4 1 4\\n5 5 1 5') == 10\nassert solution('100\\n0 0 1 0 0 1 0 0 1 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0 0 1 1 0 1 0 1 1 1 1 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 0 1 1 1 0 0 1 1 0 1 0 1 1 1 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 1 1 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3608,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1') == '0'\nassert solution('0 1 0') == '3'\nassert solution('1 0 0') == '0'\nassert solution('0 0 0') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3608,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n2 3 1 4') == 1\nassert solution('2\\n1 2\\n1 2') == 2\nassert solution('1\\n3\\n2 1') == 2\nassert solution('3\\n1 2\\n2 3') == 2\nassert solution('1\\n3\\n2 3') == 3\n"
    },
    {
        "number": 3608,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''3\n    3 0 1\n    0 1\n    ''') == '3'\n\nassert solution(\n    '''4\n    3 0 1\n    0 1\n    2 0\n    1 0\n    ''') == '3'\n\nassert solution(\n    '''5\n    3 0 1\n    0 1\n    2 0\n    1 0\n    3 0\n    ''') == '3'\n\nassert solution(\n    '''6\n    3 0 1\n    0 1\n    2 0\n    1 0\n    3 0\n    3 0\n    ''') == '3'\n\nassert solution(\n    '''7\n    3 0 1\n    0 1\n    2 0\n    1 0\n    3 0\n    3 0\n    3 0\n    ''') == '3'"
    },
    {
        "number": 3609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'LLRRRRLL'\nassert solution('2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible'\nassert solution('5\\n1 2\\n2 3\\n1 3\\n3 4\\n4 5\\n5 3\\n') == 'impossible'\nassert solution('5\\n1 2\\n2 3\\n1 3\\n4 5\\n4 3\\n5 3\\n') == 'LLRRRRRR'\nassert solution('5\\n1 2\\n2 3\\n1 3\\n3 4\\n4 5\\n4 3\\n') == 'impossible'\n"
    },
    {
        "number": 3609,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n-----\nimport sys\n"
    },
    {
        "number": 3609,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nimport sys"
    },
    {
        "number": 3609,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL'\nassert solution('5\\n1 2\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'impossible'\nassert solution('1\\n1') == 'impossible'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == 'impossible'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == 'impossible'\n"
    },
    {
        "number": 3609,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRRRRLL'\nassert solution('''8\n1 3\n1 2\n1 7\n2 5\n2 4\n2 6\n3 4\n3 8\n4 5\n4 7\n5 6\n5 7\n6 7\n7 8\n''') == 'impossible'\nassert solution('''8\n1 3\n1 2\n1 7\n2 5\n2 4\n2 6\n3 4\n3 8\n4 5\n4 7\n5 6\n5 7\n6 7\n7 8\n''') == 'LLRLRRLR'\n'''\n'''\n"
    },
    {
        "number": 3609,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n2 3\\n1 3\\n3 4\\n4 5') == 'LLRRRRLL'\nassert solution('4\\n1 2\\n2 3\\n1 3\\n3 4\\n4 5') == 'impossible'\nassert solution('5\\n1 2\\n2 3\\n1 3\\n3 4\\n4 5') == 'impossible'\nassert solution('4\\n1 2\\n1 3\\n2 4\\n2 3\\n3 4\\n4 5') == 'LLRLRRLR'\nassert solution('4\\n1 2\\n2 3\\n1 3\\n3 4\\n4 5') == 'LLRRRRLL'\n"
    },
    {
        "number": 3609,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3''') == 'LLRLRRLRL'\nassert solution(\n'''6\n1 2\n1 3\n2 4\n2 5\n2 6\n4 5\n4 6\n3 5\n3 6\n5 6\nSample Output:\nimpossible\n''') == 'impossible'\nassert solution(\n'''100\n1 2\n2 3\n2 4\n2 5\n2 6\n3 5\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n5 8\n5 9\n5 10\n6 9\n6 10\n6 11\n6 12\n6 13\n7 11\n7 12\n7 13\n8 12\n8 13\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20\n10 21\n10 22\n10 23\n10 24\n10 25\n10 26\n10 27\n10 28\n10 29\n10 30\n10 31\n10 32\n10 33\n10 34\n10 35\n10 36\n10 37\n10 38\n10 39\n10 40\n10 41\n10 42\n10 43\n10 44\n10 45\n10 46\n10 47\n10 48\n10 49\n10 50\n10 51\n10 52\n10 53\n10 54\n10 55\n10 56\n10 57\n10 58\n10 59\n10 60\n10 61\n10 62\n10 63\n10 64\n10 65\n10 66\n10 67\n10 68\n10 69\n10 70\n10 71\n10 72\n10 73\n10 74\n10 75\n10 76\n10 77\n10 78\n10 79\n10 80\n10 81\n10 82\n10 83\n10 84\n10 85\n10 86\n10 87\n10 88\n10 89\n10 90\n10 91\n10 92\n10 93\n10 94\n10 95\n10 96\n10 97\n10 98\n10 99\n10 100\nSample Output:\nRRLLLLLLLLRRLRRRRRLLRRLRLRLRLRLRRRLRRRRRRRRRLRRRRRRRLLRRLRRRLRLRLRLRLRRRLLRLRLRRRLRRRRRLRRRRRRLRRLRRRRRRRRRRRLRRRRRRRRLLRRLRRRRRRRLRLRLRLRRRRRRRRRRRLLRRLRRRRRLRRRRRRRLLLRLRRRLRRRLRLRLRLRRRLRRRRRRLLLRLRRRRRRRRRLRLRLRLRRRRRRRRRRRLRLRLRRRRRRRLRRRLRRRLRLRRRRRLRLRLLRLRRRRRRRLRLRLRRRRRRRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRRRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRRRRRRRLRLRLRRRLRLRRRLRRRRRLRLRLRRRLRRRRRLRLRLRRRRRRRLRLRRRLRLRRRLRRRRRLRLRLRLRRRRRLRRRLRLRLRLRRRRRRRLRLRLRRRLRRRRRRLLLRLRRRRRRRRRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRRRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRRRRRRRLRLRLRLRLRRRRRRRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRRLLLRLRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRLRLRLRLRLRLRLRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRRRLRLRLRLRLRLRLRRRRRRRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRL"
    },
    {
        "number": 3609,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3609,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n\"\"\") == 'LLRRRRLL'\nassert solution(\n\"\"\"1\n1\n\"\"\") == 'impossible'\n"
    },
    {
        "number": 3609,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRRRRLL'\nassert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 4\n''') == 'impossible'\nassert solution('''4\n1 2\n2 3\n1 3\n3 4\n1 4\n''') == 'impossible'\nassert solution('''3\n1 2\n2 3\n1 3\n1 2\n''') == 'LLRL'\nassert solution('''3\n1 2\n2 3\n1 3\n''') == 'LR'\n"
    },
    {
        "number": 3610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2011'\nassert solution(stdin) == '1009'"
    },
    {
        "number": 3610,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\n\"\"\""
    },
    {
        "number": 3610,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1009 2011\") == \"2011\"\nassert solution(\"1017 2011\") == \"2011\"\nassert solution(\"11100 11\") == \"1010\"\nassert solution(\"11010 11\") == \"1010\"\nassert solution(\"1010 1000\") == \"1000\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11') == '11'\nassert solution('11 13') == '11'\nassert solution('2 4') == '1'\nassert solution('2 8') == '1'\nassert solution('2 4 5') == '1'\n"
    },
    {
        "number": 3610,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1009 2011\n1017 2011\n''') == '1'\nassert solution('''2\n1009 2011\n1017 2011\n1010 2011\n1008 2011\n1011 2011\n1012 2011\n1009 2011\n1017 2011\n1010 2011\n1011 2011\n1012 2011\n''') == '1017'\nassert solution('''4\n1010 1012 1014 1016\n1011 1013 1015 1017\n1012 1014 1015 1018\n1013 1015 1019 1011\n1014 1016 1018 1010\n''') == '1017'\nassert solution('''8\n1010 1017 1012 1014 1015 1011 1013\n1016 1018 1010 1012 1019 1011\n1011 1019 1012 1017 1014 1015\n1013 1017 1015 1011 1019 1013\n1015 1019 1010 1011 1017 1012\n1011 1017 1012 1013 1014 1016\n1015 1017 1016 1014 1012 1010\n''') == '1017'\nassert solution('''15\n1001 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1010 1011 1012 1013 101"
    },
    {
        "number": 3610,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n1009 2011\n1017 2011''') == '1', \"solution(\"'''2\n1009 2011\n1017 2011''')\"\nassert solution('''3\n1234 1234\n5678 5678\n1 1\n''') == '3', \"solution(\"'''3\n1234 1234\n5678 5678\n1 1''')\"\n'''\n1\n1\n2\n2\n3\n3\n'''"
    },
    {
        "number": 3610,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 3610,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n1009 2011\n1017 2011\n''') == '1\\n2011'\n\nassert solution('''6\n1009 2011\n1017 2011\n200 10\n1001 11\n1002 1001\n1003 1002\nSample Output:\n1\n2011\n1009\n1002\n1003\n''') == '1\\n1009\\n1002\\n1003'\n"
    },
    {
        "number": 3610,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 11\\n1 11\\n2 11\\n3 11\") == \"1\\n\"\nassert solution(\"0 11\\n1 11\\n2 11\\n3 11\\n4 11\\n5 11\") == \"2\\n\"\nassert solution(\"0 11\\n1 11\\n2 11\\n3 11\\n4 11\\n5 11\\n6 11\") == \"4\\n\"\nassert solution(\"0 11\\n1 11\\n2 11\\n3 11\\n4 11\\n5 11\\n6 11\\n7 11\") == \"5\\n\"\nassert solution(\"0 11\\n1 11\\n2 11\\n3 11\\n4 11\\n5 11\\n6 11\\n7 11\\n8 11\") == \"6\\n\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 4') == '0 3'\nassert solution('1 2 3') == '0 1'\nassert solution('0 1 3') == '0'\nassert solution('2 3 4') == '0 1'\nassert solution('0 1 2 3 4') == '0 1'\n"
    },
    {
        "number": 3611,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution(\n'''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '1 3'\nassert solution(\n'''5 5\n0 1 100\n0 2 100\n0 3 100\n1 4 100\n2 4 100\n0 4\n''') == '0 1'\nassert solution(\n'''7 10\n0 1 100\n0 2 100\n1 2 100\n1 3 100\n2 3 100\n3 4 100\n4 5 100\n5 6 100\n6 7 100\n0 7\n''') == '0 4'\nassert solution(\n'''7 10\n0 1 100\n0 2 100\n1 2 100\n1 3 100\n2 3 100\n3 4 100\n4 5 100\n5 6 100\n6 7 100\n0 7\n''') == '2 4'\n"
    },
    {
        "number": 3611,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3''') == '0 3'\nassert solution('''3 2\n0 1 100\n0 2 100\n1 2 100''') == '1 2'\nassert solution('''2 3\n0 1 100\n0 2 100''') == '0 1'\nassert solution('''2 2\n0 1 100\n0 2 100''') == '0 1'\nassert solution('''1 1\n0 1 100''') == '0'\n"
    },
    {
        "number": 3611,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\\\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n'''\n"
    },
    {
        "number": 3611,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(f\"Correctly solved {test_cases} cases\")\n"
    },
    {
        "number": 3611,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 3\\n4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100') == '0 3'\nassert solution('0 3\\n1 2 1\\n0 3 1\\n1 2 1\\n0 3 1\\n2 3 1\\n0 3') == '0 3'\nassert solution('0 3\\n0 4 5\\n0 1 10\\n0 2 10\\n1 3 10\\n1 4 10\\n2 3 10\\n2 4 10\\n3 4 10') == '0 1 2 3 4'\nassert solution('0 3\\n0 4 5\\n0 1 10\\n0 2 10\\n1 3 10\\n1 4 10\\n2 3 10\\n2 4 10\\n3 4 10') == '0 1 2 3 4'\nassert solution('0 3\\n1 2 1\\n0 3 1\\n1 2 1\\n0 3 1\\n2 3 1\\n0 3 1\\n1 2 1\\n0 3 1\\n2 3 1\\n0 3 1') == '0 1 2 3 4'\n"
    },
    {
        "number": 3611,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3''') == '0 3'\nassert solution('''0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3''') == '0 3'\nassert solution('''0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3''') == '0 3'\nassert solution('''0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3''') == '0 3'\nassert solution('''0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3''') == '0 3'\n"
    },
    {
        "number": 3611,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution('''0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution('''0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n'''\n"
    },
    {
        "number": 3611,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n\nassert solution('''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '1 0 2 3'\n\nassert solution('''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '1 0 2 3'\n\nassert solution('''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n0 0\n''') == '0 0'\n\nassert solution('''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n0 0\n1 1\n''') == '0 0 1'"
    },
    {
        "number": 3611,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2\\n0 3') == '0 3'\nassert solution('1 2\\n1 3') == '0 3'\nassert solution('1 2\\n0 3') == '0 3'\nassert solution('1 2\\n1 3') == '0 3'\nassert solution('2 3\\n0 1 100\\n0 3 100\\n1 2 100\\n1 3 100') == '0 3'\n"
    },
    {
        "number": 3612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\nassert solution('3.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '8'\nassert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\nassert solution('3.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '8'\nassert solution('1.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '1'\n"
    },
    {
        "number": 3612,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\nassert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\nassert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\nassert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\nassert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3612,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"20\"\nassert solution(input()) == \"20\"\nassert solution(input()) == \"20\"\n\n-----Test Plan----\n1. Run your test case and make sure all lines of the output match your expectation.\n2. Run your test case and make sure all lines of output match the sample case.\n3. Run your test case and make sure all lines of output match the sample case.\n\"\"\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5 6 7') == '1'\nassert solution('2 1 3 4 5 6 7') == '2'\nassert solution('1 2 3 4 5 6 7') == '3'\nassert solution('1 2 3 4 5 6 7') == '4'\nassert solution('1 2 3 4 5 6 7') == '5'\n"
    },
    {
        "number": 3612,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"sample.in\").read()) == \"20\"\n\"\"\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\n\nassert solution('0.1 5.5\\n3 1 2 3 4\\n7 6 5 4 3\\n2 2 2 2 2\\n1 1 1 1 1\\n0 0 0 0 0') == '1.0'\n\nassert solution('0.1 5.5\\n3 1 2 3 4\\n7 6 5 4 3\\n2 2 2 2 2\\n1 1 1 1 1\\n0 0 0 0 0') == '1.0'\n\nassert solution('0.1 5.5\\n3 1 2 3 4\\n7 6 5 4 3\\n2 2 2 2 2\\n1 1 1 1 1\\n0 0 0 0 0') == '1.0'\n\nassert solution('0.1 5.5\\n3 1 2 3 4\\n7 6 5 4 3\\n2 2 2 2 2\\n1 1 1 1 1\\n0 0 0 0 0') == '1.0'"
    },
    {
        "number": 3612,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '20'\nassert solution('''1.0 10.0\n2 2 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '0'\nassert solution('''1.0 10.0\n2 2 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '0'\nassert solution('''0.0 10.0\n10 10 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '0'\nassert solution('''0.0 10.0\n1 1 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '0'\n"
    },
    {
        "number": 3612,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"18\"\nassert stdin == \"\"\"[stdin]\n2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n[stdout]\n12\n[stderr]\n[]\n[stdin]\n3.0 10.0\n2 2 0 0\n2000 1000 100\n2001 10000 200\n100 0 0\n\"\"\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\nassert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\nassert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\nassert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\nassert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\n"
    },
    {
        "number": 3613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''0\n2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3613,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0\n2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n''') == '4'\nassert solution('''0\n2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n1 1 1 1 1 1\n''') == '0'\nassert solution('''0\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '2'\nassert solution('''0\n2 1 2 1 2 2\n1 2 1 2 1 2\n1 2 1 2 1 2\n2 1 1 2 1 2\n1 2 1 2 1 2\n1 2 1 2 1 2\n''') == '0'\nassert solution('''0\n2 1 2 1 2 2\n1 2 1 2 1 2\n1 2 1 2 1 2\n2 1 1 2 1 2\n1 2 1 2 1 2\n1 2 1 2 1 2\n''') == '2'\n"
    },
    {
        "number": 3613,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n''') == '4'\n\nassert solution('''\n5\n1 1 2 3 4\n2 1 2 3 4\n3 1 2 3 4\n4 1 2 3 4\n1 1 2 3 4\n2 1 2 3 4\n''') == '3'\n\nassert solution('''\n11\n1 1 2 3 4 5 6 7 8 9 10\n1 1 2 3 4 5 6 7 8 9 10\n1 1 2 3 4 5 6 7 8 9 10\n1 1 2 3 4 5 6 7 8 9 10\n1 1 2 3 4 5 6 7 8 9 10\n1 1 2 3 4 5 6 7 8 9 10\n1 1 2 3 4 5 6 7 8 9 10\n1 1 2 3 4 5 6 7 8 9 10\n1 1 2 3 4 5 6 7 8 9 10\n1 1 2 3 4 5 6 7 8 9 10\n1 1 2 3 4 5 6 7 8 9 10\n''') == '3'\n\nassert solution('''\n10\n3 3 2 2 1 1 1 1 1 1 1\n3 3 2 2 1 1 1 1 1 1 1\n3 3 2 2 1 1 1 1 1 1 1\n3 3 2 2 1 1 1 1 1 1 1\n3 3 2 2 1 1 1 1 1 1 1\n3 3 2 2 1 1 1 1 1 1 1\n3 3 2 2 1 1 1 1 1 1 1\n3 3 2 2 1 1 1 1 1 1 1\n3 3 2 2 1 1 1 1 1 1 1\n3 3 2 2 1 1 1 1 1 1 1\n3 3 2 2 1 1 1 1 1 1 1\n''') == '2'\n\nassert solution('''\n12\n0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '2'"
    },
    {
        "number": 3613,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4'\nassert solution('2\\n1 2\\n2 1') == '0'\nassert solution('10\\n0 1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '0'\nassert solution('100\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '0'\nassert solution('1000\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '0'\n"
    },
    {
        "number": 3613,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n0 1 2 3 4 5 6\n0 1 2 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3613,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 1 2 3 4 5 6\") == \"4\"\nassert solution(\"0 1 2 3 4 5 6\") == \"4\"\nassert solution(\"0 1 2 3 4 5 6\") == \"4\"\nassert solution(\"0 1 2 3 4 5 6\") == \"4\"\nassert solution(\"0 1 2 3 4 5 6\") == \"4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0\\n3 2 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\"\nassert solution(\"2\\n0 0\\n1 1\\n1 2\\n2 1\") == \"1\"\nassert solution(\"3\\n0 0 0\\n1 1 1\\n2 2 2\\n1 1 1\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n1 1 1 1\\n2 2 2 2\\n1 1 1 1\") == \"1\"\nassert solution(\"5\\n0 0 0 0 0\\n1 1 1 1 1\\n2 2 2 2 2\\n1 1 1 1 1\\n1 1 1 1 1\") == \"3\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n''') == '4'\nassert solution('''4\n0 1 2 3 4\n1 2 3 4 0\n2 3 4 0 1\n3 4 0 1 2\n''') == '3'\nassert solution('''10\n0 1 2 3 4 5 6 7 8 9 10\n0 1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10 0\n2 3 4 5 6 7 8 9 10 0 1\n3 4 5 6 7 8 9 10 0 1 2\n4 5 6 7 8 9 10 0 1 2 3\n5 6 7 8 9 10 0 1 2 3 4\n6 7 8 9 10 0 1 2 3 4 5\n7 8 9 10 0 1 2 3 4 5 6\n8 9 10 0 1 2 3 4 5 6 7\n9 10 0 1 2 3 4 5 6 7 8\n10 0 1 2 3 4 5 6 7 8 9\n''') == '7'\nassert solution('''10\n0 1 2 3 4 5 6 7 8 9 10\n0 1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10 0\n2 3 4 5 6 7 8 9 10 0 1\n3 4 5 6 7 8 9 10 0 1 2\n4 5 6 7 8 9 10 0 1 2 3\n5 6 7 8 9 10 0 1 2 3 4\n6 7 8 9 10 0 1 2 3 4 5\n7 8 9 10 0 1 2 3 4 5 6\n8 9 10 0 1 2 3 4 5 6 7\n9 10 0 1 2 3 4 5 6 7 8\n10 0 1 2 3 4 5 6 7 8 9\n''') == '7'\nassert solution('''10\n0 1 2 3 4 5 6 7 8 9 10\n0 1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10 0\n2 3 4 5 6 7 8 9 10 0 1\n3 4 5 6 7 8 9 10 0 1 2\n4 5 6 7 8 9 10 0 1 2 3\n5 6 7 8 9 10 0 1 2 3 4\n6 7 8 9 10 0 1 2 3 4 5\n7 8 9 10 0 1 2 3 4 5 6\n8 9 10 0 1 2 3 4 5 6 7\n9 10 0 1 2 3 4 5 6 7 8\n10 0 1 2 3 4 5 6 7 8 9\n''') == '8'\n"
    },
    {
        "number": 3613,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2 3 4 5 6\n1 1 2 3 4 5\n2 1 2 3 4 5\n1 1 2 3 4 5\n''') == '4'\nassert solution('''\n4\n1 2 3 4 5 6\n1 1 2 3 4 5\n2 1 2 3 4 5\n1 1 2 3 4 5\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5 6\n2 1 2 3 4 5\n1 1 2 3 4 5\n1 1 2 3 4 5\n2 1 2 3 4 5\n''') == '0'\n'''"
    },
    {
        "number": 3613,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2 3\n3 1\n''') == '4'\nassert solution('''\n7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n2 1 3 4 5 6 7\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6\n2 1 2 3 4 5 6\n1 1 2 3 4 5 6"
    },
    {
        "number": 3614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'\nassert solution('1\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'\nassert solution('1\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'\nassert solution('1\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'\nassert solution('2\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '3'\n"
    },
    {
        "number": 3614,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n3\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n7\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8\n6 7 8 9\n\"\"\"\n) == \"8\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nassert solution('2\\n1 1\\n1 2') == '2'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6') == '4'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1 1') == '1'\n"
    },
    {
        "number": 3614,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\n"
    },
    {
        "number": 3614,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\"\"\") == 4\nassert solution(\"\"\"4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\"\"\") == 4\nassert solution(\"\"\"6\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8\"\"\") == 6\nassert solution(\"\"\"10\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8\n6 7 8 9\n7 8 9 10\"\"\") == 10\nassert solution(\"\"\"12\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8\n6 7 8 9\n7 8 9 10\n8 9 10 11\n9 10 11 12\"\"\") == 12\n"
    },
    {
        "number": 3614,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6') == 4\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 9 10 11') == 9\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 9 10 11\\n12 13 14 15') == 9\n"
    },
    {
        "number": 3614,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nassert solution('3\\n1 1\\n1 2\\n1 3\\n2 3') == '1'\nassert solution('2\\n1 1\\n1 2\\n1 3') == '1'\nassert solution('2\\n1 1\\n1 2\\n1 3') == '2'\nassert solution('2\\n1 1\\n1 2\\n1 3\\n2 3') == '3'\n"
    },
    {
        "number": 3614,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n\"\"\") == \"4\"\nassert solution(\"\"\"4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n\"\"\") == \"4\"\nassert solution(\"\"\"8\n3 4\n2 4 5 6 7 8\n3 5 6 7 8 9\n4 5 6 7 8 9\n5 6 7 8 9 1\n6 7 8 9 1 2\n7 8 9 1 2 3\n8 9 1 2 3 4\n\"\"\") == \"9\"\nassert solution(\"\"\"4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n\"\"\") == \"15\"\nassert solution(\"\"\"10\n4 5 6 7 8 9 1 2 3 4 5 6 7 8 9\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"16\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('2\\n1 1\\n1 2') == 2\nassert solution('3\\n2 2\\n1 1') == 3\nassert solution('4\\n2 2\\n2 2\\n2 2') == 1\nassert solution('5\\n3 3\\n3 3\\n3 3\\n3 3') == 3\n"
    },
    {
        "number": 3614,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('2\\n1 1\\n1 2') == 2\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6') == 4\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('1\\n1') == 1\n"
    },
    {
        "number": 3615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\n'''\n"
    },
    {
        "number": 3615,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1 1 1\") == \"\"\nassert solution(\"1 1 1 1 1 1\") == \"\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 3615,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3615,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1''') == '6'\n\nassert solution('''7\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0''') == '8'\n\nassert solution('''100\n1.0 1.0\n2.0 1.0\n3.0 1.0\n4.0 1.0\n5.0 1.0\n6.0 1.0\n7.0 1.0\n8.0 1.0\n9.0 1.0\n10.0 1.0\n11.0 1.0\n12.0 1.0\n13.0 1.0\n14.0 1.0\n15.0 1.0\n16.0 1.0\n17.0 1.0\n18.0 1.0\n19.0 1.0\n20.0 1.0\n21.0 1.0\n22.0 1.0\n23.0 1.0\n24.0 1.0\n25.0 1.0\n26.0 1.0\n27.0 1.0\n28.0 1.0\n29.0 1.0\n30.0 1.0\n31.0 1.0\n32.0 1.0\n33.0 1.0\n34.0 1.0\n35.0 1.0\n36.0 1.0\n37.0 1.0\n38.0 1.0\n39.0 1.0\n40.0 1.0\n41.0 1.0\n42.0 1.0\n43.0 1.0\n44.0 1.0\n45.0 1.0\n46.0 1.0\n47.0 1.0\n48.0 1.0\n49.0 1.0\n50.0 1.0\n51.0 1.0\n52.0 1.0\n53.0 1.0\n54.0 1.0\n55.0 1.0\n56.0 1.0\n57.0 1.0\n58.0 1.0\n59.0 1.0\n60.0 1.0\n61.0 1.0\n62.0 1.0\n63.0 1.0\n64.0 1.0\n65.0 1.0\n66.0 1.0\n67.0 1.0\n68.0 1.0\n69.0 1.0\n70.0 1.0\n71.0 1.0\n72.0 1.0\n73.0 1.0\n74.0 1.0\n75.0 1.0\n76.0 1.0\n77.0 1.0\n78.0 1.0\n79.0 1.0\n80.0 1.0\n81.0 1.0\n82.0 1.0\n83.0 1.0\n84.0 1.0\n85.0 1.0\n86.0 1.0\n87.0 1.0\n88.0 1.0\n89.0 1.0\n90.0 1.0\n91.0 1.0\n92.0 1.0\n93.0 1.0\n94.0 1.0\n95.0 1.0\n96.0 1.0\n97.0 1.0\n98.0 1.0\n99.0 1.0\n100.0 1.0''') == '95'\n\nassert solution('''1\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n"
    },
    {
        "number": 3615,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1''') == '6'\n\nassert solution('''2\n1.0 1.0\n1.0 1.0\n1.0 1.0''') == '1'\n\nassert solution('''1000\n1.0 1.0\n3.1 1.0\n2.0 3.1\n4.0 3.1\n3.1 3.1\n5.0 3.1\n4.0 2.0\n3.1 2.0\n5.0 2.0\n6.0 2.0\n6.0 2.0\n7.0 2.0\n8.0 2.0\n7.0 2.0\n6.0 2.0\n5.0 2.0\n4.0 2.0\n4.0 2.0\n3.1 2.0\n4.0 2.0\n3.0 3.0\n3.1 3.0\n3.2 3.1\n2.0 3.1\n2.0 3.1\n3.0 3.0\n3.0 3.0\n3.0 3.0\n2.0 3.0\n2.0 3.0\n3.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n2.0 3.0\n"
    },
    {
        "number": 3615,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n5.5 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\\n2.0 3.1\\n3.0 3.1\\n4.0 3.1') == '6'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n5.5 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\\n2.0 3.1\\n3.0 3.1\\n4.0 3.1') == '6'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n5.5 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\\n2.0 3.1\\n3.0 3.1\\n4.0 3.1') == '6'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n5.5 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\\n2.0 3.1\\n3.0 3.1\\n4.0 3.1') == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1.0 1.0\\n2.0 1.0') == '3'\nassert solution('1\\n1.0 1.0') == '2'\nassert solution('1\\n0.0 0.0\\n0.0 0.0') == '1'\nassert solution('4\\n1.0 1.0\\n0.0 1.0\\n1.0 1.0\\n3.0 1.0') == '3'\nassert solution('2\\n1.0 1.0\\n0.0 1.0\\n0.0 1.0') == '2'\n"
    },
    {
        "number": 3615,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3615,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6'\nassert solution('''\n5\n1.0 1.0\n2.1 1.0\n1.0 2.1\n2.1 2.1\n3.2 2.1\n''') == '5'\nassert solution('''\n5\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0\n''') == '1'\nassert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '5'\nassert solution('''\n4\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n''') == '5'\n"
    },
    {
        "number": 3616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '6'\nassert solution('2 2') == '12'\nassert solution('2 3') == '24'\nassert solution('2 4') == '32'\nassert solution('2 5') == '50'\n"
    },
    {
        "number": 3616,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3616,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n2\n2\n2''') == \"2\"\nassert solution('''3\n1\n1\n1''') == \"1\"\nassert solution('''3\n2\n1\n1''') == \"1\"\nassert solution('''3\n3\n2\n1''') == \"3\"\n'''\n"
    },
    {
        "number": 3616,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n2\n2\n2\n2''') == '5'\nassert solution('''2\n3\n2\n2''') == '3'\nassert solution('''5\n1\n1\n1\n1\n1''') == '6'\nassert solution('''5\n5\n5\n5\n5''') == '12'\nassert solution('''5\n5\n5\n5\n5''') == '15'\n"
    },
    {
        "number": 3616,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n2\\n2\\n3\\n3\\n3\") == \"1\\n2\\n3\"\nassert solution(\"1\\n2\\n2\\n3\\n3\\n3\") == \"1\\n2\\n3\"\nassert solution(\"1\\n2\\n3\\n3\\n4\\n4\\n4\") == \"1\\n2\\n3\\n4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"1\\n2\\n3\\n4\\n6\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"1\\n2\\n3\\n4\\n6\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2\n2\n2''') == '5'\nassert solution('''1\n2\n3\n4\n5''') == '4'\nassert solution('''3\n1\n2\n2\n2\n2\n2''') == '10'\nassert solution('''1\n1\n2\n2\n2\n2\n2\n2''') == '7'\nassert solution('''1\n1\n1\n1\n2\n2\n2\n2\n2''') == '5'\n"
    },
    {
        "number": 3616,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3616,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2\n2\n2''') == '5'\nassert solution('''3\n1\n1\n1''') == '1'\nassert solution('''4\n1\n1\n1\n1''') == '1'\nassert solution('''10\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2''') == '7'\nassert solution('''5\n2\n3\n2\n2\n2''') == '5'\n"
    },
    {
        "number": 3616,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3''') == '1'\nassert solution('''1\n2\n3\n4\n5''') == '4'\nassert solution('''1\n2\n3\n4\n5\n6\n7''') == '5'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8''') == '4'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '2'\n"
    },
    {
        "number": 3617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\"\"\"\nNote: pikemaneasy contains all the solutions.\n\nHowever, for this question, we need to test if this is actually a good idea.\n\npikemaneasy also has some really nice observations:\n- the limit is N, and we have one pikeman\n- the time limit is C, and we have as many pikemen as the time limit allows\n- we know that the pikeman is good at approximating the number of minutes required for solving the first problem, and thus has a constraint on the number of problems.\n\nThe first observation is obvious: it shows that we may have more problems if we do not include the last one. \n\n- The penalty is zero for the first problem, and it is the highest of the penalties if we include the last one. \n\n- The penalty for the second problem is the highest if we include the last one.\n\nThe next observation is also obvious: we have a limit on the number of problems, and we don't know how many problems the pikeman will have, so we have to be careful.\n\n- First, we know that if we include the last one, we have to wait at least as long as the penalty for the first problem, but we have to include it last.\n- Second, if we include the last one, we have to wait at least as long as the penalty for the second problem, but we have to include it last.\n\nWe know that if we include the last one, we have to wait at least as long as the penalty for the second problem, and if we include the last one, we have to wait at least as long as the penalty for the first problem.\n\nSo, to simplify things, we can say that if we include the last one, we don't need to wait at all.\n\nIf we don't include the last one, we have to wait at least as long as the penalty for the first problem, and the same thing for the second problem.\n\nThe last observation is also obvious: we know that if we include the last one, we don't need to wait at all.\n\nThe last observation is also obvious: we know that if we include the last one, we don't need to wait at all.\n\n\"\"\"\n\nimport sys\nsys.path.append('..')\nfrom utils.pikemaneasy import *"
    },
    {
        "number": 3617,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 3617,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1 1\"\nassert solution(\"1 2 2 3\") == \"1 1\"\nassert solution(\"2 2 3 3\") == \"2 1\"\nassert solution(\"1 2 2 3\") == \"2 1\"\n\"\"\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 3\n2 2 2 1''') == '1 1'\nassert solution('''1 3\n2 2 2 1''') == '1 1'\nassert solution('''1 3\n2 3 2 1''') == '2 1'\nassert solution('''1 3\n2 3 2 1''') == '2 1'\nassert solution('''1 3\n3 3 3 1''') == '3 1'\n"
    },
    {
        "number": 3617,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2 3 1\n1 2 2 1''') == '1 1'\nassert solution('''3\n1 3 2 1\n1 2 2 1''') == '2 3'\nassert solution('''10\n10000000 1 1 1 1 1 1 1 1 1\n10000000 1 1 1 1 1 1 1 1 1''') == '1 1'\nassert solution('''3\n10000000 1 1 1\n10000000 1 1 1''') == '2 2'\nassert solution('''3\n10000000 1 1 1\n10000000 1 1 1''') == '0 0'\n"
    },
    {
        "number": 3617,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_stream('''1 3\n2 2 2 1''')) == '1 1'\nassert solution(input_stream('''1 3\n2 2 2 1''')) == '1 1'\nassert solution(input_stream('''2 3\n1 1 1 1\n1 2 2 1''')) == '2 1'\nassert solution(input_stream('''1 10\n1 2 2 3 4 5 6 7 8 9 10\n7 9 2 1''')) == '4 1'\nassert solution(input_stream('''1 10\n1 2 2 3 4 5 6 7 8 9 10\n9 8 2 1''')) == '1 1'\n"
    },
    {
        "number": 3617,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"3\n3\n2 2 2 1\n\"\"\") == '1 1'\nassert solution(\n\"\"\"3\n3\n2 2 2 1\n\"\"\") == '1 1'\nassert solution(\n\"\"\"5\n6\n1 3 1 2 2\n\"\"\") == '4 3'\nassert solution(\n\"\"\"7\n8\n2 6 6 6 1\n\"\"\") == '2 1'\nassert solution(\n\"\"\"7\n8\n2 6 6 6 1\n\"\"\") == '4 2'\n"
    },
    {
        "number": 3617,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(solution) == '1 1'\nassert solution(solution) == '1 0'\nassert solution(solution) == '0 0'\nassert solution(solution) == '0 1'\nassert solution(solution) == '0 1'\n"
    },
    {
        "number": 3617,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_solution.txt\", \"r\").read()) == \"1 1\"\nassert solution(open(\"test_solution_2.txt\", \"r\").read()) == \"4 5\"\nassert solution(open(\"test_solution_3.txt\", \"r\").read()) == \"1 1\"\nassert solution(open(\"test_solution_4.txt\", \"r\").read()) == \"1 3\"\nassert solution(open(\"test_solution_5.txt\", \"r\").read()) == \"1 2\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1'\nassert solution('2 2 2 1\\n1 2 1 3 1') == '3 2'\nassert solution('2 2 2 1\\n2 2 1 1 1') == '0 2'\nassert solution('2 2 2 1\\n2 1 1 3 2') == '1 1'\nassert solution('2 2 2 1\\n2 2 1 3 1') == '3 2'\n"
    },
    {
        "number": 3618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3618,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '10'\nassert solution('1') == '10'\nassert solution('10') == '10'\nassert solution('100') == '10'\nassert solution('1000') == '10'\n"
    },
    {
        "number": 3618,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 10\nassert solution('1') == 10\nassert solution('2') == 10\nassert solution('3') == 10\nassert solution('4') == 10\n"
    },
    {
        "number": 3618,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '1\\n') == '10'\nassert solution(\n    '10\\n') == '10'\nassert solution(\n    '100\\n') == '50'\nassert solution(\n    '1000\\n') == '40'\nassert solution(\n    '10000\\n') == '20'\n"
    },
    {
        "number": 3618,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\"\n\"\"\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('8') == '1'\nassert solution('9') == '2'\nassert solution('123') == '3'\nassert solution('34') == '1'\n"
    },
    {
        "number": 3618,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '10'\nassert solution('1\\n1') == '10'\nassert solution('2') == '0'\nassert solution('4') == '20'\nassert solution('6') == '0'\n"
    },
    {
        "number": 3618,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"20\"\nassert solution(\"3\") == \"30\"\nassert solution(\"4\") == \"40\"\nassert solution(\"5\") == \"50\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 10\nassert solution('1') == 10\nassert solution('10') == 70\nassert solution('100') == 1310\nassert solution('1000') == 16390\n"
    },
    {
        "number": 3618,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('123456789') == '10'\nassert solution('123456789123456789') == '10'\nassert solution('10001') == '10'\nassert solution('12345') == '4'\nassert solution('1234512345') == '4'\n"
    },
    {
        "number": 3619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.000\"\nassert solution(stdin) == \"0.001\"\nassert solution(stdin) == \"0.002\"\nassert solution(stdin) == \"0.003\"\nassert solution(stdin) == \"0.004\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 1 0\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n"
    },
    {
        "number": 3619,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n1 2\n1000 1 0\n1 1000 1\n''') == '0.001'\nassert solution(\n    '''\n1 2\n100 1 0\n1 100 1\n''') == '0.006'\nassert solution(\n    '''\n1 2\n100 1000 1\n1 100 1000\n''') == '0.0033'\nassert solution(\n    '''\n1 2\n100 1000 1\n1 100 1000\n''') == '0.0033'\nassert solution(\n    '''\n1 2\n100 1000 1\n1 100 1000\n100 100 100\n1 100 1\n''') == '0.0033'\n"
    },
    {
        "number": 3619,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1000 1 0\\n1 1000 1') == '0.001'\nassert solution('10 2\\n1000 1 0\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1') == '0.06'\nassert solution('3 1\\n1000 1 0\\n1 1000 1\\n1 1000 1\\n1 1000 1') == '0.2'\nassert solution('10 1\\n1000 1 0\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1\\n1 1000 1') == '0.01'\nassert solution('4 1\\n1000 1 0\\n1 1000 1\\n1 1000 1\\n1 1000 1') == '0.2'\n"
    },
    {
        "number": 3619,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 1 0\\n1 1000 1\\n1 1 1\\n1 1 0\\n1 0 1\\n1 0 0') == '0.5'\nassert solution('1 2\\n1000 1 0\\n1 1000 1\\n1 1 1\\n1 1 0\\n1 0 1\\n1 0 0') == '1.0'\n"
    },
    {
        "number": 3619,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.001\"\n\n-----Theory-----\n* https://en.wikipedia.org/wiki/Test_scores\n* https://en.wikipedia.org/wiki/Test_scores#Test_scores_in_computer_games\n* https://en.wikipedia.org/wiki/Score_(in_computer_games)\n* https://en.wikipedia.org/wiki/Evaluation_of_candidates_for_a_team\n\"\"\""
    },
    {
        "number": 3619,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"0.001\"\n\nassert solution(\"2 1\") == \"0.001\"\n\nassert solution(\"2 2\") == \"0.002\"\n\nassert solution(\"1 1\") == \"0.001\"\n\nassert solution(\"1 10000000 10000000 1\") == \"0.00001\""
    },
    {
        "number": 3619,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0') == '0.0000'\nassert solution('1 2') == '0.0000'\nassert solution('2 2') == '0.2000'\nassert solution('1 1') == '0.3333'\nassert solution('0 0') == '0.0000'\n"
    },
    {
        "number": 3619,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '0.001'\nassert solution('1 2\\n1000 1 0') == '0.001'\nassert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001'\n'''"
    },
    {
        "number": 3619,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.001'\nassert solution('1 2') == '0.001'\nassert solution('1 2 3') == '0.002'\nassert solution('1 2 3 4 5') == '0.002'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '0.003'\n"
    },
    {
        "number": 3620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 3 2 10000\n1 2\n2 3\n3 1''') == '0'\nassert solution(\n'''3 3 2 10000\n1 2\n2 3\n3 1''') == '0'\nassert solution(\n'''3 3 2 10000\n1 2\n2 3\n3 1\n2 1\n3 2''') == '1'\nassert solution(\n'''3 3 2 10000\n1 2\n2 3\n3 1\n1 2''') == '0'\nassert solution(\n'''3 3 2 10000\n1 2\n2 3\n3 1\n1 2\n2 1\n3 2''') == '1'\n"
    },
    {
        "number": 3620,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3620,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n545\\n546\\n547\\n548\\n549\\n550\\n551\\"
    },
    {
        "number": 3620,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\") == 0\nassert solution(\"2 3\\n3 1\\n1 2\") == 0\nassert solution(\"2 3\\n3 1\\n1 2\\n2 1\") == 1\nassert solution(\"2 3\\n3 1\\n1 2\\n2 1\\n1 3\") == 0\nassert solution(\"2 3\\n3 1\\n1 2\\n2 1\\n1 3\\n2 1\") == 0\n"
    },
    {
        "number": 3620,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n''') == '0'\nassert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n3 3 1\n2 2\n1 1\n1 3\n3 2\n2 1\n''') == '0'\nassert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n3 3 1\n2 2\n1 1\n1 3\n3 2\n2 1\n2 2\n2 3\n1 1\n3 3\n3 2\n1 1\n''') == '4'\nassert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n3 3 1\n2 2\n1 1\n1 3\n3 2\n2 1\n2 2\n2 3\n1 1\n3 3\n3 2\n1 1\n''') == '4'\nassert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n3 3 1\n2 2\n1 1\n1 3\n3 2\n2 1\n2 2\n2 3\n1 1\n3 3\n3 2\n1 1\n''') == '8'\n"
    },
    {
        "number": 3620,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 3 2 10000\n1 2\n2 3\n3 1\"\"\") == \"0\"\nassert solution(\"\"\"3 3 2 10000\n1 2\n2 3\n3 1\"\"\") == \"0\"\nassert solution(\"\"\"3 3 2 10000\n1 2\n2 3\n3 1\"\"\") == \"0\"\nassert solution(\"\"\"3 3 2 10000\n1 2\n2 3\n3 1\"\"\") == \"0\"\nassert solution(\"\"\"3 3 2 10000\n1 2\n2 3\n3 1\"\"\") == \"0\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3 2 10000\n1 2\n2 3\n3 1''') == '0'\nassert solution('''5 5 4 1000\n1 1\n1 3\n1 4\n2 3\n2 4\n3 4''') == '0'\nassert solution('''4 5 5 1\n1 2\n2 3\n3 4\n4 5''') == '2'\nassert solution('''7 4 2 200\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 1\n2 2\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7''') == '0'\nassert solution('''15 6 1 1000\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n9 1\n9 2\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n9 11\n9 12\n9 13\n9 14\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n10 11\n10 12\n10 13\n10 14\n11 1\n11 2\n11 3\n11 4\n11 5\n11 6\n11 7\n11 8\n11 9\n11 10\n11 11\n11 12\n11 13\n11 14\n12 1\n12 2\n12 3\n12 4\n12 5\n12 6\n12 7\n12 8\n12 9\n12 10\n12 11\n12 12\n12 13\n12 14\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n13 13\n13 14\n14 1\n14 2\n14 3\n14 4\n14 5\n14 6\n14 7\n14 8\n14 9\n14 10\n14 11\n14 12\n14 13\n14 14''') == '4'\n"
    },
    {
        "number": 3620,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n''') == '0'\nassert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n1 1\n2 2\n3 3\n''') == '1'\nassert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n1 1\n2 2\n3 3\n1 3\n''') == '0'\nassert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n1 1\n2 2\n3 3\n1 2\n2 3\n3 1\n''') == '0'\nassert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n1 1\n2 2\n3 3\n1 3\n1 1\n1 1\n2 2\n3 3\n1 2\n2 3\n3 1\n''') == '0'\n"
    },
    {
        "number": 3621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '26'\n'''\n"
    },
    {
        "number": 3621,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n4\\n1 2 2 2\\n2 3 0 3\\n1 3 2 0\\n2 1 3\\n1 2') == 26\nassert solution('2\\n5\\n1 2 3 4 5\\n2 3 4 5 0\\n3 4 5 0 1\\n4 5 0 1 2\\n5 0 1 2 3\\n1') == 4\nassert solution('5\\n1 2 3 4 5\\n2 3 4 5 0\\n3 4 5 0 1\\n4 5 0 1 2\\n5 0 1 2 3\\n1') == 4\nassert solution('2\\n5\\n1 2 3 4 5\\n2 3 4 5 0\\n3 4 5 0 1\\n4 5 0 1 2\\n5 0 1 2 3\\n1') == 4\nassert solution('5\\n1 2 3 4 5\\n2 3 4 5 0\\n3 4 5 0 1\\n4 5 0 1 2\\n5 0 1 2 3\\n1') == 4\n"
    },
    {
        "number": 3621,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n\") == 26\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n2 3 1 0\\n\") == 29\nassert solution(\"5\\n0 1 1 1 1\\n1 0 2 2 2\\n1 2 0 3 3\\n1 2 3 0 0\\n2 3 0 1 1\\n3 0 1 2 2\\n\") == 46\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n2 3 1 0\\n3 1 2 0\\n\") == 29\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n2 3 0 1\\n3 0 1 2\\n3 2 1 0\\n\") == 46\n"
    },
    {
        "number": 3621,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n'''\n) == 26\n\nassert solution(\n'''\n6\n0 1 1 1 1 1\n1 0 2 2 2 2\n1 2 0 3 3 3\n1 2 3 0 4 4\n1 2 3 4 0 5\n1 2 3 5 0 0\n'''\n) == 32\n\nassert solution(\n'''\n6\n0 1 1 1 1 1\n1 0 2 2 2 2\n1 2 0 3 3 3\n1 2 3 0 4 4\n1 2 3 4 0 5\n1 2 3 5 0 0\n'''\n) == 28\n\nassert solution(\n'''\n8\n0 1 1 1 1 1 1 1\n1 0 2 2 2 2 2 2\n1 2 0 3 3 3 3 3\n1 2 3 0 4 4 4 4\n1 2 3 4 0 5 5 5\n1 2 3 5 0 0 0 0\n1 2 3 5 0 0 0 0\n1 2 3 5 0 0 0 0\n'''\n) == 34\n\nassert solution(\n'''\n5\n0 1 1 1 1\n1 0 2 2 2\n1 2 0 3 3\n1 2 3 0 4\n1 2 3 4 0\n'''\n) == 26"
    },
    {
        "number": 3621,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == '26'\nassert solution('3\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == '26'\nassert solution('2\\n0 1 1\\n1 0 2') == '0'\nassert solution('1\\n0 1') == '0'\nassert solution('3\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == '26'\n"
    },
    {
        "number": 3621,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == '26'\nassert solution('2\\n0 2\\n1 1') == '0'\nassert solution('3\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n0 1 1 1\\n2 1 0 2') == '3'\nassert solution('3\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n0 1 1 1\\n2 1 0 2\\n2 1 1 1') == '5'\nassert solution('3\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n0 1 1 1\\n2 1 0 2\\n2 1 1 1\\n2 1 1 1') == '5'\n"
    },
    {
        "number": 3621,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == 26\nassert solution(\n'''2\n1 2\n2 1''') == 12\nassert solution(\n'''3\n1 2\n2 3\n3 2\n''') == 19\nassert solution(\n'''10\n0 1 2 3 4 5 6 7 8 9\n2 3 4 5 6 7 8 9 0 1\n3 4 5 6 7 8 9 0 1 2\n4 5 6 7 8 9 0 1 2 3\n5 6 7 8 9 0 1 2 3 4\n6 7 8 9 0 1 2 3 4 5\n7 8 9 0 1 2 3 4 5 6\n8 9 0 1 2 3 4 5 6 7\n9 0 1 2 3 4 5 6 7 8\n''') == 235\nassert solution(\n'''20\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 0 1\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 0 1 2\n4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 0 1 2 3\n5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 0 1 2 3 4\n6 7 8 9 10 11 12 13 14 15 16 17 18 19 0 1 2 3 4 5\n7 8 9 10 11 12 13 14 15 16 17 18 19 0 1 2 3 4 5 6\n8 9 10 11 12 13 14 15 16 17 18 19 0 1 2 3 4 5 6 7\n9 10 11 12 13 14 15 16 17 18 19 0 1 2 3 4 5 6 7 8\n10 11 12 13 14 15 16 17 18 19 0 1 2 3 4 5 6 7 8 9\n11 12 13 14 15 16 17 18 19 0 1 2 3 4 5 6 7 8 9 10\n12 13 14 15 16 17 18 19 0 1 2 3 4 5 6 7 8 9 10 11\n13 14 15 16 17 18 19 0 1 2 3 4 5 6 7 8 9 10 11 12\n14 15 16 17 18 19 0 1 2 3 4 5 6 7 8 9 10 11 12 13\n15 16 17 18 19 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\n16 17 18 19 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n17 18 19 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n18 19 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n19 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n''') == 53\n"
    },
    {
        "number": 3621,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n\"\"\") == \"26\"\nassert solution(\n\"\"\"\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n\"\"\") == \"26\"\nassert solution(\n\"\"\"\n3\n0 1 1\n1 0 2\n1 2 0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n5\n0 1 1 1 1\n1 0 2 2 2\n1 2 0 3 3\n1 2 3 0 4\n1 2 3 4 0\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n') == 26\nassert solution('1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2"
    },
    {
        "number": 3621,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == 26\nassert solution('''3\n0 1 1\n1 0 2\n1 2 0\nSample Output:\n2\nassert solution('''3\n0 1 1\n1 0 2\n1 2 0\n''') == 2\nassert solution('''2\n0 1\n1 0\nSample Output:\n0\nassert solution('''2\n0 1\n1 0\n''') == 0\n"
    },
    {
        "number": 3622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4\n4 4 4 4\n''') == 'T.T'\nassert solution('''1 2 3 4\n10 10 10 10\n''') == 'TTTTTTTTT'\nassert solution('''1 2 3 4\n10 10 10 10\n''') == 'TTTTTTTTT'\nassert solution('''2 3 4 5\n10 10 10 10\n''') == 'T.T'\nassert solution('''10 10 10 10\n''') == 'T.T'\n"
    },
    {
        "number": 3622,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3622,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1\n20 20 20 40\nX.X\nT.T''') == '0.333333333'\nassert solution('''3 3\n20 30 10 30\nT.T.T.T\nT.T.T.T\n.X.X.X.\nT.T.T.T''') == '0.3333333333333333333333333333333333333333333333333333333333333333'\nassert solution('''5 5\n50 60 30 10 10\nT.T.T.T\nX.X.X.X\nX.X.X.X\nT.T.T.T''') == '1.0'\nassert solution('''10 10\n50 60 30 10 10\nT.T.T.T\nX.X.X.X\nT.T.T.T\nX.X.X.X\nT.T.T.T\nX.X.X.X\nT.T.T.T''') == '0.11111111111111111111111111111111111111111111111111111111111111111111'\nassert solution('''10 10\n50 60 30 10 10\nT.T.T.T\nX.X.X.X\nT.T.T.T\nX.X.X.X\nT.T.T.T\nX.X.X.X\nT.T.T.T''') == '0.11111111111111111111111111111111111111111111111111111111111111111111'\n"
    },
    {
        "number": 3622,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 3622,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n20 20 20 40\\n.X\\nT.T') == '0.33333333333333333333333333'\nassert solution('1 1\\n100 100 100 100\\n.X\\nX') == '0.3333333333333333333333333333'\nassert solution('2 2\\n20 20 10 40\\nX.X\\n.T') == '0.500000000000000\\n0.500000000000000'\n\"\"\""
    },
    {
        "number": 3622,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2\n20 20 20 40\nX.X\nT.T''') == '0.3333333333333333'\nassert solution('''3 2\n20 20 20 40\nX.X\nT.T\n0 0 0 0''') == '0.3333333333333333'\nassert solution('''3 2\n20 20 20 40\n.X.\n.T.\n0 0 0 0''') == '0.3333333333333333'\nassert solution('''3 2\n20 20 20 40\n.X.\n.T.\n0 0 0 0''') == '0.3333333333333333'\nassert solution('''3 2\n20 20 20 40\n.X.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T.\n.T"
    },
    {
        "number": 3622,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333333333\\n0.666666666666667'\n\"\"\""
    },
    {
        "number": 3622,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.33333333333\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 2\n20 20 20 40\nX.X\nT.T\n\"\"\") == \"\"\"\n0.33333333\n0.6666666667\n\"\"\"\n\nimport sys\nfrom math import log10, floor\n"
    },
    {
        "number": 3622,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n20 20 20 40\nX.X\nT.T''') == '0.333333333'\nassert solution('''3 2\n20 20 20 40\nX.X\nX.X\nT.T''') == '0.3333333333333333'\nassert solution('''3 2\n20 20 20 40\nX.X\nX.X\nX.X''') == '0'\nassert solution('''3 2\n20 20 20 40\nX.X\nX.X\nX.X\nT.T\nT.T\nT.T\n
    },
    {
        "number": 3623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('10 10 10 10') == '1.0'\nassert solution('-10 -10 10 10') == '0.0'\nassert solution('40 40 10 10') == '0.75'\nassert solution('-40 -40 10 10') == '0.0'\n"
    },
    {
        "number": 3623,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('45 45 -1 0') == '0.5'\nassert solution('45 45 -2 0') == '0.25'\nassert solution('45 45 0 0') == '0.75'\nassert solution('45 45 1 0') == '0.75'\n"
    },
    {
        "number": 3623,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('45 45 0 0.05') == '0.7064'\nassert solution('-45 45 0 0') == '0.0'\nassert solution('45 45 0 0.00000005') == '0.0116'\nassert solution('0 45 0 0.001') == '0'\n"
    },
    {
        "number": 3623,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.75'\n"
    },
    {
        "number": 3623,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.75\"\n\"\"\"\n\nimport sys\nfrom math import cos, sin, pi"
    },
    {
        "number": 3623,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '0.75'\nassert solution(input()) == '0.75'\nassert solution(input()) == '0.75'\nassert solution(input()) == '0.75'\nassert solution(input()) == '0.75'\n"
    },
    {
        "number": 3623,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''45 45 0 0''') == '0.75'\nassert solution('''36 36 0 0''') == '0.55'\nassert solution('''36 39 0 0''') == '0.48'\nassert solution('''36 36 40 0''') == '0.47'\nassert solution('''36 36 39 40''') == '0.47'\n"
    },
    {
        "number": 3623,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 3623,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n45 45 0 0\n\"\"\") == \"0.75\"\n\nassert solution(\n\"\"\"\n42 22 50 10\n\"\"\") == \"0.8\"\n\nassert solution(\n\"\"\"\n0 60 0 60\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n90 90 0 60\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n0 90 0 90\n\"\"\") == \"0\""
    },
    {
        "number": 3623,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('1545 0 0 0') == '0.875'\nassert solution('1545 1545 0 0') == '0.875'\nassert solution('1545 1545 0 0') == '0.875'\nassert solution('1545 1545 1545 0') == '0.875'\n"
    },
    {
        "number": 3624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\") == \"8\"\nassert solution(\"3\\n1 2 3\\n1 3 1\\n2 3 3\") == \"6\"\nassert solution(\"7\\n5 2 3\\n1 5 3\\n2 4 1\\n2 3 1\\n1 3 2\\n3 1 6\\n3 2 5\\n4 3 1\\n4 3 2\\n4 5 5\") == \"9\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == '4'\nassert solution('''0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\nassert solution('''0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\nassert solution('''0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\nassert solution('''0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\n"
    },
    {
        "number": 3624,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == '4'\nassert solution('''0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == '4'\nassert solution('''0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == '4'\nassert solution('''0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == '4'\nassert solution('''0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == '4'\n"
    },
    {
        "number": 3624,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == \"4\"\nassert solution('''1 1 1\n1 2 1\n1 3 1\n2 1 1\n2 2 1\n2 3 1\n3 1 1''') == \"2\"\nassert solution('''10 1000\n0 0 1\n0 1 1\n0 2 1\n0 3 1\n0 4 1\n0 5 1\n0 6 1\n0 7 1\n0 8 1\n0 9 1\n0 10 1\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n2 3 2\n2 4 2\n2 5 2\n2 6 2\n2 7 2\n2 8 2\n2 9 2\n2 10 2\n3 4 3\n3 5 3\n3 6 3\n3 7 3\n3 8 3\n3 9 3\n3 10 3\n4 5 4\n4 6 4\n4 7 4\n4 8 4\n4 9 4\n4 10 4\n5 6 5\n5 7 5\n5 8 5\n5 9 5\n5 10 5\n6 7 6\n6 8 6\n6 9 6\n6 10 6\n7 8 7\n7 9 7\n7 10 7\n8 9 8\n8 10 8\n9 10 9\n10 11 10\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n2 3 2\n2 4 2\n2 5 2\n2 6 2\n2 7 2\n2 8 2\n2 9 2\n2 10 2\n3 4 3\n3 5 3\n3 6 3\n3 7 3\n3 8 3\n3 9 3\n3 10 3\n4 5 4\n4 6 4\n4 7 4\n4 8 4\n4 9 4\n4 10 4\n5 6 5\n5 7 5\n5 8 5\n5 9 5\n5 10 5\n6 7 6\n6 8 6\n6 9 6\n6 10 6\n7 8 7\n7 9 7\n7 10 7\n8 9 8\n8 10 8\n9 10 9\n10 11 10\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n2 3 2\n2 4 2\n2 5 2\n2 6 2\n2 7 2\n2 8 2\n2 9 2\n2 10 2\n3 4 3\n3 5 3\n3 6 3\n3 7 3\n3 8 3\n3 9 3\n3 10 3\n4 5 4\n4 6 4\n4 7 4\n4 8 4\n4 9 4\n4 10 4\n5 6 5\n5 7 5\n5 8 5\n5 9 5\n5 10 5\n6 7 6\n6 8 6\n6 9 6\n6 10 6\n7 8 7\n7 9 7\n7 10 7\n8 9 8\n8 10 8\n9 10 9\n10 11 10\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n2 3 2\n2 4 2\n2 5 2\n2 6 2\n2 7 2\n2 8 2\n2 9 2\n2 10 2\n3 4 3\n3 5 3\n3 6 3\n3 7 3\n3 8 3\n3 9 3\n3 10 3\n4 5 4\n4 6 4\n4 7 4\n4 8 4\n4 9 4\n4 10 4\n5 6 5\n5 7 5\n5 8 5\n5 9 5\n5 10 5\n6 7 6\n6 8 6\n6 9 6\n6 10 6\n7 8 7\n7 9 7\n7 10 7\n8 9 8\n8 10 8\n9 10 9\n10 11 10\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n2 3 2\n2 4 2\n2 5 2\n2 6 2\n2 7 2\n2 8 2\n2 9 2\n2 10 2\n3 4 3\n3 5 3\n3 6 3\n3 7 3\n3 8 3\n3 9 3\n3 10 3\n4 5 4\n4 6 4\n4 7 4\n4 8 4\n4 9 4\n4 10 4\n5 6 5\n5 7 5\n5 8 5\n5 9 5\n5 10 5\n6 7 6\n6 8 6\n6 9 6\n6 10 6\n7 8 7\n7 9 7\n7 10 7\n8 9 8\n8 10 8\n9 10 9\n10 11 10\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n2 3 2\n2 4 2\n2 5 2\n2 6 2\n2 7 2\n2 8 2\n2 9 2\n2 10 2\n3 4 3\n3 5 3\n3 6 3\n3 7 3\n3 8 3\n3 9 3\n3 10 3\n4 5 4\n4 6 4\n4 7 4\n4 8 4\n4 9 4\n4 10 4\n5 6 5\n5 7 5\n5 8 5\n5 9 5\n5 10 5\n6 7 6\n6 8 6\n6 9 6\n6 10 6\n7 8 7\n7 9 7\n7 10 7\n8 9 8\n8 10 8\n9 10 9\n10 11 10\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n2 3 2\n2 4 2\n2 5 2\n2 6 2\n2 7 2\n2 8 2\n2 9 2\n2 10 2\n3 4 3\n3 5 3\n3 6 3\n3 7 3\n3 8 3\n3 9 3\n3 10 3\n4 5 4\n4 6 4\n4 7 4\n4 8 4\n4 9 4\n4 10 4\n5 6 5\n5 7 5\n5 8 5\n5 9 5\n5 10 5\n6 7 6\n6 8 6\n6 9 6\n6 10 6\n7 8 7\n7 9 7\n7 10 7\n8 9 8\n8 10 8\n9 10 9\n10 11 10\n1 2 1\n1 3 1\n1 4 1\n1 5"
    },
    {
        "number": 3624,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open('test_input.txt').read()) == \"3\"\nprint(solution(open('input.txt').read()))\n\"\"\"\n\n\"\"\"\n---BEST---\n"
    },
    {
        "number": 3624,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\n\nassert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\n\nassert solution('''2 3\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '3'\n\nassert solution('''2 3\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '3'\n\nassert solution('''10 10\n0 1 2\n0 3 4\n1 2 5\n2 3 8\n3 4 9\n4 5 10\n5 6 10\n6 7 9\n7 8 9\n8 9 10\n9 10 11\n''') == '0'"
    },
    {
        "number": 3624,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == \"4\"\nassert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == \"4\"\nassert solution('''7 10\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n6 7 4\n6 8 3\n6 9 2\n7 8 1''') == \"17\"\nassert solution('''7 10\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n6 7 4\n6 8 3\n6 9 2\n7 8 1''') == \"17\"\nassert solution('''7 10\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n6 7 4\n6 8 3\n6 9 2\n7 8 1''') == \"17\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == '4'\nassert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n5 4 1\n3 4 8\n2 4 7\n1 4 6\n0 4 5''') == '10'\nassert solution('''8 7\n0 1 2\n0 3 4\n0 4 7\n0 5 6\n0 6 7\n0 7 8\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n2 3 4\n2 4 5\n2 5 6\n2 6 7\n2 7 8\n3 4 5\n3 5 6\n3 6 7\n3 7 8\n4 5 6\n4 5 7\n4 5 8\n4 6 7\n4 7 8\n4 8 9\n4 9 10\n4 10 11\n5 6 7\n5 7 8\n5 7 9\n5 7 10\n5 7 11\n5 8 9\n5 8 10\n5 8 11\n5 9 10\n5 9 11\n5 10 11\n6 7 8\n6 7 9\n6 7 10\n6 7 11\n6 8 9\n6 8 10\n6 8 11\n6 9 10\n6 9 11\n6 10 11\n7 8 9\n7 8 10\n7 8 11\n7 9 10\n7 9 11\n7 10 11\n8 9 10\n8 9 11\n8 10 11\n8 11 9\n8 11 10\n8 11 11\n9 10 11\n9 11 10\n9 11 11\n10 11 11\n''') == '8'\nassert solution('''3 10\n0 1 2\n0 2 3\n0 3 4\n0 4 5\n0 5 6\n0 6 7\n0 7 8\n0 8 9\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n2 3 4\n2 4 5\n2 5 6\n2 6 7\n2 7 8\n2 8 9\n3 4 5\n3 4 6\n3 4 7\n3 4 8\n3 4 9\n3 4 10\n3 4 11\n3 5 6\n3 5 7\n3 5 8\n3 5 9\n3 5 10\n3 5 11\n3 6 7\n3 6 8\n3 6 9\n3 6 10\n3 6 11\n3 7 8\n3 7 9\n3 7 10\n3 7 11\n3 8 9\n3 8 10\n3 8 11\n3 9 10\n3 9 11\n3 10 11\n4 5 6\n4 5 7\n4 5 8\n4 5 9\n4 5 10\n4 5 11\n4 6 7\n4 6 8\n4 6 9\n4 6 10\n4 6 11\n4 7 8\n4 7 9\n4 7 10\n4 7 11\n4 8 9\n4 8 10\n4 8 11\n4 9 10\n4 9 11\n4 10 11\n5 6 7\n5 6 8\n5 6 9\n5 6 10\n5 6 11\n5 7 8\n5 7 9\n5 7 10\n5 7 11\n5 8 9\n5 8 10\n5 8 11\n5 9 10\n5 9 11\n5 10 11\n6 7 8\n6 7 9\n6 7 10\n6 7 11\n6 8 9\n6 8 10\n6 8 11\n6 9 10\n6 9 11\n6 10 11\n7 8 9\n7 8 10\n7 8 11\n7 9 10\n7 9 11\n7 10 11\n8 9 10\n8 9 11\n8 10 11\n8 11 9\n8 11 10\n8 11 11\n9 10 11\n9 11 10\n9 11 11\n10 11 11\n''') == '0'\nassert solution('''4 4\n0 1 2\n0 3 4\n0 4 5\n0 5 6\n0 6 7\n0 7 8\n0 8 9\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 8 9\n2 3 4\n2 4 5\n2 5 6\n2 6 7\n2 7 8\n2 8 9\n3 4 5\n3 4 6\n3 4 7\n3 4 8\n3 4 9\n3 4 10\n3 4 11\n3 5 6\n3 5 7\n3 5 8\n3 5 9\n3 5 10\n3 5 11\n3 6 7\n3 6 8\n3 6 9\n3 6 10\n3 6 11\n3 7 8\n3 7 9\n3 7 10\n3 7 11\n3 8 9\n3 8 10\n3 8 11\n3 9 10\n3 9 11\n3 10 11\n4 5 6\n4 5 7\n4 5 8\n4 5 9\n4 5 10\n4 5 11\n4 6 7\n4 6 8\n4 6 9\n4 6 10\n4 6 11\n4 7 8\n4 7 9\n4 7 10\n4 7 11\n4 8 9\n4 8 10\n4 8 11\n4 9 10\n4 9 11\n4 10 11\n5 6 7\n5 6 8\n5 6 9\n5 6 10\n5 6 11\n5 7 8\n5 7 9\n5 7 10\n5 7 11\n5 8 9\n5 8 10\n5 8 11\n5 9 10\n5 9 11\n5 10 11\n6 7 8\n6 7 9\n6 7 10\n6 7 11\n6 8 9\n6 8 10\n6 8 11\n6 9 10\n6 9 11\n6 10 11\n7 8 9\n7 8 10\n7 8 11\n7 9 10\n7 9 11\n7 10 11\n8 9 10\n8 9 11\n8 10 11\n8 11 9\n8 11 10\n8 11 11\n9 10 11\n9 11 10\n9 11 11\n10 11 11\n''') == '8'\n"
    },
    {
        "number": 3624,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == '4'\nassert solution('4 5\\n0 1 3\\n0 2 4\\n0 3 2\\n1 2 1\\n2 3 3\\n2 4 4\\n3 4 5\\n3 4 3') == '1'\nassert solution('2 5\\n0 1 1\\n0 2 2\\n0 3 3\\n1 2 4\\n1 2 1\\n2 3 4\\n2 4 1') == '5'\nassert solution('1 1\\n0 1 1\\n0 2 2\\n0 3 3\\n1 2 4\\n1 2 1\\n2 3 4\\n2 4 1') == '1'\nassert solution('3 3\\n0 1 1\\n0 2 2\\n0 3 3\\n1 2 4\\n1 2 1\\n2 3 4\\n2 4 1') == '3'\n"
    },
    {
        "number": 3624,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == \"4\"\nassert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n5 0 1\n''') == \"4\"'''\nassert solution('''2 4\n0 1 2\n0 3 4\n1 2 5\n1 4 9''') == \"4\"\n\n---\n"
    },
    {
        "number": 3625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1\n10 10 0 5\n''') == '100'\n\nassert solution('''\n2\n10 10 0 5\n10 10 0 5\n''') == '100'\n\nassert solution('''\n3\n10 10 0 5\n10 10 0 5\n10 10 0 5\n''') == '100'\n\nassert solution('''\n4\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n''') == '100'\n\nassert solution('''\n5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n''') == '100'"
    },
    {
        "number": 3625,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"10 10 0 5\"\n) == \"100\"\n\nassert solution(\n    \"1 1 1 1\"\n) == \"0\"\n\nassert solution(\n    \"1 1 1 1\"\n) == \"0\"\n\nassert solution(\n    \"5 5 5 5\"\n) == \"25\"\n\nassert solution(\n    \"5 5 5 5\"\n) == \"25\""
    },
    {
        "number": 3625,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n10 10 0 5') == '100'\nassert solution('2\\n10 10 0 5') == '100'\nassert solution('3\\n10 10 0 5') == '100'\nassert solution('4\\n10 10 0 5') == '100'\nassert solution('5\\n10 10 0 5') == '100'\n"
    },
    {
        "number": 3625,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 10 0 5''') == '100'\nassert solution('''10 10 0 5''') == '100'\nassert solution('''100 10 0 5''') == '100'\nassert solution('''100 10 0 5''') == '100'\nassert solution('''100 10 0 5''') == '100'\n"
    },
    {
        "number": 3625,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''10 10 0 5\n''') == '100'\nassert solution(\n'''100 100 0 100\n''') == '1'\nassert solution(\n'''10 10 0 1\n''') == '1'\nassert solution(\n'''5\n1 0 0 2\n''') == '2'\nassert solution(\n'''10\n10 1 0 3\n''') == '5'\n"
    },
    {
        "number": 3625,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\nassert solution('abcde') == 'abcde'\n"
    },
    {
        "number": 3625,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Jack the Lumberjack used to love chopping down trees. Jack is getting older and is becoming tired of this activity he used to love. He thinks of an idea, \u2018The Big One\u2019, and fantasizes about going out into the forest one last time to harvest as many trees as possible.\\n10 10 0 5\\n10 10 0 5') == '100'\nassert solution('Jack the Lumberjack used to love chopping down trees. Jack is getting older and is becoming tired of this activity he used to love. He thinks of an idea, \u2018The Big One\u2019, and fantasizes about going out into the forest one last time to harvest as many trees as possible.\\n10 10 0 5\\n10 10 0 5') == '100'\nassert solution('Jack the Lumberjack used to love chopping down trees. Jack is getting older and is becoming tired of this activity he used to love. He thinks of an idea, \u2018The Big One\u2019, and fantasizes about going out into the forest one last time to harvest as many trees as possible.\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5') == '200'\nassert solution('Jack the Lumberjack used to love chopping down trees. Jack is getting older and is becoming tired of this activity he used to love. He thinks of an idea, \u2018The Big One\u2019, and fantasizes about going out into the forest one last time to harvest as many trees as possible.\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5') == '200'\nassert solution('Jack the Lumberjack used to love chopping down trees. Jack is getting older and is becoming tired of this activity he used to love. He thinks of an idea, \u2018The Big One\u2019, and fantasizes about going out into the forest one last time to harvest as many trees as possible.\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5') == '200'\n"
    },
    {
        "number": 3625,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 10 0 5''') == \"100\"\n'''"
    },
    {
        "number": 3625,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == \"100\"\n\"\"\"\nimport sys\nfrom functools import reduce"
    },
    {
        "number": 3625,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 10 0 5') == 100\nassert solution('4 4 0 1') == 200\nassert solution('4 4 0 10') == 500\nassert solution('4 4 0 100') == 800\nassert solution('4 4 0 1000') == 1000000\n"
    },
    {
        "number": 3626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\n'''"
    },
    {
        "number": 3626,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2') == 1\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n9 7 8 3\\n1 1 1 1') == 0\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n9 7 8 3\\n0 0 2 2') == 0\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n9 7 8 3\\n0 0 2 2\\n0 0 2 2') == 0\n"
    },
    {
        "number": 3626,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8') == '1'\nassert solution('0\\n0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8') == '0'\nassert solution('0\\n0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == '0'\nassert solution('0\\n0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15') == '1'\nassert solution('0\\n0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20') == '0'\n"
    },
    {
        "number": 3626,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0 2 2\n1 1 3 4\n5 7 6 8''') == '1'\nassert solution('''10\n2 0 2 10\n8 9 10 11\n4 7 6 8''') == '1'\nassert solution('''10\n2 0 2 10\n8 9 10 11\n4 7 6 8''') == '0'\nassert solution('''10\n2 0 2 10\n8 9 10 11\n4 7 6 8\n0 0 1 1\n5 6 7 8\n10 9 10 11\n4 7 6 8''') == '1'\nassert solution('''10\n2 0 2 10\n8 9 10 11\n4 7 6 8\n0 0 1 1\n5 6 7 8\n10 9 10 11\n4 7 6 8\n5 4 4 5\n4 0 0 4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '0'\n"
    },
    {
        "number": 3626,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '1'\nassert solution('''3''') == '1'\nassert solution('''3''') == '1'\nassert solution('''4''') == '0'\nassert solution('''9''') == '0'\n"
    },
    {
        "number": 3626,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3626,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0 2 2\n1 1 3 4\n5 7 6 8''') == '1'\nassert solution('''0 0 2 2\n1 1 3 4\n2 0 1 4\n5 7 6 8''') == '0'\nassert solution('''0 0 2 2\n1 1 3 4\n1 0 3 4\n5 7 6 8''') == '1'\nassert solution('''0 0 2 2\n1 1 3 4\n1 0 3 4\n5 7 6 8\n0 0 2 2\n1 1 3 4\n1 0 3 4\n5 7 6 8''') == '0'\nassert solution('''0 0 2 2\n1 1 3 4\n2 0 1 4\n5 7 6 8\n0 0 2 2\n1 1 3 4\n1 0 3 4\n5 7 6 8\n0 0 2 2\n1 1 3 4\n1 0 3 4\n5 7 6 8''') == '1'\n"
    },
    {
        "number": 3626,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n') == '1'\nassert solution('1 1 3 4\\n0 0 2 2\\n5 7 6 8\\n') == '0'\nassert solution('1 1 3 4\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n') == '1'\nassert solution('1 1 3 4\\n0 0 2 2\\n1 1 3 4\\n0 0 2 2\\n5 7 6 8\\n') == '0'\nassert solution('1 1 3 4\\n0 0 2 2\\n1 1 3 4\\n1 1 3 4\\n5 7 6 8\\n') == '1'\n"
    },
    {
        "number": 3626,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8') == '1'\nassert solution('1 1 3 4\\n0 0 2 2\\n5 7 6 8') == '1'\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n2 2 2 2\\n3 3 4 4') == '0'\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n3 2 2 2\\n1 3 4 4') == '0'\nassert solution('1 1 3 4\\n0 0 2 2\\n5 7 6 8') == '1'\n"
    },
    {
        "number": 3627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \"E E E E E\\n\"\n    \"1 2 3 4 5\\n\"\n    \"5 4 3 2 1\\n\"\n    \"-2 -2 -2 -2 -2\\n\"\n    \"8 8 8 8 8\\n\"\n    \"9 9 9 9 9\\n\"\n    \"S S S S S\"\n) == 17\n\nassert solution(\n    \"3 5\\n\"\n    \"E E E E E\\n\"\n    \"1 2 3 4 5\\n\"\n    \"5 4 3 2 1\\n\"\n    \"-2 -2 -2 -2 -2\\n\"\n    \"8 8 8 8 8\\n\"\n    \"9 9 9 9 9\\n\"\n    \"S S S S S\"\n) == 0\n\nassert solution(\n    \"3 5\\n\"\n    \"S S S S S\\n\"\n    \"9 9 9 9 9\"\n) == 0\n\nassert solution(\n    \"5 5\\n\"\n    \"E E E E E\\n\"\n    \"1 2 3 4 5\\n\"\n    \"5 4 3 2 1\\n\"\n    \"-2 -2 -2 -2 -2\\n\"\n    \"8 8 8 8 8\\n\"\n    \"9 9 9 9 9\\n\"\n    \"S S S S S\"\n) == 0\n\nassert solution(\n    \"3 5\\n\"\n    \"S S S S\\n\"\n    \"9 9 9 9 9\"\n) == 0"
    },
    {
        "number": 3627,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"3 3\\n2 1 2\\n4 3 2\\n5 5 5 5\\n6 7 2\\nS S S S S\") == \"9\"\nassert solution(\"3 3\\n2 1 2\\n4 3 2\\n5 5 5 5\\n6 7 2\\n4 8 5\\n7 4 2\\nS S S S S\") == \"16\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n5 5 5 5 5\\n6 7 2\\n1 7 3\\n8 5 2\\n4 2 5\\n1 1 5\\nS S S S S\") == \"22\"\nprint(\"Success.\")\n"
    },
    {
        "number": 3627,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'\nassert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'\nassert solution('3 3\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '8'\nassert solution('3 3\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '8'\nassert solution('4 2\\n1 1 1 1 1\\n2 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n2 1 1 1 1\\n1 1 1 1 1') == '0'\n"
    },
    {
        "number": 3627,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\"\"\") == \"17\"\nassert solution(\n\"\"\"3 3\nA A A A\n1 2 3 4\n5 6 7 8\nS S S\nS S\n1 1 1 1\n1 1 1 1\nS S\nSample Output:\n0\n"
    },
    {
        "number": 3627,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"17\"\n\n\"\"\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'\nprint('Test successful!')\n"
    },
    {
        "number": 3627,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '5 5\\n'\n    'E E E E E\\n'\n    '1 2 3 4 5\\n'\n    '5 4 3 2 1\\n'\n    '-2 -2 -2 -2 -2\\n'\n    '8 8 8 8 8\\n'\n    '9 9 9 9 9\\n'\n    'S S S S S'\n) == '17'\n\nassert solution(\n    '1 2\\n'\n    '3 4\\n'\n) == '0'\n\nassert solution(\n    '1 2\\n'\n    '3 4\\n'\n) == '0'\n\nassert solution(\n    '5 5\\n'\n    'E E E E E\\n'\n    '1 2 3 4 5\\n'\n    '5 4 3 2 1\\n'\n    '-2 -2 -2 -2 -2\\n'\n    '8 8 8 8 8\\n'\n    '9 9 9 9 9\\n'\n    'S S S S S'\n) == '5'\n"
    },
    {
        "number": 3627,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2\\nE E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '0'\nassert solution('3 3\\nE E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '5'\nassert solution('4 2\\nE E E E\\n-2 -2 -2 -2\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '3'\nassert solution('5 3\\nE E E E E\\n-2 -2 -2 -2 -2\\n1 2 3 4 5 5\\n5 4 3 2 1 1\\n-2 -2 -2 -2 -2 -2\\n8 8 8 8 8 8\\n9 9 9 9 9 9\\nS S S S S S') == '5'\nassert solution('4 2\\nE E E E\\n1 1 1 1 1\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '5'\n"
    },
    {
        "number": 3627,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 3627,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(stdin)) == stdin[36:52]\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 2 3 1 1''') == \"impossible\"\nassert solution('''5\n3 2 3 1 1\n3 2 1 3 1''') == \"1 4 3 5 2\"\nassert solution('''5\n3 2 3 1 1\n1 2 3 4 5''') == \"2 3 5 1 4\"\nassert solution('''5\n2 2 2 2 2''') == \"impossible\"\nassert solution('''5\n1 1 1 1 1\n1 1 1 1 1''') == \"1 4 3 5 2\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n3 2 3 1 1\n''') == '1 4 3 5 2'\n\nassert solution('''\n4\n1 2 3 4\n''') == 'impossible'\n\nassert solution('''\n7\n1 2 3 4 5 6 7\n''') == '1 2 4 5 6 7'\n\nassert solution('''\n5\n7 6 2 3 1\n''') == '1 4 3 5 2'\n\nassert solution('''\n6\n1 2 3 4 5 6 7\n''') == 'impossible'"
    },
    {
        "number": 3628,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 3 1 1') == 'impossible'\nassert solution('5 3 2 1') == '1 4 3 5 2'\nassert solution('4 2 3 1') == '1 2 3 4'\nassert solution('6 2 3 1') == '1 2 4 3'\nassert solution('6 3 2 1') == '1 2 4 3'\n"
    },
    {
        "number": 3628,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3 2 3 1 1''') == '1 4 3 5 2'\nassert solution('''5\n1 2 3 4 5\n5 1 2 3 4''') == 'impossible'\nassert solution('''5\n3 2 3 1 1\n1 2 3 4 5''') == '1 4 3 5 2'\nassert solution('''6\n3 2 3 1 1 6\n2 3 6 1 5 4''') == '1 4 3 5 2'\nassert solution('''7\n3 2 3 1 1 7\n2 3 6 1 5 4''') == 'impossible'\n"
    },
    {
        "number": 3628,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 2') == 'impossible'\nassert solution('3\\n1 2 3') == 'impossible'\nassert solution('3\\n1 1 1') == 'impossible'\nassert solution('3\\n1 2 3') == 'impossible'\nassert solution('3\\n1 1 1') == '1 4 3 5 2'\n"
    },
    {
        "number": 3628,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1 4 3 5 2\"\nassert solution(stdin) == \"2 3 5 1 4\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 3 1 1') == '1 4 3 5 2'\nassert solution('5 5 5 5 5') == 'impossible'\nassert solution('5 5 5 5 1') == '1 4 3 5 2'\nassert solution('5 5 5 5 1') == '1 4 3 5 2'\nassert solution('5 4 4 4 4') == '1 4 3 5 2'\n"
    },
    {
        "number": 3628,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3 2 3 1 1''') == '1 4 3 5 2'\nassert solution('''5\n2 1 3 1 1''') == 'impossible'\nassert solution('''3\n1 2 3''') == 'impossible'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '2 3 5 1 4'\n'''\nimport sys\nfrom math import pow, gcd\n"
    },
    {
        "number": 3628,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n3 2 3 1 1\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"\n5\n3 2 4 1 1\n\"\"\") == \"1 4 3 5 2\"\nassert solution(\n\"\"\"\n10\n4 3 1 4 1 5 2 3 3 1\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"\n10\n4 3 4 3 3 4 2 1 2\n\"\"\") == \"1 4 3 5 2\"\nassert solution(\n\"\"\"\n3\n1 3 3\n\"\"\") == \"1 3\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n2 3 1 1\\n') == '1 4 3 5 2'\nassert solution('4\\n1 1 1 1\\n') == 'impossible'\nassert solution('3\\n1 1 1 1\\n') == '1 3 5 4 2'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1\\n') == '1 3 5 4 2'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1\\n') == '1 3 5 4 2'\n"
    },
    {
        "number": 3629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.76772047\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n1\n3 0 1\n1 4\n''') == '0.76772047'\n'''"
    },
    {
        "number": 3629,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n3\n0 0 1\n1 4\n''') == '0.76772047'\nassert solution('''\\\n5\n0 0 1\n2 4\n3 4\n2 2\n1 2\n''') == '0.47368421052631576'\nassert solution('''\\\n5\n1 0 1\n2 4\n3 4\n2 2\n1 2\n''') == '0.47368421052631576'\nassert solution('''\\\n5\n1 2 1\n2 4\n3 4\n2 2\n1 2\n''') == '0.625'\nassert solution('''\\\n5\n2 2 1\n2 4\n3 4\n2 2\n1 2\n''') == '0.625'\n"
    },
    {
        "number": 3629,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"1\"\"\") == \"0.76772047\"\nassert solution(\n\"\"\"3\n3 0 1\n1 4\n2 4\"\"\"\n) == \"0.76772047\"\nassert solution(\n\"\"\"1\n5 0 1\n2 3\n2 3\n3 3\"\"\"\n) == \"0.01\"\nassert solution(\n\"\"\"5\n5 0 1\n4 1\n4 1\n1 2\n1 2\"\"\"\n) == \"0.01\"\nassert solution(\n\"\"\"10\n10 0 1\n2 3\n1 3\n1 3\n2 3\n1 2\n1 2\n2 3\n1 3\n1 3\"\"\"\n) == \"1.0\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n3 2 1\\n1 4') == '0.66356182'\nassert solution('1\\n3 3 1\\n1 4') == '0.2'\nassert solution('1\\n3 4 1\\n1 4') == '0.2'\nassert solution('1\\n3 4 1\\n1 4') == '0.2'\n"
    },
    {
        "number": 3629,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n1\n3 0 1\n1 4\n''') == '0.76772047'\nassert solution('''\n1\n3 0 1\n1 4\n''') == '0.76772047'\nassert solution('''\n2\n1 3 1\n1 4\n''') == '0.30'\nassert solution('''\n2\n2 4\n1 3 1\n1 4\n''') == '0.45'\nassert solution('''\n2\n2 4\n1 4\n''') == '0.45'\n"
    },
    {
        "number": 3629,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''1\n3 0 1\n1 4\n''') == \"0.76772047\"\n\nassert solution(\n'''2\n3 0 2\n1 4\n2 3\n''') == \"0.06142657\"\n\nassert solution(\n'''3\n3 0 3\n1 4\n2 3\n3 2\n''') == \"0.06142657\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n2 3\n3 4\n4 5\n0 1\n1 10''') == '0.76772047'\n'''\n"
    },
    {
        "number": 3629,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n0\n2 0 1\n1 4\n''') == '0.76772047'\nassert solution('''\n1\n5 0 1\n5 5\n''') == '0.25'\nassert solution('''\n2\n5 0 1\n10 4\n''') == '0.5'\nassert solution('''\n3\n1 5 2\n2 3\n3 2\n''') == '1'\nassert solution('''\n3\n1 4 4\n2 4\n3 4\n''') == '1/3'\n"
    },
    {
        "number": 3629,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.76772047\"\n\"\"\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hello teams') == '1 3'\nassert solution('bbdddbbbbb') == '2 4'\nassert solution('hello zofka') == '1 3'\nassert solution('hello teams') == '1 3'\nassert solution('bbdddbbbbb') == '2 4'\n"
    },
    {
        "number": 3630,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello world') == '8'\nassert solution('zzz aa') == '1'\nassert solution('abcd abcd abcd') == '4'\nassert solution('aababaa') == '5'\n"
    },
    {
        "number": 3630,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('hello teams') == '1+2+3=5'\nassert solution('bbdddbbbb') == '1+2+1=4'\nassert solution('teams') == '1+1+3=4'\nassert solution('lol') == '3+1+3=5'\nassert solution('coding') == '3+1+3+1=6'\n"
    },
    {
        "number": 3630,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"bbbbbbbbbb\") == \"3\"\nassert solution(\"ddddbbbbbb\") == \"2\"\nassert solution(\"helmp\") == \"1\"\nassert solution(\"teamp\") == \"0\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"hello teams\") == 27\nassert solution(\"bbb\") == 3\nassert solution(\"bbb\") == 3\nassert solution(\"hhe\") == 3\nassert solution(\"helmet\") == 3\n"
    },
    {
        "number": 3630,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"hello world\") == \"11\"\nassert solution(\"hello world hello\") == \"3\"\nassert solution(\"pwwkew\") == \"3\"\nassert solution(\"bbb\") == \"0\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hello teams') == '27'\nassert solution('bbbdddbbbb') == '3'\nassert solution('hello world') == '11'\n'''\n"
    },
    {
        "number": 3630,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''hello world''') == 27\nassert solution('''hello nus\n''') == 27\nassert solution('''hwwwwdhwyw\n''') == 2\nassert solution('''bbbbb\n''') == 3\nassert solution('''hwwwwdhwyw\n''') == 2\n"
    },
    {
        "number": 3630,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''hello teams''') == '27'\nassert solution('''bbdddbbbb''') == '3'\nassert solution('''hello zzz''') == '5'\nassert solution('''pqrstuvwxyz''') == '14'\nassert solution('''bbdddbbbb''') == '3'\n"
    },
    {
        "number": 3630,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('hello teams') == '27'\nassert solution('a z a a a') == '3'\nassert solution('bbaaab') == '2'\nassert solution('bbbbaaab') == '1'\nassert solution('bbbbbaaab') == '0'\n"
    },
    {
        "number": 3631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n8\\n5\\n4\\n7\\n7\\n9\\n2\\n16\\n6\\n17\\n10\\n4\\n7\\n2\\n6\\n3\\n1\\n12\\n6\\n3\") == \"2\"\nassert solution(\"1\\n8\\n5\\n4\\n7\\n7\\n9\\n2\\n16\\n6\\n17\\n10\\n4\\n7\\n2\\n6\\n3\\n1\\n12\\n6\\n3\") == \"2\"\nassert solution(\"1\\n8\\n5\\n4\\n7\\n7\\n9\\n2\\n16\\n6\\n17\\n10\\n4\\n7\\n2\\n6\\n3\\n1\\n12\\n6\\n3\") == \"2\"\nassert solution(\"1\\n8\\n5\\n4\\n7\\n7\\n9\\n2\\n16\\n6\\n17\\n10\\n4\\n7\\n2\\n6\\n3\\n1\\n12\\n6\\n3\") == \"2\"\nassert solution(\"1\\n8\\n5\\n4\\n7\\n7\\n9\\n2\\n16\\n6\\n17\\n10\\n4\\n7\\n2\\n6\\n3\\n1\\n12\\n6\\n3\") == \"2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3''') == '2'\n\nassert solution('''1 3\n2 1\n''') == '0'\n\nassert solution('''1 1\n1 1\n''') == '0'\n\nassert solution('''1 1\n1 1\n''') == '1'\n\nassert solution('''1 1\n1 1\n1 1\n''') == '2'"
    },
    {
        "number": 3631,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1''') == '2'\nassert solution('''3 2\n1 2\n3 1\n5 5\n3 3\n1 1\n''') == '0'\nassert solution('''3 2\n1 2\n3 1\n5 5\n3 3\n1 1\n1 1\n2 1\n2 2\n1 1\n''') == '3'\nassert solution('''3 2\n1 2\n3 1\n5 5\n3 3\n1 1\n1 1\n2 1\n2 2\n1 1\n1 1\n''') == '0'\nassert solution('''4 1\n1 1\n2 1\n3 1\n4 1\n''') == '3'\n"
    },
    {
        "number": 3631,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1''') == '2'\nassert solution('''1 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n60 62\n60 63\n60 64\n60 65\n60 66\n60 67\n60 68\n60 69\n60 70\n60 71\n60 72\n60 73\n60 74\n60 75\n60 76\n60 77\n60 78\n60 79\n60 80\n60 81\n60 82\n60 83\n60 84\n60 85\n60 86\n60 87\n60 88\n60 89\n60 90\n60 91\n60 92\n60 93\n60 94\n60 95\n60 96\n60 97\n60 98\n60 99\n60 100\n60 101\n60 102\n60 103\n60 104\n60 105\n60 106\n60 107\n60 108\n60 109\n60 110\n60 111\n60 112\n60 113\n60 114\n60 115\n60 116\n60 117\n60 118\n60 119\n60 120\n60 121\n60 122\n60 123\n60 124\n60 125\n60 126\n60 127\n60 128\n60 129\n60 130\n60 131\n60 132\n60 133\n60 134\n60 135\n60 136\n60 137\n60 138\n60 139\n60 140\n60 141\n60 142\n60 143\n60 144\n60 145\n60 146\n60 147\n60 148\n60 149\n60 150\n60 151\n60 152\n60 153\n60 154\n60 155\n60 156\n60 157\n60 158\n60 159\n60 160\n60 161\n60 162\n60 163\n60 164\n60 165\n60 166\n60 167\n60 168\n60 169\n60 170\n60 171\n60 172\n60 173\n60 174\n60 175\n60 176\n60 177\n60 178\n60 179\n60 180\n60 181\n60 182\n60 183\n60 184\n60 185\n60 186\n60 187\n60 188\n60 189\n60 190\n60 191\n60 192\n60 193\n60 194\n60 195\n60 196\n60 197\n60 198\n60 199\n60 200\n60 201\n60 202\n60 203\n60 204\n60 205\n60 206\n60 207\n60 208\n60 209\n60 210\n60 211\n60 212\n60 213\n60 214\n60 215\n60 216\n60 217\n60 218\n60 219\n60 220\n60 221\n60 222\n60 223\n60 224\n60 225\n60 226\n60 227\n60 228\n60 229\n60 230\n60 231\n60 232\n60 233\n60 234\n60 235\n60 236\n60 237\n60 238\n60 239\n60 240\n60 241\n60 242\n60 243\n60 244\n60 245\n60 246\n60 247\n60 248\n60 249\n60 250\n60 251\n60 252\n60 253\n60 254\n60 255\n60 256\n60 257\n60 258\n60 259\n60 260\n60 261\n60 262\n60 263\n60 264\n60 265\n60 266\n60 267\n60 268\n60 269\n60 270\n60 271\n60 272\n60 273\n60 274\n60 275\n60 276\n60 277\n60 278\n60 279\n60 280\n60 281\n60 282\n60 283\n60 284\n60 285\n60 286\n60 287\n60 288\n60 289\n60 290\n60 291\n60 292\n60 293\n60 294\n60 295\n60 296\n60 297\n60 298\n60 299\n60 300\n60 301\n60 302\n60 303\n60 304\n60 305\n60 306\n60 307\n60 308\n60 309\n60 310\n60 311\n60 312\n60 313\n60 314\n60 315\n60 316\n60 317\n60 318\n60 319\n60 320\n60 321\n60 322\n60 323\n60 324\n60 325\n60 326\n60 327\n60 328\n60 329\n60 330\n60 331\n60 332\n60 333\n60 334\n60 335\n60 336\n60 337\n60 338\n60 339\n60 340\n60 341\n60 342\n60 343\n60 344\n60 345\n60 346\n60 347\n60 348\n60 349\n60 350\n60 351\n60 352\n60 353\n60 354\n60 355\n60 356\n60 357\n60 358\n60 359\n60 360\n60 361\n60 362\n60 363\n60 364\n60 365\n60 366\n60 367\n60 368\n60 369\n60 370\n60 371\n60 372\n60 373\n60 374\n60 375\n60 376\n60 377\n60 378\n60 379\n60 380\n60 381\n60 382\n60 383\n60 384\n60 385\n60 386\n60 387\n60 388\n60 389\n60 390\n60 391\n60 392\n60 393\n60 394\n60 395\n60 396\n60 397\n60 398\n60 399\n60 400\n60 401\n60 402\n60 403\n60 404\n60 405\n60 406\n60 407\n60 408\n60 409\n60 410\n60 411\n60 412\n60 413\n60 414\n60 415\n60 416\n60 417\n60 418\n60 419\n60 420\n60 421\n60 422\n60 423\n60 424\n60 425\n60 426\n60 427\n60 428\n60 429\n60 430\n60 431\n60 432\n60 433\n60 434\n60 435\n60 436\n60 437\n60 438\n60 439\n60 440\n60 441\n60 442\n60 443\n60 444\n60 445\n60 446\n60 447\n60 448\n60 449\n60 450\n60 451\n60 452\n60 453\n60 454\n60 455\n60 456\n60 457\n60 458\n60 459\n60 460\n60 461\n60 462\n60 463\n60 464\n60 465"
    },
    {
        "number": 3631,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3''') == \"2\"\nassert solution('''6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3''') == \"2\"\nassert solution('''1 10\n1 1''') == \"1\"\nassert solution('''1 10\n1 1''') == \"1\"\nassert solution('''1 10\n1 10''') == \"1\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == \"2\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == \"2\"\nassert solution(\"1 4\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\") == \"0\"\nassert solution(\"1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\") == \"1\"\nassert solution(\"1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\\n11 13\\n12 14\\n13 15\\n14 16\\n15 17\\n16 18\\n17 19\\n18 20\\n19 21\\n20 22\\n21 23\\n22 24\\n23 25\\n24 26\\n25 27\\n26 28\\n27 29\\n28 30\\n29 31\\n30 32\\n31 33\\n32 34\\n33 35\\n34 36\\n35 37\\n36 38\\n37 39\\n38 40\\n39 41\\n40 42\\n41 43\\n42 44\\n43 45\\n44 46\\n45 47\\n46 48\\n47 49\\n48 50\\n49 51\\n50 52\\n51 53\\n52 54\\n53 55\\n54 56\\n55 57\\n56 58\\n57 59\\n58 60\\n59 61\\n60 62\\n61 63\\n62 64\\n63 65\\n64 66\\n65 67\\n66 68\\n67 69\\n68 70\\n69 71\\n70 72\\n71 73\\n72 74\\n73 75\\n74 76\\n75 77\\n76 78\\n77 79\\n78 80\\n79 81\\n80 82\\n81 83\\n82 84\\n83 85\\n84 86\\n85 87\\n86 88\\n87 89\\n88 90\\n89 91\\n90 92\\n91 93\\n92 94\\n93 95\\n94 96\\n95 97\\n96 98\\n97 99\\n98 100\") == \"0\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n3 4\") == \"2\"\nassert solution(\"1 2\\n3 4\\n5 7\\n7 8\\n9 2\\n10 8\\n11 3\\n13 3\") == \"4\"\nassert solution(\"1 2\\n3 4\\n5 7\\n7 8\\n9 2\\n10 8\\n11 3\\n13 3\\n15 6\") == \"5\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\n\"\"\"\nThis is an automated unit test to check the correctness of your solution. It is not the \nwriting part of the assignment.\nThe idea is to write a program that will give you the expected output given the input.\n\"\"\""
    },
    {
        "number": 3631,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '2'\nassert solution('''\n1 1\n1 1\n''') == '0'\nassert solution('''\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 3632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\na\nb\nc\nd\ne\ncad''') == '26'\nassert solution('''5 3\nb\na\nc\nd\ne\ncad''') == '26'\nassert solution('''5 3\na\nb\nc\nd\ne\ncad''') == '26'\nassert solution('''5 3\na\nb\nc\nd\ne\ncd''') == '26'\nassert solution('''6 4\na\nb\nc\nd\ne\nf\ncd''') == '26'\n"
    },
    {
        "number": 3632,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\na\nb\nc\nd\ne\ncad''') == '26'\nassert solution('''5 3\na\nb\nc\nd\ne\nz\ncad''') == '26'\nassert solution('''5 3\na\nb\nc\nd\ne\nz\nz''') == '1'\nassert solution('''5 3\na\nb\nc\nd\ne\nz\nz\nz''') == '2'\nassert solution('''5 3\na\nb\nc\nd\ne\nz\nz\nz''') == '1'\n"
    },
    {
        "number": 3632,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    r\"\"\"\n5 3\na\nb\nc\nd\ne\ncad\n\"\"\".strip()\n) == \"26\"\n\nassert solution(\n    r\"\"\"\n5 3\na\nb\nc\nd\ne\ncad\n\"\"\".strip()\n) == \"26\"\n\nassert solution(\n    r\"\"\"\n5 3\na\nb\nc\nd\ne\ncad\n\"\"\".strip()\n) == \"26\"\n\nassert solution(\n    r\"\"\"\n9 4\na\na\na\na\na\na\na\na\na\na\n\"\"\".strip()\n) == \"4\"\n\nassert solution(\n    r\"\"\"\n10 5\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na"
    },
    {
        "number": 3632,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\na\\na\\na\\na\\na\") == 26\nassert solution(\"7 7\\na\\na\\na\\na\\na\\na\\na\") == 78\nassert solution(\"1 1\\nabc\\nabc\\na\\na\") == 1\nassert solution(\"7 6\\na\\na\\na\\na\\na\\na\\na\") == 77\nassert solution(\"7 3\\na\\na\\na\\na\\na\\na\") == 74\n"
    },
    {
        "number": 3632,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"26\"\n\"\"\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"26\"\n\"\"\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 26\n\"\"\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\na\nb\nc\nd\ne\ncad''') == '26'\nassert solution('''3 1\nabc\n"
    },
    {
        "number": 3632,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"a\\nb\\nc\\nd\\ne\\ncad\") == 26\nassert solution(\"a\\nb\\nc\\nd\\ne\\nc\") == 26\nassert solution(\"a\\nb\\nc\\nd\\ne\\nc\") == 26\nassert solution(\"a\\nb\\nc\\nd\\ne\\nc\") == 26\nassert solution(\"a\\nb\\nc\\nd\\ne\\nc\") == 26\n"
    },
    {
        "number": 3632,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\na\nb\nc\nd\ne\ncad\n''') == '26'\nassert solution('''\n5 4\na\nb\nc\nd\ne\n''') == '26'\nassert solution('''\n5 3\na\nb\nc\nd\ne\n''') == '26'\nassert solution('''\n3 4\nab\nac\nad\n''') == '5'\nassert solution('''\n2 2\na\na\n''') == '1'\n"
    },
    {
        "number": 3633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('10 5 3 1 3') == '3 5 2 1 4'\nassert solution('1 1 1 1') == 'impossible'\nassert solution('1 2 1 1') == 'impossible'\nassert solution('1 2 1 2') == 'impossible'\n"
    },
    {
        "number": 3633,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\nSample Input:\n6 3 8\n1 3 7 3 5 1\nSample Output:\nimpossible\nExplanation:\nSince $m=10$ and $k=8$, the average score of the first five critics is $8/6=2$, which is smaller than the initial opinion $3$ of the first critic. Hence the four critics are ordered in such a way that the average score is $2$.\n\nSample Input:\n8 4 15\n2 4 7 2 5 4 3 5\nSample Output:\n3 4 1 5 2 6 7 8\nExplanation:\nSince $m=15$ and $k=4$, the average score of the first five critics is $5$ which is larger than the initial opinion $4$ of the first critic. Hence the four critics are ordered in such a way that the average score is $5$.\n\"\"\""
    },
    {
        "number": 3633,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3 5 2 1 4'\n\n---\n\n## Test\n\nThe [full_mark](https://www.codechef.com/ZCOPRAC/problems/ZCO14001) will be viewed by your students on Wednesday, July 21, 2017 at 11:59 PM GMT+05:30, at the address of Lawrence Berkeley National Laboratory, Livermore, California, USA. You will be given a single line with the first five integer values of the array. You will also be given a single line with the desired answer. Print the correct answer to standard output.\n\nNote:\n\n- Your answer will be considered correct if it matches the first five integer values of the array and the desired answer on the same line.\n- Your answer must be on a single line.\n- If your answer is not correct, you will receive a 0 grade.\n\nFor example, the following inputs and desired answers will result in a mark of 50:\n\n1 2 3 4 5\n7\n-----Input-----\n5 4 3 2 1\n-----Output-----\n2 4 1 3 5\n-----Input-----\n3 5 1 2 4\n-----Output-----\n1 3 2 4 5\n-----Input-----\n3 1 2 3 4\n-----Output-----\nimpossible\n-----Input-----\n3 5 3 3 3\n-----Output-----\n3 3 5 3 3\n-----Input-----\n2 2 2 2 2\n-----Output-----\n2 2 2 2 2\n-----Input-----\n3 3 3 3 3\n-----Output-----\nimpossible\n-----Input-----\n5 5 5 5 5\n-----Output-----\nimpossible\n-----Input-----\n3 4 4 4 2\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n6 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n2 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 5 4 4 4\n-----Output-----\nimpossible\n-----Input-----\n5 5 4 4 4\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 5 4 4 4\n-----Output-----\nimpossible\n-----Input-----\n5 5 4 4 4\n-----Output-----\nimpossible\n-----Input-----\n5 5 4 4 4\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 5 4 4 4\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 5 4 4 4\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible\n-----Input-----\n5 1 1 1 1 1\n-----Output-----\nimpossible"
    },
    {
        "number": 3633,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3 5 2 1 4'\nassert solution(\"6 1 1 3 1 4 2 2 2 2 2 2 2 2 2\") == 'impossible'\nassert solution(\"3 1 3 2 2\") == '3 1 2 2'\nassert solution(\"4 1 4 2 2 2 2 2\") == '3 1 2 2'\nassert solution(\"5 1 5 2 2 2 2 2\") == '3 1 2 2'\n"
    },
    {
        "number": 3633,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3 5 2 1 4\"\n\n-----"
    },
    {
        "number": 3633,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 10 30''') == '3 5 2 1 4'\nassert solution('''5 10 15''') == 'impossible'\nassert solution('''3 5 2''') == '3 5 2'\nassert solution('''4 3 2''') == '3 5 2'\nassert solution('''2 3 1''') == '1 3 2'\n"
    },
    {
        "number": 3633,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n\n-----Closed-----"
    },
    {
        "number": 3633,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3 9''') == 'impossible'\nassert solution('''3 3 3''') == '3 3 2 1 4'\nassert solution('''1 1 1''') == 'impossible'\nassert solution('''2 3 3''') == '3 3 2 1 4'\nassert solution('''2 2 2''') == 'impossible'\n"
    },
    {
        "number": 3633,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\nassert solution('1 5 3 2') == '1 3 2 5'\nassert solution('1 10 100') == '1'\nassert solution('1 10 5 3 2') == '1'\nassert solution('1 100 99') == 'impossible'\n"
    },
    {
        "number": 3633,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n    \n"
    },
    {
        "number": 3634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n2 3\n2 3''') == \"2\"\n\nassert solution('''3\n1 3\n2 3\n2 3''') == \"shovel time!\"\n\nassert solution('''4\n1 1\n2 3\n2 4\n2 4''') == \"1\"\n\nassert solution('''8\n1 1\n2 3\n2 4\n2 4\n3 4\n3 5\n5 6\n7 8''') == \"shovel time!\"\n'''"
    },
    {
        "number": 3634,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 2\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3634,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2\n1 2''') == '2'\nassert solution('''1 2\n3 4\n3 4''') =='shovel time!'\nassert solution('''1 2\n1 4\n1 4''') =='shovel time!'\nassert solution('''3\n1 1\n2 3\n2 3''') == '2'\nassert solution('''1 1\n1 1\n1 1''') == '2'\n"
    },
    {
        "number": 3634,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1\n2 3\n2 3''') == '2'\nassert solution('''4\n1 1\n2 3\n2 3\n1 2\nSample Output:\n4\n"
    },
    {
        "number": 3634,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n1\\n3\\n3\\n0\") == 2\nassert solution(\"2\\n2\\n1\\n3\\n3\\n0\\n0\\n1\") == 2\nassert solution(\"2\\n2\\n1\\n3\\n3\\n0\\n0\\n1\\n0\\n1\") == 1\nassert solution(\"2\\n2\\n1\\n3\\n3\\n0\\n0\\n1\\n0\\n1\\n0\\n0\") == 1\nassert solution(\"2\\n2\\n1\\n3\\n3\\n0\\n0\\n1\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\") == 1\n"
    },
    {
        "number": 3634,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\"
    },
    {
        "number": 3634,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 1\n2 3\n2 3''') =='shovel time!'\nassert solution('''2\n1 1\n2 3''') == 1\nassert solution('''3\n0 1\n0 2\n1 1\n2 3''') == 2\nassert solution('''3\n3 1\n3 3\n5 2\n1 1\n3 3\n1 1\n3 3''') == 4\nassert solution('''10\n0 1\n0 2\n1 2\n2 3\n3 3\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n''') == 122336643396\n"
    },
    {
        "number": 3634,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2\n2 3\n3 4\n0 1\n4 3\n0 4\n1 2''') == '2'\nassert solution('''1 2\n1 1\n2 3\n3 4\n4 5\n0 4\n2 4\n1 2\n3 4\n5 6\n6 7\n7 8\n0 1\n8 9\n1 2''') == '8'\nassert solution('''1 2\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n0 9\n1 2\n3 4\n5 6\n7 8\n9 10\n0 10\n1 9\n2 8\n3 7\n4 6\n5 5\n0 2\n1 1''') == '8'\nassert solution('''1 2\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n0 9\n1 2\n3 4\n5 6\n7 8\n9 10\n0 10\n1 9\n2 8\n3 7\n4 6\n5 5\n0 2\n1 1''') == '8'\nassert solution('''1 2\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n0 9\n1 2\n3 4\n5 6\n7 8\n9 10\n0 10\n1 9\n2 8\n3 7\n4 6\n5 5\n0 2\n1 1''') == '8'\n"
    },
    {
        "number": 3634,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1') == '4'\nassert solution('1\\n1\\n1\\n1\\n1') =='shovel time!'\nassert solution('2\\n1\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 3634,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1\n2 3\n2 3''') == '2'\nassert solution('''10\n1 1\n3 3\n3 1\n1 1\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3''') =='shovel time!'\nassert solution('''20\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1"
    },
    {
        "number": 3635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 1 2') == '3'\nassert solution('4\\n1 2 1 2\\n1 2 1 2') == '3'\nassert solution('2\\n1 2') == '1'\nassert solution('2\\n1 2\\n2 1') == '1'\nassert solution('2\\n1 2\\n2 1\\n3 1') == '2'\n"
    },
    {
        "number": 3635,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2 1 2''') == '3'\nassert solution('''4\n1 3 4 4''') == '4'\nassert solution('''4\n2 1 1 2''') == '4'\nassert solution('''4\n1 2 2 1''') == '4'\nassert solution('''4\n2 1 1 2''') == '4'\n"
    },
    {
        "number": 3635,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2 1 2''') == \"3\"\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == \"9\"\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10''') == \"9\"\nassert solution('''100\n2 4 1 4 4 2 4 1 2 3''') == \"2\"\nassert solution('''1000\n1 2 3 4 5 6 7 8 9 10''') == \"9\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2 1 2 1''') == '3'\nassert solution('''4\n1 2 1 2 4''') == '3'\nassert solution('''5\n1 2 1 2 4 5''') == '3'\nassert solution('''6\n1 2 1 2 4 5 6''') == '3'\nassert solution('''7\n1 2 1 2 4 5 6 7''') == '3'\n"
    },
    {
        "number": 3635,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"3\"\nassert solution(\"2\\n1 1\\n\") == \"1\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\"\nassert solution(\"2\\n10\\n1 10\\n\") == \"1\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\n\n-----Description of the solution-----\n\nWe are now looking at a single scenario where an executive is rewarded with the least number of bananas among all of his briefcases. Thus, the reward is granted to the least evil executive, and the prize is distributed equally among the remaining briefcases.\n\nWe can then make another consideration about the second least evil executive, and see how he can be rewarded with the least number of bananas among all of his briefcases.\n\nWe are left with only two briefcases, and so the number of gold is equal to the number of bananas in the least evil briefcase plus the number of bananas in the second least evil briefcase.\n\nThus, the number of gold is the number of bananas in the least evil briefcase plus the number of bananas in the second least evil briefcase plus the number of bananas in the remaining briefcases.\n\nNow we have several scenarios where we can distribute gold equally among the remaining briefcases.\n\nIn the first scenario, we can distribute gold evenly among the three briefcases, and then distribute the remaining gold equally among the remaining two briefcases. The number of gold in the first briefcase is the number of gold in the first briefcase plus the number of gold in the second briefcase, and the number of gold in the second briefcase is the number of gold in the first briefcase plus the number of gold in the second briefcase plus the number of gold in the third briefcase. The number of gold in the third briefcase is the number of gold in the first briefcase plus the number of gold in the second briefcase plus the number of gold in the third briefcase plus the number of gold in the remaining briefcases.\n\nIn the second scenario, we can distribute gold evenly among the three briefcases, and then distribute the remaining gold equally among the two remaining briefcases. The number of gold in the first briefcase is the number of gold in the first briefcase plus the number of gold in the second briefcase, and the number of gold in the second briefcase is the number of gold in the first briefcase plus the number of gold in the second briefcase plus the number of gold in the third briefcase. The number of gold in the third briefcase is the number of gold in the first briefcase plus the number of gold in the second briefcase plus the number of gold in the third briefcase plus the number of gold in the remaining two briefcases.\n\n-----Hints-----\nWe can use the built-in max function to get the maximum number.\n\nWe can use a dictionary to store the number of bananas in briefcases.\n\nWe need to make sure that the first two briefcases are counted as well.\n\nWe can use a loop to iterate over the input.\n\nWe can use a while loop to iterate over the input.\n\n-----Method 1 (Accepted)-----\npublic class Solution {\n    public int solution(int[] A) {\n        int[] count = new int[A.length];\n        int total = 0;\n        int i = 0;\n        while (i < A.length) {\n            count[i] = A[i];\n            i++;\n        }\n        i = A.length - 1;\n        while (i >= 0) {\n            total += count[i];\n            i--;\n        }\n        return total;\n    }\n}\n\n-----Method 2 (Accepted)-----\npublic class Solution {\n    public int solution(int[] A) {\n        int count[];\n        int total = 0;\n        int i = 0;\n        while (i < A.length) {\n            count.add(A[i]);\n            i++;\n        }\n        i = A.length - 1;\n        while (i >= 0) {\n            total += count[i];\n            i--;\n        }\n        return total;\n    }\n}\n\n-----Method 3 (Accepted)-----\npublic class Solution {\n    public int solution(int[] A) {\n        int[] count = new int[A.length];\n        int total = 0;\n        int i = 0;\n        while (i < A.length) {\n            count[i] = A[i];\n            i++;\n        }\n        i = A.length - 1;\n        int max = -1;\n        while (i >= 0) {\n            if (count[i] > max) {\n                max = count[i];\n            }\n            i--;\n        }\n        return max;\n    }\n}\n\n-----Method 4 (Not Accepted)-----\npublic class Solution {\n    public int solution(int[] A) {\n        int[] count = new int[A.length];\n        int total = 0;\n        int i = 0;\n        while (i < A.length) {\n            count[i] = A[i];\n            i++;\n        }\n        int max = -1;\n        for (int j = 0; j < A.length; j++) {\n            if (count[j] > max) {\n                max = count[j];\n            }\n        }\n        return max;\n    }\n}\n\n-----Method 5 (Accepted)-----\npublic class Solution {\n    public int solution(int[] A) {\n        int[] count = new int[A.length];\n        int total = 0;\n        int i = 0;\n        while (i < A.length) {\n            count[i] = A[i];\n            i++;\n        }\n        i = A.length - 1;\n        int max = -1;\n        int j = 0;\n        while (i >= 0) {\n            if (count[i] > max) {\n                max = count[i];\n                j = i;\n            }\n            i--;\n        }\n        i = A.length - 1;\n        while (i >= 0) {\n            if (count[i] > max) {\n                max = count[i];\n                j = i;\n            }\n            i--;\n        }\n        return j;\n    }\n}\n\n-----Method 6 (Accepted)-----\npublic class Solution {\n    public int solution(int[] A) {\n        int[] count = new int[A.length];\n        int total = 0;\n        int"
    },
    {
        "number": 3635,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2 1 1 2\n''') == '3'\nassert solution('''\n2\n1 2 1 2\n''') == '3'\nassert solution('''\n2\n1 2 1 2\n1 2 1 2\n''') == '4'\nassert solution('''\n2\n1 2 1 2\n1 2 1 2\n''') == '4'\nassert solution('''\n3\n3 4 1 3\n4 4 2 2\n3 3 2 2\n''') == '3'\n"
    },
    {
        "number": 3635,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 2 1 2\n''') == '3'\nassert solution('''\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n2\n5 3\n3 3\n5\n''') == '2'\nassert solution('''\n2\n1 3\n3\n''') == '1'\nassert solution('''\n3\n1 4 4\n4\n''') == '2'\n"
    },
    {
        "number": 3635,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\n\nassert solution(\"4\\n1 2 1 2\") == '3'\n\nassert solution(\"5\\n2 3 2 2 1\") == '2'\n\"\"\""
    },
    {
        "number": 3635,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\nimport sys\nfrom io import StringIO\n\ncapture = StringIO()\nsys.stdin = StringIO(\n    \"\"\"5\n1 2 1 2\n3 2 1 2 1\n1 3 1 2 1\n2 1 3 1 1\n1 2 1 2 2\n1 1 1 1 1\n1 1 1 1 1\n\"\"\"\n)\n\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\nassert solution(\"4 4 999999937\") == \"79\"\nassert solution(\"3 4 999999937\") == \"15\"\n\"\"\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '79'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3636,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 3636,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4 999999937''') == '79'\n'''"
    },
    {
        "number": 3636,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4 999999937') == 79\nassert solution('7 8 9 10') == 42\nassert solution('2 4 5 6') == 24\nassert solution('1 2 3 4') == 1\nassert solution('1 2 3 4') == 1\n'''\n"
    },
    {
        "number": 3636,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4 999999937\") == 79\nassert solution(\"4 4 999999937\") == 79\nassert solution(\"4 4 999999937\") == 79\nassert solution(\"1 1 1\") == 0\nassert solution(\"2 4 3\") == 0\n"
    },
    {
        "number": 3636,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4 4 999999937'''\n) == 79\n\nassert solution(\n'''1 1 1'''\n) == 1\n\nassert solution(\n'''4 4 999999937'''\n) == 79\n\nassert solution(\n'''8 5 999999937'''\n) == 5\n\nassert solution(\n'''11 1000000000 999999937'''\n) == 2\n"
    },
    {
        "number": 3636,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"79\"\nassert solution(\"4 4 999999937\") == \"79\"\n\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 3636,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4 999999937''') == '79'\nassert solution('''1 3 4''') == '1'\nassert solution('''1 2 3''') == '1'\nassert solution('''1 1 1''') == '1'\nassert solution('''1 1 1''') == '1'\n"
    },
    {
        "number": 3636,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n'''\n"
    },
    {
        "number": 3637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n4 +zucchini +mozzarella +mushrooms -artichoke\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n2\n4 +zucchini +mozzarella +mushrooms -artichoke\n3\n4 +zucchini +mozzarella +mushrooms -artichoke\n4\n4 +zucchini +mozzarella +mushrooms -artichoke\n5\n4 +zucchini +mozzarella +mushrooms -artichoke\n6\n4 +zucchini +mozzarella +mushrooms -artichoke\n7\n4 +zucchini +mozzarella +mushrooms -artichoke\n8\n4 +zucchini +mozzarella +mushrooms -artichoke\n9\n4 +zucchini +mozzarella +mushrooms -artichoke\n10\n4 +zucchini +mozzarella +mushrooms -artichoke\n11\n4 +zucchini +mozzarella +mushrooms -artichoke\n12\n4 +zucchini +mozzarella +mushrooms -artichoke\n13\n4 +zucchini +mozzarella +mushrooms -artichoke\n14\n4 +zucchini +mozzarella +mushrooms -artichoke\n15\n4 +zucchini +mozzarella +mushrooms -artichoke\n16\n4 +zucchini +mozzarella +mushrooms -artichoke\n17\n4 +zucchini +mozzarella +mushrooms -artichoke\n18\n4 +zucchini +mozzarella +mushrooms -artichoke\n19\n4 +zucchini +mozzarella +mushrooms -artichoke\n20\n4 +zucchini +mozzarella +mushrooms -artichoke\n21\n4 +zucchini +mozzarella +mushrooms -artichoke\n22\n4 +zucchini +mozzarella +mushrooms -artichoke\n23\n4 +zucchini +mozzarella +mushrooms -artichoke\n24\n4 +zucchini +mozzarella +mushrooms -artichoke\n25\n4 +zucchini +mozzarella +mushrooms -artichoke\n26\n4 +zucchini +mozzarella +mushrooms -artichoke\n27\n4 +zucchini +mozzarella +mushrooms -artichoke\n28\n4 +zucchini +mozzarella +mushrooms -artichoke\n29\n4 +zucchini +mozzarella +mushrooms -artichoke\n30\n4 +zucchini +mozzarella +mushrooms -artichoke\n31\n4 +zucchini +mozzarella +mushrooms -artichoke\n32\n4 +zucchini +mozzarella +mushrooms -artichoke\n33\n4 +zucchini +mozzarella +mushrooms -artichoke\n34\n4 +zucchini +mozzarella +mushrooms -artichoke\n35\n4 +zucchini +mozzarella +mushrooms -artichoke\n36\n4 +zucchini +mozzarella +mushrooms -artichoke\n37\n4 +zucchini +mozzarella +mushrooms -artichoke\n38\n4 +zucchini +mozzarella +mushrooms -artichoke\n39\n4 +zucchini +mozzarella +mushrooms -artichoke\n40\n4 +zucchini +mozzarella +mushrooms -artichoke\n41\n4 +zucchini +mozzarella +mushrooms -artichoke\n42\n4 +zucchini +mozzarella +mushrooms -artichoke\n43\n4 +zucchini +mozzarella +mushrooms -artichoke\n44\n4 +zucchini +mozzarella +mushrooms -artichoke\n45\n4 +zucchini +mozzarella +mushrooms -artichoke\n46\n4 +zucchini +mozzarella +mushrooms -artichoke\n47\n4 +zucchini +mozzarella +mushrooms -artichoke\n48\n4 +zucchini +mozzarella +mushrooms -artichoke\n49\n4 +zucchini +mozzarella +mushrooms -artichoke\n50\n4 +zucchini +mozzarella +mushrooms -artichoke\n51\n4 +zucchini +mozzarella +mushrooms -artichoke\n52\n4 +zucchini +mozzarella +mushrooms -artichoke\n53\n4 +zucchini +mozzarella +mushrooms -artichoke\n54\n4 +zucchini +mozzarella +mushrooms -artichoke\n55\n4 +zucchini +mozzarella +mushrooms -artichoke\n56\n4 +zucchini +mozzarella +mushrooms -artichoke\n57\n4 +zucchini +mozzarella +mushrooms -artichoke\n58\n4 +zucchini +mozzarella +mushrooms -artichoke\n59\n4 +zucchini +mozzarella +mushrooms -artichoke\n60\n4 +zucchini +mozzarella +mushrooms -artichoke\n61\n4 +zucchini +mozzarella +mushrooms -artichoke\n62\n4 +zucchini +mozzarella +mushrooms -artichoke\n63\n4 +zucchini +mozzarella +mushrooms -artichoke\n64\n4 +zucchini +mozzarella +mushrooms -artichoke\n65\n4 +zucchini +mozzarella +mushrooms -artichoke\n66\n4 +zucchini +mozzarella +mushrooms -artichoke\n67\n4 +zucchini +mozzarella +mushrooms -artichoke\n68\n4 +zucchini +mozzarella +mushrooms -artichoke\n69\n4 +zucchini +mozzarella +mushrooms -artichoke\n70\n4 +zucchini +mozzarella +mushrooms -artichoke\n71\n4 +zucchini +mozzarella +mush"
    },
    {
        "number": 3637,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n1\\n1 +gorgonzola +mozzarella +mushrooms -parmesan') == 'zucchini\\nmuzarella\\nmushrooms\\nartichoke\\ngorgonzola\\nmuzarella\\nmushrooms\\nparmesan'\n\nassert solution('1\\n1 +zucchini +mozzarella +mushrooms -artichoke\\n4 +mozzarella +mushrooms -parmesan\\n1\\n1 +gorgonzola +mozzarella +mushrooms -parmesan') == 'zucchini\\nmuzarella\\nmushrooms\\nartichoke\\ngorgonzola\\nmuzarella\\nmushrooms\\nparmesan'\n\nassert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n1\\n1 +gorgonzola +mozzarella +mushrooms -parmesan\\n4 +mozzarella +mushrooms -parmesan\\n1\\n1 +gorgonzola +mozzarella +mushrooms -parmesan') == 'zucchini\\nmuzarella\\nmushrooms\\nartichoke\\ngorgonzola\\nmuzarella\\nmushrooms\\nparmesan'\n\nassert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n1\\n1 +gorgonzola +mozzarella +mushrooms -parmesan\\n4 +mozzarella +mushrooms -parmesan\\n1\\n1 +gorgonzola +mozzarella +mushrooms -parmesan') == 'zucchini\\nmuzarella\\nmushrooms\\nartichoke\\ngorgonzola\\nmuzarella\\nmushrooms\\nparmesan'\n\nassert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n1\\n1 +gorgonzola +mozzarella +mushrooms -parmesan\\n4 +mozzarella +mushrooms -parmesan\\n1\\n1 +gorgonzola +mozzarella +mushrooms -parmesan') == 'zucchini\\nmuzarella\\nmushrooms\\nartichoke\\ngorgonzola\\nmuzarella\\nmushrooms\\nparmesan'"
    },
    {
        "number": 3637,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('a+b') == 'a b'\nassert solution('a+b+c+d') == 'a b c d'\nassert solution('a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\n"
    },
    {
        "number": 3637,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 3637,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n4 +zucchini +mozzarella +mushrooms -artichoke''') == 'zucchini mozzarella mushrooms artichoke'\nassert solution('''2\n2 +olives +toast -mushrooms\n3 -olives +olives''') == 'olives toast'\nassert solution('''1\n2 -hazelnut -sugar -cocoa\n2 -almonds -chocolate +cocoa''') == 'almonds chocolate'\nassert solution('''2\n3 +olives +toast -mushrooms\n3 -olives +olives''') == 'olives toast'\nassert solution('''1\n3 +olives +toast -mushrooms\n3 -olives +olives''') == 'olives toast'\n"
    },
    {
        "number": 3637,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\nartichoke'\n\"\"\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini mozzarella mushrooms artichoke'\nassert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini mozzarella'\nassert solution('2\\n4 +zucchini +mozzarella +mushrooms -artichoke') =='mozzarella'\nassert solution('2\\n4 +zucchini +mozzarella +mushrooms -artichoke') =='mozzarella'\nassert solution('2\\n4 +zucchini +mozzarella +mushrooms -artichoke') =='mozzarella'\n"
    },
    {
        "number": 3637,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('4+a+b+c') == ''\nassert solution('1+a+b+c') == 'a b c'\nassert solution('1+a+b+c+d+e') == 'a b c d e'\n"
    },
    {
        "number": 3638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n-----\n\n>>> result = solution(stdin)\n>>> expected = stdin\n>>> assert result == expected\n\n>>> from pprint import pprint\n>>> pprint(result)\n[('PS',),\n ('SS',),\n ('PP',),\n ('RR',)]\n>>> len(result)\n4\n>>> expected = stdin\n>>> result = solution(expected)\n>>> result == expected\nTrue\n>>> len(result)\n4\n\n\"\"\"\n\nfrom __future__ import annotations\n\nfrom collections import Counter\nfrom typing import List\n"
    },
    {
        "number": 3638,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\nPP\nRR\nPS\nSS''') == 'PS'\nassert solution('''2 1\nR\nP''') == 'PP'\nassert solution('''2 1\nPP\nPS\nRR\nSS''') == 'PP'\nassert solution('''10 10\n
    },
    {
        "number": 3638,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"PS\"\nassert solution(stdin) == \"PP\"\nassert solution(stdin) == \"RR\"\nassert solution(stdin) == \"SS\"\nassert solution(stdin) == \"SP\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4\nPP\nRR\nPS\nSS''') == 'PS', 'PP'\nassert solution('''3 2\nRR\nSS''') == 'SS', 'RR'\nassert solution('''3 1\nPS''') == 'PS', 'PS'\nassert solution('''7 10\nPSPSPSPSPSPS\nRRRRRRRRRRR''') == '''SSSSSSSSSSS\nPPPPPPPPPPPP\nRRRRRRRRRRRR\nPPPPPPPPPPPP''', '''SSSSSSSSSSS\nPPPPPPPPPPPP\nRRRRRRRRRRRR\nPPPPPPPPPPPP'''\nassert solution('''100 5\nRPSRPSRPSRSPSRPS\nPSRPSRPSRPSRSPSRPS\nPSRPSRPSRPSRSPSRPS\nPSRPSRPSRPSRSPSRPS\nPSRPSRPSRPSRSPSRPS''') == '''PSRPSRPSRPSRSPS\nPSRPSRPSRPSRSPS\nPSRPSRPSRPSRSPS\nPSRPSRPSRPSRSPS\nPSRPSRPSRPSRSPS'''\n"
    },
    {
        "number": 3638,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"PP\") == \"PS\"\nassert solution(\"PP\\nPS\") == \"PS\"\nassert solution(\"PP\\nPS\\nPP\\nPS\\nPP\\nPS\") == \"PSPP\"\nassert solution(\"PP\\nPS\\nPP\\nPS\\nPP\\nPS\\nPP\\nPS\\nPP\\nPS\") == \"PSPPPP\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4\nPP\nRR\nPS\nSS''') == 'PS'\nassert solution('''2 2\nPP\nRR''') == 'RR'\nassert solution('''6 6\nRRRRRRRR\nPPPPPPPP\nPPPPPPPP\nSSSSSSSS\nPPPPPPPP\nPPPPPPPP''') == 'PPPPPPPP'\nassert solution('''12 14\nRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR''') == 'PPPPPPPPPPPPPPPPPPPP'\nassert solution('''1000 5\nRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR\nPPPPPPPPPPPPPPPPPPPP\nRRRRRRRRRRRRRRRRRRRR''') == 'RRRRRRRRRRRRRRRRRR'\n"
    },
    {
        "number": 3638,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3638,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'PS'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3638,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"PP\\n\") == \"PP\"\nassert solution(\"RR\\n\") == \"RR\"\nassert solution(\"PS\\n\") == \"PS\"\nassert solution(\"SS\\n\") == \"SS\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0\n''') == '288'\n'''\nimport sys\nfrom math import sqrt, floor"
    },
    {
        "number": 3639,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n0.1 2.0\n0\n0\n0\n0\n0\n''') == '288'\nassert solution(\n'''5\n0.1 2.0\n2\n0\n1\n0\n2\n''') == '243'\nassert solution(\n'''5\n0.1 2.0\n0\n0\n0\n0\n0\n2\n''') == '243'\nassert solution(\n'''5\n0.1 2.0\n2\n1\n0\n2\n0\n1\n''') == '243'\nassert solution(\n'''5\n0.1 2.0\n1\n0\n1\n0\n2\n0\n1\n''') == '243'\n"
    },
    {
        "number": 3639,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0''') == '288'\nassert solution('''5\n0.1 2.0\n0\n0\n0\n0\n1\n''') == '360.0000000000000'\nassert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0\n1\n''') == '360.0000000000000'\nassert solution('''5\n0.1 2.0\n1\n0\n0\n0\n0\n0\n''') == '360.0000000000000'\nassert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0\n1\n''') == '360.0000000000000'\n"
    },
    {
        "number": 3639,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0\n''') == '288'\nassert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0\n''') == '288'\nassert solution('''5\n0.1 2.0\n1\n1\n1\n1\n1\n''') == '35.38'\nassert solution('''5\n0.1 2.0\n2\n2\n2\n2\n2\n''') == '9.82'\nassert solution('''5\n0.1 2.0\n3\n3\n3\n3\n3\n''') == '8.40'\n"
    },
    {
        "number": 3639,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5\n0.1 2.0\n0\n0\n0\n0\n0\n''') == '288'\n\nassert solution(\n'''5\n0.1 2.0\n0\n0\n0\n0\n0\n0\n''') == '288'\n\nassert solution(\n'''5\n0.1 2.0\n3\n0\n0\n0\n0\n0\n''') == '2.3'\n\nassert solution(\n'''5\n0.1 2.0\n1\n0\n0\n0\n0\n0\n''') == '10'\n\nassert solution(\n'''5\n0.1 2.0\n3\n1\n0\n0\n0\n0\n''') == '0'"
    },
    {
        "number": 3639,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == '288'\nassert solution('1') == '288'\nassert solution('2') == '288'\nassert solution('3') == '288'\nassert solution('4') == '288'\n"
    },
    {
        "number": 3639,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0''') == '288'\nassert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0''') == '288'\nassert solution('''5\n0.1 2.0\n1\n0\n0\n0\n0\n0''') == '20'\nassert solution('''5\n0.1 2.0\n1\n1\n1\n1\n1''') == '8'\nassert solution('''5\n0.1 2.0\n1\n1\n1\n1\n1''') == '2'\n"
    },
    {
        "number": 3639,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '288'\n\n\"\"\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3639,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288'\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288'\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288'\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288'\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288'\n"
    },
    {
        "number": 3639,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n0.1 2.0\n0\n0\n0\n0\n0\n'''\n) == '288'\n\nassert solution(\n'''5\n0.1 2.0\n0\n1\n1\n1\n1\n'''\n) == '1.8972'\n\nassert solution(\n'''5\n0.1 2.0\n0\n2\n2\n2\n2\n'''\n) == '4.8684'\n\nassert solution(\n'''5\n0.1 2.0\n0\n10\n10\n10\n10\n'''\n) == '24.9264'\n\nassert solution(\n'''5\n0.1 2.0\n0\n1\n10\n10\n10\n'''\n) == '1.8972'"
    },
    {
        "number": 3640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('bb') == 1\nassert solution('babbabaa') == 5\nassert solution('aba') == 4\nassert solution('bababab') == 8\n"
    },
    {
        "number": 3640,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcdefghijklm') == 1\nassert solution('aaaaa') == 5\nassert solution('aaaaaaaaaaaaaa') == 13\nassert solution('aaaaaaffff') == 6\nassert solution('aabb') == 3\n"
    },
    {
        "number": 3640,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('b') == 1\nassert solution('a') == 1\nassert solution('ab') == 2\nassert solution('aa') == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('pastimeofwhimsy') == '1'\nassert solution('pasymeofwhimsy') == '2'\nassert solution('pasymeofwhimsymeow') == '3'\nassert solution('pasymeofwhimsymeow') == '3'\n"
    },
    {
        "number": 3640,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('pastimeofwhimsy') == '1'\nassert solution('meow') == '0'\nassert solution('abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
        "number": 3640,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(solution) == '1'\nassert solution(solution) == '0'\nassert solution(solution) == '3'\nassert solution(solution) == '1'\nassert solution(solution) == '3'\n"
    },
    {
        "number": 3640,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('pastimeofwhimsy') == '1'\nassert solution('code') == '3'\nassert solution('meow') == '6'\nassert solution('pa$t$meo$w') == '6'\nassert solution('code') == '3'\n"
    },
    {
        "number": 3640,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(\"tommyspecialdog\") == \"2\"\nassert solution(\"meowmeowmeow\") == \"2\"\nassert solution(\"abaxyzzyxf\") == \"5\"\nassert solution(\"zmeowmeowmeow\") == \"7\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('pastimeofwhimsy') == 1\nassert solution('wontuhnyc') == 4\nassert solution('nyluhikuhnc') == 0\nassert solution('yuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuhuh"
    },
    {
        "number": 3640,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\nassert solution(\"meowmeowmeowmeow\") == 9\nassert solution(\"moo\") == 1\nassert solution(\"meow\") == 4\nassert solution(\"mooowmeow\") == 3\n"
    },
    {
        "number": 3641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == \"NO\"\nassert solution('2\\n1 1') == \"NO\"\nassert solution('3\\n1 1 1') == \"YES\"\nassert solution('3\\n1 2 1') == \"NO\"\nassert solution('3\\n1 2 1 1') == \"YES\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 2 2 1\") == \"YES\"\nassert solution(\"3 4\\n3 3 3 3\") == \"NO\"\nassert solution(\"3 4\\n2 3 2 1\") == \"YES\"\nassert solution(\"3 4\\n1 2 1 2\") == \"NO\"\nassert solution(\"3 4\\n1 2 1 2\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2 2 1\") == \"YES\"\nassert solution(\"2 3 3 3\") == \"NO\"\nassert solution(\"3 3 3 3\") == \"YES\"\nassert solution(\"3 4 4 4\") == \"YES\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 2 1') == 'YES'\nassert solution('2 2 2') == 'NO'\nassert solution('3 4') == 'YES'\nassert solution('4 5') == 'YES'\nassert solution('1 3 3 1') == 'YES'\n"
    },
    {
        "number": 3641,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n1 2 2 1''') == \"YES\"\nassert solution('''3 4\n1 2 2 1''') == \"NO\"'''\nassert solution('''2 4\n1 1 1\n2 1 1''') == \"NO\"\nassert solution('''3 4\n1 2 2 1''') == \"YES\"\nassert solution('''3 4\n2 2 2 1''') == \"NO\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 2 2 1') == 'YES'\nassert solution('4 2\\n2 1 2 1') == 'NO'\nassert solution('3 3\\n1 1 1') == 'NO'\nassert solution('3 3\\n1 1 1') == 'YES'\nassert solution('3 2\\n1 1 1') == 'YES'\n"
    },
    {
        "number": 3641,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4\n1 2 2 1''') == 'YES'\nassert solution('''3 4\n1 2 2 1''') == 'YES'\nassert solution('''1\n5\n5''') == 'YES'\nassert solution('''1\n5\n1''') == 'NO'\nassert solution('''1\n5\n1''') == 'NO'\n"
    },
    {
        "number": 3641,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n\n\"\"\"\nNO\n\"\"\""
    },
    {
        "number": 3641,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n1 2 2 1''') == 'YES'\nassert solution('''10 4\n1 2 2 1''') == 'NO'\nassert solution('''1 3\n1 2 3''') == 'NO'\nassert solution('''1 1\n1''') == 'YES'\nassert solution('''1 1\n1''') == 'NO'\n"
    },
    {
        "number": 3642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\\\n2\n1 2\n3\n4\n''') == '3/1'\nassert solution(\n'''\\\n4\n1 2\n2 3\n3 4\n4\n''') == '2/1'\nassert solution(\n'''\\\n5\n1 2\n2 3\n3 4\n4 5\n5\n''') == '1/1'\nassert solution(\n'''\\\n6\n1 2\n2 3\n3 4\n4 5\n5 6\n6\n''') == '5/1'\nassert solution(\n'''\\\n7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7\n''') == '1/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1\n1 2\n3\n4\n\"\"\".strip()) == \"3/1\"\n\nassert solution(\n\"\"\"\n1\n1 2\n3\n\"\"\".strip()) == \"1/1\"\n\nassert solution(\n\"\"\"\n1\n1 2\n3\n\"\"\".strip()) == \"1/1\"\n\nassert solution(\n\"\"\"\n3\n1 2\n3\n\"\"\".strip()) == \"3/1\"\n\nassert solution(\n\"\"\"\n3\n1 3\n2 1\n\"\"\".strip()) == \"1/3\""
    },
    {
        "number": 3642,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n3\\n4') == '3/1'\nassert solution('2 1\\n4\\n2') == '3/1'\nassert solution('1 1\\n3\\n3') == '3/3'\nassert solution('1 2\\n3\\n4') == '3/1'\nassert solution('1 1\\n1\\n1') == '1/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n3\\n3\\n4\\n5\\n5\\n6\\n7\\n7\\n8\\n9\\n9\\n10') == '3/1'\nassert solution('1\\n1\\n2\\n3\\n3\\n4\\n5\\n5\\n6\\n7\\n7\\n8\\n9\\n9\\n10') == '3/1'\nassert solution('1\\n2\\n3\\n4\\n4\\n5\\n6\\n7\\n8\\n9\\n9\\n10') == '5/1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10') == '1/1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3642,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '1/1'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '1/1'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n"
    },
    {
        "number": 3642,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 2\n3\n4\n''') == '3/1'\nassert solution('''\n2\n1 1\n3\n4\n''') == '4/1'\nassert solution('''\n3\n1 2\n2 3\n4\n''') == '2/3'\nassert solution('''\n3\n1 2\n2 3\n4\n''') == '2/3'\nassert solution('''\n4\n1 2\n1 3\n1 4\n1 5\n2 4\n3 4\n3 5\n4 5\n''') == '5/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2\n3\n4\n''') == '3/1'\nassert solution('''2\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n55 57\n56 58\n57 59\n58 60\n59 61\n60 62\n61 63\n62 64\n63 65\n64 66\n65 67\n66 68\n67 69\n68 70\n69 71\n70 72\n71 73\n72 74\n73 75\n74 76\n75 77\n76 78\n77 79\n78 80\n79 81\n80 82\n81 83\n82 84\n83 85\n84 86\n85 87\n86 88\n87 89\n88 90\n89 91\n90 92\n91 93\n92 94\n93 95\n94 96\n95 97\n96 98\n97 99\n98 100\n99 101\n100 102\n101 103\n102 104\n103 105\n104 106\n105 107\n106 108\n107 109\n108 110\n109 111\n110 112\n111 113\n112 114\n113 115\n114 116\n115 117\n116 118\n117 119\n118 120\n119 121\n120 122\n121 123\n122 124\n123 125\n124 126\n125 127\n126 128\n127 129\n128 130\n127 131\n126 132\n125 133\n124 134\n123 135\n122 136\n121 137\n120 138\n119 139\n118 140\n117 141\n116 142\n115 143\n114 144\n113 145\n112 146\n111 147\n110 148\n109 149\n108 150\n107 151\n106 152\n105 153\n104 154\n103 155\n102 156\n101 157\n100 158\n99 159\n98 160\n97 161\n96 162\n95 163\n94 164\n93 165\n92 166\n91 167\n90 168\n89 169\n88 170\n87 171\n86 172\n85 173\n84 174\n83 175\n82 176\n81 177\n80 178\n79 179\n78 180\n77 181\n76 182\n75 183\n74 184\n73 185\n72 186\n71 187\n70 188\n69 189\n68 190\n67 191\n66 192\n65 193\n64 194\n63 195\n62 196\n61 197\n60 198\n59 199\n58 200\n57 201\n56 202\n55 203\n54 204\n53 205\n52 206\n51 207\n50 208\n49 209\n48 210\n47 211\n46 212\n45 213\n44 214\n43 215\n42 216\n41 217\n40 218\n39 219\n38 220\n37 221\n36 222\n35 223\n34 224\n33 225\n32 226\n31 227\n30 228\n29 229\n28 230\n27 231\n26 232\n25 233\n24 234\n23 235\n22 236\n21 237\n20 238\n19 239\n18 240\n17 241\n16 242\n15 243\n14 244\n13 245\n12 246\n11 247\n10 248\n9 249\n8 250\n7 251\n6 252\n5 253\n4 254\n3 255\n2 256\n1 257\n0 258\n\n-----Input-----\n4\n1 2\n2 3\n3 4\n4 1\n\n-----Output-----\n1/4\n\n\"\"\"\n\nfrom fractions import Fraction"
    },
    {
        "number": 3642,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3\\n4\\n') == '3/1'\nassert solution('2 3\\n4\\n5\\n') == '25/16'\nassert solution('1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n') == '16/1'\nassert solution('1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n') == '16/1'\nassert solution('1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n')"
    },
    {
        "number": 3642,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"[Finished in 0.2s]\"\"\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\") == '3/1'\nassert solution(\"4\\n1 2\\n1 3\\n2 1\\n2 3\\n3 4\") == '2/1'\n\"\"\"\n\nimport sys\nfrom fractions import Fraction\n"
    },
    {
        "number": 3643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == 1.114672365\nassert solution(\"2\\n1.2 10.2\\n2.2 15.2\\n4.5 6.7\") == 0.8105263157894737\nassert solution(\"3\\n1.2 10.2\\n2.2 15.2\\n4.5 6.7\\n6.2 9.1\") == 2.457615124571857\nassert solution(\"3\\n1.2 10.2\\n2.2 15.2\\n4.5 6.7\\n6.2 9.1\\n8.4 10.2\") == 2.457615124571857\nassert solution(\"3\\n1.2 10.2\\n2.2 15.2\\n4.5 6.7\\n6.2 9.1\\n8.4 10.2\\n2.2 9.1\") == 2.457615124571857\n"
    },
    {
        "number": 3643,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1.2 10.2\\n2.2 15.2') == '1.114672365'\n\"\"\"\nimport sys\n\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    n = int(sys.stdin.readline())\n    L = []\n    for i in range(n):\n        L.append(tuple(map(float, sys.stdin.readline().split())))\n    L.sort(key=lambda x: x[0])\n    R = []\n    for i in range(n):\n        R.append(L[i][1])\n    \n    R.sort()\n    R.reverse()\n    \n    x = 0\n    y = 0\n    \n    for i in range(n):\n        x += (L[i][0] - L[i-1][0]) * R[i]\n        y += (L[i][1] - L[i-1][1]) * R[i]\n    \n    print(x / (y * y))\n\n\"\"\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1.114672365'\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1.2 10.2\\n2.2 15.2') == '1.114672365'\nassert solution('1.1 10.1\\n1.2 10.2\\n2.2 15.2') == '1.00000001'\nassert solution('1.1 1.2\\n1.2 1.3\\n2.2 1.2') == '0.25'\n'''\nimport sys"
    },
    {
        "number": 3643,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1.2 10.2\n2.2 15.2''') == '1.114672365'\n\nassert solution('''1\n1.2 1.2\n2.2 10.2\n2.2 15.2\n2.2 10.2\n2.2 15.2\n2.2 10.2''') == '1.0'\n'''"
    },
    {
        "number": 3643,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1.2 10.2\n2.2 15.2\n''') == '1.114672365'\nassert solution('''\n2\n0.1 0.1\n1.1 10.1\n2.1 15.1\n''') == '0.01228125'\nassert solution('''\n4\n0.2 0.2\n0.5 0.5\n1.0 1.0\n2.0 2.0\n''') == '0.00750'\nassert solution('''\n4\n0.2 0.2\n0.5 0.5\n1.0 1.0\n2.0 2.0\n''') == '0.00750'\nassert solution('''\n4\n0.2 0.2\n0.5 0.5\n1.0 1.0\n2.0 2.0\n''') == '0.00750'\n"
    },
    {
        "number": 3643,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1.2 10.2\n2.2 15.2''') == '1.114672365'\n'''"
    },
    {
        "number": 3643,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n1.2 10.2\n2.2 15.2''') == '1.114672365'\nassert solution('''1\n1.2 10.2\n2.2 15.2''') == '1.114672365'\nassert solution('''1\n1.2 10.2\n2.2 15.2\n3.2 17.2''') == '2.5040143468'\nassert solution('''5\n1.2 10.2\n2.2 15.2\n3.2 17.2\n4.2 18.2\n5.2 19.2''') == '20.8657361776'\nassert solution('''1000\n1.2 10.2\n2.2 15.2\n3.2 17.2\n4.2 18.2\n5.2 19.2\n6.2 20.2\n7.2 21.2\n8.2 22.2\n9.2 23.2\n10.2 24.2''') == '45380592394.456288963'\n'''"
    },
    {
        "number": 3643,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1.2 10.2\n2.2 15.2''') == '1.114672365'\n'''\nimport sys\nfrom math import log10, ceil\n"
    },
    {
        "number": 3643,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1.2 10.2\n2.2 15.2''') == '1.114672365'\nassert solution('''1.2 10.2\n2.2 15.2\n2.2 15.2''') == '0.0000'\nassert solution('''1.2 10.2\n1.2 10.2\n2.2 15.2\n2.2 15.2''') == '0.0000'\nassert solution('''1.2 10.2\n1.2 10.2\n1.2 10.2\n2.2 15.2\n2.2 15.2\n2.2 15.2''') == '0.0000'\nassert solution('''2.2 15.2\n2.2 15.2\n2.2 15.2\n2.2 15.2\n2.2 15.2\n2.2 15.2\n2.2 15.2\n2.2 15.2''') == '0.0000'\n"
    },
    {
        "number": 3644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 3644,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n1 2 3 2\"\n\nassert solution('\\n') == '1'\n\nassert solution('0 3\\n1 1\\n2 1\\n2 0\\n') == '3\\n1 2 3 2'\nassert solution('5\\n1 1\\n2 1\\n2 0\\n2 0\\n2 1\\n2 0\\n') == '1\\n1 1 1 1'\nassert solution('3\\n2 1\\n2 0\\n') == '1'\n"
    },
    {
        "number": 3644,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n2\n3\n3''') == '1 2 3 2'\nassert solution('''4\n0 3\n1 1\n2 1\n2 0\n''') == '3'\nassert solution('''4\n0 0\n1 1\n2 1\n2 0\n''') == '1'\nassert solution('''1\n1\n1\n2\n2\n''') == '3'\nassert solution('''3\n2\n3\n1\n2\n0\n2\n0\n1\n''') == '1 2'\n"
    },
    {
        "number": 3644,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 3\\n1 1\\n2 1\\n2 0\\n') == '3\\n1 2 3 2'\nassert solution('3\\n0 3\\n1 1\\n2 1\\n2 0\\n') == '3\\n1 2 3 2'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 3644,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n4') == '3\\n3 2 1 2'\nassert solution('1\\n4\\n0 3') == '3\\n3 2 1 2'\nassert solution('1\\n1\\n1') == '2\\n2'\nassert solution('1\\n1\\n0') == '2\\n2'\nassert solution('1\\n0\\n0') == '1\\n1'\n"
    },
    {
        "number": 3644,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3644,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"2\\n0 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\") == \"3\\n1 2 3 2\"\nassert solution(\"2\\n0 1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\"\n\nassert solution(\"2\\n0 2\\n1 2\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n12 2\\n13 2\\n14 2\\n15 2\\n16 2\\n17 2\\n18 2\\n19 2\\n20 2\\n21 2\\n22 2\\n23 2\\n24 2\\n25 2\\n26 2\\n27 2\\n28 2\\n29 2\\n30 2\\n31 2\\n32 2\\n33 2\\n34 2\\n35 2\\n36 2\\n37 2\\n38 2\\n39 2\\n40 2\\n41 2\\n42 2\\n43 2\\n44 2\\n45 2\\n46 2\\n47 2\\n48 2\\n49 2\\n50 2\\n51 2\\n52 2\\n53 2\\n54 2\\n55 2\\n56 2\\n57 2\\n58 2\\n59 2\\n60 2\\n61 2\\n62 2\\n63 2\\n64 2\\n65 2\\n66 2\\n67 2\\n68 2\\n69 2\\n70 2\\n71 2\\n72 2\\n73 2\\n74 2\\n75 2\\n76 2\\n77 2\\n78 2\\n79 2\\n80 2\\n81 2\\n82 2\\n83 2\\n84 2\\n85 2\\n86 2\\n87 2\\n88 2\\n89 2\\n90 2\\n91 2\\n92 2\\n93 2\\n94 2\\n95 2\\n96 2\\n97 2\\n98 2\\n99 2\\n100 2\"\n) == \"3\\n1 2\"\nassert solution(\"4\\n0 3\\n1"
    },
    {
        "number": 3644,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n0\n0\n0\n1\n1\n1\n0\n1\n1\n1\n1\n0\n0\n1\n1\n0\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3644,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4\n0 3\n1 1\n2 1\n2 0\n''') == '3\\n1 2 3 2'\n\nassert solution(\n'''\n2\n2 2\n1 1\n''') == '1\\n1'\n\nassert solution(\n'''\n3\n0 3\n1 1\n1 1\n''') == '2\\n1 2'\n\nassert solution(\n'''\n4\n0 3\n1 1\n2 1\n2 0\n''') == '3\\n1 2 3 2'\n\nassert solution(\n'''\n5\n1 1\n2 1\n2 1\n2 1\n2 1\n2 1\n''') == '2\\n1 2 2 1'"
    },
    {
        "number": 3645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"none\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3''') == '1'\nassert solution('''3\n1 1 2''') == 'none'\nassert solution('''4\n1 2 1 3''') == 'none'\nassert solution('''5\n1 2 1 3 4''') == 'none'\nassert solution('''2\n1 2''') == 'none'\n"
    },
    {
        "number": 3645,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2') == '1\\n'\nassert solution('2\\n1') == '1\\n'\nassert solution('3\\n1 2\\n') == '1\\n'\nassert solution('4\\n1 2 1\\n') == '1\\n'\nassert solution('5\\n1 2 1\\n') == '1\\n'\n"
    },
    {
        "number": 3645,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == 'none'\nassert solution('2\\n2') == 'none'\nassert solution('3\\n1') == 'none'\nassert solution('3\\n2') == 'none'\n"
    },
    {
        "number": 3645,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn = int(input())\na = [int(i) for i in input().split()]\n\na.sort()\n\ns = set()\n\nfor i in a:\n    if i not in s:\n        s.add(i)\n    else:\n        s.discard(i)"
    },
    {
        "number": 3645,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"1 2 3\") == \"123\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"123\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"none\"\nassert solution(\"2\") == \"none\"\nassert solution(\"2 2 2\") == \"none\"\nassert solution(\"1 1 1\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3645,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n') == '1\\n2\\n3'\nassert solution('3\\n1 1 2\\n') == 'none'\nassert solution('5\\n1 2 3 4 5\\n') == '1\\n2\\n3\\n4\\n5'\nassert solution('4\\n1 2 1 3\\n') == 'none'\nassert solution('5\\n1 2 3 4 5\\n') == '1\\n2\\n3\\n4\\n5'\n"
    },
    {
        "number": 3645,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2 3''') == '1'\nassert solution('''3\n1 1 2''') == 'none'\nassert solution('''4\n1 2 1 3''') == 'none'\nassert solution('''4\n1 1 2 1''') == 'none'\nassert solution('''5\n1 2 1 3 4''') == 'none'\n"
    },
    {
        "number": 3646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n2 1 0 1 2 3 3''') == '5'\nassert solution('''9\n2 1 0 1 2 3 3 4 4 5 5 6 6 7 7 8 8 9''') == '8'\nassert solution('''20\n2 0 1 0 1 0 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3646,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\"\n\nassert solution('''\n7\n2 1 0 1 2 3 3\n''') == \"5\"\n\nassert solution('''\n1000000000\n1000000000 1000000000\n''') == \"5\"\n\nassert solution('''\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1"
    },
    {
        "number": 3646,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '5'\nassert solution('1\\n5') == '1'\nassert solution('2\\n1') == '3'\nassert solution('1\\n100') == '10000'\nassert solution('5\\n5') == '0'\n"
    },
    {
        "number": 3646,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2 1 0 1 2 3 3\\n') == '5'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3646,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n2 1 0 1 2 3 3\n''') == '5'\n\nassert solution('''2\n0\n''') == '0'\n\nassert solution('''7\n1 2 3 4 5 6 7\n''') == '1'\n\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n''') == '99'\n\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n''') == '99'"
    },
    {
        "number": 3646,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\"\nassert solution(\"6 1 0 2 3 5 7\") == \"3\"\nassert solution(\"6 1 0 2 3 4 5\") == \"4\"\nassert solution(\"5 1 0 2 3 4 5\") == \"5\"\nassert solution(\"5 1 0 2 3 4\") == \"4\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('3\\n4') == '2'\nassert solution('4\\n5') == '3'\nassert solution('5\\n6') == '4'\n"
    },
    {
        "number": 3646,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '4'\nassert solution('2\\n3\\n4\\n5') == '3'\nassert solution('5\\n5\\n5\\n5') == '5'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '3'\nassert solution('8\\n9 8 2 4 5 6 7 8') == '7'\n"
    },
    {
        "number": 3646,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\nassert solution(\"2 3 1 0 2 3 3\") == \"\"\nassert solution(\"3 3 3 1 0 0 2\") == \"\"\nassert solution(\"1 1 0 1 2 3 3\") == \"\"\nassert solution(\"5 5 1 0 1 2 3 3\") == \"\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2 1 0 1 2 3''') == '5'\nassert solution('''4\n2 1 0 1 2 3''') == '5'\nassert solution('''6\n6 6 6 6 6 6''') == '8'\nassert solution('''9\n3 0 0 3 0 3 3 3''') == '8'\nassert solution('''9\n1 0 0 1 0 1 0 1''') == '5'\n"
    },
    {
        "number": 3647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\n\nassert solution('10 15\\n#######\\n##...#\\n##..#_\\n#...##\\n#...##\\n##.##_\\n#...##\\n#...##\\n#...##\\n#######') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1'\n\nassert solution('1 10\\n*_*_*\\n_*_*_*\\n_*_*_*\\n_*_*_*\\n_*_*_*\\n_*_*_*\\n_*_*_*\\n_*_*_*\\n*_*_*_*') == '-1 -1 -1 -1 -1\\n-1 3 4 5 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1'\n\nassert solution('1 1\\n*') == '-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1'\n\nassert solution('1 1\\n*') == '-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1'"
    },
    {
        "number": 3647,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '4 5 6 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '4 5 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '4 1 0 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '4 3 1 2 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n###\n"
    },
    {
        "number": 3647,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"10 10\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n"
    },
    {
        "number": 3647,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"5 3\\n#..#\\n#.#.\\n#.#.\\n#.#.\\n#.#.\") == \"-1 -1 -1 -1 -1\\n-1 4 5 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"5 5\\n...#\\n.#M#\\n#.#.\\n#.#.\\n.#M#\\n#.#.\") == \"6 -1 -1 -1 -1 -1\\n-1 4 5 -1\\n-1 4 -1 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n#####\\n#####\\n#####\\n') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n#####\\n#####\\n#####\\n') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('2 3\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n#####\\n#####\\n#####\\n') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n#####\\n#####\\n#####\\n') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('6 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n#####\\n#####\\n#####\\n') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\n"
    },
    {
        "number": 3648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3''') == '6'\n'''\n"
    },
    {
        "number": 3648,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n\nassert solution(\"1\") == \"\"\n\nassert solution(\"2\\n2\\n1\\n1\\n1\\n1\") == \"\"\n\nassert solution(\"2\\n2\\n1\\n1\\n1\\n1\") == \"\"\n\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"\""
    },
    {
        "number": 3648,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\nassert solution('''\n4 7 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n4 5 5\n5 6 6\n6 7 7\n''') == 'Impossible'\n'''\n"
    },
    {
        "number": 3648,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '6'\nassert solution('1 1 1') == 'impossible'\nassert solution('1 1 1 1') == 'impossible'\nassert solution('3 1 1') == 'impossible'\nassert solution('1 3 1 1') == 'impossible'\n"
    },
    {
        "number": 3648,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 3648,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\nassert solution('''\n3 2 1\n2\n1 2 1\n2 3 1\n3 4 1\n''') == 'impossible'\nassert solution('''\n5 6 2\n1\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n''') == '6'\nassert solution('''\n4 0 2\n3\n1 2 2\n2 3 1\n3 4 2\n''') == 'impossible'\nassert solution('''\n6 1 1\n1\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n2 3 2\n2 4 2\n2 5 2\n3 4 3\n3 5 3\n4 5 4\n''') == '6'\n"
    },
    {
        "number": 3648,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\"\nassert solution(\"3 2 1\\n2\\n2 3\\n3 2\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"10 13 2\n1\n1 2 1\n2 3 2\n1 4 2\n3 4 3\n1 6 1\n1 7 1\n1 9 1\n2 3 2\n3 4 3\n4 6 3\n5 7 4\n6 9 4\n7 9 3\n8 9 2\n9 10 4\"\"\"\n) == \"Impossible\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\nassert solution('''1\n4\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible'\nassert solution('''1\n4\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n''') == '2'\nassert solution('''1\n4\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible'\nassert solution('''1\n4\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n2 3 2\n2 4 4\n3 4 3\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 2 2\n1 3 3\n1 4 4\n"
    },
    {
        "number": 3648,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 6 1\") == \"6\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"5 4 2\") == \"impossible\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n3 1 4\\n3 2 4\\n3 3 4\\n1 2 3\\n2 3 4\\n2 4 1\\n3 4 1\\n1 4 3\") == \"6\"\nassert solution(\"2 2 2\\n1 2 2\\n2 2 2\") == \"impossible\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"01001\"\n\"\"\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2 3 2') == '01101'\nassert solution('4 2 1 1') == '01100'\nassert solution('4 1 3 4') == 'impossible'\nassert solution('1 1 1 1') == '101'\nassert solution('2 2 2 2') == '110101'\n"
    },
    {
        "number": 3649,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 2 1') == '01001'\nassert solution('3 4 2 1') == '01001'\nassert solution('2 4 2 1') == 'impossible'\nassert solution('3 4 2 1') == '01001'\nassert solution('5 5 5 5') == 'impossible'\n"
    },
    {
        "number": 3649,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 2 1') == '01001'\nassert solution('1 2 1 4') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 2 1') == '01001'\nassert solution('3 4 2 1') == '01001'\nassert solution('3 4 2 1') == '01001'\nassert solution('3 4 2 1') == '01001'\nassert solution('3 4 2 1') == '01001'\n"
    },
    {
        "number": 3649,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 2 1') == '01001'\nassert solution('3 4 2 1') == '01001'\nassert solution('3 4 2 1') == '01001'\nassert solution('3 4 2 1') == '01001'\nassert solution('3 4 2 1') == '01001'\n"
    },
    {
        "number": 3649,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"01001\"\n\"\"\""
    },
    {
        "number": 3649,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '01001'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == '01111'\nassert solution(stdin) == '01001'\nassert solution(stdin) == '01001'\n"
    },
    {
        "number": 3649,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\n"
    },
    {
        "number": 3649,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '01001'\nassert solution(stdin) == '01010'\nassert solution(stdin) == '01010'\nassert solution(stdin) == '01101'\nassert solution(stdin) == '01011'\n"
    },
    {
        "number": 3650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 3650,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"possible\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3650,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"input/bablu-puzzles.txt\").read()) == \"possible\"\nassert solution(open(\"input/bablu-solutions.txt\").read()) == \"impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4''') == 'possible'\nassert solution('''3 3 3\n1 1 1\n1 2\n2 2\n2 3\n3 3\n3 4''') == 'impossible'\nassert solution('''3 3 2\n2 2\n2 3\n3 3\n3 4''') == 'impossible'\nassert solution('''1 1 1\n2 2\n2 3\n3 3\n3 4''') == 'impossible'\nassert solution('''2 2 3\n2 1\n2 2\n2 3\n1 2\n2 3\n1 2\n1 3\n2 3''') == 'impossible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\n'''\nassert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\n'''\nassert solution('''5 4 4\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\n\nassert solution('''5 5 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\nassert solution('''4 4 4\n1 1\n1 2\n2 2\n2 3\n3 3\n''') == 'impossible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4''') == 'possible'\nassert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n2 3\n1 2\n3 3\n3 4''') == 'impossible'\nassert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n3 1\n2 3\n1 2\n3 3\n3 4\n3 4''') == 'possible'\n'''\n-----\nlintcode\n-----\n- challenge\n- example case 1:\n  given: \n  - 3 4 6\n  - 1 1\n  - 1 2\n  - 2 2\n  - 2 3\n  - 3 3\n  - 3 4\n  - 3 1\n  - 2 3\n  - 1 2\n  - 3 3\n  - 3 4\n  - 3 4\n\n  output:\n  possible\n\n  (this is a better solution than the example case 1)\n- example case 2:\n  given: \n  - 3 4 6\n  - 1 1\n  - 1 2\n  - 2 2\n  - 2 3\n  - 3 3\n  - 3 4\n  - 3 1\n  - 2 3\n  - 1 2\n  - 3 3\n  - 3 4\n  - 3 4\n\n  output:\n  impossible\n\n- example case 3:\n  given: \n  - 4 5 9\n  - 1 1\n  - 1 2\n  - 2 2\n  - 2 3\n  - 3 3\n  - 3 4\n  - 3 1\n  - 2 3\n  - 1 2\n  - 3 3\n  - 3 4\n  - 3 4\n\n  output:\n  impossible\n\n- example case 4:\n  given: \n  - 1 1\n  - 1 2\n  - 2 2\n  - 2 3\n  - 3 3\n  - 3 4\n  - 3 1\n  - 2 3\n  - 1 2\n  - 3 3\n  - 3 4\n  - 3 4\n\n  output:\n  impossible\n'''\n'''\n- example case 5:\n  given: \n  - 1 1\n  - 1 2\n  - 2 2\n  - 2 3\n  - 3 3\n  - 3 4\n  - 3 1\n  - 2 3\n  - 1 2\n  - 3 3\n  - 3 4\n  - 3 4\n\n  output:\n  impossible\n'''\n'''\n- example case 6:\n  given: \n  - 1 1\n  - 1 2\n  - 2 2\n  - 2 3\n  - 3 3\n  - 3 4\n  - 3 1\n  - 2 3\n  - 1 2\n  - 3 3\n  - 3 4\n  - 3 4\n\n  output:\n  impossible\n'''\n'''\n- example case 7:\n  given:"
    },
    {
        "number": 3650,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\n'''\n"
    },
    {
        "number": 3650,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\nassert solution('''5 5 7\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 4\n4 5\n5 5\n5 6\n6 6\n6 7\n7 7\n''') == 'impossible'\nassert solution('''1 1 1\n1 2\n1 3\n1 4\n1 5\n2 1\n2 2\n2 3\n2 4\n2 5\n3 1\n3 2\n3 3\n3 4\n3 5\n4 1\n4 2\n4 3\n4 4\n4 5\n5 1\n5 2\n5 3\n5 4\n5 5\n''') == 'impossible'\nassert solution('''3 4 5\n1 1\n1 2\n1 3\n2 2\n2 3\n3 3\n3 4\n4 4\n4 5\n5 5\n''') == 'possible'\nassert solution('''5 5 6\n1 1\n1 2\n1 3\n1 4\n1 5\n2 1\n2 2\n2 3\n2 4\n2 5\n3 1\n3 2\n3 3\n3 4\n3 5\n4 1\n4 2\n4 3\n4 4\n4 5\n5 1\n5 2\n5 3\n5 4\n5 5\n''') == 'possible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3 4\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n6 6\\n6 7\\n7 7\\n7 8\\n8 8\\n8 9\\n9 9\\n9 10\\n10 10\\n10 11\\n11 11\\n11 12\\n12 12\\n12 13\\n13 13\\n13 14\\n14 14\\n14 15\\n15 15\\n15 16\\n16 16\\n16 17\\n17 17\\n17 18\\n18 18\\n18 19\\n19 19\\n19 20\\n20 20\") == \"possible\"\nassert solution(\"2 3 4\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n6 6\\n6 7\\n7 7\\n7 8\\n8 8\\n8 9\\n9 9\\n9 10\\n10 10\\n10 11\\n11 11\\n11 12\\n12 12\\n12 13\\n13 13\\n13 14\\n14 14\\n14 15\\n15 15\\n15 16\\n16 16\\n16 17\\n17 17\\n17 18\\n18 18\\n18 19\\n19 19\\n19 20\\n20 20\\n20 21\\n21 21\\n21 22\\n22 22\\n22 23\\n23 23\\n23 24\\n24 24\\n24 25\\n25 25\\n25 26\\n26 26\\n26 27\\n27 27\\n27 28\\n28 28\\n28 29\\n29 29\\n29 30\\n30 30\\n30 31\\n31 31\\n31 32\\n32 32\\n32 33\\n33 33\\n33 34\\n34 34\\n34 35\\n35 35\\n35 36\\n36 36\\n36 37\\n37 37\\n37 38\\n38 38\\n38 39\\n39 39\\n39 40\\n40 40\\n40 41\\n41 41\\n41 42\\n42 42\\n42 43\\n43 43\\n43 44\\n44 44\\n44 45\\n45 45\\n45 46\\n46 46\\n46 47\\n47 47\\n47 48\\n48 48\\n48 49\\n49 49\\n49 50\\n50 50\") == \"impossible\"\nassert solution(\"2 3 4\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n6 6\\n6 7\\n7 7\\n7 8\\n8 8\\n8 9\\n9 9\\n9 10\\n10 10\\n10 11\\n11 11\\n11 12\\n12 12\\n12 13\\"
    },
    {
        "number": 3650,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible'\nassert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'impossible'\n\nassert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible'\nassert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'impossible'\n\nassert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible'\n"
    },
    {
        "number": 3651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0'\nassert solution('''1\n0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '1.0'\nassert solution('''0\n-1 1 1\n0 0 1\n-2 1 -1\n2 1 1\n0 0 2\n0 0 0''') == '5.0'\nassert solution('''0\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n0 0 0\n-1 1 -1\n0 0 0\n0 0 0''') == '0.0'\nassert solution('''0\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n0 0 0\n0 1 -1\n0 0 0\n0 0 0\n0 1 1\n0 0 0\n0 0 0\n0 0 0\n0 1 -1\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0"
    },
    {
        "number": 3651,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n') == '2.0'\nassert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n') == '0.0'\nassert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3"
    },
    {
        "number": 3651,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0\nassert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0\nassert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0\nassert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0\nassert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0\n"
    },
    {
        "number": 3651,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0'\nassert solution('''5\n-2 -2 -2\n-2 -2 -2\n-2 -2 -2\n-2 -2 -2\n-2 -2 -2''') == '10.0'\n'''\nimport sys\nfrom math import *\n"
    },
    {
        "number": 3651,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3651,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0'\nassert solution('''2\n0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0'\nassert solution('''2\n-1 -2 -3\n1 1 1\n2 0 3\n2 1 3''') == '2.0'\nassert solution('''2\n0 0 1\n0 1 1\n1 0 3\n1 1 3''') == '2.0'\nassert solution('''3\n-1 -2 -3\n0 0 1\n0 1 1\n1 0 3\n1 1 3''') == '0.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''0 0 1\n0 1 1\n2 0 3\n2 1 3'''\n) == '2.0'\nassert solution(\n'''0 0 1\n0 1 1\n2 0 3\n2 1 3'''\n) == '2.0'\nassert solution(\n'''3\n1 0 1\n1 1 1\n1 1 2'''\n) == '2.0'\nassert solution(\n'''100\n1 1 1\n1 1 1\n1 1 1\n1 1 1'''\n) == '0.0'\nassert solution(\n'''6\n-1.5 1.5 -2.5\n-1.5 1.5 -2.5\n-1.5 1.5 -2.5\n-1.5 1.5 -2.5\n-1.5 1.5 -2.5\n-1.5 1.5 -2.5'''\n) == '2.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\nstdin = '''4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n'''\nprint(solution(stdin))\n"
    },
    {
        "number": 3651,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"0.000000\"\nassert solution(\"5\\n0 0 0\\n0 1 0\\n2 0 3\\n2 1 3\\n3 0 3\") == \"1.99999\"\nassert solution(\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"0.000000\"\nassert solution(\"5\\n0 0 0\\n0 1 0\\n2 0 3\\n2 1 3\\n3 0 3\") == \"1.99999\"\nassert solution(\"5\\n0 0 0\\n0 1 0\\n2 0 3\\n2 1 3\\n3 0 3\") == \"0.000000\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0'\nassert solution('''0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0'\nassert solution('''0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0'\nassert solution('''0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0'\nassert solution('''0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0'\n"
    },
    {
        "number": 3652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 3 4\") == \"1\"\nassert solution(\"5 5 1 1 3 4 7\") == \"1\"\nassert solution(\"5 5 1 1 3 4 7 5 5 1 1 1 3 4 7\") == \"3\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3652,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n\"\"\") == \"4\"\nassert solution(\"\"\"10\n2 1 3 4 5 6 7 8 9 10\n2 1 3 4 5 6 7 8 9 10\n2 1 3 4 5 6 7 8 9 10\n2 1 3 4 5 6 7 8 9 10\n2 1 3 4 5 6 7 8 9 10\n2 1 3 4 5 6 7 8 9 10\n2 1 3 4 5 6 7 8 9 10\n2 1 3 4 5 6 7 8 9 10\n2 1 3 4 5 6 7 8 9 10\n\"\"\") == \"1\"\nassert solution(\"\"\"100\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21"
    },
    {
        "number": 3652,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n    3\n    5 4 3 2 1 6 7\n    5 5 1 1 3 4 7\n    3 7 1 4 5 6 2\n\"\"\") == '4'\nassert solution(\n\"\"\"\n    10\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n\"\"\") == '1'\nassert solution(\n\"\"\"\n    10\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n\"\"\") == '2'\nassert solution(\n\"\"\"\n    10\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1\n\"\"\") == '3'\n"
    },
    {
        "number": 3652,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3652,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\n\nassert solution(\n'''3\n3 1 3\n1 3\n3 1\n''') == '1'\n\nassert solution(\n'''7\n3 7 1 4 5 6 2\n3 7 1 4 5 6 2\n3 7 1 4 5 6 2\n''') == '0'\n'''\n"
    },
    {
        "number": 3652,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2 3') == ''\nassert solution('3 4') == ''\nassert solution('5 6') == ''\n"
    },
    {
        "number": 3652,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n2') == '1'\nassert solution('2\\n3\\n4') == '1'\nassert solution('2\\n2\\n1') == '1'\nassert solution('2\\n2\\n3') == '1'\nassert solution('3\\n2\\n1') == '1'\n"
    },
    {
        "number": 3652,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\\n\") == \"2\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"3\"\nassert solution(\"6\\n3 -2\\n4 0\\n5 -1\\n6 1\\n\") == \"3\"\nassert solution(\"-1\\n5 0\\n3 0\\n\") == \"3\"\nassert solution(\"2\\n-1 1\\n1 1\\n\") == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n-10 0\\n-10 10\") == \"2\"\nassert solution(\"6\\n0 0\\n-10 0\\n-10 10\\n0 0\\n-10 10\\n0 10\") == \"3\"\nassert solution(\"1\\n0 0\\n0 0\") == \"1\"\nassert solution(\"1\\n0 0\\n10 0\") == \"2\"\nassert solution(\"1\\n0 0\\n1 0\") == \"1\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n-10 0\n-10 10\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n10000\n-10 0\n-10 10\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2\n0 0\n0 10\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n-2\n-10 0\n-10 10\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n-2\n0 0\n10 0\n\"\"\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3653,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3653,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0 0\\n0 1\") == \"1\"\nassert solution(\"1\\n0 0\\n-1 0\") == \"2\"\nassert solution(\"1\\n0 0\\n-10 0\") == \"2\"\nassert solution(\"1\\n0 0\\n-10 10\") == \"2\"\nassert solution(\"1\\n0 0\\n1 0\") == \"1\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n-10 0\\n-10 10') == '2'\nassert solution('4\\n0 0\\n0 10\\n10 0') == '2'\nassert solution('3\\n0 0\\n0 10\\n10 0') == '2'\nassert solution('3\\n-1 -1\\n-1 -1\\n1 1') == '1'\nassert solution('3\\n-10 -10\\n-10 10\\n10 10') == '3'\n"
    },
    {
        "number": 3653,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == open(\"test_output.txt\", \"r\").read()\nassert solution(open(\"input.txt\", \"r\").read()) == open(\"output.txt\", \"r\").read()\n"
    },
    {
        "number": 3653,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10\\n-10 0') == '2'\nassert solution('10\\n0 10\\n0 0') == '2'\nassert solution('10\\n-10 10\\n0 0') == '2'\nassert solution('10\\n0 0\\n-10 10\\n0 0') == '2'\nassert solution('10\\n0 0\\n0 0\\n-10 10\\n0 0') == '2'\n"
    },
    {
        "number": 3653,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 5\n''') == '0'\nassert solution('''2 3\n''') == '6'\nassert solution('''10 10\n''') == '1536'\nassert solution('''100 1000\n''') == '1488787'\nassert solution('''10 17\n''') == '7964'\n"
    },
    {
        "number": 3654,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 5''') == '0'\nassert solution('''2 3''') == '7'\nassert solution('''3 4''') == '10'\nassert solution('''5 7''') == '32'\nassert solution('''8 12''') == '280'\n"
    },
    {
        "number": 3654,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5') == '0'\nassert solution('2 2') == '3'\nassert solution('3 3') == '4'\nassert solution('4 4') == '9'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3654,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5') == 0\nassert solution('1 1') == 0\nassert solution('1 0') == 1\nassert solution('0 1') == 2\nassert solution('0 2') == 3\n"
    },
    {
        "number": 3654,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 0\n"
    },
    {
        "number": 3654,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5') == '0'\nassert solution('1 6') == '1'\nassert solution('2 5') == '1'\nassert solution('2 6') == '2'\nassert solution('3 5') == '1'\n"
    },
    {
        "number": 3654,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5') == '0'\nassert solution('2 9') == '4'\nassert solution('7 19') == '6'\nassert solution('8 22') == '5'\nassert solution('100 1000') == '50'\n"
    },
    {
        "number": 3654,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    stdin = '1 5') == '0'\nassert solution(\n    stdin = '2 10') == '4'\nassert solution(\n    stdin = '3 19') == '7'\nassert solution(\n    stdin = '100 500') == '0'\nassert solution(\n    stdin = '99999 999999') == '999'\n"
    },
    {
        "number": 3654,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5') == '0'\nassert solution('2 5') == '0'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('3 2') == '0'\n"
    },
    {
        "number": 3654,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5') == '0'\nassert solution('10 11') == '2'\nassert solution('2 3') == '1'\nassert solution('3 5') == '2'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 3655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == expected\n\nassert solution('0 0\\n' * 4 + '0 1 0\\n') == '0 0\\n1 1\\n0 1\\n1 1'\nassert solution('1 0\\n' * 4 + '0 1 0\\n') == '0 0\\n1 1\\n0 1\\n1 1'\nassert solution('0 0\\n' * 4 + '0 1 0\\n') == '0 0\\n1 1\\n0 1\\n1 1'\n"
    },
    {
        "number": 3655,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '2 2\\n'\n    '1 0\\n'\n    '0 1\\n'\n) == '0 0\\n1 1\\n'\n\nassert solution(\n    '2 2\\n'\n    '1 0\\n'\n    '0 1\\n'\n    '1 0 0\\n'\n    '0 1 0\\n'\n    '0 0 1\\n'\n) == '0 0\\n1 1\\n'\n\nassert solution(\n    '2 2\\n'\n    '1 0\\n'\n    '0 1\\n'\n    '3 3\\n'\n    '1 0 0\\n'\n    '0 1 0\\n'\n    '0 0 1\\n'\n) == '0 0\\n1 1\\n'\n\nassert solution(\n    '2 2\\n'\n    '1 0\\n'\n    '0 1\\n'\n    '1 0 0\\n'\n    '0 1 0\\n'\n    '0 0 1\\n'\n    '0 0 0\\n'\n    '0 0 0\\n'\n    '0 0 0\\n'\n    '0 0 0\\n'\n    '0 0 0\\n'\n) == '0 0\\n1 1\\n'\n\nassert solution(\n    '4 4\\n'\n    '1 1 0 0\\n'\n    '0 1 0 0\\n'\n    '1 0 1 0\\n'\n    '0 1 0 0\\n'\n    '0 0 1 0\\n'\n    '0 0 1 0\\n'\n    '0 0 1 0\\n'\n    '0 0 0 1\\n'\n    '0 0 0 1\\n'\n    '0 0 0 1\\n'\n    '0 0 0 0\\n'\n) == '0 1\\n1 0\\n'"
    },
    {
        "number": 3655,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\"\n) == '0 0\\n1 1'\n\nassert solution(\n\"\"\"\n2 2\n0 1\n1 0\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\"\n) == '0 1\\n1 0'\n\nassert solution(\n\"\"\"\n2 2\n0 1\n1 0\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\"\n) == '0 1\\n1 0'\n\nassert solution(\n\"\"\"\n2 2\n0 1\n1 0\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\"\n) == '0 1\\n1 0'\n\nassert solution(\n\"\"\"\n2 2\n0 1\n1 0\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\"\n) == '0 1\\n1 0'"
    },
    {
        "number": 3655,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output\n\"\"\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'\n'''\n>>> import sys\n>>> sys.argv\n['solution.py', '''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''']\n>>> sys.argv[0]\n'solution.py'\n>>> sys.argv[1]\n'2 2'\n>>> sys.argv[2]\n'1 0'\n>>> sys.argv[3]\n'0 1 0'\n'''\n>>> assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'\n'''\n>>> import sys\n>>> sys.argv\n['solution.py', '''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''']\n>>> sys.argv[0]\n'solution.py'\n>>> sys.argv[1]\n'2 2'\n>>> sys.argv[2]\n'1 0'\n>>> sys.argv[3]\n'0 1 0'\n'''\n>>> import sys\n>>> sys.argv\n['solution.py', '''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''']\n>>> sys.argv[0]\n'solution.py'\n>>> sys.argv[1]\n'2 2'\n>>> sys.argv[2]\n'1 0'\n>>> sys.argv[3]\n'0 1 0'\n'''\n>>> assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'\n'''\n>>> import sys\n>>> sys.argv\n['solution.py', '''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''']\n>>> sys.argv[0]\n'solution.py'\n>>> sys.argv[1]\n'2 2'\n>>> sys.argv[2]\n'1 0'\n>>> sys.argv[3]\n'0 1 0'\n'''\n>>> assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'\n'''\n>>> import sys\n>>> sys.argv\n['solution.py', '''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''']\n>>> sys.argv[0]\n'solution.py'\n>>> sys.argv[1]\n'2 2'\n>>> sys.argv[2]\n'1 0'\n>>> sys.argv[3]\n'0 1 0'\n'''\n>>> assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'\n'''\n>>> import sys\n>>> sys.argv\n['solution.py', '''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''']\n>>> sys.argv[0]\n'solution.py'\n>>> sys.argv[1]\n'2 2'\n>>> sys.argv[2]\n'1 0'\n>>> sys.argv[3]\n'0 1 0'\n'''\n>>> assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'\n'''\n>>> import sys\n>>> sys.argv\n['solution.py', '''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''']\n>>> sys.argv[0]\n'solution.py'\n>>> sys.argv[1]\n'2 2'\n>>> sys.argv[2]\n'1 0'\n>>> sys.argv[3]\n'0 1 0'\n'''\n>>> assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'\n'''\n>>> import sys\n>>> sys.argv\n['solution.py', '''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''']\n>>> sys.argv[0]\n'solution.py'\n>>> sys.argv[1]\n'2 2'\n>>> sys.argv[2]\n'1 0'\n>>> sys.argv[3]\n'0 1 0'\n'''\n>>> assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'\n'''\n>>> import sys\n>>> sys.argv\n['solution.py', '''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''']\n>>> sys.argv[0]\n'solution.py'\n>>> sys.argv[1]\n'2 2'\n>>> sys.argv[2]\n'1 0'\n>>> sys.argv[3]\n'0 1 0'\n'''\n>>> assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'\n'''\n>>> import sys\n>>> sys.argv\n['solution.py', '''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''']\n>>> sys.argv[0]\n'solution.py'\n>>> sys.argv[1]\n'2 2"
    },
    {
        "number": 3655,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2 2\n1 0\n0 1\"\"\") == \"\"\"0 0\n1 1\"\"\"\n\nassert solution(\"\"\"2 1\n1 0\n0 1\"\"\") == \"\"\"\"\"\"\n\nassert solution(\"\"\"2 2\n1 0\n0 1\"\"\") == \"\"\"\"\"\"\n\nassert solution(\"\"\"2 1\n0 1\n0 1\"\"\") == \"\"\"\"\"\"\n\nassert solution(\"\"\"3 3\n1 0 0\n0 1 0\n0 0 1\n1 1 1\"\"\") == \"\"\"\"\"\""
    },
    {
        "number": 3655,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1\n0 0\n0 1''') == '0 0\\n1 1'\nassert solution('''2 2\n0 0\n0 1''') == '0 0\\n1 1'\nassert solution('''4 3\n1 1 1 1\n1 0 0\n1 1 1\n1 1 1''') == '0 0\\n1 1\\n1 1\\n1 1'\nassert solution('''6 3\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n1 0 0\n1 0 0\n1 0 0''') == '0 0\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('''10 10\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1''') == '0 0\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\n"
    },
    {
        "number": 3655,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n'''\n) == '0 0\\n1 1\\n'\n"
    },
    {
        "number": 3655,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0 0\\n1 1'\nassert solution(stdin) == '0 1\\n0 0'\nassert solution(stdin) == '1 1'\nassert solution(stdin) == '1 0'\n\n------------------------------------------------------------------------\n\n\"\"\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'\n'''\n"
    },
    {
        "number": 3656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 0.950000\n0.700000 50''') == '44.975'\nassert solution('''1 2 0.9\n0.7 10000\n''') == '57.853'\nassert solution('''0.89999 0.89999 0.89999\n0.89999 0.89999 0.89999\n''') == '-1.0'\nassert solution('''1 2 0.3\n1 1 0.3\n''') == '-1.0'\nassert solution('''1 2 0.1\n1 1 0.9\n''') == '-1.0'\n"
    },
    {
        "number": 3656,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0 0.950000\n50 0.700000''') == '44.975'\nassert solution('''1 1 1\n0.700000 50''') == '44.975'\nassert solution('''1 2 0.950000\n0.700000 50''') == '44.975'\nassert solution('''1 0.950000\n0.700000 50''') == '44.975'\nassert solution('''1 0.700000\n0.700000 50''') == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3656,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 10 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"2 10 0.950000\\n0.700000 50\\n0.865000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.875000 50\\n0.700000 50\\n0.875000 50\\n0.700000 50\\n0.875000 50\\n0.700000 50\\n0.850000 50\\n0.775000 50\\n0.700000 50\\n0.850000 50\\n0.800000 50\\n0.700000 50\\n0.875000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.865000 50\\n0.700000 50\\n0.865000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.875000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0.835000 50\\n0.700000 50\\n0.850000 50\\n0.700000 50\\n0."
    },
    {
        "number": 3656,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 0.950000\n0.700000 50''') == '44.975'\n'''"
    },
    {
        "number": 3656,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\n\"\"\""
    },
    {
        "number": 3656,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0.700000 50\n0.700000 50''') == '44.975'\n'''\nB, T, f = map(int, stdin.readline().split())\np = {}\nfor _ in range(B):\n    p[tuple(map(int, stdin.readline().split()))] = 1\nfor _ in range(T):\n    p_ = {}\n    for (p_x, p_s) in p.items():\n        p_x_, p_s_ = p_x\n        p_s_ *= 1 - p_x_ * f\n        p_x_ *= 1 - p_s_ / p_x_\n        p_s_ += p_x_ * f\n        p_x_ *= 1 - p_s_ / p_x_\n        p_s_ *= 1 - p_x_ / p_s_\n        p_s_ += p_x_ * f\n        p_x_ *= 1 - p_s_ / p_x_\n        p_s_ *= 1 - p_x_ / p_s_\n        p_s_ += p_x_ * f\n    p = p_\np_ = sum(p.values())\np_ *= 1 - 1 / p_\nprint(f'{p_:.6f}')\n"
    },
    {
        "number": 3656,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n'''\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 3656,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2 0.950000\n0.700000 50''') == '44.975'\n\nassert solution('''1 2 0.500000\n0.5 4\n0.5 2\n0.5 2\n0.5 4\n0.5 6''') == '16.75'\n\nassert solution('''1 2 0.700000\n0.5 4\n0.5 2\n0.5 2\n0.5 4\n0.5 6''') == '14.125'\n\nassert solution('''1 2 0.90000\n0.5 4\n0.5 2\n0.5 2\n0.5 4\n0.5 6''') == '11.37'\n\nassert solution('''1 2 0.90000\n0.5 4\n0.5 2\n0.5 2\n0.5 4\n0.5 6''') == '9.8'"
    },
    {
        "number": 3656,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"44.975\"\n\"\"\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(\"2 2 3\") == \"IMPOSSIBLE\"\nassert solution(\"2 2 3\") == \"2\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n\nassert solution('''\n1 1\n5 2\n1 3\n3\n3\n2\n1\n''') == '2'\n\nassert solution('''\n2 10\n1 1\n1 10\n2\n1\n1\n2\n1\n1\n1\n''') == '2'\n\nassert solution('''\n1 1\n1 10\n2\n1\n1\n2\n1\n1\n1\n''') == '2'\n\nassert solution('''\n2 2\n1 1\n1 1\n2\n1\n1\n2\n1\n1\n1\n''') == '2'"
    },
    {
        "number": 3657,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"10 10 10\n5 4\n6 5\n9 9\n8 8\n3 3\n5\n5\n3\n3\n5\n3\n1\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\n\"\"\"10 10 10\n9 8\n6 9\n5 9\n4 9\n3 9\n2 9\n1 9\n1\n\"\"\") == \"9\"\nassert solution(\n\"\"\"10 10 10\n6 8\n1 1\n1\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5"
    },
    {
        "number": 3657,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3657,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n\n-----Solutions-----\n\"\"\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n3\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 1 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2'\nassert solution('3 1 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 1 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2'\n"
    },
    {
        "number": 3657,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n3\") == \"2\"\nassert solution(\"4 2 3\\n1 1\\n2 2\\n3 3\\n2 2\\n1 3\\n3\\n2\\n2\") == \"IMPOSSIBLE\"\nassert solution(\"4 2 3\\n1 1\\n2 2\\n3 3\\n2 2\\n1 3\\n3\\n2\\n3\") == \"1\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n3\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n3\") == \"2\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\n''') == 'IMPOSSIBLE'\nassert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n2\n2\n''') == '2'\nassert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n2\n3\n''') == '3'\nassert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n2\n3\n''') == '2'\nassert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n2\n3\n''') == '3'\n"
    },
    {
        "number": 3658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\nassert solution('3 3\\n1.0 2.0\\n0.0 1.0\\n6.0 3.0\\n2.0 6.0\\n8.0 4.0\\n4.0 9.0') == '8.0'\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n10.0 4.0\\n4.0 10.0\\n4.0 9.0') == '10.0'\nassert solution('3 3\\n10.0 6.0\\n6.0 10.0\\n6.0 6.0\\n0.0 4.0\\n4.0 9.0\\n9.0 2.0\\n2.0 6.0\\n6.0 0.0\\n4.0 4.0') == '12.0'\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n10.0 4.0\\n4.0 10.0\\n4.0 9.0\\n0.0 2.0\\n2.0 6.0\\n6.0 0.0\\n4.0 4.0') == '16.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0'\nassert solution('1 1\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0'\nassert solution('1 1\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0'\nassert solution('1 1\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0'\nassert solution('1 1\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0''') == '4.0'\n'''\n"
    },
    {
        "number": 3658,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 2\\n1 1\\n3 0') == '1.00000\\n'\nassert solution('2 1\\n1 1\\n1 0') == '2.00000\\n'\nassert solution('3 1\\n0 0\\n0 0\\n0 0\\n0 0') == '1.00000\\n'\nassert solution('2 2\\n0 0\\n0 0\\n1 1\\n1 1') == '1.00000\\n'\nassert solution('3 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '1.00000\\n'\n"
    },
    {
        "number": 3658,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\nprint(solution('0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0'))\n'''\n"
    },
    {
        "number": 3658,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 2\\n0 2\\n-1 -1\") == 1\nassert solution(\"1 1\\n1 1\\n0 0\") == 0\nassert solution(\"1 1\\n1 1\\n0 0\\n0 0\") == 0\nassert solution(\"2 2\\n0 1\\n1 0\\n2 0\") == 1\nassert solution(\"1 1\\n1 1\\n0 0\\n2 0\") == 1\n"
    },
    {
        "number": 3658,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0''') == \"4.0\"\n'''"
    },
    {
        "number": 3658,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0''') == '4.0'\n'''\nassert solution('''3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0''') == '4.0'\n'''\n"
    },
    {
        "number": 3659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '18000'\nassert solution('1\\n1 1') == '1'\nassert solution('2\\n1 1\\n2 1') == '1'\nassert solution('3\\n1 1\\n2 1\\n3 1') == '2'\nassert solution('4\\n1 1\\n2 1\\n3 1\\n4 1') == '4'\n"
    },
    {
        "number": 3659,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '18000'\n'''\n"
    },
    {
        "number": 3659,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n220 29\n195 20\n200 9\n180 30''') == '18000'\nassert solution('''6\n120 120\n120 100\n150 130\n150 100\n150 120\n100 120''') == '5000'\nassert solution('''6\n10 50\n10 30\n10 40\n100 110\n100 90\n100 40\n150 130\n150 100\n150 120''') == '7500'\nassert solution('''6\n10 10\n10 30\n10 40\n100 110\n100 90\n100 40\n150 130\n150 100\n150 120''') == '7800'\nassert solution('''10\n10 10\n10 30\n10 40\n100 110\n100 90\n100 40\n150 130\n150 100\n150 120''') == '20000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4\n220 29\n195 20\n200 9\n180 30\"\"\") == \"18000\"\nassert solution(\"\"\"3\n75 10\n140 15\n200 20\n\"\"\") == \"1095\"\nassert solution(\"\"\"1\n300 200\"\"\") == \"10000\"\nassert solution(\"\"\"2\n100 5\n200 10\n\"\"\") == \"5000\"\nassert solution(\"\"\"8\n75 10\n140 15\n200 20\n220 29\n195 20\n200 9\n180 30\"\"\") == \"10000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n220 29\n195 20\n200 9\n180 30''') == '18000'\nassert solution('''9\n110 15\n116 22\n110 12\n100 3\n111 22\n100 8\n100 19\n110 19\n110 8\n100 7''') == '48000'\nassert solution('''20\n200 20\n230 30\n240 30\n300 30\n280 30\n250 30\n240 30\n240 30\n240 30\n200 30\n210 30\n220 30\n220 30\n230 30\n230 30\n230 30\n300 30\n300 30\n280 30\n280 30\n260 30\n260 30\n250 30\n250 30\n240 30\n240 30\n230 30\n230 30\n200 30\n200 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30\n180 30"
    },
    {
        "number": 3659,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4\n220 29\n195 20\n200 9\n180 30\"\"\") == \"18000\"\n\"\"\"\n    \n    \n"
    },
    {
        "number": 3659,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '17600'\n"
    },
    {
        "number": 3659,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"5\\n10\\n15\\n20\\n30\\n40\") == \"80000\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\") == \"100000\"\nassert solution(\"11\\n10\\n10\\n10\\n10\\n10\") == \"100100\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"/dev/stdin\").read()))\n\n\"\"\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '18000'"
    },
    {
        "number": 3660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'IMPOSSIBLE'\nassert solution('BUYSTICKERS') == 'IMPOSSIBLE'\nassert solution('BUYER 10') == '28'\nassert solution('STICKY 10') == '20'\nassert solution('TICKERS 1') == '8'\n"
    },
    {
        "number": 3660,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\nassert solution('''BUYSTICKERS\n3\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nTICKERS 2\nERS 4''') == 'IMPOSSIBLE'\nassert solution('''BUYSTICKERS\n10\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nTICKERS 2\nERS 4\nTICKERS 3\nERS 9\nTICKERS 5\nERS 7''') == 'IMPOSSIBLE'\nassert solution('''BUYSTICKERS\n10\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nTICKERS 2\nERS 4\nTICKERS 3\nERS 9\nTICKERS 5\nERS 7\nTICKERS 6\nERS 11''') == 'IMPOSSIBLE'\nassert solution('''BUYSTICKERS\n20\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nTICKERS 2\nERS 4\nTICKERS 3\nERS 9\nTICKERS 5\nERS 7\nTICKERS 6\nERS 11\nTICKERS 10\nERS 13\nTICKERS 12\nERS 15''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('BUY') == 'IMPOSSIBLE'\nassert solution('BUYSTICKERS') == 'IMPOSSIBLE'\nassert solution('BUYERSTICKERS') == 'IMPOSSIBLE'\nassert solution('BUYERS') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == \"28\"\nassert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 9''') == \"IMPOSSIBLE\"\nassert solution('''BUYSTICKERS\n5\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 10\nYEARS 1\n''') == \"IMPOSSIBLE\"\nassert solution('''BUYSTICKERS\n2\nBUYER 10\nSTICKY 10\nYEARS 1\nERS 8\nYEARS 2\n''') == \"IMPOSSIBLE\"\nassert solution('''BUYSTICKERS\n2\nBUYER 10\nSTICKY 10\nYEARS 1\nERS 8\nYEARS 2\n''') == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\n'''\nassert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\nassert solution('''BUYSTICKERS\n3\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == 'IMPOSSIBLE'\nassert solution('''BUYSTICKERS\n3\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYER 3\nSTICKY 8\nTICKERS 3\nERS 4''') == 'IMPOSSIBLE'\nassert solution('''BUYSTICKERS\n5\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYER 3\nSTICKY 8\nTICKERS 3\nERS 4\nBUYER 4\nSTICKY 4\nTICKERS 1\nERS 5''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\nassert solution('''ABKJQSBHNU\n4\nBFBWJQVHNU\nBBBBBQQHNU\nKBBBBBBHNU\nBBBBBBBBHNU\nBBBBBBBBHNU\nBBBBBBBBHNU\nBBBBBBBBHNU''') == '876'\nassert solution('''DALLMALL\n4\nDALL\nLALL\nMALL\nALL\nALL\nALL\nLALL''') == 'IMPOSSIBLE'\nassert solution('''LLLLLLLLLL\n1\nLLLLLLLLLL\nLLLLLLLLLL\nLLLLLLLLLL\nLLLLLLLLLL\nLLLLLLLLLL\nLLLLLLLLLL''') == 'IMPOSSIBLE'\nassert solution('''BBBBBB\n4\nBBBBBB\nBBBBBB\nBBBBBB\nBBBBBB\nBBBBBB\nBBBBBB\nBBBBBB\nBBBBBB''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"BUYSTICKERS\") == \"28\"\nassert solution(\"BUYER 10\") == \"14\"\nassert solution(\"STICKY 10\") == \"16\"\nassert solution(\"TICKERS 1\") == \"10\"\nassert solution(\"ERS 8\") == \"10\"\n\n\"\"\"\n\n\nfrom sys import stdin\nfrom functools import lru_cache\nfrom pprint import pprint\nfrom itertools import combinations\nfrom collections import Counter\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3660,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\n''') == '28'\nassert solution('''AJAK\n10\nAWAKA 10\nJAKA 1\nAKA 7\n''') == 'IMPOSSIBLE'\nassert solution('''ADJACK\n10\nAWAKA 10\nJAKA 1\nAKA 7\n''') == 'IMPOSSIBLE'\nassert solution('''ADJACK\n10\nAWAKA 10\nJAKA 1\nAKA 7\n''') == 'IMPOSSIBLE'\nassert solution('''ADJACK\n10\nAWAKA 10\nJAKA 1\nAKA 7\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"BUYSTICKERS\") == \"28\"\nassert solution(\"BUYSTICKERS\") == \"28\"\nassert solution(\"BUYSTICKERS\") == \"28\"\nassert solution(\"BUYSTICKERS\") == \"28\"\nassert solution(\"BUYSTICKERS\") == \"28\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\n'''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYER 7\nTICKY 10\nTICKERS 1\nERS 7\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8'''\n\nassert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\n\nassert solution('''BUYSTICKERS\n5\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYER 7\nTICKY 10\nTICKERS 1\nERS 7\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == 'IMPOSSIBLE'\n\nassert solution('''BUYSTICKERS\n8\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYER 7\nTICKY 10\nTICKERS 1\nERS 7\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYER 9\nSTICKY 10\nTICKERS 1\nERS 7''') == 'IMPOSSIBLE'\n\nassert solution('''BUYSTICKERS\n7\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYER 7\nTICKY 10\nTICKERS 1\nERS 7''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open('input/minimum_possibilities_sol.txt', 'r').read()) == open('output/minimum_possibilities_sol.txt', 'r').read()\nassert solution(open('input/minimum_possibilities_sol2.txt', 'r').read()) == open('output/minimum_possibilities_sol2.txt', 'r').read()\n\"\"\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n\nfrom collections import defaultdict\nfrom sys import maxsize\nfrom typing import DefaultDict\n\nL, R, S, L = [int(x) for x in input().split()]\n\npeople: DefaultDict[int, int] = defaultdict(int)\n\nfor _ in range(L):\n    A, B = [int(x) for x in input().split()]\n    people[A] += 1\n    people[B] += 1\n\nsorted_people = sorted(people.items(), key=lambda kvp: kvp[1])\nsorted_people = sorted_people[::-1]\n\nperson_to_lose = maxsize\n\nfor _ in range(R):\n    person_to_lose -= sorted_people.pop()[1]\n    if person_to_lose < 0:\n        break\n\nfor key, value in sorted_people:\n    if person_to_lose > value:\n        print(f\"INDV {key}\")\n        break\n    else:\n        person_to_lose -= value\n\nfor key, value in sorted_people:\n    if person_to_lose > value:\n        print(f\"CORP {key}\")\n        break\n    else:\n        person_to_lose -= value\n"
    },
    {
        "number": 3661,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3\n''') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n''') == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nINDV 6\\nINDV 7\\nINDV 8\\nINDV 9\\nINDV 10\\nINDV 11\\nINDV 12\\nINDV 13\\nINDV 14\\nINDV 15\\nINDV 16\\nINDV 17\\nINDV 18\\nINDV 19\\nINDV 20\\nINDV 21\\nINDV 22\\nINDV 23\\nINDV 24\\nINDV 25\\nINDV 26\\nINDV 27\\nINDV 28\\nINDV 29\\nINDV 30\\nINDV 31\\nINDV 32\\nINDV 33\\nINDV 34\\nINDV 35\\nINDV 36\\nINDV 37\\nINDV 38\\nINDV 39\\nINDV 40\\nINDV 41\\nINDV 42\\nINDV 43\\nINDV 44\\nINDV 45\\nINDV 46\\nINDV 47\\nINDV 48\\nINDV 49\\nINDV 50\\nINDV 51\\nINDV 52\\nINDV 53\\nINDV 54\\nINDV 55\\nINDV 56\\nINDV 57\\nINDV 58\\nINDV 59\\nINDV 60\\nINDV 61\\nINDV 62\\nINDV 63\\nINDV 64\\nINDV 65\\nINDV 66\\nINDV 67\\nINDV 68\\nINDV 69\\nINDV 70\\nINDV 71\\nINDV 72\\nINDV 73\\nINDV 74\\nINDV 75\\nINDV 76\\nINDV 77\\nINDV 78\\nINDV 79\\nINDV 80\\nINDV 81\\nINDV 82\\nINDV 83\\nINDV 84\\nINDV 85\\nINDV 86\\nINDV 87\\nINDV 88\\nINDV 89\\nINDV 90\\nINDV 91\\nINDV 92\\nINDV 93\\nINDV 94\\nINDV 95\\nINDV 96\\nINDV 97\\nINDV 98\\nINDV 99\\nINDV 100\\nINDV 101\\nINDV 102\\nINDV 103\\nINDV 104\\nINDV 105\\nINDV 106\\nINDV 107\\nINDV 108\\nINDV 109\\nINDV 110\\nINDV 111\\nINDV 112\\nINDV 113\\nINDV 114\\nINDV 115\\nINDV 116\\nINDV 117\\nINDV 118\\nINDV 119\\nINDV 120\\nINDV 121\\nINDV 122\\nINDV 123\\nINDV 124\\nINDV 125\\nINDV 126\\nINDV 127\\nINDV 128\\nINDV 129\\nINDV 130\\nINDV 131\\nINDV 132\\nINDV 133\\nINDV 134\\nINDV 135\\nINDV 136\\nINDV 137\\nINDV 138\\nINDV 139\\nINDV 140\\nINDV 141\\nINDV 142\\nINDV 143\\nINDV 144\\nINDV 145\\nINDV 146\\nINDV 147\\nINDV 148\\nINDV 149\\nINDV 150\\nINDV 151\\nINDV 152\\nINDV 153\\nINDV 154\\nINDV 155\\nINDV 156\\nINDV"
    },
    {
        "number": 3661,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3661,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\") == \"CORP 1\\nINDV 3\\nINDV 5\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3661,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3 8\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\n\nassert solution(\"5 3 8\") == \"CORP 1\\nINDV 2\\nINDV 3\\nINDV 4\\nCORP 3\\nINDV 5\"\n\nassert solution(\"5 3 8\") == \"CORP 1\\nINDV 2\\nINDV 3\\nINDV 4\\nCORP 3\\nINDV 5\"\n\nassert solution(\"5 3 8\") == \"CORP 1\\nINDV 2\\nINDV 3\\nINDV 4\\nCORP 3\\nINDV 5\"\n\nassert solution(\"5 3 8\") == \"CORP 1\\nINDV 2\\nINDV 3\\nINDV 4\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n'\nprint('Passed')\n\nTest.assertEquals(solution('1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n'), 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n')\nprint('Passed')\n\nTest.assertEquals(solution('2 3 4\\n1 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n'), 'INDV 1\\nINDV 2\\nINDV 4\\nINDV 3\\n')\nprint('Passed')\n\nTest.assertEquals(solution('2 2 3\\n2 1\\n3 2\\n1 2\\n2 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n'), 'INDV 1\\nINDV 2\\nINDV 4\\nINDV 3\\n')\nprint('Passed')\n\nTest.assertEquals(solution('4 4 3\\n1 2\\n1 1\\n2 1\\n3 1\\n3 2\\n3 3\\n3 4\\n4 3\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n'), 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\n')\nprint('Passed')\n\nTest."
    },
    {
        "number": 3661,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3\n''') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n'\nassert solution(\n'''1 2\n1 1\n2 1\n''') == 'INDV 1\\nCORP 2\\n'\nassert solution(\n'''7 6 6\n1 1\n2 1\n3 1\n4 2\n5 2\n6 2\n''') == 'CORP 1\\nINDV 2\\nCORP 3\\nINDV 4\\nCORP 5\\nINDV 6\\n'\nassert solution(\n'''2 4 8\n1 1\n2 1\n3 1\n4 2\n5 2\n6 2\n''') == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nINDV 6\\n'\nassert solution(\n'''3 3 5\n1 1\n2 1\n3 1\n4 2\n5 2\n6 2\n''') == 'INDV 1\\nCORP 2\\n'\n"
    },
    {
        "number": 3661,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 3 8\"\"\") == \"\"\"-1\n-1\n-1\n1\n1\n1\n\"\"\".strip()\n\nassert solution(\"\"\"5 1 2\n1 1\"\"\") == \"CORP 1\"\nassert solution(\"\"\"5 1 2\n2 1\"\"\") == \"INDV 1\"\nassert solution(\"\"\"5 1 2\n1 1\n2 1\"\"\") == \"-1\n-1\n-1\n1\n1\n-1\n-1\n-1\n-1\n1\n1\n-1\n1\n-1\n1\n-1\n1\n-1\n1\n1\n-1\n-1\n-1\n1\n1\n-1\n-1\n-1\n1\n1\n\"\"\".strip())\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n7\n3 3\n2\n0\n4\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n"
    },
    {
        "number": 3662,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == '2.4142135624'\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == '3.1622776601'\nassert solution(\"6\\n10 1\\n1\\n0\\n10\\n10\\n\") == '4.8284271247'\nassert solution(\"7\\n10 1\\n1\\n0\\n10\\n10\\n\") == '5.5237108728'\nassert solution(\"8\\n10 1\\n1\\n0\\n10\\n10\\n\") == '6.624899174'\n"
    },
    {
        "number": 3662,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10\\n10 1') == '2.4142135624'\nassert solution('20\\n20 0') == '0.0'\nassert solution('2\\n2 1') == '0.5'\nassert solution('1\\n1 1') == '0.0'\nassert solution('3\\n10 3') == '0.25'\n"
    },
    {
        "number": 3662,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2.4142135624\"\n'''"
    },
    {
        "number": 3662,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n10 1\n1\n0\n10\n10''') == '2.4142135624'\nassert solution('''4\n10 1\n1\n0\n10\n1''') == '2.4142135624'\nassert solution('''4\n10 1\n1\n0\n10\n1\n''') == '2.4142135624'\nassert solution('''5\n15 1\n1\n0\n15\n15\n1\n''') == '1.0'\nassert solution('''6\n12 2\n1\n0\n15\n15\n1\n15\n2\n''') == '0.8333'\n"
    },
    {
        "number": 3662,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10\\n0\\n10\\n10\\n\") == \"2.4142135623\"\nassert solution(\"2\\n20\\n2\\n10\\n2\\n2\\n\") == \"0.2\"\nassert solution(\"1\\n10\\n0\\n10\\n10\\n\") == \"2.4142135623\"\nassert solution(\"2\\n20\\n2\\n10\\n2\\n2\\n\") == \"0.2\"\nassert solution(\"1\\n20\\n2\\n10\\n2\\n2\\n\") == \"2.4142135623\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2.4142135624'\n\"\"\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n10 1\n1\n0\n10\n10''') == '2.4142135624'\nassert solution('''1\n1\n0\n10''') == '0'\nassert solution('''5\n2 2\n3 1\n2 3\n1 2\n2 1\n3''') == '5.0'\nassert solution('''2\n4 2\n1 1\n2 3\n3 2\n3 1\n2 3\n1 1\n1 2\n3 1''') == '4.5'\nassert solution('''2\n2 2\n1 1\n3 1\n2 3\n1 1\n1 1\n1 1\n1 1\n1 1''') == '3.0'\n"
    },
    {
        "number": 3662,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\n"
    },
    {
        "number": 3662,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n10 1\n1\n0\n10\n10\n''') == \"2.4142135624\"\nassert solution('''4\n5 1\n1\n0\n10\n10\n''') == \"6.41421356239\"\nassert solution('''4\n5 4\n1\n0\n10\n10\n''') == \"7.14285714286\"\nassert solution('''4\n5 4\n1\n0\n10\n10\n''') == \"8.59375\"\nassert solution('''4\n5 3\n1\n0\n10\n10\n''') == \"7.85714285714\"\n"
    }
]