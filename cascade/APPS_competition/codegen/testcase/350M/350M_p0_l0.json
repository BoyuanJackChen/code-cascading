[
    {
        "number": 3000,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"seems legit\"\nassert solution(stdin) == \"insufficient service\"\nassert solution(stdin) == \"tampered odometer\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2300'\nassert solution(stdin) == '300'\nassert solution(stdin) == '1900'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\n"
    },
    {
        "number": 3008,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3009,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 28\n"
    },
    {
        "number": 3010,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n"
    },
    {
        "number": 3012,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9.21068947 2.56226688\"\nassert solution(stdin) == \"6.22375968 -0.31921472\"\nassert solution(stdin) == \"9.21068947 2.56226688\"\nassert solution(stdin) == \"6.22375968 -0.31921472\"\nassert solution(stdin) == \"9.21068947 2.56226688\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"infinity\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"49401\"\nassert solution(stdin) == \"20\"\nassert solution(stdin) == \"468559\"\nassert solution(stdin) == \"1000000\"\nassert solution(stdin) == \"1000000\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\n"
    },
    {
        "number": 3019,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '11112'\n"
    },
    {
        "number": 3021,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"164\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"800\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 4\"\nassert solution(stdin) == \"1 2 3 4\"\nassert solution(stdin) == \"1 2 3 4 5\"\nassert solution(stdin) == \"1 2 3 4 5\"\nassert solution(stdin) == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"19\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5 1\"\nassert solution(stdin) == \"5 1\"\nassert solution(stdin) == \"5 1\"\nassert solution(stdin) == \"5 1\"\nassert solution(stdin) == \"5 1\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n"
    },
    {
        "number": 3031,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"30\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'impossible'\n"
    },
    {
        "number": 3034,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '466.662'\n"
    },
    {
        "number": 3035,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '10.000000000000000'\n"
    },
    {
        "number": 3036,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"too many\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"17 17\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"cannot fold\"\nassert solution(stdin) == \"can fold\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaaa\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"uncertain\"\nassert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245"
    },
    {
        "number": 3047,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"24\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"168.7916512460\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"madam\"\nassert solution(stdin) == \"canterlot\"\nassert solution(stdin) == \"madam\"\nassert solution(stdin) == \"canterlot\"\nassert solution(stdin) == \"madam\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\\n\"\nassert solution(stdin) == \"Blue Ridge mountain road.\\n\"\nassert solution(stdin) == \"Leaves, glowing in autumn sun,\\nfall in Virginia.\\n\"\nassert solution(stdin) == \"International contest- motivation high Programmers have fun!.\\n\"\nassert solution(stdin) == \"International contest- motivation high\\nProgrammers have fun!.\\n\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ThoreHusfeldt\"\nassert solution(stdin) == \"ThoreHusfeldt\"\nassert solution(stdin) == \"ThoreHusfeldt\"\nassert solution(stdin) == \"ThoreHusfeldt\"\nassert solution(stdin) == \"ThoreHusfeldt\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '33'\nassert solution(stdin) == '6'\nassert solution(stdin) == '25'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\n"
    },
    {
        "number": 3057,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"124\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 1 2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"4 3 4 2\"\nassert solution(stdin) == \"4 3 4 2\"\nassert solution(stdin) == \"4 3 4 2\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"28.26445910\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"150\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n"
    },
    {
        "number": 3065,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.0446429'\n"
    },
    {
        "number": 3066,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 100\"\nassert solution(stdin) == \"1 2 100\"\nassert solution(stdin) == \"1 2 100\"\nassert solution(stdin) == \"1 2 100\"\nassert solution(stdin) == \"1 2 100\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2600\n"
    },
    {
        "number": 3069,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"((()))\"\n) == \"possible\"\nassert solution(\n    \"((()))\"\n) == \"impossible\"\nassert solution(\n    \"((()))\"\n) == \"impossible\"\nassert solution(\n    \"((()))\"\n) == \"possible\"\nassert solution(\n    \"((()))\"\n) == \"possible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1800\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"A1-B2 B1-A2 A3-B3 A2-B3 A2-C2 A2-C1 A3-B1 A3-C1 B2-C2 B2-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C1 B3-C"
    },
    {
        "number": 3072,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 600\n"
    },
    {
        "number": 3074,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '10'\n"
    },
    {
        "number": 3076,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 8 9 9 100 101 108 109 109\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3078,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"DA\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"n\"\nassert solution(stdin) == \"kava\"\nassert solution(stdin) == \"ak\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3082,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '40.500000000'\n"
    },
    {
        "number": 3083,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5 4 9 3 1 10 7 6 2\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"00:00\"\nassert solution(stdin) == \"01:00\"\nassert solution(stdin) == \"01:01\"\nassert solution(stdin) == \"01:02\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(()) == \"\", \"Empty string\"\nassert solution(\"(())\") == \"\", \"One or more parenthesis\"\nassert solution(\"(()())\") == \"\", \"One or more parenthesis\"\nassert solution(\"(()(())\") == \"\", \"One or more parenthesis\"\nassert solution(\"(()(())()\") == \"\", \"One or more parenthesis\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7413\"\nassert solution(stdin) == \"201\"\nassert solution(stdin) == \"7413\"\nassert solution(stdin) == \"201\"\nassert solution(stdin) == \"7413\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.733333333333333'\n"
    },
    {
        "number": 3090,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"21\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"24\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"18\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"16\"\nassert solution(stdin) == \"77\"\nassert solution(stdin) == \"154\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '12.50000000'\n"
    },
    {
        "number": 3099,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3100,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"30\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"11\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"begin repairs\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"14+31+75=120\"\nassert solution(stdin) == \"5+025=30\"\nassert solution(stdin) == \"5+025=30\"\nassert solution(stdin) == \"5+025=30\"\nassert solution(stdin) == \"5+025=30\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\n"
    },
    {
        "number": 3106,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3.666666\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.750'\nassert solution(stdin) == '0.625'\nassert solution(stdin) == '0.750'\nassert solution(stdin) == '0.625'\nassert solution(stdin) == '0.750'\n"
    },
    {
        "number": 3110,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3\"\n) == \"2\"\nassert solution(\n    \"3 4\"\n) == \"2\"\nassert solution(\n    \"0 3 6\"\n) == \"37\"\nassert solution(\n    \"4 0 3\"\n) == \"37\"\nassert solution(\n    \"0 0 2 1\"\n) == \"37\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 4\"\nassert solution(stdin) == \"1 4\"\nassert solution(stdin) == \"1 4\"\nassert solution(stdin) == \"1 4\"\nassert solution(stdin) == \"1 4\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"consistent\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.57079633'\n"
    },
    {
        "number": 3117,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3118,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n"
    },
    {
        "number": 3119,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 3120,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"[1,2,3,4,5,6]\") == \"equal\"\nassert solution(\"[1,2,3,4,5,6]\") == \"not equal\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Oh no\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '<any> <empty>'\nassert solution(stdin) == '<any> <any>'\nassert solution(stdin) == '<any> <any>'\nassert solution(stdin) == '<any> <any>'\nassert solution(stdin) == '<any> <any>'\n"
    },
    {
        "number": 3126,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 8\n"
    },
    {
        "number": 3130,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 3\"\nassert solution(stdin) == \"1 2 3\"\nassert solution(stdin) == \"1 2 3\"\nassert solution(stdin) == \"1 2 3\"\nassert solution(stdin) == \"1 2 3\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"39\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1 2\"\nassert solution(stdin) == \"2 3 1\"\nassert solution(stdin) == \"2 4 3\"\nassert solution(stdin) == \"2 4 3\"\nassert solution(stdin) == \"2 4 3\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"indistinguishable\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1111\"\nassert solution(stdin) == \"1111\"\nassert solution(stdin) == \"1111\"\nassert solution(stdin) == \"1111\"\nassert solution(stdin) == \"1111\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '+000-', 'incorrect'\n"
    },
    {
        "number": 3136,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 3138,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"NE\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.0000000000'\n"
    },
    {
        "number": 3142,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '19'\nassert solution(stdin) == '9'\nassert solution(stdin) == '5'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3143,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"111\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.500000 3.666667'\n"
    },
    {
        "number": 3147,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 4\"\nassert solution(stdin) == \"3 -1\"\nassert solution(stdin) == \"3 -1\"\nassert solution(stdin) == \"3 -1\"\nassert solution(stdin) == \"3 -1\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 5.086781\"\nassert solution(stdin) == \"1 1.5\"\nassert solution(stdin) == \"1 1.5\"\nassert solution(stdin) == \"1 1.5\"\nassert solution(stdin) == \"1 1.5\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '109'\n"
    },
    {
        "number": 3153,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"1 2 1\"\nassert solution(stdin) == \"1 2 2\"\nassert solution(stdin) == \"1 2 2\"\nassert solution(stdin) == \"1 2 2\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2020\"\nassert solution(stdin) == \"2020 1\"\nassert solution(stdin) == \"2020 2\"\nassert solution(stdin) == \"2020 3\"\nassert solution(stdin) == \"2020 4\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"unique\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"pan\"\nassert solution(stdin) == \"pan\"\nassert solution(stdin) == \"pan\"\nassert solution(stdin) == \"pan\"\nassert solution(stdin) == \"pan\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"apples are great!  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3160,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.0'\nassert solution(stdin) == '1.5'\nassert solution(stdin) == '1.5'\nassert solution(stdin) == '1.5'\nassert solution(stdin) == '1.5'\n"
    },
    {
        "number": 3161,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"35\"\nassert solution(stdin) == \"18\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 4 1 3\"\nassert solution(stdin) == \"2 4 1 3\"\nassert solution(stdin) == \"2 4 1 3\"\nassert solution(stdin) == \"2 4 1 3\"\nassert solution(stdin) == \"2 4 1 3\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Theta wins\"\nassert solution(stdin) == \"Theta loses\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"truther\"\nassert solution(stdin) == \"fabulist\"\nassert solution(stdin) == \"charlatan\"\nassert solution(stdin) == \"not charlatan\"\nassert solution(stdin) == \"not fabulist\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.414'\n"
    },
    {
        "number": 3175,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.433'\n"
    },
    {
        "number": 3176,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n"
    },
    {
        "number": 3179,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '9.00'\nassert solution(stdin) == '9.00'\nassert solution(stdin) == '9.00'\nassert solution(stdin) == '9.00'\nassert solution(stdin) == '9.00'\n"
    },
    {
        "number": 3180,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 1 2 3\"\nassert solution(stdin) == \"1 2 1 2\"\nassert solution(stdin) == \"1 2 1 2\"\nassert solution(stdin) == \"1 2 1 2\"\nassert solution(stdin) == \"1 2 1 2\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 4 2 3\"\nassert solution(stdin) == \"1 4 2 3\"\nassert solution(stdin) == \"1 4 2 3\"\nassert solution(stdin) == \"1 4 2 3\"\nassert solution(stdin) == \"1 4 2 3\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\n"
    },
    {
        "number": 3183,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1000 100000\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21\n"
    },
    {
        "number": 3186,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"45\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"19\"\n\nSample Input 3:\n1 100 20\nSample Output 3:\n0\n\nSample Input 4:\n10 10 1\nSample Output 4:\n19\n"
    },
    {
        "number": 3192,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"SHIP IT\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.25'\n"
    },
    {
        "number": 3196,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"hoose\"\nassert solution(stdin) == \"noises\"\nassert solution(stdin) == \"noise\"\nassert solution(stdin) == \"NO TYPOS\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '68.52419365'\nassert solution(stdin) == '44.72135955'\nassert solution(stdin) == '44.72135955'\nassert solution(stdin) == '44.72135955'\nassert solution(stdin) == '44.72135955'\n"
    },
    {
        "number": 3201,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '50'\n"
    },
    {
        "number": 3204,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"160\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 2 3 4\"\nassert solution(stdin) == \"1 2 3 4 5\"\nassert solution(stdin) == \"1 2 3 4 5 6\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10.0\"\nassert solution(stdin) == \"4.0\"\nassert solution(stdin) == \"6.0\"\nassert solution(stdin) == \"10.0\"\nassert solution(stdin) == \"0.0\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Impossible\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3210,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Bill will be bitten.\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"xxoooooo\"\nassert solution(stdin) == \"xxoooooo\"\nassert solution(stdin) == \"xxoooooo\"\nassert solution(stdin) == \"xxoooooo\"\nassert solution(stdin) == \"xxoooooo\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"close: lose\"\nassert solution(stdin) == \"he: he\"\nassert solution(stdin) == \"he: hen\"\nassert solution(stdin) == \"he: hen the\"\nassert solution(stdin) == \"he: hen the\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == '1/7'\nassert solution(input()) == '5/3'\nassert solution(input()) == '1/7'\nassert solution(input()) == '5/3'\nassert solution(input()) == '1/7'\n"
    },
    {
        "number": 3217,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n"
    },
    {
        "number": 3218,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\n"
    },
    {
        "number": 3219,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"LLL\"\nassert solution(stdin) == \"LLRL\"\nassert solution(stdin) == \"LLRL\"\nassert solution(stdin) == \"LLRL\"\nassert solution(stdin) == \"LLRL\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Poor girl\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yeah!\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.5 0.5 0.5\"\nassert solution(stdin) == \"0.0 0.0 -0.0\"\nassert solution(stdin) == \"0.0 0.0 -0.0\"\nassert solution(stdin) == \"0.0 0.0 -0.0\"\nassert solution(stdin) == \"0.0 0.0 -0.0\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3227,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"home\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'allatral'\nassert solution(stdin) == 'allatral'\nassert solution(stdin) == 'allatral'\nassert solution(stdin) == 'allatral'\nassert solution(stdin) == 'allatral'\n"
    },
    {
        "number": 3233,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n"
    },
    {
        "number": 3234,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 1 15\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n"
    },
    {
        "number": 3237,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"24\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"24\"\nassert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3238,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 1 3 10\"\nassert solution(stdin) == \"1 15 5 15\"\nassert solution(stdin) == \"1 15 5 15\"\nassert solution(stdin) == \"1 15 5 15\"\nassert solution(stdin) == \"1 15 5 15\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '16.339203308'\nassert solution(stdin) == '5.000000000'\n"
    },
    {
        "number": 3240,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\n"
    },
    {
        "number": 3242,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"python main.py -n 10\"\nassert solution(stdin) == \"python main.py -n 10 -n 10\"\nassert solution(stdin) == \"python main.py -n 10 -n 10 -n 10\"\nassert solution(stdin) == \"python main.py -n 10 -n 10 -n 10 -n 10\"\nassert solution(stdin) == \"python main.py -n 10 -n 10 -n 10 -n 10 -n 10 -n 10\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"ambiguous\"\nassert solution(stdin) == \"perfect\"\nassert solution(stdin) == \"hitehre\"\nassert solution(stdin) == \"this\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 16\n\n\"\"\""
    },
    {
        "number": 3248,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"30\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5836\n"
    },
    {
        "number": 3253,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 0 0 1 1\"\nassert solution(stdin) == \"0 0 0 1 1\"\nassert solution(stdin) == \"0 0 0 1 1\"\nassert solution(stdin) == \"0 0 0 1 1\"\nassert solution(stdin) == \"0 0 0 1 1\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"8\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\n"
    },
    {
        "number": 3258,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.4999999987500003'\n"
    },
    {
        "number": 3259,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3264,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\n"
    },
    {
        "number": 3266,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4 3 5\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 5\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '40'\n"
    },
    {
        "number": 3270,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"COG\"\nassert solution(stdin) == \"CAT\"\nassert solution(stdin) == \"CAT\"\nassert solution(stdin) == \"CAT\"\nassert solution(stdin) == \"CAT\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n"
    },
    {
        "number": 3273,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3278,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"12 3\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin
    },
    {
        "number": 3280,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '90.00000000'\n"
    },
    {
        "number": 3282,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"85\"\nassert solution(stdin) == \"30014\"\nassert solution(stdin) == \"7882929\"\nassert solution(stdin) == \"7785\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '3.5'\nassert solution(stdin) == '4.9'\nassert solution(stdin) == '3.5'\nassert solution(stdin) == '3.5'\nassert solution(stdin) == '3.5'\n"
    },
    {
        "number": 3284,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3287,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'zyz'\nassert solution(stdin) == '-1'\n"
    },
    {
        "number": 3289,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3291,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"24\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '5.2696518641'\n"
    },
    {
        "number": 3295,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"24\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"240\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9567+1085=10652\"\nassert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"14\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n"
    },
    {
        "number": 3300,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '9999700002.000'\n"
    },
    {
        "number": 3301,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"23\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '9.476048311178'\n"
    },
    {
        "number": 3308,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8.0000000000\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"20.000000000\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '16317634'\n"
    },
    {
        "number": 3312,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3315,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3316,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.1909090909'\n"
    },
    {
        "number": 3317,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n\nSample Input:\n4 3\n0\n0\n1\n0\nSample Output:\n2\n"
    },
    {
        "number": 3319,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 5 4 3 6\"\nassert solution(stdin) == \"1 2 5 4 3 6\"\nassert solution(stdin) == \"1 2 5 4 3 6\"\nassert solution(stdin) == \"1 2 5 4 3 6\"\nassert solution(stdin) == \"1 2 5 4 3 6\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 60\n"
    },
    {
        "number": 3323,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Case #1: 1\"\nassert solution(stdin) == \"Case #2: 2\"\nassert solution(stdin) == \"Case #3: 3\"\nassert solution(stdin) == \"Case #4: 4\"\nassert solution(stdin) == \"Case #5: 5\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6 6 6 1\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '20.83'\n"
    },
    {
        "number": 3326,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2 5 7 6 4 8 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4 9 3 7 4"
    },
    {
        "number": 3327,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"CROSSWORD\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"31\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.556'\n"
    },
    {
        "number": 3331,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '3.141593'\n"
    },
    {
        "number": 3334,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.13333333333333'\nassert solution(stdin) == 'impossible'\n"
    },
    {
        "number": 3335,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 18\n\nSample Input:\n1\nSample Output:\n1\n\nSample Input:\n2\nSample Output:\n2\n\nSample Input:\n3\nSample Output:\n3\n\nSample Input:\n4\nSample Output:\n4\n\nSample Input:\n5\nSample Output:\n5\n\nSample Input:\n6\nSample Output:\n6\n\nSample Input:\n7\nSample Output:\n7\n\nSample Input:\n8\nSample Output:\n8\n\nSample Input:\n9\nSample Output:\n9\n\nSample Input:\n10\nSample Output:\n10\n\nSample Input:\n11\nSample Output:\n11\n\nSample Input:\n12\nSample Output:\n12\n\nSample Input:\n13\nSample Output:\n13\n\nSample Input:\n14\nSample Output:\n14\n\nSample Input:\n15\nSample Output:\n15\n\nSample Input:\n16\nSample Output:\n16\n\nSample Input:\n17\nSample Output:\n17\n\nSample Input:\n18\nSample Output:\n18\n\n-----Constraints-----\n1 <= stdin.length <= 500\n1 <= n <= 500\n\n-----Time Limit: 1 sec\n\n-----Space Limit: 1 GB\n\n-----tips:\nYou can use the following approach to solve this problem:\n\n1. Use a dictionary to store the number of Pythagorean triples modulo $n$.\n2. Use a set to store the number of Pythagorean triples modulo $n$.\n3. Use a set to store the number of Pythagorean triples modulo $n$.\n4. Use a set to store the number of Pythagorean triples modulo $n$.\n5. Use a set to store the number of Pythagorean triples modulo $n$.\n6. Use a set to store the number of Pythagorean triples modulo $n$.\n7. Use a set to store the number of Pythagorean triples modulo $n$.\n8. Use a set to store the number of Pythagorean triples modulo $n$.\n9. Use a set to store the number of Pythagorean triples modulo $n$.\n10. Use a set to store the number of Pythagorean triples modulo $n$.\n11. Use a set to store the number of Pythagorean triples modulo $n$.\n12. Use a set to store the number of Pythagorean triples modulo $n$.\n13. Use a set to store the number of Pythagorean triples modulo $n$.\n14. Use a set to store the number of Pythagorean triples modulo $n$.\n15. Use a set to store the number of Pythagorean triples modulo $n$.\n16. Use a set to store the number of Pythagorean triples modulo $n$.\n17. Use a set to store the number of Pythagorean triples modulo $n$.\n18. Use a set to store the number of Pythagorean triples modulo $n$.\n\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n = int(stdin)\n        nums = set()\n        for i in range(1, n+1):\n            for j in range(1, n+1):\n                for k in range(1, n+1):\n                    for l in range(1, n+1):\n                        for m in range(1, n+1):\n                            for n in range(1, n+1):\n                                for o in range(1, n+1):\n                                    for p in range(1, n+1):\n                                        for q in range(1, n+1):\n                                            for r in range(1, n+1):\n                                                for s in range(1, n+1):\n                                                    for t in range(1, n+1):\n                                                        for u in range(1, n+1):\n                                                            for v in range(1, n+1):\n                                                                for w in range(1, n+1):\n                                                                    for x in range(1, n+1):\n                                                                        for y in range(1, n+1):\n                                                                            for z in range(1, n+1):\n                                                                                for ww in range(1, n+1):\n                                                                                    for www in range(1, n+1):\n                                                                                        for wwww in range(1, n+1):\n                                                                                            for wwwwww in range(1, n+1):\n                                                                                             for wwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwwwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwwwwwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwwwwwwwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwwwwwwwwwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww in range(1, n+1):\n                                                                                             for wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww"
    },
    {
        "number": 3336,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '5'\n"
    },
    {
        "number": 3342,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3343,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"GHOST\"\nassert solution(stdin) == \"SAFE\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '2.00'\nassert solution(stdin) == '2.00'\nassert solution(stdin) == '2.00'\nassert solution(stdin) == '2.00'\n"
    },
    {
        "number": 3345,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(stdin) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(stdin) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(stdin) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(stdin) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\nassert solution(\"abra\") == 0\nassert solution(\"abra\") == 0\nassert solution(\"abra\") == 0\nassert solution(\"abra\") == 0\n"
    },
    {
        "number": 3351,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '70'\n"
    },
    {
        "number": 3352,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"8\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 3354,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"99\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 3 4\"\nassert solution(stdin) == \"2 3 4\"\nassert solution(stdin) == \"2 3 4\"\nassert solution(stdin) == \"2 3 4\"\nassert solution(stdin) == \"2 3 4\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '9.0000'\nassert solution(stdin) == '12.00000'\nassert solution(stdin) == '9.0'\nassert solution(stdin) == '12'\n"
    },
    {
        "number": 3358,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"PH A\"\nassert solution(stdin) == \"PH X\"\nassert solution(stdin) == \"AD\"\nassert solution(stdin) == \"PL Y\"\nassert solution(stdin) == \"DI Y\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"abaaba\"\nassert solution(stdin) == \"a\"\nassert solution(stdin) == \"b\"\nassert solution(stdin) == \"a\"\nassert solution(stdin) == \"b\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"GO FOR IT\"\nassert solution(stdin) == \"NO WAY\"\nassert solution(stdin) == \"NO WAY\"\nassert solution(stdin) == \"NO WAY\"\nassert solution(stdin) == \"GO FOR IT\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2243\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"1 3\"\n) == \"yes\"\nassert solution(\n    \"1 3\"\n) == \"no\"\nassert solution(\n    \"1 3\"\n) == \"no\"\nassert solution(\n    \"1 3\"\n) == \"no\"\nassert solution(\n    \"1 3\"\n) == \"no\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"9\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.0000000000'\nassert solution(stdin) == '2.0000000000'\nassert solution(stdin) == '2.0000000000'\nassert solution(stdin) == '2.0000000000'\nassert solution(stdin) == '2.0000000000'\n"
    },
    {
        "number": 3368,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\"\nassert solution(stdin) == \"FALSE ALARM\"\nassert solution(stdin) == \"POSSIBLE\"\nassert solution(stdin) == \"IMPOSSIBLE\"\nassert solution(stdin) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4(1)4(3)3 found\"\nassert solution(stdin) == \"4(1)4(3)3 found\"\nassert solution(stdin) == \"4(1)4(3)3 found\"\nassert solution(stdin) == \"4(1)4(3)3 found\"\nassert solution(stdin) == \"4(1)4(3)3 found\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"40.5\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 10\nassert solution(input()) == 10\nassert solution(input()) == 10\nassert solution(input()) == 10\nassert solution(input()) == 10\n"
    },
    {
        "number": 3374,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '85293'\n"
    },
    {
        "number": 3375,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 171 172 173 174 175 176 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245"
    },
    {
        "number": 3376,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '5100'\n"
    },
    {
        "number": 3377,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\n"
    },
    {
        "number": 3378,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n
    },
    {
        "number": 3380,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.962962962963'\n\"\"\""
    },
    {
        "number": 3381,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 0\"\nassert solution(stdin) == \"40000000 0\"\nassert solution(stdin) == \"0 40000000\"\nassert solution(stdin) == \"0 40000000\"\nassert solution(stdin) == \"0 40000000\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\nassert solution(stdin) == '5'\n"
    },
    {
        "number": 3383,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(13) == 12\nassert solution(12) == 14\nassert solution(1234) == 1234\nassert solution(12345) == 1234\nassert solution(1234567890) == 1234567890\n"
    },
    {
        "number": 3385,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"2 3\"\n) == \"1 1\"\nassert solution(\n
    },
    {
        "number": 3387,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3.33333333\"\nassert solution(stdin) == \"3.33333333\"\nassert solution(stdin) == \"3.33333333\"\nassert solution(stdin) == \"3.33333333\"\nassert solution(stdin) == \"3.33333333\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\nassert solution(stdin) == 2\nassert solution(stdin) == 2\nassert solution(stdin) == 2\nassert solution(stdin) == 2\n"
    },
    {
        "number": 3390,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245"
    },
    {
        "number": 3391,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"20\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2 2 3 4 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3"
    },
    {
        "number": 3395,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '500.00'\n"
    },
    {
        "number": 3397,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"AAAA\"\nassert solution(stdin) == \"BBBB\"\nassert solution(stdin) == \"CCCC\"\nassert solution(stdin) == \"BBBB\"\nassert solution(stdin) == \"CCCC\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '20.396078'\n"
    },
    {
        "number": 3402,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"abca\") == \"bca\"\nassert solution(\"bc\") == \"bc\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\nassert solution(stdin) == 10\nassert solution(stdin) == 16\nassert solution(stdin) == 7\nassert solution(stdin) == 1\n"
    },
    {
        "number": 3404,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"TEST\"\nassert solution(stdin) == \"TEST\"\nassert solution(stdin) == \"TEST\"\nassert solution(stdin) == \"TEST\"\nassert solution(stdin) == \"TEST\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"135\"\nassert solution(input()) == \"270\"\nassert solution(input()) == \"135135\"\nassert solution(input()) == \"270270\"\nassert solution(input()) == \"No solution\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\nSample Input:\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\nSample Output:\n4\n"
    },
    {
        "number": 3407,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin
    },
    {
        "number": 3408,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"4 2\"\n) == \"1\"\nassert solution(\n    \"4 2\"\n) == \"0\"\nassert solution(\n    \"4 2\"\n) == \"0\"\nassert solution(\n    \"4 2\"\n) == \"0\"\nassert solution(\n    \"4 2\"\n) == \"0\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"80\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '3.000000000'\n"
    },
    {
        "number": 3413,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\nassert solution(stdin) == 2\nassert solution(stdin) == 3\nassert solution(stdin) == 4\nassert solution(stdin) == 5\n"
    },
    {
        "number": 3414,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '6.283185'\n"
    },
    {
        "number": 3415,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 3\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9 10\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 3 4\"\nassert solution(stdin) == \"1 2 3 4\"\nassert solution(stdin) == \"1 2 3 4\"\nassert solution(stdin) == \"1 2 3 4\"\nassert solution(stdin) == \"1 2 3 4\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"2 1\"\n) == \"1\"\nassert solution(\n    \"1 2\"\n) == \"1\"\nassert solution(\n    \"1 1\"\n) == \"1\"\nassert solution(\n    \"1 1\"\n) == \"1\"\nassert solution(\n    \"1 1\"\n) == \"1\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"45\"\nassert solution(input()) == \"45\"\nassert solution(input()) == \"45\"\nassert solution(input()) == \"45\"\nassert solution(input()) == \"45\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '01'\nassert solution(stdin) == '01'\nassert solution(stdin) == '01'\nassert solution(stdin) == '01'\nassert solution(stdin) == '01'\n"
    },
    {
        "number": 3422,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4 3\"\nassert solution(stdin) == \"2 123\"\nassert solution(stdin) == \"2 2\"\nassert solution(stdin) == \"21\"\nassert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"libattr\") == \"atk\"\nassert solution(\"libattr\") == \"freetype\"\nassert solution(\"libattr\") == \"glib2\"\nassert solution(\"libattr\") == \"zlib\"\nassert solution(\"libattr\") == \"libjpeg\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\"\nassert solution(stdin) == \"16\"\nassert solution(stdin) == \"16\"\nassert solution(stdin) == \"16\"\nassert solution(stdin) == \"16\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"13\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"13\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n\nSample Input:\n5\n1 2 3 4 5 6\nSample Output:\n5\n"
    },
    {
        "number": 3429,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.000000'\nassert solution(stdin) == '2.000000'\nassert solution(stdin) == '2.000000'\nassert solution(stdin) == '2.000000'\nassert solution(stdin) == '2.000000'\n"
    },
    {
        "number": 3430,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 96\n"
    },
    {
        "number": 3431,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n0 0\\n0 1\\n1 0\\n1 1\\n0 0\\n1 1\\n1 0\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\"
    },
    {
        "number": 3432,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"#####JF#\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n#.##\\n"
    },
    {
        "number": 3434,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.3333333333'\nassert solution(stdin) == '0.3333333333'\nassert solution(stdin) == '0.3333333333'\nassert solution(stdin) == '0.3333333333'\nassert solution(stdin) == '0.3333333333'\n"
    },
    {
        "number": 3435,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n\nSample Input:\n5\n1\n1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*1*"
    },
    {
        "number": 3436,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"2 3\") == \"9\"\nassert solution(\"2 4\") == \"15\"\nassert solution(\"2 5\") == \"21\"\nassert solution(\"2 6\") == \"36\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2930\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '10'\n"
    },
    {
        "number": 3440,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '3100'\n"
    },
    {
        "number": 3441,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\n"
    },
    {
        "number": 3442,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\n"
    },
    {
        "number": 3444,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.500000000 1.000000000'\nassert solution(stdin) == '0.500000000 1.000000000'\nassert solution(stdin) == '0.500000000 1.000000000'\nassert solution(stdin) == '0.500000000 1.000000000'\nassert solution(stdin) == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3445,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9-b\"\nassert solution(stdin) == \"8-a\"\nassert solution(stdin) == \"def solution(stdin) -> str:\n    pass\n\n-----Sample Input:\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\nSample Output:\n9-b\n8-a\n"
    },
    {
        "number": 3447,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"R3246R3246\"\nassert solution(stdin) == \"U3246R3246\"\nassert solution(stdin) == \"D3246R3246\"\nassert solution(stdin) == \"R3246R3246\"\nassert solution(stdin) == \"U3246R3246\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '176'\n"
    },
    {
        "number": 3450,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(5) == 12\nassert solution(5) == 12\nassert solution(5) == 12\nassert solution(5) == 12\nassert solution(5) == 12\n"
    },
    {
        "number": 3451,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '480'\n"
    },
    {
        "number": 3452,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 4 5 6 7 8 9 10 11 12 13\"\nassert solution(stdin) == \"2 4 5 6 7 8 9 10 11 12 13\"\nassert solution(stdin) == \"2 4 5 6 7 8 9 10 11 12 13\"\nassert solution(stdin) == \"2 4 5 6 7 8 9 10 11 12 13\"\nassert solution(stdin) == \"2 4 5 6 7 8 9 10 11 12 13\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"35 39 36 27 29\"\nassert solution(stdin) == \"35 39 36 27 29\"\nassert solution(stdin) == \"35 39 36 27 29\"\nassert solution(stdin) == \"35 39 36 27 29\"\nassert solution(stdin) == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 672\"\n\nSample Input:\n3 3\n3 2 1\nSample Output:\n0\n"
    },
    {
        "number": 3455,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.500000'\nassert solution(stdin) == 'Impossible'\n"
    },
    {
        "number": 3456,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '7'\n\nSample Input:\n3\n1 3 5\nSample Output:\n7\n"
    },
    {
        "number": 3459,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Impossible\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 1\"\nassert solution(stdin) == \"1 2 1\"\nassert solution(stdin) == \"1 2 1\"\nassert solution(stdin) == \"1 2 1\"\nassert solution(stdin) == \"1 2 1\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.125'\n"
    },
    {
        "number": 3462,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.c\") == \"main.c\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.500000'\nassert solution(stdin) == '0.500000'\nassert solution(stdin) == '0.500000'\nassert solution(stdin) == '0.500000'\nassert solution(stdin) == '0.500000'\n"
    },
    {
        "number": 3464,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.0'\nassert solution(stdin) == '0.0'\nassert solution(stdin) == '0.0'\nassert solution(stdin) == '0.0'\nassert solution(stdin) == '0.0'\n"
    },
    {
        "number": 3465,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n
    },
    {
        "number": 3466,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"2 1 10\") == \"3\"\nassert solution(\"0 1 1 2 6\") == \"3\"\nassert solution(\"0 1 1 2 6\") == \"3\"\nassert solution(\"0 1 1 2 6\") == \"3\"\nassert solution(\"0 1 1 2 6\") == \"3\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245"
    },
    {
        "number": 3469,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.5'\nassert solution(stdin) == '0.5'\nassert solution(stdin) == '0.5'\nassert solution(stdin) == '0.5'\nassert solution(stdin) == '0.5'\n"
    },
    {
        "number": 3470,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\"\nassert solution(stdin) == \"1 3 5 7 9 11 13 15\"\nassert solution(stdin) == \"1 3 5 7 9 11 13 15\"\nassert solution(stdin) == \"1 3 5 7 9 11 13 15\"\nassert solution(stdin) == \"1 3 5 7 9 11 13 15\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"194\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5 10 10 10 10 0\"\nassert solution(stdin) == \"5 10 10 5 10 0\"\nassert solution(stdin) == \"6 10 10 10 10 0\"\nassert solution(stdin) == \"6 10 10 5 10 0\"\nassert solution(stdin) == \"6 10 10 10 10 0\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"345\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.5\"\nassert solution(stdin) == \"0.5\"\nassert solution(stdin) == \"0.5\"\nassert solution(stdin) == \"0.5\"\nassert solution(stdin) == \"0.5\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 4 5\"\nassert solution(stdin) == \"2 6 7\"\nassert solution(stdin) == \"1 4 5\"\nassert solution(stdin) == \"2 6 7\"\nassert solution(stdin) == \"1 4 5\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '13500'\n"
    },
    {
        "number": 3480,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n\"\nassert solution(stdin) == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n\"\nassert solution(stdin) == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n\"\nassert solution(stdin) == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n\"\nassert solution(stdin) == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"33\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 405\n"
    },
    {
        "number": 3483,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"28 4 21 14.0\"\nassert solution(stdin) == \"28 4 21 14.0\"\nassert solution(stdin) == \"28 4 21 14.0\"\nassert solution(stdin) == \"28 4 21 14.0\"\nassert solution(stdin) == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\nassert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\nassert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '10.000000000'\nassert solution(stdin) == '10.000000000'\nassert solution(stdin) == '10.000000000'\nassert solution(stdin) == '10.000000000'\nassert solution(stdin) == '10.000000000'\n"
    },
    {
        "number": 3486,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.000000000 1.360000000\"\nassert solution(stdin) == \"0.000000000 1.000000000\"\nassert solution(stdin) == \"0.000000000 -1.000000000\"\nassert solution(stdin) == \"0.000000000 0.360000000\"\nassert solution(stdin) == \"0.880000000 0.000000000\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"4 0\"\n) == \"2\"\nassert solution(\n    \"0 1\"\n) == \"3\"\nassert solution(\n    \"0 2\"\n) == \"1\"\nassert solution(\n    \"0 3\"\n) == \"1\"\nassert solution(\n    \"0 4\"\n) == \"2\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ok\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"R 0\\nG 2\\n\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4.114 -2.842\"\nassert solution(stdin) == \"6.297 -0.784\"\nassert solution(stdin) == \"5.000 3.000\"\nassert solution(stdin) == \"4.114 -2.842\"\nassert solution(stdin) == \"6.297 -0.784\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"13\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"106\"\nassert solution(stdin) == \"107\"\nassert solution(stdin) == \"71\"\nassert solution(stdin) == \"71\"\nassert solution(stdin) == \"71\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 51\n\nSample Input:\n2\nAA\nSample Output:\n2\n"
    },
    {
        "number": 3500,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"bingo\"\nassert solution(stdin) == \"bingo\"\nassert solution(stdin) == \"bingo\"\nassert solution(stdin) == \"bingo\"\nassert solution(stdin) == \"bingo\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.4'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\n"
    },
    {
        "number": 3503,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"1 5 3 4 5 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -1 -6 -"
    },
    {
        "number": 3504,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\nSample Input:\n5\n1 2 3 4 5 6 7 8 9 10\nSample Output:\n5\n"
    },
    {
        "number": 3506,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4 3\"\nassert solution(stdin) == \"4 3\"\nassert solution(stdin) == \"4 3\"\nassert solution(stdin) == \"4 3\"\nassert solution(stdin) == \"4 3\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\nSample Input:\n2 2 1\nSample Output:\n2\n"
    },
    {
        "number": 3508,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 1\"\nassert solution(stdin) == \"3 1\"\nassert solution(stdin) == \"3 1\"\nassert solution(stdin) == \"3 1\"\nassert solution(stdin) == \"3 1\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 1\"\nassert solution(stdin) == \"0 -1\"\nassert solution(stdin) == \"0 -1\"\nassert solution(stdin) == \"0 -1\"\nassert solution(stdin) == \"0 -1\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n\nSample Input:\n3 3\nx..\n.x.\nx.x\nSample Output:\n1\n"
    },
    {
        "number": 3515,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"91\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 1\nassert solution(stdin) == 1\nassert solution(stdin) == 1\nassert solution(stdin) == 1\nassert solution(stdin) == 1\n"
    },
    {
        "number": 3520,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '115.000000000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '199.500000'\n"
    },
    {
        "number": 3522,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\"\nassert solution(\"a\") == \"no\"\nassert solution(\"\") == \"no\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '9.0'\nassert solution(stdin) == '6.5'\nassert solution(stdin) == '2.5'\nassert solution(stdin) == '5.0'\nassert solution(stdin) == '1.0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3 2\"\n) == \"1\"\nassert solution(\n    \"B 1 2\"\n) == \"0\"\nassert solution(\n    \"B 2 3\"\n) == \"0\"\nassert solution(\n    \"R 3 1\"\n) == \"0\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"88\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n"
    },
    {
        "number": 3532,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"mirkovniz\"\nassert solution(stdin) == \"mirkovniz\"\nassert solution(stdin) == \"mirkovniz\"\nassert solution(stdin) == \"mirkovniz\"\nassert solution(stdin) == \"mirkovniz\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"32\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"500000004\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n\nSample Input:\n1\n1 1\nSample Output:\n2\n"
    },
    {
        "number": 3540,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"RGGR\"\n) == \"3\"\nassert solution(\n    \"GBGB\"\n) == \"3\"\nassert solution(\n    \"BYBY\"\n) == \"3\"\nassert solution(\n    \"YRYR\"\n) == \"3\"\nassert solution(\n    \"RGRGGBB\"\n) == \"3\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"AAAAA\"\nassert solution(stdin) == \"ABABA\"\nassert solution(stdin) == \"ABABA\"\nassert solution(stdin) == \"ABABA\"\nassert solution(stdin) == \"ABABA\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\nassert solution(stdin) == 4\nassert solution(stdin) == 11\nassert solution(stdin) == 3\nassert solution(stdin) == 2\n"
    },
    {
        "number": 3544,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"BIGEDCJFAH\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n"
    },
    {
        "number": 3547,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '10000.00'\n"
    },
    {
        "number": 3548,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n"
    },
    {
        "number": 3549,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2095\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"var a = \\\"Gon\\\";\\nvar b = \\\"Gon\\\";\\nvar c = \\\"My name is ${a}\\\";\\nprint c;\\nprint \\\"My name is ${b}\\\";\\nend.\\n\") == \"My name is Gon\"\nassert solution(\n    \"var a = \\\"Gon\\\";\\nvar b = \\\"Gon\\\";\\nvar c = \\\"My name is ${a}\\\";\\nprint c;\\nprint \\\"My name is ${b}\\\";\\nend.\\n\") == \"My name is Gon\"\nassert solution(\n    \"var a = \\\"Gon\\\";\\nvar b = \\\"Gon\\\";\\nvar c = \\\"My name is ${a}\\\";\\nprint c;\\nprint \\\"My name is ${b}\\\";\\nend.\\n\") == \"My name is Gon\"\nassert solution(\n    \"var a = \\\"Gon\\\";\\nvar b = \\\"Gon\\\";\\nvar c = \\\"My name is ${a}\\\";\\nprint c;\\nprint \\\"My name is ${b}\\\";\\nend.\\n\") == \"My name is Gon\"\nassert solution(\n    \"var a = \\\"Gon\\\";\\nvar b = \\\"Gon\\\";\\nvar c = \\\"My name is ${a}\\\";\\nprint c;\\nprint \\\"My name is ${b}\\\";\\nend.\\n\") == \"My name is Gon\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 27\n\nSample Input:\n10 4\nSample Output:\n27\n"
    },
    {
        "number": 3553,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 121 122 123 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 171 172 173 174 175 176 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245"
    },
    {
        "number": 3554,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '533.3333333333'\nassert solution(stdin) == '0.0'\nassert solution(stdin) == '0.0'\nassert solution(stdin) == '0.0'\nassert solution(stdin) == '0.0'\n"
    },
    {
        "number": 3555,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '14.14'\n"
    },
    {
        "number": 3556,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"123457\"\nassert solution(stdin) == \"0 2\"\nassert solution(stdin) == \"123458\"\nassert solution(stdin) == \"123457\"\nassert solution(stdin) == \"123458\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"90\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '6.000000'\n"
    },
    {
        "number": 3559,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n..\\n1.\\n.."
    },
    {
        "number": 3560,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '80.5696000000'\n\"\"\""
    },
    {
        "number": 3563,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\n"
    },
    {
        "number": 3565,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3907\"\nassert solution(stdin) == \"3907\"\nassert solution(stdin) == \"3907\"\nassert solution(stdin) == \"3907\"\nassert solution(stdin) == \"3907\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"00010\"\nassert solution(stdin) == \"11100\"\nassert solution(stdin) == \"10111\"\nassert solution(stdin) == \"11100\"\nassert solution(stdin) == \"10111\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"impossible\"\n\nSample Input:\n1\n5\n0 4\n6 12\nSample Output:\npossible\n"
    },
    {
        "number": 3569,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Plot Error\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"X\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.00000000\"\nassert solution(stdin) == \"1.00000000\"\nassert solution(stdin) == \"1.00000000\"\nassert solution(stdin) == \"1.00000000\"\nassert solution(stdin) == \"1.00000000\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"never meet\"\nassert solution(stdin) == \"never meet\"\nassert solution(stdin) == \"never meet\"\nassert solution(stdin) == \"never meet\"\nassert solution(stdin) == \"never meet\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '14500000001'\nassert solution(stdin) == '14500000001'\nassert solution(stdin) == '14500000001'\nassert solution(stdin) == '14500000001'\nassert solution(stdin) == '14500000001'\n"
    },
    {
        "number": 3577,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '3100'\n"
    },
    {
        "number": 3579,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '5.250000000'\n"
    },
    {
        "number": 3580,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '32.6405451448'\n"
    },
    {
        "number": 3582,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 3 4 1\"\nassert solution(stdin) == \"2 3 4 1\"\nassert solution(stdin) == \"2 3 4 1\"\nassert solution(stdin) == \"2 3 4 1\"\nassert solution(stdin) == \"2 3 4 1\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '7.656854249492381'\n"
    },
    {
        "number": 3584,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3585,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '9'\nassert solution(stdin) == '9'\nassert solution(stdin) == '9'\nassert solution(stdin) == '9'\nassert solution(stdin) == '9'\n"
    },
    {
        "number": 3586,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]) == \"12\"\nassert solution([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"]) == \"12\"\nassert solution([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\", \"60\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70\", \"71\", \"72\", \"73\", \"74\", \"75\", \"76\", \"77\", \"78\", \"79\", \"80\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"90\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\", \"100\", \"101\", \"102\", \"103\", \"104\", \"105\", \"106\", \"107\", \"108\", \"109\", \"110\", \"111\", \"112\", \"113\", \"114\", \"115\", \"116\", \"117\", \"118\", \"119\", \"120\", \"121\", \"122\", \"123\", \"124\", \"125\", \"126\", \"127\", \"128\", \"129\", \"130\", \"131\", \"132\", \"133\", \"134\", \"135\", \"136\", \"137\", \"138\", \"139\", \"140\", \"141\", \"142\", \"143\", \"144\", \"145\", \"146\", \"147\", \"148\", \"149\", \"150\", \"151\", \"152\", \"153\", \"154\", \"155\", \"156\", \"157\", \"158\", \"159\", \"160\", \"161\", \"162\", \"163\", \"164\", \"165\", \"166\", \"167\", \"168\", \"169\", \"170\", \"171\", \"172\", \"173\", \"174\", \"175\", \"176\", \"177\", \"178\", \"179\", \"180\", \"181\", \"182\", \"183\", \"184\", \"185\", \"186\", \"187\", \"188\", \"189\", \"190\", \"191\", \"192\", \"193\", \"194\", \"195\", \"196\", \"197\", \"198\", \"199\", \"200\", \"201\", \"202\", \"203\", \"204\", \"205\", \"206\", \"207\", \"208\", \"209\", \"210\", \"211\", \"212\", \"213\", \"214\", \"215\", \"216\", \"217\", \"218\", \"219\", \"220\", \"221\", \"222\", \"223\", \"224\", \"225\", \"226\", \"227\", \"228\", \"229\", \"230\", \"231\", \"232\", \"233\", \"234\", \"235\", \"236\", \"237\", \"238\", \"239\", \"240\", \"241\", \"242\", \"243\", \"244\", \"245\", \"246\", \"247\", \"248\", \"249\", \"250\", \"251\", \"252\", \"253\", \"254\", \"255\", \"256\", \"257\", \"258\", \"259\", \"260\", \"261\", \"262\", \"263\", \"264\", \"265\", \"266\", \"267\", \"268\", \"269\", \"270\", \"271\", \"272\", \"273\", \"274\", \"275\", \"276\", \"277\", \"278\", \"279\", \"280\", \"281\", \"282\", \"283\", \"284\", \"285\", \"286\", \"287\", \"288\", \"289\", \"290\", \"291\", \"292\", \"293\", \"294\", \"295\", \"296\", \"297\", \"298\", \"299\", \"300\", \"301\", \"302\", \"303\", \"304\", \"305\", \"306\", \"307\", \"308\", \"309\", \"310\", \"311\", \"312\", \"313\", \"314\", \"315\", \"316\", \"317\", \"318\", \"319\", \"320\", \"321\", \"322\", \"323\", \"324\", \"325\", \"326\", \"327\", \"328\", \"329\", \"330\", \"331\", \"332\", \"333\", \"334\", \"335\", \"336\", \"337\", \"338\", \"339\", \"340\", \"341\", \"342\", \"343\", \"344\", \"345\", \"346\", \"347\", \"348\", \"349\", \"350\", \"351\", \"352\", \"353\", \"354\", \"355\", \"356\", \"357\", \"358\", \"359\", \"360\", \"361\", \"362\", \"363\", \"364\", \"365\", \"366\", \"367\", \"368\", \"369\", \"370\", \"371\", \"372\", \"373\", \"374\", \"375\", \"376\", \"377\", \"378\", \"379\", \"380\", \"381\", \"382\", \"383\", \"384\", \"385\", \"386\", \"387\", \"388\", \"389\", \"390\", \"391\", \"392\", \"393\", \"394\", \"395\", \"396\", \"397\", \"398\", \"399\", \"400\", \"401\", \"402\", \"403\", \"404\", \"405\", \"406\", \"407\", \"408\", \"409\", \"410\", \"411\", \"412\", \"413\", \"414\", \"415\", \"416\", \"417\", \"418\", \"419\", \"420\", \"421\", \"422\", \"423\", \"424\", \"425\", \"426\", \"427\", \"428\", \"429\", \"430\", \"431\", \"432\", \"433\", \"434\", \"435\", \"436\", \"437\", \"438\", \"439\", \"440\", \"441\", \"442\", \"443\", \"444\", \"445\", \"446\", \"447\", \"448\", \"449\", \"450\", \"451\", \"452\", \"453\", \"454\", \"455\", \"456\", \"457\", \"458\", \"459\", \"460\", \"461\", \"462\", \"463\", \"464\", \"465\", \"466\", \"467\", \"468\", \"469\", \"470\", \"471\", \"472\", \"473\", \"474\", \"475\", \"476\", \"477\", \"478\", \"479\", \"480\", \"481\", \"482\", \"483\", \"484\", \"485\", \"486\", \"487\", \"488\", \"489\", \"490\", \"491\", \"492\", \"493\", \"494\", \"495\", \"496\", \"497\", \"498\", \"499\", \"500\", \"501\", \"502\", \"503\", \"504\", \"505\", \"506\", \"507\", \"508\", \"509\", \"510\", \"511\", \"512\", \"513\", \"514\", \"515\", \"516\", \"517\", \"518\", \"519\", \"520\", \"521\", \"522\", \"523\", \"524\", \"525\", \"526\", \"527\", \"528\", \"529\", \"530\", \"531\", \"532\", \"533\", \"534\", \"535\", \"536\", \"537\", \"538\", \"539\", \"540\", \"541\", \"542\", \"543\", \"544\", \"545\", \"546\", \"547\", \"548\", \"549\", \"550\", \"551\", \"552\", \"553\", \"554\", \"555\", \"556\", \"557\", \"558\", \"559\", \"560\", \"561\", \"562\", \"563\", \"564\", \"565\", \"566\", \"567\", \"568\", \"569\", \"570\", \"571\", \"572\", \"573\", \"574\", \"575\", \"576\", \"577\","
    },
    {
        "number": 3587,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '11'\nassert solution(stdin) == '11'\nassert solution(stdin) == '11'\nassert solution(stdin) == '11'\nassert solution(stdin) == '11'\n"
    },
    {
        "number": 3588,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"100 250 320\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin) == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin) == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin) == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin) == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 40.0000000000\n"
    },
    {
        "number": 3591,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '199 162'\n"
    },
    {
        "number": 3593,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 1 4\"\nassert solution(stdin) == \"2 1 4\"\nassert solution(stdin) == \"2 1 4\"\nassert solution(stdin) == \"2 1 4\"\nassert solution(stdin) == \"2 1 4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.585073\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '12.74'\nassert solution(stdin) == '127.83'\nassert solution(stdin) == '127.83'\nassert solution(stdin) == '127.83'\nassert solution(stdin) == '127.83'\n"
    },
    {
        "number": 3598,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution
    },
    {
        "number": 3599,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"The Drinking Musicians\"\nassert solution(stdin) == \"The Musicians\"\nassert solution(stdin) == \"The Musicians\"\nassert solution(stdin) == \"The Musicians\"\nassert solution(stdin) == \"The Musicians\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4.00000\"\nassert solution(stdin) == \"4.00000\"\nassert solution(stdin) == \"4.00000\"\nassert solution(stdin) == \"4.00000\"\nassert solution(stdin) == \"4.00000\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3/2\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 3\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 3\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 2 3\"\nassert solution(stdin) == \"1 2 3 4\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"D\"\nassert solution(stdin) == \"C\"\nassert solution(stdin) == \"B\"\nassert solution(stdin) == \"A\"\nassert solution(stdin) == \"A\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"HELLO THERE\"\nassert solution(input()) == \"DONE\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"LLRRRRLL\"\nassert solution(stdin) == \"LLRLRRLR\"\nassert solution(stdin) == \"LLRLRRLR\"\nassert solution(stdin) == \"LLRLRRLR\"\nassert solution(stdin) == \"LLRLRRLR\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2011\"\nassert solution(stdin) == \"2011\"\nassert solution(stdin) == \"2011\"\nassert solution(stdin) == \"2011\"\nassert solution(stdin) == \"2011\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 3\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '20'\n"
    },
    {
        "number": 3613,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 1\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n\nSample Input:\n1\nSample Output:\n1\n"
    },
    {
        "number": 3619,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.001'\n"
    },
    {
        "number": 3620,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n
    },
    {
        "number": 3622,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin
    },
    {
        "number": 3623,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"45 45 0 0\") == \"0.75\"\nassert solution(\n    \"45 45 0 0.5\") == \"0.75\"\nassert solution(\n    \"45 45 0 0.75\") == \"0.75\"\nassert solution(\n    \"45 45 0 0.75e-6\") == \"0.75\"\nassert solution(\n    \"45 45 0 0.75e-6\") == \"0.75\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"100\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 17\n"
    },
    {
        "number": 3628,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 4 3 5 2\"\nassert solution(stdin) == \"2 3 5 1 4\"\nassert solution(stdin) == \"1 4 3 5 2\"\nassert solution(stdin) == \"1 4 3 5 2\"\nassert solution(stdin) == \"1 4 3 5 2\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.76772047'\n"
    },
    {
        "number": 3630,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"hello teams\") == \"27\"\nassert solution(\"hello teams\") == \"27\"\nassert solution(\"hello teams\") == \"27\"\nassert solution(\"hello teams\") == \"27\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 26\n\nSample Input:\n5 3\na\nb\nc\nd\ne\ncad\nSample Output:\n26\n"
    },
    {
        "number": 3633,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 5 2 1 4\"\nassert solution(stdin) == \"3 5 2 1 4\"\nassert solution(stdin) == \"3 5 2 1 4\"\nassert solution(stdin) == \"3 5 2 1 4\"\nassert solution(stdin) == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"4 4 999999937\"\n) == \"79\"\nassert solution(\n    \"4 4 999999937\"\n) == \"79\"\nassert solution(\n    \"4 4 999999937\"\n) == \"79\"\nassert solution(\n    \"4 4 999999937\"\n) == \"79\"\nassert solution(\n    \"4 4 999999937\"\n) == \"79\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"zucchini mozzarella mushrooms -artichoke\") == \"zucchini mozzarella mushrooms -artichoke\"\nassert solution(\"zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke\") == \"zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke\"\nassert solution(\"zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -artichoke +zucchini mozzarella mushrooms -"
    },
    {
        "number": 3638,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"PS\"\nassert solution(stdin) == \"PP\"\nassert solution(stdin) == \"RR\"\nassert solution(stdin) == \"SS\"\nassert solution(stdin) == \"PS\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '288'\n"
    },
    {
        "number": 3640,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3641,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3/1\"\nassert solution(stdin) == \"3/1\"\nassert solution(stdin) == \"3/1\"\nassert solution(stdin) == \"3/1\"\nassert solution(stdin) == \"3/1\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.114672365'\n"
    },
    {
        "number": 3644,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"none\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"01001\"\nassert solution(stdin) == \"01001\"\nassert solution(stdin) == \"01001\"\nassert solution(stdin) == \"01001\"\nassert solution(stdin) == \"01001\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.0'\n"
    },
    {
        "number": 3652,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\n"
    },
    {
        "number": 3655,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n0 0 0\") == \"0 0 0\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0"
    },
    {
        "number": 3656,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '44.975'\n"
    },
    {
        "number": 3657,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == \"4.0\"\nassert solution(\n    \"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == \"4.0\"\nassert solution(\n    \"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == \"4.0\"\nassert solution(\n    \"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == \"4.0\"\nassert solution(\n    \"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == \"4.0\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"18000\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"28\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"INDV 1\"\nassert solution(stdin) == \"INDV 2\"\nassert solution(stdin) == \"INDV 3\"\nassert solution(stdin) == \"INDV 4\"\nassert solution(stdin) == \"INDV 5\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.4142135624'\n"
    },
    {
        "number": 3663,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"A.C\") == \"..A.C\"\nassert solution(\"@DDDD\") == \"..A.C\"\nassert solution
    },
    {
        "number": 3665,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"001\"\nassert solution(stdin) == \"001\"\nassert solution(stdin) == \"001\"\nassert solution(stdin) == \"001\"\nassert solution(stdin) == \"001\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"20 20\"\nassert solution(stdin) == \"17 15 14 13 7 2\"\nassert solution(stdin) == \"19 20\"\nassert solution(stdin) == \"19 17 15 14 13 7 2\"\nassert solution(stdin) == \"19 17 15 14 13 7 2\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Mirko\"\nassert solution(stdin) == \"Slavko\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\nassert solution(stdin) == \"2 4\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\n"
    },
    {
        "number": 3672,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5 6 1 2 3 4\"\nassert solution(stdin) == \"5 6 1 2 3 4\"\nassert solution(stdin) == \"5 6 1 2 3 4\"\nassert solution(stdin) == \"5 6 1 2 3 4\"\nassert solution(stdin) == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '20512'\nassert solution(stdin) == 'IMPOSIBLE'\nassert solution(stdin) == 'IMPOSIBLE'\nassert solution(stdin) == 'IMPOSIBLE'\nassert solution(stdin) == 'IMPOSIBLE'\n"
    },
    {
        "number": 3675,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 3676,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"13\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 245 246 247 248 249 250 251 252 253 253 254 255 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 301 302 303 303 304 305 306 308 309 310 311 310 312 313 314 315 316 317 318 319 320 321 321 322 323 324 325 326 327 328 329 330 330 331 332 333 333 334 334 335 336 337 337 338 339 340 341 341 341 342 343 343 344 345 346 347 348 349 349 350 351 351 352 353 354 355 355 356 357 358 359 359 360 361 360 361 366 366 367 366 369 369 371 371 372 373 373 374 375 375 376 377 378 379 380 380 381 382 383 383 384 385 386 387 388 389 389 390 391 392 392 393 394 395 396 397 397 398 399 399 401 401 402 403 404 405 405 406 407 407 408 409 410 411 411 412 413 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414"
    },
    {
        "number": 3677,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3.000000000\"\nassert solution(stdin) == \"3.000000000\"\nassert solution(stdin) == \"3.000000000\"\nassert solution(stdin) == \"3.000000000\"\nassert solution(stdin) == \"3.000000000\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Hello World\"\nassert solution(stdin) == \"Hello World\"\nassert solution(stdin) == \"Hello World\"\nassert solution(stdin) == \"Hello World\"\nassert solution(stdin) == \"Hello World\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 26\n"
    },
    {
        "number": 3686,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"failure\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"impossible\"\n\nSample Input:\n2 2 2\n1 2\n3 3\n5 2 2\n5 2 2\nSample Output:\npossible\n"
    },
    {
        "number": 3688,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\n"
    },
    {
        "number": 3689,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1313\"\nassert solution(stdin) == \"1313\"\nassert solution(stdin) == \"1313\"\nassert solution(stdin) == \"1313\"\nassert solution(stdin) == \"1313\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"12 30 45 3 11\") == \"YES\"\nassert solution(\"12 0 1 12 1\") == \"NO\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"NO\"\nassert solution(\"3 47 0 4 9\") == \"NO\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\""
    },
    {
        "number": 3694,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"sjfnb\"\nassert solution(stdin) == \"cslnb\"\nassert solution(stdin) == \"cslnb\"\nassert solution(stdin) == \"cslnb\"\nassert solution(stdin) == \"cslnb\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3696,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 3 3\"\nassert solution(stdin) == \"1 3 3\"\nassert solution(stdin) == \"1 3 3\"\nassert solution(stdin) == \"1 3 3\"\nassert solution(stdin) == \"1 3 3\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"169\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"33.121375178000\"\n\nassert solution(stdin) == \"33.121375178000\"\n\nassert solution(stdin) == \"33.121375178000\"\n\nassert solution(stdin) == \"33.121375178000\"\n\nassert solution(stdin) == \"33.121375178000\""
    },
    {
        "number": 3700,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"500000000000\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\n\n-----Constraints-----\n\n1 <= n <= 300,000, 0 <= x, y <= 10^9\n\n1 <= stdin.length <= 300,000\nstdin.length <= 10^9\nstdin.length <= 10^9\nstdin.length <= 10^9\n\n\"\"\""
    },
    {
        "number": 3702,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '19'\nassert solution(stdin) == '5'\nassert solution(stdin) == '7'\n"
    },
    {
        "number": 3703,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 1\nassert solution(stdin) == 2\nassert solution(stdin) == 3\nassert solution(stdin) == 4\n"
    },
    {
        "number": 3706,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\n"
    },
    {
        "number": 3709,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= k <= 4\n\n-----Time Limit-----\n\nO(n)\n\n\n-----Submissions-----\n\nSample Input\n\n5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n1 0 0\n1 0 0\n\nSample Output\n\nYES\n\nExplanation\n\nIn this example, the first team knows all the problems and the second team knows only the first problem.\n\nIn the third team, the first team knows all the problems and the third team knows only the second problem.\n\nIn the fourth team, the first team knows all the problems and the fourth team knows only the third problem.\n\nIn the fifth team, the first team knows all the problems and the fifth team knows only the fourth problem.\n\nIn the sixth team, the first team knows all the problems and the sixth team knows only the fifth problem.\n\nIn the seventh team, the first team knows all the problems and the seventh team knows only the sixth problem.\n\nIn the eighth team, the first team knows all the problems and the eighth team knows only the seventh problem.\n\nIn the ninth team, the first team knows all the problems and the ninth team knows only the eighth problem.\n\nIn the tenth team, the first team knows all the problems and the tenth team knows only the ninth problem.\n\nIn the eleventh team, the first team knows all the problems and the eleventh team knows only the tenth problem.\n\nIn the twelfth team, the first team knows all the problems and the twelfth team knows only the eleventh problem.\n\n-----Bug alert-----\n\nIn the last example, the first team knows all the problems and the last team knows only the tenth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the eleventh problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the first team knows all the problems and the last team knows only the twelfth problem.\n\nIn the last example, the"
    },
    {
        "number": 3710,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3713,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n\nassert solution(stdin) == 5\n\nassert solution(stdin) == 5\n\nassert solution(stdin) == 5\n\nassert solution(stdin) == 5"
    },
    {
        "number": 3714,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3716,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 210\n\n\"\"\""
    },
    {
        "number": 3717,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 1\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\""
    },
    {
        "number": 3719,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n\nassert solution(stdin) == \"10\"\n\nassert solution(stdin) == \"10\"\n\nassert solution(stdin) == \"10\"\n\nassert solution(stdin) == \"10\""
    },
    {
        "number": 3720,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\"\nassert solution(9) == \"Vasya\"\nassert solution(10) == \"Vasya\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 2\n"
    },
    {
        "number": 3723,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == 11\n"
    },
    {
        "number": 3725,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\nInput\n5\n4 2\n1 1\n0 1\n2 3\n\nOutput\n3\n\nInput\n1023\n1 2\n1 0\n1 2\n1 1\n\nOutput\n-1\n\nExplanation\n\nXaniar: $4 \\rightarrow 0 \\rightarrow 1 \\rightarrow 2$\nAbol: $0 \\rightarrow 3 \\rightarrow 4$\n\n\"\"\""
    },
    {
        "number": 3726,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n\"\"\""
    },
    {
        "number": 3727,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\""
    },
    {
        "number": 3729,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"666666672\"\n\n-----Constraints-----\n\n1 <= f, w, h <= 10^5\n\n1 <= stdin.length <= 10^5\n\nstdin contains only digits.\n\n\"\"\""
    },
    {
        "number": 3730,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n\n-----Constraints-----\n1 <= n <= 10^5\n\n0 <= a_i < 10^9\n\n-----Time Limit-----\n1 second\n\n-----Memory Limit-----\n256 megabytes\n\n-----Solutions-----\n\n\"\"\""
    },
    {
        "number": 3731,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n\nassert solution(stdin) == 2\n\nassert solution(stdin) == 1\n\nassert solution(stdin) == 0\n\nassert solution(stdin) == 0"
    },
    {
        "number": 3732,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n\nassert solution(stdin) == 0\n\nassert solution(stdin) == 2\n\nassert solution(stdin) == 2\n\nassert solution(stdin) == 2"
    },
    {
        "number": 3734,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(35) == 17\nassert solution(10000000000) == 91\nassert solution(5000000001) == 91\n"
    },
    {
        "number": 3736,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n"
    },
    {
        "number": 3737,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 1\nassert solution(stdin) == 2\nassert solution(stdin) == 3\nassert solution(stdin) == 4\n"
    },
    {
        "number": 3738,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n\n\"\"\""
    },
    {
        "number": 3739,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n3 6 28 9\n\nSample Output\n\n3\nInput\n\n5\n5 12 9 16 48\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n-1\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n-1\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n3\nInput\n\n5\n5 12 9 16 48\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n-1\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n3\nInput\n\n5\n5 12 9 16 48\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n-1\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n3\nInput\n\n5\n5 12 9 16 48\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n-1\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n3\nInput\n\n5\n5 12 9 16 48\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n-1\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n3\nInput\n\n5\n5 12 9 16 48\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n-1\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n3\nInput\n\n5\n5 12 9 16 48\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n-1\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6, 28)$.\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^18\n\nTime Limit: 1 sec\n\nSample Input\n\n4\n1 2 4 8\n\nSample Output\n\n3\nInput\n\n5\n5 12 9 16 48\n\nSample Explanation\n\nThe graph has no cycles in the third example.\n\nThe shortest cycle is $(9, 3, 6"
    },
    {
        "number": 3742,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n\n-----Constraints-----\n\n1 <= n <= 100\n\n1 <= p_i <= n\n\n1 <= p_1, p_2, p_3, p_4 <= n\n\n-----Time Limit-----\n\nO(n)\n"
    },
    {
        "number": 3743,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"23\"\nassert solution(stdin) == \"31\"\nassert solution(stdin) == \"23\"\nassert solution(stdin) == \"31\"\nassert solution(stdin) == \"23\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(0, 1, 1, 3) == 7\nassert solution(0, 1, 1, 5) == 87\nassert solution(0, 1, 1, 4) == 7\nassert solution(0, 1, 1, 2) == 7\nassert solution(0, 1, 1, 1) == 7\n"
    },
    {
        "number": 3747,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n\nassert solution(stdin) == 1\n\nassert solution(stdin) == 0\n\nassert solution(stdin) == 0\n\nassert solution(stdin) == 0"
    },
    {
        "number": 3748,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\""
    },
    {
        "number": 3749,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n"
    },
    {
        "number": 3751,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"20.0\"\nassert solution(stdin) == \"6.5\"\nassert solution(stdin) == \"20.0\"\nassert solution(stdin) == \"6.5\"\nassert solution(stdin) == \"20.0\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= m <= 10^5\n\n-----Time Limit-----\n1 second\n\n-----Solutions-----\n\nInput:\n2 2\n..\n..\n\nOutput:\n1\n\nInput:\n4 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n1\n\nInput:\n3 4\n....\n.##.\n....\n.#..\n\nOutput:\n2\n\nInput"
    },
    {
        "number": 3754,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"6\"\n\n\"\"\""
    },
    {
        "number": 3755,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == 11\nassert solution(input()) == 3\nassert solution(input()) == 1\nassert solution(input()) == 4\nassert solution(input()) == 2\n"
    },
    {
        "number": 3756,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10.3\"\nassert solution(stdin) == \"10.3\"\nassert solution(stdin) == \"10.3\"\nassert solution(stdin) == \"10.3\"\nassert solution(stdin) == \"10.3\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"0110\"\nassert solution(stdin) == \"0110\"\nassert solution(stdin) == \"0110\"\nassert solution(stdin) == \"0110\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 16\n"
    },
    {
        "number": 3760,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"17 8 86 92\"\nassert solution(stdin) == \"17 8 86 92\"\nassert solution(stdin) == \"17 8 86 92\"\nassert solution(stdin) == \"17 8 86 92\"\nassert solution(stdin) == \"17 8 86 92\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.3333333333\"\nassert solution(stdin) == \"1.3333333333\"\nassert solution(stdin) == \"1.3333333333\"\nassert solution(stdin) == \"1.3333333333\"\nassert solution(stdin) == \"1.3333333333\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == (13, 7)\nassert solution(stdin) == (986, 605)\nassert solution(stdin) == (986, 605)\nassert solution(stdin) == (986, 605)\nassert solution(stdin) == (986, 605)\n"
    },
    {
        "number": 3765,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\n"
    },
    {
        "number": 3766,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 1\nassert solution(stdin) == 2\nassert solution(stdin) == 3\nassert solution(stdin) == 4\n"
    },
    {
        "number": 3767,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 11\"\nassert solution(stdin) == \"3 11\"\nassert solution(stdin) == \"3 11\"\nassert solution(stdin) == \"3 11\"\nassert solution(stdin) == \"3 11\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '3B'\nassert solution(stdin) == '1A1B'\nassert solution(stdin) == '1A1B'\nassert solution(stdin) == '1A1B'\nassert solution(stdin) == '1A1B'\n"
    },
    {
        "number": 3769,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"25\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n\"\"\""
    },
    {
        "number": 3772,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"199\"\nassert solution(stdin) == \"200\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Aoki\"\nassert solution(input()) == \"Takahashi\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\n"
    },
    {
        "number": 3775,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(24) == \"17:30\"\nassert solution(12) == \"17:30\"\nassert solution(24) == \"07:30\"\nassert solution(24) == \"09:09\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3\"\n) == \"6\"\nassert solution(\n    \"2 3\"\n) == \"3\"\nassert solution(\n    \"2 3\"\n) == \"3\"\nassert solution(\n    \"3 3\"\n) == \"6\"\nassert solution(\n    \"2 3\"\n) == \"6\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '3.729935587093555327'\nassert solution(stdin) == '11.547005383792516398'\nassert solution(stdin) == '3.729935587093555327'\nassert solution(stdin) == '11.547005383792516398'\nassert solution(stdin) == '3.729935587093555327'\n"
    },
    {
        "number": 3781,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"Second\"\nassert solution(input()) == \"First\"\nassert solution(input()) == \"First\"\nassert solution(input()) == \"First\"\nassert solution(input()) == \"First\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 24\n\n-----Constraints-----\n\n1 <= N <= 10^9\n\n1 <= k <= 5000\n\n-----Time Limit-----\n\nO(N * k)\n\nO(N)\n\n-----Space Limit-----\n\nO(N)\n\n-----Submissions-----\n\nSubmissions (easy)\n\nRuntime: 32 ms, faster than 99.74% of Python3 online submissions for Subsets.\nMemory Usage: 14.2 MB, less than 100.00% of Python3 online submissions for Subsets.\n\n\"\"\"\n\nclass Solution:\n    def subarraySum(self, nums: List[int], k: int) -> int:\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        # O(N)\n        \n        # O(N)\n        "
    },
    {
        "number": 3784,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == str(1196)\n\n-----Constraints-----\n\n1 <= n <= 50\n1 <= m <= 50\n\n1 <= stdin.length <= 1000\nstdin.length <= 1000\n\n1 <= s.length <= 10^5\ns.length <= 10^5\n\n1 <= t.length <= 10^5\nt.length <= 10^5\n\n1 <= u.length <= 10^5\nu.length <= 10^5\n\n1 <= v.length <= 10^5\nv.length <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i] <= 10^5\nv[i] <= 10^5\n\n1 <= s[i] <= 10^5\ns[i] <= 10^5\n\n1 <= t[i] <= 10^5\nt[i] <= 10^5\n\n1 <= u[i] <= 10^5\nu[i] <= 10^5\n\n1 <= v[i]"
    },
    {
        "number": 3785,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin
    },
    {
        "number": 3786,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"18\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2 4 1 5 3\"\nassert solution(input()) == \"2 4 1 5 3\"\nassert solution(input()) == \"2 4 1 5 3\"\nassert solution(input()) == \"2 4 1 5 3\"\nassert solution(input()) == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"12\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n\n\"\"\""
    },
    {
        "number": 3791,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 0\"\nassert solution(stdin) == \"0 1\"\nassert solution(stdin) == \"0 2\"\nassert solution(stdin) == \"0 3\"\nassert solution(stdin) == \"0 4\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 8\n\nassert solution(stdin) == 8\n\nassert solution(stdin) == 8\n\nassert solution(stdin) == 8\n\nassert solution(stdin) == 8"
    },
    {
        "number": 3793,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"40\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3796,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"1 1 1 1 1\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '10'\nassert solution(stdin) == '-1'\n"
    },
    {
        "number": 3799,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"Second\"\nassert solution(input) == \"First\"\nassert solution(input) == \"First\"\nassert solution(input) == \"First\"\nassert solution(input) == \"First\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"40\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"332748119\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ORZ\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"99\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"21.991148575128551812\"\n\n-----Constraints-----\n\n1 <= stdin.length <= 10^5\n-10^6 <= stdin[i] <= 10^6\n\n-----Time Limit-----\n\nO(n)\n\n\n-----Submissions-----\n\nSample Input\n\n3\n0 0 0\n0 1\n-1 2\n1 2\n\nSample Output\n\n21.991148575128551812\n\nExplanation\n\nThe area of the region that will be cleared is $21.991148575128551812$ (the answer of the jury).\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3807,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"42\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"42\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"42\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3812,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(bab) == \"bb\"\nassert solution(bbbb) == \"aaa\"\nassert solution(bbbbbb) == \"bbbb\"\nassert solution(aaa) == \"bb\"\nassert solution(bb) == \"bb\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"POSSIBLE\"\n\"\"\""
    },
    {
        "number": 3814,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '7'\nassert solution(stdin) == '999999228'\nassert solution(stdin) == '7'\nassert solution(stdin) == '7'\nassert solution(stdin) == '7'\n"
    },
    {
        "number": 3816,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(3, 2) == 6\nassert solution(3, 3) == 6\nassert solution(3, 4) == 6\nassert solution(3, 5) == 6\nassert solution(3, 6) == 6\n"
    },
    {
        "number": 3818,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.260000000000'\n\n-----Constraints-----\n\n1 \u2264 n \u2264 100\n0.0 \u2264 p_{i} \u2264 1.0\n\n-----Time Limit: 1 min\n\n-----Space Limit: 1 GB\n\n-----Input Format\n\nThe first line contains an integer n (1 \u2264 n \u2264 100) \u2014 the number of Andrey's friends. The second line contains n real numbers p_{i} (0.0 \u2264 p_{i} \u2264 1.0) \u2014 the probability that the i-th friend can come up with a problem. The probabilities are given with at most 6 digits after decimal point.\n\n\n-----Output Format\n\nPrint a single real number \u2014 the probability that Andrey won't get upset at the optimal choice of friends. The answer will be considered valid if it differs from the correct one by at most 10^{ - 9}.\n\n\n-----Example 1-----\nInput\n\n4\n0.1 0.2 0.3 0.8\n\nOutput\n0.800000000000\n\nExplanation\n\nAndrey is going to be really upset if no one comes up with a problem or if he gets more than one problem from his friends.\n\nAndrey needs one more problem to conduct a programming contest. He has n friends who are always willing to help. He can ask some of them to come up with a contest problem. Andrey knows one value for each of his fiends \u2014 the probability that this friend will come up with a problem if Andrey asks him.\n\n\n-----Example 2-----\nInput\n\n2\n0.1 0.2\n\nOutput\n0.260000000000\n\nExplanation\n\nAndrey needs one more problem to conduct a programming contest. He has n friends who are always willing to help. He can ask some of them to come up with a contest problem. Andrey knows one value for each of his fiends \u2014 the probability that this friend will come up with a problem if Andrey asks him.\n\n\n-----Example 3-----\nInput\n\n3\n0.1 0.2 0.3 0.8\n\nOutput\n0.800000000000\n\nExplanation\n\nAndrey needs one more problem to conduct a programming contest. He has n friends who are always willing to help. He can ask some of them to come up with a contest problem. Andrey knows one value for each of his fiends \u2014 the probability that this friend will come up with a problem if Andrey asks him.\n\n\n-----Example 4-----\nInput\n\n4\n0.1 0.2 0.3 0.8\n\nOutput\n0.260000000000\n\nExplanation\n\nAndrey needs one more problem to conduct a programming contest. He has n friends who are always willing to help. He can ask some of them to come up with a contest problem. Andrey knows one value for each of his fiends \u2014 the probability that this friend will come up with a problem if Andrey asks him.\n\n\n-----Example 5-----\nInput\n\n5\n0.1 0.2 0.3 0.8\n\nOutput\n0.800000000000\n\nExplanation\n\nAndrey needs one more problem to conduct a programming contest. He has n friends who are always willing to help. He can ask some of them to come up with a contest problem. Andrey knows one value for each of his fiends \u2014 the probability that this friend will come up with a problem if Andrey asks him.\n\n\n-----Constraints-----\n\n1 \u2264 n \u2264 100\n0.0 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1.0\n\n1 \u2264 p_{i} \u2264 1"
    },
    {
        "number": 3822,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '5.0000000000'\nassert solution(stdin) == '4.7142857143'\nassert solution(stdin) == '4.0000000000'\nassert solution(stdin) == '4.0000000000'\nassert solution(stdin) == '4.0000000000'\n"
    },
    {
        "number": 3823,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.25\"\nassert solution(stdin) == \"0.27\"\nassert solution(stdin) == \"0.28\"\nassert solution(stdin) == \"0.29\"\nassert solution(stdin) == \"0.30\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\"\nassert solution(stdin) == \"18\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"18\"\nassert solution(stdin) == \"8\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244\nassert solution(100) == 511\nassert solution(1000) == 9\n"
    },
    {
        "number": 3826,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 2\nassert solution(stdin) == 2\nassert solution(stdin) == 2\nassert solution(stdin) == 2\n"
    },
    {
        "number": 3827,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n\n-----Constraints-----\n\n1 \u2264 n \u2264 100 000\n1 \u2264 p_{i} \u2264 n\n1 \u2264 p_{i} \u2264 n\n\nTime Limit: 1 second\n\nSample Input\n\n4\n4 1 2 5 3\n\nSample Output\n\n2\n\nExplanation\n\nIn the first sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the second sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the third sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the fourth sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the fifth sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the sixth sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the seventh sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the eighth sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the ninth sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the tenth sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the eleventh sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\nIn the twelfth sample, you need to teleport the 4-th car, and then the 5-th car to the end of the train.\n\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n"
    },
    {
        "number": 3829,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '3.500000000000'\nassert solution(stdin) == '4.958333333333'\nassert solution(stdin) == '1.750000000000'\nassert solution(stdin) == '2.0'\nassert solution(stdin) == '2.0'\n"
    },
    {
        "number": 3830,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"3\""
    },
    {
        "number": 3831,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"202\"\nassert solution(stdin) == \"101 101 101 101\"\nassert solution(stdin) == \"1 1 1\"\nassert solution(stdin) == \"1 1 1\"\nassert solution(stdin) == \"1 1 1\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 2\"\nassert solution(stdin) == \"0 1 3\"\nassert solution(stdin) == \"0 1 3\"\nassert solution(stdin) == \"0 1 3\"\nassert solution(stdin) == \"0 1 3\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"01100011\"\nassert solution(stdin) == \"01100011\"\nassert solution(stdin) == \"01100011\"\nassert solution(stdin) == \"01100011\"\nassert solution(stdin) == \"01100011\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n"
    },
    {
        "number": 3835,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 2 3 1 2\"\nassert solution(stdin) == \"2 2 3 1 2\"\nassert solution(stdin) == \"2 2 3 1 2\"\nassert solution(stdin) == \"2 2 3 1 2\"\nassert solution(stdin) == \"2 2 3 1 2\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"2 1\"\nassert solution(stdin) == \"3 1\"\nassert solution(stdin) == \"4 1\"\nassert solution(stdin) == \"5 1\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n\n-----Constraints-----\n\n1 <= n <= 100\n1 <= a_1, a_2,..., a_{n} <= 1000\n\n-----Time Limit-----\n1 minute\n\n-----Space Limit-----\n1MB\n\n-----Elements Used-----\nFirst line contains a single integer n (1 \u2264 n \u2264 100) \u2014 the number of chests with coins. The second line contains a sequence of space-separated integers: a_1, a_2,..., a_{n} (1 \u2264 a_{i} \u2264 1000), where a_{i} is the number of coins in the chest number i at the beginning of the game.\n\nSecond line contains a single integer x (2\u00b7x + 1 \u2264 n) \u2014 the number of chests with coins.\n\nThird line contains a single integer y (2\u00b7x + 1 \u2264 n) \u2014 the number of chests with coins.\n\nFourth line contains a single integer z (2\u00b7x + 1 \u2264 n) \u2014 the number of chests with coins.\n\nFifth line contains a single integer m (2\u00b7x + 1 \u2264 n) \u2014 the minimum number of moves needed to finish the game.\n\nSample Input\n\n1\n1\n1 2 3\n
    },
    {
        "number": 3841,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"92\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5.000000000000000\"\n\n-----Constraints-----\n\n1 \u2264 n \u2264 100 000, 1 \u2264 p, q \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b_{i} \u2264 1 000 000\n\n1 \u2264 a_{i} \u2264 b_{i}\n\n1 \u2264 b"
    },
    {
        "number": 3843,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Conan\"\nassert solution(stdin) == \"Agasa\"\n\n-----Constraints-----\n\n1 \u2264 n \u2264 10^5\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^5\n\n-----Time Limit-----\n\nO(n)\n\n\n-----Submissions-----\n\nSample Input\n\n3\n4 5 7\n\nSample Output\n\nConan\n\nSample Input\n\n2\n1 1\n\nSample Output\n\nAgasa\n\n\n-----Constraints-----\n\n1 \u2264 n \u2264 10^5\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^5\n\n-----Time Limit-----\n\nO(n)\n\n\n-----Submissions-----\n\nSample Input\n\n3\n4 5 7\n\nSample Output\n\nConan\n\nSample Input\n\n2\n1 1\n\nSample Output\n\nAgasa\n\n\n-----Constraints-----\n\n1 \u2264 n \u2264 10^5\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^5\n\n-----Time Limit-----\n\nO(n)\n"
    },
    {
        "number": 3845,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"5 5\"\nassert solution(input()) == \"5 5\"\nassert solution(input()) == \"5 5\"\nassert solution(input()) == \"5 5\"\nassert solution(input()) == \"5 5\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= m <= 10^5\n1 <= a_i, b_i <= 10^9\n1 <= x_1, x_2, y_1, y_2 <= 2^9\n\n\"\"\""
    },
    {
        "number": 3848,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"once again\"\nassert solution(stdin) == \"tokitsukaze\"\nassert solution(stdin) == \"quailty\"\nassert solution(stdin) == \"once again\"\nassert solution(stdin) == \"once again\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"50\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 6\"\nassert solution(stdin) == \"5 5\"\nassert solution(stdin) == \"1 3\"\nassert solution(stdin) == \"5 5\"\nassert solution(stdin) == \"1 1\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 3\"\nassert solution(stdin) == \"2 3 4\"\nassert solution(stdin) == \"2 3 4 5\"\nassert solution(stdin) == \"2 3 4 5 6\"\nassert solution(stdin) == \"2 3 4 5 6 7\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 2\n"
    },
    {
        "number": 3856,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '180'\n"
    },
    {
        "number": 3857,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"4\"\n\nassert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3858,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(inp) == \"5\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n\"\"\""
    },
    {
        "number": 3860,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\nassert solution(stdin) == \"4\"\n\nassert solution(stdin) == \"4\"\n\nassert solution(stdin) == \"4\"\n\nassert solution(stdin) == \"4\""
    },
    {
        "number": 3861,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\n-----Constraints-----\n1 <= n <= 10^5\n\nTime Limit: 1 sec\n\nSample Input\n\n2\n4 2\n\nSample Output\n\n32\n\nExplanation\n\nThe largest number in the array that is not a perfect square is 2.\n\"\"\""
    },
    {
        "number": 3862,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3863,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"499122178\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\nassert solution(stdin) == 6669\nassert solution(stdin) == -1\nassert solution(stdin) == 6669\nassert solution(stdin) == -1\n"
    },
    {
        "number": 3866,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\n\n-----Constraints-----\n\n1 <= n <= 10^5\n\n-----Time Limit-----\n\nO(n)\n\n\n-----Submissions-----\n\nApproach:\n\nUse a dictionary to store the permutations of length n.\n\nFor each permutation, check if it is a valid permutation triple.\n\nIf it is not, return -1.\n\nIf it is, return the triple.\n\nTime complexity: O(n^2)\n\nSpace complexity: O(n)\n\n\"\"\"\n\nclass Solution:\n    def luckyNumbers(self, n: int) -> str:\n        \n        d = {}\n        \n        for i in range(1, n+1):\n            d[i] = 0\n            \n        for i in range(1, n+1):\n            for j in range(1, n+1):\n                if i + j == n:\n                    d[i] += 1\n                    \n        for i in range(1, n+1):\n            if d[i] == 0:\n                return str(i)\n        \n        return -1\n"
    },
    {
        "number": 3867,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n\n\"\"\""
    },
    {
        "number": 3868,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"24500\"\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= m <= 10^5\n1 <= k <= 10^6\n\n1 <= d_{i} <= 10^6\n1 <= f_{i} <= n\n1 <= t_{i} <= n\n1 <= c_{i} <= 10^6\n\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 3869,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.828427125'\nassert solution(stdin) == '19.668384925'\nassert solution(stdin) == '0.0'\nassert solution(stdin) == '0.0'\nassert solution(stdin) == '0.0'\n"
    },
    {
        "number": 3870,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3000\"\nassert solution(stdin) == \"2000\"\nassert solution(stdin) == \"1000\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\nassert solution(input) == \"2\"\nassert solution(input) == \"2\"\nassert solution(input) == \"2\"\nassert solution(input) == \"2\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n\n\"\"\""
    },
    {
        "number": 3878,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 3\"\nassert solution(stdin) == \"1 4\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n\nassert solution(stdin) == \"No\"\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Time Limit-----\n1 second\n\n-----Memory Limit-----\n256 megabytes\n\n-----Algorithm Execution-----\nTime Limit: 1 second\nMemory Limit: 256 megabytes\n\n-----Constraints for Time Limit and Memory Limit-----\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Constraints for Time Limit and Memory Limit-----\n1 <= n <= 10^5\n1 <= a_i <= 10^9\n\n-----Sample Tests-----\nSample Input 1:\n\n4\n75 150 75 50\n\nSample Output 1:\n\nYes\n\nSample Input 2:\n\n3\n100 150 250\n\nSample Output 2:\n\nNo\n\n-----Sample Tests-----\nSample Input 3:\n\n3\n100 150 250\n\nSample Output 3:\n\nNo\n\n-----Sample Tests-----\n'''"
    },
    {
        "number": 3880,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"100\"\nassert solution(stdin) == \"150\"\nassert solution(stdin) == \"150\"\nassert solution(stdin) == \"150\"\nassert solution(stdin) == \"150\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"10\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.000000000000\"\nassert solution(stdin) == \"1.250000000000\"\nassert solution(stdin) == \"1.000000000000\"\nassert solution(stdin) == \"1.000000000000\"\nassert solution(stdin) == \"1.000000000000\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"85.4800000000\"\n\nassert solution(stdin) == \"85.4800000000\"\n\nassert solution(stdin) == \"85.4800000000\"\n\nassert solution(stdin) == \"85.4800000000\"\n\nassert solution(stdin) == \"85.4800000000\""
    },
    {
        "number": 3885,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\n\n-----Constraints-----\n1 <= n <= 10^5\n\nTime Limit: 1 sec\n\nSample Input\n\n2\n\nSample Output\n\n0\n\nExplanation\n\nIn this example, we can buy a ticket between the schools that costs $(1 + 2) \\operatorname{mod}(2 + 1) = 0$.\n\n\"\"\""
    },
    {
        "number": 3886,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"What are you doing while sending \" + \"What are you doing at the end of the world? Are you busy? Will you save us?\"\n\nassert solution(stdin) == \"What are you doing while sending \" + \"What are you doing at the end of the world? Are you busy? Will you send \" + \"What are you doing at the end of the world? Are you busy? Will you save us?\"\n\nassert solution(stdin) == \"What are you doing while sending \" + \"What are you doing at the end of the world? Are you busy? Will you send \" + \"What are you doing at the end of the world? Are you busy? Will you save us?\"\n\nassert solution(stdin) == \"What are you doing while sending \" + \"What are you doing at the end of the world? Are you busy? Will you send \" + \"What are you doing at the end of the world? Are you busy? Will you save us?\"\n\nassert solution(stdin) == \"What are you doing while sending \" + \"What are you doing at the end of the world? Are you busy? Will you send \" + \"What are you doing at the end of the world? Are you busy? Will you save us?\""
    },
    {
        "number": 3887,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Possible\"\nassert solution(stdin) == \"Impossible\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"7 4 5\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '1728'\n"
    },
    {
        "number": 3891,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 1\"\n\n\"\"\""
    },
    {
        "number": 3892,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10 9 10 10 9\"\n\nassert solution(stdin) == \"5 6\"\n\nassert solution(stdin) == \"5 6\"\n\nassert solution(stdin) == \"5 6\"\n\nassert solution(stdin) == \"5 6\""
    },
    {
        "number": 3893,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Kevin\"\nassert solution(stdin) == \"Nicky\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 6\n\n\"\"\""
    },
    {
        "number": 3897,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9000\"\nassert solution(stdin) == \"1160\"\nassert solution(stdin) == \"9000\"\nassert solution(stdin) == \"1160\"\nassert solution(stdin) == \"9000\"\n"
    },
    {
        "number": 3900,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 6\n"
    },
    {
        "number": 3901,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(5, [2, 2, 3, 4, 6]) == -1\nassert solution(4, [2, 4, 6, 8]) == 4\nassert solution(3, [2, 6, 9]) == -1\nassert solution(1, [1, 1, 1, 1, 1]) == 1\nassert solution(0, [1, 1, 1, 1, 1]) == 1\n"
    },
    {
        "number": 3902,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\nassert solution(stdin) == 0\n"
    },
    {
        "number": 3903,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 3904,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 6\nassert solution(stdin) == -1\n\n-----Constraints-----\n1 <= n <= 10^6\n\n-----Time Limit-----\n1 second\n\n-----Space Limit-----\n1 megabyte\n\n-----Alternatives-----\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives\n\nAlternatives"
    },
    {
        "number": 3905,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 8\n\n-----Constraints-----\n\n1 <= stdin.length <= 10^5\n1 <= n, m <= 100\n\n\"\"\""
    },
    {
        "number": 3907,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= m <= 10^5\n\n1 <= q_{i}, w_{i} <= 10^5\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i} = 1, w_{i} = 1\n\nq_{i}"
    },
    {
        "number": 3908,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 6\n\nassert solution(stdin) == 1\n\nassert solution(stdin) == 2\n\nassert solution(stdin) == 2\n\nassert solution(stdin) == 2"
    },
    {
        "number": 3909,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == 2\n"
    },
    {
        "number": 3910,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"2 1\"\nassert solution(stdin) == \"2 2\"\nassert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 2\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\""
    },
    {
        "number": 3912,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\nassert solution(stdin) == 2\nassert solution(stdin) == 2\nassert solution(stdin) == 2\nassert solution(stdin) == 2\n"
    },
    {
        "number": 3913,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"11\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 6\n\n\"\"\""
    },
    {
        "number": 3921,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 4\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= a_1, a_2,..., a_{n} <= 10^5\n\n-----Time Limit-----\nO(n)\n\n-----Space Limit-----\nO(1)\n\n-----Elements-----\nThe input consists of two lines. The first line contains a single integer n (1 \u2264 n \u2264 10^5) \u2014 the number of good integers. The second line contains a single-space separated list of good integers a_1, a_2,..., a_{n} in strictly increasing order (1 \u2264 a_{i} \u2264 10^5;\u00a0a_{i} < a_{i} + 1).\n\n\n\n-----Submissions-----\n[Time limit] 4 seconds (py3)\n[Time limit] 2 seconds (py2)\n\n[Submissions]\n[Time limit] 4 seconds (py3)\n[Time limit] 2 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Accepted]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds (py2)\n\n[Submissions]\n[Time limit] 0 seconds (py3)\n[Time limit] 0 seconds"
    },
    {
        "number": 3922,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"SURGERY COMPLETE\"\nassert solution(stdin) == \"SURGERY FAILED\"\n\n\"\"\""
    },
    {
        "number": 3923,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '6 5 8 3 4 1 9 2 7'\nassert solution(stdin) == '1 2 3'\nassert solution(stdin) == '6 5 8 3 4 1 9 2 7'\nassert solution(stdin) == '6 5 8 3 4 1 9 2 7'\nassert solution(stdin) == '6 5 8 3 4 1 9 2 7'\n"
    },
    {
        "number": 3924,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 5\n\n-----Constraints-----\n\n1 <= stdin.length <= 10^5\n\n0 <= s.length <= 10^5\n\ns contains only lowercase English letters 'b' and 'w'.\n\n\"\"\""
    },
    {
        "number": 3926,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n\n\"\"\""
    },
    {
        "number": 3927,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"12\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 8\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 2\n2 2 2 2\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3 -6 -3 12\n\nSample Output\n\n3\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n4 -3\n3"
    },
    {
        "number": 3931,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"11\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-15'\n"
    },
    {
        "number": 3934,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"7\") == \"YES\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\nassert solution(stdin) == 1\nassert solution(stdin) == 2\nassert solution(stdin) == 3\nassert solution(stdin) == 4\n"
    },
    {
        "number": 3936,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"6\""
    },
    {
        "number": 3937,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nSample 3. The first row of table G starts from sequence {1, 2, 1, 2, 5, 2, 1, 2, 1, 10}. As you can see, elements from fifth to ninth coincide with sequence a.\n\nSample 4. This time the width of table G equals 8. Sequence a doesn't occur there.\n"
    },
    {
        "number": 3938,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\n\n-----Constraints-----\n\n1 <= t <= 10^4\n1 <= n <= 10^9\n1 <= k <= 10^9\n\n\"\"\""
    },
    {
        "number": 3940,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\nassert solution(stdin) == -1\nassert solution(stdin) == -1\nassert solution(stdin) == -1\nassert solution(stdin) == -1\n"
    },
    {
        "number": 3943,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\nassert solution(stdin) == 16\nassert solution(stdin) == -16\nassert solution(stdin) == -1\nassert solution(stdin) == 16\n"
    },
    {
        "number": 3944,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"17\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 2 2\"\nassert solution(stdin) == \"2 2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"332748119\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 11\n"
    },
    {
        "number": 3948,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\nSpace Limit: 1 sec\n\n-----Submissions-----\n\nSample Input\n\n2\n1 4\n2 4\n3 4\n4 13\n10 5\n11 5\n12 5\n14 5\n5 13\n6 7\n8 6\n13 6\n9 6\n\nSample Output\n\nYes\n\nExplanation\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step.\n\nThe hedgehogs are created on last step"
    },
    {
        "number": 3949,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\""
    },
    {
        "number": 3951,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"42\"\nassert solution(stdin) == \"42\"\nassert solution(stdin) == \"42\"\nassert solution(stdin) == \"42\"\nassert solution(stdin) == \"42\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= x_i, y_i <= 10^9\n\n-----Time Limit: 1 sec\n-----Memory Limit: 1GB\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n"
    },
    {
        "number": 3953,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\n"
    },
    {
        "number": 3954,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 32\n"
    },
    {
        "number": 3955,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"79\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"7\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\nassert solution(stdin) == 3\nassert solution(stdin) == -1\nassert solution(stdin) == -1\nassert solution(stdin) == -1\n"
    },
    {
        "number": 3959,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\n-----Constraints-----\n\n1 \u2264 n \u2264 10^5\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l, r \u2264 n\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_i \u2264 10^9\n\n1 \u2264 l \u2264 r\n\n1 \u2264 a_1, a"
    },
    {
        "number": 3961,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 62\n"
    },
    {
        "number": 3962,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"17\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n"
    },
    {
        "number": 3965,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\"\n\nassert solution(stdin) == \"NO\""
    },
    {
        "number": 3966,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 26\n"
    },
    {
        "number": 3967,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 32\n\n-----Constraints-----\n\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\nSpace Limit: 1M\n\n-----Submissions-----\n\nSubmissions\n\nTime Limit: 1 sec\nSpace Limit: 1M\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n"
    },
    {
        "number": 3968,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 4 5 6 7 8 9\"\nassert solution(stdin) == \"1 2 4\"\nassert solution(stdin) == \"1 2 3\"\nassert solution(stdin) == \"1 2 3 4\"\nassert solution(stdin) == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= k <= 10^9\n\nTime Limit: 1 sec\n\nSample Input\n\n6 2\n2 3 6 5 4 10\n\nSample Output\n\n3\n\nExplanation\n\nThe largest k-multiple free subset is {4, 5, 6}.\n\n\"\"\""
    },
    {
        "number": 3971,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n\n-----Constraints-----\n\n1 <= n <= 10^5\n\n1 <= a_1, a_2,..., a_{n} <= 10^5\n\n-----Time Limit-----\n\nO(n)\n\n\n-----Space Limit-----\n\nO(n)\n\n\n-----Submissions-----\n\n[execution time limit] 4 seconds (py3)\n\n[input] string stdin\n\nA sequence of integers a_1, a_2,..., a_{n}\n\nGuaranteed constraints:\n1 \u2264 n \u2264 10^5\n\n[output] string\n\nThe maximum number of points that Alex can earn.\n\n[constraints]\n1 \u2264 a_1, a_2,..., a_{n} \u2264 10^5\n\n[side-effects]\n\n[implementation]"
    },
    {
        "number": 3972,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n\nInput\n+-+-+\n\nOutput\n1\n\nInput\n---\nOutput\n3\n"
    },
    {
        "number": 3975,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10110\"\n\n\"\"\""
    },
    {
        "number": 3976,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 2 3\"\nassert solution(stdin) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245 245"
    },
    {
        "number": 3977,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(4) == 20\nassert solution(5) == 0\nassert solution(6) == 1\nassert solution(7) == 2\nassert solution(8) == 3\n"
    },
    {
        "number": 3981,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\nassert solution(stdin) == \"NO\"\n\n-----Constraints-----\n1 <= n <= 10^5\n1 <= m <= 10^5\n0 <= x_i, y_i <= 10^8\n\n-----Time Limit: 1 sec (py3)-----\n\nSample Input\n\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n\nSample Output\n\nYES\n\nExplanation\n\nThe supersonic rocket is safe if and only if after you manipulate the engines, destroying any power source and then power the engine, the power field generated won't be changed (comparing to the situation where no power source erased).\n\nThe power field of the first engine is always the solid triangle $(0, 0)$, $(-2, 0)$, $(0, -2)$.\n\nThe power field of the second engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the third engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the fourth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the fifth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the sixth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the seventh engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the eighth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the ninth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the tenth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the eleventh engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the twelfth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the thirteenth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the fourteenth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the fifteenth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the seventeenth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the eighteenth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the nineteenth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the twentieth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the twentieth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the twentieth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the twentieth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the twentieth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the twentieth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the twentieth engine is always $(-2, 0)$, $(0, 0)$, $(0, -2)$.\n\nThe power field of the twentieth"
    },
    {
        "number": 3982,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"11\"\nassert solution(stdin) == \"111\"\nassert solution(stdin) == \"TT\"\nassert solution(stdin) == \"11\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input()) == \"First\"\nassert solution(input()) == \"Second\"\nassert solution(input()) == \"First\"\nassert solution(input()) == \"Second\"\nassert solution(input()) == \"First\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Mike\"\nassert solution(stdin) == \"Mike\"\nassert solution(stdin) == \"Mike\"\nassert solution(stdin) == \"Mike\"\nassert solution(stdin) == \"Mike\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\n"
    },
    {
        "number": 3987,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"9\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"++-\", \"incorrect solution\"\nassert solution(stdin) == \"++\", \"incorrect solution\"\nassert solution(stdin) == \"++-\", \"incorrect solution\"\nassert solution(stdin) == \"--\", \"incorrect solution\"\nassert solution(stdin) == \"--\", \"incorrect solution\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"18690\"\nassert solution(stdin) == \"1869\"\nassert solution(stdin) == \"1869\"\nassert solution(stdin) == \"1869\"\nassert solution(stdin) == \"1869\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\n"
    },
    {
        "number": 3993,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3994,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\n-----Constraints-----\n\n1 <= n <= 100\n1 <= s.length <= 100\ns contains only digits.\n\n\"\"\""
    },
    {
        "number": 3995,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"01010\"\nassert solution(stdin) == \"1011011\"\nassert solution(stdin) == \"1011011\"\nassert solution(stdin) == \"1011011\"\nassert solution(stdin) == \"1011011\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1/2\"\nassert solution(stdin) == \"0/1\"\nassert solution(stdin) == \"0/1\"\nassert solution(stdin) == \"0/1\"\nassert solution(stdin) == \"0/1\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 0 1 0 0\"\n\n\"\"\""
    },
    {
        "number": 3998,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "350M",
        "pass": 0,
        "answer": "assert solution(input) == \"1\""
    }
]