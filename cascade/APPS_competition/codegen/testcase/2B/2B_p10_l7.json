[
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '5'\nassert solution('8') == '9'\nassert solution('4') == '5'\nassert solution('6') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == \"5\"\nassert solution('8') == \"9\"\nassert solution('4') == \"5\"\nassert solution('6') == \"5\"\nassert solution('3') == \"2\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"5\"\nassert solution(sample_input_2) == \"9\"\nassert solution(sample_input_3) == \"36\"\nassert solution(sample_input_4) == \"5\"\nassert solution(sample_input_5) == \"5\"\nprint(\"all test cases passed\")\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"\n\"\"\"\n\nfrom math import factorial\n\nn = int(input())\nbracket = input()\nstack = []\n\nfor i in bracket:\n    if i == \"(\":\n        stack.append(i)\n    elif i == \")\":\n        if stack[-1]!= \"(\":\n            stack.append(i)\n        else:\n            stack.pop()\n\nans = 0\n\nfor i in range(len(stack)):\n    if i % 2 == 0:\n        ans += factorial(i+1)\n    else:\n        ans -= factorial(i+1)\n\nprint(ans % 1000000007)"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '5'\nassert solution('''\n3\n( ) )\n''') == '5'\nassert solution('''\n6\n( ( ) ) )\n''') == '5'\nassert solution('''\n2\n( ) )\n''') == '5'\nassert solution('''\n10\n
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"8\") == \"9\"\nassert solution(\"6\") == \"5\"\nassert solution(\"4\") == \"5\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2 3\n''') == '5'\nassert solution('''8\n( 2 ( 2 1 ) ) 3\n''') == '9'\nassert solution('''4\n( 12 3 )\n''') == '36'\nassert solution('''6\n( ( 2 3 ) )\n''') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1\n2 3\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n2\n2 1\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n8\n( 2 ( 2 1 ) ) 3\n\"\"\"\n) == \"9\"\n\nassert solution(\n\"\"\"\n4\n( 12 3 )\n\"\"\"\n) == \"36\"\n\nassert solution(\n\"\"\"\n6\n( ( 2 3 ) )\n\"\"\"\n) == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2 3\n''') == '5'\nassert solution('''\n8\n( 2 ( 2 1 ) ) 3\n''') == '9'\nassert solution('''\n4\n( 12 3 )\n''') == '36'\nassert solution('''\n6\n( 2 ) ( 3 )\n''') == '5'\nassert solution('''\n6\n( ( 2 3 ) )\n''') == '5'\n'''"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0\n''') == '0'\nassert solution('''\n009990001\n''') == '3'\nassert solution('''\n29998\n''') == '5'\nassert solution('''\n610\n''') == '4'\nassert solution('''\n981\n''') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('610') == '4'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('981') == '2'"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(0) == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('610') == '4'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('981') == '2'\nassert solution('6969') == '1'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\nprint('all passed')\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0\n''') == '0'\nassert solution('''\n009990001\n''') == '3'\nassert solution('''\n29998\n''') == '5'\nassert solution('''\n610\n''') == '4'\nassert solution('''\n981\n''') == '2'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'insufficient service'\nassert solution('2') == 'insufficient service'\nassert solution('3') =='seems legit'\nassert solution('4') == 'insufficient service'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == \"tampered odometer\"\nassert solution(s) == \"insufficient service\"\nassert solution(s) == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'insufficient service'\nassert solution('3') == 'tampered odometer'\nassert solution('4') =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') =='seems legit'\nassert solution('2') == 'insufficient service'\nassert solution('4') == 'tampered odometer'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') =='seems legit'\nassert solution('2') == 'tampered odometer'\nassert solution('1') == 'insufficient service'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"seems legit\"\nassert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"tampered odometer\"\nassert solution(\"\"\"\n2\n2017 11 0\n2018 1 1000\n\"\"\") == \"insufficient service\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'insufficient service'\nassert solution('2') == 'tampered odometer'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\"\n) == \"seems legit\"\nassert solution(\n    \"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\"\n) == \"tampered odometer\"\nassert solution(\n    \"2\\n2017 11 0\\n2018 1 1000\\n\"\n) == \"insufficient service\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2017 4 0\\n2017 8 12000\\n2018 8 42000') =='seems legit'\nassert solution('1\\n2017 4 0\\n2017 8 12000\\n2018 8 42000') == 'tampered odometer'\nassert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001') == 'insufficient service'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n0 2 3\n0 1\n1\nSample Input 5:\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\nSample Output 5:\n3\n''') == '3'"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2\\n0 2 3') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4') == '2'\nassert solution('10\\n1 2\\n0 2 3\\n1 4\\n0 1\\n1 5\\n1 6\\n0 3\\n0 4\\n0 5') == '9'\nassert solution('12\\n1 2\\n0 2 3\\n1 4\\n0 1\\n1 5\\n1 6\\n0 3\\n0 4\\n0 5') == '8'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 4:\n4\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2\n0 2 3\n0 1\n1\nSample Input 5:\n6\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\nSample Output 5:\n2\n''') == '4'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2\n0 2 3\n0 1\n1\nSample Input 5:\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\nSample Output 5:\n2\n\n''') == '4'\n\nassert solution('''\n4\n1 2\n0 2 3\n0 1\n1\nSample Input 6:\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\nSample Output 6:\n4\n''') == '3'\n\nassert solution('''\n6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\nSample Input 7:\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\nSample Output 7:\n2\n''') == '2'\n\nassert solution('''\n10\n2 3 5\n0 1 4 2\n1 5\n0 2\n1 7\n0 8\n0 9\n0 2\n1 4\n5 3\n4 5\nSample Input 8:\n7\n3 4 5\n0 1 3\n0 1 2\n0 1 3\n0 1 2\n0 1 3\n1 4\nSample Output 8:\n2\n''') == '1'\n\nassert solution('''\n3\n1 2\n0 1\nSample Input 9:\n4\n2 3 4\n2 3 4\n0 1\n0 1\nSample Output 9:\n2\n''') == '3'"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\"\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2\n0 2 3\n0 1\n1\n''') == '3'\nassert solution('''\n6\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\n1\n''') == '2'\nassert solution('''\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\n1\n''') == '4'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2\\n0 2 3') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == solution.__doc__"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\n\nassert solution('''\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\n\nassert solution('''\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == '3'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\nBLUE 1 5000\nRED 5001 10000\n''') == \"2\"\n\nassert solution('''\n3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == \"3\"\n\nassert solution('''\n4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == \"IMPOSSIBLE\"\n\nassert solution('''\n5\nBLUE 1 4000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 700 100\n''') == \"IMPOSSIBLE\"\n\nassert solution('''\n5\nBLUE 1 4000\nRED 5001 1000\nORANGE 4000 2000\nGREEN 700 100\n''') == \"2\""
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == 'IMPOSSIBLE'"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nORANGE 4000 8000') == '3'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000') == '3'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution() == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''\n2\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''\n3\nBLUE 1 6000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == '3'\nassert solution('''\n4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\nassert solution('''\n5\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\nWHITE 70000 5000\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\\nBLUE 1 5000\\nRED 5001 10000\\n\"\n) == \"2\"\nassert solution(\n    \"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\"\n) == \"3\"\nassert solution(\n    \"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\"\n) == \"IMPOSSIBLE\"\nassert solution(\n    \"5\\nBLUE 1 4000\\nRED 4002 10000\\nORANGE 4000 8000\\nGREEN 700 2\\n\"\n) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('DOODOO') == 'DOO'\nassert solution('POPPOP') == 'POPP'\nassert solution('BABBABABBABBA') == 'BABABABBA'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"POP\") == \"P\"\nassert solution(\"POPPOP\") == \"P\"\nassert solution(\"POPPOPPOP\") == \"P\"\nassert solution(\"POPPOPPOPPOP\") == \"P\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ROCKSCAPE\") == \"6\"\nassert solution(\"POPPOP\") == \"5\"\nassert solution(\"POINTLESS\") == \"4\""
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A') == 1\nassert solution('AAAA') == 6\nassert solution('AAAB') == 4\nassert solution('AAA') == 1\nassert solution('AAAAAA') == 6\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('PRINT') == '1'\nassert solution('PRINTPRINT') == '2'\nassert solution
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nD 1\nD 2\nE\nD 3\nD 1\nE\n''') == '0'\nassert solution('''\nD 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''\nD 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''\nI 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''D 1\nD 2\nE\nD 3\nD 1\nE''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''I 1 X\nD 1\nE\nE''') == '0'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE''') == '0'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE''') == '1'\n\nprint('Done')\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('D 1\\nD 2\\nE') == '0'\nassert solution('D 2\\nD 1\\nE') == '1'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"D 1\") == \"0\"\nassert solution(\"D 2\") == \"1\"\nassert solution(\"E\") == \"0\"\nassert solution(\"D 3\") == \"1\"\nassert solution(\"D 1\") == \"0\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''D 1\nD 2\nE\nD 3\nD 1\nE\nD 1\nD 2\nE''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\nD 1\nD 2\nE\nD 3\nD 1\nE\n\"\"\") == \"0\"\nassert solution(\"\"\"\nD 2\nD 1\nE\nD 1\nD 2\nE\n\"\"\") == \"1\"\nassert solution(\"\"\"\nD 2\nD 1\nE\nD 1\nD 2\nE\n\"\"\") == \"0\"\nassert solution(\"\"\"\nI 1 X\nD 1\nE\nE\n\"\"\") == \"0\"\nassert solution(\"\"\"\nI 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"D 1\nD 2\nE\nD 3\nD 1\nE\nD 1\nD 2\nE\nD 1\nE\"\"\") == \"0\"\nassert solution(\"\"\"D 2\nD 1\nE\nD 1\nD 2\nE\nD 1\nE\"\"\") == \"1\"\nassert solution(\"\"\"I 1 X\nD 1\nE\nE\"\"\") == \"0\"\nassert solution(\"\"\"I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\nI 14 A\nI 15 B\"\"\") == \"0\"\nassert solution(\"\"\"I 14 B\nI 15 B\nE\nI 14 A\nI 15 B\"\"\") == \"1\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('D 1\\nD 2\\nE') == '0'\nassert solution('D 2\\nD 1\\nE') == '1'\nassert solution('D 3\\nD 1\\nE') == '1'\nassert solution('D 1\\nE') == '0'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"300\""
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 0 1 0 0 0''') == '300'\nassert solution('''5 0 1 0 1 0''') == '1900'\nassert solution('''6 0 1 1 0 0''') == '2300'\nassert solution('''10 399 0 0 0 0''') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 0 1 0 1 0\nSample Input 2:\n6 0 1 1 0 0\nSample Output 2:\n1900''') == '1900'\nassert solution('''4 0 1 0 0 0\nSample Input 1:\n4 0 1 0 0 0\nSample Output 1:\n300''') == '300'"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 0 1 0 1 0') == '1900'\nassert solution('4 0 1 0 0 0') == '300'\nassert solution('6 0 1 1 0 0') == '2300'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\nprint(solution(input()))\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 0 1 0 0 0''') == '300'\nassert solution('''5 0 1 0 1 0''') == '1900'\nassert solution('''6 0 1 1 0 0''') == '2300'\nassert solution('''10 399 0 0 0 0''') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nassert solution('5 0 1 0 3 0') == '3'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10') == '2'\nassert solution('1 5') == '2'\nassert solution('1 4') == '2'"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 10') == '2'\nassert solution('2 10') == '2'\nassert solution('3 10') == '3'\nassert solution('4 10') == '3'"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12\nSample Output 2:\n2\n\nSample Input 4:\n2 10\n1 5\n4 1\nSample Output 4:\n2\n''') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n4 1\\n2 4') == '2'\nassert solution('2\\n3 3\\n1 3') == '3'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"2\"\nassert solution(\"2 10\") == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10') == '2'\nassert solution('1 5') == '2'\nassert solution('1 4') == '2'\n\"\"\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 10\") == \"2\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"3 10\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"1 10\n    1 13\n    \"\"\"\n    ) == \"2\"\nassert solution(\n    \"\"\"2 10\n    1 5\n    1 4\n    \"\"\"\n    ) == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 10') == '2'\nassert solution('2 10') == '2'\nassert solution('2 10') == '2'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n''') == '28.9'\nprint(solution('''5\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n'''))"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'IMPOSSIBLE'\nassert solution('2') == '28.970562748'\nassert solution('1') == '28'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"28\"\nassert solution(\"3\") == \"36\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\nassert solution(\"100\") == \"IMPOSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"28.970562748\"\nassert solution() == \"IMPOSSIBLE\"\nprint(solution(input))\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28.970562748\"\nassert solution(\"5\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"32\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '36.928571428571429'\nassert solution('8') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n''') == '28.970562748', 'First'\nassert solution('''\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475', 'Second'\nassert solution('''\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '32', 'Third'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '28.970562748'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '28.970562748'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"28.9729001587\""
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''1\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''2\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('1') == '1'"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''\n3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n''') == '1'\n'''"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution(\n    \"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n\"\n) == \"3\"\nassert solution(\n    \"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\"\n) == \"1\"\nassert solution(\n    \"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\nSample Output 4:1\"\n) == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\") == \"1\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\") == \"1\"\nassert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\") == \"1\"\nassert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\") == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '100'\nassert solution('1234321') == '94708'\nassert solution('1234322') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12223') == '94708'\nassert solution('1232321') == '94708'\nassert solution('12321') == '-1'\nassert solution('55') == '55'\nassert solution('101') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"94708\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '10'\nassert solution('12345') == '-1'\nassert solution('12345678910') == '9708'\nassert solution('12345678910') == '9708'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1', 'Should return the number of positive hill numbers less than or equal to 5.'\nassert solution('10') == '10', 'Should return the number of positive hill numbers less than or equal to 10.'\nassert solution('15') == '4', 'Should return the number of positive hill numbers less than or equal to 15.'\nassert solution('12321') == '2', 'Should return the number of positive hill numbers less than or equal to 12321.'\nassert solution('1232321') == '3', 'Should return the number of positive hill numbers less than or equal to 1232321.'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n''') == '1'\n\nassert solution('''\n2\n''') == '1'\n\nassert solution('''\n123\n''') == '2'\n\nassert solution('''\n11\n''') == '1'\n\nassert solution('''\n1233321\n''') == '95008'"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1234321') == '94708'\nassert solution('10') == '10'\nassert solution('99') == '-1'\nassert solution('77') == '-1'\nassert solution('0000') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12223\") == \"94708\"\nassert solution(\"1232321\") == \"94708\"\nassert solution(\"12223\") == \"94708\"\nassert solution(\"1232321\") == \"94708\"\nassert solution(\"12312\") == \"-1\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '-1'\nassert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '94708'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\nprint(solution(input()))"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 0 0 0 3\n''') == '6'\n\nassert solution('''\n1 2 0 0 5\n''') == '2'\n\nassert solution('''\n1 2 0 0 4\n''') == '4'\n\nassert solution('''\n1 2 0 0 6\n''') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 0 0 0 3\n    1 2 0 0 5\n    1 2 0 0 4\n    1 2 0 0 6''') == '6'\nassert solution('''1 2 0 0 5\n    1 2 0 0 4\n    1 2 0 0 6''') == '2'\nassert solution('''1 2 0 0 6\n    1 2 0 0 4\n    1 2 0 0 5''') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 6') == '0'\nassert solution('3 1 0 0 0') == '5'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0\"\nassert solution(\"1 2 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 6\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '6'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"3 0 0 0 3\"\"\") == \"6\"\nassert solution(\n    \"\"\"1 2 0 0 5\"\"\") == \"2\"\nassert solution(\n    \"\"\"1 2 0 0 4\"\"\") == \"4\"\nassert solution(\n    \"\"\"1 2 0 0 6\"\"\") == \"0\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nprint('ALL TESTS PASSED')"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\""
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 2\n2 1\n''') == '1'\n\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '1'\n\nassert solution('''\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 5') == '0'\n\nassert solution('5 5') == '2'"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 5') == '0'\nassert solution('3 3') == '1'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n1 2\n2 1\n''') == '1'\n\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '1'\n\nassert solution('''\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '0'\n\nassert solution('''\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 2\n2 1\n''') == '1'\n\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '1'\n\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 4\n''') == '0'"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"0\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1'\nassert solution('2 2') == '1'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"0\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 2\n2 1\n''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '0'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == '2'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\n2\n''') == '2'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 0 3') == '11'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('3 3 1 2') == '2'\nassert solution('2 1 0 1') == '2'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4 5 0 3\\n\"\n    \"0 1 1\\n\"\n    \"1 2 2\\n\"\n    \"2 0 4\\n\"\n    \"2 3 1\\n\"\n    \"2 3 3\\n\"\n) == \"infinity\"\nassert solution(\n    \"5 5 0 4\\n\"\n    \"0 1 1\\n\"\n    \"1 0 1\\n\"\n    \"1 2 1\\n\"\n    \"2 3 1\\n\"\n    \"3 0 1\\n\"\n    \"2 4 1\\n\"\n) == \"2\"\nassert solution(\n    \"2 1 0 1\\n\"\n    \"0 1 2\\n\"\n) == \"infinity\"\nassert solution(\n    \"3 3 1 2\\n\"\n    \"0 1 1\\n\"\n    \"1 0 1\\n\"\n    \"1 2 1\\n\"\n) == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3''') == \"11\"\nassert solution('''5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1''') == \"infinity\"\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == \"2\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 0 3') == '11'\nassert solution('4 5 0 3') == '11'\nassert solution('5 5 0 3') == 'infinity'\nassert solution('5 5 0 4') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n2 0 4\") == \"2\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5 0 3') == '11'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('2 1 0 1') == '2'\nassert solution('3 3 1 2') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 0 3') == '11'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('5 5 0 5') == 'infinity'\nassert solution('5 5 0 5') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 0 4\n2 3 1\n2 3 3\n''') == 'infinity'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 1\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\") == \"12\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\n\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0'\n\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '18'\n\nassert solution('''\n3 2 1 2 3\n1 1\n2 2 3\n''') == '18'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"12\"\n\nimport itertools"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '18'\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '0'\nassert solution('''\n3 1 2 3\n2 1 2\n0\n''') == '12'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1 2\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 3 1 1\") == \"12\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\n\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0'\n\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '6'\n\nassert solution('''\n3 2 1 2\n1 1\n2 2 3\n''') == '0'\n\nassert solution('''\n2 2 2 2\n1 1\n2 3 3\n''') == '6'"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1 2\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\") == \"18\"\nassert solution(\"2 2 3 3\") == \"6\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2 1 2 1') == '6'\nassert solution('3 3 1 1') == '0'\nassert solution('3 2 2 3') == '18'\nassert solution('3 1 2 3') == '0'\nassert solution('2 2 2 2') == '0'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 2 1 2 1\n2 1 2\n2 3 4\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n3 3 1 1\n1 1\n2 2 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 2 2 3\n1 1\n2 2 3\n\"\"\") == \"18\"\n\nassert solution(\"\"\"\n3 1 2 3\n2 1 2\n0\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n2 1 2\n2 1\n\"\"\") == \"0\""
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2 1 2 1\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\") == \"18\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\nprint('\"Run\" is good. Great job!')\n---\n\nimport math\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1000000 1\n''') == '468559'\nassert solution('''\n1000000 5\n''') == '49401'\nassert solution('''\n1000000 16\n''') == '20'\nassert solution('''\n9000000000000000000 62\n''') == '1'\nassert solution('''\n1000000001000000000 9000000000000000000 62\n''') == '1'"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000000 1\") == '468559'\nassert solution(\"1000000 5\") == '49401'\nassert solution(\"1000000 16\") == '20'\nassert solution(\"9000000000000000000 62\") == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000000 1\") == '468559'\nassert solution(\"1000000 5\") == '49401'\nassert solution(\"1000000 16\") == '20'\nassert solution(\"9000000000000000000 62\") == '1'"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 9\n5 4 1\n''') == '1'\nassert solution('''\n4 13\n2 2 2 2\n''') == '3'\nassert solution('''\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\nassert solution('''\n3 9\n5 4 1\n''') == '3'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"1\"\nprint(solution(input_string))"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 9\n5 4 1\n''') == '1'\nassert solution('''\n4 13\n2 2 2 2\n''') == '3'\nassert solution('''\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\nassert solution('''\n30 90\n6 8 6 7 7 8 3 7 6 7 9 7 7 6 7 7 7 9 9 6 8 6 7 7 8 7 7 8\n''') == '10'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution() == '3'"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 9\n5 4 1\n''') == '1'\nassert solution('''\n4 13\n2 2 2 2\n''') == '3'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '0'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n1\n''') == '0'\nassert solution('''\n3\n4 7 8\n''') == '3'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"5\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 3 4 5 8\n''') == '5'\n\nassert solution('''\n10\n20 8 12 4 10 5 6 1\n''') == '17'\n\nassert solution('''\n20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 101"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('2 3 4 5 8') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(6) == '4'\nassert solution(149) == '17'\nassert solution(123476544) == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"1\\n\"\n    \"2\\n\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '-1'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nprint(solution(input()))\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'IMPOSSIBLE'\nassert solution(\n'''\nd 4\ncab\ncda\nccc\nbadca\n''') == 'adcb'\nassert solution(\n'''\nc 2\nabc\nbca\ncab\naca\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''d 4\ncab\ncda\nccc\nbadca''') == 'adcb'\nassert solution('''c 4\nabc\nbca\ncab\naca''') == 'IMPOSSIBLE'\nassert solution('''f 2\ndea\ncfb''') == 'AMBIGUOUS'\nassert solution('''f 2\ndea\ncfb\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"d 4\\n\"\n    \"cab\\n\"\n    \"cda\\n\"\n    \"ccc\\n\"\n    \"badca\\n\") == \"adcb\"\nassert solution(\n    \"f 2\\n\"\n    \"dea\\n\"\n    \"cfb\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('d 4') == 'adcb'\nassert solution('c 4') == 'impo'\nassert solution('c 2') == 'IMP'\nassert solution('f 2') == 'AMBI'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('d 4\\nabc\\nbca\\ncab\\naca\\n') == 'adcb'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abc abd\") == \"impossible\"\nassert solution(\"abc aba\") == \"impossible\"\nassert solution(\"abc abb\") == \"impossible\"\nassert solution(\"abc abc\") == \"acb\"\nassert solution(\"abc abc\") == \"acb\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('d 4\\nabc\\nbca\\ncab\\naca\\n') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca\\n') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nassert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('d 4\\n'\n                'cab\\n'\n                'cda\\n'\n                'ccc\\n'\n                'badca\\n') == 'adcb'\n\nassert solution('c 4\\n'\n                'abc\\n'\n                'bca\\n'\n                'cab\\n'\n                'aca\\n') == 'IMPOSSIBLE'\n\nassert solution('f 2\\n'\n                'dea\\n'\n                'cfb\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\nassert solution(\"2 4 1 0\") == \"3\""
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3 3 3\n5 5 5''') == '9'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\nprint('All tests passed')"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"2 3 3 3\n\"\"\") == \"9\"\nassert solution(r\"\"\"10 20 0 0\n\"\"\") == \"10\"\nassert solution(r\"\"\"100 20 543 12\n\"\"\") == \"164\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '9'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"9\"\nassert solution(stdin=\"2 3 3 3\") == \"9\"\nassert solution(stdin=\"10 20 0 0\") == \"10\"\nassert solution(stdin=\"100 20 543 12\") == \"164\"\nassert solution(stdin=\"1 0 1 1 1 1 0 1\") == \"6\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'yes'\nassert solution('''\n5 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\nSample Output 3:\nno\n''') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 4\") == \"yes\"\nassert solution(\"1 2 3\") == \"no\""
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"yes\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"no\""
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'yes', \"Count\"\nassert solution('''4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\nSample Output 3:\nno''') == 'no', \"Divide\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n''') == 'yes'\nassert solution('''\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'no'"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n''') == 'no'\n\nassert solution('''\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'yes'\n\nassert solution('''\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 3') == 'yes'\nassert solution('4 3 3') == 'no'\nassert solution('10 2 5') == 'yes'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"2 4 3\") == \"no\""
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"3 2 3\") == \"no\"\nassert solution(\"3 4 3\") == \"no\""
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0''') == 'yes'\nassert solution('''4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0''') == 'no'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('652526') == 4\nassert solution('12121131221') == 7\nassert solution('123456789') == 1"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('652526') == 4\nassert solution('12121131221') == 7\nassert solution('123456789') == 1"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\nassert solution('1234567890') == '1'\nassert solution('12345678901') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123456789\") == \"1\"\nassert solution(\"1234567890123456789012345678901234567890\") == \"1\"\nassert solution(\"1234567890123456789012345678901234567890abcdefghijklmnopqrstuvwxyz\") == \"2\"\nassert solution(\"2aab3bc4ac\") == \"2\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\n\nassert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\n\nassert solution('''\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3\n1\n1 2\n2 3\n1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n\"\"\") == \"24\"\nassert solution(\"\"\"\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n\"\"\") == \"800\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1') == '0\\n'\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n') == '24\\n'\nassert solution('6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n') == '800\\n'\n\n'''"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\nassert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == \"0\"\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == \"24\"\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 4\n4 5\n5 6''') == '0'\nassert solution('''5 5\n1 2\n3 4\n2 4\n3 5\n4 6''') == '25'\nassert solution('''10 10\n1 5\n6 2\n3 4\n4 5\n4 6\n5 7\n6 8\n7 9\n8 10\n9 10\n10 11''') == '1248'\nassert solution('''6 5\n1 4\n2 3\n3 2\n3 4\n2 5\n1 3''') == '0'\nassert solution('''5 5\n1 4\n1 2\n2 3\n2 4\n2 5\nSample Output 1:\n0\n\nSample Input 1:\n4 5\n1 2\n1 3\n2 3\n3 4\nSample Output 1:\n0\n\nSample Input 2:\n4 5\n1 3\n1 4\n3 2\n3 4\nSample Output 2:\n0\n\nSample Input 3:\n4 5\n1 3\n2 3\n3 4\n4 5\nSample Output 3:\n0\n\nSample Input 4:\n3 3\n1 2\n1 3\n2 3\nSample Output 4:\n0\n''') == '0'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"6 8\") == \"800\"\nassert solution(\"10 10\") == \"900\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\nprint('all test cases are passed!')"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\nSample Output 2:\n24\n''') == '24'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 4\") == \"24\"\nassert solution(\"6 8\") == \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '0'\nassert solution('6 6') == '18000'\nassert solution('10 10') == '100000'\nassert solution('15 15') == '180000'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 2 4\n''') == '1 4'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1 2 3 4 5'\nassert solution('4\\n1 3 2 4') == '1 3 2 4'\nassert solution('5\\n1 3 5 2 4') == '1 3 5 2 4'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"-1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 2 4') == '1 4'\nassert solution('5 1 2 3 4 5') == '1 2 3 4 5'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 3 2 4\n''') == '1 4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''\n4\n2 1 4 3\n''') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == '1 4'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 3 2 4\n''') == '1 4'\nassert solution('''5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''4\n2 1 4 3\n''') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"5 2 1 4 3\") == \"1 2 3 4\"\nassert solution(\"4 2 1 3 4\") == \"-1\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 2 4') == '1 4'\nassert solution('5\\n1 2 3 4 5') == '1 2 3 4 5'\nassert solution('4\\n1 3 2 4') == '-1'\n\"\"\"\n\nfrom typing import List\nimport heapq\n\nn: int = int(stdin.readline())\n\nsequence: List[int] = list(map(int, stdin.readline().split()))\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"4 9\") == \"2\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 4') == '1'\nassert solution('6 4') == '2'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n...\n.#.\n...\n''') == '1'\n\nassert solution('''\n2 2\n.##.\n.#.\n''') == '0'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 6\\n.#####\\n#####.') == '5'\nassert solution('4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..') == '8'\n\nimport sys"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 4\") == \"1\"\nassert solution(\"2 3\\n4 5\\n6 7\") == \"1\"\nassert solution(\"5 7\\n3 5\\n2 5\\n1 5\") == \"2\"\nassert solution(\"5 4\\n3 4\\n1 1\\n5 5\\n3 5\\n2 5\") == \"5\"\nassert solution(\"2 5\\n1 5\\n1 1\\n2 5\\n3 5\\n4 5\") == \"5\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 8\n.#####\n#####.\n..#..#..\n''') == '8'\nassert solution('''3 3\n...\n.#.\n...\n''') == '1'\n'''\n\nimport re\nfrom typing import List\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        return ''.join(f'{self.bureaucrat_number}' * int(match.group(0)) for match in re.finditer(r'\\#+?\\s*\\#+?\\s*\\#+?', stdin))"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\n\nassert solution('''\n3 3\n...\n.#.\n...\n''') == '1'\n\nassert solution('''\n2 6\n.#####\n#####.\n''') == '5'\n\n'''"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n.#####\\n#####.\\n') == '5'\nassert solution('3 3\\n.#####\\n#####.\\n') == '6'\nassert solution('4 8\\n.######.\\n.######.\\n.######.\\n') == '8'\nassert solution('10 4\\n...\\n...\\n#...\\n') == '7'"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1,2') == '1'\nassert solution('2,3') == '1'\nassert solution('3,2') == '2'\nassert solution('4,5') == '3'\nassert solution('5,4') == '3'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '5'\nassert solution('3 3') == '1'\nassert solution('2 3') == '1'\nassert solution('5 3') == '1'\nassert solution('6 3') == '2'\n\"\"\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 3 3\n3 1 3\n1 3 2\n3 2 3\n\"\"\") == \"13\"\nassert solution(\"\"\"\n3 4 4\n3 1 2 1\n1 1 2 1\n1 2 1 1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '19 12 2 18 5 5'"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3''') == '13'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3''') == '4 2 6 1 9 7 5 5 7 1 2 3 3'''\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3''') == '-1'''\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5 5\") == \"6\"\nassert solution(\"3 3 3\") == \"4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\") == \"13\""
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\"\nassert solution(\"3 3 3\\n3 1 3 3 1\\n1 3 3 3 2\") == \"13\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"4 2 6 1 9 7 5 5 7 1 2 3 3\""
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 3') == '13'\nassert solution('3 3 3') == '13'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5 5\") == \"6\"\nassert solution(\"3 3 3\") == \"13\"\nassert solution(\"3 1 1\") == \"19 12 2 18 5 5\"\nassert solution(\"3 2 2\") == \"4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 1\") == \"Not a valid input.\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"2 1 1\") == \"1 2 3\"\nassert solution(\"4 4 4\") == \"1 2 3\"\nassert solution(\"3 3 3\") == \"1 2 3\"\nassert solution(\"3 2 3\") == \"1 2 3\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 5\"\nassert solution(input()) == \"1 2\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '1 5'\nassert solution('''\n5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '1 5'\nassert solution('''\n4\n1\n5\n3\n6\n1\n2\n3\n''') == '3 2'\nassert solution('''\n6\n1\n5\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\nassert solution('''\n''') == '2 5'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3 1'\nassert solution('5') == '5 1'\nassert solution('4') == '1 2 3 4'\nassert solution('6') == '1 2 3 4 5'\nprint(solution(input()))\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"1 5\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"2 3\""
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '1 5'\nassert solution('''\n5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '1 5'\nassert solution('''\n5\n5\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1 1\"\nassert solution(\"4\") == \"1 5\"\nassert solution(\"3\") == \"1 1\"\nassert solution(\"2\") == \"1 5\"\nassert solution(\"1\") == \"1 1\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\") == \"1 5\"\nassert solution(\"5\\n4\\n3\\n2\\n1\") == \"1 5\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '1 5'\nassert solution('''\n5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '3 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 5'"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3') == '1 1'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\"\nassert solution(\"6\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1', 'TEST 1'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5', 'TEST 2'\nassert solution('''\n6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '5', 'TEST 3'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1', '5'\nassert solution('''5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5', '4'\nassert solution('''6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\nSample Output 3:\n5\n''') == '5', '6'"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('7') == '3'\nassert solution('10') == '5'\nassert solution('15') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0 1\n2 2\n''') == '1'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\nassert solution('''\n6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\nSample Output 3:\n5\n''') == '5'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\nSample Output 3:\n5\n''') == '5'\nassert solution('''\n6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\nSample Output 3:\n5\n''') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n') == '1'\nassert solution('5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n') == '5'\nassert solution('5\\n1 1\\n0 0\\n0 2\\n1 3\\n0 4\\n') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 1\n2 3 1\n3 4 3\n''') == '4'\n\nassert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\n\nassert solution('''\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 2\\n1 3 1\\n2 3 1\\n3 4 3') == '4\\n3\\n4\\n5\\n6'\nassert solution('8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n') == '0\\n3\\n4\\n5\\n6\\n7'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"8\") == \"0\"\nassert solution(\"8\") == \"0\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\n\nassert solution('''\n8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\n\nassert solution('''\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\"\nassert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '4'\nassert solution('8') == '0'\nassert solution('8') == '0'\nassert solution('9') == '5'"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\n\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"8\") == \"0\"\nassert solution(\"9\") == \"5\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\n\nassert solution('''\n5\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\n\nassert solution('''\n8\n1 2 2\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '4'\nassert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n7 8 1\n''') == '0'\nassert solution('''\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == \"5\"\nassert solution('2 1') == \"6\"\nassert solution('1 2') == \"6\"\nassert solution('2 1') == \"6\"\nassert solution('1 2') == \"6\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\nR10 V1 V2 V1 E\n''') == '6'\nprint(solution('''\n1 2\nR10 V1 V2 V1 E\n'''))\nprint(solution('''\n2 1\nV1 V2 V1 V1 V2\n'''))\nprint(solution('''\n2 1\nV1 V2 V1 V1 V2\n'''))\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '5'\nassert solution('2 1') == '6'\nassert solution('1 2') == '5'\nassert solution('2 1') == '6'\nassert solution('1 2') == '5'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\n'''\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '36'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '5'\nassert solution([input().split() for _ in range(int(input()))]) == '6'\n\"\"\""
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"5\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n1 2\nR1 V1 V2 V1 E\n''') == '30'\nassert solution('''\n1 2\nR1 V1 V2 V1 E\n''') == '20'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '10'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '5'\nassert solution('1 1') == '1'\nassert solution('2 1') == '6'\nassert solution('2 2') == '12'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 24') == \"38\"\nassert solution('10 11') == \"impossible\"\nassert solution('9 216') == \"546\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 24') == '38', \"1st example\"\nassert solution('10 11') == 'impossible', \"2nd example\"\nassert solution('9 216') == '546', \"3rd example\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 24\nSample Input 2:\n10 11\nSample Output 2:\nimpossible\n\nSample Input 3:\n9 216\nSample Output 3:\n546''') == 'impossible'\n\nassert solution('''10 10\nSample Input 3:\n10 11\nSample Output 3:\n8''') == '8'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\nprint(solution(input()))\n\n-----Explanation-----\nFirst, we define the function $f(x)$, which describes the digits of a number.\n\nThe function takes the base $b$ and a number $n$. The digits of $n$ are written out of $b$ base in a string.\n\nFor example, if $b = 3$, then $n = 2$, $f(3) = 24$, so the function returns the result of $f_3(2) = 16$.\n\nThen, we write $n = 20$ in the base $b$, so $f_b(20) = 32$.\n\nWe then multiply the two numbers and obtain $n = 400$.\n\nSo, we return $f_b(400) = 1680$.\n\nFinally, we can get $n = 8000$, so the function returns the result of $f_b(8000) = 8192$.\n\nSo, we return $1680$.\n'''"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\nassert solution(\"4 4\") == \"impossible\"\nassert solution(\"2 5\") == \"impossible\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n\"\"\") == \"466.662\"\nassert solution(\"\"\"\n3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n\"\"\") == \"10.00005\"\nassert solution(\"\"\"\n3 5 1 0\n1 2 0.25 8\n0 2 0.66667 15\n1 2\n\"\"\") == \"2.0\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n\"\"\") == \"466.662\"\nassert solution(\"\"\"3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n\"\"\") == \"10.00005\"\nassert solution(\"\"\"1 4 2 1\n0 2 0.25 8\nSample Output 3:\n2.0\n\"\"\") == \"2.0\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\\n') == '466.662'\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\\n') == '10.00005'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n''') == '466.662', 'First'\nassert solution('''\n3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == '10.00005', 'Second'\nassert solution('''\n100 100 20 2 1\n50 50 0.25 12\n50 50 0.66666 16\n0 20\n''') == '75.00005', 'Third'\nassert solution('''\n2 2 2 2\n2\n''') == '1', 'Fourth'\nassert solution('''\n1 1 1 1\n0 1\n''') == '1', 'Fifth'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3.00000'\nassert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nprint('Everything passed')"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('3 4 1 0') == '2.0'\nassert solution('5 15 0.3333') == '13.5'\nassert solution('5 15 0.6666') == '13.5'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n''') == '466.662'\nassert solution('''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == '10.00005'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(test_input_1) == \"466.662\"\nassert solution(test_input_2) == \"10.00005\"\nassert solution(test_input_3) == \"4.0\"\nassert solution(test_input_4) == \"3.5\""
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n''') == '466.662'\nassert solution('''\n3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == '10.00005'\nassert solution('''\n1 1 2 3\n1 2 3 2\n1 2 3 1\n''') == '3.0'\nassert solution('''\n20 1 1 2\n1 1 2 3\n1 1 1 1\n''') == '1.0'\nassert solution('''\n20 1 1 2\n1 1 2 3\n1 1 1 2\n''') == '1.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2 1\") == \"10.00005\"\nassert solution(\"20 60 2 1\") == \"466.662\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1.5'\nprint(solution())\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\nblue red 1.0\nred pink 1.5\n''') == '1.500000000000000'\nassert solution('''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '10.000000000000000'\n''')\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n'''\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0.000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n'''\n) == '1.500000000000000'\nassert solution(\n'''2\nblue red 1.0\nred pink 1.5\n'''\n) == '0.000000000000000'\nassert solution(\n'''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n'''\n) == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1.500000000000000\"\nassert solution(\"2\") == \"0.000000000000000\"\nassert solution(\"4\") == \"10.000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1.500000000000000\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1 1 1 0') == '180'\nassert solution('2 3 1 5 3 2') == '22'\nassert solution('2 1 2') == 'too many'\nassert solution('1 1') == 'too many'\nassert solution('1 2') == 'too many'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 1 1 1 0') == '180'\nassert solution('3 2 2 1 1') == '22'\nassert solution('3 1 2') == 'too many'\nassert solution('1 1') == '0'"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"too many\""
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\n''') == '22'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\nSample Output 1:\n180\n\nSample Input 2:\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\n\nSample Input 3:\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\nSample Output 3:\n0''') == 'too many'"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"180\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n\"\"\") == \"180\"\nassert solution(\"\"\"\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''\n4 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == 'too many'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\nSample Input 4:\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 4:\n0\n''') == 'too many'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2\\n...\\n.#.\\n...') == \"17 17\"\nassert solution('3 3 2\\n...\\n.##\\n...') == \"20 20\"\nassert solution('1 10 1\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 8 5\n.###.#.\n...##...\n########\n.###.#.\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 8 5') == '20 20'\nassert solution('6 8 5') == '17 17'\nassert solution('6 8 5') == '-1 -1'"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '20 20'"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.##\") == \"0 0\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4 2\n.#.\n...\n''') == '16 16'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\") == \"17 17\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 2') == '17 17'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"300\""
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '300'\nassert solution('3') == '88'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n3\n2 40 65\n2 100 150\n2 300 320''') == 'impossible'\nassert solution('''1\n3\n2 40 65\n2 100 150\n2 300 320''') == '300'\nassert solution('''1\n3\n2 40 65\n2 100 150\n2 300 320''') == 'impossible'"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\n\nassert solution('''\n310\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\n\nassert solution('''\n90\n2\n2 20 35\n2 88 200\n''') == '88'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n10\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''\n300\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '88'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"88\"\nassert solution(\"3\") == \"300\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''8\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''9\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''35\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''95\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '88'\nassert solution('''\n3\n2\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n4\n2\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n10\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n..##..\n...#..\n..##..\n...#..\n......\n......\n''') == \"can fold\", \"First\"\n\nassert solution('''\n.....\n......\n.....\n......\n.....\n......\n.....\n''') == \"cannot fold\", \"Second\"\n\nassert solution('''\n######\n######\n######\n######\n######\n######\n######\n''') == \"can fold\", \"Third\"\n\nassert solution('''\n......\n......\n......\n......\n......\n......\n......\n''') == \"can fold\", \"Fourth\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......\\n') == 'cannot fold'\nassert solution('......\\n.....#\\n.....#\\n##...#\\n.....#\\n.....#\\n.....#\\n') == 'can fold'"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"#..#.#\\n#.#.#.#\\n#####.#\\n#....#\\n#.#.#.#\\n#.##.#\\n##...##\\n##.#...\\n#.##.#.\") == \"cannot fold\"\n\nInput:\n......\n......\n......\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n') == 'can fold'\nassert solution('......\\n......\\n###..\\n......\\n......\\n......\\n') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('.....\\n#..#.\\n....#\\n...##\\n.....\\n.....\\n.....') == 'cannot fold'\nassert solution('.....\\n#..#.\\n....#\\n...##\\n.....\\n.....\\n.....') == 'can fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n######\\n#.....\\n......\\n......\\n\") == \"can fold\"\nassert solution(\".....\\n...#..\\n.....\\n...#..\\n.....\\n...#..\\n.....\\n\") == \"can fold\"\nassert solution(\"....\\n....\\n....\\n....\\n....\\n....\\n....\\n\") == \"cannot fold\"\nassert solution(\".....\\n#.....\\n.....\\n#.....\\n.....\\n#.....\\n.....\\n\") == \"cannot fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('......') == 'cannot fold'\nassert solution('#.....') == 'can fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''......\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt')) == 'cannot fold'\nassert solution(open('input.txt')) == 'can fold'"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().strip()\n\"\"\""
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''abcefgabc\n''') == 'abc'\nassert solution('''abcbabcba\n''') == 'abcba'\nassert solution('''aaaa\n''') == 'aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"abcefgabc\") == \"abc\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('abcde') == 'abc'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n\"\"\""
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'abc'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('1 4') == '4'\nassert solution('2 5') == '6'\nassert solution('0 15') == '4'\nassert solution('1 4') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 4\\n2 5\") == \"4\"\nassert solution(\"2 10005\\n0 15\") == \"6\""
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4\\n2 5\\n2 10005') == '6'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '4'\nassert solution('1 4') == '4'\nassert solution('2 5') == '6'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('2') == '4'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 4\n2 5''') == '4'\nassert solution('''3\n1 4\n2 10\n0 15\nSample Input 4:\n2\n1 4\n2 5\nSample Output 4:\n4\n''') == '4'\nassert solution('''4\n1 4\n2 5\n0 15\nSample Input 5:\n4\n1 4\n2 5\n0 15\nSample Output 5:\n1\n''') == '1'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"1 4\") == \"4\"\nassert solution(\"2 5\") == \"6\"\nassert solution(\"0 15\") == \"4\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 4\\n2 5\") == \"4\"\nassert solution(\"2\\n1 4\\n2 10005\") == \"6\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == \"4\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4') == '4'\nassert solution('2 5') == '6'\nassert solution('3 10005') == '6'\nassert solution('5 10005') == '6'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '2'\nassert solution('3') == '3'\nassert solution('5') == '0'\n\"\"\"\nimport math\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.left = None\n        self.right = None"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"7 7 7\") == \"3\"\nassert solution(\"5 1 2 3 2 1\") == \"0\"\nassert solution(\"6 13 6 6 8 13 4 6 1\") == \"0\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n2 3 4 4 8 12 24') == '2'\nassert solution('3\\n7 7 7') == '3'\nassert solution('5\\n1 2 3 2 1') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''3\n7 7 7\n''') == '3'\nassert solution('''5\n1 2 3 2 1\n''') == '0'"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '2'\nassert solution('3') == '0'\nassert solution('5') == '0'\nassert solution('1 2 3 2 1') == '3'\nassert solution('7 7 7') == '2'"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6\n1 1 1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 2 1 2 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 2 1 2 1\n\"\"\") == \"0\""
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''\n3\n7 7 7\n''') == '3'\nassert solution('''\n5\n1 2 3 2 1\n''') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n7\n2 3 4 4 8 12 24\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n7 7 7\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n1 2 3 2 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n2 3 4 4 8 12 24') == '2'\nassert solution('3\\n7 7 7') == '3'\nassert solution('5\\n1 2 3 2 1') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n6\\n4 4\\n1\\n2\\n') == '2'\nassert solution('3\\n8\\n4 4\\n1\\n2\\n') == '0'\nassert solution('4\\n8\\n4 4\\n1\\n2\\n') == '3'\nassert solution('6\\n8\\n4 4\\n1\\n2\\n') == '0'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 5\") == \"2\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 1 10\") == \"1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG\n''') == '3'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 4') == '3'\nassert solution('1 2 1') == '1'\nassert solution('2 2 10') == '1'"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution('''\n1 2 1\nGS\n''') == '1'\nassert solution('''\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 10') == '2'\nassert solution('1 2 1') == '1'\nassert solution('3 2 10') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5 4\") == \"3\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 2 10\") == \"1\"\nprint(\"All Tests Passed\")"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution('''\n1 2 1\nGS\n''') == '1'\nassert solution('''\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\n') == '3'\nassert solution('1 2 1\\nGS\\n') == '1'\nassert solution('1 2 1\\nS#\\n#G\\n') == '1'"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5 4') == '3'\nassert solution('1 2 1') == '1'\nassert solution('2 2 10') == '-1'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nRDDD\\n
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n.......\n.G.#.S.\n.......\nLDLDLLDR''') == '1'\nassert solution('''3 7\n.......\n.G.##S.\n.......\nLDLDLLDR''') == '1'\nassert solution('''3 7\n.......\n.....S.\n.......\nLDLDLLDR''') == '2'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\nS..\n.#.\n..G\nDRRDD\n''') == '1'\nassert solution('''\n3 7\n.......\n.G.##S.\n.......\nLDLDLLDR\n''') == '1'\nassert solution('''\n3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n''') == '2'"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"DRRDD\") == \"1\"\nassert solution(\"LRDDDRR\") == \"2\"\nassert solution(\"RRDDDLLDR\") == \"1\"\nassert solution(\"LLDDLRR\") == \"2\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\nS..\n.#.\n..G\nDRRDD\n''') == '1'\nassert solution('''\n3 7\n.......\n.G.##S.\n.......\nLDLDLLDR\n''') == '1'\nassert solution('''\n3 7\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"DRRDD\") == \"1\"\nassert solution(\"LDRRDD\") == \"1\"\nassert solution(\"LDLDLLDR\") == \"1\"\nassert solution(\"LDLDLLDLR\") == \"2\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\nS..\\n.#.\\n..G\\nDRRDD') == '1'\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR') == '1'\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR') == '2'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\nS..\n.#.\n..G\nDRRDD\n''') == '1'\nassert solution('''\n3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\n''') == '1'\nassert solution('''\n3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n''') == '2'\nassert solution('''\n10 10\nS.S....S\n...S....S\n...S.S....S\n.....S....S\n.....S....S\n.....S....S\n....S.S....S\n....S.S....S\nS.S.S....S\n.S.S.S....S\n.S.....S....S\n''') == '0'\nassert solution('''\n2 3\n..S.\nS.G\n''') == '1'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n100 0 101\n0 200 199\n''') == '1000200 799'\nprint(solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n'''))"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1000200 799'\nassert solution('2') == 'impossible'\nassert solution('3') == 'uncertain'\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('2') == 'impossible'\nassert solution('10') == '10'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1000200 799', solution()\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n1\n2 3\n''') == 'uncertain'\nassert solution('''\n1\n2 4\n''') == 'impossible'\n\nprint(solution('''\n1\n1 1\n'''))"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1000200 799'\nassert solution('2') == 'uncertain'\nassert solution('4') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n100 0 101\n0 200 199\n\"\"\") == \"1000200 799\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1000200 799'\nassert solution('2') == 'uncertain'\nassert solution('1') == 'impossible'"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n3 4 5 6 7\\n9 8\\n13 14\\n1 2\\n3 4 5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n') == '3 1 2\\n2 1 3\\n1 4 5\\n5 4 3\\n4 5 6\\n6 5 4\\n5 6 7\\n7 6 5\\n6 7 8\\n8 7 6\\n7 8 9\\n9 8 7\\n8 9 10\\n10 9 8\\n9 10 11\\n11 10 9\\n10 11 12\\n12 11 10\\n11 12 13\\n13 12 11\\n12 13 14\\n14 13 12'"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '2'\n\nassert solution('''\n2\n4 7\n14 17\n9 8\n''') == '1'\n\nassert solution('''\n2\n4 7\n14 17\n19 18\n''') =='syntax error'\n\nprint('\"Run\" is good, \"Check\" is checking')\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == '2\\n1\\n'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n\") == \"1\\n2\\n3\\n4\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n\") == \"1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n3\\n\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '2 1'\nassert solution('''\n3\n5 7\n9 8\n13 17\n19 18\n''') == '1 2 3'\nassert solution('''\n3\n5 7\n9 8\n11 17\n19 18\n''') == '1 2 3'\n\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '1 2'\nassert solution('''\n2\n4 7\n9 8\n13 17\n19 18\n''') == '1 2'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2 1\\n1 2\\n'\nassert solution('3') =='syntax error'\nassert solution('4') == '2 1\\n1 2\\n3 4\\n'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\\n\") == \"2\\n1\\n\"\nassert solution(\"3\\n4 8\\n9 7\\n14 18\\n19 17\\n\") == \"1\\n2\\n\"\nassert solution(\"4\\n4 8\\n9 7\\n14 18\\n19 17\\n\") == \"1\\n2\\n3\\n\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18') == '2 1\\n1 2\\n2 1'\nassert solution('2\\n4 7\\n9 8\\n19 17\\n14 18') == '2 1\\n1 2\\n2 1'\nassert solution('2\\n4 7\\n9 8\\n19 18') =='syntax error'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n4 7\\n9 8\") == \"2\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\") == \"1\"\nassert solution(\"2\\n4 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '1'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ _ _ _ _ _\\n') == '8640'"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') =='many'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\\n\"\nassert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n_ 85 55 _ 99 51 _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\\n\"\nassert solution(\"160 _ _ 136 _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\\n\"\nassert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n_ 85 55 _ 99 51 _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ _ _ _ _ _ _\\n\") == \"many\\n\"\n\nassert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ _ _ _ 120 _ _\\n') == '8640'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('\\n'.join([\n    '90 22 6',\n    '40_',\n    '60 85 55',\n    '120 _ 144 _',\n    '170',\n])) == '8640'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ _ _ _ 85 63 153\\n') == '8640'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ 170\\n_ _ _ _ _ _ _ 115 63 153\\n') == '8640'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ _ _ _ 144 _ _\\n\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == \"1\"\nassert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == \"1\"\nassert solution('''85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n''') == \"1\"\nassert solution('''160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n''') == \"8640\"\nassert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == \"1\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '2'\nassert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''10\n2 1\n1 5\n3 1\n4 3\n''') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"8\"\nassert solution(\"10\") == \"24\"\nassert solution(\"15\") == \"54\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2'\nassert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2'\nassert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == \"24\""
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2'\nassert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''\n10\n2 1\n1 5\n3 1\n4 3\n5 6\n7 8\n5 9\n5 10\n''') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '8'\nassert solution('10') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '8'\nassert solution('10') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '8'\nassert solution('10') == '24'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"boot\") == \"3\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"boot\") == \"3\"\nassert solution(\"treetreetreetree\") == \"0\"\nassert solution(\"apples\") == \"0\"\n\nimport sys\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n$2a$9$b1QtH7.7fjI3gYa3WGt1QPY8W0JKQHOPgmeJyjLGEu.O\n\"\"\") == \"b1QtH7.7fjI3gYa3WGt1QPY8W0JKQHOPgmeJyjLGEu.\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"boot\") == \"essa\"\n\nassert solution(\"treetreetreetree\") == \"3\"\n\nassert solution(\"oranges\") == \"0\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    \"a\"\n    \"b\"\n    ''') == \"a\"\n\nassert solution('''\n    \"abc\"\n    \"a\"\n    \"b\"\n    ''') == \"a\"\n\nassert solution('''\n    \"abcd\"\n    \"ac\"\n    \"b\"\n    ''') == \"3\"\n''')\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"boot\") == \"3\"\nassert solution(\"treetreetreetree\") == \"0\"\nassert solution(\"apples\") == \"0\"\nassert solution(\"oranges\") == \"0\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"secretmessage\") == \"essa\"\nassert solution(\n    \"boot\") == \"3\"\nassert solution(\n    \"treetreetreetree\") == \"0\"\nassert solution(\n    \"apples\") == \"0\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('boot') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'\nassert solution('apples') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '4'\nassert solution('1') == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n>^<\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n') == '1'\nassert solution('5\\n^<\\n####\\n#R#\\n#.#\\n###\\n#.#\\n###\\n#.#\\n####\\n') == '2'\nassert solution('6\\n<.^>\\n######\\n#.R#\\n#.##\\n######\\n') == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n\") == \"4\""
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"5\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n>^<^') == '2'\nassert solution('6\\n>^<^') == '4'\nassert solution('4\\n<^>') == '1'\nassert solution('4\\nv<^>') == '3'"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''>^<^\n######\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 2 1 3\n2 5 4 2\n''') == '6'\nassert solution('''\n6\n0 0 10 0 2 9 2 3\n1 6 1 4 6 3 -1 -2\n''') == '3'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('4') == '6'\nprint('You are a smart cookie! All test cases are correct.')\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('2,3') == '5'\nassert solution('10,1,0,10,3,0,10,7,10,4,1,8,0,2,5,0,6,7') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '11'\nassert solution('5') == 'None'\nprint('\"Run\" is the best way to get credit for your solutions!')"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2 3 0 2 9 2 3 0\") == \"3\"\nassert solution(\"1 6 1 4 6 3 -1 -2\") == \"3\"\nassert solution(\"3 4 0 2 7 2 -1 8\") == \"5\""
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n\"\"\") == \"3\"\nassert solution(\"\"\"3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n\"\"\") == \"6\"\nassert solution(\"\"\"2\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\n\"\"\") == \"11\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('1') == '11'"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n\"\"\") == \"168.7916512460\"\nassert solution(\"\"\"\n60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\n\"\"\") == \"163.5274740179\"\nassert solution(\"\"\"\n0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n\"\"\") == \"3.7320508076\"\nassert solution(\"\"\"\n0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n\"\"\") == \"3.7320508076\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n''') == '3.7320508076'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n''') == '3.7320508076'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n''') == '3.7320508076'"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('0.0 1.0 4.0 1.0') == '3.7320508076'\nassert solution('0.0 0.0 4.0 0.0') == '1.0'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('0.0 1.0 4.0 1.0') == '3.7320508076'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == \"168.7916512460\"\nassert solution('0.0 1.0 4.0 1.0') == \"3.7320508076\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460', solution('60.0 0.0 50.0 170.0')\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460', solution('60.0 0.0 50.0 170.0')\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460', solution('60.0 0.0 50.0 170.0')\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == \"168.7916512460\"\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == \"163.5274740179\"\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0''') == \"3.7320508076\"\nassert solution('''0.0 0.0 4.0 0.0\n1\n0.0 0.0 4.0 0.0''') == \"4.000000000000000\"\nassert solution('''0.0 0.0 4.0 0.0\n0\n0.0 0.0 4.0 0.0''') == \"4.000000000000000\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3') == '168.7916512460'\nassert solution('40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\") == \"163.5274740179\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n6 5 3\n\"\"\") == 'rarity'\n\nassert solution(\n\"\"\"\n9 8 1\n\"\"\") == 'canterlot'\n\nassert solution(\n\"\"\"\n5 3 5\n\"\"\") =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 5 3\n''') == 'rarity'\nassert solution('''9 8 1\n''') == 'canterlot'\nassert solution('''5 3 5\n''') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 5 3\nrarity''') == 'rarity'\nassert solution('''9 8 1\ncanterlot''') == 'canterlot'\nassert solution('''5 3 5\nmadam''') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"canterlot\"\n\nimport math\n\nn, k, p = map(int, input().split())\n\ns = [chr(i) for i in range(97, 97 + 26)]\n\nwhile len(s) < n:\n    s.extend(s)\n    s = s[:n]\n\nfor i in range(1, n):\n    if n - i <= k:\n        break\n    if len(s[i:i + k]) == p:\n        print(''.join(s[i:i + k]))\n        break\n    if len(s[i:i + k]) < p:\n        break\nprint('IMPOSSIBLE')\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 5 3\nrarity\n''') == 'rarity'\nassert solution('''9 8 1\ncanterlot\n''') == 'canterlot'\nassert solution('''5 3 5\nmadam\n''') =='madam'\nassert solution('''1\n''') == 'IMPOSSIBLE'\nassert solution('''7 1 5\ncant\n''') == 'cant'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n'''"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 5 3\nrarity\ncanterlot\nmadam''') == 'rarity'\n\nassert solution('''7 8 5\ntenderloin\nmedley\nbraid\ncotton\ncontest\nmeasure\ncoif\n''') == 'canterlot'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\nassert solution('6 9 9') == 'canterlot'\nassert solution('5 3 5') =='madam'"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Blue Ridge mountain road.') == 'Blue Ridge mountain road.'\nassert solution('Leaves, glowing in autumn sun, fall in Virginia.') == 'Leaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!.') == 'International\\ncontest- motivation high\\nProgrammers have fun!'\n\n----------------------------------------"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia. \") == \"Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International contest- \\nmotivation high \\nProgrammers have fun!\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\nBlue Ridge\nmountain\nroad\"\"\") == \"\"\"\nBlue Ridge\nmountain\nroad\"\"\"\nassert solution(\"\"\"\nwho\nwould\nknow\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nprint(solution(input()))\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International\\ncontest- motivation high\\nProgrammers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"\"\"Blue Ridge mountain road.\nLeaves, glowing in autumn sun,\nfall in Virginia.\"\"\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"\"\"Who would know if we had too few syllables?\n\"\"\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nBlue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\n''') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('''\nWho would know if we had too few syllables?\n''') == 'Who would know if we had too few syllables?'\nassert solution('''\nInternational contest- motivation high Programmers have fun!.\n''') == 'International contest-\\nmotion high Programmers have fun!.'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"ThoreH\"\nassert solution(\"1\") == \"ThoreT\"\nassert solution(\"2\\n\") == \"ThoreH\"\nassert solution(\"1\\n\") == \"ThoreT\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Thore is awesome\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nThoreTiemann') == 'Thore'\nassert solution('2\\nThoreHusfeldt') == 'ThoreH'\nassert solution('2\\nThoreHusfeldter') == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\nThoreTiemann\nThoreHusfeldt\n''') == 'ThoreH'\nassert solution('''\n2\nThoreHusfeldt\nJohanSannemo\n''') == 'ThoreHusfeldt'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'ThoreH'"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1\nThoreTiemann\nThoreHusfeldt\n\"\"\") == \"Thore is awesome\"\nassert solution(\"\"\"1\nThoreHusfeldter\nThoreHusfeldt\n\"\"\") == \"Thore sucks\"\nassert solution(\"\"\"2\nThoreTiemann\nThoreHusfeldt\nThoreHusfeldt\n\"\"\") == \"ThoreH is awesome\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\nThoreHusfeldt\nThoreHusfeldt\n''') == 'Thore sucks'\nassert solution('''\n2\nThoreHusfeldt\nJohanSannemo\n''') == 'Thore is awesome'\nassert solution('''\n2\nThoreHusfeldt\nThoreHusfeldt\n''') == 'Thore sucks'\nassert solution('''\n2\nThoreHusfeldt\nThoreHusfeldter\n''') == 'ThoreHusfeldt'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\nThoreTiemann\nThoreHusfeldt\n''') == 'ThoreH'\nassert solution('''\n2\nThoreHusfeldt\nThoreHusfeldter\n''') == 'ThoreHusfeldt'\nassert solution('''\n2\nThoreHusfeldt\nThoreTiemann\n''') == 'ThoreHusfeldt'\n''')"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\nThoreTiemann\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldt\") == \"Thore sucks\"\nassert solution(\"2\\nThoreHusfeldter\") == \"Thore is awesome\"\n\"\"\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\nThoreTiemann\nThoreHusfeldt\n''') == 'ThoreH'\n\nassert solution('''1\nThoreHusfeldt\nThoreHusfeldt\n''') == 'ThoreHusfeldt'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''P*P\nL*R\nP*P\nL*R''') == '6'\nassert solution('''P*P\nP*R\nP*P\nP*R''') == '21'\nassert solution('''P*P\nP*R\nP*P\nP*R''') == '36'\nassert solution('''P*P\nL*R\nP*P\nL*R''') == '36'\n\n'''\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('*') == '*'\nassert solution('L*R') == '6'\nassert solution('P*P') == '6'\nassert solution('L*R*R*L*R') == '33'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\""
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('P*P') == \"6\"\nassert solution('L*R') == \"25\"\nassert solution('**') == \"33\"\n\n'''\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('R*L') == '33'\nassert solution('R*R') == '25'\nassert solution('R*P') == '6'\nassert solution('P*P') == '6'\nassert solution('*P') == '6'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''*\n*\n*\n''') == '6'\nassert solution('''P*P\nP*P\n''') == '6'\nassert solution('''P*P\n*P\n''') == '6'\nassert solution('''*\n*\n*\n''') == '33'\nassert solution('''P*P\n*P\n*P\n''') == '33'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\noskar is poptart\nlukas is smart\n''') == 'yes'\nassert solution('''\n2\noskar is poptart\nlukas not poptart\n''') == 'wait what?'''"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\nmoo not foo\n\"\"\") == \"wait what?\"\nassert solution(\"\"\"\n5\nqwe is qwe\nqwe is qwe\nqwe is qwe\nqwe is qwe\nqwe is qwe\n\"\"\") == \"yes\"\n\nassert solution(\"\"\"\n0\nherp is derp\nderp is herp\nherp is herp\nderp is derp\nherp is derp\nherp is derp\n\"\"\") == \"yes\"\nassert solution(\"\"\"\n1\noskar not lukas\noskar is poptart\nlukas is smart\n\"\"\") == \"yes\"\nassert solution(\"\"\"\n3\noskar not lukas\noskar is poptart\nlukas is smart\n\"\"\") == \"wait what?\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\nmoo not foo\n''') == 'yes','sample 1'\nassert solution('''\n4\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == 'yes','sample 2'\nassert solution('''\n3\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'wait what?','sample 3'\nassert solution('''\n2\nherp is derp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\n''') == 'wait what?','sample 4'\nassert solution('''\n7\nherp is derp\nderp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\n''') == 'wait what?','sample 5'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'wait what?'\nassert solution('''\n2\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == 'yes'\nassert solution('''\n3\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'yes'\nassert solution('''\n4\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == 'wait what?'\n\n'''\nclass Solution:\n    def __init__(self):\n        pass\n\n    def solution(self, stdin: str):\n        pass\n\nassert Solution().solution('''\n1\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nherp is derp\\nderp is herp\\nherp is herp') == 'yes'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart') == 'wait what?'\nassert solution('1\\nmoo not foo') == 'yes'\nassert solution('1\\noskar is poptart') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n') == 'yes'\nassert solution('3\\noskar not lukas\\noskar is poptart\\lukas is smart\\n') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nherp is derp') == 'yes'\nassert solution('2\\nherp is derp') == 'wait what?'\nassert solution('3\\nherp is derp') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == 'yes'\nassert solution('''\n4\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == 'yes'\nassert solution('''\n2\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n') == 'yes', \"You are not allowed to use any other language\"\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?', \"I think I've got no idea what you are talking about\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\nherp is herp\\nherp is herp\\nderp is derp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp is herp\\nherp"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == 'impossible'\nassert solution('10') == 'impossible'\nassert solution('20') == 'impossible'\nassert solution('1') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1 4'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\n\"\"\"\nimport unittest\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n10\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n\"\"\") == \"1 4\"\nassert solution(\"\"\"\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n\"\"\") == \"1 4\"\nassert solution(\"\"\"\n1\nAM\nMA\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(t) == \"1 2\"\n\"\"\""
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4 1'\nassert solution('3') == 'impossible'\nassert solution('1') == 'impossible'\n\"\"\""
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == \"1 4\"\nassert solution('''\n3\nACMA\nACM\nACA\nAMA\n''') == \"impossible\"\nassert solution('''\n1\nAM\n''') == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\nSample Input 4:\n3\nACMA\nACM\nACA\nAMA\nSample Output 4:\n1 4\nACM\nACMAA\n''') == '2 1'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n\"\"\") == \"1 4\"\nassert solution(\"\"\"\n3\nACMA\nACM\nACA\nAMA\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1\nAM\nMA\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"1 4\"\nassert solution(sys.stdin.read()) == \"impossible\"\nassert solution(sys.stdin.read()) == \"impossible\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20 10 5\n5 0.5 10\n10 20 3\n2 0.3 5\n20 0.5 2\n''') == '124'\nassert solution('''20 10 4\n1 0.5 5\n2 0.5 2\n3 0.5 2\n4 0.5 2\n''') == '3'\nprint(solution(*tuple(map(int, input().split()))))\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.01'\nassert solution('2') == '0.03'\nassert solution('3') == '0.06'\nassert solution('4') == '0.08'\nassert solution('5') == '0.12'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\nassert solution('2 4 1') == '3'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746'\nprint('ALL TEST CASES PASSED')\n\n\"\"\""
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == std_out_1\nassert solution(sample_input_2) == std_out_2\nassert solution(sample_input_3) == std_out_3"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    \"\"\"\n) == \"124\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    10 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    \"\"\"\n) == \"124\"\nassert solution(\n    \"\"\"\n    2 4 1\n    1 0.5 5\n    \"\"\"\n) == \"3\"\nassert solution(\n    \"\"\"\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    \"\"\"\n) == \"18.9029850746\"\nassert solution(\n    \"\"\"\n    10 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    \"\"\"\n) == \"124\""
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 20 3') == '18.907458052'\nassert solution('2 4 1') == '3'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n4 3 2\n1''') == '2 1 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '3 2'\n) == '2 1 2', 'Gwen likes most numbers.'\nassert solution(\n    '5 22'\n) == '4 3 4 2', 'Gwen likes most numbers.'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3\n2 1 2\n''') == '2 1 2'\nassert solution('''5 22\n4 3 4 2\n''') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2 1 2'"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 2\n3 4\n5 6\n''') == '1 2 1 2 3 3 4 4 5 5'''"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == '2 1 2'\nassert solution() == '1'\n\nimport math"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"1 2 3\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '1'\nassert solution('5 1') == '2'\nassert solution('1 1') == '1'\nassert solution('1 10') == '10'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 4\n1 2\n1 3\n3 4\n2 4\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n7 6\n1 2\n2 3\n3 4\n5 6\n6 7\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n7 2\n1 2\n2 3\n3 4\n5 6\n6 7\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n7 3\n1 2\n2 3\n3 4\n5 6\n6 7\n\"\"\") == \"0\""
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\nSample Output 2:\n0''') == '0'\nassert solution('''7 5\n1 2\n2 3\n3 4\n5 6\n6 7\nSample Output 3:\n0''') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\nSample Output 3:\n0\n''') == '0'\nprint('all tests passed')\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\n\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '2'\nassert solution('7 6') == '2'\nassert solution('7 5') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 2\n2 3\n3 4\n2 4\n''') == '2'\n\nassert solution('''7 6\n1 2\n2 3\n3 4\n5 6\n6 7\nSample Output 4:\n0''') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"7 6\") == \"0\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 0\") == \"20.00000000\"\nassert solution(\"-10 10\") == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n20 0\n1.00 0.10\n''') == '20.00000000'\nassert solution('''\n-10 10\n10.00 1.00\n''') == '3.14159265'\nprint('Congratulations, have you solved this challenge!')\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"20 0\n1.00 0.10\"\"\") == \"20.00000000\"\nassert solution(\"\"\"-10 10\n10.00 1.00\"\"\") == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('1.00 0.10') == '20.00000000'\nassert solution('-10 10') == '3.14159265'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(t1) == \"28.26445910\"\nassert solution(t2) == \"28.26445910\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('1.00 0.10') == '20.00000000'\nassert solution('-10 10') == '3.14159265'"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 0') == \"20.00000000\"\nassert solution('1.00 0.10') == \"20.00000000\"\nassert solution('-10 10') == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '28.26445910'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''20 0\n1.00 0.10\n''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00\n''') == '3.14159265'\nassert solution('''0 20\n1.00 0.10\n''') == '28.26445910'"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('1.00 0.10') == '20.00000000'\nassert solution('-10 10') == '3.14159265'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\"\n\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '170'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 100\n1 100\n4 70\n3 70\n''') == '170'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '220'\nassert solution('4') == '220'"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 100\n3 70\n2 80''') == '170'\n\nassert solution('''3\n2 120\n3 50\n2 80''') == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\\n2 100\\n1 100\\n4 70\"\n    ) == \"170\"\n\nassert solution(\n    \"4\\n2 100\\n1 100\\n4 70\"\n    ) == \"150\"\n\nassert solution(\n    \"3\\n3 70\\n2 50\\n1 50\"\n    ) == \"120\"\n\nassert solution(\n    \"2\\n2 50\\n1 50\"\n    ) == \"100\"\n\nassert solution(\n    \"2\\n2 50\\n3 70\"\n    ) == \"50\""
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '100'\nassert solution('3') == '150'"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n100\n1 100\n''') == '170'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"6 6\") == \"5\"\nprint('Tests passed')\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('2 4') == '4'\nassert solution('3 4') == '4'\nassert solution('3 5') == '4'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n3 4''') == '2'\nassert solution('''5 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '5'\nassert solution('''20 30\n1 2\n1 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30''') == '33'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '3'\nassert solution('6 6') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 6') == '5'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\") == \"5\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"0\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\nSample Output 3:\n0.5\n''') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0.5'\nassert solution('8') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n0\n1\n\"\"\") == '0.0446429'\nprint('Tests passed!')\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5', 'First'\nassert solution('''\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\nSample Output 2:\n0.0446429\n''') == '0.0446429', 'Second'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"0.5\"\nassert solution(sample_input_2) == \"0.0446429\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n5\n0 1 1 1 2\n0 0 0 1 1\n0 1 0 1 0\n0 1 1 1 1\n0 0 1 1 1\n''') == '0.0446429'\nassert solution('''\n6\n6\n1 0 1 1 1 2\n0 0 1 1 1 1\n1 0 1 1 1 1\n1 0 1 1 1 1\n1 0 1 1 1 1\n0 0 1 1 1 1\n''') == '0.0446429'\nassert solution('''\n5\n5\n1 0 1 1 2\n0 0 1 1 1\n0 1 0 1 0\n0 1 1 1 1\n0 0 1 1 1\n''') == '0.0446429'\nassert solution('''\n6\n6\n1 0 1 1 1 2\n0 0 1 1 1 1\n1 0 1 1 1 1\n1 0 1 1 1 1\n1 0 1 1 1 1\n0 0 1 1 1 1\n''') == '0.0446429'\nassert solution('''\n8\n6\n1 0 1 1 1 2\n0 0 1 1 1 1\n1 0 1 1 1 1\n1 0 1 1 1 1\n1 0 1 1 1 1\n0 0 1 1 1 1\n0 0 1 1 1 1\n0 0 1 1 1 1\n''') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0.5'\nassert solution('3') == '0.5'\nassert solution('8') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0.5'\nassert solution('8') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n3\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\nSample Output 3:\n0.0446429\n''') == '0.0446429'\nassert solution('''\n3\n3\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\nSample Output 4:\n0.010592\n''') == '0.010592'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"2\") == \"0.5\"\nassert solution(\"3\") == \"0.5\"\nassert solution(\"8\") == \"0.0446429\"\nassert solution(\"2 4 3\") == \"0.299539\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 3 2 1') == '3 1 6 1'\nassert solution('5 4 1 2 5 2 5') == '2 5 3 4 2 1'\nassert solution('4 3 3 4 1 1') == '3 4 5 2 1'\nassert solution('6 3 2 1 2 2 2') == 'IMPOSSIBLE'\nassert solution('1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2 1 2\n''') == '3'\nassert solution('''\n4\n1 2 1 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n2\n1 1\n''') == '1 6 1'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"3\""
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2\n3 1\n''') == '3'\nassert solution('''2\n1\n3''') == '3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == \"IMPOSSIBLE\"\nprint(solution(\"5\\n1 2 3 4 5\"))\nprint(solution(\"3\\n1 2 1 2\"))\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3 3 2 1\n''') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\n'''\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '3'\nassert solution('4') == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"2\\n2 1\") == \"2\"\nassert solution(\"10\\n3 5 2 7 3\") == \"10\"\nassert solution(\"5\\n1 5 5 5 1\") == \"IMPOSSIBLE\"\nprint('all tests passed')\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 2 3 4') == '1 3 4 2'\nassert solution('1 3 5') == '1 3 5'"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"1 2 3 4 5 6 7 8 9\""
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 2\n1 100\n1 1\n\"\"\") == \"\"\"1 2 100\"\"\"\n\nassert solution(\"\"\"\n3\n1 2\n1 100\n1 1\n\"\"\") == \"\"\"1 2 100\"\"\"\n\n\"\"\"\n--- Part Two ---\n\nOf course the game doesn't end in a perfect solution. In fact, the game doesn't end until it becomes impossible to get a solution.\n\nAfter $M$ turns, the game still has a certain number of solutions. For example, if we had $M=10$, then the first ten turns would be a perfect solution and the next ten turns would be one of the best possible solutions.\n\nIn how many turns does the game end?\n\nWrite a program that finds the number of turns it would be to get a perfect solution.\n\n-----Input-----\nThe first line contains one integer $M$ ($1 \\leq M \\leq 1000000$).\n\nThe next $M$ lines contain descriptions of input sequences. Each line starts with an integer $L$ ($1 \\leq L \\leq 1000000$), the length of the sequence. It is followed by $L$ positive integers, each at most $100000000$.\n\n-----Output-----\nOne line containing the number of turns it would be to get a perfect solution.\n\n-----Examples-----\nSample Input 1:\n10\n1 2\n1 100\n1 1\nSample Output 1:\n2\n\nSample Input 2:\n100\n1 2\n1 100\n1 1\nSample Output 2:\n99\n\"\"\""
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\"\nassert solution(\"3\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1 2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 2'\nassert solution('5 10 20 30 40 50') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"2 1\") == \"1 2\"\nassert solution(\"2 1 1\") == \"1 2\"\nassert solution(\"2 1 1 1\") == \"1 2\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 100\") == \"1 100\"\nassert solution(\"2 2\\n1 100 1\") == \"1 100\""
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 100\") == \"1 100\"\nassert solution(\"1 1\") == \"1 1\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'\n\nassert solution('1') == '0'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '2600'\nassert solution('0') == '2600'\nassert solution('3') == '506'\nassert solution('AB 1 1') == '2600'\nassert solution('AC 2 1') == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0\n''') == '2600'\nassert solution('''\n1\nAB 1 1\nAC 2 1\nBC 2 1\n''') == '506'\nassert solution('''\n1\nAB 1 1\nAC 2 1\nBC 2 2\n''') == '52'\nassert solution('''\n2\nAA 1 1\nAC 1 1\nAD 1 1\n''') == '2'\nassert solution('''\n3\nAA 1 1\nAC 2 2\nBB 2 2\n''') == '14'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0\\n\") == \"2600\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\n\") == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'\nprint(solution('1\\nAB 1 1\\nAC 2 1\\nBC 2 1'))"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nAB 1 1\\nAC 2 1\\nBC 2 1\\n') == '2600'\n\nSample Input 3:\n3\nAB 1 1\nAC 2 1\nBC 2 1\nSample Output 3:\n2900\n\nSample Input 4:\n4\nAB 1 2\nAC 2 2\nBC 2 2\nAB 1 1\nAC 2 1\nBC 2 1\nSample Output 4:\n16000\n\nSample Input 5:\n4\nABC 1 2\nABD 1 2\nABA 1 1\nABC 1 1\nSample Output 5:\n512\n'''\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2600'\nassert solution('3') == '5062'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0\\n') == '0'\nassert solution('3\\nAB 1 1\\nAC 2 1\\nBC 2 1') == '2600'\nassert solution('1\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nAB 2 1\\nAC 1 1\\nBC 1 1') == '0'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\", \"Zero investigations\"\nassert solution(\"1\") == \"2600\", \"One investigation\"\nassert solution(\"2\") == \"506\", \"Two investigations\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"(((\") == \"possible\"\nassert solution(\"()())\") == \"possible\"\nassert solution(\"(()(\") == \"impossible\"\nassert solution(\"))(\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''()))\n        ((\n        )(\n        ()''') == 'impossible'\nassert solution('''()\n)\n        ((\n        )(\n        ()''') == 'possible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('(((())))') == 'possible'\nassert solution('(()((()()))())') == 'possible'\nassert solution('((()((()())((((())))()))))') == 'possible'\nassert solution
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('())') == 'possible'\nassert solution('(()') == 'possible'\nassert solution('(()())()') == 'possible'\nassert solution('(()())())()') == 'possible'\nassert solution('(())())()()') == 'possible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"possible\"\nassert solution(input()) == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('())') == 'possible'\nassert solution('((()))') == 'possible'\nassert solution('(()))') == 'impossible'\nassert solution('))') == 'impossible'\nassert solution('((') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"))\") == \"impossible\"\nassert solution(\"()((\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'possible'\n\"\"\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''()))\n((((((())))))''') == 'possible'\nassert solution('''((((((())))))\n''') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(TEST_INPUT_1) == 'possible'\nassert solution(TEST_INPUT_2) == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1800'\nassert solution('2 2') == 'impossible'\n\n'''\n\n'''"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n\"\"\"\n) == \"1800\"\nassert solution(\n\"\"\"\n3 3\n1 1800 9000 1800\n1 1900 9200 1600\n1 2200 9400 1400\n\"\"\"\n) == \"impossible\"\nassert solution(\n\"\"\"\n4 5\n1 2100 1640 2640\n1 2100 1660 2640\n1 2100 1680 2700\n1 2100 1680 2700\n1 2100 1700 2800\n1 2100 1700 2800\n\"\"\"\n) == \"impossible\"\nassert solution(\n\"\"\"\n8 9\n1 86400 1600 93600\n1 86400 1600 93600\n1 86400 1680 93600\n1 86400 1680 93600\n1 86400 1690 93600\n1 86400 1700 93600\n1 86400 1700 93600\n1 86400 1780 93600\n\"\"\"\n) == \"impossible\"\nassert solution(\n\"\"\"\n100 9\n1 86400 3600 3600\n1 86400 3600 3600\n1 86400 3600 3600\n1 86400 3600 3600\n1 86400 3600 3600\n1 86400 3600 3600\n1 86400 3600 3600\n1 86400 3600 3600\n\"\"\"\n) == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 3]) == \"1800\"\nassert solution([2, 2]) == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1800'\nassert solution('2 2') == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\nprint('All Tests Passed!')\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 3], [[1, 1800, 9000, 1800], [1, 2000, 9200, 1600], [1, 2200, 9400, 1400]]) == \"1800\"\nassert solution([2, 2], [[1, 1800, 3600, 1800], [1, 1900, 3600, 1600], [1, 2200, 3600, 1400]]) == \"impossible\"\nassert solution([3, 3], [[1, 1200, 1200, 1200], [1, 1250, 1250, 1250], [1, 1300, 1300, 1300]]) == \"impossible\"\nassert solution([3, 3], [[1, 1200, 1200, 1200], [1, 1250, 1250, 1250], [1, 1300, 1300, 1300], [1, 1400, 1400, 1400]]) == \"impossible\"\nassert solution([5, 5], [[1, 5, 5, 5], [1, 6, 6, 6]]) == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1800'\nassert solution('2 2') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n') == '1800'\nprint(solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n'))\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'impossible'\nassert solution('2 3') == '1800'"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n\"\"\"\n) == \"1800\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\"\n\"\"\""
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n3\nA1-C1 A1-B1 A2-C2 B2-C1\nA2-C1 A1-B1 B2-C1''') == 'A1-B1 A2-C2 B1-C1'\nassert solution('''2 3\n1\nA1-B1 A2-B2 A3-C3\nA2-B2 A1-C1 A3-B3\nA1-C1 A2-B3 A3-B1''') == 'A1-B1 A2-C3 A3-B1 A3-B2 A1-C1'"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 2 1\n2 1 1\n1 3 1''') == \"A1-B1 A2-C2 B2-C1\"\nassert solution('''3 3\n1 2 1\n2 1 1\n1 3 2\n2 3 2''') == \"A1-B1 A2-C2 B2-C1 A3-B3 B3-C1 A1-B1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"A1-B1 A2-C2 B2-C1\"\nassert solution(\"3 3\") == \"A1-B1 A2-C2 B2-C1 A3-B3\"\nassert solution(\"3 4\") == \"A1-B1 A2-C2 B2-C1 A3-B3 A4-B4 C1-B4 C2-B3\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n.\\n.\") == \"7\"\nassert solution(\"4 4\\nX.X\\nX..\\n..X\\n..XX\") == \"9\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1\n..\n..\n''') == '7'\n\nassert solution('''4 4\nX.X\nX..\n..X\n..XX\n''') == '9'\n\nassert solution('''5 5\nX.X\nX..X\n..X.\n..X.\nXX.X\n''') == '13'\n\nassert solution('''7 7\nX.X\nX..X\n..X.\n..X.\nXX.X\nXX.X\nXX.X\nXX.X\nXX.X\n''') == '33'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\nassert solution('2 4') == '8'\nassert solution('3 3') == '7'\nassert solution('7 3') == '8'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\nassert solution('10 10') == '12'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2\\n..\\n..\\n') == '7'\nassert solution('4 4\\n.XX\\n.XX\\n.XX\\n') == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n.X.\n.X.\n''') == '7'\nassert solution('''4 4\n.X.\nX..\n..X\n..XX\n''') == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"7\"\nassert solution(\"4\\n\") == \"9\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n..\n..\n''') == '7'\nassert solution('''4 4\nX.X\nX..X\n..X.\n..XX\n''') == '9'\nprint('All test cases passed...')"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\nprint(solution('''1\n..\nX.\n..\n..\n2\n...\nX.X\n.X.\n.X.\n3\nX.X.\n...\n.XX.\n...\nX.X.\n.X.\n.X.\n4\n.X.X.\nX.X.\nX.X.\n.X.X.\nX.X.\nX.X.\n5\nX.X.X.\nX.X.X.\nX.X.X.\nX.X.X.\nX.X.X.\nX.X.X.\n6\nX.X.X.X.\nX.X.X.X.\nX.X.X.X.\nX.X.X.X.\nX.X.X.X.\nX.X.X.X.\n7\nX.X.X.X.X.\nX.X.X.X.X.\nX.X.X.X.X.\nX.X.X.X.X.\nX.X.X.X.X.\nX.X.X.X.X.\n8\nX.X.X.X.X.X.\nX.X.X.X.X.X.\nX.X.X.X.X.X.\nX.X.X.X.X.X.\nX.X.X.X.X.X.\nX.X.X.X.X.X.\n9\nX.X.X.X.X.X.X.\nX.X.X.X.X.X.X.\nX.X.X.X.X.X.X.\nX.X.X.X.X.X.X.\nX.X.X.X.X.X.X.\nX.X.X.X.X.X.X.\n10\nX.X.X.X.X.X.X.X.X\nX.X.X.X.X.X.X.X.X\nX.X.X.X.X.X.X.X.X\nX.X.X.X.X.X.X.X.X\nX.X.X.X.X.X.X.X.X\nX.X.X.X.X.X.X.X.X\n11\nX.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.\n12\nX.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.\n13\nX.X.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\n14\nX.X.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\n15\nX.X.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\n16\nX.X.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\n17\nX.X.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X.X.X.X.X.X.X.X.X.X.X.X.\n18\nX.X.X.X.X.X.X.X.X.X.X.X.X.X.\nX.X"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n1 1 1 1 500\n\"\"\") == \"100\"\nassert solution(\"\"\"\n2\n3 3 2 2 100\n1 1 1 1 500\n\"\"\") == \"600\"\nassert solution(\"\"\"\n2\n3 3 2 2 500\n1 1 1 1 500\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 2 2 2 100\n1 1 1 1 500\nSample Output 1:\n600\nSample Output 2:\n100\n''') == '600', \"First\"\nassert solution('''\n3\n3 0 2 2 100\n1 1 1 1 500\nSample Output 1:\n100\nSample Output 2:\n600\n''') == '-1', \"Second\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3 2 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution('''\n2\n3 0 2 1 100\n6 0 8 1 1\n''') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution('''\n2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 2 2 2\\n6 0 8 1 1\") == \"600\"\nassert solution(\"2\\n3 2 2 2\\n1 1 1 1 500\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n3 3 2 2 100') == '600'\nassert solution('2\\n1 0 2 1 100') == '-1'\nassert solution('1\\n6 0 8 1 1') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3 2 2 100\n1 1 1 1 500\n''') == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 2 1 2 100\n1 1 2 1 500\n2 1 1 2 300\n3 2 1 1 700\n3 3 2 1 100\n''') == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''3\n0 0 2 2 100\n6 0 8 1 1\n'''\n) == '600'\nassert solution(\n'''\n2\n0 0 2 2 100\n6 0 8 1 1\n'''\n) == '100'\nassert solution(\n'''\n2\n0 0 2 2 100\n1 1 1 1 500\n'''\n) == '-1'\n\nassert solution(\n'''\n1\n0 0 2 2 100\n'''\n) == '-1'\n\nassert solution(\n'''\n2\n1 1 1 1 500\n'''\n) == '-1'"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n361\n''') == '3'\nassert solution('''\n2\n11\n''') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"0\"\nassert solution(\"1234\") == \"0\"\nassert solution(\"110101\") == \"3\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '1'\nassert solution('10000') == '2'\nassert solution('1000') == '1'\nassert solution('1001') == '2'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('100') == '1'\nassert solution('111') == '0'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('5') == '0'\nassert solution('10') == '3'\nassert solution('11') == '0'\nassert solution('12') == '1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('361') == '3'\nassert solution('4') == '0'\nassert solution('0') == '0'\nassert solution('11') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n361\n''') == '3'\nassert solution('''\n2\n11\n''') == '0'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 10\n2 100\n1 10\n11 5\n''') == '10'\nassert solution('''3 10\n2 100\n1 10\n13 5\n''') == 'cancel road trip'\nprint(solution('''3 10\n2 100\n1 10\n11 5\n'''))\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"2 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '10'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 100') == 'cancel road trip'\nassert solution('5 5\\n1 10\\n3 7\\n2 100\\n4 8\\n4 5') == 'cancel road trip'\nassert solution('5 5\\n1 10\\n2 4\\n2 6\\n4 8\\n4 5') == '10'\nassert solution('5 5\\n1 10\\n2 4\\n2 6\\n4 8\\n4 5') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"10\"\n\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"10\"\nassert solution(\"3 10\") == \"cancel road trip\"\n\n'''\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '10'"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 10\n2 100\n1 10\n11 5''') == '10'\nassert solution('''3 10\n2 100\n1 10\n13 5''') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 10, 2, 100, 1, 10, 11, 5, 4, 9]) == \"10\"\nassert solution([3, 10, 2, 100, 1, 10, 13, 5, 4, 9]) == \"cancel road trip\"\nassert solution([3, 10, 2, 100, 1, 10, 11, 5, 4, 9]) == \"cancel road trip\"\nassert solution([3, 10, 2, 100, 1, 10, 11, 5, 4, 9]) == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == '10'\nassert solution('''\n3 10\n2 100\n1 10\n13 5\n''') == 'cancel road trip'"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 9\n2 8\n1 1\n3 4\n5 100\n\"\"\") == \"\"\"\n1 8 9 9 100 101 108 109 109\n\"\"\"\n\nassert solution(\"\"\"\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\nSample Output 3:\n0 7 8 11 15 16 19\n\"\"\") == \"\"\"\n0 7 8 11 15 16 19\n\"\"\"\n\nassert solution(\"\"\"\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\nSample Output 4:\n0 7 8 11 15 16 19\n\"\"\") == \"\"\"\n0 7 8 11 15 16 19\n\"\"\"\n\nassert solution(\"\"\"\n4 9\n3 8\n2 7\n3 8\n5 100\n\"\"\") == \"\"\"\n1 8 9 9 100 101 108 109 109\n\"\"\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19'\n'''"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\nassert solution('''5 7\n2 2\n3 8\n2 7\n2 4\n3 8\nSample Output 3:\n0 7 8 11 15 16 19\n''') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 9\n2 8\n1 1\n3 4\n5 100\n\"\"\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"\"\"\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\nSample Output 3:\n\"\"\") == \"\"\nassert solution(\"\"\"\n10 4\n1 2\n2 3\n3 5\n6 7\n8 9\n10 11\n12 13\n14 15\n16 17\n18 19\n20 21\n22 23\n24 25\n26 27\n28 29\n30 31\n32 33\n34 35\n36 37\n38 39\n40 41\n42 43\n44 45\n46 47\n48 49\n50 51\n52 53\n54 55\n56 57\n58 59\n60 61\n62 63\n64 65\n66 67\n68 69\n70 71\n72 73\n74 75\n76 77\n78 79\n80 81\n82 83\n84 85\n86 87\n88 89\n90 91\n92 93\n94 95\n96 97\n98 99\n\"\"\") == \"0 0 3 4 7 9 14 22 25 30 39 44 47 50 51 54 57 60 62 67 69 71 72 76 77 78 79 80 82 84 85 86 87 89 90 91 92 94 95 96 98 99\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline().strip()\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 10') == '10'\nassert solution('4 5') == '5'\nassert solution('5 7') == '7'\nassert solution('2 2') == '2'\nassert solution('4 5') == '5'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 9') == '1 8 9 9 100 101 108 109 109'\n\nassert solution('5 7') == '0 7 8 11 15 16 19'\n\n\n--\nfrom typing import *"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 7\n2 2\n3 8\n2 7\n2 4\n3 8''') == '0 7 8 11 15 16 19'\nassert solution('''10 5\n1 1\n3 4\n5 100\n7 100\n9 100\n11 100\n13 100\n15 100\n17 100\n19 100\n21 100\n23 100\n25 100\n27 100\n29 100\n31 100\n33 100\n35 100\n37 100\n39 100\n41 100\n43 100\n45 100\n47 100\n49 100\n51 100\n53 100\n55 100\n57 100\n59 100\n61 100\n63 100\n65 100\n67 100\n69 100\n71 100\n73 100\n75 100\n77 100\n79 100\n81 100\n83 100\n85 100\n87 100\n89 100\n91 100\n93 100\n95 100\n97 100\n99 100\n101 100\n103 100\n105 100\n107 100\n109 100\n111 100\n113 100\n115 100\n117 100\n119 100\n121 100\n123 100\n125 100\n127 100\n129 100\n131 100\n133 100\n135 100\n137 100\n139 100\n141 100\n143 100\n145 100\n147 100\n149 100\n151 100\n153 100\n155 100\n157 100\n159 100\n161 100\n163 100\n165 100\n167 100\n169 100\n171 100\n173 100\n175 100\n177 100\n179 100\n181 100\n183 100\n185 100\n187 100\n189 100\n191 100\n193 100\n195 100\n197 100\n199 100\n201 100\n203 100\n205 100\n207 100\n209 100\n211 100\n213 100\n215 100\n217 100\n219 100\n221 100\n223 100\n225 100\n227 100\n229 100\n231 100\n233 100\n235 100\n237 100\n239 100\n241 100\n243 100\n245 100\n247 100\n249 100\n251 100\n253 100\n255 100\n257 100\n259 100\n261 100\n263 100\n265 100\n267 100\n269 100\n271 100\n273 100\n275 100\n277 100\n279 100\n281 100\n283 100\n285 100\n287 100\n289 100\n291 100\n293 100\n295 100\n297 100\n299 100\n301 100\n303 100\n305 100\n307 100\n309 100\n311 100\n313 100\n315 100\n317 100\n319 100\n321 100\n323 100\n325 100\n327 100\n329 100\n331 100\n333 100\n335 100\n337 100\n339 100\n341 100\n343 100\n345 100\n347 100\n349 100\n351 100\n353 100\n355 100\n357 100\n359 100\n361 100\n363 100\n365 100\n367 100\n369 100\n371 100\n373 100\n375 100\n377 100\n379 100\n381 100\n383 100\n385 100\n387 100\n389 100\n391 100\n393 100\n395 100\n397 100\n399 100\n401 100\n403 100\n405 100\n407 100\n409 100\n411 100\n413 100\n415 100\n417 100\n419 100\n421 100\n423 100\n425 100\n427 100\n429 100\n431 100\n433 100\n435 100\n437 100\n439 100\n441 100\n443 100\n445 100\n447 100\n449 100\n451 100\n453 100\n455 100\n457 100\n459 100\n461 100\n463 100\n465 100\n467 100\n469 100\n471 100\n473 100\n475 100\n477 100\n479 100\n481 100\n483 100\n485 100\n487 100\n489 100\n491 100\n493 100\n495 100\n497 100\n499 100\n501 100\n503 100\n505 100\n507 100\n509 100\n511 100\n513 100\n515 100\n517 100\n519 100\n521 100\n523 100\n525 100\n527 100\n529 100\n531 100\n533 100\n535 100\n537 100\n539 100\n541 100\n543 100\n545 100\n547 100\n549 100\n551 100\n553 100\n555 100\n557 100\n559 100\n561 100\n563 100\n565 100\n567 100\n569 100\n571 100\n573 100\n575 100\n577 100\n579 100\n581 100\n583 100\n585 100\n587 100\n589 100\n591 100\n593 100\n595 100\n597 100\n599 100\n601 100\n603 100\n605 100\n607 100\n609 100\n611 100\n613 100\n615 100\n617 100\n619 100\n621 100\n623 100\n625 100\n627 100\n629 100\n631 100\n633 100\n635 100\n637 100\n639 100\n641 100\n643 100\n645 100\n647 100\n649 100\n651 100\n653 100\n655 100\n657 100\n659 100\n661 100\n663 100\n665 100\n667 100\n669 100\n671 100\n673 100\n675 100\n677 100\n679 100\n681 100\n683 100\n685 100\n687 100\n689 100\n691 100\n693 100\n695 100\n697 100\n699 100\n701 100\n703 100\n705 100\n707 100\n709 100\n711 100\n713 100\n715 100\n717 100\n719 100\n721 100\n723 100\n725 100\n727 100\n729 100\n731 100\n733 100\n735 100\n737 100\n739 100\n741 100\n743 100\n745 100\n747 100\n749 100\n751 100\n753 100\n755 100\n757 100\n759 100\n761 100\n763 100\n765 100\n767 100\n769 100\n771 100\n773 100\n775 100\n777 100\n779 100\n781 100\n783 100\n785 100\n787 100\n789 100\n791 100\n793 100\n795 100\n797 100\n799 100\n801 100\n803 100\n805 100\n807 100\n809 100\n811 100\n813 100\n815 100\n817 100\n819 100\n821 100\n823 100\n825 100\n827 100\n829 100\n831 100\n833 100\n835 100\n837 100\n839 100\n841 100\n843 100\n845 100\n847 100\n849 100\n851 100\n853 100\n855 100\n857 100\n859 100\n861 100\n863 100\n865 100\n867 100\n869 100\n871 100\n873 100\n875 100\n877 100\n879 100\n881 100\n883 100\n885 100\n887 100\n889 100\n891 100\n893 100\n895 100\n897 100\n899 100\n901"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"5 7\") == \"0 7 8 11 15 16 19\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '1 2 3'\nassert solution('5 7') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('1 5 3') == '2'\nassert solution('5 5 3') == '2'\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"1 5 3 0\") == \"2\"\nassert solution(\"1 5 3 -3\") == \"1\"\nassert solution(\"1 5 3 0 3\") == \"2\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n''') == '1'\nassert solution('''\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '2'\n\n'''\n\n\"\"\"\n    n, m, r = map(int, input().split())\n    villages = []\n    minions = []\n\n    for i in range(n):\n        x, y, r = map(int, input().split())\n        villages.append((x, y, r))\n\n    for i in range(m):\n        x, y, r = map(int, input().split())\n        minions.append((x, y, r))\n\n    count = 0\n    for village in villages:\n        for minion in minions:\n            if is_attack(village, minion, r):\n                count += 1\n    return str(count)\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('1 5 3') == '3'\nassert solution('1 100 100') == '1'\nprint('Congratulations, have solved the problem!')\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('1 5 3') == '1'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"1 5 3\") == \"3\"\nassert solution(\"1 5 3 0\") == \"3\"\nassert solution(\"1 5 3 -3\") == \"3\"\nassert solution(\"1 5 3 0 -3\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\") == \"2\"\nassert solution(\"1 5 3\\n0 0 1\\n3 -3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n3 -3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 -3\\n3 0\") == \"1\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"1 5 5\") == \"3\"\n\n\"\"\"\nfrom collections import deque\n\nfor i in range(int(input())):\n    n, m, r = map(int, input().split())\n    x, y, r = map(int, input().split())\n    for j in range(n):\n        if (x - j) ** 2 + (y - i) ** 2 <= r ** 2:\n            m -= 1\n    print(m)\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('1 5 3') == '3'\nassert solution('1 5 3') == '3'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10000') == '4'\nassert solution('5 9') == '2'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 10\n1\n1\n1\n1\n1''') == '4'\nassert solution('''5 20\n1\n1\n1\n1\n1\n1''') == '4'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10') == '4 2'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 10000\\n1\") == \"4\\n\"\nassert solution(\"5 9\\n1\\n10\\n1\") == \"2\\n0\\n0\\n2\\n0\\n\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 9') == '4'\nassert solution('3 3') == '2'\nassert solution('4 10') == '0'\n\nstdin = \"\"\"\n10 10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\"\"\"\n\nassert solution(stdin) == '5'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2'\nassert solution('3') == '0'\nassert solution('7') == '1'\nassert solution('6') == '0'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2 4 2 2 2\""
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10000') == '4'\nassert solution('5 9') == '2'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 10000\n1\n1\n1\n1\n1\n''') == '4 4 4 4 0 2 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10000') == '4'\nassert solution('5 9') == '2'\nassert solution('1') == '0'\nassert solution('10') == '0'\nassert solution('100') == '0'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2',\n    'ne',\n) == 'NE', \"First\"\n\nassert solution(\n    '4',\n    'kava',\n) == 'DA', \"Second\"\n\nassert solution(\n    '6',\n    'kava',\n) == 'ak', \"Third\"\n\nassert solution(\n    '5',\n    'ne',\n) == 'NE', \"Fourth\"\n\nassert solution(\n    '8',\n    'ne',\n) == 'DA', \"Fifth\""
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"DA\", \"Test #1 failed\"\nassert solution(\"4\") == \"NE\", \"Test #2 failed\"\nassert solution(\"7\") == \"DA\", \"Test #3 failed\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nne\nak\nka\nake\naka\n''') == 'DA'\nassert solution('''2\nne\nak\n''') == 'NE'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\nne\n''') == 'NE'\nassert solution('''4\nkava\n''') == 'DA'\nassert solution('''6\nne\n''') == 'DA'\nassert solution('''10\nne\n''') == 'NE'\n\n##<----------------------------------DO NOT EDIT----------------------------------->\nimport sys\nimport os\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 4') == '2'\nassert solution('4 4 4') == '0'"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2''') == '2'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8''') == '0'\nassert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2''') == '2'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4 4') == '2'\nassert solution('8 10 4') == '3'\nassert solution('10 50 10 50') == '0'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\n\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\nSample Output 2:\n0\n0\n3\n2\n''') == '3'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 9 9\") == \"2\", 'Square'\nassert solution(\"6 9 2\") == \"0\", 'Triangle'\nassert solution(\"8 10 4\") == \"2\", 'Rectangle'\nassert solution(\"8 10 4\") == \"2\", 'Rectangle'\nassert solution(\"4 4 4\") == \"2\", 'Square'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 2') == '1'\nassert solution('10 10 4') == '2'\nassert solution('4 4 4') == '3'\nassert solution('8 10 4') == '1'\nassert solution('20 20 4') == '2'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '1'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n\"\"\") == \"2\"\nassert solution(\"\"\"8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2', 'test 1 failed'\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '1', 'test 2 failed'\nassert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '0', 'test 3 failed'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution() == '1'"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nassert solution('''\n2 3\n2 1 1\n2 1 2\n0 1\n1 0 1\n1 0 2\n1 0 3\n1 1\n''') == '1'\nassert solution('''\n5 5\n1 1 1 1 1\n1 1 2 1\n1 1 2 2\n1 1 3 2\n1 1 4 3\n1 1 5 3\n1 2 2 1\n1 2 3 1\n1 2 4 1\n1 2 5 1\n1 3 3 1\n1 3 4 1\n1 3 5 1\n1 4 4 1\n1 4 5 1\n1 5 5 1\n2 2 1 1\n2 2 2 1\n2 2 3 1\n2 2 4 1\n2 2 5 1\n2 2 6 1\n2 3 3 1\n2 3 4 1\n2 3 5 1\n2 3 6 1\n2 4 4 1\n2 4 5 1\n2 4 6 1\n2 5 5 1\n2 5 6 1\n2 6 6 1\n''') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nprint(\"Solution: %s\" % solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n'''))\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_1) == \"1\"\nassert solution(input_2) == \"2\"\nprint(\"all tests passed\")\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2'\nprint('PASSED')\n\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nprint('PASSED')\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '49.000000000'\nassert solution('7 1\\nC 1\\nD 6\\nC 3\\nD 4\\nC 5\\nD 7\\nC 7\\nD 9\\nC 9\\nD 10\\n') == '10.000000000'\nprint('all tests passed')\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000'\nassert solution('''\n1 25\nD 1 5\nC 1 2\n''') == '55.0000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1') == '40.500000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '49.000000000'"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 15') == '40.5'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '40.500000000'\nassert solution('''\n3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '40.500000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '49.000000000'\nassert solution('4 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == 'impossible'\nprint('All test cases passed')\n\n'''"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 15\\n\"\n    \"D 4 10 1\\n\"\n    \"C 6 1\\n\"\n    \"C 9 3\"\n) == \"49.000000000\"\nassert solution(\n    \"3 15\\n\"\n    \"D 4 10 1\\n\"\n    \"C 6 1\\n\"\n    \"C 9 3\"\n) == \"impossible\"\nassert solution(\n    \"5 10\\n\"\n    \"D 4 10 1\\n\"\n    \"C 6 1\\n\"\n    \"C 9 3\\n\"\n    \"D 5\\n\"\n    \"C 6 1\\n\"\n    \"C 9 3\"\n) == \"impossible\"\nassert solution(\n    \"4 15\\n\"\n    \"D 4 10 1\\n\"\n    \"C 6 1\\n\"\n    \"D 9 2\"\n) == \"impossible\"\nassert solution(\n    \"6 15\\n\"\n    \"D 4 10 1\\n\"\n    \"C 6 1\\n\"\n    \"C 9 2\\n\"\n    \"D 9 3\\n\"\n    \"C 9 1\\n\"\n    \"C 6 1\"\n) == \"49.000000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '40.500000000'\nassert solution('5 10\\nD 4 10 1\\nC 6 1\\nC 9 3\\nC 5 10\\nD 4 10 1') == '43.600000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nD 6 4\\n') == 'impossible'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1\n''') == '40.500000000'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '40.500000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '49.000000000'\n\n\"\"\"\n\nimport re\nimport math\nimport itertools\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\n\"\n                \"a 2 10 3\\n\"\n                \"b 1 6\\n\"\n                \"c 2 1 5\\n\"\n                \"d 1 9\\n\"\n                \"e 1 4\\n\"\n                \"f 1 2\\n\"\n                \"g 2 6 8\\n\"\n                \"h 0\\n\"\n                \"i 1 3\\n\"\n                \"j 1 7\\n\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n\\\na 2 10 3\\n\\\nb 1 6\\n\\\nc 2 1 5\\n\\\nd 1 9\\n\\\ne 1 4\\n\\\nf 1 2\\n\\\ng 2 6 8\\n\\\nh 0\\n\\\ni 1 3\\n\\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\n'''"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('2\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"fail\"\nassert solution(r\"5 4 9 3 1 10 7 6 2\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nprint(solution(r\"5 4 9 3 1 10 7 6 2\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\"))"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n'\n    'a 2 10 3\\n'\n    'b 1 6\\n'\n    'c 2 1 5\\n'\n    'd 1 9\\n'\n    'e 1 4\\n'\n    'f 1 2\\n'\n    'g 2 6 8\\n'\n    'h 0\\n'\n    'i 1 3\\n'\n    'j 1 7\\n') == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\n''')\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\nprint(solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n'''))"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00:00') == '3'\nassert solution('00:08') == '3'\n\n---\nSample Input 1:\n00:00\n00:00\nSample Output 1:\n1\n00:00\n00:01\nSample Input 2:\n00:00\n00:00\nSample Output 2:\n2\n00:00\n00:01\nSample Input 3:\n00:00\n00:00\nSample Output 3:\n2\n00:00\n00:01\nSample Input 4:\n00:00\n00:00\nSample Output 4:\n2\n00:00\n00:01\nSample Input 5:\n00:00\n00:00\nSample Output 5:\n2\n00:00\n00:01\nSample Input 6:\n00:00\n00:00\nSample Output 6:\n2\n00:00\n00:01\nSample Input 7:\n00:00\n00:00\nSample Output 7:\n2\n00:00\n00:01\nSample Input 8:\n00:00\n00:00\nSample Output 8:\n2\n00:00\n00:01\nSample Input 9:\n00:00\n00:00\nSample Output 9:\n2\n00:00\n00:01\nSample Input 10:\n00:00\n00:00\nSample Output 10:\n2\n00:00\n00:01\nSample Input 11:\n00:00\n00:00\nSample Output 11:\n2\n00:00\n00:01\n\n\"\"\""
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('00:00\\n01:01') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('00:00\\n00:00') == '1'\nassert solution('00:00\\n01:01') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\nassert solution('00:08') == '3'\nassert solution('00:00') == '3'\nassert solution('00:09') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\"\nassert solution(\"00:08\\n00:00\") == \"3\""
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"00:00\") == '3'\nassert solution(\"01:01\") == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\"\nassert solution(\"00:08\\n00:00\") == \"3\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('00:00') == '3\\n00:00\\n00:00\\n'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n'\nassert solution('01:01') == '2\\n00:01\\n00:01\\n'\nassert solution('01:00') == '2\\n00:01\\n00:00\\n'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"01:01\") == \"3\"\nassert solution(\"00:08\") == \"3\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\n\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''((((((()))))\n    ''') == '6,3:6,3:''')\n\nassert solution('''((((((()))))\n    ''') == '4,3:4,3:''')\n\nassert solution('''((((((()))))\n    ''') == '4,4:''')\n\nassert solution('''((((((()))))\n    ''') == '4,4:''')\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''(((()\n''') == '4,8:8,8:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\", \"Sample Case 1\"\nassert solution(\"())\") == \"4,4:\", \"Sample Case 2\""
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('(())') == '4,8:8,8:', '3,4:', '2,2:', '1,1:'\nassert solution('()') == '4,4:', '2,2:'\nassert solution('(())()') == '4,4:4,8:8,8:', '3,4:2,2:', '2,2:1,1:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''((()))''') == '4,8:8,8:', 'Wrong!'\nassert solution('''((())''') == '4,8:8,8:', 'Wrong!'\nassert solution('''(((()()()))''') == '4,8:8,8:', 'Wrong!'\nassert solution('''(((()()())(()(((()())((()))))))(((()())(((((())))))))''') == '4,8:8,8:', 'Wrong!'"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''((()(()()))(((())()))''') == '4,4:8,8:8,8:8:8,8:8:8:8:8,8:8:'', 'String input'\nassert solution('''((()(()))(((())()))''') == '4,4:8,8:8,8:8:8,8:8:8,8:8:8,8:8:'', 'String input'\nassert solution('''((()(()))(((()))(((())))''') == '4,4:8,8:8,8:8:8,8:8:8,8:8:8,8:8:8,8:8:'', 'String input'\nassert solution('''((()(()))(((()()))(((())))''') == '4,4:8,8:8,8:8:8,8:8:8,8:8:8,8:8:8,8:8:8,8:8:8,8:8:'', 'String input'\nassert solution('''((()(()))(((()()))(((())))''') == '4,4:8,8:8,8:8:8,8:8:8,8:8:8,8:8:8,8:8:8,8:8:8,8:8:8,8:8:8,8:8:'', 'String input'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('()') == '4,8:'\nassert solution('(())') == '4,8:'\nassert solution('((()))') == '4,4:4,4:'\nassert solution(')(') == '4,4:'\nassert solution('))') == '4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 1\n26 02 03 03 1\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n1 1\n26 02 03 03 2\n\"\"\") == \"185\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '-1'\nassert solution(\"1 1\\n26 02 03 03 1\\n\") == '5'\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == '185'"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5', 'First'\nassert solution('''\n1 1\n26 02 03 03 2\n''') == '185', 'Second'"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5'\nassert solution('''\n1 1\n26 02 03 03 2\n''') == '185'\n\nassert solution('''\n3 3\n5 1 5 3\n4 2 4 4 3\n4 4 4 4 4\n''') == '-1'\n\nassert solution('''\n3 1\n26 02 03 03 1\n''') == '-1'\n\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 4 2 5\n1 2 5 2 4\n2 3 2 4 5\n2 3 4 4 5\n2 4 5 2 3\n3 4 5 2 3\n4 4 5 2 3\n5 5 4 2 3\n''') == '-1'"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '5', \"Wrong\"\nassert solution('1 1') == '-1', \"Wrong\""
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '5'\nassert solution('1 1') == '5'\nassert solution('2 3') == '-1'\nassert solution('3 5') == '5'"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n26 02 03 03 1\nSample Input 3:\n3 3\n15 17 18 19\nSample Output 3:\n7''') == '7'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n26 02 03 03 1\nSample Input 3:\n2 2\n10 01 03 03 03 01 03 03 03 03 01 03 03 03 01 03 03\nSample Output 3:\n10\n\nSample Input 4:\n2 2\n10 01 03 03 03 03 01 03 03 03 01 03 03 03 01 03 03\nSample Output 4:\n-1\n''') == '-1'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '5'\nassert solution('1 1') == '-1'"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n1 1\\n\") == \"1 2\"\n\nn, k = map(int, stdin.split())\n\ndp = [[0 for _ in range(n+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    dp[i][i] = 0\n\nfor i in range(1, n):\n    for j in range(1, n):\n        dp[i][j] = dp[i][j-1] + dp[i-1][j-1]\n        if j > i:\n            dp[i][j] += dp[i][j-i]\n\nfor _ in range(k):\n    x, y = map(int, stdin.split())\n    print(dp[x][y])\n\nstdin = input()\nn, k = map(int, stdin.split())\n\ndp = [[0 for _ in range(n+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    dp[i][i] = 0\n\nfor i in range(1, n):\n    for j in range(1, n):\n        dp[i][j] = dp[i][j-1] + dp[i-1][j-1]\n        if j > i:\n            dp[i][j] += dp[i][j-i]\n\nfor _ in range(k):\n    x, y = map(int, stdin.split())\n    print(dp[x][y])\n\nstdin = input()\nn, k = map(int, stdin.split())\n\ndp = [[0 for _ in range(n+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    dp[i][i] = 0\n\nfor i in range(1, n):\n    for j in range(1, n):\n        dp[i][j] = dp[i][j-1] + dp[i-1][j-1]\n        if j > i:\n            dp[i][j] += dp[i][j-i]\n\nfor _ in range(k):\n    x, y = map(int, stdin.split())\n    print(dp[x][y])\n\nstdin = input()\nn, k = map(int, stdin.split())\n\ndp = [[0 for _ in range(n+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    dp[i][i] = 0\n\nfor i in range(1, n):\n    for j in range(1, n):\n        dp[i][j] = dp[i][j-1] + dp[i-1][j-1]\n        if j > i:\n            dp[i][j] += dp[i][j-i]\n\nfor _ in range(k):\n    x, y = map(int, stdin.split())\n    print(dp[x][y])\n\nstdin = input()\nn, k = map(int, stdin.split())\n\ndp = [[0 for _ in range(n+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    dp[i][i] = 0\n\nfor i in range(1, n):\n    for j in range(1, n):\n        dp[i][j] = dp[i][j-1] + dp[i-1][j-1]\n        if j > i:\n            dp[i][j] += dp[i][j-i]\n\nfor _ in range(k):\n    x, y = map(int, stdin.split())\n    print(dp[x][y])\n\nstdin = input()\nn, k = map(int, stdin.split())\n\ndp = [[0 for _ in range(n+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    dp[i][i] = 0\n\nfor i in range(1, n):\n    for j in range(1, n):\n        dp[i][j] = dp[i][j-1] + dp[i-1][j-1]\n        if j > i:\n            dp[i][j] += dp[i][j-i]\n\nfor _ in range(k):\n    x, y = map(int, stdin.split())\n    print(dp[x][y])\n\nstdin = input()\nn, k = map(int, stdin.split())\n\ndp = [[0 for _ in range(n+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    dp[i][i] = 0\n\nfor i in range(1, n):\n    for j in range(1, n):\n        dp[i][j] = dp[i][j-1] + dp[i-1][j-1]\n        if j > i:\n            dp[i][j] += dp[i][j-i]\n\nfor"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '1 2 3 4 5'"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\nassert solution('''6 2\n3 4 5 6 1 2\n''') == '2 3 4 1'"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2') == '5 6 1 2 3 4'\nassert solution('4 2') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2') == '5 6 1 2 3 4'\nassert solution('4 2') == '2 3 4 1'\n\n------------------"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5 6 1 2 3 4'"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Impossible\"\nassert solution(\"6 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\") == \"2 3 4 1\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2') == '5 6 1 2 3 4'\nassert solution('4 2') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '5 6 1 2 3 4'\nassert solution('5 2') == '2 3 4 1'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\") == \"5123\", \"Wrong\"\nassert solution(\"8 1\") == \"8124\", \"Wrong\"\nassert solution(\"40 1\") == \"4022\", \"Wrong\"\nassert solution(\"48 1\") == \"4823\", \"Wrong\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\"\nassert solution(\"5 0\") == \"5 0\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\n\nstdin = '1374 2'\nprint(solution(stdin))\n\nstdin = '210 1'\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == \"54321\"\nassert solution(\"21 7\") == \"74321\"\nassert solution(\"1024 1\") == \"1025\"\nassert solution(\"0 0\") == \"0 0\"\nassert solution(\"9000 0\") == \"9999\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1374 2\n''') == '7413'\nassert solution('''\n210 1\n''') == '201'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1374 2\nSample Input 1:\n1374 2\nSample Output 1:\n7413\nSample Input 2:\n210 1\nSample Output 2:\n201\n''') == '201'"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n0 0\n0 1\n1 1\n1 0\n''') == '0.666666666666667'\nassert solution('''3\n0 0\n1 1\n2 0\n''') == '0.733333333333333'\nprint(solution('''4\n0 0\n0 1\n1 1\n1 0\n'''))"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 1\n1 0\n''') == '0.666666666666667'\nassert solution('''\n3\n0 0\n1 1\n2 0\n''') == '0.733333333333333'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0.8'\nassert solution('4') == '0.666666666666667'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n0 0\\n1 1\\n2 0') == '0.733333333333333'\nassert solution('5\\n0 0\\n1 1\\n2 0') == '0.733333333333333'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0 0\n0 1\n1 1\n1 0''') == '0.666666666666667'\nassert solution('''4\n0 0\n0 1\n1 1\n1 0\nSample Output 3:\n0.666666666666667''') == '0.733333333333333'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 1\n1 0\n''') == '0.666666666666667'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n0 0\n0 1\n1 1\n1 0\n''') == '0.5000000000000004', 'wrong answer'\nassert solution('''8\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n''') == '0.777777777777777', 'wrong answer'\nprint('All test cases passed')"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'\nassert solution('3\\n0 0\\n1 1\\n2 0') == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '0.666666666666667'\nassert solution('3') == '0.733333333333333'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0.5000000000000003'\nassert solution('3') == '0.666666666666667'\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3 4\n10 1 3\n0 1 20''') == '9'\nassert solution('''2 3 100\n10 1 10\n10 1 10''') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 4') == '9'\nassert solution('2 3 100') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20') == '9'\nassert solution('2 3 100\\n10 1 10\\n10 1 10') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 4') == '9'\nassert solution('2 3 100') == '21'\nassert solution('2 3 100000') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 4\n10 1 3\n0 1 20\n10 1 10''') == \"9\"\nassert solution('''3 4 4\n10 1 3\n10 1 10\n0 1 20''') == \"21\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 4 4\n10 1 2\n0 1 10\n5 2 5\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3 2 3\n2 2 4\n1 5 1\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 4') == '9'\nassert solution('2 3 100') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 4') == '9'\nassert solution('2 3 100') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 100\\n10 1 3\\n10 1 20\") == \"21\"\nassert solution(\"3 3 100\\n10 1 10\\n10 1 10\") == \"21\"\nassert solution(\"5 5 100\\n10 1 10\\n10 1 10\\n10 1 20\\n10 1 10\") == \"21\"\nassert solution(\"5 5 100\\n10 1 10\\n10 1 20\\n10 1 20\\n10 1 10\") == \"21\"\nassert solution(\"5 5 100\\n10 1 10\\n20 1 20\\n20 1 10\\n20 1 10\\n10 1 10\") == \"21\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 4') == '9'\nassert solution('2 3 100') == '21'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'\n\"\"\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 7 4 -\") == \"2\"\nassert solution(\"7 3 4 -\") == \"5\"\nassert solution(\"2 5 7 -\") == \"1\"\nassert solution(\"4 3 2 -\") == \"0\"\nassert solution(\"3 4 4 -\") == \"1\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 1\") == \"3\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n9 2 7 -\n1 1 1 2\n''') == '4'\nassert solution('''\n8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''\n9 2 7 -\n1 1 1 2\n''') == '0'\nassert solution('''\n9 2 7 -\n1 1 2 1\n''') == '0'\n''')"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 10 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''\n10 10 2 7 -\n1 1 1 2\n''') == '4'\nassert solution('''\n8 10 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''\n8 10 2 7 -\n1 1 1 2\n''') == '4'\nassert solution('''\n10 10 2 7 -\n1 1 1 2\n''') == '4'"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n\"\"\""
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_1) == \"2\"\nassert solution(input_2) == \"4\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n\n'''"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 5\n2 3 5\n3 4 5\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n5\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n5 6 8\n\"\"\"\n) == \"4\""
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution('''\n3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '4'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '2'\nassert solution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '3'\nassert solution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '4'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"3\"\nassert solution(\"7 7\") == \"2\"\nassert solution(\"20 20\") == \"1\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"4 4\") == \"2\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 5\\n2 3 5\\n3 4 5') == '3'\nassert solution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '2'"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '3'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '1'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"6\"\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4\\n') == '1'\nassert solution('2 3\\n') == '6'"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 4\\n') == '6'\nassert solution('2 4\\n') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\nassert solution('12 3') == '65891'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == '24'\nassert solution('3 1') == '6'\nassert solution('1 4') == '0'"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"24\""
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n''') == '2'\nassert solution('''\n5 4 5 1 2\n''') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution(stdin=\"2\\n1 2\") == \"2\"\nassert solution(stdin=\"5\\n3 4 5 1 2\") == \"1\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1 2') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('5\\n3 4 5 1 2') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 2\n''') == '2'\nassert solution('''\n5\n3 4 5 1 2\n''') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\""
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1 2\n''') == '1'\nassert solution('''\n5\n3 4 5 1 2\n''') == '2'\nprint('Tests passed!')\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '2'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '9', \"First\"\nassert solution('''\n3 3\n1 3 1\n2 1 2\n1 1 1\n''') == '4', \"Second\"\nassert solution('''\n5 4\n1 2 3 5\n4 5 2 6\n7 8 9 5\n1 2 3 4\n5 4 3 2\n''') == '0', \"Third\""
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\n\nassert solution('''\n1\n1\n1\n''') == '1'\n\nassert solution('''\n4\n3\n1\n3\n1\n''') == '5'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\n\nassert solution('''\n3 3\n1 3 1\n2 1 2\n1 1 1\n''') == '4'\n\nassert solution('''\n4 4\n1 3 1\n2 1 2\n3 1 3\n4 1 4\n''') == '3'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"9\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"1 1 1\") == \"3\"\nassert solution(\"1 1 1 2\") == \"3\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 3\\n1 1 1') == '4'\nassert solution('3 3\\n1 4 5\\n5 2 3\\n2 2 2') == '1'\nprint(solution(input()))\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"10 10\\n1 2 1\\n2 1 2\\n1 1 1\\n\") == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 4 10\\n5 2 6\\n11 1 3\\n') == '9'\nassert solution('4 4\\n1 2 4\\n3 2 5\\n4 2 6\\n') == '4'\nassert solution('4 3\\n3 5 3\\n4 4 6\\n') == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n') == '4'\nprint(solution(input()))"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nprint('PASSED')"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 1 3 4') == '6'\nassert solution('3 3 1 2') == '3'\nassert solution('4 4 1 2') == '4'\nassert solution('4 3 1 2') == '2'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\n\n\"\"\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '3'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"5\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4') == '6'\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4') == '3'\nassert solution('4\\n5 4 5 6\\n1 2\\n1 3\\n2 4') == '2'\nassert solution('4\\n6 4 5 6\\n1 2\\n1 3\\n2 4') == '1'\nassert solution('4\\n7 4 5 6\\n1 2\\n1 3\\n2 4') == '0'\n\"\"\""
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3') == '6'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 10\n1 2\n2 1\n''') == '18'\nassert solution('''\n3\n17 144\n121 121\n89 98\n''') == '265'\nassert solution('''\n5\n8 8\n1 3\n3 8\n3 4\n7 6\n4 6\n''') == '10'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 10') == '18'\nassert solution('2 5') == '10'\nassert solution('3 17') == '265'\nassert solution('4 121') == '25'\nassert solution('5 89') == '10'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 10\\n5 8\\n') == '18\\n8\\n'\nassert solution('3\\n17 144\\n121 121\\n89 98\\n') == '265\\n25\\n10\\n'"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 10') == '18'\nassert solution('3 17 144') == '265'\nassert solution('2 1 10') == '8'\nassert solution('3 1 121 121') == '25'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 10\n5 8\n8 16\n9 25\n7 32\n''') == '18'\nassert solution('''\n4\n1 10\n5 8\n9 25\n7 32\n''') == '265'\nassert solution('''\n2\n1 10\n5 8\n''') == '8'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 10\\n5 8\\n') == '18'\nassert solution('2 1\\n10 8\\n') == '25'\nassert solution('3 1\\n17 144\\n121 121\\n89 98\\n') == '265'\nassert solution('4 1\\n17 144\\n121 121\\n89 98\\n') == '25'\nassert solution('5 1\\n17 144\\n121 121\\n89 98\\n') == '10'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10\\n5 8') == '18'\nassert solution('2 17\\n1 121\\n5 89') == '265'\nassert solution('3 17\\n17 121\\n89 98') == '265'\nassert solution('4 17\\n1 121\\n5 89\\n7 8') == '10'\nassert solution('5 17\\n1 121\\n5 89\\n7 8\\n11 14') == '8'"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '18'\nassert solution('''\n3\n17 144\n121 121\n89 98\n''') == '265'\n\n'''\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 10\n5 8\n''') == '18'\nassert solution('''3\n17 144\n121 121\n89 98\n''') == '265'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 8\n1 10\n5 8\n1 10\n5 8\n1 10\n''') == '265'\nassert solution('''\n6\n5 8\n3 1\n4 2\n1 1\n2 2\n5 8\n''') == '263'\nassert solution('''\n1\n1\n''') == '1'\nprint('All tests passed!')\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'\nprint('all tests passed')"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"0.50000000\"\nassert solution(\"5 5\") == \"12.50000000\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n0 0\n1 1\n2 1\n1 0\n''') == '0.50000000'\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\nassert solution('''\n4 1\n1 1\n2 1\n1 0\n''') == '0.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '0.5'\nassert solution('5 5') == '12.5'\nassert solution('3 3') == '0.5'\nassert solution('10 10') == '125.0'"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"0.50000000\"\nassert solution(\"5 5\") == \"12.50000000\""
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1 3\") == \"2\"\nassert solution(\"4 0 4\") == \"1\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1''') == '2'\n\nassert solution('''4 1 3\n0 1\n1 2\n2 3\n1''') == '1'\n\nassert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n0 0 0''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '1'\n'''"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1 3') == '2'\nassert solution('4 0 4') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1 3\") == \"2\"\nassert solution(\"4 0 4\") == \"1\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''\n4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 1 3\n0 1\n1 2\n2 3\n1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 0 4\n0 2\n0 1\n2 1\n2 3\n\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n\nassert solution(\"\"\"\n3 1 5\n0 2\n1 2\n1 3\n2 2\n0 4\n1 5\n1 6\n0 4\n2 7\n0 4\n1 6\n2 4\n0 4\n\"\"\") == '2'\n\nassert solution(\"\"\"\n5 5 4\n1 2\n1 3\n1 4\n2 4\n1 4\n2 3\n1 3\n0 4\n1 5\n0 1\n2 3\n1 5\n1 6\n0 1\n\"\"\") == '2'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 1\n3 1 1\n1 1 2\n4 4 4\n''') == '6'\nassert solution('''\n2\n2 2\n2 2\n''') == '12'\nprint(solution(stdin))"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 1\n''') == '6'\nassert solution('''\n2 2 2\n''') == '30'"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"6\""
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1\\n') == '6\\n'\nassert solution('2 2 2\\n') == '30\\n'\nprint(solution(input()))\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 3\") == \"13\"\nassert solution(\"2 2 2\") == \"13\"\n\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 2 2\") == \"2\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2020 2020 2020\nSample Input 2:\n2\n1 9999999\nSample Output 2:\nimpossible"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2021 2020 2020'\nassert solution('1') == '1'\nassert solution('2') == 'impossible'\nassert solution('100') == 'impossible'\nassert solution('999') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n2 4\n3 1\n1 2 3 4''') == \"impossible\"\nassert solution('''3\n2 4 5\n3 1\n1 2 3 4''') == \"3 1 2 4 5\"\nassert solution('''4\n1 1 1 1\n1 2 1 2\n1 3 1 3\n1 4 1 4''') == \"impossible\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == 'impossible'\nassert solution('''\n3\n1 9999999\n''') == '2021 2020 2020'\nassert solution('''\n6\n2020 2020 2020 2020 2020\n''') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n2020 2020 2020\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2\n1 9999999\n\"\"\") == \"2021 2020 2020\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2021 2020 2020'\nassert solution('2') == 'impossible'\nprint(solution(''))"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"2021 2020 2020\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"2021 2020 2020\""
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == 'impossible'\nassert solution('2\\n2 0 1\\n') == 'impossible'\nassert solution('2\\n10 0 1\\n') == 'impossible'\nassert solution('2\\n
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2021 2020 2020'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"11\""
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n4') == '1'\nassert solution('3\\n8') == '1'\nassert solution('4\\n9') == '0'\nassert solution('5\\n10') == '0'\n\n--python--\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0\") == '1'\nassert solution(\"1 1\") == '0'\nassert solution(\"1 0 0\") == '0'\nassert solution(\"1 1\") == '1'\nassert solution(\"1 2\") == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7\") == \"6\"\nassert solution(\"20 25\") == \"21\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''25 20\n50 25\n100 50\n10 20\n60 100\n''') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''20\n50\n50\n50\n20\n20\n20\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n20\n20\n20\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '30 70\\n'\n) == '11\\n'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n') == '1'\nassert solution('2\\n4\\n') == '1'\nassert solution('2\\n5\\n') == '2'\nassert solution('2\\n6\\n') == '2'\nassert solution('2\\n7\\n') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 20 50\") == \"3\"\nassert solution(\"10 20 50 10\") == \"2\"\nassert solution(\"50 50 50 50 50\") == \"2\"\n\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"10\"\nassert solution(\"0 9 1 2 3 4 5 6 7 8 9 10\") == \"9\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('3 3 0') == 'begin repairs'\nassert solution('3 4 0') == 'begin repairs'"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2 0\n>@\n>~\n''') == '2'\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n''') == '4'\nassert solution('''\n6 6 2\n>>>>~<\n>~#~<\n>~#~<\n>~#~<\n>~#~<\n>~#~<\n''') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 0\n>@''') == '2'\nassert solution('''3 5 1\n>>@<<''') == '4'\n\n''')"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nprint(solution(input()))"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 2 0\n>@\n>~\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3 5 1\n>>@<<\n>~#~<\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n8 3 0\n>@<#><#<#>\n>~#~<#~#~<\n<#>#>#~<#>\n
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '2'\nassert solution('2 3 2') == '4'\n\nstdin = \\\n\"\"\"\n2 2 0\n>@\n>~\n\"\"\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('2 4 2') == 'begin repairs'"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2'\nassert solution('3 5 1\\n>>@<<\\n>~#~<') == '4'\nassert solution('3 4 3\\n>#~<<<') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('6 3 5 4 5 1 6') == '6'"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nassert solution(\"1+2+3+4+5=10\") == \"1+2+3+4+5=10\""
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n\"\"\""
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''143175=120\nSample Input 1:\n143175=120\nSample Output 1:\n14+31+75=120''') == '14+31+75=120'\nassert solution('''5025=30\nSample Input 2:\n5025=30\nSample Output 2:\n5+025=30''') == '5+025=30'"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('2\\n3\\n4\\n1\\n5\\n6\\n7\\n1\\n') == '-1'\nprint(solution(input()))"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1'"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1 2\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"7\") == \"1\""
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('4 5') == '-1'\nassert solution('8 1') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '-1'"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8\\n1') == '1 2'\nassert solution('8\\n1\\n2') == '1 2'\nassert solution('8\\n1\\n2\\n3') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4') == '-1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1\n4\n2''') == '1 4'\nassert solution('''5\n3\n1\n2\n4''') == '-1'\nprint('All test cases passed.')"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1 2'\nassert solution('4') == '1 2 4'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2', 'Should be 1 2'\nassert solution('''\n8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '-1', 'Should be -1'\nassert solution('''\n8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '-1', 'Should be -1'\nassert solution('''\n8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2', 'Should be 1 2'"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1 2'\nassert solution('8') == '1 2'\nassert solution('1') == '-1'\nassert solution('8') == '1 2'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1011\n1111\n0110\n1''') == '2'\nassert solution('''10111\n111\n010\n1''') == '1'\nassert solution('''110101\n1000000\n111111\n1''') == '0'\nassert solution('''10111\n111\n011\n1''') == '1'\nassert solution('''10111\n111\n1110\n1''') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1101') == '1'\nassert solution('1111') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('00') == '0'\nassert solution('110') == '1'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3''') == '1\\n0\\n2\\n'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3') == '1\\n0\\n2'\nassert solution('4 1 6 3 6\\n7 3 4 2 6 5 6 1') == '2\\n3\\n0\\n1'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 1 3 1') == '1'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1 3 1\n3 2 1\n3 3 1 3\n1 2\n2 3''') == '2'\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1''') == '1'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 3') == '1'\nassert solution('3 4') == '0'\nassert solution('4 5') == '2'\nassert solution('3 5') == '3'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2''') == '1'\n\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3''') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 3 1') == '1'\nassert solution('2 1') == '0'\nassert solution('2 1') == '0'"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1'\n\nassert solution('''\n10 1\n10 1 3 1 2 3 1 1 3 2 4 2 1 2 3 1 2 4 1 1 3 1\n5 3\n6 2 5\n7 4 1\n3 6\n1 7\n4 5\n''') == '6'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '0'\nassert solution('2 1') == '1'\nassert solution('3 3') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 3 1') == '1'\nassert solution('2 1') == '0'\n\nassert solution('2 5 2 4 6 5 1') == '4'\nassert solution('3 7 4 1 6 5 1') == '0'\nassert solution('2 5 3 1 4 2 6') == '1'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '4.000000'\nassert solution('2 4 3 4') == '4.000000'\nassert solution('3 2 4 3 4') == '4.000000'\nassert solution('4 2 3 4') == '4.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '1.500000'\nassert solution('4 1') == '1.500000'\nassert solution('4 2') == '2.000000'\nassert solution('4 3') == '3.000000'\nassert solution('4 4') == '4.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 1\n1 2 3 4\n''') == '4.000000'\nassert solution('''\n4 2\n2 4 3 4\n''') == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\"\nassert solution(\"4 2\\n2 4 3 4\") == \"4.000000\"\n\"\"\""
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '1.5'\nassert solution('4 1') == '1.5'\nassert solution('4 2') == '2.5'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '4.000000'\nassert solution('4 2 3 4') == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3.0000'\nassert solution('4 1') == '4.000000'\nassert solution('5 2') == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n4 1\\n1 2 3 4') == '4.000000'\nassert solution('2\\n2 4 3 4\\n1 2 3 4') == '4.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 1\n1 2 3 4''') == '4.000000'\nassert solution('''3 2\n2 4 3''') == '3.666666'\nassert solution('''6 4\n1 2 3 4 5 6''') == '6.333333'\nassert solution('''8 3\n1 2 3 4 5 6 7 8''') == '4.333333'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1\\n2 3 4') == '3.333333'\nassert solution('4 1\\n2 3 4') == '3.666666'\nassert solution('2 4\\n2 3 4') == '3.666666'\nassert solution('5 4\\n2 3 4 5') == '4.333333'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"2 2 5 5\") == \"0.625\""
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('1 2 5 5') == '0.625'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n\"\"\") == \"0.750\"\nassert solution(\"\"\"\n4 4 3 2\n0.9 0.7 0.2 0.8\n0.5 0.5 0.3 0.4\n0.2 0.1 0.6 0.4\n0.6 0.1 0.3 0.2\n\"\"\") == \"0.100\"\nassert solution(\"\"\"\n4 4 3 2\n0.9 0.7 0.2 0.8\n0.5 0.5 0.3 0.4\n0.2 0.1 0.6 0.4\n0.6 0.1 0.3 0.2\n\"\"\") == \"0.075\"\nassert solution(\"\"\"\n4 4 3 2\n0.9 0.7 0.2 0.8\n0.5 0.5 0.3 0.4\n0.2 0.1 0.6 0.4\n0.6 0.1 0.3 0.2\n\"\"\") == \"0.000\"\nassert solution(\"\"\"\n6 5 3 2\n0.9 0.7 0.2 0.8 0.5 0.4 0.3 0.2 0.6 0.3 0.1 0.3 0.3 0.2\n0.5 0.5 0.3 0.4 0.2 0.4 0.1 0.2 0.6 0.3 0.1 0.3 0.3 0.2\n0.2 0.1 0.6 0.4 0.3 0.2 0.6 0.3 0.1 0.2 0.6 0.3 0.1 0.2\n0.6 0.1 0.3 0.2 0.6 0.3 0.1 0.2 0.6 0.3 0.1 0.2 0.6 0.3 0.1\n\"\"\") == \"0.500\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n3.0\n0.0 0.0\n3.0\n0.0 0.0\n0.0 1.0\n3.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n0.0 2.0\n1.0\n0.0 1.0\n1.5\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.5\n0.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.5\n0.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.5\n0.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.5\n0.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.5\n0.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.5\n0.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.5\n0.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.5\n0.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.5\n0.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2.0\n0.0 2.0\n1.0\n1.5\n0.0 1.0\n0.0 2.0\n2.0\n0.0 0.0\n0.0 1.0\n2"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 5') == '0.750'\nassert solution('4 2 4') == '0.333'\nassert solution('2 2 6') == '0.631'\nassert solution('1 3 2') == '3.333'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.625'"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == \"0.750\"\nassert solution('''5 5 5 5\n1.0 1.0\n0.0 1.0\n1.0 1.0\n1.0 1.0\n1.0 1.0''') == \"0.750\"\nassert solution('''3 4 5 5\n1.0 1.0\n0.0 0.0\n0.0 1.0\n0.0 1.0\n1.0 1.0''') == \"1.0\"\nassert solution('''2 2 3 4\n1.0 0.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 0.0''') == \"1.0\"\nassert solution('''1 5 1 5\n1.0 1.0\n0.0 0.0\n1.0 1.0\n0.0 0.0\n1.0 1.0''') == \"0.375\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n\"\"\") == '0.750'\n\nassert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n\"\"\") == '0.625'\n\nassert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n\"\"\") == '0.750'\n\nassert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n\"\"\") == '0.625'\n\nassert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n\"\"\") == '0.750'"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n''') == '0.375'\nassert solution('''\n1 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n''') == '0.375'\nassert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 2 5 5\"\n    \"2.0 2.0\"\n    \"4.0\"\n    \"1.0 0.0\"\n    \"0.0 1.0\"\n    \"1.5 0.0\"\n    \"0.0 2.0\"\n) == \"0.625\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n') == '2'\nassert solution('4 4\\n0 2 3 4\\n0 1 0 0\\n0 0 0 0\\n0 1 2 3\\n') == '37'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    5 5\n    1 2 4\n    0 3 6\n    4 0 3\n    ''') == '2'\n\nassert solution('''\n    3 4\n    2 3 0 7\n    0 0 2 1\n    0 0 3 0\n    ''') == '37'\n\nassert solution('''\n    6 6\n    1 2 4\n    0 3 6\n    4 0 3\n    0 0 2 1\n    0 0 3 0\n    ''') == '4'\n\nassert solution('''\n    3 3\n    1 2 4\n    0 3 6\n    4 0 3\n    ''') == '2'\n\nassert solution('''\n    2 3\n    1 2 4\n    0 0 2 1\n    0 0 3 0\n    ''') == '37'"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\\\n3 3\n1 2 4\n0 3 6\n4 0 3\"\"\") == \"2\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 4\n0 3 6\n4 0 3\"\"\") == \"2\"\nassert solution(\"\"\"\n3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\"\"\") == \"37\"\n\nassert solution(\"\"\"\n2 4\n0 0 0 2\n0 0 0 0\"\"\") == \"4\"\nassert solution(\"\"\"\n6 6\n3 2 1 0\n1 0 0 3\n4 5 0 7\n0 0 0 0\n7 0 2 0\n0 7 2 0\"\"\") == \"30\"\nassert solution(\"\"\"\n5 6\n1 0 2 0 3\n2 3 0 0 0\n3 1 0 2 0\n4 0 0 2 0\n5 0 0 2 0\"\"\") == \"45\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"37\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution(\"\"\"3 3\n1 2 4\n0 3 6\n4 0 3\n\"\"\") == '37'"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '37'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\nassert solution('''\n3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\nprint(solution('''\n3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n'''))"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 2 4\\n0 3 6\\n4 0 3\\n') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n') == '37'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n') == \"2\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '10'\nassert solution('4 4') == '1'\nassert solution('1234') == '10'\nassert solution('1 1') == '1'\nassert solution('1 2') == '4'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n1234\n1 4\n1 4\n1 4\n1 4\nSample Output 3:\n10\n14\n18\n''') == '10 14 18'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n123\n12\n13\n14\n15\n16\n''') == '10'\nassert solution('''\n5 4\n1234\n1 1\n1 2\n1 3\n1 4\nSample Output 2:\n1\n4\n9\n16\n''') == '14'\nassert solution('''\n5 4\n1234\n1 1\n1 2\n1 3\n1 4\nSample Output 2:\n1\n4\n9\n16\n''') == '17'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1234\n1 4\n1 4\n1 4\n''') == '10'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '10'\nassert solution('4 4') == '16'\n\n---\n\n## I'm a programmer\n\nExercises:\n\n1. Write some code to display the time the Python interpreter started executing.\n\n2. Write some code to calculate how many hours and minutes it took to compute the expression 10 ** 2.\n\n3. Write some code to output the sum of the digits in a number.\n\n4. Write some code to output the sum of the numbers in the second sheet.\n\n5. Write some code to output the sum of the numbers on the first sheet.\n\n6. Write some code to output the sum of the numbers in the first sheet.\n\n7. Write some code to output the number of times the student presses the button on the second sheet.\n\n8. Write some code to output the sum of the numbers on the second sheet.\n\n9. Write some code to output the sum of the numbers on the first sheet.\n\n10. Write some code to output the number of times the student presses the button on the first sheet.\n\n11. Write some code to output the sum of the numbers on the second sheet.\n\n12. Write some code to output the sum of the numbers on the first sheet.\n\n13. Write some code to output the number of times the student presses the button on the first sheet.\n\n14. Write some code to output the sum of the numbers on the second sheet.\n\n15. Write some code to output the sum of the numbers on the first sheet.\n\n16. Write some code to output the number of times the student presses the button on the first sheet.\n\n17. Write some code to output the sum of the numbers on the second sheet.\n\n18. Write some code to output the sum of the numbers on the first sheet.\n\n19. Write some code to output the number of times the student presses the button on the first sheet.\n\n20. Write some code to output the sum of the numbers on the second sheet.\n\n21. Write some code to output the sum of the numbers on the first sheet.\n\n22. Write some code to output the number of times the student presses the button on the first sheet.\n\n23. Write some code to output the sum of the numbers on the second sheet.\n\n24. Write some code to output the sum of the numbers on the first sheet.\n\n25. Write some code to output the number of times the student presses the button on the first sheet.\n\n26. Write some code to output the sum of the numbers on the second sheet.\n\n27. Write some code to output the sum of the numbers on the first sheet.\n\n28. Write some code to output the number of times the student presses the button on the first sheet.\n\n29. Write some code to output the sum of the numbers on the second sheet.\n\n30. Write some code to output the sum of the numbers on the first sheet.\n\n31. Write some code to output the number of times the student presses the button on the first sheet.\n\n32. Write some code to output the sum of the numbers on the second sheet.\n\n33. Write some code to output the sum of the numbers on the first sheet.\n\n34. Write some code to output the number of times the student presses the button on the first sheet.\n\n35. Write some code to output the sum of the numbers on the second sheet.\n\n36. Write some code to output the sum of the numbers on the first sheet.\n\n37. Write some code to output the number of times the student presses the button on the first sheet.\n\n38. Write some code to output the sum of the numbers on the second sheet.\n\n39. Write some code to output the sum of the numbers on the first sheet.\n\n40. Write some code to output the number of times the student presses the button on the first sheet.\n\n41. Write some code to output the sum of the numbers on the second sheet.\n\n42. Write some code to output the sum of the numbers on the first sheet.\n\n43. Write some code to output the number of times the student presses the button on the first sheet.\n\n44. Write some code to output the sum of the numbers on the second sheet.\n\n45. Write some code to output the sum of the numbers on the first sheet.\n\n46. Write some code to output the number of times the student presses the button on the first sheet.\n\n47. Write some code to output the sum of the numbers on the second sheet.\n\n48. Write some code to output the sum of the numbers on the first sheet.\n\n49. Write some code to output the number of times the student presses the button on the first sheet.\n\n50. Write some code to output the sum of the numbers on the second sheet.\n\n51. Write some code to output the sum of the numbers on the first sheet.\n\n52. Write some code to output the number of times the student presses the button on the first sheet.\n\n53. Write some code to output the sum of the numbers on the second sheet.\n\n54. Write some code to output the sum of the numbers on the first sheet.\n\n55. Write some code to output the number of times the student presses the button on the first sheet.\n\n56. Write some code to output the sum of the numbers on the second sheet.\n\n57. Write some code to output the sum of the numbers on the first sheet.\n\n58. Write some code to output the number of times the student presses the button on the first sheet.\n\n59. Write some code to output the sum of the numbers on the second sheet.\n\n60. Write some code to output the sum of the numbers on the first sheet.\n\n61. Write some code to output the number of times the student presses the button on the first sheet.\n\n62. Write some code to output the sum of the numbers on the second sheet.\n\n63. Write some code to output the sum of the numbers on the first sheet.\n\n64. Write some code to output the number of times the student presses the button on the first sheet.\n\n65. Write some code to output the sum of the numbers on the second sheet.\n\n66. Write some code to output the sum of the numbers on the first sheet.\n\n67. Write some code to output the number of times the student presses the button on the first sheet.\n\n68. Write some code to output the sum of the numbers on the second sheet.\n\n69. Write some code to output the sum of the numbers on the first sheet.\n\n70. Write some code to output the number of times the student presses the button on the first sheet.\n\n71. Write some code to output the sum of the numbers on the second sheet.\n\n72. Write some code to output the sum of the numbers on the first sheet.\n\n73."
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '10'\nassert solution('4 4') == '14'\nassert solution('5 5') == '18'\nassert solution('10 10') == '22'\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1\\n1\\n'\nassert solution('4 3') == '10\\n14\\n18\\n'"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '10'\nassert solution('4 4') == '9'"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"10\"\nassert solution(\"4 4\") == \"16\""
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16'"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\nprint('all tests passed')"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5''') == '1'\nassert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5''') == '2'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5''') == '1'\nprint('solution() finished successfully!')"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '1'\nassert solution('3 2 1') == '1'\nassert solution('3 3 3') == '2'\nassert solution('2 5 4') == '1'\nassert solution('2 4 4') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"4 2 3\") == \"2\"\nassert solution(\"5 2 4\") == \"1\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"4 2 4 4 4 4 3 2\") == \"1\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2 3') == '2'\nassert solution('5 2 4') == '1'"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\") == \"2\"\nassert solution(\"5 2 4\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2 3') == '2'\nassert solution('5 2 4') == '1'"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\nassert solution('''\n3\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0 10000\nSample Output 3:\nyes\n''') == 'yes'"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0 10000\\n\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"yes\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == \"no\"\nassert solution('''\n2\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\nSample Output 2:\nyes\n''') == \"yes\"\nassert solution('''\n10\n0 0 0 1 2 1 2 3 3 2 4 2 2 5 2 1\n2\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n3\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16\n4\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17\n5\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n6\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n7\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n8\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\n9\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\n10\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n11\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\n12\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n13\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n14\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\n15\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\n16\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29\n17\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n18\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n19\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32\n20\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33\n21\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34\n22\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35\n23\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36\n24\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37\n25\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38\n26\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39\n27\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\n28\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41\n29\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42\n30\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43\n31\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44\n32\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45\n33\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46\n34\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47\n35\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48\n36\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49\n37\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n'''))\n    pass\n\nassert solution('''\n2\n9999 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == \"no\"\nassert solution('''\n10\n0 0 0 1 2 1 2 3 3 2 4 2 2"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'yes'\nassert solution('2') == 'no'\nprint(solution(input()))"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0 10000\\n\") == \"yes\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'no'\nassert solution('2') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'no'\nassert solution('1') == 'yes'\nprint(solution('''3\n0 0 0 100 1\n100 1 1 100 1\n0 0 0 100 1\n'''))\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"yes\"\nassert solution(\"2\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'no'\nassert solution('2') == 'no'\n\n\"\"\"\n\nstdin = \"\"\"\n2\n9999 0 10000 0 0 1\n9998 0 9999 0 0 1\n\n\"\"\""
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'no'\nassert solution('2') == 'yes'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n1 2\n2 3\n1 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3 3\n1 2\n1 3\n1 4\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n6 6\n1 3\n1 4\n1 2\n3 2\n2 3\n2 4\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"YES\\n1 3\\n2 1\\n\"\nassert solution(\"3 3\") == \"YES\\n1 3\\n2 1\\n\"\nassert solution(\"4 3\") == \"NO\\n\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3') == 'YES\\n1 3\\n2 1'\nassert solution('4 3\\n1 2\\n1 3\\n1 4') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\n\nassert solution(\n    \"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\\n\"\n\nassert solution(\n    \"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3\n''') == 'YES'\nassert solution('''4 3\n1 2\n1 3\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\") == \"YES\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 4\n1 2\n1 3\n1 4\n''') == 'YES'\n\nassert solution('''5 4\n1 2\n1 3\n1 4\n1 5\n''') == 'NO'\n\nassert solution('''5 7\n1 3\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == 'YES'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''3 3\n1 2\n2 3\n1 3\n''') == 'YES'\nassert solution(\n'''4 3\n1 2\n1 3\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n1 2\n2 3\n1 3\n''') == 'YES'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'NO'\n'''\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\nassert solution('''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"inconsistent\"\nassert solution('''5 4\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\nSample Output 2:\nconsistent''') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'inconsistent'\nassert solution('5 5') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == 'consistent'\nassert solution('5 5') == 'inconsistent'\n\"\"\""
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'consistent'\nassert solution('5 5') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"inconsistent\"\nassert solution(stdin) == \"inconsistent\"\nassert solution(stdin) == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"inconsistent\"\nassert solution() == \"inconsistent\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1.57079633'\nassert solution('5') == '6.28318531'\nassert solution('10') == '97.97711699'\nassert solution('100') == '97.97711699'"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0') == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0.5'\nassert solution('3') == '0.5'\nassert solution('3') == '0.5'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1.57079633'\nassert solution('8') == '0.0'\n\"\"\"\n\n\nimport math"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0') == '41938.65135885'\nprint('Congratulations! All test cases passed.')\n\"\"\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1.57079633'\nassert solution('1') == '1.57079633'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 0 0\\n1 1 0\\n0 0 0') == '1.57079633'\nassert solution('5\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n0 0 1') == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n10\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n10 0 10\n-100 0 0\n10 -10 10\n-10 -10 -10\n0 0 0\n\"\"\") == \"1.57079633\"\nassert solution(\"\"\"\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n10 0 10\n-100 0 0\n10 -10 10\n-10 -10 -10\n0 0 0\n\"\"\") == \"41938.65135885\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 0 0\n1 1 0\n''') == '1.57079633'\nassert solution('''3\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n\"\"\") == \"1.57079633\"\nassert solution(\"\"\"\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n\"\"\") == \"41938.65135885\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11\nsabcabcfabc\n''') == '3'\n\nassert solution('''18\ntrutrutiktiktappop\n''') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n11\nsabcabcfabc\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n18\ntrutrutiktiktappop\n\"\"\") == \"4\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '3'\nassert solution('18') == '4'"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input(\"\")) == \"0\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '3'\nassert solution('18') == '4'"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(11) == \"3\"\nassert solution(18) == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nabcdef') == '2', 'First'\nassert solution('5\\nabcdef') == '3', 'Second'\nassert solution('6\\nabcdefgh') == '2', 'Third'\nassert solution('8\\nabcdefgh') == '3', 'Fourth'\nassert solution('11\\nabcdefgh') == '3', 'Fifth'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"11\\n\"\n    \"sabcabcfabc\"\n) == \"3\"\nassert solution(\n    \"18\\n\"\n    \"trutrutiktiktappop\"\n) == \"4\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13') == '1'\nassert solution('15') == '2'\nassert solution('17') == '2'\nassert solution('19') == '3'\nassert solution('21') == '2'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 3 1\n3 1 2\n''') == '2'\nassert solution('''\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\nassert solution('''\n1\n2\n''') == 'huge'\nassert solution('''\n10\n9 1 7 2 3 4 5 6 8\n1 8 2 7 3 9 5 6 4\n''') == '11'\nassert solution('''\n10\n6 1 5 2 3 4 7 8 9\n1 9 2 5 3 4 7 8 6\n''') == '11'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2 3 1\n3 1 2''') == '2'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2\\n') == '2'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 2, 3, 1]) == \"2\"\nassert solution([6, 5, 6, 3, 2, 4]) == \"5\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 3 1\\n3 1 2\\n') == '2'\nassert solution('10\\n2 3 1\\n3 1 2\\n') == 'huge'\nassert solution('10\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == 'huge'\nassert solution('3') == 'huge'\nassert solution('5') == 'huge'\nassert solution('8') == 'huge'\nassert solution('10') == 'huge'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\nassert solution('''\n3 3 1\n3 1 2\n''') == '2'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1 2 3 4') == '4'\nassert solution('6 4 5 1 3 2') == '5'"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 6 3 2 4') == '2'\nassert solution('10 7 9 8 5 2 1 4 3') == '5'\nassert solution('10 5 1 5 2 3 4 2 1 6 7 8 8 9 1') == '10'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2'\nassert solution('3 1') == '4'\nassert solution('4 1') == '4'\nassert solution('5 1') == '6'\nassert solution('6 1') == '6'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1\n0 10 20\n0 10\nSample Input 3:\n6 1\n0 10 20 26 40 50\n0 40\nSample Output 3:\n14\n''') == '4'\n\nassert solution('''2\n0 10\nSample Input 4:\n3 1\n0 10 20\n0 10\nSample Output 4:\n2\n''') == '2'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '4'\nassert solution('3 1') == '4'\nassert solution('6 1') == '9'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '9'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1\n0 10 20\n0 10''') == '4'\nassert solution('''6 1\n0 10 20 26 40 50\n0 40''') == '9'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '4 1\\n0 10 20\\n0 10\\n',\n) == '4'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1\n0 10 20\n0 10\nSample Input 3:\n6 1\n0 10 20 26 40 50\n0 40\n0 10\nSample Output 3:\n4\n\"\"\") == \"\"\"4\"\"\"\"\n\nassert solution(\"\"\"\n10 10\n3 3\n1 2\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\nSample Input 4:\n6 1\n0 10 20\n0 10\n0 10\n0 10\n0 10\nSample Output 4:\n10\n\"\"\") == \"\"\"10\"\"\"\"\n\nassert solution(\"\"\"\n10 10\n3 3\n1 2\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\nSample Input 5:\n6 1\n0 10 20\n0 10\n0 10\n0 10\n0 10\n0 10\n0 10\n0 10\nSample Output 5:\n15\n\"\"\") == \"\"\"15\"\"\"\"\n\nassert solution(\"\"\"\n10 10\n3 3\n1 2\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\nSample Input 6:\n6 1\n0 10 20\n0 10\n0 10\n0 10\n0 10\n0 10\n0 10\n0 10\nSample Output 6:\n12\n\"\"\") == \"\"\"12\"\"\"\"\n\nassert solution(\"\"\"\n20 20\n3 3\n1 2\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\nSample Input 7:\n20 20\n3 3\n1 2\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\nSample Output 7:\n15\n\"\"\") == \"\"\"15\"\"\"\""
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 1\n0 10 20\n0 10\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n6 1\n0 10 20 26 40 50\n0 40\n\"\"\") == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n0 10\n0 10\n''') == '4'\nassert solution('''\n3 2\n0 10\n0 30\n''') == '9'\nassert solution('''\n1 2\n0 10\n0 20\n''') == '9'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"6 1\") == \"9\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''concat(shuffle([1,2]),shuffle([1,2]))\nshuffle([1,2,1,2])\nSample Input 1:\nconcat(sorted(concat([3,2,1],[4,5,6])),sorted([1,2,3,4,5,6]))\n[1,2,3,4,5,6]\nSample Output 1:\nequal\nSample Input 2:\nsorted(concat([3,2,1],[4,5,6]))\n[1,2,3,4,5,6]\nSample Output 2:\nequal''') == 'equal'\nassert solution('''concat(sorted(concat([3,2,1],[4,5,6])),sorted([1,2,3,4,5,6]))\n[1,2,3,4,5,6]\nSample Input 1:\nsorted(concat([3,2,1],[4,5,6]))\n[1,2,3,4,5,6]\nSample Output 1:\nequal\nSample Input 2:\nsorted(concat([3,2,1],[4,5,6]))\n[1,2,3,4,5,6]\nSample Output 2:\nnot equal''') == 'not equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '''\nconcat(shuffle([1,2]),shuffle([1,2]))\nshuffle([1,2,1,2])\n''') == \"equal\"\n\nassert solution(\n    '''\nsorted(concat([3,2,1],[4,5,6]))\n[1,2,3,4,5,6]\n''') == \"equal\"\n\nassert solution(\n    '''\nsorted(concat([1,2,1,2]))\n[1,2,1,2]\n''') == \"not equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''concat(shuffle([1,2]),shuffle([1,2]))\nshuffle([1,2,1,2])\nsorted(concat([3,2,1],[4,5,6]))\n[1,2,3,4,5,6]''') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''concat([[1,2],[3,4],[5,6]])''') == 'equal'\nassert solution('''concat([[1,2],[3,4],[5,6]])''') == 'equal'\nassert solution('''concat([1,2,3,4])''') == 'not equal'\nassert solution('''sorted([[1,2],[3,4],[5,6]])''') == 'equal'\nassert solution('''sorted([[1,2],[3,4],[5,6]])''') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\nassert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\nassert solution('concat([3,2,1],[4,5,6])') == 'equal'\n\nassert solution('shuffle([1,2])') == 'not equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''concat(shuffle([1,2]),shuffle([1,2]))''') == 'not equal'\nassert solution('''sorted(concat([3,2,1],[4,5,6]))''') == 'equal'\nassert solution('''sorted(concat([3,2,1],[4,5,6]))''') == 'equal'\nassert solution('''sorted(concat([3,2,1],[4,5,6]))''') == 'equal'\nassert solution('''sorted(concat([3,2,1],[4,5,6]))''') == 'equal'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"Oh no\"\nassert solution(\"1 3\") == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == 'Oh no'\nassert solution('1 3') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no'\nassert solution('''\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\n\nassert solution('''\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_value) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no'\nassert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Oh no\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == 'Oh no'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('1 3') == '1'"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '3'\nassert solution('4 4') == '3'\nassert solution('8 7') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n3 5 1\n4 5 1\n4 1 2\n2 5 1\n5 1 2\n\"\"\"\n) == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"5 5\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\"\nassert solution(input_string=\"1 1 1\\n2 3 1\\n3 5 1\\n4 5 1\\n4 5 2\") == \"4\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\nassert solution('''5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 2') == '3'\nassert solution('4 4') == 'impossible'\nassert solution('4 4') == 'impossible'\nassert solution('6 2 1') == '2'\nassert solution('7 5 1') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == \"3\"\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == \"impossible\"\nassert solution('''\n2 4\n1 2 1\n1 3 1\n3 5 1\n5 2 1\n''') == \"impossible\"\nassert solution('''\n5 5\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 1 2\n''') == \"impossible\"\nassert solution('''\n5 5\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 1 2\n''') == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == \"3\"\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == \"impossible\"\nassert solution('''\n10 10\n2 3 2\n3 1 1\n2 5 1\n3 4 1\n1 5 2\n2 4 1\n5 3 1\n1 2 1\n3 5 1\n1 5 1\n1 4 1\n4 3 1\n1 2 1\n''') == \"9\"\nassert solution('''\n1000 1000\n7 8 8\n9 9 8\n9 8 3\n7 7 9\n4 4 8\n1 6 5\n7 5 4\n3 3 4\n8 4 5\n9 4 4\n1 3 2\n2 5 2\n4 8 3\n1 5 5\n5 1 3\n7 2 5\n8 8 7\n''') == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3'\nassert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '3'\nassert solution('3 2') == 'impossible'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('22') == '2'\nassert solution('22', '3') == '3'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1 1 1 3\n''') == '2'\nassert solution('''1\n22\n''') == '4'\nprint('\"Run\" is good practice.')\nprint('It\\'s almost always a good idea.')\nprint('\"It\\'s almost always a good idea.\"')\nprint('''It\\'s almost always a good idea.''')\nprint('''It\\'s almost always a good idea.''')\nprint('''It's almost always a good idea.''')\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\nassert solution('22') == '4'\nassert solution('123') == '3'\nassert solution('3') == '3'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n\n1\n1\n1\n1\n''') == '4'\nassert solution('''\n\n5\n5\n5\n3\n''') == '2'\nassert solution('''\n\n5\n5\n1\n2\n''') == '2'\nassert solution('''\n\n5\n1\n2\n3\n''') == '1'\n\nassert solution('''\n\n5\n1\n3\n2\n''') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('22') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 1 1 1 3''') == '2'\nassert solution('''5\n2 1 1 1 3\n''') == '4'\nassert solution('''1\n22\n''') == '3'"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\"\nassert solution(\"5\\n0 1 1 1 3\") == \"1\"\nassert solution(\"1\\n2 1 1 1 3\") == \"0\"\nassert solution(\"1\\n22\") == \"4\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('1') == 'no'\nassert solution('22') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1 1 1 3\n''') == '2'\nassert solution('''3\n2 1 1\n''') == '3'\nassert solution('''7\n8 1 2 1 2 3 2 2\n''') == '5'\nassert solution('''4\n4 1 2 1\n''') == '4'\nassert solution('''2\n0\n''') == '0'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"2 1 3 4\") == \"3\"\nassert solution(\"3 1 2 4\") == \"2\"\nassert solution(\"3 3 3 3\") == \"1\"\nassert solution(\"10 10 10 10\") == \"1\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 1 5') == '3'\nassert solution('4 1 2 3') == '2'"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"7\") == \"8\"\nassert solution(\"14\") == \"13\""
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '2'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n3 1 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n2 4 6 8\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\n\"\"\"\n\nN = int(input())\nnums = list(map(int, input().split()))\ncount = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        if nums[i] + nums[j] > 0:\n            if nums[i] * 2 == nums[j]:\n                count += 1\nprint(count)\n\n\"\"\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n3 1 5\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n4\n1 2 3 4\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\n\"\"\""
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '<empty>', \"Wrong answer!\"\nassert solution('a+b-c') == '- +d-', \"Wrong answer!\"\nassert solution('a-b+d-c') == '- +d-', \"Wrong answer!\"\n\n'''\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a+b-c') == '- +d-', 'First Test'\nassert solution('a-b+d-c') == '- +d-', 'Second Test'\n\"\"\"\n\n\nimport re"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a+b-c') == '- +d-', \"Expected '- +d-', got '{}'.\".format(solution('a+b-c'))\nassert solution('a-b+d-c') == '+ d-', \"Expected '+ d-', got '{}'.\".format(solution('a-b+d-c'))"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('a+b-c') == '- +d-', f'expected - +d- to be printed, but got: {solution(\"a+b-c\")}'\nassert solution('a-b+d-c') == '- +d-', f'expected - +d- to be printed, but got: {solution(\"a-b+d-c\")}'\n'''\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- +d-'''\n\nstdin = input()\n\nfirst_run = stdin.replace(\"'\",\"+\").replace('\"','-')\nsecond_run = first_run.replace('+', '\"')\nsecond_run = second_run.replace('-', \"'\")\n\nprint(second_run)\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a+b-c\") == '- +d-', 'Solution is broken'\nassert solution(\"a-b+d-c\") == '- +d-', 'Solution is broken'\nassert solution(\"ab+c\") == '- +c', 'Solution is broken'\nassert solution(\"ab-c\") == '- +c', 'Solution is broken'\nassert solution(\"abc\") == '- +c', 'Solution is broken'\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a+b-c') == '- +d-', 'Wrong!'\nassert solution('a-b+d-c') == '- +d-', 'Wrong!'\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '<empty>'\nassert solution('a') == '<any> <empty>'\nassert solution('a+b') == '<any> <empty>'\nassert solution('a-b') == '<any> <empty>'\nassert solution('a+b-c') == '- +d-'\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('knuthmorrispratt') == '- +d-', 'Did you get this right?'\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\", \"Wrong\"\nassert solution(\"a-b+d-c\") == \"+ +d-\", \"Wrong\""
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"3 3\") == \"5\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0\n\nassert solution('''\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11\n\nassert solution('''\n3 2 6\n1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '4\n\nassert solution('''\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '9\n\nassert solution('''\n10 0\n5\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '10\n''')\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"0\\n1\\n3\\n2\\n3\\n5\\n3\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 0\") == \"1\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0'\n\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nSample Output 1:\n0\n1\n3\n2\n3\n5\n3\n\nSample Input 2:\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nSample Output 2:\n11\n6\n5\n9\n4\n3\n7\n9\n9\n10\n''') == '11'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n\"\"\") == \"0\nassert solution(\"\"\"\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n\"\"\") == \"11\nassert solution(\"\"\"\n5 1\n0\n6 7 8 9 10\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n\"\"\") == \"10\n\"\"\")"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 0') == '1'\nassert solution('3 0') == '1'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 0') == '1'\nassert solution('3 2') == '3'\nassert solution('7 0') == '7'\nassert solution('7 2') == '6'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 0\") == \"0\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"3 0\") == \"3\"\nassert solution(\"3 0\") == \"5\""
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '2 4 6'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n''') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(samples[0]) == \"2\"\nassert solution(samples[1]) == \"4,6\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n') == '1 4 6 7'\nassert solution('4 3\\n1 2 2\\n2 3 2\\n1 4 3\\n2 5 1\\n3 5 2\\n1 5 6\\nSample Output 2:') == '0'"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"0\nassert solution(\"10 2\") == \"3\nassert solution(\"5 6\") == \"0\nassert solution(\"10 10\") == \"3\nassert solution(\"5 9\") == \"4\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '2'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '2'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n\") == \"2 4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\\n\") == \"0\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\"\nassert solution(\"4 7\\n1 2 2\\n2 3 2\\n3 4 2\\n1 5 1\\n5 6 3\\n1 6 6\\n\") == \"4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nprint(solution('''\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n'''))\nprint(solution('''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n'''))"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '4 5 6'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '1 2 3 4 5 6'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '1 2 3 4 5 6'\n'''"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n''') == '4 5 6'\n\nassert solution('''5\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n3 4\n3 5\n''') == '1 2 3 4 5'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n2\\n3\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"4\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"1 3\") == \"6\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2\\n3\\n4\\n5\\n6\""
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '5'\nassert solution('1') == '1'"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\"\n) == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '4 5 6 1 2 3'\n\nprint(solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n'''))\n\nprint(solution('''\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\nSample Output 2:\n1\n2\n3\n1\n2\n3\n'''))\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '4 5 6'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n''') == '1 2 3'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n''') == '1 2 3'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n''') == '1 2 3'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n''') == '1 2 3'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('1\\n1 2') == '1'\nassert solution('1\\n1 3') == '1'\nassert solution('1\\n1 1') == '1'\nassert solution('1\\n1 2') == '1'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '1'\nassert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"8\"\nassert solution(input()) == \"22\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '1'\nassert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nassert solution('CCCCCCPPPP') == '1'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''CPCC''') == '1'\nassert solution('''PPPPCCCC''') == '8'\nassert solution('''CPCCCPPCCC''') == '6'\nassert solution('''CPPCCPPCCCC''') == '8'\nassert solution('''CPPPCCCCCCCCP''') == '8'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nassert solution('CACC') == '1'\nassert solution('CACC') == '1'"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 1\n1 3\n2 3\n2\n''') == '1 2 3'\nassert solution('''\n3 2 1\n1 3\n2 3\n3\n''') == '1 2 3'\n\nassert solution('''\n3 2 1\n1 3\n2 3\n3\n''') == '3'\n\nassert solution('''\n10 3 5\n2 3 1\n5 7\n6 6\n1 7\n6 9\n6 2\n1 5\n3 8\n3 5\n5 1\n3 2\n1 1\n5 5\n8 4\n3 7\n1 2\n3 9\n8 6\n1 6\n1 5\n3 4\n4 9\n3 7\n1 6\n2 5\n2 6\n4 8\n''') == '4 6 8 4'\n\nassert solution('''\n10 3 5\n2 3 1\n5 7\n6 6\n1 7\n6 9\n6 2\n1 5\n3 8\n3 5\n5 1\n3 2\n1 1\n5 5\n8 4\n3 7\n1 2\n3 9\n8 6\n1 6\n1 5\n3 4\n4 9\n3 7\n1 6\n2 5\n2 6\n4 8\n''') == '4 6 8 4'"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 1\\n1 3\\n2 3\\n2') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 1\n1 3\n2 3\n3''') == '1 3 2'\nassert solution('''2 2 1\n1 2\n1 3\n2 3\n3''') == '1 2 3'\nassert solution('''2 2 1\n1 2\n2 3\n3''') == '2 3 1'\nassert solution('''3 2 1\n1 3\n2 3\n3''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 4\n3''') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2 1\n1 3\n2 3\n2''') == '1 2 3'\nassert solution('''\n3 2 1\n1 3\n2 3\n3\nSample Input 3:\n3 2 1\n1 3\n2 3\n2\nSample Output 3:\n2 3''') == '2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2 1\n1 3\n2 3\n3''') == '1 3 2'\nassert solution('''3 2 1\n1 2\n2 3\n2''') == '2 3 1'\nassert solution('''3 2 1\n2 3\n1 3\n1''') == '1 3 2'\nassert solution('''3 2 1\n1 3\n2 3\n3''') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 1\\n1 3\\n2 3\\n2') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 1\\n1 3\\n2 3\\n2\\n') == '1 2 3'\nprint('PASSED')\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 1') == '1 2 3'\nassert solution('2 2 1') == '2'\nassert solution('3 2 1') == '1'\nassert solution('3 2 1') == '3'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\n\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '1 3'\n\nassert solution('''3 2 1\n1 3\n2 3\n3\n''') == '1 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '1 2 3'\nassert solution('3 2 1') == '1 2 3'\nassert solution('3 3 1') == '1 2 3'\nassert solution('3 3 2') == '1 3 2'\nassert solution('3 3 3') == '1 3 2'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '39'\nassert solution('5 1') == '4'\nassert solution('1 0 1 1 1') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"3 2\\n1 0 1 1\") == \"3\"\nassert solution(\"1 1\\n0 0\") == \"1\"\nprint(\"all test cases passed\")"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"39\"\nassert solution(\"5 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '39'\nassert solution('5 1') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '3'\nassert solution('5 3') == '39'\nassert solution('1 0 1 1 1') == '4'\nassert solution('9 3') == '37'"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n4\n1\n3\n5\n1\n3\n4\n1\n''') == '39'"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '4'\nassert solution('5 3') == '39'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 3\n2 4 2 3 4\n\"\"\") == \"39\"\n\nassert solution(\"\"\"\n5 1\n1 0 1 1 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n1000000007\n10\n20\n50\n100\n200\n500\n1000\n2000\n3000\n4000\n5000\n10000\n20000\n50000\n100000\n\"\"\") == \"129560\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1 1 2'\nassert solution('4 6') == '1 2 4'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1 1 2\"\nassert solution(\"3 2\") == \"2 3 1\"\nassert solution(\"4 4\") == \"2 3 2\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...') == '1 1 2'\nassert solution('4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == '1 4 3'"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\nxx.\nxxx\n...\n''') == '1 1 2'\nassert solution('''4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 1 2'\n\n'''\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\nxx.xx\\nxxx\\nxxx') == '1 1 2'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4\nxx.\nxx.\nx.x\nx.x\nxx.\nxx.\n''') == '1 1 4'\nassert solution('''2 6\nxx.\nxx.\nx.xx\nx.xx\nxx.\nxx.\n''') == '1 1 3'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"1 1 2\"\nassert solution(\"4 6\") == \"1 1 2\""
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\nxx.\nxxx\n...\n''') == '1 1 2'\nassert solution('''4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 1 2'\nassert solution('''7 7\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\n''') == '2 4 1'\nassert solution('''20 20\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx\nxxxxxx"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"1 1 2\", \"First\"\nassert solution(\"4 6\") == \"1 1 2\", \"Second\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\nx.\nxxx\n...\n''') == '1 1 2'\nassert solution('''\n4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 2 3'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == 'indistinguishable'\nassert solution('2 0 1') == '0'\nassert solution('0 0 0') == 'indistinguishable'\nassert solution('0 1 0') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 2') == 'indistinguishable'\nassert solution('2 0 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 0 2 1') == '1'\nassert solution('2 0 1 0 1') == '1'\nassert solution('3 1 2 1 1') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1 2\n1 2 1\n0 2 0\n0 1 0''') == '0'\nassert solution('''5 0 1\n1 2 1\n0 2 0\n0 1 0\n0 3 0\nSample Output 3:\nindistinguishable''') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1 2\n1 2 1\n0 2 0\n0 1 0''') == '0'\nassert solution('''3 3 2\n1 2 1\n0 2 0\n0 1 0\n0 2 0''') == '2'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 2') == '0'\nassert solution('2 0 1') == '1'\nassert solution('0 1 1') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\") == \"0\"\nassert solution(\"2 0 1\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 2\") == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 2') == '0'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\n\n\"\"\""
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\"\nassert solution(\"0\") == \"-\"\nassert solution(\"\") == \"-\"\nassert solution(\"1\") == \"-\"\nassert solution(\"0\\n1\") == \"-1\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0100\n1001\n''') == '1'\nassert solution('''\n0110\n1001\n''') == '1111'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('0') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '-1'\nassert solution('1') == '-1'\nassert solution('1110') == '1111'\nassert solution('0111') == '1111'\nassert solution('1111') == '1111'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '+1'\nassert solution('1111') == '+0-1-1-1-1-1'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('101') == '+01'\nassert solution('-101') == '-+01'\nassert solution('100') == '+00'\nassert solution('-100') == '-00'\nassert solution('0') == '+0'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '+1+1+1+1+1'\nassert solution('1000000') == '+01+01+01+01+01'\nassert solution('-1') == '-1'\nassert solution('0') == '0'\nassert solution('-1111') == '+-1-1-1-1-1'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"5\", \"1\"]) == \"+111\"\nassert solution([\"10\"]) == \"+100\"\nassert solution([\"10\", \"1\", \"0\"]) == \"+101\"\nassert solution([\"1\", \"0\"]) == \"+111\"\nassert solution([\"1\", \"0\", \"1\"]) == \"+100\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"7+0-\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '+1'\nassert solution('01') == '+0'\nassert solution('1-1') == '-0'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234\") == \"+01234\"\nassert solution(\"1111\") == \"+000-"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\", \"Failed: \" + solution(\"1111\")"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('-1000') == '-0-0-0-1'\n\"\"\"\nn = int(input())\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution(input_string=\"2 2 1 1\") == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '7 8 3 2'\n    '1 2'\n    '7 3 4'\n    '5 6'\n    '1 3 2'\n    '1 4 1'\n    '1 5 1'\n    '1 6 6'\n    '2 3 9'\n    '2 4 2'\n    '2 6 4'\n    '7 6 5'\n) == '9'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n5 6 3 2\n1 2\n3 4\n4 5\n5 6\n1 3 2\n''') == '2'\nassert solution('''\n4 5 4 3\n3 4\n1 2\n1 3 2\n2 4\n2 3 4\n''') == '3'\n\n\"\"\""
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\nprint(solution())"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 8 3 2\") == \"9\"\nassert solution(\"2 1 1 1\") == \"2\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 8 3 2') == \"9\"\nassert solution('1 2') == \"3\"\nassert solution('5 6') == \"6\"\nassert solution('1 3 2') == \"3\"\nassert solution('1 4 1') == \"2\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 8 3 2\\n'\n                '1 2\\n'\n                '7 3 4\\n'\n                '5 6\\n'\n                '1 3 2\\n'\n                '1 4 1\\n'\n                '1 5 1\\n'\n                '1 6 6\\n'\n                '2 3 9\\n'\n                '2 4 2\\n'\n                '2 6 4\\n'\n                '7 6 5\\n') == '9'\n\nassert solution('3\\n'\n                '2\\n'\n                '1\\n'\n                '3\\n'\n                '1 2 1\\n'\n                '1 3 1\\n'\n                '1 4 1\\n'\n                '1 5 1\\n'\n                '1 6 1\\n'\n                '2 1 1\\n'\n                '2 2 1\\n'\n                '2 3 1\\n'\n                '2 4 1\\n'\n                '2 5 1\\n'\n                '2 6 1\\n'\n                '3 1 2\\n'\n                '3 2 2\\n'\n                '3 3 2\\n'\n                '3 4 2\\n'\n                '3 5 2\\n'\n                '3 6 2\\n'\n                '4 1 2\\n'\n                '4 2 2\\n'\n                '4 3 2\\n'\n                '4 4 2\\n'\n                '4 5 2\\n'\n                '4 6 2\\n'\n                '5 1 2\\n'\n                '5 2 2\\n'\n                '5 3 2\\n'\n                '5 4 2\\n'\n                '5 5 2\\n'\n                '5 6 2\\n'\n                '6 1 2\\n'\n                '6 2 2\\n'\n                '6 3 2\\n'\n                '6 4 2\\n'\n                '6 5 2\\n'\n                '6 6 2\\n'\n                '7 3 9\\n'\n                '7 4 2\\n'\n                '7 5 2\\n'\n                '7 6 2\\n'\n                '7 7 2\\n'\n                '7 8 2\\n'\n                '8 3 2\\n'\n                '8 4 2\\n'\n                '8 5 2\\n'\n                '8 6 2\\n'\n                '9 3 4\\n'\n                '9 4 4\\n'\n                '9 5 4\\n'\n                '9 6 4\\n'\n                '10 2 5\\n'\n                '10 3 5\\n'\n                '10 4 5\\n'\n                '10 5 5\\n') == '13'"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == \"9\"\nassert solution('''\n2 1 1 1\n2 2\n1\n1\n1 2 1\nSample Output 3:\n5\n''') == \"5\""
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 5 2 2\n1 2\n3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6''') == '3'\n\nassert solution('''7 6 5\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '7'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 8 3 2\\n1 2\\n7 3 4\\n5 6') == '9'\nassert solution('1\\n1 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == '9'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 1') == \"2\"\nassert solution('3 4 2') == \"7\"\nassert solution('5 5 3 3 1') == \"10\"\nassert solution('10 4 2 1 1 1 1 1 1 1 1') == \"49\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == \"2\"\nassert solution('''3 3 2\n1 2\n1 1 R\n010\n000\n000\n''') == \"2\"\nassert solution('''3 3 3\n1 2\n2 3 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == \"2\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000''') == '2'\nassert solution('''3 3 2\n2 2\n1 1 R\n123\n010\n000''') == '1'\nassert solution('''3 3 3\n2 2\n1 1 R\n101\n010\n000''') == '3'\nassert solution('''5 5 1\n2 2\n1 1 R\n010\n000\n000\n000\n000\n000\n000''') == '7'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\nSample Output 2:\n7"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 4 1\\n\"\n    \"2 2\\n\"\n    \"1 1 R\\n\"\n    \"010\\n\"\n    \"000\\n\"\n    \"000\"\n) == \"2\"\nassert solution(\n    \"3 4 2\\n\"\n    \"2 2\\n\"\n    \"3 4 R\\n\"\n    \"2327\\n\"\n    \"6009\\n\"\n    \"2112\\n\"\n    \"3 2 R\\n\"\n    \"1310\\n\"\n    \"2101\\n\"\n    \"1301\"\n) == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n\") == \"2\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n\") == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n\nassert solution('''\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\nassert solution(\"\") == \"0\""
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"8\") == \"4\"\nprint(solution())"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 2 1 2 3\n''') == '2'\nassert solution('''\n8\n1 2 4 1 1 2 5 1\n''') == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '4'\nprint('Tests passed')"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '4'"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"5\"\nassert solution(\"7\") == \"7\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n2\n1 2\n1\n''') == '2\nassert solution('''1\n1\n3\n''') == '1\nassert solution('''1\n1\n2\n''') == '2\nassert solution('''1\n2\n3\n''') == '1\nassert solution('''1\n2\n2\n''') == '1\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('8') == '4'"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\"\nassert solution(\"6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\"\nassert solution(\"6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"1\""
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('6') == 'NE'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) in [\"NE\", \"1\", \"3\"]"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3') == 'NE'\nassert solution('6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '1'\nassert solution('6') == '1'\nassert solution('6') == '1'\nassert solution('6') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nD 2 2\nD 1 3\nP 1\nD 6 2\nP 2\n''') == 'NE'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''D 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == 'NE'\nassert solution('''D 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '3'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == 'NE'\nassert solution('''\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '1'\nassert solution('''\nD 1 1\nD 2 2\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '1'\nassert solution('''\nD 2 2\nD 1 3\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '2'\nassert solution('''\nD 6 2\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == 'NE'\nassert solution('6\\nD 2 1\\nD 2 2\\nD 2 3\\nP 1\\nP 2\\nP 3\\n') == 'NE'\nassert solution('6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n') == '1'"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1 10\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 5 6\") == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 10') == '2'\nassert solution('2 2 1 10') == '4'\nassert solution('2 3 5 6') == '5'\nassert solution('3 1 1 6') == '6'\nassert solution('3 3 2 4') == '4'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 1 10') == '2'\nassert solution('2 3 5 6') == '5'\n\"\"\"\nimport collections\nfrom typing import List"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 5 6\") == \"5\"\nassert solution(\"3 3 5 6\") == \"3\"\nassert solution(\"10 10 10\") == \"10\"\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1 10\") == \"2\"\nassert solution(\"2 3 5 6\") == \"5\"\n\n'''\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 5 6') == '5'\nprint('All tests passed.')\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\"\nassert solution(\"\"\"\n5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n\"\"\") == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n') == '2.0000000000'\n\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n') == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2.0000000000'\nassert solution('3') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\"\nassert solution(\"\"\"\n5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n\"\"\") == \"2.0000000000\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\"\nassert solution(\"\"\"\n5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n\"\"\") == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2''') == '2.0000000000'\nassert solution('''5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5''') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2.0000000000'\nassert solution('5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'\nprint(solution('''\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n'''))"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 9 5\nSample Input 1:\n1 100 10''') == '9'\n\nassert solution('''1 100 100\nSample Input 2:\n1 100 100''') == '99'\n\nassert solution('''1 100 0\nSample Input 3:\n1 100 1\nSample Output 3:\n0''') == '0'\n\nassert solution('''1 9 5\nSample Input 4:\n1 100 10\nSample Output 4:\n19''') == '19'\n\nassert solution('''1 100 101\nSample Input 5:\n1 100 10\nSample Output 5:\n100''') == '101'"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 9 5\n''') == '1'\nassert solution('''1 100 10\n''') == '9'\nassert solution('''100 9 5\n''') == '19'\nprint('Tests passed')\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '5'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 9, 5]) == \"1\"\nassert solution([1, 100, 10]) == \"9\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 9 5\") == \"1\"\nassert solution(\"1 100 10\") == \"9\"\nassert solution(\"1 100 1\") == \"1\"\nassert solution(\"1 100 2\") == \"3\"\nassert solution(\"1 100 3\") == \"4\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'\nassert solution('3 2') == '4 2 3'"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '1 2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 5') == '4'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 1\\n1\"\n) == \"1\"\nassert solution(\n    \"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\"\n) == \"7\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '7'\nprint(solution())\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'\nassert solution('4 3 2 1') == '4 4 2 4 4 1 4'\n\n\"\"\""
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1\n1\n3\n2 4''') == '6'\nassert solution('''1 10\n1\n3\n2 4''') == '11'\nassert solution('''4 2\n1\n3 2\n2''') == '4'\nassert solution('''6 6\n2\n2 5\n1\n1 3''') == '5'\nassert solution('''3 3\n1\n2 2\n2''') == '4'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n1\n1\n''') == '1'\nassert solution('''\n4 5\n4 1 2 4 4\n4 3 2 1\n''') == '7 4 4 2 4 4 1 4'\n\nassert solution('''\n10 10\n3 1 4 8 9 2 4 9 5 7 6\n''') == '2'\n\nassert solution('''\n5 7\n1 4 3 6 2 6 5\n''') == '5'\n\nassert solution('''\n100 100\n8 1 9 2 8 1 9 2 7 6 3 3 7 9 2 6 4 4 7\n''') == '13'"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5\n1 2 3 4 5\n1 2 3 4 5''') == '2 2 4 5 1 4'\n\nassert solution('''4 5\n1 2 3 4 5\n1 2 3 4 5''') == '1 1 5 5 1'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\nprint(solution(input))\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 10 3 2\n10 10 5 0''') == '4'\n\nassert solution('''10 10 5 0\n10 10 5 0''') == '10'\n\nassert solution('''10 10 5 0\n10 10 5 0''') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 10 3 2\n''') == '4'\nassert solution('''\n10 10 5 0\n''') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\nassert solution('1 10 3 2') == '1'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 10 3 2\n''') == '4'\nassert solution('''\n10 10 5 0\n''') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"4 4 5 0\") == \"4\""
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 10 3 2''') == '4'\nassert solution('''10 10 5 0''') == '10'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\nprint(solution(input()))\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"2 1 20\"\"\") == \"10\"\nassert solution(\n\"\"\"6 100 9294\"\"\") == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('1 1 1') == '2'\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 2 5') == '6'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 20') == \"10\"\nassert solution('6 100 9294') == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\nprint(\"You're all set!\")"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1 20\n0123456789\n''') == '10'\nassert solution('''\n6 100 9294\n23689\n''') == '111'\n'''\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\nassert solution('1 2 1') == '3'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1 20\n0123456789\n''') == '10'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.50000 2.666667\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"1 R 4\\n\"\n    \"2 R 2\\n\"\n    \"3 R 2\\n\"\n    \"4 S 2\\n\"\n    \"5 S 1\\n\"\n) == \"1.500000 3.666667\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.500000 2.666667\"\nassert solution(\"\"\"\n5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.500000 3.666667\"\nassert solution(\"\"\"\n5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.500000 3.666667\"\nassert solution(\"\"\"\n5 1\n1 R 4\n\"\"\") == \"0.000000\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5 3\\n'\n    '1 R 4\\n'\n    '2 R 2\\n'\n    '3 R 2\\n'\n    '4 S 2\\n'\n    '5 S 1\\n') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\nassert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\nassert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\nassert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\nassert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 2.666667'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'\nassert solution('0 0\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '0 0'"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '1.500000 2.666667'\nassert solution('''\n5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '1.50000 2.66667'\nassert solution('5 2') == '1.500000 3.66667'\nassert solution('5 3') == '1.500000 2.66667'\nassert solution('4 3') == '0.000000 2.000000'\nassert solution('3 3') == '0.000000 2.000000'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '1.500000 2.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '1.500000 3.666667'"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == '3'"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n01010\n10101\n01001''') == '3'\nassert solution('''4\n10010\n01010\n10101\n01001''') == '3'\nassert solution('''5\n101010\n111001\n101001\n01010\n00101''') == '3'\nassert solution('''6\n101010\n111001\n101001\n01010\n00101''') == '-1'"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 6') == '3'\nassert solution('4 5') == '3'\nassert solution('10010') == '1'\nassert solution('01010') == '1'\nassert solution('10101') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"4 5\") == \"2\""
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6\\n101010\\n111001\\n101001') == '3'\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6\\n101010') == '3'\nassert solution('4 5\\n10010') == '3'\nassert solution('4 5\\n01010') == '3'\nassert solution('4 5\\n10101') == '3'\n\"\"\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 6\") == \"3\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"10010\") == \"4\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 6\n101010\n111001\n101001\n''') == '3'\n\nassert solution('''4 5\n10010\n01010\n10101\n01001\n''') == '3'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3 4\"\nassert solution() == \"3 -1\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n0 0\\n0 1\\n1 0\\n0 -1') == '-3 -1'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4'"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '-3 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '-3 -1'\nassert solution('4') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '-3 -1'\nassert solution('''\n4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\nassert solution('''\n3\n0 1\n0 -1\n-1 0\n''') == '3 1'\nassert solution('''\n3\n-1 -1\n0 0\n-1 -1\n''') == '-1 -1'\nassert solution('''\n10\n5 -1\n6 0\n4 0\n2 -1\n-1 4\n2 1\n0 -1\n-1 5\n-2 1\n-2 -1\n''') == '-2 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '-3 -1'\nassert solution('4') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '-3 -1'\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '-3 -1'\nassert solution('4') == '3 4'"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n4\n1\n1\n1\n''') == '1 3'\nassert solution('''2\n4\n0\n-1\n0\n''') == '-1 4'"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '-3 -1'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 0.25 2 45 20\") == \"2 5.086781\"\nassert solution(\"5 0.25 2 45 20\") == \"1 12.715255\"\nassert solution(\"2 10.1 0.1 0.2\") == \"2 8.816\"\nassert solution(\"1 1.5 1.5 1.5\") == \"1 6.947155\"\nassert solution(\"0 0 0 1 0\") == \"0 0\"\n\n\"\"\""
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2 5.086781'\nassert solution('''\n3 5 0 1\n0 0\n2 0\n1 1\n''') == '1 1.5'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4 5.000000'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '2 5.086781'\nassert solution('''\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    3\n    0 0\n    2 0\n    1 1.5\n\"\"\") == \"2 5.086781\"\nassert solution(\"\"\"\n    5\n    -2 0\n    0 0\n    2 0\n    1 1.5\n\"\"\") == \"1 12.715255\"\n\nprint(solution(\n\"\"\"\n    5\n    0 0\n    2 0\n    1 1.5\n\"\"\"))"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2 0 0\") == \"2 1.118067\"\nassert solution(\"6 0 0 0 0 0 0\") == \"2 1.118067\"\nassert solution(\"2 0 0 0 0 0 0\") == \"1 0.643593\"\nassert solution(\"1 1 2 0 0\") == \"0.25 0.25\""
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 5 45 20\\n0 0\\n2 0\\n1 1.5') == '2 5.086781'\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'\nassert solution('4 8 6 18 8 4\\n0 0\\n2 0\\n4 3.5\\n6 1.5\\n8 1.5\\n4 0\\n3 6\\n8 3\\n6 0\\n3 0\\n5 0\\n3 0\\n1 1.5') == '3 5.086781'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6 5 45 20') == '2 5.086781'\nassert solution('3 0.25 2 45 20') == '1 12.715255'"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nprint(solution(*stdin.split()))\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n0 0\n2 0\n1 1.5''') == '2 5.086781'\nassert solution('''4\n0 0\n1 0\n2 1\n3 1''') == '1 11.897461'\nprint('all tests passed')\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '8'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"1\", \"Should return 1\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nassert solution('''\n20\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n0 1 0 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'\nprint('all tests passed')\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"8\", solution.__doc__\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == 1\nassert solution('') == 1\nassert solution('6') == 1\nassert solution('3') == 4\nassert solution('1') == 2\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == '1'\nassert solution(\"\") == '1'\nassert solution(\"\\n\") == '1'\nassert solution(\"\\n\\n\") == '1'\nassert solution(\"2\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n4 0 4 4\\n7 0 3 4\") == '8'"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8\\n'\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1\\n'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n3\n5\n6\n3\n1\n5''') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n4\n1\n4\nimpossible''') == 'impossible'\n\nassert solution('''3\n5\n2\n6\nimpossible''') == 'impossible'\n\nassert solution('''8\n13\n10\n14\n11\n12\nimpossible''') == 'impossible'\n\nassert solution('''15\n20\n15\n18\n14\n13\nimpossible''') == 'impossible'\n\nassert solution('''2\n4\n4\n7\nimpossible''') == 'impossible'"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n''') == 'impossible'\nassert solution('''4\n3\n''') == '4 3'\nassert solution('''6\n4\n''') == 'impossible'\n\n''')\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"impossible\"\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    2\n''') == 'impossible'\nassert solution('''\n    4\n''') == '4 3'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"3 2\"\nassert solution(\"4\") == \"3 2\"\nassert solution(\"5\") == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == 'impossible'\n\nassert solution('8') == 'impossible'\nassert solution('9') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == '1 1'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n4 3\n2 4\n1 1\n2 4\n1 3''') == '2 4'\nassert solution('''10\n4 3\n2 4\n1 1\n2 4\n1 3''') == 'impossible'\nprint(solution('''4\n4 3\n2 4\n1 1\n2 4\n1 3'''))"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3\n4\n1\n4\n''') == \"109\"\nassert solution('''\n3\n1\n3\n4\n1\n4\n''') == \"958\"\nassert solution('''\n3\n2\n3\n4\n1\n4\n''') == \"159\"\nassert solution('''\n4\n2\n3\n4\n1\n4\n''') == \"19\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '16'\nassert solution('2') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1\n4\n\"\"\") == \"16\", \"First example\"\nassert solution(\"\"\"\n4\n2\n4\n1\n4\n\"\"\") == \"109\", \"Second example\"\nassert solution(\"\"\"\n3\n1\n3\n\"\"\") == \"33\", \"Third example\"\nassert solution(\"\"\"\n2\n1\n4\n\"\"\") == \"16\", \"Fourth example\"\nassert solution(\"\"\"\n4\n2\n4\n1\n4\n\"\"\") == \"109\", \"Fifth example\""
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3\\n4\\n1\\n4\\n\") == \"16\"\nassert solution(\"3\\n2\\n3\\n1\\n3\\n\") == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '16'\nassert solution('2') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == \"24\"\nassert solution('4') == \"136\"\nassert solution('2') == \"16\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2\n4\n1\n4\nSample Output 3:\n10\n''') == '16'\nassert solution('''\n4\n2\n4\n1\n4\nSample Output 4:\n99\n''') == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2\\n3\\n1\\n4\") == \"16\"\nassert solution(\"3\\n4\\n1\\n4\") == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1\\n3\\n') == '16'\nassert solution('4\\n2\\n4\\n1\\n4\\n') == '109'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '909'\nassert solution('100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n') == '999999'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '16'\nassert solution('4') == '109'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nprint('All tests passed.')"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''6 3\n5 3 1 1\n1 3\n2 3\n4 1\n3 1\n4 1\n''') == '8'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 3]) == \"3\"\nassert solution([4, 3]) == \"5\"\nassert solution([4, 3, 1, 1]) == \"2\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == \"2\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 3') == '1 2 1'\nassert solution('3 4') == '1 2 1 2'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 3]) == \"3\"\nassert solution([4, 3]) == \"5\""
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '0'\nassert solution('4 3') == '1'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 3]) == \"3\"\nassert solution([4, 3]) == \"5\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('1 1') == '1'\nassert solution('2 1') == 'impossible'\nassert solution('1 2') == 'impossible'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\nSample Output 2:\nimpossible\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('1 1') == '1 2'\nassert solution('1 2') == '1 2'\nassert solution('2 2') == 'impossible'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 3:\nimpossible\n\"\"\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1') == '1 2'\nassert solution('2 1\\n20 3\\n0 1 1') == 'impossible'\nassert solution('2 1\\n20 3\\n0 1 0') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == 'impossible'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('1 2') == '1 2'\nassert solution('4 3') == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1 2\"\nassert solution(\"2 1\") == \"1 2\"\nassert solution(\"3 1\") == \"1 2\"\nassert solution(\"2 1\") == \"1 2\"\nassert solution(\"3 3\") == \"1 2\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2020') == '2020 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '5'\nassert solution('2020') == '2020 1'"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n') == '1 2'\nassert solution('1\\n1\\n') == '2 1'\n\"\"\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1 2 3 4'\nassert solution('16') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 2014 2015 2016 2017 2018 2019 20 2001 2002 2004 2005 2006 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 202001 200220042005200620082009201020112012201320141516171819202021\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\n100\n4\n5\n3\n4\n9\n1\n2\n7\n''') == '''2'''\nassert solution('''10\n100\n10\n6\n4\n7\n5\n4\n5\n3\n''') == '''7'''\n\nassert solution('''15\n100\n2\n4\n3\n5\n6\n4\n5\n7\n8\n9\n10\n3\n8\n''') == '''12'''\n\nassert solution('''100\n1000\n10\n4\n3\n5\n8\n11\n9\n2\n''') == '''13'''"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'unique'\n\nassert solution('''\n4\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nSample Output 3:\nambiguous\n''') == 'ambiguous'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'impossible'\nassert solution('''\n4\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'unique'\nassert solution('3') == 'ambiguous'\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'impossible'\nassert solution('3') == 'unique'"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies\n''') == 'impossible'\n\nassert solution('''\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies''') == 'impossible'\nassert solution('''3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies''') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == \"impossible\"\nassert solution('2') == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3\n    3\n    0 chocolate\n    1 icecream\n    2 cookies\n    3\n    chocolate\n    icecream\n    cookies\n''') == 'impossible'\nassert solution('''\n    3\n    4\n    0 chocolate\n    1 icecream\n    2 cookies\n    2 chocolate\n    3\n    chocolate\n    icecream\n    cookies\n''') == 'unique'\nassert solution('''\n    5\n    0\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    51\n    52\n    53\n    54\n    55\n    56\n    57\n    58\n    59\n    60\n    61\n    62\n    63\n    64\n    65\n    66\n    67\n    68\n    69\n    70\n    71\n    72\n    73\n    74\n    75\n    76\n    77\n    78\n    79\n    80\n    81\n    82\n    83\n    84\n    85\n    86\n    87\n    88\n    89\n    90\n    91\n    92\n    93\n    94\n    95\n    96\n    97\n    98\n    99\n    100\n    101\n    102\n    103\n    104\n    105\n    106\n    107\n    108\n    109\n    110\n    111\n    112\n    113\n    114\n    115\n    116\n    117\n    118\n    119\n    120\n    121\n    122\n    123\n    124\n    125\n    126\n    127\n    128\n    129\n    130\n    131\n    132\n    133\n    134\n    135\n    136\n    137\n    138\n    139\n    140\n    141\n    142\n    143\n    144\n    145\n    146\n    147\n    148\n    149\n    150\n    151\n    152\n    153\n    154\n    155\n    156\n    157\n    158\n    159\n    160\n    161\n    162\n    163\n    164\n    165\n    166\n    167\n    168\n    169\n    170\n    171\n    172\n    173\n    174\n    175\n    176\n    177\n    178\n    179\n    180\n    181\n    182\n    183\n    184\n    185\n    186\n    187\n    188\n    189\n    190\n    191\n    192\n    193\n    194\n    195\n    196\n    197\n    198\n    199\n    200\n    201\n    202\n    203\n    204\n    205\n    206\n    207\n    208\n    209\n    210\n    211\n    212\n    213\n    214\n    215\n    216\n    217\n    218\n    219\n    220\n    221\n    222\n    223\n    224\n    225\n    226\n    227\n    228\n    229\n    230\n    231\n    232\n    233\n    234\n    235\n    236\n    237\n    238\n    239\n    240\n    241\n    242\n    243\n    244\n    245\n    246\n    247\n    248\n    249\n    250\n    251\n    252\n    253\n    254\n    255\n    256\n    257\n    258\n    259\n    260\n    261\n    262\n    263\n    264\n    265\n    266\n    267\n    268\n    269\n    270\n    271\n    272\n    273\n    274\n    275\n    276\n    277\n    278\n    279\n    280\n    281\n    282\n    283\n    284\n    285\n    286\n    287\n    288\n    289\n    290\n    291\n    292\n    293\n    294\n    295\n    296\n    297\n    298\n    299\n    300\n    301\n    302\n    303\n    304\n    305\n    306\n    307\n    308\n    309\n    310\n    311\n    312\n    313\n    314\n    315\n    316\n    317\n    318\n    319\n    320\n    321\n    322\n    323\n    324\n    325\n    326\n    327\n    328\n    329\n    330\n    331\n    332\n    333\n    334\n    335\n    336\n    337\n    338\n    339\n    340\n    341\n    342\n    343\n    344\n    345\n    346\n    347\n    348\n    349\n    350\n    351\n    352\n    353\n    354\n    355\n    356\n    357\n    358\n    359\n    360\n    361\n    362\n    363\n    364\n    365\n    366\n    367\n    368\n    369\n    "
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"impossible\"\n\n'''"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0 10\\n') == '0'\nassert solution('1 2 10\\n') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n\n'''\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\","
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 0 10\n''') == '0'\n\nassert solution('''\n1 2 10\n''') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"..................................................................................................................................................................................................................................................................................................................................\") == \"1 pan\"\nassert solution(\"..................................................................................................................................................................................................................................................................................................................................\") == \"3 zoom out\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n''') == '1 pan'\nassert solution('''\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n............................................XXX..............\n.........................................XXXX.............\n.............................................XX.............\n............................................................\n''') == '3 zoom out'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n....XXXX...................... \n....XXXX...................... \n....XXXX...................... \n....XXXX...................... \n....XXXX...................... \n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n................................\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 X.XX X.XX\\n1 X.XX X.XX') == '1 pan'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('...\\n...\\n...\\n...\\n...\\n...\\n...\\n...') == '3 pan'\nassert solution('...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...') == '3 zoom out'\nassert solution('...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...') == '2 zoom out'\nassert solution('...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...') == '2 pan'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4 zoom out\""
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('..XX.......\\n..XX......\\n..XX.....\\n.X........\\n..XX......\\n..XX.....\\n..........\\n..XX.......') == '3 zoom out'\nassert solution('XX....................\\nXX....................\\nXX....................') == '4 pan'\nassert solution('......\\n......\\n......\\n..XX.....\\n.X........\\n..XX.....\\n..........\\n......\\n......') == '2 pan'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a.b.c.') == '1 zoom out'\nassert solution('d.e.f.') == '1 pan'\nassert solution('a.b.c.d.e.f.') == '1 pan'\nassert solution('a.b.c.d.e.f.a.b.c.d.e.f.') == '3 zoom out'\nassert solution('a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.w.a.b.c.d.e.f.g.h.i"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"A..........X...................\") == \"1 pan\"\nassert solution(\"A..........XXXXX...................\") == \"1 pan\"\nassert solution(\"A..........XXX...................\") == \"1 pan\"\nassert solution(\"A..........XXX...................X\") == \"1 pan\"\nassert solution(\"A..........X...................\") == \"3 zoom\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 7') == '+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++'\nassert solution('1') == '\\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 20\") == \"apples are great!\"\nassert solution(\"7 7\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 20') == 'apples are great!\\ncheck out our fresh apples!'\nassert solution('7 7') == '    \\n    \\n    \\n    \\ncheck out our fresh apples!\\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 20') == 'apples are great!', \"It Should Be A *HELLO*\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 7\") == \"+++++++\\n+ +++ +\\n+  =  +\\n+ +++ +\\n+     +\\n+++++++\"\nassert solution(\"5 7\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+  =  +\\n+ +++ +\\n+     +\\n+++++++\"\nassert solution(\"5 5\") == \"+++++\\n+  =  +\\n+ +++ +\\n+  =  +\\n+ +++ +\\n+     +\\n+++++\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 20\napples are great!\n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == \"apples are great!\\n\\ncheck out our\\nfresh apples!\\n\"\nassert solution('''7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == \"       \\n       \\n       \\n       \\n       \\n       \\n       \\n       \\n\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 20\") == \"apples are great!\"\nassert solution(\"7 7\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 7\") == \"       \"\nassert solution(\"8 20\") == \"apples are great! check out our fresh apples!       \"\n\n\"\"\"\n\nimport re\nfrom collections import Counter\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '\\n'\nassert solution('2 2') == '+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n'\nassert solution('3 3') == '+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+  =  +\\n+++++++\\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10 11\n+++++++++\n+        +\n+ =++++++\n+ +++++  +\n+ +++ +++\n+       +\n+++++++++\n\"\"\") == \"\"\"++++++++\n+        +\n+ =++++++\n+ +++++  +\n+ +++ +++\n+       +\n+++++++++\"\"\".strip()"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('H?') == '1.5'\n\nassert solution('HH') == '2.0'\n\"\"\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"H?\\n\") == \"1.5\"\nassert solution(\"THT\\n\") == \"2.0\"\nassert solution(\"HTH\\n\") == \"2.0\"\nassert solution(\"HHHH\\n\") == \"1.5\"\nassert solution(\"H?HH\\n\") == \"2.0\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"HH\\n\") == \"2.0\"\nassert solution(\"H?\\n\") == \"1.5\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('H?\\n') == '1.5'\nassert solution('HH\\n') == '2.0'\n'''\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '0111'"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1111\n1111\n1111\n1111''') == '6'\nassert solution('''4\n1111\n1111\n1111\n1111''') == '7'\nassert solution('''4\n1111\n1111\n1111\n1111''') == '5'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '1'\nassert solution('''\n4\n1110\n1110\n1110\n1110\n''') == '3'\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '5'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1\n1\n1''') == '2'\nassert solution('''1\n1\n0\n0\n''') == '4'\nprint('All tests passed!')\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '1'\nassert solution('3\\n1 1\\n1 1\\n1 1\\n') == '2'\nassert solution('7\\n000111\\n000001\\n000111\\n000001\\n000111\\n000001\\n') == '9'\nassert solution('5\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n') == '4'\nassert solution('8\\n00000000\\n00000000\\n00000000\\n00000000\\n00000000\\n00000000\\n00000000\\n00000000\\n') == '0'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n11\\n1111\\n0111') == '1'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\nassert solution('''h 10 1 3\nv 2 1 2\nh 8 2 3\nv 4 1 2''') == '4'\n\nassert solution('''h 10 2 2\nh 5 2 3\nv 1 1 2\nv 4 2 1''') == '4'\n\"\"\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'\nassert solution('''\n4\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n''') == '4'\nprint('All test cases passed.')"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution('h 1 4 1') == '2'\nassert solution('v 2 4 2') == '2'\nassert solution('h 10 2 2') == '2'\nassert solution('v 11 2 3') == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution('1\\n1 1 1\\n1 1 1\\n') == '1'\nassert solution('1\\n1 1 1\\n1 1 1\\nh\\n1 2 1\\nh\\n1 2 1\\nv\\n2 2 1\\n') == '1'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '4'\n\nprint(solution(input))\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n'''"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n4 2 3\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2'\nassert solution('2 3\\n5 6 4 0\\n1 2 3') == '-1'"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0') == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4'\nprint('Tests passed')"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"3 5 4 0\") == \"4\"\nassert solution(\"2 1 0 0\") == \"-1\"\nassert solution(\"3 0 4 5\") == \"4\"\nassert solution(\"2 1 0 0\") == \"2\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8''') == '4'\nassert solution('''10 2\n3 1 2\n5 4 3\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n9 1 0\n2 8 3\n2 5 3\n8 9 0\n1 1 5\n5 9 5\n3 2 4\n2 9 9\n8 7 6\n5 9 3\n2 1 2\n9 8 3\n8 2 8\n5 4 4\n2 8 1\n8 5 0\n9 1 2\n3 3 3\n5 2 4\n7 3 2\n1 1 2\n0 9 9\n8 6 7\n6 6 7\n2 9 9\n3 3 6\n4 6 4\n7 7 1\n4 3 2\n1 6 3\n5 7 7\n4 4 2\n7 5 1\n1 3 8\n9 7 4\n1 1 3\n1 1 5\n4 4 8\n7 6 2\n5 2 6\n5 2 2\n9 8 7\n4 6 1\n7 5 3\n8 8 6\n1 4 1\n0 7 1\n1 1 5\n4 7 2\n1 7 3\n6 1 9\n0 5 7\n6 3 4\n0 8 4\n3 5 3\n4 7 1\n6 4 4\n8 4 3\n1 5 0\n4 6 1\n2 2 2\n2 3 8\n4 3 4\n8 1 4\n5 4 7\n2 6 2\n4 4 3\n7 4 7\n1 7 3\n8 7 2\n1 4 9\n3 2 4\n5 3 1\n4 8 2\n2 2 2\n6 3 3\n8 4 3\n6 4 4\n5 6 3\n4 5 1\n7 7 6\n4 5 4\n7 2 4\n2 7 4\n6 6 5\n5 3 5\n1 4 2\n0 6 1\n1 5 1\n3 6 5\n2 5 8\n5 3 1\n4 4 8\n2 6 1\n7 3 2\n4 5 4\n3 3 3\n3 6 6\n7 5 2\n0 4 1\n2 2 5\n8 4 2\n8 1 3\n0 2 4\n7 3 3\n1 3 8\n6 5 1\n5 3 1\n5 7 8\n2 5 1\n8 3 9\n1 3 4\n2 3 2\n7 3 3\n8 9 7\n2 1 4\n5 5 3\n4 3 2\n7 1 3\n4 2 2\n8 2 1\n2 6 4\n5 4 5\n3 3 5\n5 4 9\n1 8 9\n6 8 2\n0 6 4\n5 5 9\n2 6 6\n1 6 4\n2 1 7\n6 3 5\n1 5 4\n8 3 2\n4 8 5\n1 6 4\n3 1 6\n8 9 8\n4 6 1\n2 3 4\n6 6 2\n7 7 7\n7 1 8\n7 2 4\n8 8 2\n4 5 5\n1 8 7\n7 5 6\n3 4 3\n7 4 4\n7 2 4\n6 7 2\n2 7 4\n1 6 1\n0 5 4\n3 3 3\n2 3 5\n4 4 9\n7 2 4\n1 3 8\n2 6 1\n7 5 3\n0 4 1\n0 4 9\n4 1 9\n0 7 5\n1 7 4\n3 1 6\n0 2 7\n5 3 3\n8 5 2\n0 6 2\n4 5 4\n2 7 2\n3 6 6\n8 3 2\n4 3 4\n5 2 4\n2 5 4\n8 2 5\n4 6 1\n7 3 2\n5 1 5\n0 3 4\n8 7 1\n1 5 7\n4 5 5\n3 4 6\n0 6 1\n0 6 3\n4 2 8\n3 4 1\n8 6 2\n1 2 4\n8 4 6\n8 5 1\n2 5 5\n0 1 6\n2 5 5\n1 5 6\n2 6 6\n2 6 3\n0 2 7\n0 2 8\n0 1 3\n1 3 6\n1 6 7\n4 4 7\n1 5 8\n3 3 3\n4 4 2\n7 7 3\n1 8 1\n4 9 2\n1 1 6\n3 3 9\n6 5 2\n3 4 5\n2 7 3\n7 3 7\n8 6 6\n2 7 2\n6 5 8\n4 8 2\n5 5 4\n7 6 2\n7 3 4\n5 1 2\n4 5 8\n6 1 4\n8 3 7\n4 7 4\n3 7 5\n3 5 5\n2 5 2\n6 5 3\n1 4 4\n2 3 6\n0 3 7\n2 7 4\n4 5 1\n8 1 4\n1 3 5\n5 1 5\n0 2 7\n0 6 6\n5 5 4\n7 4 4\n7 4 8\n4 7 2\n5 2 3\n8 5 6\n5 6 6\n5 4 7\n6 4 2\n6 6 4\n3 6 7\n3 1 4\n8 2 2\n8 2 4\n7 4 1\n7 7 2\n2 6 6\n6 6 4\n4 8 4\n4 5 2\n5 5 4\n6 5 5\n3 7 6\n4 3 4\n8 7 7\n5 8 3\n5 3 7\n7 6 3\n7 3 5\n3 8 3\n6 4 4\n3 6 6\n4 5 5\n7 5 5\n7 6 5\n8 4 3\n1 6 3\n4 5 6\n5 2 2\n5 4 4\n3 5 6\n8 8 7\n2 3 9\n0 6 7\n3 5 8\n7 6 6\n5 5 5\n7 5 4\n1 3 1\n4 4 8\n8 6 7\n0 5 6\n1 4 5\n2 4 3\n5 6 2\n2 7 6\n4 8 4\n7 8 8\n7 8 9\n4 8 9\n0 6 3\n5 7 2\n4 5 7\n3 6 4\n0 5 3\n7 8 6\n6 7 6\n2 7 2\n0 7 2\n8 8 2\n2 7 4\n0 2 5\n8 4 3\n6 3 6\n0 8 6\n4 6 3\n0 1 8\n0 7 3\n8 8 3\n7 6 6\n2 3 2\n7 4 8\n5 5 4\n7 4 4\n0 7 6\n1 6 3\n2 7 5\n4 8 5\n0 7 8\n6 8 6\n0 7 7\n5 3 3\n2 2 3\n8 4 4\n8"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0') == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4'\nprint('All test cases passed!')"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '4'\nprint(solution())\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '4'\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n1 2 3 3 4 2') == '2'\nassert solution('8\\n1 2 1 3 1 3 1 2') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '4'"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 3 4 2') == '2'\nassert solution('6 1 2 3 3 4 2') == '4'\nassert solution('1000000000000000') == '100'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"8\") == \"4\"\n\n##########################\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n') == '2'\nassert solution('8\\n') == '4'\nassert solution('100\\n') == '2'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2 3\n3\n''') == '2'\nassert solution('''8\n1 2 1 3 1 3 1 2\n''') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 1 3 1''') == '2'\nassert solution('''8\n1 2 1 3 1 3 1 2''') == '4'\n\n\"\"\""
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '4'\nassert solution('1 1 1') == '2'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 1') == '0'\nassert solution('2 2 2 1') == '2'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '2'\nassert solution('1 1 1') == '2'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2''') == '4'\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == '4'\nassert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2''') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 2\\n1 1 1\\n2 2 1') == '4'\nassert solution('1 1 1 2\\n1 1 1 2\\n2 2 1') == '0'\nassert solution('1 1 1 2\\n1 1 1 2\\n1 1 1 2') == '3'\nassert solution('1 1 1 2\\n2 2 1') == '2'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\n\nassert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\n\nassert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '0'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == \"4\"\nassert solution('''\n2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == \"2\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\nassert solution('''3\n1 1 1\n2 2 2\n1 2 2 1\n''') == '0'\nassert solution('''10\n1 1 1\n2 2 2\n1 2 2 1\n3 4 4 1\n4 5 5 1\n1 6 6 1\n6 7 7 1\n1 8 8 1\n7 9 9 1\n1 10 10 1\n1 11 11 1\n2 12 12 1\n1 13 13 1\n2 14 14 1\n1 15 15 1\n''') == '21'\nassert solution('''30\n1 1 1\n2 2 2\n1 2 2 1\n3 4 4 1\n4 5 5 1\n1 6 6 1\n6 7 7 1\n1 8 8 1\n7 9 9 1\n1 10 10 1\n1 11 11 1\n2 12 12 1\n1 13 13 1\n2 14 14 1\n1 15 15 1\n6 16 16 1\n1 17 17 1\n6 18 18 1\n1 19 19 1\n2 20 20 1\n1 21 21 1\n1 22 22 1\n2 23 23 1\n1 24 24 1\n2 25 25 1\n1 26 26 1\n1 27 27 1\n2 28 28 1\n1 29 29 1\n2 30 30 1\n1 31 31 1\n''') == '51'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\nassert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\nassert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\nassert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\nassert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '0'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '2 2 2'\n) == '4'\n\nassert solution(\n    '1 1 1'\n) == '0'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == 'impossible'\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == '1'\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"4 2\") == \"impossible\"\nassert solution(\"3 3\") == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == '1'\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible'\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == '2'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"3 5 6\") == \"impossible\"\nassert solution(\"1 2 3 4\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 2') == '2'\nassert solution('4 2') == 'impossible'"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n0 0 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == 'impossible'\nassert solution('3 3\\n1 0 0\\n0 1 0\\n2 0\\n') == '2'\nassert solution('2 3\\n0 0 1\\n0 0 1\\n1 2\\n') == 'impossible'"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 2') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\n\") == \"8\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 3 4 4 5 6 6 6 6 5 7 8 8 9 9 10 11\"\nprint(solution())"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n3\n1 2\n3''') == '8'\nassert solution('''8\n5\n1 2\n3''') == '2'\nassert solution('''6\n5\n1 2\n3\n5''') == '5'\nassert solution('''13\n4\n2\n6\n1''') == '0'\nassert solution('''3\n3\n1\n2''') == '1'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(t1) == \"35\"\nassert solution(t2) == \"2\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(t) == stdout\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '35'\nassert solution('''\n5 5\n1 2 3 4 5\n1\n4 4\n3\n0 4\n2\n7 7\n''') == '8'\nassert solution('''\n6 6\n1 2 3 4 5 6\n1\n4 4\n3\n0 4\n2\n7 7\n''') == '2'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == stdin\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1 2') == '2'\nassert solution('5 2') == '1'\nassert solution('10 4') == '35'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2 2 1'\n\nSample Input 3:\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\nSample Output 3:\n22\n18\n3\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '0 1 3 4'\nassert solution('3') == '0 1 2'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('4') == '6'"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '0 1 2 3 4'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '0 1 2 3 4'\nassert solution('4') == '0 1 2 3'\nassert solution('3') == '0 1 2'\nassert solution('2') == '0 1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solutions.test_stdin_1) == \"0 1 3 6\"\nassert solution(solutions.test_stdin_2) == \"0 1 2 3 4\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"0 1 2 4\"\nassert solution(\"10\") == \"0 1 2 3 4 5 6 7 8 9\"\nassert solution(\"4\") == \"0 1 2 3\"\nassert solution(\"2\") == \"0 1\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '0 1 3 6'\nassert solution('5\\n3 2 1 4 5\\n') == '0 1 2 3 4 6'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"2 4 1 3\"\nassert solution(\"4\") == \"2 3 4 1\""
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4 3 1 2'\nassert solution('1') == '1 2 3'\nassert solution('4') == '2 1 3 4'\nassert solution('6') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n') == '2 4 1 3'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n') == '2 4 1 3', 'First test fail'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n') == '4 3 1 2', 'Second test fail'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(my_input) == my_output"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2 4 1 3'\nassert solution('5') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"2 4 1 3\"\nassert solution(\"1 3 2 2\") == \"2 4 1 3\"\nassert solution(\"1 1 3 2\") == \"2 4 1 3\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '2 4 1 3'\nassert solution('4') == '4 3 1 2'\nassert solution('4') == '4 3 1 2'\nassert solution('4') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n\"\"\") == \"2 4 1 3\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '2 4 1 3'\nassert solution('''\n4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2'\nassert solution('''\n4\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n''') == '1 1 1 1'\nassert solution('''\n3\n0 0 1 1\n1 1 1 1\n1 2 1 1\n''') == '2 1 1 1'\nassert solution('''\n1\n0 0 1 1\n1 2 0 3\n2 2 3 3\n''') == '2 2 1 1'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''23456789TJ\n23456789TJA\n89724TJTA\n89724TJTA''') == 'Theta wins'\n\nassert solution('''1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1A2B3C4D\n1"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins', solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5')"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'Theta wins'\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5''') == 'Theta wins'\nassert solution('''89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49''') == 'Theta wins'\nassert solution('''87964TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49''') == 'Theta loses'\nassert solution('''23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5''') == 'Theta loses'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\n''') == 'Theta wins'\nassert solution('''23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\n''') == 'Theta wins'\nassert solution('''89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\nT5GQO6B622C732C8Y8G8P7G8P7G8P8C8C8P8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'truther'\nassert solution('1 2') == 'truther'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist'\n\nassert solution('3 1\\n1 and fabulist 1 fabulist 2\\n1 not charlatan 1') == 'fabulist'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\"\nassert solution(\"1 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"truther\"\nassert solution(\"2 1\") == \"fabulist\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 2\n1 truther 1\n1 fabulist 1\nSample Input 3:\n3 3\n1 not not truther 1\n1 and fabulist 1\n1 and not charlatan 1\nSample Output 3:\ntruther\nand not\nfabulist\n\n\"\"\") == \"truther\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"truther\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"truther\"\nassert solution() == \"fabulist\""
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n\"\"\") == \"truther\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n''') == \"4\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '4'\nassert solution('2') == '1'\nassert solution('4') == '1'\n\"\"\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '3'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n''') == \"4\", \"Should be 4\"\nassert solution('''\n6\n-1.00 -1.00\n1.00 -1.00\n0.00 1.00\n-1.00 2.00\n-2.00 1.00\n-3.00 0.00\n''') == \"3\", \"Should be 3\"\nassert solution('''\n8\n0.00 1.00\n1.00 1.00\n1.00 1.00\n0.00 1.00\n-1.00 1.00\n-1.00 0.00\n0.00 1.00\n0.00 1.00\n''') == \"2\", \"Should be 2\"\n\n'''\nBinary Search\n\n'''\n\nimport math\nclass Solution(object):\n    def countApples(self, apples, oranges):\n        \"\"\"\n        :type apples: List[int]\n        :type oranges: List[int]\n        :rtype: int\n        \"\"\"\n        apples = sorted(apples)\n        oranges = sorted(oranges)\n        l = 0\n        r = len(apples) - 1\n        count = 0\n        while l <= r:\n            mid = (l + r) / 2\n            if apples[mid] + oranges[mid] >= 2:\n                count += 1\n                r = mid - 1\n            else:\n                l = mid + 1\n        return count\n\n\n'''\nUsing 2D array\n'''\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"5\\n1.00 1.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"3\"\nassert solution(\"2\\n-1.00 -1.00\\n1.00 -1.00\\n0.00 1.00\") == \"2\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n') == '4'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"5\") == \"1\""
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\"\n\nstdin = \"\"\"\n1.00 2.00\n3.00 3.00\n4.00 4.00\n5.00 5.00\n6.00 6.00\n7.00 7.00\n8.00 8.00\n9.00 9.00\n10.00 10.00\n11.00 11.00\n12.00 12.00\n13.00 13.00\n14.00 14.00\n15.00 15.00\n16.00 16.00\n17.00 17.00\n18.00 18.00\n19.00 19.00\n20.00 20.00\n21.00 21.00\n22.00 22.00\n23.00 23.00\n24.00 24.00\n25.00 25.00\n26.00 26.00\n27.00 27.00\n28.00 28.00\n29.00 29.00\n30.00 30.00\n31.00 31.00\n32.00 32.00\n33.00 33.00\n34.00 34.00\n35.00 35.00\n36.00 36.00\n37.00 37.00\n38.00 38.00\n39.00 39.00\n40.00 40.00\n41.00 41.00\n42.00 42.00\n43.00 43.00\n44.00 44.00\n45.00 45.00\n46.00 46.00\n47.00 47.00\n48.00 48.00\n49.00 49.00\n50.00 50.00\n51.00 51.00\n52.00 52.00\n53.00 53.00\n54.00 54.00\n55.00 55.00\n56.00 56.00\n57.00 57.00\n58.00 58.00\n59.00 59.00\n60.00 60.00\n61.00 61.00\n62.00 62.00\n63.00 63.00\n64.00 64.00\n65.00 65.00\n66.00 66.00\n67.00 67.00\n68.00 68.00\n69.00 69.00\n70.00 70.00\n71.00 71.00\n72.00 72.00\n73.00 73.00\n74.00 74.00\n75.00 75.00\n76.00 76.00\n77.00 77.00\n78.00 78.00\n79.00 79.00\n80.00 80.00\n81.00 81.00\n82.00 82.00\n83.00 83.00\n84.00 84.00\n85.00 85.00\n86.00 86.00\n87.00 87.00\n88.00 88.00\n89.00 89.00\n90.00 90.00\n91.00 91.00\n92.00 92.00\n93.00 93.00\n94.00 94.00\n95.00 95.00\n96.00 96.00\n97.00 97.00\n98.00 98.00\n99.00 99.00\n100.00 100.00\n\"\"\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5 2') == \"16\"\nassert solution('3 3 1') == \"10\"\nassert solution('2 3 1') == \"10\"\n\nstdin = \"\"\"\n10 5 2\n.X..\n.?.\n100 100 7 100 8\n\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5 2\\nR.X.\\n.X.X\\n100 100 7 100 8\\n') == '16'"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1\\nX..\\n.X...\\n10 1000 1') == \"10\"\nassert solution('10 3 10\\nX..\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X.X\\n.X."
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '16'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3 1\n.X..\n.X...\n100 100 7 100 8''') == '16'\nassert solution('''2 4 3\n...X.\n...X.\n...X.\n...X.\nSample Output 3:\n10''') == '10'\nassert solution('''2 2 2\n...X.\n...X.\nSample Output 4:\n0''') == '0'\nassert solution('''3 2 2\n....X.\n....X.\nSample Output 5:\n0''') == '0'\nassert solution('''4 3 3\n...X.\n.X..\n...X.\n...X.\nSample Output 6:\n0''') == '0'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n') == '16'\nassert solution(\n    '3 3 1\\nX..\\n.?.\\n1 2 3') == '1'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 5 2\nR..?.\n.X...\n100 100 7 100 8\n''') == \"16\"\nassert solution('''2 5 3\nX..\n.?.\n10 1000 1\n''') == \"10\"\nassert solution('''1 1 1\nX.\n''') == \"0\"\nassert solution('''1 1 1\n.X.\n''') == \"0\"\nassert solution('''10 20 30\n?\n''') == \"0\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 1') == '10'\nassert solution('3 3 2') == '0'\nassert solution('3 3 3') == '0'\nassert solution('3 3 5') == '0'\nassert solution('3 3 10') == '1000000'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nprint(solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\"))\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5 2') == '16'\nassert solution('2 3 1') == '10'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1.414'\nassert solution('6 11') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1.414'\nassert solution('6 11') == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3 3\n0 4 4\n1 5 1\n2 6 1\n''') == '1.414'\nassert solution(\n'''\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n''') == '5.657'\nassert solution(\n'''\n5 5\n1 1 2\n2 2 2\n3 3 2\n4 4 2\n1 5 5\n''') == '3.902'\n\n'''\n5 5\n1 1 2\n2 2 2\n3 3 2\n4 4 2\n1 5 5\n''') == '3.902'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == \"1.414\"\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == \"5.657\"\n\n[input]\n4\n1 5 1\n0 0 1\n1 1 4\n2 6 1\n\n[output]\n1.414\n\n[input]\n6\n1 2 1\n0 0 1\n1 1 4\n5 5 1\n20 20 10\n\n[output]\n5.657\n''')"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '1.414'\nassert solution('6 11') == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\n0 0 1\\n1 0 3') == '1.414'\nassert solution('2 3\\n0 1 2\\n1 0 3') == '4.714'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"1.414\"\nassert solution(\"6 11\") == \"5.657\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1.414'\nassert solution('6 11') == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3\n0 4 4\n1 5 1\n2 6 1\n\"\"\") == \"1.414\"\nassert solution(\"\"\"\n5 6\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n\"\"\") == \"5.657\""
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == '1.0'\nassert solution('2 2 3') == '2.0'\nassert solution('4 4 4 4') == '2.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 1 1 1\") == \"1.0\"\nassert solution(\"5 1 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 3 4 1 2 2 2') == '4.0'\nassert solution('5 2 4 5 2 5') == '4.0'\nassert solution('5 1 3 1 3 2') == '2.0'\nassert solution('2 5 2 2 3 2') == '1.0'"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 1\") == \"0.433\"\nassert solution(\"2 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 2 2 3\n2\n''') == '1.0'\nassert solution('''\n3\n1 2 1 3\n2\n''') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 3 3 1') == '1.0'\nassert solution('1 1 1 3 3') == '0.0'\nassert solution('5 5 5 5 5') == '0.0'\nassert solution('4 4 4 4 4') == '1.0'\nassert solution('1 1 1 1 1') == '1.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30') == '5'\nassert solution('7 10\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n4 3 15\\n5 4 100\\n3 3 15') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"8 10\") == \"36\"\n\nstdin = \"\"\"\n20 10\n1 1 8\n2 1 8\n2 2 7\n3 2 8\n3 3 7\n4 2 100\n4 3 15\n\"\"\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"6 5\") == \"4\"\nassert solution(\"8 10\") == \"36\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5') == '5'\nassert solution('8 10') == '36'\nassert solution('8 10') == '36'\n\"\"\"\n\nn,k=map(int,input().split())\n\nplants={}\n\nfor i in range(n):\n    x,y,cnt=map(int,input().split())\n    if(x not in plants):\n        plants[x]={}\n    if(y not in plants[x]):\n        plants[x][y]=cnt\n    else:\n        plants[x][y]+=cnt\n\ntotal=0\nfor x in plants:\n    for y in plants[x]:\n        total+=plants[x][y]"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n') == '5\\n4\\n1 1\\n2 1\\n2 2\\n3 2\\n3 3\\n'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5''') == '5'\nassert solution('''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '36'\nprint(solution('''10 20\n1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2\n1 3 1 3 1 3 1\n2 1 2 1 2 1 2\n1 3 3 3 3 3 3\n1 1 3 1 3 1 1\n1 2 2 2 2 2 2\n1 3 3 3 3 3 3\n1 1 1 1 1 1 1\n2 3 2 3 2 3 2\n1 2 2 2 2 2 2\n1 3 3 3 3 3 3\n1 1 3 1 3 1 1\n1 2 2 2 2 2 2\n1 3 3 3 3 3 3'''))\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"8 10\") == \"36\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5') == '5'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36'\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(\"\"\"\n4 3\n1 2 5\n1 1 3\n1 1 2\n2 1 5\n3 2 3\n3 2 5\n4 3 3\n5 1 5\n6 2 3\n7 2 3\n8 3 5\n10 1 1\n1 1 4\n1 1 2\n1 2 4\n1 2 2\n1 3 4\n1 3 3\n1 4 4\n2 1 4\n2 1 2\n2 3 4\n2 3 3\n2 4 4\n3 1 4\n3 1 3\n3 2 4\n4 1 4\n4 1 3\n4 2 4\n4 2 2\n4 3 4\n5 2 3\n5 2 5\n6 2 5\n6 3 4\n7 3 4\n7 3 2\n7 4 4\n7 4 2\n7 5 4\n8 1 4\n8 1 2\n8 3 4\n8 3 2\n8 4 4\n8 4 2\n8 5 4\n9 1 4\n9 1 2\n9 3 4\n9 3 2\n9 4 4\n9 4 2\n9 5 4\n10 4 4\n10 4 2\n10 5 4\n11 4 4\n11 4 2\n11 5 4\n12 1 4\n12 1 2\n12 3 4\n12 3 2\n12 4 4\n12 4 2\n12 5 4\n13 1 4\n13 1 2\n13 3 4\n13 3 2\n13 4 4\n13 4 2\n13 5 4\n14 4 4\n14 4 2\n14 5 4\n15 1 4\n15 1 2\n15 3 4\n15 3 2\n15 4 4\n15 4 2\n15 5 4\n16 1 4\n16 1 2\n16 3 4\n16 3 2\n16 4 4\n16 4 2\n16 5 4\n17 1 4\n17 1 2\n17 3 4\n17 3 2\n17 4 4\n17 4 2\n17 5 4\n18 1 4\n18 1 2\n18 3 4\n18 3 2\n18 4 4\n18 4 2\n18 5 4\n19 1 4\n19 1 2\n19 3 4\n19 3 2\n19 4 4\n19 4 2\n19 5 4\n20 1 4\n20 1 2\n20 3 4\n20 3 2\n20 4 4\n20 4 2\n20 5 4\n\"\"\")"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\"\nassert solution(\"6 5\\n2 3 5\\n3 2 30\\n3 3 5\\n2 2\\n3 2\\n3 3\\n2 1\") == \"4\"\nassert solution(\"5 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\""
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"8 10\") == \"36\"\nassert solution(\"1 1 15\") == \"15\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 4') == '2'\nassert solution('10 3') == '3'\nassert solution('6 5') == '2'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n2 1\n1 2\n''') == '1'\nassert solution('''\n3 2\n2 1 3\n1 3\n2 3\n''') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\") == \"3\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution(stdin='2 1\\n2 1\\n1 2\\n') == '1'"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n2 1\\n1 2\\n') == '1'\nassert solution('3 2\\n2 1 3\\n1 3\\n2 3\\n') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '3 2 1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == \"5\"\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == \"5\"\nassert solution(\"1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == \"5\"\nassert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == \"-1\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5''') == '5'\nassert solution('''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\nSample Output 3:\n6\n''') == '6'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '2'\nassert solution('5 8') == '1'"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '-1'\nassert solution('1') == '0'\nassert solution('5 3') == '3'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '5'\nassert solution('''6 5\n2 4\n3 5\n1 5\n3 6\n1 6\nSample Output 3:\n7\n''') == '7'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '-1'\nassert solution('6 5') == '5'"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 8\") == '-1'\nassert solution(\"6 5\") == '5'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n3 2\n2 3\n4 4\n''') == '2'\nassert solution('''\n5 6\n2 4\n3 5\n1 5\n3 6\n1 6\nSample Output 3:\n7\n''') == '-1'\nassert solution('''\n5 7\n2 4\n3 5\n1 5\n3 6\n1 6\nSample Output 4:\n6\n''') == '5'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4\\n3 5\\n4 5\\n1 5\\n3 6\\n1 6\\n') == '5'\nassert solution('5 8\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n') == '-1'\nassert solution('6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n') == '5'"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3') == '4.00'\nassert solution('5 3') == '4.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''\n6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"4.00\"\nassert solution(\"4 1\") == \"4.00\"\nassert solution(\"4 2\") == \"4.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1') == '4.00'\nassert solution('6 3') == '9.00'\nassert solution('6 5') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    4 1\n    1 1\n    5 1\n    5 5\n    4 2\n    ''') == '4.00'\n    assert solution(\n    '''\n    6 3\n    -8 -8\n    0 -1\n    8 -8\n    1 0\n    0 10\n    -1 0\n    Sample Output 2:\n    9.00\n    ''') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\n\nassert solution('''\n6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 1\n1 1\n5 1\n5 5\n4 2\n\"\"\") == \"4.00\"\nassert solution(\"\"\"\n6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n\"\"\") == \"9.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\n\nassert solution('''\n10 10\n-1 -1\n1 1\n1 -1\n-1 -1\n-1 1\n-1 -1\n1 1\n1 -1\n-1 -1\n1 1\n1 -1\n-1 -1\n''') == '10.00'\n\nassert solution('''\n3 3\n-1 -1\n-2 -1\n-2 -2\n-1 -2\n-1 -1\n-2 -1\n-2 -2\n-1 -2\n-1 -1\n-2 -2\n-2 -2\n-1 -2\n-1 -1\n-2 -1\n-2 -1\n-1 -2\n-1 -1\n-2 -2\n''') == '4.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"9.00\"\nassert solution(\"100 6\") == \"103.00\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\n    \"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == stdin\n\nInput\nSample Input 1:\n3 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\nSample Output 1:\n2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n\nInput:\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\nSample Output 2:\n3 1 1\n1 3 1\n1 1 1\n1 2 1\n\nInput:\n1 3 2\nSAVE\nPAINT 2 1 1 2 2\nSAVE\nPAINT 3 1 3 3 3\nLOAD 1\nSample Output 3:\n1 2 1\n2 1 1\n1 2 1\n1 2 1\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3', 'First'\nassert solution('''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '1 2 1 2', 'Second'\nassert solution('''4 3 4\nPAINT 2 0 0 1 1\nSAVE\nPAINT 3 0 3 3 3\nSAVE\nPAINT 4 0 0 1 1\nLOAD 2\n''') == '4 1 1', 'Third'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'''"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 2') == '2 1 2'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3'\nassert solution('''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '3 1 1'\nassert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '2 1 2 3'"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\") == \"2 1 2 3\"\nassert solution(\"4 4 3 2\") == \"2 1 2 3\"\nassert solution(\"4 1 2 3\") == \"1 1 1 1\"\nassert solution(\"3 1 2 3\") == \"1 1 1 1\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3', solution.__doc__\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'''\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3'\n\nassert solution('''\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '1 2 1 2'\n\nassert solution('''\n4 4 1\nPAINT 3 0 0 1 1\nPAINT 2 0 0 2 2\nSAVE\nPAINT 1 0 0 1 1\nPAINT 2 1 1 2 2\nLOAD 2\n''') == '1 1 1 2 2'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 4 2 3\n''') == '1 4 2 3'\nassert solution('''\n5 1\n-1\n''') == '-1'\nassert solution('''\n7 6\n2 3 2 3 3 2 1\n''') == '2 3 1'"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '-1'\nassert solution('4 3') == '1 4 2 3'"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '-1'\nassert solution('4 3') == '1 4 2 3'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 3\nSample Output 1:\n1 4 2 3\n\nSample Input 2:\n5 1\nSample Output 2:\n-1\n''') == '1 4 2 3'\n\nassert solution(\n'''\n5 1\nSample Output 1:\n1 4 2 3 5\n\nSample Input 2:\n4 3\nSample Output 2:\n-1\n''') == '1 4 2 3'\n\nassert solution(\n'''\n10 1\nSample Output 1:\n1 2 3 4 5 6 7 8 9 10\n\nSample Input 2:\n10 1\nSample Output 2:\n-1\n''') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"1 2 3 4\"\n\nassert solution(\"1 2\") == \"1 2\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '-1'\nassert solution('4 3') == '1 4 2 3'"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1') == '-1'\n\n>>>"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"-1\"\nassert solution(\"3 4\") == \"1 4 2 3\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n4 5''') == '2 4 1 3 5'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n4 2\n2 1\n1 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n5 0\n2 6\n8 6\n5 7\n\"\"\") == \"0\"\n\"\"\"\n\n/*\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1', \"First\"\nassert solution('4') == '1', \"Second\"\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5 0') == '1'\nassert solution('2 6') == '1'\nassert solution('8 6') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('6') == '0'\nassert solution('7') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n2 1\n1 3\n''') == '1'\n'''\n    pass\nassert solution('''\n3 4\n4 2\n2 1\n1 3\n''') == '1'\n'''\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n4 2\\n2 1\\n1 3') == '1'\nassert solution('3\\n5 0\\n2 6\\n8 6\\n5 7') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 2\") == \"1\""
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 1\\n1 3') == '1'\nassert solution('3\\n4 2\\n2 1\\n1 3') == '0'\nassert solution('3\\n4 2\\n2 1\\n1 3') == '0'"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n4 2\n2 1\n1 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n-4 2\n2 1\n1 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n-2 -6\n1 2\n-1 1\n1 -2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n5 1\n2 1\n1 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5\n0 0\n1 1\n1 0\n1 1\n1 0\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '0'"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '4 140'\nassert solution('''\n2 1 0 1\n0 1 1000 100\nSample Output 2:\n1000 100000\n''') == '1000 100000'\nassert solution('''\n''') == '0 0'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == \"4 140\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '1000 100'"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10''') == '4 140'\nassert solution('''3 3 0 3\n0 1 4 10\n1 2 2 10\n2 3 4 10''') == '4 690'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4 0 3') == '4 140'\nassert solution('2 1 0 1') == '1000 100000'\nassert solution('10 10 0 3') == '10 20000'\nprint('All test cases passed.')"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n\"\"\") == \"1000 100000\"\nprint(solution(*map(int, input().split())))\n\"\"\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 0 1\") == \"1000 100\"\nassert solution(\"2 1 0 1\") == \"1000 100\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 0 1\") == \"1000 100\"\nassert solution(\"4 4 0 3\") == \"4 140\"\nassert solution(\"4 4 0 3\") == \"4 140\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4 0 3') == '4 140'\nassert solution('2 1 0 1') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 0 1\") == \"2 140\"\nassert solution(\"2 1 0 1\") == \"1000 100\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 7\\n2 3\\n5 7\\n') == '3'\nassert solution('4 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\\n') == '3'\nassert solution('8 2\\n8 3\\n5 7\\n') == 'impossible'\nassert solution('8 2\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\\n') == 'impossible'\nassert solution('5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"impossible\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('\\n'.join([\n    '5',\n    '3 3',\n    '1 4',\n    '1 2',\n    '1 6',\n    '1 7',\n    '2 4',\n    '3 4',\n    '4 2',\n    '2 6',\n    '5 5',\n    '4 4',\n    '3 5',\n    '4 1',\n    '1 5',\n    '2 6',\n    '3 7',\n    '4 5',\n    '4 1',\n    '5 5',\n    '2 6',\n    '3 4',\n    '1 4',\n    '2 6',\n    '3 6',\n    '2 2',\n    '4 2',\n    '3 2',\n    '4 2',\n    '1 7',\n    '2 6',\n    '3 5',\n    '1 4',\n    '2 4',\n    '3 5',\n    '4 4',\n    '3 6',\n    '2 6',\n    '4 1',\n    '1 6',\n    '2 5',\n    '3 5',\n    '2 6',\n    '4 1',\n    '4 1',\n    '5 5',\n    '2 6',\n    '3 5',\n    '1 6',\n    '2 5',\n    '3 4',\n    '4 5',\n    '2 3',\n    '2 4',\n    '4 4',\n    '4 4',\n    '1 3',\n    '2 4',\n    '3 4',\n    '3 4',\n    '4 3',\n    '1 4',\n    '2 4',\n    '3 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '1 7',\n    '2 6',\n    '3 5',\n    '1 4',\n    '2 4',\n    '3 5',\n    '4 4',\n    '3 6',\n    '2 6',\n    '4 1',\n    '1 5',\n    '2 5',\n    '3 4',\n    '4 4',\n    '3 4',\n    '4 4',\n    '3 6',\n    '2 6',\n    '4 4',\n    '4 4',\n    '3 6',\n    '2 6',\n    '4 4',\n    '4 4',\n    '1 7',\n    '2 5',\n    '3 4',\n    '1 4',\n    '2 4',\n    '3 4',\n    '4 4',\n    '3 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n    '4 4',\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 1\n2 2\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n3 1\n2 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2 2\n2 1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2 2\n1 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2 2\n1 2\n\"\"\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n'''\n    ) == '3'\nassert solution(\n'''\n10 20\n100 200\n200 100\n'''\n    ) == 'impossible'\n\nassert solution(\n'''\n10 20\n100 200\n200 100\n'''\n    ) == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == '3'\nassert solution('100 3\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n100 5\n2 4\n1 7\n6 9\n6 4\n9 8\n\"\"\") == \"3\"\nassert solution(\"\"\"\n10 7\n1 2\n2 4\n3 5\n4 7\n5 8\n6 9\n7 10\n8 11\n9 12\n10 14\n11 13\n12 17\n13 18\n14 19\n15 20\n16 21\n17 22\n18 23\n19 24\n20 26\n21 27\n22 28\n23 30\n24 31\n25 32\n26 33\n27 34\n28 35\n29 36\n30 37\n31 38\n32 39\n33 40\n34 42\n35 43\n36 44\n37 46\n38 47\n39 48\n40 50\n41 52\n42 54\n43 56\n44 58\n45 60\n46 62\n47 64\n48 66\n49 68\n50 70\n51 72\n52 74\n53 76\n54 78\n55 80\n56 82\n57 84\n58 86\n59 88\n60 90\n61 92\n62 94\n63 96\n64 98\n65 100\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 2\n8 3\n5 7\n''') == '3'\nassert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == '3'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 2 3 4 5 6 7 8\\n\"\n    \"1 2 3 4 5 6 7 8\\n\"\n    \"1 2 3 4 5 6 7 8\\n\"\n    \"1 2 3 4 5 6 7 8\\n\"\n    \"1 2 3 4 5 6 7 8\\n\"\n    \"1 2 3 4 5 6 7 8\\n\"\n    \"1 2 3 4 5 6 7 8\\n\"\n    \"1 2 3 4 5 6 7 8\\n\"\n    \"1 2 3 4 5 6 7 8\"\n) == \"3\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution(input_string=\"1 2\") == \"impossible\"\n\n'''\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '21'\nassert solution(input()) == '0'\n\"\"\"\nimport itertools"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 1 2\n''') == '45'\n\nassert solution('''\n10 1 3\n''') == '12'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1 2\n5 2 2\n5 3 3''') == '60'\nassert solution('''10 1 2\n10 1 2\n10 2 2\n''') == '60'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 1') == '45'\nassert solution('3 3 3') == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('3 1 2') == '6'\nassert solution('3 1 3') == '6'\nassert solution('5 2 4') == '1'\nassert solution
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_stdin) == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 2') == '10'\nassert solution('10 1 2') == '45'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '18'\nassert solution('''\n10\n5 6\n9 8\n4 1\n5 2\n6 3\n6 5\n10 9\n''') == '20'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == 'impossible'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == 'impossible'\nassert solution('''\n10\n5 6\n9 8\n4 1\n5 2\n6 3\n6 5\n10 9\n''') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible'\nassert solution('8\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible'\nassert solution('1\\n0\\n10\\n') == '10'\nassert solution('3\\n1\\n2\\n') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'impossible'\nassert solution('10') == 'impossible'\nassert solution('3 1') == 'impossible'\nassert solution('4 1') == '4'\nassert solution('5 9') == '18'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '20'\nassert solution('''\n3\n1 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3') == '20'"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '20'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10''') == 'impossible'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n11''') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10') == '20'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'impossible'\nassert solution('3 1') == '18'\nassert solution('4 1') == '20'\nassert solution('5 9') == '20'\nassert solution('2 6') == '20'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == '18'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == 'impossible'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n1 5 10\n7 8 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3\n-1 -1 -1\n5 5 5\n10 10 10\n\"\"\") == \"11\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '11'\nassert solution('3') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 5 10\n7 8 2\n''') == '3'\n\nassert solution('''6\n-1 -1 -1\n5 5 5\n10 10 10\n11 11 11\n''') == '7'"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 5 10\n7 8 2\n''') == '3'\nassert solution('''\n3\n-1 -1 -1\n5 5 5\n10 10 10\n''') == '11'\n\"\"\""
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2\\n1 5 10\\n7 8 2\"\n) == \"3\"\nassert solution(\n    \"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\"\n) == \"11\"\n\nprint('All test cases passed!!!')\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    3\n    1 5 10\n    7 8 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n    2\n    1 5 10\n    7 8 2\n\"\"\") == \"11\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 5 10\n7 8 2\n''') == '3'\nassert solution('''\n3\n-1 -1 -1\n5 5 5\n10 10 10\n''') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1 5 10\n    7 8 2\n    ''') == '3'\nassert solution('''\n    3\n    -1 -1 -1\n    5 5 5\n    10 10 10\n    ''') == '11'\n''')\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '3'\nassert solution('2') == '11'"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"001100100100100101001\") == \"3\"\nassert solution(\"110100011101100101001\") == \"2\"\nassert solution(\"011111011111010101010101011\") == \"1\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n1000\n1000\n0000\n0010\n''') == '0'\nassert solution('''\n4 4\n100\n011\n101\n111\n''') == '4'\nassert solution('''\n3 2\n110\n011\n''') == '2'\nassert solution('''\n2 2\n100\n010\n''') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 2\") == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('3\\n1\\n1\\n1') == '1'\nassert solution('4\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"0\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"10 1\") == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '2'\nassert solution('3 1') == '0'\nassert solution('4 1') == '4'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 2\") == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n110\n011\n''') == '2'\nassert solution('''\n4 2\n1000\n1000\n0000\n0010\n''') == '0'\n'''\n\n### WORKING VERSION"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"4 1\") == \"0\"\nassert solution(\"10 1\") == \"9\"\nassert solution(\"10 0\") == \"4\"\nassert solution(\"10 2\") == \"5\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n3\n2''') == '1'\n\nassert solution('''3\n1 3 2\n2\n3''') == '5'\n\nassert solution('''5\n2 2 2 2 2\n2\n1''') == '2'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2 3\n3\n2''') == '1'\nassert solution('''4\n1 3 4 2\n2\n1''') == '2'\nassert solution('''5\n1 3 4 2 5\n2\n2''') == '3'\nassert solution('''10\n1 5 1 2 1 2 1 2 1 1\n1\nSample Input 3:\n5\n1 2 3 4 5\n3\nSample Output 3:\n2\nSample Input 4:\n5\n1 2 3 4 5\n3\nSample Output 4:\n0\n''') == '0'\nassert solution('''3\n5 1 3\n1\n2\nSample Input 5:\n3\n1 2 3\n3\nSample Output 5:\n3\nSample Input 6:\n10\n1 2 2 4 5 4 3 2 1\n2\nSample Output 6:\n2\n''') == '1'\n\n--execution time limiter--\n--- 4s ---\n\n\"\"\"\nimport sys\n\nN = int(input())\nprice_list = list(map(int, input().split()))\nP = int(input())\nanswer = 0\nprevious_price = price_list[0]\nfor i in range(1, N):\n    current_price = price_list[i]\n    if previous_price <= P and current_price > P:\n        answer += 1\n    previous_price = current_price\nprint(answer)\n\"\"\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2 3\\n3') == '1'\nassert solution('1 2 3\\n3') == '1'\nassert solution('1 2 3\\n3') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n3') == '1'\nassert solution('3\\n1 3 2\\n2') == '5'\n\n------Hints------\n1. What are the relations and indexes of the array (e.g., 1 3 2 3 1) for a given $P$?\n2. Have you already written an efficient solution to the problem? If so, why not re-use it.\n3. What are the three most common types of subsequences in an array ($1 \\leq n \\leq 100$, $1 \\leq m \\leq 100$, $1 \\leq p \\leq 100$, $0 \\leq u \\leq 100$)?\n4. Solve it recursively by keeping track of the most common subsequence of size $k$ and then pick a maximum out of the k subsequences.\n5. Use a sliding window with size 1 to test for subsequences.\n6. Pick the longest subsequence, compare to the average, and then compare to the $P$th percentile.\n\"\"\""
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n3\n5\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n1 3 2 3 2\n5\n3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n9\n1 4 2 4 2 2 3 5 5 5\n5\n4\n\"\"\") == \"10\"\nassert solution(\"\"\"\n8\n1 2 2 2 2 2 2 2\n2\n8\n\"\"\") == \"7\""
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"1\""
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\n\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '1'\nassert solution('3') == '1'\nassert solution('3') == '1'\nassert solution('3') == '1'\n\"\"\""
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 3\n3\n1\n5''') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"5\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nn, r, p = map(int, input().split())\nprint(min(n + r + p, n + p, r + p))''') == '0'\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '19'\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 100 20\") == '0'\nassert solution(\"10 10 1\") == '19'\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 10 1\") == \"0\"\nassert solution(\"10 10 1\") == \"19\""
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 100 20') == \"0\"\nassert solution('10 10 1') == \"19\"\nassert solution('100 100 0 0 1') == \"99\"\nassert solution('100 100 1 0 1') == \"199\"\nassert solution('100 100 0 0 1') == \"199\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    1\n    2\n    3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n    4\n    5\n    5\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n    3\n    3\n    4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n    10\n    10\n    10\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n    20\n    20\n    20\n\"\"\") == \"0\""
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\n\nimport sys\nimport math"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    int a;\n    a = 1;\n    printf(\"Hello %d\", a);\n''') == \"Hello 1\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 100 20\\n') == '0'\nassert solution('10 10 1\\n') == '19'\n\"\"\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\nassert solution('''1\na\nimport b\nb 0\n''') == 'SHIP IT'\nassert solution('''2\na\nimport b, c\nb 0\nimport c\nc 0\n''') == 'SHIP IT'\nassert solution('''3\na\nimport b, c\nb 0\nimport c\nc 0\n''') == 'SHIP IT'\nassert solution('''4\na\nimport b, c\nb 0\nimport c\nc 0\n''') == 'SHIP IT'\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"SHIP IT\"\nassert solution(\"1,2,3,4\") == \"SHIP IT\"\nassert solution(\"4,2,3,4\") == \"SHIP IT\"\nassert solution(\"4,2,3,4,\") == \"SHIP IT\"\nassert solution(\"5,2,3,4,\") == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'SHIP IT'\nassert solution('2') == 'SHIP IT'\nassert solution('4') == 'SHIP IT'\nassert solution('5') == 'SHIP IT'\n\n'''\n\nfrom collections import deque"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nimport c, b, a\") == \"SHIP IT\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'SHIP IT'\nassert solution('4') == 'c'\nassert solution('5') == 'SHIP IT'\nassert solution('100') == 'SHIP IT'\nassert solution('101') == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'c', 'Wrong answer in sample #1'\nassert solution('''\n5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT', 'Wrong answer in sample #2'\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c') == 'c'\nassert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe') == 'SHIP IT'\nassert solution('3\\na b c\\na 1\\nimport c, a\\nb 2\\nimport b, c') == 'a'\nassert solution('8\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe') == 'SHIP IT'\nassert solution('10\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe') == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nc 1\\nimport c') == 'c'\nassert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe') == 'classa'\n\nInput:\n5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nlibe 0\n\nOutput:\nSHIP IT\n\nExplanation:\nWe have a cyclic dependency in the code base, so the shortest cycle is classa classb myfilec execd libe.\n'''\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\\n\") == \"SHIP IT\"\nassert solution(\"2\\na a\\nimport a\\n\") == \"a\"\nassert solution(\"2\\na\\nimport a\\n\") == \"a\"\nassert solution(\"3\\nx x x\\nx x x\\nx x x\\nx x x\\n\") == \"SHIP IT\"\nassert solution(\"3\\na\\nimport a\\n\") == \"a\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\na\\nb\\nc') == 'SHIP IT'\nassert solution('5\\na\\nb\\nc\\nd\\ne\\nf') == 'f'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"5+3+x+1+2+3\") == \"3\"\nassert solution(\"x+x+1+2+x\") == \"4\"\nassert solution(\"5*x\") == \"5\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nprint(solution())"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5+3+x''') == '1'\nassert solution('''20+3+x''') == '2'\nassert solution('''20+3x''') == '2'\nassert solution('''20+3''') == '2'\nassert solution('''2x+2''') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5+3+x''') == \"1\"\nassert solution('''20+3+x''') == \"2\"\nassert solution('''0 5''') == \"2\"\nassert solution('''0 0''') == \"0\"\nprint(\"AoC 2020 - Day 1: The Tyranny of the Rocket Equation\")\nfin = open(\"Day1Input.txt\", \"r\")\nstdin = fin.readlines()\nprint(solution(stdin[0]))\nprint(solution(stdin[1]))\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"1+x\") == \"1\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2,10,0,15,5,20]) == \"yes\"\nassert solution([1,10,0,15,5,20]) == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 10\n0 15\n5 20\n''') == 'yes'\nassert solution('''\n1 10\n0 15\n5 20\n''') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10\\n1 15\\n0 20') == 'yes'\nassert solution('2 10\\n1 20\\n0 15') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10\\n1 15\\n0 20') == 'yes'\nprint(solution(*sys.stdin.read().splitlines()))\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 10') == 'yes'\nassert solution('2 10') == 'no'\nassert solution('10 1') == 'no'\n'''\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 10') == 'yes'\nassert solution('2 10') == 'no'\nassert solution('10 20') == 'yes'\nassert solution('1 15') == 'no'\nassert solution('0 15') == 'yes'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10\\n0 15\\n5 20') == 'yes'\nassert solution('2 10\\n1 15\\n0 20') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 10\n0 15\n5 20\n\"\"\") == \"yes\"\nassert solution(\"\"\"\n5 10\n0 15\n0 20\n\"\"\") == \"no\"\nassert solution(\"\"\"\n6 10\n1 15\n0 20\n0 25\n5 30\n4 40\n3 45\n2 50\n\"\"\") == \"yes\"\n\"\"\"\nfor n in range(1,11):\n    for i in range(1,n+1):\n        print(n)\n\"\"\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n1 15\\n0 20\") == \"yes\"\nassert solution(\"2 10\\n0 10\\n5 20\") == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 10\\n0 15\\n5 20') == 'yes'\nassert solution('2 10\\n1 15\\n0 20') == 'no'\n\"\"\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n\"\"\") == \"0.25\"\nassert solution(\"\"\"\n3 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n\"\"\") == \"1.0\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\nassert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0'"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0.25'\nassert solution('5') == '0.5'"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0.5'\nassert solution('4') == '0.25'\nassert solution('4 4 4') == '0.25'\nassert solution('3') == '0.5'\nassert solution('4') == '0.25'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\") == \"0.25\"\nassert solution(\"4 4 4\") == \"0\"\nassert solution(\"8 8 8\") == \"0.5\"\nassert solution(\"8 8 8\") == \"0\"\nassert solution(\"4 4 4\") == \"0.25\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 4') == '0.25'\nassert solution('4 4 4') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n5\\n1 green\\n2 red\\n5 green') == '0.25'\nassert solution('4\\n4 4\\n4\\n5\\n1 green\\n2 green\\n3 green\\n3 red\\n5 green') == '0.5'\nassert solution('4\\n4 4\\n4\\n5\\n1 green\\n2 red\\n3 red\\n3 red\\n5 green') == '0.5'\n\nfrom sys import stdin"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0'"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 1') == '0.25'\nassert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0.25'\nassert solution('6 4 2') == '0.25'"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n''') == '3'\nassert solution('''\n6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == 'inf'\nassert solution('''\n5 5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '5'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\") == \"inf\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3''') == '3'\n\nassert solution('''6\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n5 5''') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"inf\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n''') == '3'\nassert solution('''\n6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '3'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution(input_stdin=SAMPLE_INPUT_1) == \"3\"\nassert solution(input_stdin=SAMPLE_INPUT_2) == \"inf\"\nassert solution(input_stdin=STDIN_INPUT) == \"6\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '4'\n\nassert solution('''\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '4'\nassert solution('''\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4 4\n1 2 3 4\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n2 4\n2 3 4 5\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n3 3\n4 5\n2 3 4\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n3 4\n2 3 4 5\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 5\n3 4 3 1 2\n''') == '2'\nassert solution('''\n4 5\n3 4 3 1 2\n''') == '4'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"12 3\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input(stdin=True)) == \"2\"\nprint(solution(input(stdin=True)))\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 4\n1 2 3 4\n\"\"\") == \"4\"\nassert solution(\"\"\"12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n\"\"\") == \"2\"\nassert solution(\"\"\"12 3\n2 2 2 3 3 3 4 4\n\"\"\") == \"2\"\nassert solution(\"\"\"1000 10\n10 20 30 40 50 60 80\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '4'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"4\", \"Should be 4\"\nassert solution(\"12 3\") == \"2\", \"Should be 2\""
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"hoose\"\nassert solution(\"4\") == \"hoose\"\nassert solution(\"0\") == \"NO TYPOS\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'hoose'\nassert solution('4') == 'hoose'"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'hoose'\nassert solution('4') == 'hoose'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"NO TYPO\"\nassert solution(\"4\") == \"NO TYPO\"\nassert solution(\"12345\") == \"NO TYPO\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise') == 'hoose\\nmoose\\nnoise'\n\nassert solution('4\\nhose\\nhoose\\noose\\nmoo') == 'hose\\nmoose\\nnoise'\n\nassert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise') == 'hoose\\nmoose\\nnoise'\n\"\"\""
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\\\n5\nhoose\nhose\nnose\nnoises\nnoise\n''') == 'noises'\n\nassert solution('''\\\n4\nhose\nhoose\noose\nmoose\n''') == 'noise'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nhose\\nhoose\\noose\\nmoose\") == \"hoose\"\nassert solution(\"4\\nhose\\nhoose\\noose\\nmoose\") == \"hoose\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\\\n3\nhoose\nhose\nnose\n''') == 'hoose'\nassert solution('''\\\n1\nhoose\n''') == 'NO TYPO'\nassert solution('''\\\n5\nnoise\nnoises\nnoises\nhose\nhose\nnoise\n''') == 'NO TYPO'\n'''\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5\nhoose\nhose\nnose\nnoises\nnoise\"\"\") == \"hoose, nose, noise\"\n\nassert solution(\"\"\"4\nhose\nhoose\noose\nmoose\nSample Output 3:\nmoose\n\"\"\" ) == \"moose\"\n\nassert solution(\"\"\"5\nhose\nhoose\noose\nnoises\nnoise\nSample Output 4:\nhoose\nnoise\"\"\") == \"hoose, noise\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'hoose', 'Should be \"hoose\"'\nassert solution('4') =='moose', 'Should be \"moose\"'"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2 2'\nassert solution('1 1') == '1 1'\nassert solution('2 2') == '1 1'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '2'\nassert solution('3') == '16'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1\n3\nSample Output 2:\n2\n2\n5''') == '2 2 5'"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n3\n''') == '2 2 5'\nassert solution('''2 2\n4\n''') == '0 16 8'"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 3\") == \"16\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == '2'\nassert solution(\"2 3\") == '5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\n4''') == '0 2'\nassert solution('''1 1\n3''') == '2 1'\nassert solution('''1 1\n3\n''') == '1 1'"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 2') == '0'\nassert solution('3 3') == '5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == '2'\nassert solution(\"2 3\") == '2'\nassert solution(\"4\") == '0'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n3\n2\n''') == '2 2 5'\nassert solution('''2 3\n4\n2\n''') == '0 16 8'"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '44.72135955'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0.8333333333333333'\nassert solution('5') == '1.3333333333333333'\nassert solution('6') == '2.1666666666666665'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n50 45 45\n''') == '44.72135955'\nassert solution('''\n100\n100 100\n''') == '136.49502947'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n50 45 45\n100 50 50\n50 50 50\n100 50 50\n50 50 50\n100 50 50''') == '68.52419365'\nassert solution('''1\n1 1 1''') == '1.00'\nassert solution('''2\n10 10 10\n30 30 30\n40 40 40''') == '30.60480519'\nassert solution('''2\n10 10 10\n40 40 40\n30 30 30\n30 30 30''') == '30.60480519'\nassert solution('''3\n3 5 2\n8 6 9\n3 3 7''') == '13.48687875'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == '44.72135955'\nassert solution(\"2\") == '68.52419365'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == '44.72135955'\nassert solution(\"2\") == '68.52419365'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '44.72135955'\nassert solution('2') == '68.52419365'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n50 45 45\n''') == '68.52419365'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1.2345678901'\nassert solution('5') == '1.500000000000001'\nassert solution('10000') == '1.100000000000001'\nprint('Super Solved!')\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '3'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 5\") == \"1\"\nassert solution(\"3 4 2 3\") == \"0\""
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3 1 5\n1 2\n''') == '1'\nassert solution('''3 4 2 3\n1 3 1\n''') == '0'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 3 1 5\n1 2\n\"\"\") == \"\"\"\n1\n3\n2\n\"\"\"\n\nassert solution(\"\"\"\n3 4 2 3\n1 3 1\n\"\"\") == \"\"\"\n1\n1\n0\n2\n\"\"\"\n\nassert solution(\"\"\"\n3 4 2 3\n1 3 1\n\"\"\") == \"\"\"\n1\n1\n0\n2\n\"\"\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3 1 5\") == \"1\"\nassert solution(\"3 4 2 3\") == \"2\"\nassert solution(\"3 4 2 3\") == \"2\"\nassert solution(\"2 2 2 2\") == \"0\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2 3 1 5\"\n) == \"1\"\n\nassert solution(\n    \"3 4 2 3\"\n) == \"0\""
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 2 3\n1 3 1''') == '0\\n1\\n0\\n1'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '2'\nassert solution('5 4 2 3') == '2'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4 2 3\n1 3 1\n''') == '2'\nassert solution('''\n3 4 2 3\n1 3 1\n''') == '3'\nassert solution('''\n10 11 4 5 7 6 2\n1 3 1\n''') == '4'\nassert solution('''\n4 2 3\n1 3 1\n''') == '1'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n2\\n1\"\nassert solution(input) == \"1\\n3\\n2\\n\"\nprint('Awesome')"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"5 7\") == \"5\"\nassert solution(\"5 5\") == \"5\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 1') == '3'\nassert solution('5 3\\n2 2 3 2 2') == '2'\n\n##\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '3'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"5 3\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"5 3\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5\n1 1\n''') == '3'\nassert solution('''5 3\n2 2 3 2 2\n''') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 5') == '4'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 1') == '3'\nassert solution('5 3\\n2 2 3 2 2') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 5\n1 2 1 2 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 5\n1 2 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '50'\nassert solution('0 50') == '25'\nassert solution('0 0') == '50'\nassert solution('100 100') == '50'"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n100 100\\n50 50\\n') == '50'\nassert solution('2\\n0 50\\n50 0\\n') == '25'\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '50'\nassert solution('0 50') == '50'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n0 0\n50 0\n10 50''') == '10.0'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '50'\nassert solution('1') == '50'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '0.0'\nassert solution('3\\n') == '0.3333333333333335'\nassert solution('2\\n') == '25.0'\nassert solution('10\\n') == '25.0'\nassert solution('8\\n') == '22.5'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '50'\nassert solution('2') == '50'\nassert solution('3') == '25'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"50\"\nassert solution(\"0\") == \"25\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n10 50\n5 50\n25 50''') == '25'\nassert solution('''3\n10 50\n5 50\n25 50''') == '50'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n100 100\n50 50\n''') == '50', 'First'\n\nassert solution('''\n2\n0 50\n50 0\n''') == '25', 'Second'\n\nassert solution('''\n5\n100 100 100 100 100\n50 50 50 50 50\n50 50 50 50 50\n50 50 50 50 50\n50 50 50 50 50\n''') == '50', 'Third'\n\nassert solution('''\n5\n0 50 50 50 50\n50 50 50 50 50\n50 50 50 50 50\n50 50 50 50 50\n50 50 50 50 50\n''') == '0', 'Fourth'\n\nassert solution('''\n5\n100 100 100 100 100\n50 50 50 50 50\n50 50 50 50 50\n50 50 50 50 50\n50 50 50 50 50\n''') == '0', 'Fifth'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n100\n200\n2010\n''') == '250'"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n300\\n200\\n2000\\n100\\n300') == '250'\nassert solution('4\\n200\\n100\\n100\\n200') == '160'\nassert solution('1\\n100') == '100'\nassert solution('2\\n500') == '200'\nassert solution('3\\n100') == '100'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3\n    100\n    200\n    2010\n    \"\"\"\n) == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n100\\n200') == '160\\n'\nassert solution('2\\n100\\n200\\n2010') == '250\\n'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2\n    100\n    200\n    \"\"\"\n) == \"160\"\nassert solution(\n    \"\"\"\n    3\n    100\n    200\n    2010\n    \"\"\"\n) == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '160'\nassert solution('3') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '160'\nassert solution('3') == '250'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(samples[0]) == \"2\"\nassert solution(samples[1]) == \"0\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '0'"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n''') == '2'\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0 1 1\n2 3 1\n''') == '2'\nassert solution('''\n5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\nassert solution('''\n3\n0 1 0\n1 2 1\n2 3 1\n''') == '1'\nassert solution('''\n4\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\nassert solution('''\n2 2\n0 1\n1 2\n''') == '1'\nassert solution('''\n3 3\n0 1 2\n1 2 3\n2 3 0\n''') == '3'\nassert solution('''\n3 3\n0 1 2\n1 2 3\n2 3 0\n''') == '4'\nassert solution('''\n6 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '0'\nassert solution('6 6') == '1'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n0 1 1\n2 3 1\n''') == '2', \"First\"\nassert solution('''5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0', \"Second\""
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '0'\nassert solution('4 2') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 2 3 4\\n1 2 3 4 5 6'\nassert solution('2 2\\n3 2\\n4 3') == '1 2\\n1 3\\n2 4 5\\n2 4 5\\n2 4 5\\n2 4 5\\n2 4 5\\n2 4 5'\nassert solution('4\\n10 10\\n10 10\\n10 10') == '4 1 1 1\\n4 1 1 1\\n4 2 2 2\\n4 2 2 2\\n4 3 3 3\\n4 3 3 3\\n4 3 3 3\\n4 3 3 3'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n3 3 2 1\n3 3 3\n6 3\n''') == '1 1\\n2 2 2\\n3 3 3\\n-1'\nprint(solution('''\n4 2\n3 3 2\n6 3\n'''))"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3\n3 3 2 1\n3 3 3\n6 3\n''') == '1 1'\nassert solution('''4 2\n3 3 2 2\n6 3\n''') == '-1'\nassert solution('''5 5\n5 5 5 5\n5 5 5 5\n5 5 5 5\n5 5 5 5\n5 5 5 5\n5 5 5 5\n''') == '2 2'\nassert solution('''4 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '-1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\n3 3 2 1') == '1 1'\nassert solution('3 1\\n3 3 2 1') == '1 2'\nassert solution('4 3\\n3 3 2 1\\n6 3') == '2 3 4'\nassert solution('4 2\\n3 3 2 1\\n6 3') == '-1'\nassert solution('2 3\\n3 3 2 1\\n4 3') == '-1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 1\n5''') == '4 4'\n\nassert solution('''3 1\n3 1 3''') == '2 3 2'\n\nassert solution('''3 1\n1 1 2''') == '-1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"3 2\") == \"1 2\"\nassert solution(\"2 3\") == \"1 2 3\"\nassert solution(\"1 2 3\") == \"3 2 1\"\nassert solution(\"1 1 2\") == \"1 2 2\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1 2 3 4'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 1 2 3 4\\n1 3 1 2\\n1 3 1 3 2 3\\n1 4 1 4 3 3\\n1 4 1 4 3 4\\n2 4 1 4 3 4\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n3 3 2 1\n3 3 3\n''') == '1 1\n1 2\n2 3 4\n'''\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n3 3 2 1\n3 3 3\n6 3\n''') == '1 1 1 1'\nassert solution('''\n4 2\n3 3 2 2\n6 3\n''') == '1 2 3 4'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\"\nassert solution(\n    \"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"4.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L') == '10.0'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D') == '10.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 10') == '10.0'\nassert solution('4 3 7') == '10.0'\nassert solution('5 6 7 3') == '10.0'\n\nprint('All tests passed.')\n\n'''"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 10') == '10.0'\nassert solution('4 3 7') == '10.0'\nassert solution('10 3 7') == '10.0'\nassert solution('20 3 7') == '10.0'\nassert solution('20 4 7') == '10.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"4.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 10') == \"10.0\"\nassert solution('4 3 7') == \"10.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 10\") == \"10.0\"\nassert solution(\"4 3 7\") == \"10.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 10') == \"10.0\"\nassert solution('4 3 7') == \"10.0\""
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 10\n1 0 D\n10 1 L\n''') == '10.0'\nassert solution('''\n5 3 10\n1 0 D\n0 1 D\n4 0 L\n4 2 D\n''') == '15.0'\nassert solution('''\n4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '5.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 10\") == \"10.0\"\nassert solution(\"4 3 7\") == \"10.0\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\n\n\"\"\""
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nprint('PASSED')\n\nNote:\n\ninput string length will be less than or equal to 200\nAll input strings will contain only lowercase letters\n-----Hint-----\nThe number of the possible solutions depends on the number of letters in the plain text and the numbers of letters in the ciphertext.\n\"\"\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a b b c d e e f g g g f d c b a a a d e e g g f e e e g g g f f f g f f g f f g e e e e f f f f f g f e e e e f f f f f g f f f f g f f f f g f e e e e f f f f f f g f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e e e f f f f f f g f e e"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n\"\"\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120''') == \"68.3\""
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n\"\"\") == \"68.3\"\n\nassert solution(\"\"\"\nNassau Rheinhessen\n3\nNassau Rheinhessen 24 59 10 50\nNassau Rheinhessen 15 45 10 50\nNassau Rheinhessen 25 60 10 50\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\nOslo R\u00f8deholm\n3\nOslo R\u00f8deholm 15 40 40 20\nOslo R\u00f8deholm 47 45 40 60\nOslo R\u00f8deholm 15 40 40 20\n\"\"\") == \"45.0\"\n\nassert solution(\"\"\"\nOslo R\u00f8deholm\n3\nOslo R\u00f8deholm 15 40 40 20\nOslo R\u00f8deholm 47 45 40 60\nOslo R\u00f8deholm 15 40 40 20\n\"\"\") == \"45.0\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n\"\"\") == \"68.3\"\n\nassert solution(\"\"\"\nLondon Liverpool\n1\nLondon Liverpool 24 5 0\nLondon Liverpool 34 30 1\nLondon Liverpool 41 25 0\nLondon Liverpool 60 28 0\nLondon Liverpool 74 25 0\nLondon Liverpool 94 33 0\nLondon Liverpool 116 29 0\nLondon Liverpool 130 50 0\nLondon Liverpool 141 50 0\nLondon Liverpool 155 32 0\nLondon Liverpool 175 28 0\nLondon Liverpool 196 25 0\nLondon Liverpool 215 33 0\nLondon Liverpool 221 25 0\nLondon Liverpool 231 32 0\nLondon Liverpool 262 28 0\nLondon Liverpool 273 25 0\nLondon Liverpool 284 33 0\nLondon Liverpool 295 32 0\nLondon Liverpool 316 28 0\nLondon Liverpool 326 25 0\nLondon Liverpool 337 33 0\nLondon Liverpool 351 32 0\nLondon Liverpool 362 28 0\nLondon Liverpool 378 25 0\nLondon Liverpool 395 33 0\nLondon Liverpool 416 32 0\nLondon Liverpool 427 28 0\nLondon Liverpool 441 32 0\nLondon Liverpool 457 32 0\nLondon Liverpool 469 32 0\nLondon Liverpool 482 25 0\nLondon Liverpool 489 33 0\nLondon Liverpool 506 32 0\nLondon Liverpool 517 33 0\nLondon Liverpool 532 25 0\nLondon Liverpool 548 33 0\nLondon Liverpool 569 33 0\nLondon Liverpool 586 32 0\nLondon Liverpool 603 33 0\nLondon Liverpool 617 32 0\nLondon Liverpool 637 32 0\nLondon Liverpool 657 28 0\nLondon Liverpool 678 25 0\nLondon Liverpool 694 33 0\nLondon Liverpool 705 32 0\nLondon Liverpool 722 33 0\nLondon Liverpool 737 32 0\nLondon Liverpool 757 33 0\nLondon Liverpool 778 33 0\nLondon Liverpool 795 32 0\nLondon Liverpool 813 32 0\nLondon Liverpool 833 28 0\nLondon Liverpool 857 25 0\nLondon Liverpool 871 25 0\nLondon Liverpool 888 50 0\nLondon Liverpool 899 33 0\nLondon Liverpool 912 32 0\nLondon Liverpool 941 33 0\nLondon Liverpool 960 28 0\nLondon Liverpool 979 33 0\nLondon Liverpool 994 33 0\nLondon Liverpool 1017 33 0\nLondon Liverpool 1026 32 0\nLondon Liverpool 1045 32 0\nLondon Liverpool 1069 32 0\nLondon Liverpool 1083 33 0\nLondon Liverpool 1106 32 0\nLondon Liverpool 1116 33 0\nLondon Liverpool 1125 33 0\nLondon Liverpool 1134 25 0\nLondon Liverpool 1150 33 0\nLondon Liverpool 1158 28 0\nLondon Liverpool 1172 28 0\nLondon Liverpool 1186 25 0\nLondon Liverpool 1197 33 0\nLondon Liverpool 1216 28 0\nLondon Liverpool 1226 33 0\nLondon Liverpool 1245 33 0\nLondon Liverpool 1268 25 0\nLondon Liverpool 1278 33 0\nLondon Liverpool 1296 33 0\nLondon Liverpool 1313 33 0\nLondon Liverpool 1337 33 0\nLondon Liverpool 1357 33 0\nLondon Liverpool 1386 33 0\nLondon Liverpool 1407 33 0\nLondon Liverpool 1416 33 0\nLondon Liverpool 1425 33 0\nLondon Liverpool 1454 33 0\nLondon Liverpool 1476 33 0\nLondon Liverpool 1494 33 0\nLondon Liverpool 1514 33 0\nLondon Liverpool 1523 33 0\nLondon Liverpool 1538 28 0\nLondon Liverpool 1554 28 0\nLondon Liverpool 1569 33 0\nLondon Liverpool 1583 33 0\nLondon Liverpool 1598 33 0\nLondon Liverpool 1612 33 0\nLondon Liverpool 1631 33 0\nLondon Liverpool 1650 33 0\nLondon Liverpool 1669 33 0\nLondon Liverpool 1688 33 0\nLondon Liverpool 1706 33 0\nLondon Liverpool 1725 33 0\nLondon Liverpool 1745 33 0\nLondon Liverpool 1766 28 0\nLondon Liverpool 1787 25 0\nLondon Liverpool 1796 33 0\nLondon Liverpool 1816 33 0\nLondon Liverpool 1825 33 0\nLondon Liverpool 1849 28 0\nLondon Liverpool 1866 28 0\nLondon Liverpool 1885 33 0\nLondon Liverpool 1899 25 0\nLondon Liverpool 1901 33 0\nLondon Liverpool 1902 33 0\nLondon Liverpool 1907 33 0\nLondon Liverpool 1913 28 0\nLondon Liverpool 1914 25 0\nLondon Liverpool 1915 33 0\nLondon Liverpool 1916 33 0\nLondon Liverpool 1917 33 0\nLondon Liverpool 1918 33 0\nLondon Liverpool 1919 33 0\nLondon Liverpool 1921 28 0\nLondon Liverpool 1922 33 0\nLondon Liverpool 1923 33 0\nLondon Liverpool 1924 33 0\nLondon Liverpool 1925 33 0\nLondon Liverpool 1926 33 0\nLondon Liverpool 1927 28 0\nLondon Liverpool 1928 33 0\nLondon Liverpool 1929 33 0\nLondon Liverpool 1931 33 0\nLondon Liverpool 1932 33 0\nLondon Liverpool 1933 33 0\nLondon Liverpool 1934 33 0\nLondon Liverpool 1935 33 0\nLondon Liverpool 1936 33 0\nLondon Liverpool 1937 33 0\nLondon Liverpool 1938 33 0\nLondon Liverpool 1939 33 0\nLondon Liverpool 1940 33 0\nLondon Liverpool 1941 33 0\nLondon Liverpool 1942 33 0\nLondon Liverpool 1943 33 0\nLondon Liverpool 1944 33 0\nLondon Liverpool 1945 33 0\nLondon Liverpool 1946 33 0\nLondon Liverpool 1947 33 0\nLondon Liverpool 1948 33 0\nLondon Liverpool 1949 33 0\nLondon Liverpool 1950 33 0\nLondon Liverpool 1951 33 0\nLondon Liverpool 1952 33 0\nLondon Liverpool 1953 33 0\nLondon Liverpool 1954 33 0\nLondon Liverpool 1955 33 0\nLondon Liverpool 1956 33 0\nLondon Liverpool 1957 33 0\nLondon Liverpool 1958 33 0\nLondon Liverpool 1959 33 0\nLondon Liverpool 1960 33 0\nLondon Liverpool 1961 33 0\nLondon Liverpool 1962 33 0\nLondon Liverpool 1963 33 0\nLondon Liverpool 1964 33 0\nLondon Liverpool 1965 33 0\nLondon Liverpool 1966 33 0\nLondon Liverpool 1967 33 0\nLondon Liverpool 1968 33 0\nLondon Liverpool 1969 33 0\nLondon Liverpool 1970 33 0\nLondon Liverpool 1971 33 0\nLondon Liverpool 1972 33 0\nLondon Liverpool 1973 33 0\nLondon Liverpool 1974 33 0\nLondon Liverpool 1975 33 0\nLondon Liverpool 1976 33 0\nLondon Liverpool 1977 33 0\nLondon Liverpool 1978 33 0\nLondon Liverpool 1979 33 0\nLondon Liverpool 1980 33 0\nLondon Liverpool 1981 33 0\nLondon Liverpool 1982 33 0\nLondon Liverpool 1983 33 0\nLondon Liverpool 1984 33 0\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"IMPOSSIBLE\"\nassert solution(\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Hamburg Bremen') == \"68.3\"\nassert solution('Bremen Frankfurt') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'IMPOSSIBLE'\nassert solution('1\\n2') == 'IMPOSSIBLE'\nassert solution('1\\n3') == '68.3'"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('\\n'.join([\"Hamburg Bremen\", \"3\"])) == \"68.3\"\nassert solution('\\n'.join([\"Amsterdam Rotterdam\", \"1\"])) == \"IMPOSSIBLE\"\nassert solution('\\n'.join([\"Amsterdam Rotterdam\", \"2\"])) == \"42.3\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\nAmsterdam Rotterdam 10 22 5 10\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"\n2\nAmsterdam Rotterdam 10 22 5 10\n\"\"\") == \"67.1\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == \"100.0000000000000\"\n\"\"\"\nimport math\nfrom typing import List\nfrom collections import defaultdict\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    'Hamburg Bremen',\n    '3',\n    'Hamburg Bremen 15 68 10 5',\n    'Hamburg Bremen 46 55 50 60',\n    'Bremen Frankfurt 14 226 10 120',\n])) == '68.3'"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n*-*.*\n|.|.|\n*.*-*''') == '4'\n\nassert solution('''3\n*-*.*\n|.|.|\n*.*-*''') == '3'\n\nassert solution('''4\n*.*\n...\n*.*''') == '4'\n\nassert solution('''5\n*.*\n|...|\n*.*\n|.|.|\n*.*''') == '6'\n\nassert solution('''10\n*.*\n|.|.|\n*.*-*\n|.|.|\n*.*-*''') == '16'"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n*-*.*\n|.|.|\n*.*-*\"\"\") == \"3\"\nassert solution(\"\"\"2\n*.*\n...\n*.*\"\"\") == \"4\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n*-*.*') == '3'\nassert solution('2\\n*.*-*') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '3'"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '4'\nassert solution('''\n*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '2'\nassert solution('''\n*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '4'\nassert solution('''\n*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '3'\nassert solution('''\n*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '5'\n''')"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '2'\nassert solution('''\n2\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"4\"\nassert solution(\"10\") == \"10\"\nassert solution(\"20\") == \"10\"\nassert solution(\"1020\") == \"1020\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"12\") == \"4\"\nassert solution(\"12210020\") == \"4\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"4\") == \"impossible\"\nassert solution(\"1111\") == \"impossible\"\n\nassert solution(\"1000000\") == \"impossible\"\nassert solution(\"10000000\") == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('5') == 'impossible'\nassert solution('10') == '4'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '4'\nassert solution('12210020') == 'impossible'\nassert solution('1111') == 'impossible'\n\n\n------SOLUTION------\nclass Solution:\n    def swap(self, a, b):\n        return b, a\n    def min_swaps(self, n: int, s: str) -> str:\n        st = [self.swap(a, b) for a, b in zip(s[:-1], s[1:])]\n        st.sort(key=lambda x: x[0])\n        count = 0\n        for a, b in st:\n            if b == a:\n                count += 1\n            else:\n                break\n        return count if count < n else 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == 'impossible'\nassert solution('5') == 'impossible'\nassert solution('6') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2\\n2 1') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\n12210020\n''') == '4'\nassert solution('''\n4\n1111\n''') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == 'impossible'\nassert solution('8') == '4'"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n12210020\n11122100\n21121221\n20221221\n12122100\n''') == '4'\nassert solution('''\n10\n12210020\n1111\n21221221\n20222122\n12122100\n''') == 'impossible'"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00)'\n\n\"\"\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('5') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00)\"\nassert solution(\"4\") == \"Bill will be bitten.\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('4') == 'Bill will be bitten.'"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n0\\n0\\n5\\n0\\n50\\n0\\n100\\n0\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00)\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\") == \"Bill will be bitten.\\n\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\") == \"Bill will be bitten.\\n\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('2') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(input) == output\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"8\", \"3\"]) == \"++xx+o++\"\nassert solution([\"8\", \"3\"]) == \"xxoooooo\"\nassert solution([\"8\", \"3\"]) == \"xxoooooo\"\nassert solution([\"8\", \"3\"]) == \"xxoooooo\"\nassert solution([\"8\", \"3\"]) == \"xxoooooo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8 3\n++xx+x++\n''') == '++xx+o++'\n\nassert solution('''\n8 3\nxxxxxxxx\n''') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([8, 3, \"++xx+x++\"]) == \"++xx+o++\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\n') == '1x1x1'\nassert solution('2 3\\n') == '2x2x2'"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3') == '++xx+o++'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 3\n++xx+x++\n''') == '++xx+o++'\n\nassert solution('''8 3\n++xx+x++\n''') == 'xxooooo'\n\nassert solution('''8 3\n++xx+x++\n''') == 'xxooo'\n\nassert solution('''8 3\n+xx+x++\n''') == 'xxoo'\n\nassert solution('''8 3\n+xx+x++\n''') == 'xxoo'"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3\\n++xx+x++\\n') == '++xx+o++'\nassert solution('8 3\\nxxxx+xx++\\n') == 'xxxx+o++'\nassert solution('8 3\\n++x++x++\\n') == '++xx+o++'\nassert solution('8 3\\n++x+xx++\\n') == '++xx+ooo++'\nassert solution('8 3\\n++x+xx+x++\\n') == '++xx+oo+o++'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\n+++++++\") == \"xxooo\"\nassert solution(\"10 2\\n+++++++\") == \"xxo++xo\"\nassert solution(\"2 5\\n+++++++\") == \"xooxxxoo\"\nassert solution(\"3 2\\n++++x\") == \"xoo++ooo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 3\n++xx+x++\n''') == '++xx+o++'\nassert solution('''8 3\nxxoo++++\n''') == 'xxoooooo'\nassert solution('''8 3\nxxxxxxx+\n''') == 'xoooooo'\n\n### Test 5 ###"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == '++xx+o++'\nassert solution('8 1') == '++xx+o++'\nassert solution('8 0') == '++xx+x++'\nassert solution('8 2') == 'xxoooooo'\nassert solution('8 3') == '++xx+x++'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('The fox said, \"When?\"\\n\"Not till 12 o\\'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\"') == 'clock: oclock\\the: hen the\\thend: he when\\tis: it\\tis: is\\till: will\\twhen: hen\\twill: till\\n'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Lost is Close to Lose\\n'\n    +'***') == 'close: lose\\the: hen the\\n' + \\\n    'in: inc is\\n' + \\\n    'is: in\\n' + \\\n    'lose: close lost\\n' + \\\n    'lost: lose\\ntill: will\\n' + \\\n    'hen: he that\\n' + \\\n    'it: is\\n' + \\\n    'it: is\\n' + \\\n    'oclock: clock\\n' + \\\n    'when: hen the\\ntill: will\\n' + \\\n    'till: not\\n' + \\\n    'clock: oclock\\n' + \\\n    'when: hen the\\ntill: will\\n' + \\\n    'hen: he when\\ntill: will\\n' + \\\n    'clock: oclock\\n' + \\\n    'till: not\\n' + \\\n    'he: hen the\\ntill: will\\n' + \\\n    'clock: oclock\\ntill: will\\n' + \\\n    'when: hen the\\ntill: will\\n' + \\\n    'clock: oclock\\ntill: not\\n' + \\\n    'oclock: clock\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n' + \\\n    'hen: hen the\\n'"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"The fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n\"\"\") == \"\"\"close: lose\nhe: hen the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\nthat clock: oclock\nnot till: will\ntill: clock\nwill: till\nthe clock: clock\n\"\"\".strip()\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\the: hen the\\tin: it\\the: is\\the: he\\tin: not till\\tthat clock is stopped\\tis: not till\\tclock is stopped\\tis: till\\tuntil\\the: hen\\tis: till\\thehen\\tis: hen\\tin: at\\tthat clock is stopped\\tis: at\\tclock is stopped\\tis: not till\\tclock is stopped\\tis: till\\tclock is not stopped\\tis: clock is not stopped\\tis: not till\\tclock is not stopped\\tis: till\\tclock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: not till\\tclock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\tis: clock is not stopped\\"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\the: hen the\\till: will\\the: hen\\tin: is\\tnot till: 12 o\\'clock\\tin: clock\\tis: it\\tthat clock is stopped, it will never strike.\\n'\n\nassert solution(\n'''\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n***\n''') == 'he: the\\the: hen\\the: hen\\t\\tthat: hen\\t\\thin: hen\\t\\the: he\\t\\t\\tis: he\\t\\tis: hen\\t\\tis: in\\t\\tis: inc\\t\\tis: in\\t\\tis: in\\t\\tis: documents\\t\\tis: inc\\t\\tis: inc\\t\\tis: documents\\t\\tis: better\\t\\tis: better\\t\\tis: better\\t\\tis: better\\t\\tis: documents\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\tis: inc\\t\\"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\nLost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n***\"\"\") == \"\"\"close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\".strip()\nassert solution(\"\"\"\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\" he said.\n***\"\"\") == \"\"\"clock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('lost is close to lose') == 'close: lose'\nassert solution('The fox said, \"When?\"') == 'the: fox said when'\nassert solution('The fox said, \"When?\"') == 'the: fox said when'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"Lost is Close to Lose\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\"\"\") == \"\"\"close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\".strip()\n\nassert solution(\"\"\"The fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\" he said.\"\"\") == \"\"\"clock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\"\"\".strip()\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\ntill: will\\nhe: hen\\ntill: will\\nhe: hen\\nwhen: hen\\nwill: till\\ntill: will\\nhe: hen\\n'''"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('The fox said, \"When?\"\\n\"Not till 12 o'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\", he said.') == 'clock: oclock\\the: hen the\\till: will\\thence: he\\the: hen\\tis: it\\tis: he\\ntill: not\\till: clock\\thence: he\\ntill: clock\\tstop: clock\\tstop: clock\\nclock: oclock\\thence: he\\tit: is\\tis: he\\ttill: not\\ttill: clock\\thence: he\\tnot: stop\\tclock: oclock\\tclock: not\\tclock: clock\\ttill: not\\tclock: clock\\tclock: not\\tclock: clock\\tclock: clock\\tclock: clock\\tclock: clock\\ttime: clock\\ttime: clock\\ttime: clock\\tclock: oclock\\ttime: clock\\ttime: clock\\ttime: clock\\tclock: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\ttime: clock\\tt"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 7 3 8 9 4 5 10 6') == '1 2 7 3 8 9 4 5 10 6'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 3 4 5\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5\\n3 1 2 4 5\") == \"2\"\nassert solution(\"5\\n3 1 2 4 5\") == \"2\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 2 7 3 8 9 4 5 10 6') == '1'\nassert solution('2\\n1 2 7 3 8 9 4 5 10 6') == '2'\nassert solution('3\\n1 2 7 3 8 9 4 5 10 6') == '2'\nassert solution('4\\n1 2 7 3 8 9 4 5 10 6') == '1'\nassert solution('5\\n1 2 7 3 8 9 4 5 10 6') == '0'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n1 2 7 3 8 9 4 5 10 6\n''') == '1'\nassert solution('''\n10\n3 8 1 9 4 5 2 7 10 6\n''') == '2'"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n1 2 7 3 8 9 4 5 10 6\n''') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 3 1 4 5') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\nprint('all test cases passed')"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n3 8 1 9 4 5 2 7 10 6') == '1'\nassert solution('100\\n89 7 89 9 9 6 8 5 6 7 3 2 1') == '2'"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2 3 4 5 6 7 8 9 10\n''') == '1'\nassert solution('''\n3 8 1 9 4 5 2 7 10 6\n''') == '2'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2\n''') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 2\"\nassert solution(\"3 8 1 9 4 5 2 7 10 6\") == \"3 8 1 6 4 2 7 9 5 10\"\n\n\n\"\"\"\n\nimport sys\nimport collections"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n\n\"\"\"\n\nstdin = input()\n\nprint(stdin.split()[0] + \"/\" + stdin.split()[1])\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\nassert solution(\"1 2\") == \"5/3\"\nassert solution(\"0.5 6\") == \"5/3\"\nassert solution(\"2 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0.142857 6\n''') == '1/7'\nassert solution('''\n1.6 1\n''') == '5/3'\nassert solution('''\n0.142857 0\n''') == '1/7'\nassert solution('''\n1.6 0\n''') == '1/7'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"0.142857 6\"\n) == \"1/7\"\nassert solution(\n    \"1.6 1\"\n) == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0.142857\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\nassert solution(\"0.1 1\") == \"10/9\"\nassert solution(\"0.11 1\") == \"11/9\"\nassert solution(\"0.12 1\") == \"12/9\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 0 0\\n0 0 1') == '6'\nassert solution('2\\n0 0 0\\n0 0 1') == '10'\nassert solution('5\\n1 0 0\\n1 0 1') == '2'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n0 0 0\n0 0 1\n''') == '6'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 0 0\n0 0 1\n0 0 2\n''') == '6'\nassert solution('''\n4\n0 0 0\n0 0 1\n0 0 2\n0 0 3\n''') == '9'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n0 0 0\n''') == '6'\nassert solution('''\n2\n0 0 0\n0 0 1\n''') == '10'\n\nassert solution('''\n3\n0 0 0\n0 0 1\n0 0 2\n''') == '12'"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '10'\nassert solution('1\\n0 0 0\\n0 0 1\\n') == '6'\nprint('SUCCESS: %s' % solution.__name__)\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0 0 0\\n0 0 1') == '6'\nassert solution('2\\n0 0 0\\n0 0 1\\n0 1 1') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n0 0 0\n''') == '6'\nassert solution('''\n2\n0 0 0\n0 0 1\n''') == '10'\nassert solution('''\n2\n0 0 0\n0 0 2\n''') == '12'"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n0 0 0\\n0 0 1\\n') == '6'\nassert solution('1\\n0 0 0\\n0 0 1\\n') == '10'\nassert solution('1\\n0 0 0\\n0 0 1\\n') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '1'\nassert solution('-1') == '0'"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nprint(solution('''\n5\n-1 -1 -1 -1 -1\n-1 -1 -1 -1 -1\n-1 -1 -1 -1 -1\n-1 -1 -1 -1 -1\n-1 -1 -1 -1 -1\n'''))"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '1'"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''15\n-1 4 5 -1 -1 -1 -1 -1 0 0 0 -1 -1\n-1 3 2 0 -1 -1 -1 -1 -1 2 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 4 4 3 3 -1 -1 -1 -1 -1 4 2\n0 2 3 -1 4 4 2 -1 -1 -1 -1 -1\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n1 -1 -1 -1 4 2 -1 -1 -1 -1 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 3 2 0 -1 -1 -1 -1 -1 2 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 4 4 3 3 -1 -1 -1 -1 -1 4 2\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n0 2 3 -1 4 4 2 -1 -1 -1 -1 -1\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n1 -1 -1 -1 4 2 -1 -1 -1 -1 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 3 2 0 -1 -1 -1 -1 -1 2 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 4 4 3 3 -1 -1 -1 -1 -1 4 2\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n0 2 3 -1 4 4 2 -1 -1 -1 -1 -1\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n1 -1 -1 -1 4 2 -1 -1 -1 -1 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 3 2 0 -1 -1 -1 -1 -1 2 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 4 4 3 3 -1 -1 -1 -1 -1 4 2\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n0 2 3 -1 4 4 2 -1 -1 -1 -1 -1\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n1 -1 -1 -1 4 2 -1 -1 -1 -1 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 3 2 0 -1 -1 -1 -1 -1 2 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 4 4 3 3 -1 -1 -1 -1 -1 4 2\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n0 2 3 -1 4 4 2 -1 -1 -1 -1 -1\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n1 -1 -1 -1 4 2 -1 -1 -1 -1 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 3 2 0 -1 -1 -1 -1 -1 2 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 4 4 3 3 -1 -1 -1 -1 -1 4 2\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n0 2 3 -1 4 4 2 -1 -1 -1 -1 -1\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n1 -1 -1 -1 4 2 -1 -1 -1 -1 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 3 2 0 -1 -1 -1 -1 -1 2 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 4 4 3 3 -1 -1 -1 -1 -1 4 2\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n0 2 3 -1 4 4 2 -1 -1 -1 -1 -1\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n1 -1 -1 -1 4 2 -1 -1 -1 -1 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 3 2 0 -1 -1 -1 -1 -1 2 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 4 4 3 3 -1 -1 -1 -1 -1 4 2\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n0 2 3 -1 4 4 2 -1 -1 -1 -1 -1\n-1 4 4 3 3 2 -1 -1 -1 -1 -1 4 2\n1 -1 -1 -1 4 2 -1 -1 -1 -1 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4 -1\n-1 3 2 0 -1 -1 -1 -1 -1 2 -1\n-1 4 -1 1 -1 -1 -1 -1 -1 4"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"1\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '2'"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('7') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1001\n''') == '3'\nassert solution('''\n1111\n''') == '1'\nassert solution('''\n1010\n''') == '2'\nassert solution('''\n111111111111\n''') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\nassert solution
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1001''') == '3'\nassert solution('''1111''') == '1'\n\n\"\"\""
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1001''') == '3'\nassert solution('''1111''') == '1'\nassert solution('''100001''') == '2'\nassert solution('''120312''') == '4'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\nprint(solution(input()))"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'LLL'\nassert solution('5') == 'LLRLR'\nprint('All test cases passed...')\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'LLL'\nassert solution('''\n5\n1 2 2 1 2\n''') == 'LLRLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'LLL'\nassert solution('5') == 'LLRLR'"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\"\nprint(solution.__doc__)"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 1 1\n\"\"\") == \"LLL\"\nassert solution(\"\"\"\n5\n1 2 2 1 2\n\"\"\") == \"LLRLR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1 1 1\n''') == 'LLL'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'LLL'\n\nassert solution('''\n5\n1 2 2 1 2\n''') == 'LLRLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n1 2\\n1 2') == 'LLL'\nassert solution('5\\n1 2 2 1 2') == 'LLRRR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == \"LLL\"\nassert solution('1 2 2 2') == \"LLRRRLL\"\nassert solution('2 3 3') == \"RLLR\"\nassert solution('3 3 3') == \"LLRRRLL\""
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"LLL\"\nassert solution(\"5 1 2 2 1 2\") == \"LLRLR\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7 10\") == \"49000000000070\"\nassert solution(\"6 6 7\") == \"25000000000021\"\nassert solution(\"4 4 7\") == \"12900000000000\"\nassert solution(\"5 4 7\") == \"12900000000000\"\nassert solution(\"5 3 3\") == \"12900000000000\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 7\") == \"49000000000070\"\nassert solution(\"6 6 7\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 7 10\") == \"49000000000070\"\nassert solution(\"6 6 7\") == \"25000000000021\"\nassert solution(\"10 5 10\") == \"13250000000000\""
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 7 10') == '49000000000070'\nassert solution('6 6 7') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '7 7 10\\n'\n    '1 2 1000000\\n'\n    '2 3 2000000\\n'\n    '3 4 3000000\\n'\n    '4 5 4000000\\n'\n    '5 6 5000000\\n'\n    '6 7 6000000\\n'\n    '7 1 7000000\\n'\n    ) == '49000000000070'\nassert solution(\n    '6 6 7\\n'\n    '1 3 1000000\\n'\n    '3 5 3000000\\n'\n    '5 1 5000000\\n'\n    '2 4 2000000\\n'\n    '4 6 4000000\\n'\n    '6 2 6000000\\n'\n    ) == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == \"49000000000070\"\nassert solution('6\\n6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == \"25000000000021\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 6 7') == '49000000000070'\nassert solution('3 5 3000000') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(samples[0]) == 'Poor girl!'\nassert solution(samples[1]) == '49000000000070'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 2 1000000\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"10 2 5000000\\n1 3 2000000\\n2 3 5000000\\n3 4 4000000\\n4 1 3000000\\n5 2 4000000\\n6 7 6000000\\n7 1 6000000\") == \"25000000000021\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '2\\n0\\n1\\n2\\n3\\n2\\n3\\n'"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 4\"\n    \"0 1\"\n    \"1 0\"\n    \"2 3\"\n    \"3 2\"\n    ) == \"2 2 3\"\n\nassert solution(\n    \"4 4\"\n    \"0 1\"\n    \"1 0\"\n    \"2 3\"\n    \"3 3\"\n    ) == \"Yeah!\"\n\nassert solution(\n    \"5 4\"\n    \"0 1\"\n    \"1 0\"\n    \"2 3\"\n    \"3 2\"\n    \"3 3\"\n    ) == \"2 2 3\"\n\nassert solution(\n    \"5 4\"\n    \"0 1\"\n    \"1 0\"\n    \"2 3\"\n    \"3 2\"\n    \"3 3\"\n    ) == \"Yeah!\"\n\nassert solution(\n    \"100 100\"\n    \"0 1\"\n    \"0 1\"\n    \"0 1\"\n    \"1 0\"\n    \"1 0\"\n    ) == \"2 2 3\""
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '2'\nassert solution('4 4') == '2'"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4') == '2\\n2\\n0\\n1'\n\nassert solution('4 4') == 'yeah!'\n\nassert solution('0 1') == '2\\n2\\n0\\n1'\n\nassert solution('1 0') == '2\\n2\\n0\\n1'\n\nassert solution('2 3') == '2\\n0\\n1\\n2\\n3\\n2'"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 3') == '2\\n2\\n0\\n1'\nassert solution('3 3\\n1 1\\n1 1\\n1 1') == 'Yeah!'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4\n0 1\n1 0\n2 3\n3 2''') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n3\\n'\nassert solution('''4 4\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!'"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"2\\n2\"\nassert solution(\"4 4\") == \"0\\n1\\n2\\n3\""
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n2 3\\n1 2\\n3 0\") == \"2 2\\n0 1\\n1 1\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"2\\n2\\n0\\n1\\n2\\n2\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n4 2 2\\n1 3') == 'POSSIBLE'\nassert solution('3\\n1 1 2') == 'IMPOSSIBLE'\nprint('All tests passed!')"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'POSSIBLE'\nassert solution('2') == 'IMPOSSIBLE'"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == 'POSSIBLE\\n'\nassert solution('4\\n1 2\\n3 4') == 'POSSIBLE\\n1 3\\n2 3\\n'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2') == 'IMPOSSIBLE'\nassert solution('3\\n1 1 2\\n1 2 2') == 'POSSIBLE'\nprint('All tests passed!')\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n1 2\n\"\"\") == \"POSSIBLE\"\nassert solution(\"\"\"\n3\n1 1 2\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"\n2\n1 2\n\"\"\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 2\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1 1 2\nSample Output 2:\nPOSSIBLE\n1 3\n2 3\n\"\"\") == \"POSSIBLE\"\n\"\"\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'POSSIBLE'\nassert solution('3\\n1 2 1') == 'POSSIBLE'\nassert solution('4\\n1 2 1 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n1 1 2 3\n\"\"\") == \"POSSIBLE\"\nassert solution(\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\") == \"0.5 0.5 0.5\", \"Wrong answer\"\nassert solution(\"1 0 0\") == \"1.0 0.0 0.0\", \"Wrong answer\"\nassert solution(\"0 1 0\") == \"0.0 1.0 0.0\", \"Wrong answer\"\nassert solution(\"0 0 1\") == \"0.0 0.0 1.0\", \"Wrong answer\""
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'\nassert solution('0 0 1\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '1.0 1.0 0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\") == \"0.0 0.0 -0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nprint(solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1\n'''))\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nprint(solution(*[stdin]))"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n3 6 2 3 2 2 2 1 5 6\nSample Output 2:\n3 2 2 1 5\n3 2 2\n6 6\n''') == '2 0'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 2 2 1 5\n3 2 2\n6 6\n''') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0\\n1\\n2'\nassert solution('2') == '0\\n2\\n1'"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n\n'''"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n3 6 2 3 2 2 2 1 5 6\nSample Output 2:\n2\n3 2 2 1 5\n3 2 2\n6 6\n''') == '2'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n3 6 2 3 2 2 2 1 5 6\n''') == '2'\nassert solution('''\n3\n17 17 17\n''') == '0'\nprint(solution(input()))"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2\\n3\\n2'\nassert solution('5') == '4\\n5\\n5'\nassert solution('10') == '9\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n0\\n'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3 2'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '2'\nassert solution('3') == '3 2 2'\nassert solution('3') == '3 2 2'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == '1'\nassert solution(solution.__doc__, '1') == '0'\nassert solution(solution.__doc__, '1', '1') == '3'\nassert solution(solution.__doc__, '1', '1', '1') == '0'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1') == '74.6666666667'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution('''\n3 3 1\n1 2\n2 3\n1\n1 2\n1\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2 1\n1 2\n2 3\n1\n1 2\n1\n''') == '74.6666666667'\nassert solution('''\n3 2 1\n1 2\n2 3\n1\n3 2\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nassert solution(\"\"\"1 2 7\n2 3 8\n1\"\"\") == \"74.6666666667\"\nassert solution(\"\"\"3 2 1\n1 2 7\n2 3 8\n1\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"74.6666666667\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE', 'First Example'\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667', 'Second Example'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.6666666667'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n2 2 3\n1\n1 2\n2\n3 1\n''') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1') == \"IMPOSSIBLE\"\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == \"74.6666666667\""
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"3 1\\n\"\n    \"3 4\\n\"\n    \"1 4\\n\"\n    \"4 5\\n\"\n    \"5 6\\n\"\n    \"6 7\\n\"\n    \"7 4\\n\"\n) == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\n\nassert solution(\n    \"4 4\\n\"\n    \"1 1\\n\"\n    \"2 2\\n\"\n    \"1 1\\n\"\n    \"2 3\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n) == \"1\\n2\\n2\\n2\\n1\\n1\\n1\\n\"\n\nassert solution(\n    \"3 3\\n\"\n    \"1 1\\n\"\n    \"2 2\\n\"\n    \"1 1\\n\"\n    \"2 3\\n\"\n    \"1 3\\n\"\n) == \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '1'\nassert solution(input_) == '2'\nassert solution(input_) == '1'\nassert solution(input_) == '2'\nassert solution(input_) == '1'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\nSample Output 3:\n1\n2\n1\n2\n2\n1''') == '1'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 1') == '1'\nassert solution('3 4') == '2'\nassert solution('1 4') == '2'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\nSample Input 3:\n1 2\n3 1\nSample Output 3:\n1''') == '1'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '5 6\\n'\n    '1 2\\n'\n    '2 3\\n'\n    '3 1\\n'\n    '3 4\\n'\n    '1 4\\n'\n    '4 5\\n'\n    '5 6\\n'\n    '6 7\\n'\n    '7 4\\n'\n) == '1'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4''') == '1'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 6\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '1'\nassert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '2'\n'''\n\n\n\n'''"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '1'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 3') == '5'\n\nimport sys\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 3') == '5'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n5\\n4\\n3\\n1\\n1') == '4'\nassert solution('4\\n20\\n7\\n30\\n19\\n20') == '21'\nassert solution('100\\n15\\n70\\n40\\n90\\n50\\n80\\n40') == '55'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 10 2\n0\n15\n30\n45\n''') == '10'\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '5'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45\\n') == '10'\nassert solution('4 10 3\\n0\\n15\\n30\\n45\\n') == '5'\nassert solution('4 10 3\\n0\\n1\\n10\\n45\\n') == '6'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5''') == '10'\nassert solution('''10\n0\n1\n2\n3\n4\n5''') == '5'\nassert solution('''20\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400''') == '5'\n\nprint('done')\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\\n\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 10 2\") == '10'\nassert solution(\"4 10 3\") == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 10 2\n0\n15\n30\n45''') == \"10\"\nassert solution('''4 10 3\n0\n15\n30\n45''') == \"5\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n4 2\n50 50 75\n25 25 25\n\"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n5 2\n50 50 50 50\n25 25 25 25\n\"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n4 2\n50 50 75\n25 25 25\n\"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n5 2\n50 50 50 50\n25 25 25 25\n\"\"\"\n) == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n50 50 75\n25 25 25\n''') == '2'\n\nassert solution('''\n5 2\n50 50 50 50\n25 25 25 25\n''') == '1'\n\nassert solution('''\n5 2\n25 25 25 25\n50 50 50 50\n50 50 50 50\n''') == '1'\n\nassert solution('''\n5 2\n50 50 50 50\n75 25 25 25\n''') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 2') == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 2') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25\\n') == '2'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 2') == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"5\n5\n0 0 10\n0 0 20\n0 0 30\n1 0 40\n2 0 50\"\"\") == \"1\"\nassert solution(\n\"\"\"10\n0 0 10\n0 0 20\n0 0 30\n1 0 40\n2 0 50\n3 0 60\n4 0 70\n5 0 80\n6 0 90\n7 0 100\n8 0 110\n9 0 120\n10 0 130\"\"\") == \"2\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n50 50\n25 25\n''') == '1'\nprint(solution('''\n3\n120 120 150\n75 75 75\n'''))\nprint(solution('''\n4\n80 75 50 100\n10 10 10 10\n90 90 90 90\n'''))\nprint(solution('''\n5\n100 100 50 50 50\n25 25 25 25 25\n'''))\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n50 50 50\n25 25 25\n''') == '1'\nprint(solution('''4\n100 100 50\n25 25 25 25\n'''))\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n...L\n.X..\n''') == '1'\nassert solution('''4 4\n.XLX\n.X..\n...L\n.X..\n''') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 4\n.X..\n.L..\n....\n.L..''') == '1'\nassert solution('''4 4\n.XLL\n.X..\n...L\n.X..''') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..''') == '1', 'First'\n\nassert solution('''4 4\n.LX.\n.X..\n...L\n.X..''') == '2', 'Second'\n\nassert solution('''3 4\n.X.\n.X.\n.X.\nSample Output 2:\n3''') == '0', 'Third'\n\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..''') == '1'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..\n''') == '1'\nassert solution('''4 4\n.XLX\n.X..\n...L\n.X..\n''') == '2'\n'''\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..''') == '1'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..') == '1'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\nSample Output 2:') == '2'"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == '1'\nassert solution('4 3') == '1'\nassert solution('6 4') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n...L\\n.X..\\n') == '1'"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n.LX.\n.X..\n....\n.L..\n''') == '1'\nassert solution('''\n4 4\n.LX.\n.X..\n.XL.\n.X..\n''') == '2'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == \"home\"\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n\"\"\") == \"detention\"\nassert solution(\"\"\"5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n\"\"\") == \"home\"\nprint(\"tests done\")\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n''') == 'home', 'Wrong solution'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() in [\"home\", \"detention\"]\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2\") == \"home\"\nassert solution(\"5 2 1\") == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"detention\"\n\nimport math"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n    ''') == 'home'\nassert solution(\n    '''\n5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n    ''') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2 1') == 'home'\nassert solution('5 2 1') == 'detention'\nassert solution('4 2 2') == 'detention'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"zzzz\""
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"zzzz\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"allatral\""
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '-1', \"Test 1 Failed\"\nassert solution('tralalal') == 'allatral', \"Test 2 Failed\"\n\nimport pytest\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == -1\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abracadabra') == 'allatral'\nassert solution('abcabcabc') == 'allatral'\nassert solution('abcabcabc') == 'allatral'\nassert solution('xyz') == '-1'\nassert solution('abcd') == '-1'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'allatral'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\ntralalal\nzzzz''') == 'allatral'\n\nassert solution('''\ntrala\nzzzz''') == '-1'\n\nassert solution('''\ntral\nzzzz''') == '-1'\n\nassert solution('''\ntral\nzzz''') == '-1'\n\nassert solution('''\ntral\nzzz''') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"zzzz\""
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '5'\nassert solution('''6\n3 2 1 6 4 5''') == '8'\nassert solution('''10\n2 4 3 6 8 10 9 7 11 5''') == '13'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '5'\nassert solution('''\n6\n3 2 1 6 4 5\n''') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n4 3 5 4 1\n3\n5 4''') == '8'"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '8'"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '5'\nassert solution('''6\n3 2 1 6 4 5\n''') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5'\nassert solution('6\\n3 2 1 6 4 5') == '8'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"8\"\nassert solution('''4\n1 2 3 4 5''') == \"5\"\nassert solution('''6\n3 2 1 6 4 5''') == \"8\"\nassert solution('''4\n1 2 3 4 5''') == \"5\"\nassert solution('''6\n3 2 1 6 4 5''') == \"8\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '5\\n'\n    '1 2 3 4 5\\n'\n) == '5\\n'\n\nassert solution(\n    '6\\n'\n    '3 2 1 6 4 5\\n'\n) == '8\\n'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == '2'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('47') == '1'\nassert solution('523') == '2'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('47') == '1'\nassert solution('523') == '2'\nassert solution('1000000') == '1'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\""
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('523\\n') == '2'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == '2'\nassert solution(solution.__doc__, stdin_first=True) == '1'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3\\n2\\n1\") == \"1\"\nassert solution(\"6\\n3\\n2\\n1\\n2\\n3\") == \"2\"\nassert solution(\"80\\n50\\n30\\n20\") == \"1\"\nassert solution(\"10\\n5\\n4\\n3\\n2\") == \"2\"\nassert solution(\"10\\n5\\n4\\n3\\n2\\n1\") == \"3\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''47\n523''') == '2'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n') == '1\\n'\nassert solution('23\\n') == '2\\n'\nassert solution('80\\n') == '2\\n'\nassert solution('3\\n') == '1\\n'\nassert solution('69\\n') == '1\\n'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1 0 5'\n\nassert solution('''\n2 3\n2 0 10\n0 1 10\n1 0 20\n''') == '0 1 15'\n\nassert solution('''\n2 3\n1 0 10\n2 0 20\n0 1 20\n''') == '1 0 15'\n\nassert solution('''\n2 3\n2 0 10\n0 1 20\n0 1 20\n''') == '1 0 15'"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\n\nprint(solution('''\n3 3\n0 1 100\n1 0 50\n0 2 100\n2 0 20\n'''))\n'''"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1 0 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"5 2\\n1 2 0\") == \"3\"\nassert solution(\"4 2\\n0 1 10\") == \"3\"\nassert solution(\"4 2\\n0 1 10\\n1 2 10\") == \"2\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\nassert solution('''\n2\n0 1 20\n1 0 5\n''') == '1'\nassert solution('''\n3\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0 1 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '1\\n0 1 15'\nassert solution('10 2\\n0 1 20\\n1 0 5\\n0 3 10\\n3 2 10\\n2 0 20\\n1 0 5\\n1 0 3\\n3 2 10\\n0 1 10\\n3 2 10\\n2 0 20\\n3 2 10\\n1 0 5\\n3 2 10\\n0 1 10\\n0 3 10\\n2 0 20\\n3 2 10\\n1 0 5\\n3 2 10\\n0 1 10\\n3 2 10\\n2 0 20') == '0\\n1 0 3\\n1 0 5\\n3 2 10\\n3 2 10\\n2 0 20'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 10\n1 2 10\n''') == '2'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '1'\nassert solution('4 4 8 12') == '1'\nassert solution('6 6') == '6'"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2\\n2 3\\n3 4') == '1'\nassert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5'\nprint('all tests passed')\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\nassert solution('''\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '1'\nprint('PASSED!')\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"5\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 4 8 12\") == \"1\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5''') == '5'\nassert solution('''4 3\n4 4 8 12\n1 2\n2 3\n3 4\nSample Output 3:\n0''') == '0'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5'\nassert solution('5 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 5\\n2 5') == '1'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 5\\n2 5') == '1'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 5\\n2 5') == '1'"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 2') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"5\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 4 8 12\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == \"5\"\nassert solution('''\n4 3\n4 4 8 12\n1 2\n2 3\n3 4\nSample Output 3:\n0\n''') == \"0\"\nassert solution('''\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == \"1\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"5 6\") == \"5\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"5 7\") == \"3\"\nassert solution(\"3 4\") == \"2\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('11') == '11'\nassert solution('12') == '12'\nassert solution('10') == '12'\nassert solution('123') == '13'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('030303') == '7'\nassert solution('0011') == '1'\nassert solution('111') == '3'\nassert solution('11') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('120') == '4'\nassert solution('011') == '1'\nassert solution('00') == '0'\nassert solution('1111') == '12'\n\nimport math"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"021020\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"01\") == \"1\"\nassert solution(\"12\") == \"12\"\nassert solution(\"0011\") == \"0\"\nassert solution(\"1223\") == \"21\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('010302') == '7'\nassert solution('1311') == '24'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"24\"\nassert solution(input(True)) == \"7\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0111\") == \"3\"\nassert solution(\"02100\") == \"8\"\nassert solution(\"02101\") == \"6\""
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n#.#..##..#\") == \"1 3 5 15\"\nassert solution(\"4 4\\n##.###...\") == \"1 5 15\"\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 4\\n#.#...#.#\\n###..#.##\\n##.##.#.#\\n##...#...\\n####.#.#.\\n##.##.###\\n') == '3 1 3 10'\n\nstdin = \"\"\"8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 3 5 15'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 10') == '3 1 3 10'\nassert solution('5 20') == '1 15 5 15'"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 10\n###.##....\n##...##...\n##...##...\n##...##...\n##...##...\n###.##....\n''') == '3 1 3 10'\nassert solution('''\n20 10\n###.##....\n##...##...\n##...##...\n##...##...\n##...##...\n###.##....\n''') == '1 15 5 15'\nassert solution('''\n5 20\n###########.#.#.#.#.\n###########...#.###.\n##########..##.#..##\n###########..#.#.##.\n###########.###...#.\n###########.###...#.\n###########.###...#.\n''') == '1 15 5 15'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1 15 5 15'"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 15 5 15\"\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 10') == '3 1 3 10'\nassert solution('5 20') == '1 15 5 15'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == '16.339203308'\nassert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0.06') == '0.125'\nassert solution('5 1.000') == '1.000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''50 0.125\n201 1.000''') == '16.339203308'\nassert solution('''50 1.000\n201 1.000''') == '5.000000000'\nassert solution('''50 0.125\n200 1.000''') == '4.375'\nassert solution('''50 0.125\n200 1.000''') == '4.375'\nassert solution('''201 0.000\n201 1.000''') == '4.375'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n\"\"\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''50 0.125\n201 1.000''') == \"16.339203308\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1', \"Worst case\"\nassert solution('4 3') == '3', \"Best case\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"1 3\") == \"3\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '3'\nassert solution('1 11') == '12'\n\"\"\"\nimport math\nfrom collections import Counter\nfrom typing import List\n\nimport pytest\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2'\nassert solution('4 3\\n1 11\\n') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('4 3') == '3'\nassert solution('10 20') == '19'\nassert solution('100 100') == '99'\n\n'''\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 3\n0.5 1\n0.5 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n0.4 1\n0.4 1\n0.4 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 3') == '3'"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1\\n1 1\\n3 0\\n') == '-1'\nassert solution('3 1\\n3 1\\n3 1\\n') == '3.3333333333333335'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\"\nassert solution(\"2\\n0 1\\n3 0\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n10 0\\n0 3\") == \"-1\"\nassert solution(\"3\\n2 1\\n3 2\\n10 0\") == \"10.5\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0\\n') == '10.5\\n'\nassert solution('3\\n4 1\\n0 3\\n') == '-1\\n'\nassert solution('3\\n2 1\\n4 0\\n0 3\\n') == '-1\\n'"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n7 1\n3 2\n10 0\n\"\"\") == \"10.5\"\nassert solution(\"\"\"\n3\n2 1\n4 0\n0 3\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3 4\n2 5\n0 1\n1 1\n1 1\n''') == '3.5', \"solution\"\nassert solution('''\n4\n0 2\n1 4\n4 1\n3 2\n''') == '-1', \"solution\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n3\n7 1\n3 2\n10 0\n\"\"\"\n) == \"10.5\"\nassert solution(\n    \"\"\"\n10\n7 1\n3 2\n10 0\n\"\"\"\n) == \"-1\"\nassert solution(\n    \"\"\"\n1\n1 1\n3 3\n10 0\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2\n3 1\n4 0\n0 3\n''') == '-1'\nassert solution('''\n5\n1 2\n3 1\n4 0\n0 3\n0 4\n''') == '10.5'\nassert solution('''\n5\n1 0\n2 0\n3 0\n4 0\n5 0\n''') == '10.5'\nassert solution('''\n8\n1 0\n2 2\n3 2\n4 4\n5 5\n6 6\n7 7\n8 8\n''') == '10.5'\nassert solution('''\n5\n1 0\n2 2\n3 2\n4 4\n5 5\n6 6\n7 7\n8 8\n''') == '0.75'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '10.5'\nassert solution('3 1') == '10.5'\nassert solution('3 2') == '10.5'\nassert solution('10 0') == '-1'\nassert solution('0 3') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '-1'\nassert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n1 2\\n4 0\\n0 3') == '-1'\nassert solution('1\\n7 1\\n3 2\\n10 0') == '10.5'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n7 1\n3 2\n10 0\n\"\"\") == \"10.5\"\nassert solution(\"\"\"\n4\n2 1\n4 0\n0 3\n\"\"\") == \"10.5\"\nassert solution(\"\"\"\n1\n0 1\n1 2\n\"\"\") == \"0.5\"\nassert solution(\"\"\"\n2\n0 1\n0 2\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0.5') == '1'\nassert solution('2 0.51') == '1'\nassert solution('1 0.49') == '2'"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0.5') == '1', \"This test case fails\"\nassert solution('2 0.501') == '2', \"This test case fails\"\nassert solution('2 0.499') == '2', \"This test case fails\"\nassert solution('2 0.499') == '2', \"This test case fails\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 0.5\\n2 0.51\\n1 0.49') == '1'\nassert solution('3\\n3 1\\n2 0.51\\n3 0.49') == '2'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 0.5\n2 0.51\n1 0.49\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 0.5\n2 0.51\n1 0.5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 0.5\n2 0.51\n1 0.49\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 0.5\n2 0.51\n1 0.5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 0.5\n2 0.51\n1 0.5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1'\nassert solution('2 0.51\\n2 0.51\\n1 0.49\\n') == '2'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 0.5') == '1'\nassert solution('2 0.51') == '2'\nassert solution('1 0.49') == '2'"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 0.5\n2 0.51\n1 0.49''') == '1'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 0.5') == '1'\nassert solution('2 0.51') == '2'\nassert solution('1 0.49') == '2'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\""
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 2\") == \"yes\"\nassert solution(\"5 4 4\") == \"yes\"\nassert solution(\"5 4 4\") == \"no\"\nassert solution(\"5 4 4\") == \"no\"\nassert solution(\"5 4 4\") == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == 'yes'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == 'no'\nprint('Tests passed!')\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\nassert solution('''5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\nSample Output 3:\nno\n''') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5 2') == 'yes','should be yes'\nassert solution('4 5 2') == 'no','should be no'\nassert solution('5 4 4') == 'yes','should be yes'\nassert solution('5 4 4') == 'no','should be no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 4') == 'yes', 'First'\nassert solution('4 5 2') == 'no', 'Second'\nassert solution('5 4 2') == 'no', 'Third'\nassert solution('5 5 2') == 'no', 'Fourth'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5 2\\n1 3 3 3\\n0 1\") == \"yes\"\nassert solution(\"2 5 3\\n0 1 2\\n2 3\\n3 4\\n4 2\") == \"yes\"\nassert solution(\"4 5 2\\n1 3 3 3\\n0 1\\n2 3\\n3 4\\n4 2\") == \"no\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5 2\") == \"yes\"\nassert solution(\"5 4 4\") == \"yes\"\nassert solution(\"5 5 5 5\") == \"yes\"\nassert solution(\"3 2 1\") == \"no\"\nassert solution(\"3 3 3 3\") == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5 2') == 'yes'\nassert solution('5 4 4') == 'yes'\nassert solution('8 3 2') == 'no'\nassert solution('12 3 2') == 'no'\nassert solution('7 5 2') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n3 4\n4 2\n''') == 'yes'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5 2') == 'yes'\nassert solution('4 5 2') == 'no'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5\n5\n5\n''') == '2 1 2'\n\nassert solution('''4\n20\n15\n17\n14\n''') == '5 8 7 6 5'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n5\n5\n5\n''') == '2 1 2 7'\nassert solution('''4\n20\n15\n17\n14\n''') == '5 8 2 7'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'\nassert solution('4') == '3 1 2'\n\nsolution('10') #'9 8 7 6 5 4 3 2 1 0'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n20\n15\n17\n14''') == '5 8 2 7'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20'"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '5'\nassert solution('20') == '15'\nassert solution('15') == '8'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2 1\"\nassert solution(\"4\") == \"5 8\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2 1 0'\nassert solution('4') == '5 8 0 7 6 1 2'\nassert solution('5') == '10 4 7 2 1 8 0 9 6 3'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n3\\n3\") == \"1\\n2\\n2\\n1\\n\"\nassert solution(\"2\\n1\\n2\\n5\") == \"1\\n1\\n2\\n3\\n3\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"5\"\nassert solution(\"20\") == \"5\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'python'\nassert solution('2') == 'python java'\nassert solution('3') == ''\nassert solution('4') == 'python java'\nassert solution('5') == 'python java python'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\npython\\njava\\n\") == \"python\"\nassert solution(\"3\\njava\\npython\\n\") == \"java\"\nassert solution(\"3\\npython\\njava\\njava\") == \"python\"\nassert solution(\"3\\njava\\npython\\njava\") == \"java\"\nassert solution(\"3\\njava\\njava\\njava\\n\") == \"java\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"python\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\npython\np^ main.py\n^ -n 10\n''') == 'python main.py'\nassert solution('''\n5\npython\njava\n^\n^^^\n^^^\n''') == 'python java'\n'''\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n        1\n        python\n        ^\n        ^\n        ^\n''') == \"python\"\nassert solution('''\n        1\n        java\n        ^\n        ^\n        ^\n''') == \"java\"\nassert solution('''\n        5\n        python\n        ^\n        ^\n        ^\n''') == \"python\"\nassert solution('''\n        5\n        java\n        ^\n        ^\n        ^\n''') == \"java\"\nassert solution('''\n        3\n        python\n        ^\n        ^\n        ^\n''') == \"python\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"python\"\nassert solution(\"4\") == \"python\"\nassert solution(\"5\") == \"python\"\nassert solution(\"6\") == \"python\"\nassert solution(\"7\") == \"python\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'python'\nassert solution('2') == 'java'\nassert solution('3') == ''\nassert solution('4') == 'python'\nassert solution('5') == 'java'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\npython\np^ main.py\n^ -n 10\n''') == 'python main.py -n 10'\nassert solution('''\n5\npython\njava\n^\n^\n^\n''') == 'python java'\n\n'''\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        history = []\n        for i in stdin.split('\\n'):\n            if i.startswith('^'):\n                history.append(i[1:])\n            else:\n                for i in history:\n                    print(i, end='')\n                print(i +'' + i)\n                history = []\n        for i in history:\n            print(i, end='')"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\npython') == 'python'\nassert solution('2\\npython') == 'python'\nassert solution('1\\npython') == 'python'\nassert solution('5\\npython') == 'python'\nassert solution('0\\npython') == 'python'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'python'\nassert solution('2') == 'python java'\nassert solution('1') == 'python'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == \"this sentence makes perfect sense\"\nassert solution('hitehre') == \"impossible\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\n\nSample Input 3:\nhitehre\n2\nthis\nhello\nSample Output 3:\nimpossible\n\nSample Input 4:\nabcmujw\n3\nmhf\nfl\nlz\nSample Output 4:\nambiguous\n\nSample Input 5:\ntihssnetnceemkaesprfecetsesne\n3\nthis\nhello\nsentence\nSample Output 5:\nthis sentence makes perfect sense\n'''\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\nassert solution(\"cacagatagatcacacgatc\") == \"halt\"\nassert solution(\"hihiihiii\") == \"hii\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('theres') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('this sentence makes perfect sense') == 'impossible'\nassert solution('hello') == 'impossible'\nassert solution('hello there') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hello\") == \"impossible\"\nassert solution(\"here\") == \"impossible\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"amazing\"\nassert solution(\"mhvwxyz\") == \"impossible\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('thissentencemakesperfectsense') == 'this sentence makes perfect sense'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense', 'Check example 1'\nassert solution('hitehre') == 'impossible', 'Check example 2'\nassert solution('this sentence makes perfect sense') == 'this sentence makes perfect sense', 'Check example 3'\nassert solution('mississippi') == 'impossible', 'Check example 4'\nassert solution('amitabh') == 'impossible', 'Check example 5'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 2\"\n) == \"4\"\nassert solution(\n    \"3 2\"\n) == \"16\"\nassert solution(\n    \"2 1\"\n) == \"1\"\nassert solution(\n    \"2 2\"\n) == \"4\"\nassert solution(\n    \"4 4\"\n) == \"16\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\nprint(solution(input))\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n') == '4'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '4'\nassert solution('2 2') == '16'\nassert solution('3 3') == '6'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == \"4\"\nassert solution('2 2') == \"16\"\nprint(solution(input()))\n'''\n\nn, m = map(int, input().split())"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == \"4\"\nassert solution('2 2') == \"16\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nabab\\n2\\nbac\\nbaba') == '4'\nassert solution('6\\nabcbab\\n2\\ncbab\\ncbba\\nbaba') == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\nabcabc\n2\nac\nabc\ncba\ncab\nab\nabc\nab\n''') == '7'\n\nassert solution('''10\nabcabc\n2\nac\nabc\ncba\ncab\nab\nabc\nab\n''') == '9'\n\nassert solution('''10\nabcabc\n2\nac\nabc\ncba\ncab\nab\nabc\nab\n''') == '8'\n\nassert solution('''8\nabcbab\n2\ncb\nabab\nbaca\nbacb\nabab\nabc\nab\n''') == '2'\n\nassert solution('''5\nabab\n2\na\nb\nb\n''') == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\") == \"2\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\nabcbab\n2\ncb\ncbab\n''') == '2'\nassert solution('''\n4\nabab\n2\nbac\nbaba\n''') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '4'\n\"\"\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nabcbab\\n2\\ncb\\n') == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6\nabcbab\n2\ncb\ncbab\n''') == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\nabab\n2\nbac\nbaba''') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nabc\\n2\\nbac\\n') == '4'"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '7'\nassert solution('40') == '41'\nassert solution('50') == '51'\nassert solution('24') == '25'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0') == '6\\n85\\n90\\n95\\n100\\n105'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20') == '4\\n17.071067\\n20\\n22.928932'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"8\"\nassert solution(\"100\") == \"100\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('10') == '10'\nassert solution('100') == '100'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"50\") == \"6\"\nassert solution(\"4\") == \"85\"\nassert solution(\"3\") == \"17.071067\""
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100') == '6'\nassert solution('24') == '4'\nassert solution('50') == '6'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n4\n10 10\n80 10\n80 0\n110 0\n''') == '6'\n\nassert solution('''\n24\n3\n10 10\n30 10\n20 20\n''') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"50\n4\n110 10\n80 10\n80 0\n110 0\"\"\",\n    \"\"\"6\n85\n90\n95\n100\n105\"\"\",\n    ) == \"\"\"6\n17.071067\n20\n22.928932\"\"\""
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n20\n4\n10 10\n30 10\n20 20\n\"\"\") == \"4\"\n\nassert solution(\n    \"\"\"\n24\n3\n10 10\n30 10\n20 20\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('1') == '1.00'\nassert solution('10') == '2'\nassert solution('12') == '1.50'\nassert solution('40') == '5'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 11\n''') == 'yes'\nassert solution('''\n10 7\n''') == 'yes'\nassert solution('''\n20 999 + 321 - 42 = -700\n''') == 'no'\nassert solution('''\n20 999 + 321 - 42 = -700 + 99999 = -20099\n''') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 11') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"no\"\n\"\"\"\n\nimport math\n\na, b, c = map(int, stdin.split())\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'no'\nassert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('10 10') == 'no'\nassert solution('10 9') == 'no'\nassert solution('12 13') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == 'no'\nassert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 11\n''') == 'yes'\nassert solution('''\n100 101\n''') == 'no'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 4\n2 5\n1 6\n''') == '3'\nassert solution('''\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '3'\nassert solution('''\n7\n20 4\n40 4\n20 5\n40 5\n30 5\n20 10\n40 10\n20 9\n30 9\n20 8\n40 8\n''') == '3'"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 3 4 2'\nassert solution('5') == '1 3 4 5 2'"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40') == '3\\n10 60\\n30 50\\n30 40'\nassert solution('5\\n100 90\\n80 80\\n90 80\\n80 80\\n90 80') == '2\\n80 80'\nassert solution('5\\n100 90\\n80 80\\n90 80\\n80 80\\n80 80') == '3\\n80 80'\n\n\"\"\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n2 5\n1 6\n3 4\n\"\"\") == \"\"\"\n3\n1 6\n2 5\n3 4\n\"\"\", \"Test #1 Failed\"\nassert solution(\"\"\"\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n\"\"\") == \"\"\"\n3\n10 60\n30 50\n30 40\n\"\"\", \"Test #2 Failed\"\nassert solution(\"\"\"\n4\n2 5\n1 6\n3 4\n\"\"\") == \"\"\"\n1 6\n2 5\n3 4\n\"\"\", \"Test #3 Failed\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('3 4') == '3 4'\nassert solution('2 5') == '1 6'\nassert solution('1 6') == '1 6'\nassert solution('20 40') == '20 40'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6') == '3'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40') == '3'\n\"\"\""
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n4 1 2 3\\n3 1\\n2 2') == '3'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\n\n\"\"\"\n\nfrom typing import List, Tuple\nimport sys\nimport math"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '3 10 60 30 50 30 40'\nassert solution('''\n10\n20 30\n10 20\n10 40\n20 50\n10 60\n''') == '5 20 50 30 40 30 20'\nassert solution('''\n10\n10 30\n10 20\n10 40\n20 50\n10 60\n''') == '3 20 60 10 40 30 50 10 30'\n'''\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\""
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '5836'\n\nassert solution('''\n5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == \"5836\"\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == \"1828\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == '5836'\nassert solution('5 2') == '1828'\nassert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1') == '5836'\nassert solution('5 2') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == '5836', \"First\"\nassert solution(\"5 2\") == '1828', \"Second\"\nprint('All tests passed!')\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == '50'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == '50'\nassert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == 'impossible'"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('3') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == '50'\nassert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == 'impossible'\nprint(solution('''5\n1340 375 85 63 104 53 80 10\n1440 1520 53 14 6 55 94 7\n1640 1595 53 2 7 19 4 8\n'''))\n\nstdin = input()\nn = int(stdin)\n\ncandidate_1 = [3, 4, 2]\ncandidate_2 = [3, 4, 2]\n\nfor line in stdin:\n    delegates_1, delegates_2, unknowns = (int(num) for num in line.split())\n    candidate_1.append(delegates_1)\n    candidate_2.append(delegates_2)\n    unknowns += 1\n    while unknowns > 0:\n        candidate_1[0] -= 1\n        candidate_1[1] -= 1\n        candidate_1[2] -= 1\n        candidate_2[0] -= 1\n        candidate_2[1] -= 1\n        candidate_2[2] -= 1\n        if candidate_1[0] <= 0 and candidate_1[1] <= 0 and candidate_1[2] <= 0:\n            break\n        if candidate_2[0] <= 0 and candidate_2[1] <= 0 and candidate_2[2] <= 0:\n            break\n        unknowns -= 1"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '50'\nassert solution('3') == 'impossible'\n\n'''\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == '50'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == '50'\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n') == 'impossible'\n\n'''\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == 'impossible'\nassert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == '50'\nassert solution('''\n5\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n8 1234 3678 0\n''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99''') == \"impossible\"\nassert solution('''3\n7 250 2299 0\n6 250 2399 0\n2 750 750 99''') == \"impossible\"\nassert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99''') == \"50\"\nassert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99''') == \"impossible\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0 0 0 0 1'\nassert solution('1.5') == '0 0 0 0 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n\nInput\n    5.0\nOutput\n    0 0 0 0 1\n    0 0 0 1 1\n    0 0 1 1 1\n    0 0 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1\n    0 1 1 1 1"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5.0''') == '0 0 0 0 1'\nassert solution('''4.5''') == '0 0 0 1 1'''\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n\nfrom sys import stdin\nP = float(stdin.readline())\n\nans = 0\nfor i in range(1, 6):\n    if P % i == 0:\n        ans += (P / i)\n\nprint(ans)\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5.0''') == '0 0 0 0 1'\nassert solution('''4.5''') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n\"\"\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 3 1\n1 7 8 2 6 4 3 5''') == '8'\nassert solution('''8 2 1\n1 7 8 2 6 4 3 5''') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 3 1\n1 7 8 2 6 4 3 5''') == '8'\nassert solution('''10 5 1\n1 7 8 2 6 4 3 5''') == '7'\nassert solution('''4 5 1\n1 2 3 4 5''') == '5'\nassert solution('''6 7\n1 2 3 4 5 6''') == '6'\nassert solution('''12 9\n1 2 3 4 5 6 7 8 9''') == '12'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == \"2\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 3 1\") == \"8\"\nassert solution(\"8 2 1\") == \"3\"\n\nassert solution(\"1 7 8 2 6 4 3 5\") == \"10\"\nassert solution(\"1 7 8 2 6 4 3 5\") == \"10\""
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5\\n') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 3 1\n    1 7 8 2 6 4 3 5\n''') == '8'\nassert solution('''8 2 1\n    1 7 8 2 6 4 3 5\n''') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 1 3\n1 4 5 2 6''') == '3'\nassert solution('''5 1 2\n1 4 5 2 6''') == '2'\nassert solution('''7 4 1\n1 4 3 2 6 5 7''') == '4'\nassert solution('''8 1 2\n1 7 8 2 6 4 3 5''') == '8'\nassert solution('''4 4 1\n1 4 3 2 6 5 7''') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 2 2\") == \"2\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution([4, 2, 3, 1]) == \"3\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(samples.sample_input_1) == \"3\"\nassert solution(samples.sample_input_2) == \"4\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4 4 4 4 4\") == \"4\"\nassert solution(\"2 3 2 4 4 4\") == \"4\"\nassert solution(\"3 3 4 4 4 5\") == \"4\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"4\"\nprint(\"Congratulations, you passed the test!\")\n\"\"\""
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n2 3 4 1''') == '3'\nassert solution('''6 3\n2 2 2 4 4 4''') == '4'\nassert solution('''5 3\n5 1 3 4 2''') == '2'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n2 3 4 1\n''') == '3'\nassert solution('''\n6 3\n2 2 2 4 4 4\n''') == '4'\n\nimport math\n\nclass Solution:\n    def max_bit_and(self, arr):\n        res = 0\n        for i in range(1,len(arr)):\n            res = max(res,(arr[i]&arr[i-1]).bit_length())\n        return res\n\nclass Solution1:\n    def max_bit_and(self,arr):\n        res = 0\n        for i in range(1,len(arr)):\n            res = max(res,math.log2(arr[i]))\n        return res\n\nclass Solution2:\n    def max_bit_and(self,arr):\n        # can also use the ascii (8-bit) value of the ASCII values of the integers\n        # and use the log base 2 for this\n        # also note that the number of bits in the highest power integer is the bitwise and of all the integers in that section\n        # the idea is that every integer N (i) should be represented by a binary string of length N, and that the bitwise AND of every two consecutive integers is stored in this string\n        # if this bitwise AND is the maximum bitwise AND for all integers in the given section, then we have a winner\n        # we can create a dp array of size n+1, because every integer N (i) will be represented by a bit string of length N, and the maximum bitwise AND of all integers in that section is stored in this array\n        # since we start at i=1, the maximum bitwise AND is 0\n        # dp array[i] is the maximum bitwise AND of all integers in section i\n        # dp array is the bitwise AND of every consecutive integer. That is, if i is the ith number in the section, then dp array[i] is the maximum bitwise AND of all integers that are smaller than i.\n        # note that for each integer in the section, we need to take the bitwise AND of all integers smaller than i\n        # so our dp array is just a bitarray, and we can just fill the values in dp array in a special way\n        # we can just write 0 in the beginning and 1 in the end. We can then write the bitwise AND of all integers smaller than i in the middle.\n\n        n = len(arr)\n        dp = [0]*(n+1)\n        # first number is always 0, so we don't have to worry about it\n        for i in range(1,n+1):\n            # for every number i, we look for the bitwise AND of all integers smaller than i\n            dp[i] = dp[i-1]\n            # find the maximum bitwise AND\n            for j in range(i):\n                dp[i] = max(dp[i],arr[i-1]&arr[j])\n        return dp[-1]"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\nassert solution([6, 3, 2, 2, 4, 4, 4]) == '4'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.7320508\"\nassert solution(\"1 1 3.0\") == \"-1\"\nprint(solution(input()))\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1.732050') == '1.732050880'\nassert solution('1 1 3.0') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1 1.732050\n2 1 2.8333333333333333\n''') == '1.732050808'\nassert solution('''\n2 2 1.0\n2 2 2.0\n''') == '-1'\nassert solution('''\n3 3 1.0\n3 3 2.0\n3 3 1.0\n''') == '1.0'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1.732050') == '1.7320508'"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 2') == '-1'\nassert solution('1 1 0.00001') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1.732050') == '1.7320508'\nassert solution('1 1 3.0') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 0.166666666666667 1.5 0.5\n''') == '2.95641171875'\nassert solution('''\n0 0.166666666666667 1.5 0.5\n''') == '-1'\nassert solution('''\n5 0.166666666666667 1.5 1.5\n''') == '2.95641171875'\nassert solution('''\n5 0.166666666666667 1.5 1.5\n''') == '-1'\nassert solution('''\n0 0.166666666666667 1.5 1.5\n''') == '-1'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002', 'First Sample Test Failed'\n\nassert solution('''\n5\n0 0 0 0 0\n-1 1 1 1 1\n.75\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n.25\n."
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2.4999999987500003'\nassert solution('2') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2.4999999987500003'\nassert solution('2') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0.0'\nassert solution('2') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1.0\"\nassert solution(\"4\") == \"0.5\"\nassert solution(\"1\") == \"0.5\"\nassert solution(\"-1\") == \"0.5\"\nassert solution(\"5\") == \"0.25\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n3 4 2\n.75\n\"\"\") == \"2.4999999987500003\"\nassert solution(\"\"\"\n2\n0 100 10\n0 -100 100\n.80\n\"\"\") == \"9.999999999000002\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0.9000000000000004'\nassert solution('2') == '0.2'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''\n2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2.4999999987500003'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '0\\n3\\n1'\nassert solution('5 3') == '0\\n2\\n0\\n0\\n0'\nassert solution('5 4') == '0\\n1\\n0\\n0\\n0'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution() == '2'\nassert solution() == '0'"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3'\nassert solution('6 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '2'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '0'\nassert solution('4 5') == '3'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 6') == '0'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6') == '3'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"6 4\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"1\\n2\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 6\") == \"0\"\nassert solution(\"4 5\") == \"3\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '0\\n3\\n'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4') == '3'\nassert solution('6 3\\n1 1 5 1 2\\n2 1 5\\n2 2 2\\n2 3 3\\n2 4 4\\nSample Output 2:') == '0'\nassert solution('6 3\\n1 1 5 1 2\\n2 1 5\\n2 2 2\\n2 3 3\\n2 4 4\\nSample Output 2:') == '1'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\nSample Output 2:') == '2'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 7 1000000007\n''') == '1'\nassert solution('''\n2 2 1000000007\n''') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 7 1000000007''') == '1'\nassert solution('''3 2 1000000007''') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2 1000000007\n''') == '4'\n\nassert solution('''\n3 2 1000000007\n''') == '4'\n\nassert solution('''\n7 2 1000000007\n''') == '8'\n\nassert solution('''\n7 2 1000000007\n''') == '8'\n\nassert solution('''\n1 1000000007\n''') == '1'"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 7 1000000007\") == \"4\"\nassert solution(\"3 2 1000000007\") == \"4\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\nassert solution('5 4 1000000007') == '5'\nassert solution('6 4 1000000007') == '6'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1000000 1\") == \"999999\""
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"3 5\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 10\\n6') == '5'\nassert solution('3 5\\n11') == '8'\n\n'''"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 10\n6\n''') == '5'\n\nassert solution('''\n3 5\n11\n''') == '8'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 5') == '4'\nassert solution('10000000 10') == '2'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 10\\n6') == '5'\nassert solution('3 5\\n11') == '8'"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 10\n6''') == '5'\nassert solution('''3 5\n11''') == '8'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n') == '2'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n') == '3'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1\n''') == '2', 'First'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3', 'Second'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3', 'Third'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3', 'Fourth'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '4', 'Fifth'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"3\"\nassert solution(\"4 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"3\"\nassert solution(\"4 5 3\") == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nprint(solution())\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(\n    \"\"\"\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nprint(solution())\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution('5 1') == '3'\nassert solution('3 1') == '3'\nassert solution('6 1') == '3'\nassert solution('3 1') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\nassert solution('''\n10 4\n10 20\n10 30\n10 40\n''') == '9'"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == '2'\nassert solution('3 1') == '1'"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\n'''\n\n'''\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\nassert solution('''\n1\n0\n''') == '1'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n10\n10\n1 10\n1 10\n1 10\n''') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 1\n10\n10\n1 10\n1 10\n1 10\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 5\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1\n10\n10\n1 10\n1 10\n1 10\n''') == '3'\n\nassert solution('''\n3 2\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1\n''') == '1'\n\nassert solution('''\n3\n1\n''') == '5'\n\nassert solution('''\n3\n2\n3\n''') == '2'\n\nassert solution('''\n3\n2\n3\n3\n4\n''') == '10'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n') == '1\\n', \"First\"\nassert solution('3\\n4\\n') == '5\\n', \"Second\"\nassert solution('6\\n7\\n') == '1\\n', \"Third\""
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\\n\"\n    \"2\\n\"\n) == \"1\"\n\nassert solution(\n    \"3\\n\"\n    \"3\\n\"\n) == \"5\"\n\nassert solution(\n    \"6\\n\"\n    \"7\\n\"\n) == \"10\"\n\nassert solution(\n    \"13\\n\"\n    \"15\\n\"\n) == \"18\"\n\nassert solution(\n    \"18\\n\"\n    \"10\\n\"\n) == \"21\""
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2''') == '1'\nassert solution('''3\n4''') == '5'\nassert solution('''5\n3''') == '5'"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"5\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2'\nassert solution('''\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1'\nassert solution('''\n6 1\n0 0 0 2 9 0\n1 2 0 2 6 0\n0 0 0 0 1 1\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n''') == '3'\nassert solution('''\n3 1\n1 0 0\n0 0 0\n0 0 0\n''') == '2'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2'\nassert solution('''\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1'\nassert solution('''\n5 3\n0 1 0 5\n1 1 1 0\n0 1 0 1\n0 0 1 1\n0 1 1 1\n''') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2'\nassert solution('''\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '2'\nassert solution('1 1') == '0'\nassert solution('0 1') == '0'\nassert solution('0 0') == '0'\n\n'''"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2'\nassert solution('''\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1\n0 11 9\n1 0 10\n0 0 0''') == '2'\n\nassert solution('''4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0''') == '-1'\n\nassert solution('''7 5\n0 0 2 0 0 0 0\n0 0 5 0 0 0 0\n0 0 0 2 0 0 0\n0 0 0 5 0 0 0\n0 0 0 0 2 0 0\n0 0 0 5 0 0 0\n0 0 0 0 2 0 0''') == '7'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 0 3') == '4 3 5'\nassert solution('2 1 0 1') == '2 1 2'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '4 3 5'\nassert solution('''\n5 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '5 2 5'\nprint('Tests Completed')\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n'''\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5 0 3') == '4 3 5'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\"\n    ) == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\n    \"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\"\n    ) == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\n    \"2 1 0 1\\n0 1 100000\\nSample Output 2: \\n2 100000 1\\n0 1 100000\"\n    ) == \"2 100000 1\\n0 1 100000\"\nassert solution(\n    \"2 1 0 1\\n0 1 100000\\nSample Output 2: \\n2 100000 1\\n0 1 100000\"\n    ) == \"2 100000 1\\n0 1 100000\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 0 3') == '4 3 5'\nassert solution('2 1 0 1') == '2 100000 1'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 0 3\") == \"3 2 4\"\nassert solution(\"6 6 0 0\") == \"6 3 4\"\nassert solution(\"5 5 0 1\") == \"5 3 1\"\nassert solution(\"10 20 0 0\") == \"10 3 1\"\nassert solution(\"20 10 0 0\") == \"20 3 1\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == stdin, (solution(), stdin)\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"3 5\"\nassert solution(\"2 3\") == \"2 0\"\nassert solution(\"2 2\") == \"1 0\"\nassert solution(\"2 4\") == \"1 1\"\nassert solution(\"3 2\") == \"0 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\nSMS\nMMS\n''') == '3 5'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nSMS\\n') == '3 5'\nassert solution('2\\nSMS\\nMMS\\n') == '2 0'"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\nSMS\nMMS''') == '3 5'\nassert solution('''2 4\nSSM\nMMS\nSSM''') == '2 0'"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\nSMS\nMMS''') == '3 5'\nassert solution('''1 1\nS\n.\n.\n.\n.\nS''') == '1 0'\nassert solution('''8 7\n.S.M.S.M.\nM.S.S.S.\n.M.M.M.\n.S.M.S.\n.S.S.M.\nM.S.S.\nS.S.M.\n.M.M.\n.S.S.M''') == '7 7'\nassert solution('''8 8\n.S.M.M.\n.S.M.S.\n.M.M.S.\n.M.M.S.\n.S.M.S.\n.S.M.S.\n.S.M.S.\n.M.S.S.\n.S.M.S.\nS.M.M.S''') == '14 14'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\nSMS\\nMMS') == '3 5'\nassert solution('1 2\\nMM\\n') == '0 0'\nassert solution('3 3\\nMM.\\nMM.\\n') == '4 0'\nprint('\"Run\" is the best way to get credit for your solutions!')"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nSMS\\nM.MS\") == \"2 0\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2'\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1'\nassert solution('''\n8\n0 B\n1 B\n2 E a\n2 S\n3 E a\n3 E b\n4 E a\n4 E b\n1 T a\n1 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 T a\n1 S\n''') == '0'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2'\nassert solution(\n    '6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1'\nassert solution(\n    '13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n0 G\n0 T\n1 G a\n1 T a\n2 E a\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2'\nassert solution('''\n4\n0 S\n1 G a\n1 T a\n2 E a\n2 S\n''') == '1'\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '3'\nassert solution('''\n10\n0 G\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2'\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\nSample Output 2:\n1\n6 b\n''') == '6 b'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S') == '2'\nassert solution('2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S') == '1'\nassert solution('5\\n0 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S') == '6'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S') == '1'\nassert solution('6\\n0 B\\n1 T a\\n2 E a\\n2 S') == '1'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13') == '2'\nassert solution('6') == '1'"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1'\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\nSample Input 3:\n7\n0 B\n1 B\n2 E a\n2 S\n2 G a\n1 G a\n1 T a\n1 S\nSample Output 3:\n2\n6 b\n'''\n\nfrom itertools import product\nfrom collections import defaultdict"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2 c'\nassert solution('''\n7 T a\n6 G a\n4 T a\n5 G a\n6 T a\n5 E a\n5 E b\n1 S\n''') == '3 c'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 1 2 1 2 1 3 3 2 1 2 2') == '2'\nassert solution('2 4 5 6 1 2 1 2 3 3 2 1 1 2') == '4'\nassert solution('10 10 11 1 1 1 1 3 2 2 1 3 1 2 1 2 3 2 2 1 2') == '3'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\n\n'''\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\nassert solution(\"154418\") == \"12\""
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    1 5\n\"\"\") == \"40\"\n\nassert solution(\"\"\"\n    10 1\n\"\"\") == \"109\"\n\nassert solution(\"\"\"\n    2737 1000\n\"\"\") == \"3918\n\nassert solution(\"\"\"\n    0 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '40'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == str(__import__('sys').stdout.read())\nprint(solution(__import__('sys').stdin.read()))\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\n\"\"\""
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nCAT\\nDOG\\nCOT') == 'COG'\nassert solution('2\\nCAT\\nDOG\\nCOT') == '0'\nassert solution('3\\nCAT\\nDOG\\nCOT') == '0'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"COG\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\\n\") == \"COG\"\nassert solution(\"2\\nCAT\\nDOG\\n\") == 0\nassert solution(\"5\\nCAT\\nDOG\\nCAT\\nDOG\\n\") == -1\n\nstdin = \"\"\"3\nCAT\nDOG\nCOT\n\"\"\".strip()\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nCAT\\nDOG') == 'COG'\nassert solution('2\\nCAT\\nDOG') == '0'\nassert solution('3\\nCAT\\nDOG\\nCAT\\nDOG') == 'COG'\nassert solution('3\\nCAT\\nDOG\\nCAT\\nDOG') == '0'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\nCAT\\nDOG\\n') == 'COG'\nassert solution('3\\nCAT\\nDOG\\nCOT\\n') == 'COT'\nassert solution('4\\nCAT\\nDOG\\nCOT\\n') == 'CAT'\nassert solution('5\\nCAT\\nDOG\\nCOT\\n') == 'DOG'\nassert solution('6\\nCAT\\nDOG\\nCOT\\n') == 'CAT'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\nCAT\nDOG\n''') == 'DOG'\nassert solution('''\n1\nCAT\n''') == 'CAT'\nassert solution('''\n1\nCAT\nCAT\n''') == 'CAT'\nassert solution('''\n1\nCAT\nCAT\n''') == 'CAT'\nassert solution('''\n1\nCAT\nCAT\nCAT\n''') == 'CAT'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\nCAT\nDOG\nCOT\n\"\"\") == \"COG\"\nassert solution(\"\"\"\n2\nCAT\nDOG\n\"\"\") == 0\nassert solution(\"\"\"\n4\nCAT\nDOG\nCAT\n\"\"\") == 3\nassert solution(\"\"\"\n3\nCAT\nDOG\nCAT\n\"\"\") == \"CAT\"\nassert solution(\"\"\"\n3\nCAT\nDOG\nCAT\n\"\"\") == -1\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nCAT\nDOG\nCOT\n''') == 'COG'\nassert solution('''2\nCAT\nDOG\n''') == 0\nassert solution('''1\nCAT\n''') == -1"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\nCAT\nDOG\n''') == 'COG'\nassert solution('''\n3\nCAT\nDOG\nCOT\n''') == 'COG'\nassert solution('''\n2\nCAT\nDOG\nCOT\n''') == 'COT'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"COG\"\nassert solution(\"1\") == \"CAT\"\nassert solution(\"1\") == \"0\"\nassert solution(\"6\") == \"CAT\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '9'\nassert solution('10 1') == '10'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1\") == \"9\"\nassert solution(\"3 3\") == \"6\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 1') == '9'\nassert solution('4 3') == '6'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 1\n1 1 2 3 4\n''') == '5'\nassert solution('''\n3 3\n1 1 2\n''') == '6'\nassert solution('''\n10 1\n''') == '9'\nassert solution('''\n4 3\n1 1 2\n1 1 2\n1 1 2\n''') == '6'\nassert solution('''\n9 1\n1 1 2 3 4 5 6 7 8\n''') == '9'\n''')\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n') == '1'\nassert solution('1 1 1\\n') == '2'\nassert solution('1 1 1 1 1 1 1 1\\n') == '2'\nassert solution('1 1 1 1 1 1 1 1\\n') == '1'\nassert solution('1 1 1 1 1 1 1 1\\n') == '0'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 1') == '9'\nassert solution('4 3') == '6'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10''') == '3'\n\nassert solution('''10 10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10''') == '6'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n4\n1\n''') == '8'\nassert solution('''\n2\n1\n''') == '7'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '6'\nassert solution('2 3') == '1'\nassert solution('5 2') == '0'\nassert solution('1 2') == '1'\nassert solution('1000 1000') == '1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    5 5\n   .V.\n   ./.V.\n   ..#..\n   .V.#.\n   .V./\n''') == \"3\"\nassert solution('''\n    2 5\n    V...\n    H...V\n''') == \"-1\"\n''')\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5\\nV...\\nH...V') == \"3\"\nprint(solution('''6 5\n....\\\n...V.\n....\n....\n....\n....'''))\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./\") == \"3\"\nassert solution(\"2 5\\nV...\\nH...V\\n\") == \"-1\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    5 5\n   .V.\n   ./.V.\n   ..#..\n   .V.#.\n   .V./\n    ''') == '3'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\\\n5 5\n.#..\\\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '3'\nassert solution('2 5') == '-1'"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./') == '3'\nassert solution('2 5\\nV...\\nH...V') == '-1'\nassert solution('5 5\\nV...\\nH...V\\n..#..\\n.V.#.\\n.V./') == '4'"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n...\n...\n...''') == '1'\nassert solution('''4 4\n...\n...\n...\n...''') == '4'\nassert solution('''5 5\n...\n...\n...\n...\n...''') == '3'\nassert solution('''5 5\n...\n...\n...\n...\n...''') == '2'\nassert solution('''5 5\n...\n...\n...\n...\n...''') == '0'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\nV...\\nH...V\") == \"3\"\nassert solution(\"4 4\\n.#.\\n.V..\\n..V.\\n..V.\\n#.#\") == \"2\""
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '3'\nassert solution('2 5') == '-1'"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == 'The quick brown fox jumps ove'\nassert solution('4') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n\"\"\") == \"AMBIGUOUS\"\nassert solution(\"\"\"\nn fox jumps ove\nuick brown f\nThe quick brown fox jumps over the lazy dog\n\"\"\") == \"AMBIGUOUS\"\nassert solution(\"\"\"\nn fox jumps ove\nuick brown f\nThe quick brown fox jumps over the lazy dog\n\"\"\") == \"AMBIGUOUS\"\nassert solution(\"\"\"\nn fox jumps ove\nuick brown f\nThe quick brown fox jumps over the lazy dog\n\"\"\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == 'AMBIGUOUS'\n'''"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\ncat dog cat\\ncat dog\\ncat dog\\ncat dog') == \"AMBIGUOUS\"\nassert solution('8\\nThe quick brown fox jumps over the lazy dog.\\nfox fox fox fox fox fox\\nfox fox fox fox fox fox\\nfox fox fox fox fox fox\\nfox fox fox fox fox fox') == \"AMBIGUOUS\"\nassert solution('14\\nThe quick brown fox jumps over the lazy dog.\\nfox fox fox fox fox fox fox\\nfox fox fox fox fox fox fox\\nfox fox fox fox fox fox fox\\nfox fox fox fox fox fox fox\\nfox fox fox fox fox fox fox\\nfox fox fox fox fox fox fox fox\\nfox fox fox fox fox fox fox fox\\nfox fox fox fox fox fox fox fox') == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n\"\"\") == \"AMBIGUOUS\"\n\nassert solution(\n\"\"\"\n7\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n\"\"\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n''') == \"AMBIGUOUS\"\nassert solution('''\n''') == \"AMBIGUOUS\"\nassert solution('''\n''') == \"AMBIGUOUS\"\nassert solution('''\n''') == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n\"\"\") == \"AMBIGUOUS\"\nassert solution(\"\"\"\n7\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n\"\"\") == \"The quick brown fox jumps over the lazy dog.\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\n') == 'AMBIGUOUS'\nassert solution('4\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"fox jumps\nove\nuick brown\nf\ny dog.\nrown fox\nmps over the l\nthe lazy dog\"\"\"\n) == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\n\"\"\"a b c\na c\nb c\na b\na\nb\nc\na\nb\nc\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na c\nb c\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc\na b\na c\nb c\na b\na c\nb c\na b\na\nb\nc"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '--+0-'"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\", \"First Test Case\"\nassert solution(\"5 5\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"impossible\", \"Second Test Case\""
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\") == \"+-0\"\nassert solution(\"5 3\") == \"--+-0+\"\nassert solution(\"4 6\") == \"--+0--\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"--+0-\", \"1st example test case\"\nassert solution(\"3 2\") == \"0+-\", \"2nd example test case\"\nassert solution(\"6 5\") == \"--+0-\", \"3rd example test case\""
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"--+0-\"\n\nassert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"0+--\"\n\nassert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"0+--\"\n\nassert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"--+-\"\n\nassert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"--+-\""
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '--+0-'\nassert solution('3 2') == '0+-'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"--+0-\", 'First Test'\nassert solution(\"3 2\") == \"0+-\", 'Second Test'"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '--+0-'\nassert solution('''\n3 2\n1 2 1\n-2 0 2\n''') == '0+-'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5, 6]) == '--+0-'\nassert solution([3, 2]) == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 6\\n-2 -2 3') == '--+0-'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n1 1\n1 1\n1\n1 1 1\n2 2 2\n''') == '1'\nassert solution('''\n3 3\n1 1\n2 2\n2 2\n''') == '4'\nassert solution('''\n4 4\n1 1\n2 2\n2 2\n3 2\n''') == '8'\n'''\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1', \"Second\"\nassert solution('1 2') == '0', \"First\"\nassert solution('1 1') == '0', \"First\"\nassert solution('1 1 1') == '2', \"First\"\nassert solution('1 1 1 1') == '0', \"First\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n1 1\n1 1\n1\n1 1 1\n2 2 2\n''') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 1\n1 1\n1\n1 1 1\n2 2 2\n''') == '4'\nassert solution('''\n5 2\n1 1\n2 2\n2 2\n1 1 1\n2 2 2\n''') == '4'\nassert solution('''\n5 2\n1 1\n2 2\n2 2\n1 1 1\n2 2 2\n''') == '5'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '2'\nassert solution('2 1') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\nWRRR\\nWRRR\\nWBBBB\\n') == 'YES'\nassert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n''') == \"YES\"\nprint(solution('''3 4\nWWRR\nWRRR\nWRRR\n'''))"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"YES\"\nassert solution(\"3 4\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == \"YES\"\nassert solution(s1) == \"NO\"\nassert solution(s2) == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n''') == 'YES'\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\n''') == 'NO'\nassert solution('''3 3\nRRR\nBBR\n''') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\nRRR\nGGG\n''') == 'NO'\n\nassert solution('''1 2\nWWW\n''') == 'YES'\n\nassert solution('''1 3\nWWW\n''') == 'YES'\n\nassert solution('''2 2\nWWWW\nWWWW\n''') == 'NO'\n\nassert solution('''1 3\nRRR\nGGG\n''') == 'YES'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"YES\"\nassert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n''') == 'YES'\nassert solution('''\n3 4\nWWRR\nWRRR\nWRRR\n''') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"4 3\\nWRRR\\nWRRR\\nWRRR\\nWBBBB\") == \"NO\"\nassert solution(\"2 3\\nWRRR\\nWWRR\\n\") == \"NO\"\nassert solution(\"5 1\\nWRRRG\\nWBBBB\") == \"NO\"\nassert solution(\"5 3\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"NO\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    5 5 3\n    1\n    2\n    3\n    4\n    5\n''') == '3'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 5\n1\n2\n3\n3\n2\n1\n''') == \"1\"\nassert solution('''\n6 3 5\n1\n2\n3\n3\n2\n1\n''') == \"3\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 5\n1\n2\n3\n3\n2\n1''') == '1'\nassert solution('''6 3 5\n1\n2\n3\n3\n2\n1\nSample Output 3:\n3''') == '3'"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3 5\n1\n2\n3\n3\n2\n1\n''') == '1'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('6 3 5') == '3'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3 5\\n') == '3'\nassert solution('10 1 10\\n') == '1'\nassert solution('8 1 1\\n') == '1'\nassert solution('10 2 9\\n') == '1'"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"6 3 5\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"1\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 5') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('6 3 5') == '3'\nassert solution('4 3 5') == '3'\nassert solution('8 3 5') == '2'\nassert solution('5 3 5') == '3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n2') == '2 3'\nprint(solution(input()))"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n3\n2\n1\n''') == '3 2'\nassert solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\nassert solution('''\n7\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n''') == '7 4'"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3 2\"\nassert solution(\"4\") == \"4 2\"\nassert solution(\"7\") == \"12 3\"\nassert solution(\"1 1\") == \"1 1\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3 2'\nassert solution('5') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '0 2'\nassert solution('5\\n') == '12 3'"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0 2\\n1 2\\n3 3\\n') == '3 2'\nassert solution('5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n0 2') == '3 2'\nassert solution('5\\n0 2\\n1 3\\n3 3') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n0 1\n1 1\n1 1\n''') == '1 2'\n\nassert solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"12 3\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0\n0\n3\n''') == '100'\nassert solution('''\n2\n1\n0\n0\n3\n''') == '000'\nassert solution('''\n1\n1\n1\n1\n0\n1\n''') == '01'"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == \"100\"\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == \"1001\"\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == \"0010\"\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == \"100\"\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == \"001\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '100'\nassert solution('2') == '00'\nassert solution('0') == '00'\nassert solution('1') == '01'\nassert solution('1 1') == '001'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n0\n0\n3\n\"\"\") == \"100\"\nassert solution(\"\"\"\n2\n1\n0\n3\n\"\"\") == \"001\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '100'\nassert solution('4') == '1001'\nassert solution('5') == '10000'\nassert solution('6') == '101010'\nassert solution('7') == '11111111'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0100'"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '100'\nassert solution('2') == '000'\nassert solution('3') == '0101'\n\n'''\nfrom collections import defaultdict\n\nn = int(input())\nborders = defaultdict(int)\nfor i in range(n):\n    lines = input()\n    if lines!= '0':\n        lines = lines.split()\n        for j in range(len(lines)):\n            if lines[j]!= '0':\n                if borders[(i, j)]!= 1:\n                    borders[(i, j)] = 1\n    else:\n        borders[(i, 0)] = 1\n    \nborders = dict(sorted(borders.items()))\n    \nfor key, value in borders.items():\n    if value == 0:\n        continue\n    else:\n        for i in range(1, n+1):\n            if i!= key[0]:\n                if key[1] == 0:\n                    continue\n                else:\n                    borders[(i, key[1]-1)] = 0\n        for i in range(1, n+1):\n            if i!= key[0]:\n                if key[1] == 0:\n                    continue\n                else:\n                    borders[(i, key[1]+1)] = 0\n\nsolutions = []\nfor key, value in borders.items():\n    if value == 1:\n        solutions.append(key)\n    else:\n        continue\n\nsolutions.sort(key=lambda x: (x[0], x[1]))\n\nprint(*solutions, sep='\\n')"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1\n0\n0\n3\n''') == \"100\"\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\nSample Output 3:\n''') == \"1001\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1\n0\n0\n3\n''') == '100'\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == '0010'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 1') == '3'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n1 2\n2 3''') == '2'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5''') == '3'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1\\n1 2') == '2'\nassert solution('3 1\\n1 2\\n2 3') == '3'\nassert solution('4 1\\n1 3\\n4 6\\n7 8\\n2 5') == '4'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"1 1\\n2 3\") == \"2\"\nassert solution(\"2 2\\n2 2\") == \"2\"\nassert solution(\"1 2\\n3 4\") == \"3\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1\\n1 2\\n2 3\\n2 3\\n') == '2'\nassert solution('4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n') == '3'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 100') == '100'\nassert solution('100 1') == '100'\nassert solution('100 1000') == '1000'\nassert solution('100 100') == '100'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 1') == '2'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 1\n1 2\n2 3\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 1\n1 3\n4 6\n7 8\n2 5\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 1') == '3'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_one) == '90.00000000'\nassert solution(example_input_two) == '126.86989765'"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '126.86989765'\nprint(solution(input))"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 450') == '126.86989765'\nassert solution('4 10 5') == 'Impossible'\nassert solution('5 10 5') == 'Impossible'\nassert solution('5 6 500') == '90.00000000'"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\"\nassert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"Impossible\"\nassert solution(\"1 2\\n4 5\") == \"Impossible\"\nassert solution(\"3 4\\n5 3\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2\\n5 2\\n4 2\\n3 2"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.86989765'\nprint('all tests passed')"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.86989765'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == 'Impossible'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == \"90.00000000\"\nassert solution('''5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == \"126.86989765\"\nprint('Tests passed')"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 6 500\"\n    \"0 0\"\n    \"0 100\"\n    \"100 100\"\n    \"100 0\"\n    \"1 2\"\n    \"1 3\"\n    \"2 3\"\n    \"3 4\"\n    \"3 5\"\n    \"4 5\"\n) == \"90.00000000\"\nassert solution(\n    \"5 6 500\"\n    \"0 0\"\n    \"0 100\"\n    \"100 100\"\n    \"100 0\"\n    \"1 2\"\n    \"1 3\"\n    \"2 3\"\n    \"3 4\"\n    \"3 5\"\n    \"4 5\"\n    \"2 6\"\n    \"4 6\"\n) == \"76.81818181818183\"\nassert solution(\n    \"10 9 25\"\n    \"0 0\"\n    \"0 -100\"\n    \"100 0\"\n    \"100 -100\"\n    \"100 100\"\n    \"100 -100\"\n    \"0 100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"-100 -100\"\n    \"100 100\"\n    \"100 -100\"\n    \"100 100\"\n    \"0 100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 100\"\n    \"0 100\"\n    \"0 100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0 -100\"\n    \"0"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 6 500\") == \"90.00000000\"\nassert solution(\"3 6 450\") == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6 500\") == \"90.00000000\"\nassert solution(\"5 6 450\") == \"126.86989765\"\nassert solution(\"10 10 20\") == \"Impossible\""
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''37\n30014\nSample Output 2:\n7\n85 29929\n88 29926\n785 29229\n788 29226\n7785 22229\n7788 22226\n7789 22225\n''') == '7'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\nassert solution('5') == '1'\n\"\"\""
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4'"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\n\"\"\"\n\nimport math\n\ninput = input()\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '7'\n\n\"\"\""
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"7\"\nassert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"0\"\n\nsolution(\"7\")"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"25\") == \"5 8\"\nassert solution(\"35\") == \"10 20\"\nassert solution(\"6\") == \"3\"\nassert solution(\"37\") == \"5 8\"\nassert solution(\"37356789\") == \"341913 92\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3 1\n3\n4 1\n1''') == '3.5'\n\nassert solution('''3 3 2\n3\n3 2\n2''') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3 1\n''') == '3.5'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3.5\"\nassert solution(\"1 3\") == \"4.0\"\nassert solution(\"2 2\") == \"3.0\"\nassert solution(\"2 3\") == \"2.0\""
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n\"\"\"\nn, d, r = map(int, stdin.strip().split(' '))\nimport math\nprint(math.ceil(n*(d/n+1-d/n/math.pow(n, r))/(n*(d/n-1)-n*(d/n/math.pow(n, r))))/n)"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\nprint('Everything passed')\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\nassert solution('3 8 2 6') == '17'\nassert solution('12 8 2 3') == '4'"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    1 5 1 5\n    ''') == '19'\nassert solution('''\n    12 12 1 12\n    ''') == '4'\n\"\"\"\n--- Day 5: Binary Boarding ---\nYou board your plane only to discover a new problem: you dropped your boarding pass! You aren't sure which seat is yours, and all of the flight attendants are busy with the flood of people that suddenly made it through passport control.\n\nYou write a quick program to use your phone's camera to scan all of the nearby boarding passes (your puzzle input); perhaps you can find your seat through process of elimination.\n\nInstead of zones or groups, this airline uses binary space partitioning to seat people. A seat might be specified like FBFBBFFRLR, where F means \"front\", B means \"back\", L means \"left\", and R means \"right\".\n\nThe first 7 characters will either be F or B; these specify exactly one of the 128 rows on the plane (numbered 0 through 127). Each letter tells you which half of a region the given seat is in. Start with the whole list of rows; the first letter indicates whether the seat is in the front (0 through 63) or the back (64 through 127). The next letter indicates which half of that region the seat is in, and so on until you're left with exactly one row.\n\nThe last 3 characters will be a seat ID: this is the lowest unused seat ID in each row. Again, the first character indicates whether the seat is in the front (L) or the back (R), the next indicates which half of that region the seat is in, and so on until you're left with exactly one row.\n\nFor example, consider just the first seven characters of FBFBBFFRLR:\n\nStart by considering the whole range, rows 0 through 127.\nF means to take the lower half, keeping rows 0 through 63.\nB means to take the upper half, keeping rows 32 through 63.\nF means to take the lower half, keeping rows 32 through 47.\nB means to take the upper half, keeping rows 40 through 47.\nB keeps rows 44 through 47.\nF keeps rows 44 through 45.\nThe final F keeps the lower of the two, row 44.\nThe last three characters will be a seat ID: 44 is the lowest unused seat ID in the bottom row, so it sits in the last seat on that row.\n\nThe next puzzle input will be the five consecutive seats in your list from your seat ID number:\n\nBFFFBBFRRR: row 70, column 7, seat ID 567.\nFFFBBBFRRR: row 14, column 7, seat ID 119.\nBBFFBBFRLL: row 102, column 4, seat ID 820.\nAs a sanity check, look through your list of boarding passes. What is the highest seat ID on a boarding pass?\n\n--- Part Two ---\nDing! The final boarding pass you scanned is a completely mangled one: something has gone wrong.\n\nSomething has gone wrong with the automatic passport scanners at the airport.\nInstead of identifying each seat position by a single number, they have instead used a checksum to identify specific ranges of seats in each flight.\n\nUsing the one-dimensional numerical representation of these seats, you can work out the checksum. For each flight, count the number of times the checksum is a substring of the numbers in that flight, and then multiply those counts together to compute the checksum for that flight.\n\nFor example, consider just the first seven characters of BBFFBBFRRR:\n\nStart by considering the whole range, rows 0 through 127.\nR means to take the upper half, keeping rows 32 through 47.\nB means to take the lower half, keeping rows 0 through 31.\nBB means to take both halves, keeping rows 16 through 47.\nFF means to take the lower half, keeping rows 0 through 15.\nBBF means to take the first quarter, keeping rows 4 through 15.\nBFF means to take the second quarter, keeping rows 32 through 45.\nFFF means to take the lower quarter, keeping rows 16 through 47.\n\nIn this example, the only valid range is the first one: every seat is in the top range.\n\nBBFFBBFRLL: bottom range, entire range\nFFFBBBFRRR: bottom range, entire range\nBBFBBFBRRR: bottom range, entire range\nBFFFBBFRRL: bottom range, entire range\nBFFBBFFLRL: bottom range, entire range\nBBFFBBFRLL: bottom range, entire range\nBFBFFBFLRR: bottom range, entire range\nBFBFBFFRLR: bottom range, entire range\nBFFBBBFRRL: top range, entire range\nBFFFBBBRRR: top range, entire range\nFFBBFFBRRR: top range, entire range\n\nThe top range consists of the numbers 1 through 9 and the bottom range consists of the numbers 1 through 7.\n\nAs a checksum example, the bottom range is checksumable because either 1, 2, or 4 can be used for the leading zeros; the top range is not checksumable because no number can begin with leading zeros.\n\nSolve the puzzle by replacing the missing checksum digit in each boarding pass. You have 60 seconds to do this.\n\"\"\"\n\nfrom util import *\nimport re\nfrom itertools import *\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 5 1 5\n''') == '19'\nassert solution('''\n12 12 1 12\n''') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    1 5 1 5\n    \"\"\") == \"19\"\nassert solution(\"\"\"\n    12 12 1 12\n    \"\"\") == \"4\"\n\"\"\"\n    \n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"1 20\") == \"1\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 12') == '1 12'\nprint(solution(input()))\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 5\n4''') == '4'\nassert solution('''1 1\n2''') == '2'\nassert solution('''1 2\n2''') == '2'\nassert solution('''1 3\n3''') == '3'\nassert solution('''1 4\n4''') == '3'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4'\n\nassert solution('1 5') == '4'\n\nassert solution('1 12') == '4'\n\nprint(solution())"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"10 10\") == \"11\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\nassert solution('carocar') == '1'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4'"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\nassert solution('a') == '1'\nassert solution('e') == '1'\nassert solution('i') == '1'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\n\"\"\""
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''car\ncocar\ncat\ndog\n''') == '2'\nassert solution('''cat\ncocat\ncat\ndog\n''') == '3'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\n\nstdin = read_input()\nprint_output(solution(stdin))\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\n\n[*] letters = \"abcdefghijklmnopqrstuvwxyz\"\n[*] vowels = \"aeiou\"\n\n[*] consonants = letters.split(\"\")\n[*] vowels = letters.split(\"\")\n\n[*] map(int, input().split())\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n0 2 0 1\n''') == '8'\nassert solution('''\n5\n1000000 1 1 1 1\n''') == '0'"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1000000 1 1 1 1') == '0'\nassert solution('10\\n' + ''.join(map(str, range(1, 101)))) == '17'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 1 1\n''') == '8'\nassert solution('''\n4\n0 2 0 1\n''') == '8'\nassert solution('''\n5\n1000000 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1000000 1 1 1 1\n''') == '0'\n\nassert solution('''6\n1000000 1 1 1 1 1\n''') == '1000000000'\n\nassert solution('''10\n1000000 1 1 1 1 1 1 1 1 1 1 1\n''') == '0'\n\nassert solution('''100\n1000000 1 1 1 1 1 1 1 1 1 1 1\n''') == '1000000000'\n\nprint('All Tests Passed')\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''4\n0 2 0 1\n''') == '8'\nassert solution(\n'''5\n1000000 1 1 1 1\n''') == '0'"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '8'\nassert solution('5') == '0'\nprint(solution(*map(int, input().split())))\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1000000 1 1 1 1\n''') == '0'"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n1') == '8'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n0 2 0 1\n''') == '8'\nassert solution('''5\n1000000 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'a'\nassert solution('2 2') == 'ab'\nassert solution('3 3') == 'abab'\nassert solution('4 4') == 'ababab'\nassert solution('5 5') == 'ababababa'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n3 1 2 3\n''') == 'zyz'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n\ninput_str = input()\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'zyz'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-\""
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 10 0\n10 0 1\n12 8 1\n''') == '4'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution(input_string=\"3\\n0 3 2\\n0 1 1\\n1 0 1\\n1 2 2\\n2 2 1\\n2 1 1\\n2 0 1\\n2 1 1\") == '2'\nprint(solution.__doc__)\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '4'\nassert solution('10') == '8'"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '4'\nassert solution('10') == '8'\n\n'''\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nassert solution('''\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n10\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n') == '4'\nassert solution('4\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n') == '4'\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 2') == '0'\nassert solution('3 5 7 9 11') == '1'\nassert solution('-1') == '-1'\nassert solution('10') == '10'\nassert solution('9') == '9'\nprint('All tests passed')"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 3') == '0'\nassert solution('3 5 2') == '1'\nprint(solution('''\n3 5 2\n1 4 7 9 11\n2 3\n'''))\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('3 5 2') == '2'\nassert solution('3 5 2 4 7 9 11') == '1'\nprint('All tests passed.')\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '-1'\nassert solution('2 4 3') == '0'\nassert solution('3 5 2') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 3') == '0'\nassert solution('3 5 2') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 3') == '0'\nassert solution('3 5 2') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 3 1') == '-1'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4 2\n3 4 5 7\n1 2 10\n''') == '0'\nassert solution('''\n5 4 2\n2 3\n1 4 7 9 11\n''') == '1'\nprint('All test cases passed.')"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\n\"\"\""
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 4 3\n3 4 5 7\n1 2 10\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 5 2\n1 4 7 9 11\n2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 2') == '1'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\nassert solution('1 1') == '3'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 3\n3 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 2\n3 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n1 1\n3 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n0 3\n1 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n0 2\n3 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\"\nassert solution(\"1 2\\n3 4\") == \"3\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"2\""
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n3 2\n''') == '1'\n\nassert solution('''\n1 2\n3 4\n''') == '3'\n\nassert solution('''\n10 10\n10 10\n''') == '2'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '2'\nassert solution('1 2') == '1'\nassert solution('3 4') == '3'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2 3'\n    ) == '1'\nassert solution(\n    '1 2'\n    ) == '2 1'\nassert solution(\n    '2 2'\n    ) == '0'\nassert solution(\n    '1 2'\n    ) == '-1 1'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2') == '2'"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 3\"\n) == \"1\"\n\nassert solution(\n    \"1 2\"\n) == \"3\"\n\nassert solution(\n    \"1 1\"\n) == \"2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\nIVO\nJASNA\nJOSIPA\n''') == '4'\nassert solution('''5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA\n''') == '24'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"1\") == \"2\""
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\nIVO\nJASNA\nJOSIPA\n''') == '4'\n\nassert solution('''\n5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA\n''') == '24'\n\nprint('All test cases passed.')"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '24'\nprint(solution(input()))"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nIVO\\nJASNA\\nJOSIPA\\n') == '4', \"3\"\nassert solution('5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n') == '24', \"5\""
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n    IVO\n    JASNA\n    JOSIPA\n    ''') == '1'\n    assert solution('''5\n    MARICA\n    MARTA\n    MATO\n    MARA\n    MARTINA\n    ''') == '25'\n    assert solution('''2\n    HARRY\n    SALLY\n    ''') == '0'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"4\""
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '39'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"39\"\nassert solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == \"39\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39'\nprint('Solution:')\nprint(solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n'''))\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"39\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3', 'First'\nassert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39', 'Second'"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '39'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2 3 4 1\n3 4 5 1\n1 9 4 7''') == '39'\nassert solution('''3\n2 2 3 1\n3 1 5 6\n1 9 4 7''') == '39'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('1 2 3 1') == '1'\nassert solution('2 3 4 1') == '3'\nassert solution('3 4 5 1') == '4'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('2 2 3 1') == '3'\nassert solution('3 2 3 1') == '39'\nassert solution('1 2 3 1') == '3'\nassert solution('1 2 3 1') == '3'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5.2696518641'\nassert solution('1') == '9'\nassert solution('a') == 'a'\n'''"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 2 5\n1 5 2\n3 5 5\n3 1 2\n''') == '5.2696518641'\nprint(solution('''\n1\n8 9 3\n1 5 2\n3 5 5\n3 1 2\n'''))\nassert solution('''\n2\n8 9 4\n2 3 2\n1 3 1\n''') == '2.8686546875'\nprint(solution('''\n1\n8 9 4\n1 5 2\n'''))\n'''\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '5.2696518641'\nassert solution('1') == '9'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\nassert solution(\n'''\n1\n8 9 3 -14 -14 14 -14 0 20\n''') == '9'\n'''\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"5.2696518641\"\nassert solution(\"1\") == \"9\"\nassert solution(\"100\") == \"101.137065789473684\"\nassert solution(\"-10\") == \"-9.794848732984138\"\nassert solution(\"100000\") == \"99999.9\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n') == '5.2696518641'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '5.2696518641'\nassert solution('1') == '9'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n8 9 3 -14 -14 14 -14 0 20\\n') == '9.0'\nassert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n') == '5.2696518641'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n\"\"\") == \"5.2696518641\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n8 9 3 -14 -14 14 -14 0 20') == '9'\nassert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3') == '5.2696518641'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 1') == '1'\nassert solution('3\\n4 1 1') == '8'\nassert solution('3\\n5 2 3') == '4'\nassert solution('3\\n5 0 3') == '24'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"8\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '8'\nassert solution('5') == '4'\nassert solution('6') == '24'\nassert solution('7') == '-1'"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3\\n'\n    '1 1 1\\n'\n    '2 0 2\\n'\n    '3 1 1\\n') == '1\\n'\nassert solution(\n    '3\\n'\n    '4 1 1\\n'\n    '5 2 3\\n'\n    '5 0 3\\n') == '8\\n'\nassert solution(\n    '3\\n'\n    '5 1 1\\n'\n    '5 2 3\\n'\n    '5 0 3\\n') == '24\\n'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1 1 1\") == 1\nassert solution(\"2 0 2\") == 8\nassert solution(\"3 1 1\") == 4\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '1'\nassert solution('2 0 2') == '8'\nassert solution('3 1 1') == '4'\nassert solution('4 1 1') == '4'\nassert solution('5 0 3') == '24'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"24\""
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 1 1\n2 0 2\n3 1 1\n''') == '1'\nassert solution('''\n3\n4 1 1\n5 2 3\n5 0 3\n''') == '8'\nassert solution('''\n3\n1 1 1\n2 0 2\n3 1 1\n''') == '4'\nassert solution('''\n3\n4 1 1\n5 2 3\n5 0 3\n''') == '24'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1 1 1\n2 0 2\n3 1 1\n''') == '1'\nassert solution('''\n3\n4 1 1\n5 2 3\n5 0 3\n''') == '4'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 1 1\n2 0 2\n3 1 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n4 1 1\n5 2 3\n5 0 3\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2'\nassert solution('4 5') == '5'\nassert solution('4 6') == '0'\nassert solution('6 6') == '240'\nassert solution('6 7') == '48'\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 2\"\n) == \"3\"\nassert solution(\n    \"6 6\"\n) == \"240\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '3'\nassert solution('10 5') == '240'\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\"\nassert solution(\"4 4\") == \"0\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n''') == '3'\nassert solution('''\n6 6\n''') == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n''') == '4'\n\nassert solution('''\n8 8\n''') == '96'"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\"\nprint(solution(input))\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5,5,6]) == \"240\"\nassert solution([3,5,7,7,7]) == \"16\"\nassert solution([7,7,8,8,8]) == \"0\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nassert solution('Z=11+22=33') == '1+2+3=6'"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''SEND+MORE=MONEY''') == '9567+1085=10652'\nassert solution('''A+A=A''') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('C+B=A') == '2+1=3'\nprint('all tests passed')\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652', \"Wrong Answer\"\nassert solution('A+A=A') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652', 'First Sample'\nassert solution('A+A=A') == 'impossible', 'Second Sample'"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 'impossible'\n\nassert solution('') == 'impossible'\n\nassert solution('A+A=A') == 'impossible'\n\nassert solution('C+B=A') == '2+1=3'\n\nassert solution('A+A=A') == 'impossible'"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 1 2 3\n''') == '14'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 1 2 3\n''') == '14'\n\nassert solution('''\n1 1 2 1 1\n''') == '1'\n\nassert solution('''\n1 2 3 1\n''') == '2'\n\nassert solution('''\n3 1 1 1\n''') == '0'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n0 1 2 3') == '14'\nassert solution('5\\n1 1 2 1 1') == '1'\n\nassert solution('''\n2\n0 1\n3\n0 2\n''') == '2'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n0 1 2\nSample Input 3:\n4\n0 1 2 3\nSample Output 3:\n14\n''') == '14'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 2 1 1\") == \"1\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n0 1 2 3') == '14'\nassert solution('5\\n1 1 2 1 1') == '1'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"14\"\nassert solution(\"5\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"14\"\nassert solution(\"5\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n0 1 2 3\n''') == '14'\nassert solution('''5\n1 1 2 1 1\n''') == '1'\nprint('Tests passed')"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '0'"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n''') == '88'\nassert solution('''\n3 3\n3 0 0\n0 0 0\n''') == '-1'"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"88\"\nassert solution(\"4 4\") == \"-1\"\nassert solution(\"4 4\") == \"-1\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '88'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == \"88\"\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == \"-1\"\nprint('PASSED')"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == '88'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == '-1'"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2 3\\n0 0 5 6\\n0 4 7 8') == '88'\nprint(solution('''1 4\n7 6 5 2\n1 5 3 4\n5 3 1 5\n5 4 1 4\n4 2 5 3\n4 5 3 1\n4 5 1 2\n5 4 1 3\n6 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n6 5 1 2\n5 4 1 3\n4 5 3 4\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 1 3\n4 5 1 2\n4 5 1 3\n5 4 3 4\n6 5 1 2\n5 4 1 3\n5 4 3 4\n6 5 1 2\n4 5 1 3\n4 5 3 4\n4 5 1 2\n5 4 1 3\n4 5 1 3\n6 5 1 2\n5 4 1 3\n6 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n4 5 1 3\n4 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n4 5 3 4\n6 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n6 5 1 2\n5 4 1 3\n5 4 3 4\n5 4 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n6 5 1 2\n5 4 1 3\n5 4 3 4\n6 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 3 4\n5 5 3 4\n4 5 1 2\n4 5 1 3\n4 5 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n6 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n6 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n5 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n5 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n5 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n5 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n5 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n5 5 1 2\n5 5 1 3\n4 5 3 4\n5 5 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3\n5 4 3 4\n4 5 1 2\n5 4 1 3"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(open(\"test_solution.txt\", \"r\").read()) == \"88\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == '88'\nassert solution('6 6\\n1 2 3 4 5 6\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n0 0 0 0 0 0') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '88', 'First'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1', 'Second'\nprint('All Tests Passed!')\n'''\n'''\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '88'\n\nassert solution('''\n5 5\n1 2 3 4 0\n5 6 7 8 9\n10 11 12 13 14\n15 16 17 18 19\n20 21 22 23 24\n''') == '-1'\n\nassert solution('''\n10 10\n2 4 5 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 1\n1 1\n''') == '0.000'\nassert solution('''\n2\n1 99999\n99999 99999\n''') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n9999 99999\\n\") == \"9999700002.000\"\n\"\"\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 99999') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n1 1\n''') == '0.000'\n\nassert solution('''\n5\n1 1\n2 2\n3 3\n4 4\n5 5\n''') == '4.000'\n\nassert solution('''\n5\n1 99999\n9999 99999\n2 99999\n3 99999\n4 99999\n5 99999\n''') == '9999700002.000'\n\nassert solution('''\n5\n999999999999 999\n999999999999 999\n999999999999 999\n999999999999 999\n999999999999 999\n999999999999 999\n''') == '999999999999999.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0.000'\nassert solution('1 99999') == '9999700002.000'\nassert solution('2 1') == '2.000'\nassert solution('2 99999') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == '9999700002.000'\nassert solution('''10\n1 1000000\n2 1000000\n3 1000000\n4 1000000\n5 1000000\n6 1000000\n7 1000000\n8 1000000\n9 1000000\n10 1000000''') == '9999999999.999'\nassert solution('''7\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8''') == '999999999.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0.000'\nassert solution('1') == '0.000'\nassert solution('2') == '0.000'"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0.000'\nassert solution('3') == '9999700002.000'\nassert solution('4') == '3.0'\nassert solution('10') == '5.0'\n\n'''\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 1') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0.000'\nassert solution('1 99999') == '9999700002.000'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == '3'\nassert solution('''\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\nSample Output 2:\n3\n''') == '3'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\") == \"3\"\nassert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\") == \"Impossible\"\nassert solution(\"10 11\\n11 10\\n10 11\\n11 10\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n11 10\\n11 10\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n11 11\\n11 11\\n11 10\\n11 10\\n10 11\\n10 11\\n11 10\\n11 10\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n11 10\\n11 10\\n11 11\\n11 11\\n11 10\\n11 10\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n11 11\\n11 11\\n11 10\\n11 10\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n\"\"\") == \"Infinity\"\nassert solution(\"\"\"\n5 8 1 2\n1 2 5\n1 3 2\n1 4 2\n2 3 4\n2\n1 4\n\"\"\") == \"Infinity\"\nassert solution(\"\"\"\n5 7 1 2\n1 3 1\n1 2 1\n1 2 1\n2 3 1\n2\n1 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5') == '3'\nassert solution('4 4 1 2\\n1 2 6\\n1 3 2\\n2 3 6\\n2 4 1\\n3 4 1\\n3 5 1\\n4 5 1\\n4 5 1') == 'Infinity'\nassert solution('2 7 2 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n3 4 1\\n4 5 1\\n5 6 1\\n5') == 'Infinity'\nassert solution('1 1 1\\n1 2\\n3 2\\n4 2\\n2\\n1 2\\n1 2\\n3 2\\n4 2\\n5 2\\n5') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5''') == \"3\"\nassert solution('''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\nSample Output 2:\nInfinity\n''') == \"Infinity\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\nassert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5 1 6') == '3'\nassert solution('3 4 1 2') == '3'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\n\nassert solution('''\n4 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\n\nassert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == '3'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"Infinity\"\nassert solution(\"4 6 1 5\") == \"4\"\nassert solution(\"3 4 1 2\") == \"3\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\") == \"Infinity\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"0\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"0\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"0\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '000'\nassert solution('6 1') == 'impossible'\nassert solution('3 1') == '000'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 1\n1\nSample Output 3:\nimpossible\n\nSample Input 4:\n4 3\n1\nSample Output 4:\n000\n001\n010\n011\nSample Output 5:\nimpossible\n''') == \"impossible\"\n\nassert solution('''20 1\n1\nSample Output 6:\n0\n1\n1\n0\n0\n1\n0\n1\n1\n0\n1\n0\n1\n1\n0\n1\n1\n0\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n0\n1\n1\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == 'impossible'\nassert solution('3\\n1') == '000'\nassert solution('6\\n1') == 'impossible'\nassert solution('6\\n3') == '000'\nassert solution('3\\n2') == '001'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1\n1\nSample Input 3:\n5 2\n1\nSample Output 3:\n000\n001\n011\n010\n110\n111\n101\n100\nSample Input 4:\n4 3\n1\n2\n3\n4\nSample Output 4:\n000\n001\n010\n011\nSample Input 5:\n6 1\n6\nSample Output 5:\nimpossible\n''') == 'impossible'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1\n1\n''') == 'impossible'\nassert solution('''6 1\n6\n''') == 'impossible'\nassert solution('''6 1\n1\n''') == 'impossible'\nassert solution('''6 1\n3\n''') == '000'\nassert solution('''6 1\n3\n''') == '000'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == 'impossible'\nassert solution('3 1') == '000'\nassert solution('4 1') == '000'\nassert solution('6 1') == '000'\nassert solution('7 1') == '000'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == 'impossible'\nassert solution('3 1') == '000 001 010 011 1001 1010 1101 1011 1110 1111'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"impossible\"\nassert solution(\"6 1\") == \"impossible\"\nassert solution(\"8 1\") == \"11100\"\nassert solution(\"10 1\") == \"10011\"\nassert solution(\"12 1\") == \"110100\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 1\") == \"impossible\"\nassert solution(\"3 1\") == \"000\"\nassert solution(\"10 1\") == \"111\"\nassert solution(\"7 1\") == \"10101\"\nassert solution(\"11 1\") == \"101010\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'impossible'\nassert solution('6 1') == 'impossible'\nassert solution('3 1') == '000'\nassert solution('4 1') == 'impossible'\nassert solution('5 1') == 'impossible'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('5') == '3'\nassert solution('0') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '2'\nassert solution('110') == '3'\nassert solution('1010') == '4'\nassert solution('99101') == '5'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\"\nassert solution(\"90\\n10\") == \"10\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"2\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\"\nassert solution(\"3\\n4\") == \"3\"\nassert solution(\"9\\n9\") == \"1\"\nassert solution(\"20\\n10\") == \"10\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\"\nprint(solution(input()))\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n77') == '1'\nassert solution('10\\n10') == '2'\nassert solution('10\\n10\\n5') == '1'\nassert solution('10\\n10\\n9') == '1'\nassert solution('10\\n10\\n8') == '1'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '10'\n    '99'\n) == '1'\nassert solution(\n    '90'\n    '10'\n) == '10'\nassert solution(\n    '99999999999999'\n    '99999999999999'\n) == '1000000'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"90\\n10\") == \"10\"\nprint(solution(\"10\\n90\"))"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '3', '2 3 3', '4 1 10', '2 7 3') == '1'\nassert solution(\n    '4', '3 1 3 3', '5 8 7 10', '4 1 2 6') == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6''') == '1'\nprint('all tests passed')\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution([3, 3, 3]) == '1'\nassert solution([4, 1, 10]) == '2'\nassert solution([2, 7, 3]) == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n2 3 3\n4 1 10\n2 7 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n\"\"\") == \"1\"\n\nassert solution(\"\"\"3\n2 3 3\n4 1 10\n2 7 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('10') == '8'\nassert solution('20') == '5'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '5'\nassert solution('4 8') == '11'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '7'\nassert solution('9') == '5'\nassert solution('10') == '3'\nassert solution('11') == '4'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9 3') == '5'\nassert solution('6 1') == '7'\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '7'\nassert solution('1 5') == '11'\nassert solution('4 8') == '16'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 3') == '5'\nassert solution('6 1') == '7'\n\n'''"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('beginning') == '5'\nassert solution('velvet') == '7'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1\\nbeginning') == '5'\nassert solution('6 1\\nvelvet') == '7'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''beginning\n1 5\n4 8\n1 9\n''') == '11'\nassert solution('''\n2\nvelvet\n1 6\n''') == '7'\nassert solution('''\n5\nbeginning\n1 5\n4 8\n1 9\n3 6\n''') == '16'"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9 3\") == \"5\"\nassert solution(\"6 1\") == \"7\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '23'\nassert solution('1 2') == '2'\nassert solution('2 1') == '1'\nassert solution('3 4') == '2'"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 4\n3 1\n2 2\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 3\n1 1\n2 2\n1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 3\n1 1\n2 2\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 4\n1 1\n2 2\n4 1\n5 2\n6 1\n7 5\n8 5\n9 4\n10 1\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2 3') == '23'\nassert solution('3\\n1 23') == '23'\nassert solution('2\\n2 17') == '17'\nassert solution('2\\n2 17') == '17'"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n        '2 3\\n1 23\\n2 17'\n    ) == '23'\n\nassert solution(\n        '3 4\\n3 1\\n2 2\\n1 1'\n    ) == '2'\n\nassert solution(\n        '1 1\\n'\n    ) == '1'\n\nassert solution(\n        '2 3\\n1 23\\n2 17'\n    ) == '23'"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n1 23\n2 17''') == '23'\nassert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"23\"\nassert solution(\n\"\"\"\n2 4\n1 1\n2 2\n1 1\n\"\"\"\n) == \"23\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 4\n3 1\n2 2\n1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3 3\n1 1\n2 2\n3 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"23\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 4') == '4'\nassert solution('2 3') == '23'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1\n''') == '2'\nassert solution('''5 5\n5 8\n4 5\n7 3\n4 2\n1 6\n''') == '8'\nassert solution('''1 5\n2 1\n3 1\n4 1\n5 1\n''') == '1'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '0'\nassert solution('9') == '9.476048311178'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '0.0000000000'\nassert solution('6') == '9.476048311178'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0.0000000000'\nassert solution('6') == '9.47604831117'\n\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n2 2\\n0 2') == '0.0000000000'\nassert solution('3\\n4 3\\n0 1\\n0 0') == '1.0000000000'"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0.0000000000'\nassert solution('2 2') == '0.0000000000'\nassert solution('2 2 0 2') == '0.0000000000'\nassert solution('4') == '0.0000000000'\nassert solution('0 0') == '0.0000000000'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0.0000000000\"\nassert solution_2() == \"9.476048311178\"\n\"\"\"\nimport math\nimport sys\nfrom random import randint\n\nsys.setrecursionlimit(1000000)"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000'\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n\"\"\") == \"0.0000000000\"\nassert solution(\"\"\"\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n\"\"\") == \"9.476048311178\"\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(\n    \"2\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\")\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'\nassert solution('4\\n0 0\\n2 0\\n2 2\\n0 2') == '0.0000000000'"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == \"0.0\"\nassert solution('10') == \"0.01\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n''') == '8.0000000000'\nassert solution('''\n5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n''') == '0.0200000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0.3333333333\"\nassert solution(\"5\") == \"8.0000000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000'\nassert solution('1\\n2\\n') == '1.0'\nassert solution('10\\n11\\n12\\n') == '51.6666666666'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '8.0000000000'\nassert solution('5 1 1') == '10.0000000000'\nassert solution('5 -2 -2') == '16.0000000000'\nassert solution('5 0 0') == '10.0000000000'\nassert solution('5 0 -2') == '10.0000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"8.0000000000\"\nassert solution(\"4\") == \"10.0000000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2') == '8.0000000000'\nprint('PASSED')"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n0.0 0\\n-0.2 0\") == \"8.0000000000\"\nassert solution(\"1\\n0\\n1\") == \"1\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '8.0000000000'\nassert solution('10') == '1.0000000000'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n4 4 3\n1 1 9 9 1 6 6 39 9\n\"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n10 2 2\n1 1 1 1 1 2 2 2 2 2\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, (solution(input_string), output_string)"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n10 2 2\n1 1 1 1 1 2 2 2 2 2\n\"\"\") == \"2\"\nprint(solution(input()))"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 2') == '2'\nassert solution('10 10 10 10 10 10') == '1'\nassert solution('10 10 10 10 10 10 10 10 10 10 10') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n9 4 3\n1 1 9 9 1 6 6 39 9\n''') == '2'\n\nassert solution('''\n10 2 2\n1 1 1 1 1 2 2 2 2 2\n''') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 3') == '2'\nassert solution('10 2 2') == '2'\nassert solution('5 4 3') == '1'\nassert solution('2 4 2') == '0'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('9 4 3') == '2'\nassert solution('10 2 2') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9 4 3') == '2'\nassert solution('10 2 2') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 2 5\n1 1 2 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 5 4\n1 1 2 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n6 4 3\n1 1 1 1 1 1 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n7 8 6\n1 1 1 1 1 1 1 2 2 2 2 2 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 11 4\n10 10 10 10\n''') == '20.000000000'\nassert solution('''\n3 3 2\n1 2 3\n''') == '3.666666667'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3 2\n1 2 3\n''') == '3.666666667'\nassert solution('''4 11 4\n10 10 10 10\n''') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 2\\n3 2 3') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3.666666667\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1 4\n1 2\n3 4''') == '2.0'\n\nassert solution('''2 5 8\n1 2\n3 4\n5 6\n7 8''') == '5.3333333333333'\n\nassert solution('''3 2 1\n1 2\n3 4\n5 6\n7 8''') == '8.6666666666667'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3 2\n1 2 3\n''') == '3.666666667'\nassert solution('''4 11 4\n10 10 10 10\n''') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n2\n2\n\"\"\") == \"2.5\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\nassert solution('9 5 5 4') == '11.0000000000'"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 42\n''') == '2'\nassert solution('''\n5 123456789\n''') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 42\n''') == '2'\nassert solution('''\n5 123456789\n''') == '16317634'\n'''"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\nassert solution(\"3 23\") == \"23\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 42''') == '2'\nassert solution('''5 123456789''') == '16317634'''\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\nassert solution(\"9 9\") == \"0\"\nprint(\"all test cases passed\")\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"4\"\nassert solution(\"3 1 1 1 8 0\") == \"4\"\nassert solution(\"3 1 1 1 8 0 0\") == \"4\"\nassert solution(\"3 1 1 1 8 0 0 0\") == \"4\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\nassert solution('5 0 0 0 0 0 1 0 0 0 0') == '1'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"4\"\nassert solution(\"3 1 1 1 8 4\") == \"4\"\nassert solution(\"3 1 1 1 8 4 7\") == \"4\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1 0 0 2\n1 2 2\n1 1 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\n\nassert solution('''\n3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\n\nprint(\"You passed all the tests! Congratulations!\")\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"4\"\nassert solution(\"3 1 1 1 8 10\") == \"5\"\nassert solution(\"5 3 2 4 4\") == \"3\"\nassert solution(\"5 5 3 4 4\") == \"5\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\nassert solution('''5 1 10 10\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3'\nassert solution('''5 1 1\n4 6\n4 7\n7 9\n''') == '2'\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '2'\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1 10 10') == '3'\nassert solution('5 1 100 100') == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 10 10') == \"3\"\nassert solution('5 1 100 100') == \"3\"\nassert solution('5 1 100 100 100 100 100 100') == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\nassert solution('''5 1 10 10\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3'\nprint('All tests passed')\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 10 10') == '3', \"Should return the number of gem that we can collect on the track\"\nassert solution('8 8') == '2', \"Should return the maximum number of gem that we can collect on the track\"\nassert solution('5 1') == '1', \"Should return the maximum number of gem that we can collect on the track\"\nassert solution('5 2') == '0', \"Should return 0\""
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABC') == '2'\nassert solution('ABC') == '3'\nassert solution('BBBCCCBB') == '3'\nassert solution('ABBBAAAA') == '2'\nassert solution('BBBCCCBB') == '3'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3\nassert solution('BBBCCCBB') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\nassert solution(\"BBBCCCBB\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\nassert solution(\"BBBCCCBB\") == 2\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''ABC\nABC\nABC\n''') == '2'\nassert solution('''ABC\nABC\nACB\n''') == '-1'\nassert solution('''ABC\nABB\nABC\n''') == '3'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABC') == '2'\nassert solution('ABBBAAAA') == '3'\nassert solution('BBBCCCBB') == '3'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\"\nassert solution(\"BBBCCCBB\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\"\nassert solution(\"BBBCCCBB\") == \"2\"\nassert solution(\"CCCCAAAC\") == \"1\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABC') == '2'\nassert solution('ABBBAAAA') == '3'\nassert solution('BBBCCCBB') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '3'\n\"\"\""
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"7\"\nassert solution(\"10000\") == \"89\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''A\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution('''5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution('''5\nA\nABA\nBBB\nABABA\nAAAAAB\n''') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '3'\nassert solution('5') == '3'\nassert solution('5\\nA\\nABA\\nBBB\\nAAA') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"3\"\n\n\"\"\""
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('1000000') == '4'"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nA\\nB\\nAA\\nBBB\\nAAA') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5\\n\"\n    \"A\\n\"\n    \"B\\n\"\n    \"AA\\n\"\n    \"BBB\\n\"\n    \"AAA\\n\"\n) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\nA\n2\nABA''') == '3'\nassert solution('''5\nAA\nBBB\nAAA\nBBBB\nAAAAAA\nSample Output 3:\n5\n''') == '5'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\nassert solution('5\\nA') == '3'\nassert solution('5\\nA\\nA') == '3'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '0.1'\nassert solution
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\"\nprint(solution(input()))\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100 10 2 1') == '0.10000000000000001'\nassert solution('100 10 2 2') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 10 2 1') == '0.1'\nassert solution('100 10 2 1') == '0.1909090909'\nassert solution
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2 1\") == \"0.1\"\nassert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.2\""
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 10 2 1\n''') == '0.1'\nassert solution('''\n5 10 2 2\n''') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n100 10 2 1\n''') == '0.1'\nassert solution('''\n100 10 2 2\n''') == '0.1909090909'"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n100 10 2 1\n''') == '0.1'\nassert solution('''\n100 10 2 2\n''') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1 2 3\\n
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 2 1') == '0.19090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '4'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '5'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '4'\n\n'''\nSOLUTION:\n\nWe can take a sliding window approach. A sliding window can be defined as a sequence of all items in a collection, along with an additional offset. A sliding window of length n can be defined as a collection of items from the collection between the starting and ending indices (exclusive) of the window.\n\nLet's use n = 4, starting at i = 2 and ending at j = 7. The starting indices of the window are:\n\ni = 2 | j = 7\n\ni = 3 | j = 7\n\ni = 4 | j = 7\n\nWe can see that window[2] = ABABABcABABAbAbab, window[3] = ABABABcABABAbAbab, window[4] = ABABABcABABAbAbab, but window[5] = ABABABcABABAbAbab.\n\nWe can also see that window[0] = ABABABcABABAbAbab, window[1] = ABABABcABABAbAbab, but window[2] = ABABABcABABAbAbab.\n\nAt any time, we can get the last character of the window. To get this character, we can take the first character of the window from the end, and then reverse the characters.\n\nTo get the first character of the window, we can take the first character of the window from the start, and then reverse the characters.\n\nLet's look at the first example:\n\ni = 2 | j = 7\n\ni = 3 | j = 7\n\ni = 4 | j = 7\n\ni = 5 | j = 7\n\ni = 6 | j = 7\n\ni = 7 | j = 7\n\nLet's assume that we are looking at the second window of length 4. We can take the first character of the window, and reverse the characters.\n\nLet's take the first character of the window:\n\nwindow[2] = ABABABcABABAbAbab\n\nwindow[1] = ABABABcABABAbAbab\n\nwindow[0] = ABABABcABABAbAbab\n\nwindow[5] = ABABABcABABAbAbab\n\nwindow[4] = ABABABcABABAbAbab\n\nLet's take the first character of the window:\n\nwindow[2] = ABABABcABABAbAbab\n\nwindow[1] = ABABABcABABAbAbab\n\nwindow[0] = ABABABcABABAbAbab\n\nwindow[5] = ABABABcABABAbAbab\n\nwindow[4] = ABABABcABABAbAbab\n\nLet's assume that we are looking at the second window of length 4. We can take the first character of the window, and reverse the characters.\n\nLet's take the first character of the window:\n\nwindow[2] = ABABABcABABAbAbab\n\nwindow[1] = ABABABcABABAbAbab\n\nwindow[0] = ABABABcABABAbAbab\n\nwindow[5] = ABABABcABABAbAbab\n\nwindow[4] = ABABABcABABAbAbab\n\nLet's take the first character of the window:\n\nwindow[2] = ABABABcABABAbAbab\n\nwindow[1] = ABABABcABABAbAbab\n\nwindow[0] = ABABABcABABAbAbab\n\nwindow[5] = ABABABcABABAbAbab\n\nwindow[4] = ABABABcABABAbAbab\n\nLet's assume that we are looking at the third window of length 4. We can take the first character of the window, and reverse the characters.\n\nLet's take the first character of the window:\n\nwindow[2] = ABABABcABABAbAbab\n\nwindow[1] = ABABABcABABAbAbab\n\nwindow[0] = ABABABcABABAbAbab\n\nwindow[5] = ABABABcABABAbAbab\n\nwindow[4] = ABABABcABABAbAbab\n\nLet's take the first character of the window:\n\nwindow[2] = ABABABcABABAbAbab\n\nwindow[1] = ABABABcABABAbAbab\n\nwindow[0] = ABABABcABABAbAbab\n\nwindow[5] = ABABABcABABAbAbab\n\nwindow[4] = ABABABcABABAbAbab\n\nLet's assume that we are looking at the fourth window of length 4. We can take the first character of the window, and reverse the characters.\n\nLet's take the first character of the window:\n\nwindow[2] = ABABABcABABAbAbab\n\nwindow[1] = ABABABcABABAbAbab\n\nwindow[0] = ABABABcABABAbAbab\n\nwindow[5] = ABABABcABABAbAbab\n\nwindow[4] = ABABABcABABAbAbab\n\nLet's take the first character of the window:\n\nwindow[2] = ABABABcABABAbAbab\n\nwindow[1] = ABABABcABABAbAbab\n\nwindow[0] = ABABABcABABAbAbab\n\nwindow[5] = ABABABcABABAbAbab\n\nwindow[4] = ABABABcABABAbAbab\n\nLet's assume that we are looking at the fifth window of length 4. We can take the first character of the window, and reverse the characters.\n\nLet's take the first character of the window:\n\nwindow[2] = ABABABcABABAbAbab\n\nwindow[1] = ABABABcABABAbAbab\n\nwindow[0] = ABABABcABABAbAbab\n\nwindow[5] = ABABABcABABAbAbab\n\nwindow[4] = ABABABcABABAbAbab\n\nLet's take the first character of the window:\n\nwindow[2] = ABABABcABABAbAbab\n\nwindow[1] = ABABABcABABAbAbab\n\nwindow[0] = ABABABcABABAbAbab\n\nwindow[5] = ABABABcABABAbAb"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(ABABABcABABAbAbab) == '4'\nassert solution(AAABCCCABCBAABAABABAAB) == '5'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(ABABABcABABAbAbab) == '4'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABABABcABABAbAbab') == '5'\nassert solution('ABABABcABABAbAbab') == '4'\nassert solution('ABABABcABABAbAbab') == '4'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''ABABABcABABAbAbab\n3\n0 2\n1 6\n0 7''') == '4'\nassert solution('''ABABABcABABAbAbab\n3\n0 2\n1 6\n0 7''') == '5'\nassert solution('''ABABABcABABAbAbab\n3\n0 2\n1 6\n0 7''') == '4'\nassert solution('''ABABABcABABAbAbab\n3\n0 2\n1 6\n0 7''') == '5'\nassert solution('''ABABABcABABAbAbab\n3\n0 2\n1 6\n0 7''') == '4'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(ABABABcABABAbAbab) == \"4\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '4'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == str(longest_sequence_of_identical_trades)"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution('BAABAAcABABAbAbab') == '4'\nassert solution('BAABABcABABAbAbab') == '6'\nassert solution('AABAAcABABAbAbab') == '5'\nassert solution('AABAAcABABAbAbab') == '3'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"5 5\") == \"4\"\n\nassert solution(\"3 0\") == \"1\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3\\n0\\n0\\n1\\n') == '2'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"5 4\") == \"5\""
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0') == '1'\nassert solution('0 1') == '2'\nassert solution('1 1') == '2'\nassert solution('1 1 2') == '2'\nassert solution('1 1 2 1') == '2'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2'\nassert solution('10 5') == '10'\nassert solution('100 3') == '100'\nassert solution('1 2 3 4 5 6 7 8 9') == '10'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n0 1\n2 0\n1 2\n''') == '2'\nassert solution('''\n2 2\n0 0\n1 1\n''') == '1'\n'''\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n0\n0\n1\nSample Output 2:\n2\n''') == '2'\n\nassert solution('''\n4 3\n0\n1\n1\nSample Output 3:\n3\n''') == '3'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"2\"\nassert solution(\"1\\n1\\n2\\n3\\n\") == \"2\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4') == '2'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n0\n0\n1\n1\n1\nSample Input 2:\n3 3\n0\n0\n1\nSample Output 2:\n1''') == \"1\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 4 2 4\n8 7 6 2 6 -2\n1 2 3 1 3 1 -2\n\"\"\") == \"2\"\n\n\"\"\"\nSample Input:\n\n5 6 6\n5 5 2 4 2 4 1\n\nSample Output:\n\n2\nP0: 3 5 4 2 2 3 1 0\n\"\"\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n10 3 2 2\n1 2 5 1\n5 1 3 1\n5 2 2 1\n''') == '1\\n'\nassert solution('''\n8 8\n10 3 2 2\n1 2 5 1\n5 1 3 1\n5 2 2 1\n''') == '0\\n'\nassert solution('''\n20 10\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2 8 8 8\n12 4 1 4 5 3 -2\"\"\") == \"1\"\n\nassert solution(\"\"\"2 2 1 2 5 8 2\n1 1 1 1 2 1 2\"\"\") == \"1\"\n\nassert solution(\"\"\"3 2 2\n1 1 1\n2 2 2\"\"\") == \"0\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n10 10 10 10\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n10 10 10 10\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n10 10 10 10\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n10 10 10 10\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n\"\"\") == \"2\""
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('\\n'.join([\n    '2 8 8 8',\n    '12 4 1 4 5 3 -2',\n    '10 1 2 1 8 -6 1',\n])) == '1'\n\nprint(solution(\n\"\"\"\n1\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1'\n\nassert solution('''\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1'\n\nassert solution('''\n2 2 2 2\n1 1 1 1 2 2\n3 3 3 3 3 3\n''') == '1'\n\nassert solution('''\n2 2 2 2\n1 1 1 1 2 2\n2 2 2 2 2 2\n''') == '1'\n\nassert solution('''\n2 2 2 2\n1 1 1 1 1 2 2\n2 2 2 2 2 2\n''') == '1'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10 1 2 1 8 -6 1\n5 1 2 3 4 -2 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 7') == '1'\nassert solution('3 4') == '3'\nassert solution('5 3') == '2'\nassert solution('7 7') == '7'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 5\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 2\n3 4 2\n3\n1 2\n1 3\n3 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n7 5\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 2\n3 4 2\n3\n1 2\n1 3\n3 4\n\"\"\") == \"4\"\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        print('#%s' % (resolve2()))\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\"\"\"\n        output = \"\"\"\n1\n2\n3\n\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"\n5 5\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 2\n3 4 2\n3\n1 2\n1 3\n3 4\n\"\"\"\n        output = \"\"\"\n1\n2\n3\n\"\"\"\n        self."
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n4\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\n    \"5 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"2\\n4\\n\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '3'\nassert solution(\n'''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '3'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 7\\n\"\n    \"1 2 1\\n\"\n    \"1 2 3\\n\"\n    \"1 3 2\\n\"\n    \"1 4 1\\n\"\n    \"2 3 4\\n\"\n    \"2 4 4\\n\"\n    \"3 4 4\\n\"\n    \"3\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"3 4\\n\"\n) == \"1\\n2\\n3\\n\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4''') == '2\\n4\\n6\\n8\\n'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 7') == '3'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 5 4 3 2 6\n1 2 5 4 3 6\n\"\"\") == \"2\"\n\n'''"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '2'\nassert solution('1 5 4 3 2 6') == '2'\nassert solution('1 1 5 5 3 2 6') == '2'"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\nassert solution('''\n5\n2 3 1 5 4\n2 1 3 4 5\n''') == '3'\nassert solution('''\n5\n3 4 1 5 2\n3 1 4 2 5\n''') == '0'\nassert solution('''\n2\n1 2\n2 1\n''') == '1'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3 1 2\") == \"2\\n1 3 2\"\nassert solution(\"2\\n1 1 1\\n1 2 1\") == \"1\\n1 1\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n1 2 5 4 3 6\\n1 2 5 4 3 6') == '2'\n\"\"\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 5 4 3 6\") == \"2\"\nassert solution(\"5\\n2 3 5 1 4 6\") == \"1\"\nassert solution(\"4\\n4 1 1 2 3 4\") == \"2\"\nassert solution(\"3\\n3 1 2 3 4\") == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 2\\n1 1 1\\n2 1 2') == '-1'\nassert solution('3 3 3\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n3 20 1 80\\n') == '60'"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60'\nprint(solution('''\n3 5 6\n5 7 8 9 10\n9 10 1 5\n2 4 1 3\n2 5 1 1\n3 4 1 3\n1 4 5 1\n1 3 2 2\n'''))"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 3 2\\n1 30 2 50\\n2 70 3 10\"\n) == \"60\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\") == \"60\"\nassert solution(\"4 4 3 1\") == \"-1\"\nassert solution(\"4 4 3 1 2\") == \"10\"\nassert solution(\"8 2 4 2 4 4 2\") == \"20\"\nassert solution(\"10 5 7 1 3\") == \"11\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\") == \"60\"\nassert solution(\"1 30 2 50\") == \"60\"\nassert solution(\"2 70 3 10\") == \"60\"\nassert solution(\"3 20 1 80\") == \"80\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n\") == \"60\"\nassert solution(\n    \"2 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n\") == \"-1\""
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 20 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60', \"Should be 60\"\nassert solution('''\n2 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '-1', \"Should be -1\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 2\\n1 30 2 50\\n2 70 3 10') == '60'\nassert solution('10 2 5\\n3 9 6 5\\n5 7 8 10\\n1 3 5 10\\n5 8 5 4\\n3 4 4 3\\n5 2 5 4\\n2 6 3 5\\n2 4 7 3\\n5 8 2\\n3 9 6 5\\n5 4 5 3\\n5 7 4 4\\n6 8 3 4\\n1 5 4 3\\n4 9 7 5\\n8 5 7 2\\n1 1 7 3\\n8 2 3 7\\n3 8 6 5\\n1 2 2 3\\n2 4 1 3\\n3 6 5 1') == '-1'"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 2') == '60'\nassert solution('1 3 2') == '-1'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == '60'\nassert solution(\"3\\n2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == '-1'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n10000 0 0\n0 10000 0\n0 0 10000''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 2\\n'''\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n10000 0 0\n0 10000 0\n0 0 10000\n\"\"\") == \"Case #1: 1\"\nassert solution(\"\"\"\n3\n5000 0 0\n0 2000 0\n0 0 4000\n\"\"\") == \"Case #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Case #1: 1'\nassert solution('2') == 'Case #2: 2'\nprint(solution(open(\"input.txt\", \"r\")))\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3\n10000 0 0\n0 10000 0\n0 0 10000\n\"\"\") == \"Case #1: 1\\nCase #2: 2\\nCase #3: 2\"\nprint(solution(input()))\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3\n10000 0 0\n0 10000 0\n0 0 10000''') == 'Case #1: 1\\nCase #2: 2'''\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"Case #1: 1\\nCase #2: 2\\n\"\nassert solution(\"3\") == \"Case #1: 1\\nCase #2: 2\\nCase #3: 3\\n\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'Case #1: 1\\nCase #2: 2\\n'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+1 2 H 2 O 1') == '6'\nassert solution('+1 2 C 1 O 2') == '6'\nassert solution('-1 1 O 2') == '1'\nassert solution('-1 3 C 6 H 12 O 6') == '1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\"\"\") == \"2 2 2 1\"\n\nassert solution(\"\"\"+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\"\"\") == \"2 2 2 1\""
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\\\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\nassert solution('''\\\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '1 1 1 1 1'\nassert solution('''\\\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 H 5 C 2 O 1\n''') == '3 4 5 1 5 4 3 1'\n'''\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 H 2 O 1\n+1 6 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 H 2 O 1\n+1 6 C 1 O 2\n+1 C 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 H 2 O 1\n+1 6 C 1 O 2\n+1 C 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 H 2 O 1\n+1 6 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1'\nassert solution('+1 2 C 1 O 2') == '6 6 6 1'\nassert solution('-1 1 O 2') == '4 4 4 1'\nassert solution('-1 3 C 6 H 12 O 6') == '3 3 3 1'\nassert solution('0 0') == '0 0'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\n\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '4 4 4 1'\n\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n+1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\n\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\n\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n+3 3 C 6 H 12 O 6\n0 0''') == '4 4 4 1'"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1', solution('+1 2 H 2 O 1')\nassert solution('+1 2 C 1 O 2') == '6 6 6 1', solution('+1 2 C 1 O 2')\nassert solution('-1 1 O 2') == '1 1 1 1 1', solution('-1 1 O 2')\nassert solution('-1 3 C 6 H 12 O 6') == '9 9 9 9 9 9 9 9 9 9', solution('-1 3 C 6 H 12 O 6')\nassert solution('0 0') == '1 1 1 1 1 1 1 1 1 1 1', solution('0 0')\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1'\nassert solution('+1 2 C 1 O 2') == '6 6 6 1'\nassert solution('-1 1 O 2') == '6 6 6 1'\nassert solution('-1 3 C 6 H 12 O 6') == '6 6 6 1'\nassert solution('0 0') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '7 7 7 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '7 7 7 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '7 7 7 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\") == \"6 6 6 1\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n10 50\n0 0\n100 0\n100 10\n0 10\n10 20\n20 30\n10 40\n30 40\n''') == '20.835000000000003'\nassert solution('''\n10\n20 40\n30 40\n0 0\n0 40\n10 20\n20 10\n20 30\n10 40\n''') == '11.88'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\nassert solution('''\n5\n30 10\n15 10\n20 10\n20 15\n30 10\n''') == '35.33333'\nassert solution('''\n8\n30 0\n20 0\n40 0\n50 0\n70 0\n80 0\n100 0\n120 0\n130 0\n''') == '65.6'\nassert solution('''\n8\n20 0\n40 0\n50 0\n60 0\n80 0\n100 0\n120 0\n130 0\n''') == '55.6'\nassert solution('''\n7\n20 0\n30 0\n50 0\n70 0\n90 0\n120 0\n150 0\n''') == '54.75'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n\"\"\") == \"20.83\"\n\"\"\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n10 10\\n10 10\\n10 10') == '20.83'\nassert solution('4\\n10 10\\n10 10\\n10 10\\n20 10\\n20 10') == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n20 0\n30 50\n20 0\n100 0\n100 40\n20 40''') == '19.75'\nassert solution('''6\n20 0\n30 50\n20 0\n100 0\n100 40\n20 40''') == '19.25'\nassert solution('''7\n20 0\n30 50\n20 0\n100 0\n100 40\n20 40\n20 50''') == '20.67'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1.75'\nassert solution('1') == '0.0'\nassert solution('4') == '1.20'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0\\n4 2\\n1 2\\n2 1\\n\") == \"1.5\"\nassert solution(\"4\\n0 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\"\nassert solution(\"2\\n1 2\\n2 2\\n\") == \"2\"\nassert solution(\"10\\n0 0\\n0 0\\n\") == \"0\"\nassert solution(\"100\\n0 0\\n0 0\\n\") == \"0\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"13.17\"\nassert solution(\"10\") == \"0.93\"\nassert solution(\"1000\") == \"0.83\"\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n2\n1\n''') == '49', solution('''\n1\n2\n1\n''')\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 5\n7 6 4\n9 8 3\n\"\"\") == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\nassert solution('''\n5 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '30'\n'''\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '49'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n1 2 3\\n1 2 3') == '49\\n'\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    CROSSWORD\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n###.........#\n##.........#\n###.........#\n##.........#\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\\\n1 15\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5\\n#.A#.#.#.#.#.#\\n##.#.#.#\\n# #.##.#\\n#.#.#.#.\\n.#.##.#\\n###.#.#\\n####.#.\\nA.#.#.#') == '#.A.#.##\\n.#.##.#.\\n#.#.#A.\\n.##.#.#.\\n###.#.#.\\n####.##'\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    CROSSWORD\n    'SWEETPANTS'\n    'CHROMEDRIVE'\n    'CHROMECASTLE'\n    'HANSON'\n    'MOLEBASE'\n    'LITHIUM'\n    'HANSON'\n    'CHROMEDRIVE'\n    'HANSON'\n    'MOLEBASE'\n    'CROSSWORD'\n''') == ''''SWEETPANTS####\nCROSSWORD####\nCROSSWORD####\nCROSSWORD####\nCROSSWORD####\nCROSSWORD####\nCROSSWORD####\nCROSSWORD####\nCROSSWORD####\nCROSSWORD####\nCROSSWORD####'''\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\\n1\") == \"\"\nassert solution(\"\\n2\") == \"\"\nassert solution(\"\\n2\\n\") == \"\"\nassert solution(\"\\n2\\n1\") == \"\"\nassert solution(\"\\n2\\n1\\n\") == \"\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 15\n##.........####\n1\nCROSSWORD''') == '##CROSSWORD####'\nassert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n.##.........###\n1\nCROSSWORD\n.###.#.#.#.##\n1\nCROSSWORD''') == '##CROSSWORD####'\nassert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n.##.........###\n1\nCROSSWORD\n.###.#.#.#.##\n1\nCROSSWORD\n.###.#.#.#.##\n1\nCROSSWORD\n.###.#.#.#.##\n1\nCROSSWORD''') == '##CROSSWORD####'\nassert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n.##.........###\n1\nCROSSWORD\n.###.#.#.#.##\n1\nCROSSWORD\n.###.#.#.#.##\n1\nCROSSWORD\n.###.#.#.#.##\n1\nCROSSWORD''') == '##CROSSWORD####'\nassert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n.##.........###\n1\nCROSSWORD\n.###.#.#.#.##\n1\nCROSSWORD\n.###.#.#.#.##\n1\nCROSSWORD\n.###.#.#.#.##\n1\nCROSSWORD''') == '##CROSSWORD####'\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n.#.#..#\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '12345'\nassert solution('1 3 5 7 8') == '12578'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n2 7 6\n9 5 1\n4 3 8\n''') == '31'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n') == '31'\n\n>>> solution('5 1\\n6 7 3 5\\n10 8 4 2 2\\n12 12 3 12 12\\n13 13 2 13 1\\n11 11 3 11 11\\n') == '0'\n\n>>> solution('6 2\\n1 1 1 1 1\\n1 1 1 1 1\\n') == '3'\n\n>>> solution('3 3\\n1 1 1\\n') == '0'\n\n>>> solution('5 5\\n3 3 2 2 3\\n1 1 1 1 1\\n1 1 1 1 1\\n') == '17'\n\n>>> solution('5 5\\n3 3 2 2 3\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n') == '10'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n') == '31'\nassert solution('1 1\\n2 7 6\\n9 5 1\\n4 3 8\\n') == '4'\nassert solution('1 1\\n2 7 6\\n9 5 1\\n4 3 8\\n') == '0'\nassert solution('4 1\\n2 7 6\\n9 5 1\\n4 3 8\\n') == '8'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '6', '1 1'\nassert solution('1 1 1') == '4', '1 1 1'\nassert solution('1 1 2') == '3', '1 1 2'\nassert solution('1 1 3') == '1', '1 1 3'\nassert solution('1 2 3') == '2', '1 2 3'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '31'\nassert solution('4 1') == '31'\nassert solution('4 1') == '31'\n'''"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n') == \"31\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '31'\nassert solution('3 2') == '17'\nassert solution('3 3') == '15'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '31'\nassert solution('1 2 3') == '4'\nassert solution('2 7 6') == '7'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '31'\nassert solution('2 7 6') == '42'\nassert solution('9 5 1') == '48'\nassert solution('4 3 8') == '12'\nassert solution('1 1 1') == '4'\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1\\n2 7 6\\n9 5 1\\n4 3 8\\n') == '31'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\nBBW\n''') == '2'\n\"\"\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    3 1\n    BBW\n    ''') == '2'\nassert solution('''\n    5 3\n    BBBWW\n    ''') == '5'\nassert solution('''\n    5 3\n    BWWBBB\n    ''') == '4'\n''') == '1'\nassert solution('''\n    5 2\n    BBWWB\n    ''') == '1'\nassert solution('''\n    5 2\n    WWBWW\n    ''') == '2'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 3') == '3'\nassert solution('6 3') == '4'\nassert solution('10 10') == '8'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"2\"\n\nassert solution(\"2 3\") == \"3\"\n\nassert solution(\"1 4\") == \"3\"\n\nassert solution(\"6 7\") == \"10\"\n\nassert solution(\"1 3\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1\\nBBW') == '2'\nassert solution('3 2\\nWWW') == '1'\nassert solution('3 1\\nBBWW') == '0'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 1\nBBW\n''') == '2'\n\nassert solution('''3 4\nBBW\nWWB\n''') == '4'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1\\nBWB\\n') == '2'\nassert solution('4 1\\nWWW\\n') == '1'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1\nBBW\n''') == '2'\n\nassert solution('''3 1\nBW\n''') == '0'\n\nassert solution('''2 3\nBW\n''') == '2'\n\nassert solution('''2 2\nBW\nBW''') == '1'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 1]) == \"2\"\nassert solution([5, 2]) == \"4\"\nassert solution([10, 4]) == \"8\"\nassert solution([10, 4]) == \"4\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0.5\"\nassert solution(\"3 1\") == \"0.556\"\nassert solution(\"3 2 1\") == \"0.5\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n1 3\n2 3\n3 2\n''') == '0.556', solution('''\n2 2\n1 3\n2 3\n3 2\n''')\nassert solution('''\n2 2\n3 2\n1 3\n2 3\n''') == '0.556', solution('''\n2 2\n3 2\n1 3\n2 3\n''')\n'''"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '0.556', solution('3 1')\nassert solution('1 2') == '0.500', solution('1 2')\nassert solution('1 2 3') == '0.222', solution('1 2 3')\nprint('\"Run\" is good. Great job,'+ your_name + '!')\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '0.556'\nassert solution('3 2 1') == '0.547'\nassert solution('1 2 3') == '0.552'\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1\n3 2 1\n1 2 3\n''') == \"0.556\"\nassert solution('''\n4 1\n3 2 3\n3 1\n2 4 2\n''') == \"1.100\"\nassert solution('''\n4 1\n3 2 3\n3 1\n2 4 2\n''') == \"1.100\"\nassert solution('''\n6 1\n2 3 2 2 3\n3 1\n5 5 5 4\n2 4\n4 3 1\n''') == \"2.141\"\nassert solution('''\n6 1\n1 2\n2 3\n3 4\n5 6\n''') == \"2.150\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == '0.556'\nassert solution('''4 5\n5 1 4 4 1\n3 5 7 6 3\n5 3 7 2 4 2\n7 3 6 8 2''') == '0.111'\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1\\n3 2 1') == '0.556'\nassert solution('1 2 3\\n1 2 3') == '0.557'\nassert solution('1 2 3\\n1 2 3') == '0.557'\nassert solution('1 2 3\\n1 2 3') == '0.557'\n\"\"\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '0.556'\nassert solution('3 1 2 1') == '0.556'\nassert solution('1 2 3') == '0.556'\nassert solution('2 5 3') == '1.333'\nassert solution('8 5 2') == '0.556'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4 3 2\n        3 1 2\n        4 3 1\n        2 1 3\n        1 2 3\n        2 4\n        ''') == '3'\nassert solution('''5 4 3 2\n        3 1 2\n        4 3 1\n        1 2 3\n        2 4\n        1 2\n        ''') == '1'\nassert solution('''5 4 3 2\n        3 1 2\n        4 3 1\n        2 1 3\n        1 2 3\n        2 1\n        ''') == '2'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 2 1') == '2'\nassert solution('5 4 3 2') == '4'\nprint('Congratulations, have a nice day!')\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4 3 2''') == '3'\nassert solution('''5 4 3 1''') == '4'\nassert solution('''5 5 5 2''') == '6'\nassert solution('''5 10 2 3''') == '13'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 3 2') == '3'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 10 10 10\n2 1 2 2\n2 1 2 1\n1 2 3 4\n3 4 2 3\n''') == '3'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4 3 2\n5 4 3 2''') == '3'\nassert solution('''5 5 4 3 2\n5 5 4 3 2''') == '4'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('1 100 1000 100 500') == '5'\nassert solution('3 3 4 3') == '3'\nassert solution('4 5 6 3') == '4'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n4 3 2') == '3'\nassert solution('5\\n4 3 2') == '4'\nassert solution('10\\n10 5 3 2') == '9'\nassert solution('30\\n15 5 3 2') == '35'\nassert solution('4\\n3 2') == '1'\n\"\"\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"6\"\nassert solution(\"1000\") == \"6\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4 3 2\n''') == '3'\nassert solution('''\n5 6 7 3\n''') == '7'\nassert solution('''\n5 5 5 2\n''') == '5'\n'''\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '13'\n\nassert solution('''\n4\n2 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '15'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"13\"\n\"\"\"\n\nimport itertools\nfrom collections import deque"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2\n2 3\n3 1\n''') == \"3\"\nassert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == \"13\"\n'''\nSample Input:\n1\n0 0\n0 0\nSample Output:\n0"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('4\\n3 3 5\\n2 5 8\\n1 3 6\\n5 3 6') == '13'\nassert solution('4\\n1 3 2\\n3 4 5\\n4 5 6\\n5 6 7') == '15'\nassert solution('4\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8') == '30'"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 6') == '13'\nassert solution('2 5 8') == '13'\nassert solution('3 3 5') == '13'\nassert solution('5 3 6') == '16'\nprint('All tests passed!')\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n5 3 6\n2 5 8\n3 3 5\n5 3 6\n5 4 8\n3 3 5\n''') == '13'"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n') == '13'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n\"\"\") == \"13\"\nassert solution(\"\"\"\n1\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n\"\"\") == \"12\"\nassert solution(\"\"\"\n3\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n\"\"\") == \"10\"\nassert solution(\"\"\"\n3\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n\"\"\") == \"13\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\n\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000 20.123456\\n1\\n13.141593 20.123456\\n10.000000"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n0.000000\\n0.000000') == '0.000000'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10.000000 20.123456\") == \"3.141593\"\nassert solution(\"1\") == \"10.000000\""
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1.000000 20.123456\n0.000000 20.123456''') == '3.141593'\nassert solution('''1.000000 20.123456\n0.000000 20.123456''') == '3.141593'\nassert solution('''1.000000 20.123456\n0.000000 20.123456''') == '3.141593'\nassert solution('''1.000000 20.123456\n0.000000 20.123456''') == '3.141593'\nassert solution('''1.000000 20.123456\n0.000000 20.123456''') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.00002 10.00001\\n1 2.00003 1\\n1 1.99997 1\\n1 2.000000 1\\n') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"1000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n20.123456\n1\n13.141593\n''') == '3.141593'\nassert solution('''\n13.141593\n1\n20.123456\n''') == '2.143164'\nassert solution('''\n13.141593\n2\n20.123456\n''') == '1.41421'\nassert solution('''\n13.141593\n3\n20.123456\n''') == '0.141593'\n''') == '0.141593'\nassert solution('''\n20.123456\n4\n20.123456\n''') == '0.000000'\n''') == '0.000000'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5.00001 1.2\") == \"5.00000\"\nassert solution(\"1.00001 1.2\") == \"2.00000\"\nassert solution(\"1.1 1.2\") == \"1.50000\"\nassert solution(\"1.000 1.2\") == \"1.50000\"\nassert solution(\"1.1 1.1\") == \"2.00000000000000\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"impossible\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"3\") == \"2.13333333333333\"\nassert solution(\"3 3\") == \"4.000000\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4\\n2') == '2.13333333333333'\nassert solution('2\\n1\\n4') == '1.9375'\nassert solution('2\\n3\\n4') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n4 4\n2\nSample Input 2:\n4\n4\n2\nSample Output 2:\nimpossible\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nSample Output 3:\n5.13333333333333\n\"\"\") == \"5.13333333333333\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n4 4\n2\n''') == '2.13333333333333'\nassert solution('''4\n4 4\n3\n''') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n3 4\n2\nSample Input:\n6\n3 3\n5\n4 2\n4 2\n3\n1\nSample Output:\nimpossible\n\nSample Input:\n10\n7 7\n3\n4 2\n1\n3 1\nSample Output:\n4.2\n\nSample Input:\n9\n4 4\n2\nSample Output:\nimpossible\n''')) == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"2.13333333333333\"\nassert solution(\"3\") == \"2.13333333333333\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n4\\n2') == '2.13333333333333'\n\n\"\"\""
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2.13333333333333\"\nassert solution(\"\"\"4\n4\n2\nSample Input:\n1\n1\nSample Output:\n1.0\n\n\"\"\") == \"1.0\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\\n3\\n2\\n\") == \"2.13333333333333\"\nassert solution(\n    \"1\\n4\\n2\\n\") == \"impossible\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('1000') == '2374'\nassert solution('1001') == '1555'\n\n\"\"\""
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '18', \"Wrong\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '2'\n\n--input--\n11\n\n--output--\n27\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '18'"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '8'\nassert solution('4') == '4'"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '12'\nassert solution('10') == '28'\nassert solution('100') == '299'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n') == '1\\n'\nassert solution('5\\n') == '16\\n'\nassert solution('10\\n') == '114\\n'\nassert solution('100\\n') == '11434\\n'\n\n'''\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\n\"\"\"\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(__file__))\n\nfrom fast_prime_factorization import *"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"18\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n0 F baroque sport''') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\n\nSolution\n\n\"\"\"\n\nT = int(input())\n\nfor i in range(T):\n    height, sex, music, sport = input().split(\" \")\n    music = music.strip()\n    sport = sport.strip()\n    if int(height) >= 40 and sex == \"M\" and music!= \"garage house\" and sport!= \"football\":\n        print(1)\n    elif int(height) >= 40 and sex == \"M\" and music == \"garage house\" and sport == \"football\":\n        print(2)\n    elif int(height) >= 40 and sex == \"F\" and music!= \"garage house\" and sport == \"football\":\n        print(2)\n    elif int(height) >= 40 and sex == \"F\" and music == \"garage house\" and sport == \"football\":\n        print(3)\n    else:\n        print(0)"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer''') == '3', 'Should be 3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\"\nprint(solution(input()))\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3'\nassert solution('5\\n40 M classicism programming\\n30 M baroque skiing\\n50 M baroque chess\\n45 F baroque soccer\\n20 M baroque tennis') == '4'\n'''"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'\n'''\n\nimport sys\nimport re\nfrom math import floor"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'\n\nassert solution('''\n0 M baroque skiing\n0 M baroque chess\n0 M baroque soccer\n''') == '1'\n\n''')\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'\nassert solution('''44 M baroque football\n34 F baroque volleyball\n40 F gymnastic gymnastics\n31 F baroque hockey\n10 F baroque rugby\n28 M baroque rugby\n27 M baroque soccer\n''') == '2'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n30 M baroque chess\\n') == '4'\nassert solution('5\\n35 F classicism programming\\n') == '3'\nassert solution('3\\n0 M baroque skiing\\n') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n') == '3'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '''2\n1\n2\n'''\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nab 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2 1\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\") == \"3 1\"\nassert solution(\"\"\"\na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\") == \"0 0\"\nassert solution(\"\"\"\na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\") == \"2 1\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    a 0\n    a 1\n    b 2\n    c 2 3\n    b 4\n\"\"\") == \"\"\"\n    2\n    1\n    2\n\"\"\".strip()\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 1'\nassert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 1'\nassert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 1'\nassert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 2'\nassert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 3'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 1\\n1 0\\n1 1\\n2 2\\n2 1\\n2 2\\n'''\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    2\n    a 0\n    a 1\n    b 2\n    c 2 3\n    b 4\n    ''') == '1\\n1\\n2\\n2\\n2'\nassert solution('''\n    5\n    a 0\n    a 1\n    b 2\n    c 2 3\n    b 4\n    ''') == '2\\n1\\n2\\n2\\n2'\nassert solution('''\n    5\n    a 0\n    a 1\n    b 2\n    c 2 3\n    b 4\n    ''') == '2\\n1\\n1\\n1\\n1\\n1'\nassert solution('''\n    5\n    a 0\n    a 1\n    b 2\n    c 2 3\n    b 4\n    ''') == '0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '''\n2\n1\n2\n'''\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2 1\"\n\"\"\"\n\nimport sys\nimport heapq\n\nsys.setrecursionlimit(100000)\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '5'\nassert solution('10 1') == '8'\nassert solution('10 0') == '2'\n\"\"\"\n\nn, k = map(int, input().split())\n\npartners = []\nfor i in range(n):\n    g, p, g_a, p_a = map(int, input().split())\n    partners.append([g, p, g_a, p_a])\n\npartners = sorted(partners, key=lambda x: (x[0], x[1]), reverse=True)\nprint(len(partners))"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"6 1\\n\"\n    \"78 61 88 71\\n\"\n    \"80 80 90 90\\n\"\n    \"70 90 80 100\\n\"\n    \"90 70 0 0\\n\"\n    \"80 67 0 0\\n\"\n    \"90 63 0 0\"\n) == \"5\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('6 1') == '2'\nassert solution('4 1') == '3'\nassert solution('5 1') == '3'\nassert solution('10 1') == '4'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1\") == \"5\"\nassert solution(\"3 4\") == \"5\"\n\"\"\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '5'\nassert solution('6 1') == '5'\nassert solution('6 1') == '5'\nassert solution('6 1') == '5'\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5'\nprint('All Tests Passed!')\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n') == \"5\"\nassert solution('6 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n') == \"0\"\nassert solution('10 0\\n5 2 4 0\\n2 5 0\\n5 0 0\\n6 0 0\\n6 0 0\\n5 2 4 0\\n5 2 4 0\\n6 0 0\\n6 0 0\\n') == \"2\""
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n') == '5'"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 4\\n\") == \"2\""
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5') == '4'\nassert solution('4 4') == '8'\nassert solution('4 5') == '4'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '4'\nassert solution('4 5') == '4'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '3'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4', 'First'\nassert solution('''\n2 2\n2 1\n''') == '2', 'Second'\nassert solution('''\n1 1\n1 1\n''') == '2', 'Third'\nassert solution('''\n5 6\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n''') == '0', 'Fourth'\nassert solution('''\n7 7\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n''') == '7', 'Fifth'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\"\nassert solution(\"10 10\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"5\""
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"7 5\") == \"6\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 7\") == \"5\"\nassert solution(\"4 2\") == \"1\""
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"4\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n2\\n1\\n2\\n1\\n\") == '4'\nassert solution(\"2\\n2\\n1\\n2\\n1\\n\") == '0'\nassert solution(\"1\\n3\\n1\\n1\\n1\\n\") == '1'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"2\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"0\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2 3'\n\nassert solution('''5\n2 1\n1 3\n3 4\n3 5\n''') == '3 4'\n\nassert solution('''8\n2 1\n3 4\n1 4\n4 5\n3 6\n5 7\n6 8\n''') == '6 7'\n\nassert solution('''4\n4 2\n2 3\n3 4\n3 5\n''') == '2 3'"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2 4\\n3 4\\n2 4'\nassert solution('3\\n1 2\\n2 3\\n3 4\\n') == '1 2\\n1 2'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 3\\n4 5') == '2 4'\n\nassert solution('5\\n2 3\\n4 5') == '2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n2 3\\n3 4\") == \"2 4\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2\n2 3\n3 4\n''') == '2 4'''\n\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '4 5'''"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"2 4\"\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n5 6\n\"\"\") == \"2 4\"\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n4 5\n6 7\n\"\"\") == \"2 4\"\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n4 5\n6 7\n8 9\n\"\"\") == \"3 4\"\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n4 5\n6 7\n8 9\n10 11\n\"\"\") == \"2 4\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2\\n2 3\\n3 4\\n') == '2 3\\n'\nassert solution('4\\n1 2\\n3 4\\n2 3\\n') == '2 4\\n'\nassert solution('15\\n1 2\\n2 3\\n4 5\\n5 6\\n3 7\\n6 8\\n4 9\\n7 10\\n8 11\\n5 12\\n9 13\\n3 14\\n8 15\\n') == '2 4\\n3 5\\n'\n\n\n\"\"\"\n\nn = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nc = [int(i) for i in input().split()]\nd = [int(i) for i in input().split()]"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '2\\n3\\n4\\n'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2 3'\nassert solution('''2\n4\n3 1\n1 2\n''') == '3 4'\nassert solution('''4\n3 1\n3 2\n2 3\n''') == '2 4'\nassert solution('''3\n2 1\n2 2\n1 1\n''') == '1 3'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n2 4'\n\"\"\"\nfrom itertools import combinations"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == '5'\nassert solution('3 1\\n2 5\\n5 7\\n8 9') == '0'\nassert solution('3 3\\n1 2\\n3 4\\n5 4') == '4'\nassert solution('2 2\\n1 3\\n1 4\\n2 5\\n1 6') == '6'\nassert solution('1 3\\n2 5\\n3 5') == '5'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"1 3\") == \"5\"\nassert solution(\"2 1\") == \"5\"\nassert solution(\"3 5\") == \"0\"\nprint(\"You passed all the tests!\")"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1\\n3 5\\n') == '5\\n', \"Bottom\"\nassert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n') == '6\\n', \"Middle\"\nassert solution('5 2\\n1 3\\n2 1\\n3 5\\n7 2\\n') == '0\\n', \"Top\""
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '3'\nassert solution('2 1') == '2'\nassert solution('3 5') == '5'\nassert solution('7 2') == '2'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '3'\nassert solution('2 1') == '1'\nassert solution('3 5') == '0'\nassert solution('7 2') == '0'"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == '5'\nassert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n10 2\\n9 5') == '0'\nassert solution('3 3\\n1 3\\n3 3\\n2 3') == '6'"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '2'\nassert solution('2 1') == '0'\nassert solution('3 5') == '5'\nassert solution('7 2') == '5'"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 2\n1 3\n2 1\n3 5\n7 2\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2 2\n1 3\n2 1\n3 5\n7 2\n\"\"\") == \"0\"\n\n\"\"\"\nTask\nGiven the following input:\n\nm=2, n=2\np1=3, d1=3\np2=1, d2=1\np3=5, d3=5\np4=7, d4=2\n\nThe output should be:\n\n5\n\"\"\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == '5'\nassert solution('4 5\\n1 2\\n5 1\\n3 6\\n1 1\\n2 2\\n3 5\\n1 3') == '3'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '2'\nassert solution('2 1') == '1'\nassert solution('3 5') == '5'\nassert solution('7 2') == '0'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '2'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 3') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''\n2 2\n2 3\n0 0\n0 3\n''') == '3'\n'''"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == '2'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\"\n) == \"2\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 3') == '2'\nassert solution('100 10 100') == '100'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 3') == '2'\nassert solution('4 7 4') == '2'\nassert solution('10 20 10') == '1'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 3 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 3 2\n1 1\n1 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 3 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"GHOST\"\nassert solution(\"\"\"\n4 3\n3 C\n2 C\n1 C\n\"\"\") == \"SAFE\"\nassert solution(\"\"\"\n4 3\n3 D\n2 C\n1 C\n\"\"\") == \"SAFE\"\nassert solution(\"\"\"\n4 4\n4 C\n3 C\n2 C\n1 C\n\"\"\") == \"GHOST\"\nassert solution(\"\"\"\n4 3\n2 C\n1 C\n\"\"\") == \"GHOST\"\n\"\"\")"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3 C\n2 C\n1 C\n3 C\n4 C\n''') == 'GHOST'\nassert solution('''5\n3 C\n2 C\n1 C\n3 C\n4 C\n''') == 'SAFE'\nassert solution('''5\n3 C\n2 C\n1 C\n4 C\n4 C\n''') == 'SAFE'\nassert solution('''5\n3 C\n2 C\n1 C\n4 C\n3 C\n''') == 'SAFE'\nassert solution('''5\n3 C\n2 C\n1 C\n4 C\n3 C\n4 C\n3 C\n''') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n4 3\n3 C\n2 C\n1 C\nSample Input:\n3 2\n2 C\n1 C\nSample Output:\nGHOST\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 C\\n1 C\\n3 C\\n4 C\") == \"GHOST\"\n\"\"\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 3\n3 C\n2 C\n1 C\n\"\"\") == \"GHOST\"\n\nassert solution(\"\"\"\n3 3\nC C\n3 C\n\"\"\") == \"SAFE\"\n\nassert solution(\"\"\"\n1 2\nL\n\"\"\") == \"SAFE\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 2\n1 C\n2 C\n3 C\n4 C\n\"\"\") == \"GHOST\"\nassert solution(\"\"\"\n5 1\n1 C\n\"\"\") == \"SAFE\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 C\\n4 C\\n1 C\") == \"SAFE\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'GHOST'\nassert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'SAFE'\nassert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'SAFE'\nassert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'GHOST'\nassert solution('5 10\\n3 C\\n4 C\\n5 C\\n2 C\\n1 C\\n7 C\\n6 C\\n3 C\\n4 C\\n') == 'SAFE'\nassert solution('1\\n1\\n1\\n') == 'SAFE'\nassert solution('1\\n1\\n0\\n') == 'SAFE'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0.00 2.00\\n') == '2'\nassert solution('2\\n0.00 2.00\\n') == 'no fika'\nassert solution('3\\n0.00 2.00\\n') == '2'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '2'\nassert solution('1 0.00') == '1'\nassert solution('2 3.00') == '2'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n0.00 2.00\n''') == '2'\nassert solution('''\n2 2\n0.00 2.00\n''') == 'no fika'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2'\nassert solution('5 1\\n0.00 2.00') == '5'\nassert solution('3 1\\n0.00 1.99') == '0.99'\n\"\"\""
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n0.00 2.00\n0.00 2.00\n0.00 2.00\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n1.00\n\"\"\") == \"1.00\"\nassert solution(\"\"\"\n2\n0.00 2.00\n0.00 2.00\n\"\"\") == \"1.00\"\nassert solution(\"\"\"\n2\n0.00 1.00\n0.00 1.00\n\"\"\") == \"1.00\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n0.50\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n0.55\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\n1.00\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\n1.00\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"no fika\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"no fika\"\nassert solution(\"4\") == \"no fika\"\nassert solution(\"5\") == \"no fika\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0.00 2.00\") == \"2\"\nassert solution(\"2\\n0.00 2.00\") == \"2\"\nassert solution(\"3\\n0.00 2.00\") == \"no fika\"\nassert solution(\"4\\n0.00 2.00\") == \"no fika\"\nassert solution(\"5\\n0.00 2.00\") == \"no fika\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"no fika\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"2 0.4\") == \"2\"\nassert solution(\"2 0.6\") == \"no fika\"\nassert solution(\"2 0.0\") == \"no fika\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2'\nassert solution('4 5\\n0.00 2.00\\n1.00 2.00\\n1.00 2.00\\n1.00 2.00\\n1.00 2.00') == 'no fika'\nassert solution('7 8\\n0.00 2.00\\n1.00 1.00\\n1.00 2.00\\n2.00 1.00\\n2.00 2.00\\n2.00 2.00\\n2.00 2.00\\n3.00 1.00\\n3.00 2.00\\n3.00 2.00\\n3.00 2.00') == 'no fika'\n\n\"\"\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == \"10\"\nassert solution('2 2') == \"11\"\nassert solution('2 0') == \"2\"\nassert solution('30 0') == \"30\"\nassert solution('2 2 2') == \"29\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n0 0\n10 0\n2\n30 0\n15 0\n\"\"\") == \"10\"\nassert solution(\"\"\"\n1\n0 0\n10 0\n2\n30 0\n15 0\n\"\"\") == \"20\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '10'\nassert solution('10') == '20'"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nprint('Congratulations! Your solution is correct.')"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\n    '1',\n    '1',\n    '0',\n    '1',\n    '1',\n    '0',\n])) == '0'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('3\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n1\\n2\\n') == '9'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0\n10 0\n2\n30 0\n15 0\n''') == '20'\nassert solution('''\n0 0\n0 0\n2\n30 0\n15 0\n''') == '20'"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\n\"\"\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '10'\nassert solution('3') == '10'\nassert solution('10') == '10'\n\"\"\""
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(['2', '0 0', '10 0', '2'])) == '10'\nassert solution('\\n'.join(['3', '0 0', '10 0', '2'])) == '6'\nassert solution('\\n'.join(['3', '0 0', '10 0', '1'])) == '5'"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\nW 10 0\nE 17 4\n''') == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8 3\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\nassert solution('''\n3 3\nW 10 0\nW 10 3\nE 17 4\nE 18 4\n''') == '2'\nassert solution('''\n3 3\nW 10 0\nW 10 3\nE 17 4\nE 18 4\nE 19 4\n''') == '2'\n'''\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 2\nW 8 0\nW 2 3\nE 9 2\nE 7 2\nE 4 2\nE 2 2\n''') == '0'\nassert solution('''\n6 2\nW 8 0\nW 2 3\nE 9 2\nE 7 2\nE 4 2\nE 2 2\n''') == '1'\nassert solution('''\n5 2\nW 8 0\nW 2 3\nE 9 2\nE 7 2\nE 4 2\nE 2 2\n''') == '2'\nassert solution('''\n5 2\nW 8 0\nW 2 3\nE 9 2\nE 7 2\nE 4 2\nE 2 2\n''') == '3'\n'''\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\nW 10 0\nW 10 3\nE 17 4\n''') == '1'\n\nassert solution('''\n2 4\nW 20 0\nE 20 4\nW 17 4\nE 17 4\n''') == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0'"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\\\n2 4\nE 16 0\nW 8 0\nW 8 3\nE 16 4\nE 16 2\nE 16 5\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\\\n3 2\nW 5 3\nE 10 1\nW 12 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\\\n10 1\nW 10 1\nE 9 2\nW 8 2\nE 11 0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\\\n12 2\nW 10 2\nW 12 1\nE 16 1\nE 16 2\nE 16 4\nE 16 3\nE 16 5\nE 16 6\nE 16 8\nE 16 9\nE 16 10\nE 16 11\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\\\n10 1\nW 10 1\nE 9 1\nW 8 1\nE 12 3\nW 11 4\nW 12 3\nW 11 1\nE 13 1\nE 13 2\nW 14 3\nE 14 4\nW 14 2\nE 14 1\nW 13 2\nW 14 3\nW 11 1\nW 13 1\nW 12 1\nW 12 3\nE 13 1\nE 13 2\nE 13 3\nW 14 3\nW 13 2\nW 11 1\nE 13 1\nE 14 4\nE 14 3\nW 14 2\nW 13 1\nE 14 1\nW 12 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0'\nassert solution('5\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 5\\n') == '2'\nassert solution('5\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 5\\nW 17 2\\nW 17 3\\n') == '2'\nassert solution('5\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 5\\nW 17 2\\nW 17 3\\nE 16 3\\nE 17 5\\n') == '2'"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 4\nW 10 0\nW 10 3\nE 17 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 3\nW 10 0\nW 10 3\nE 17 4\nE 17 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6 2\nW 10 0\nW 10 1\nE 17 4\nE 17 5\nE 17 6\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n15 10\nW 10 0\nW 10 3\nW 10 5\nE 17 4\nE 17 5\nE 17 6\nE 17 8\nW 10 8\nW 10 7\nE 17 4\nE 17 5\nE 17 6\nE 17 8\nE 17 9\nE 17 10\nE 17 11\nE 17 12\nE 17 13\nE 17 14\nE 17 15\nE 17 16\nE 17 17\nE 17 18\nE 17 19\nE 17 20\nE 17 21\nE 17 22\nE 17 23\nE 17 24\nE 17 25\nE 17 26\nE 17 27\nE 17 28\nE 17 29\nE 17 30\nE 17 31\nE 17 32\nE 17 33\nE 17 34\nE 17 35\nE 17 36\nE 17 37\nE 17 38\nE 17 39\nE 17 40\nE 17 41\nE 17 42\nE 17 43\nE 17 44\nE 17 45\nE 17 46\nE 17 47\nE 17 48\nE 17 49\nE 17 50\nE 17 51\nE 17 52\nE 17 53\nE 17 54\nE 17 55\nE 17 56\nE 17 57\nE 17 58\nE 17 59\nE 17 60\nE 17 61\nE 17 62\nE 17 63\nE 17 64\nE 17 65\nE 17 66\nE 17 67\nE 17 68\nE 17 69\nE 17 70\nE 17 71\nE 17 72\nE 17 73\nE 17 74\nE 17 75\nE 17 76\nE 17 77\nE 17 78\nE 17 79\nE 17 80\nE 17 81\nE 17 82\nE 17 83\nE 17 84\nE 17 85\nE 17 86\nE 17 87\nE 17 88\nE 17 89\nE 17 90\nE 17 91\nE 17 92\nE 17 93\nE 17 94\nE 17 95\nE 17 96\nE 17 97\nE 17 98\nE 17 99\nE 17 100\nE 17 101\nE 17 102\nE 17 103\nE 17 104\nE 17 105\nE 17 106\nE 17 107\nE 17 108\nE 17 109\nE 17 110\nE 17 111\nE 17 112\nE 17 113\nE 17 114\nE 17 115\nE 17 116\nE 17 117\nE 17 118\nE 17 119\nE 17 120\nE 17 121\nE 17 122\nE 17 123\nE 17 124\nE 17 125\nE 17 126\nE 17 127\nE 17 128\nE 17 129\nE 17 130\nE 17 131\nE 17 132\nE 17 133\nE 17 134\nE 17 135\nE 17 136\nE 17 137\nE 17 138\nE 17 139\nE 17 140\nE 17 141\nE 17 142\nE 17 143\nE 17 144\nE 17 145\nE 17 146\nE 17 147\nE 17 148\nE 17 149\nE 17 150\nE 17 151\nE 17 152\nE 17 153\nE 17 154\nE 17 155\nE 17 156\nE 17 157\nE 17 158\nE 17 159\nE 17 160\nE 17 161\nE 17 162\nE 17 163\nE 17 164\nE 17 165\nE 17 166\nE 17 167\nE 17 168\nE 17 169\nE 17 170\nE 17 171\nE 17 172\nE 17 173\nE 17 174\nE 17 175\nE 17 176\nE 17 177\nE 17 178\nE 17 179\nE 17 180\n\"\"\")\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\nW 10 0\nE 17 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\nW 10 0\nE 17 4\nW 10 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n3\n3 8\n2 5\n3 4\n''') == '2'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 8') == '3'\nassert solution('5 6') == '2'\nassert solution('3 4') == '1'\nassert solution('5 13') == '3'\nassert solution('6 10') == '4'\n\n'''\n\nimport math\n\nn = int(input())"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n8\\n5 6\") == \"3\"\nassert solution(\"5\\n6 10\") == \"2\"\nassert solution(\"3\\n4\") == \"1\"\nassert solution(\"5\\n13\") == \"1\"\nassert solution(\"6\\n10\") == \"0\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n8\n5 6\n3 4\n5 13\n6 10\n''') == '3'\n\nassert solution('''\n4\n2\n1\n1\n1\n''') == '2'\n\nassert solution('''\n5\n8\n5 6\n3 4\n5 13\n6 10\n''') == '1'\n\nassert solution('''\n4\n2\n1\n1\n1\n''') == '0'\n\nprint(solution('''\n3\n1\n2\n2\n1\n'''))\n\nprint(solution('''\n1\n1\n2\n1\n1\n'''))\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('3\\n3 4') == '2'\nassert solution('5\\n6 10') == '3'"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n8\\n5 6') == '3'\nassert solution('5\\n8\\n5 6') == '3'\nassert solution('5\\n8\\n5 6') == '3'\nassert solution('5\\n8\\n5 6') == '3'\nassert solution('5\\n8\\n5 6') == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5\n3 4\n5 13\n6 10\"\"\") == \"3\"\nassert solution(\"\"\"5\n8\n5 6\n3 4\n5 13\n6 10\"\"\") == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n8\\n5 6\\n3 4\\n5 13\\n6 10') == '3'\nprint('SUCCESS')\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n10 3 3\") == \"ABC\\nABC\"\nassert solution(\"5 5\\n6 4 4\") == \"ABAB\\nABAB\"\nassert solution(\"10 10\\n3 3 3\") == \"ABCD\\nABCD\"\nassert solution(\"20 20\\n2 2 2\") == \"ABC\\nAB\\nCA\\nBC\\nAC\\nBD\\nCD\\nAB\\nCD\\nBC\\nCA\\nDA\\nEB\\nED\\nEF\\nFG\\nGH\\nHI\\nIJ\\nJK\\nKI\\nLM\\nMN\\nNO\\nOP\\nPS\\nQS\\nRS\\nTS\\nUW\\nXYZ\\nXYZ\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 3 1\") == \"ABC\\n\"\nassert solution(\"4 4\\n2 2 3 2\") == \"BCBA\\n\"\nassert solution(\"4 4\\n4 4 2 2\") == \"BCBA\\n\"\nassert solution(\"4 4\\n1 3 1\") == \"ABC\\n\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == 'ABACD'\nassert solution('20 3') == 'AAABBBCCCDDD'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n3 2 1\") == \"AB\"\nassert solution(\"3 3\\n1 1 2\") == \"AAABB\"\nassert solution(\"10 3\\n3 2 1\") == \"ABBBBABBBBBBB\"\nassert solution(\"9 6\\n4 2 1\") == \"ABBBBBBBBBBB\"\nassert solution(\"10 4\\n4 1 3\") == \"ABBBBBBBBBBBBBABBBA\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n5 3\n2 1''') == '1A'\nassert solution('''8 3\n8 5\n1 2''') == '4A'\nassert solution('''8 8\n1 3\n4 2''') == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\") == \"ABCD\"\nassert solution(\"1 2\") == \"ABDC\"\nassert solution(\"3 3\") == \"ABC\"\nassert solution(\"3 4\") == \"ABCD\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['1','4','3','2']) == 'AB'\nassert solution(['5','4','3','2']) == 'AC'\nassert solution(['8','4','3','2']) == 'BC'\nassert solution(['2','4','3','2']) == 'AC'\nassert solution(['5','4','3','2']) == 'AC'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n8 10\n10 2 4 2\n\"\"\") == \"A B C A B C A B C\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 5') == 'AAA'\nassert solution('2 3 2') == 'ABB'\nassert solution('1 1 2') == 'ABC'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\nBEFORE\") == \"BEFORE\"\nassert solution(\"20\\nBEFORE\") == \"BEFORE\"\nassert solution(\"20\\nBEFORE\") == \"BEFORE\"\nassert solution(\"5\\nBEFORE\") == \"BEFORE\"\nassert solution(\"10\\nBEFORE\") == \"BEFORE\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nprint('All test cases passed!')"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"12\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"10\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"11\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"13\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11\\n' + 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('12\\n' + 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('12\\n' + 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('12\\n' + 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('12\\n' + 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION', solution('11')\nassert solution('12') == '', solution('12')\nassert solution('17') == '', solution('17')\nassert solution('15') == '', solution('15')\nassert solution('10') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION', solution('10')\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\nassert solution(\"aabraabcdefghijklmnopqrstuvwxyz\") == \"0\"\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('klewelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgupalgwelgup"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abrahellehhelleh') == '12'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('qwertzupssdfghjkl') == '0'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '255'\nassert solution('qwertzupssdfghjkl') == '1'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('abra') == '1'\nassert solution('abracadabra') == '12'\nassert solution('abracadabraabca') == '12'\nassert solution('abracadabrachka') == '1'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abrahellehhelleh') == '12'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('scream') == '0'\n'''\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abrahellehhelleh') == '12'\n\"\"\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abrahellehhelleh') == '12'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n\"\"\") == \"70\"\nassert solution(\"\"\"\n6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n\"\"\") == \"65\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"64\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1''') == '70'\nassert solution('''19\n2 3 4 1 1 2 3 2 2 4 2 3 1 3 2 3 2 2 2 2 4 1 2 3 4 1 4 2 3 1 2 2 4 1 1 1 2 2 3 4 1 2 3 2 1 4 2 3 2 3 4 3 3 2 3 2 2 2 3 1 4 2 2 2 3 2 3 2 1 2 2 2 4 1 4 2 4 2 1 3 4 1 3 3 2 3 2 3 3 2 3 2 1 1 1 3 1 3 2 4 1 4 2 3 2 2 1 3 2 3 4 1 4 2 2 3 2 3 4 2 1 3 2 3 2 4 1 4 2 3 4 3 3 1 4 1 4 2 4 3 3 2 2 3 2 4 2 3 2 4 3 2 1 1 1 4 1 4 2 3 4 2 2 3 3 2 2 1 1 2 1 3 4 3 2 1 3 1 4 1 2 2 4 1 1 1 4 2 3 4 3 2 2 3 4 1 4 2 4 3 2 3 1 2 4 4 3 2 2 2 4 1 4 2 3 2 1 1 4 1 2 1 1 1 1 2 4 1 1 2 2 4 3 2 1 3 2 3 2 4 1 1 1 2 2 3 1 4 1 2 1 1 4 1 2 1 1 4 2 1 3 2 3 1 1 1 4 3 2 1 1 1 3 1 2 4 2 1 4 1 2 1 1 1 1 1 1 2 3 3 2 3 2 1 1 1 4 2 3 2 1 1 4 1 2 1 1 1 1 3 2 4 1 1 1 4 1 4"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('15') == '67'\nassert solution('30') == '40'\nassert solution('10') == '50'\nassert solution('1') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"70\"\nassert solution(\"\"\"\n12\n4 1 3 2 1 1 1 3 4 1 2\n1 3 2 2 4 1 4 1 1 1 1 1\n2 2 1 2 3 1 3 1 1 1 1\n1 3 2 1 2 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 2 3 1 3 1 1 1 1 1\n1 2 1 1 3 1 3 1 1 1 1\n1 2 1 1 2 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 3 2 1 2 1 1 1 1 1 1\n1 3 2 1 1 2 1 1 1 1 1\n1 1 3 2 2 4 1 4 1 1 1\n1 1 3 2 2 4 1 4 1 1 1\n1 2 1 1 2 3 1 3 1 1 1\n1 2 1 1 2 1 1 1 1 1 1\n1 2 1 1 2 1 1 1 1 1 1\n1 2 3 1 1 3 1 1 1 1 1\n1 3 2 1 2 1 1 1 1 1 1\n1 3 2 1 2 1 1 1 1 1 1\n1 3 2 1 2 1 1 1 1 1 1\n1 3 2 1 2 1 1 1 1 1 1\n1 3 2 1 2 1 1 1 1 1 1\n1 3 2 1 2 1 1 1 1 1 1\n1 3 2 1 2 1 1 1 1 1 1\n1 3 2 1 2 1 1 1 1 1 1\n1 1 3"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n64\n3 4 5\n4 1 2 1\n3 1 2 3\n3 3 4 4\n4 3 2 2\n5 4 3 2\n\"\"\") == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n3\n3\n2\n2\n1\n3\n1\n2\n2\n2\n2\n''') == '70'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1 1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1 1\n    ''') == '70'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n13\n3 1 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2 3 5 4 6 2 2 2\n1 3 1 2"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    4 3\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    ''') == '7'\nassert solution('''\n    4 3\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    ''') == '10'\nassert solution('''\n    5 2\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    ''') == '5'\nassert solution('''\n    5 3\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    1 2 3 4 5\n    ''') == '10'\nassert solution('''\n    4 3\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    1 2 3 4\n    ''') == '7'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\"\nassert solution(\"6 3\\n1 2 3 4 5 6\\n1 2 4\\n0 1\\n0 4\\n1 2 4\\n0 1\\n0 4\") == \"6\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '10 5\\n'\n    '1 2 3 4 5 6 7 8 9 10\\n'\n    '1 2 3 4 5 6 7 8 9\\n'\n    '0 1\\n'\n    '0 4\\n'\n    '1 4\\n'\n    '0 1\\n'\n    '0 4\\n'\n    'Sample Output:\n    10\n    7\n    8\n    7\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"10\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n1 2 3 4 5\n1 2 3 4 5\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '7'\nassert solution('''\n5 4\n1 2 3 4 5\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '8'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9\n    0 1\n    0 4\n    1 4\n    0 1\n    0 4\n    \"\"\"\n) == \"7\"\n    \"\"\"\n    0 1\n    0 4\n    1 4\n    0 1\n    0 4\n    1 4\n    0 1\n    0 4\n    \"\"\""
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '7'\nassert solution('10 20\\n5 2 5 3 3 4 4 4 4\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5\\n0 5\\n6 7\\n0 8\\n9 10\\n0 1\\n1 9\\n0 2\\n2 7\\n0 3\\n3 6\\n0 4\\n4 5\\n0 5\\n5 5\\n0 6\\n6 7\\n0 8\\n8 7\\n0 9\\n9 10\\n0 1\\n1 6\\n0 2\\n2 5\\n0 3\\n3 4\\n0 4\\n4 5\\n0 5\\n5 4\\n0 6\\n6 5\\n0 7\\n7 6\\n0 8\\n8 5\\n0 9\\n9 6\\n0 1\\n1 5\\n0 2\\n2 4\\n0 3\\n3 3\\n0 4\\n4 2\\n0 5\\n5 1\\n0 6\\n6 2\\n0 7\\n7 1\\n0 8\\n8 1\\n0 9\\n9 0\\n0 1\\n1 0\\n0 2\\n2 2\\n0 3\\n3 2\\n0 4\\n4 0\\n0 5\\n5 2\\n0 6\\n6 0\\n0 7\\n7 0\\n0 8\\n8 0\\n0 9\\n9 0') == '12'\nassert solution('10 20\\n5 2 5 3 3 4 4 4 4\\n1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2\\n1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3 3\\n1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5 5\\n1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2\\n3"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 7') == '6'\nassert solution('2 4 7') == '1'\nassert solution('4 4 3') == '1'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 7') == '6'\nassert solution('-2 0') == '4'\nassert solution('0 -1') == '1'\nassert solution('-2 1') == '1'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 7\") == \"6\", solution(\"2 4 7\")\nassert solution(\"-2 0\") == \"2\", solution(\"-2 0\")\nassert solution(\"0 -1\") == \"1\", solution(\"0 -1\")\nassert solution(\"-2 1\") == \"2\", solution(\"-2 1\")\nassert solution(\"1 0\") == \"1\", solution(\"1 0\")\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n-2 -1\") == \"3\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6', 'Wrong'\n\nassert solution('''10 7 6\n-1 -2 0\n0 -1\n-1 -2\n-2 0\n1 0\n2 1\n2 3\n3 -1\n''') == '10', 'Wrong'\n\nassert solution('''10 10 10\n0 1 2\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1 -2 -3\n-1"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 7') == '6'\nassert solution('-2 0') == '6'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n') == '6'\nassert solution('4 2 10\\n-2 -1\\n-1 0\\n-1 1\\n1 0\\n1 1\\n1 2\\n2 1\\n') == '0'\nprint(solution(*(list(input().split()))))\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 7\") == \"6\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"5 5 3\") == \"3\"\nassert solution(\"6 6 2\") == \"2\"\nassert solution(\"10 10 10\") == \"10\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 1\n2 2\n1 1\n2 3\n3 2\n''') == '6'\nassert solution('''\n2 2 3\n1 1\n1 1\n''') == '2'\nassert solution('''\n1 1 1\n1 1\n1 1\n''') == '1'\nassert solution('''\n2 2 2\n1 1\n1 2\n''') == '2'\nassert solution('''\n10 10 10\n-1 -1 -1\n-1 1 1\n1 -1 -1\n-1 -1 -1\n-1 -1 -1\n1 1 1\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n19 20 1\n20 21 1\n21 22 1\n22 23 1\n23 24 1\n24 25 1\n25 26 1\n26 27 1\n27 28 1\n28 29 1\n29 30 1\n30 31 1\n31 32 1\n32 33 1\n33 34 1\n34 35 1\n35 36 1\n36 37 1\n37 38 1\n38 39 1\n39 40 1\n40 41 1\n41 42 1\n42 43 1\n43 44 1\n44 45 1\n45 46 1\n46 47 1\n47 48 1\n48 49 1\n49 50 1\n50 51 1\n51 52 1\n52 53 1\n53 54 1\n54 55 1\n55 56 1\n56 57 1\n57 58 1\n58 59 1\n59 60 1\n60 61 1\n61 62 1\n62 63 1\n63 64 1\n64 65 1\n65 66 1\n66 67 1\n67 68 1\n68 69 1\n69 70 1\n70 71 1\n71 72 1\n72 73 1\n73 74 1\n74 75 1\n75 76 1\n76 77 1\n77 78 1\n78 79 1\n79 80 1\n80 81 1\n81 82 1\n82 83 1\n83 84 1\n84 85 1\n85 86 1\n86 87 1\n87 88 1\n88 89 1\n89 90 1\n90 91 1\n91 92 1\n92 93 1\n93 94 1\n94 95 1\n95 96 1\n96 97 1\n97 98 1\n98 99 1\n99 100 1\n100 101 1\n101 102 1\n102 103 1\n103 104 1\n104 105 1\n105 106 1\n106 107 1\n107 108 1\n108 109 1\n109 110 1\n110 111 1\n111 112 1\n112 113 1\n113 114 1\n114 115 1\n115 116 1\n116 117 1\n117 118 1\n118 119 1\n119 120 1\n120 121 1\n121 122 1\n122 123 1\n123 124 1\n124 125 1\n125 126 1\n126 127 1\n127 128 1\n128 129 1\n129 130 1\n130 131 1\n131 132 1\n132 133 1\n133 134 1\n134 135 1\n135 136 1\n136 137 1\n137 138 1\n138 139 1\n139 140 1\n140 141 1\n141 142 1\n142 143 1\n143 144 1\n144 145 1\n145 146 1\n146 147 1\n147 148 1\n148 149 1\n149 150 1\n150 151 1\n151 152 1\n152 153 1\n153 154 1\n154 155 1\n155 156 1\n156 157 1\n157 158 1\n158 159 1\n159 160 1\n160 161 1\n161 162 1\n162 163 1\n163 164 1\n164 165 1\n165 166 1\n166 167 1\n167 168 1\n168 169 1\n169 170 1\n170 171 1\n171 172 1\n172 173 1\n173 174 1\n174 175 1\n175 176 1\n176 177 1\n177 178 1\n178 179 1\n179 180 1\n180 181 1\n181 182 1\n182 183 1\n183 184 1\n184 185 1\n185 186 1\n186 187 1\n187 188 1\n188 189 1\n189 190 1\n190 191 1\n191 192 1\n192 193 1\n193 194 1\n194 195 1\n195 196 1\n196 197 1\n197 198 1\n198 199 1\n199 200 1\n200 201 1\n201 202 1\n202 203 1\n203 204 1\n204 205 1\n205 206 1\n206 207 1\n207 208 1\n208 209 1\n209 210 1\n210 211 1\n211 212 1\n212 213 1\n213 214 1\n214 215 1\n215 216 1\n216 217 1\n217 218 1\n218 219 1\n219 220 1\n220 221 1\n221 222 1\n222 223 1\n223 224 1\n224 225 1\n224 226 1\n225 227 1\n227 228 1\n228 229 1\n229 230 1\n230 231 1\n231 232 1\n232 233 1\n233 234 1\n234 235 1\n235 236 1\n236 237 1\n237 238 1\n238 239 1\n239 240 1\n240 241 1\n241 242 1\n242 243 1\n243 244 1\n244 245 1\n245 246 1\n246 247 1\n247 248 1\n248 249 1\n249 250 1\n250 251 1\n251 252 1\n252 253 1\n253 254 1\n254 255 1\n255 256 1\n256 257 1\n257 258 1\n258 259 1\n259 260 1\n260 261 1\n261 262 1\n262 263 1\n263 264 1\n264 265 1\n265 266 1\n266 267 1\n267 268 1\n268 269 1\n269 270 1\n270 271 1\n271 272 1\n272 273 1\n273 274 1\n274 275 1\n275 276 1\n276 277 1\n277 278 1\n278 279 1\n279 280 1\n280 281 1\n281 282 1\n282 283 1\n283 284 1\n284 285 1\n285 286 1\n286 287 1\n287 288 1\n288 289 1\n289 290 1\n290 291 1\n291 292 1\n292 293 1\n293 294 1\n294 295 1\n295 296 1\n296 297 1\n297 298 1\n298 299 1\n299 300 1\n300 301 1\n301 302 1\n302 303 1\n303 304 1\n304 305 1\n305 306 1\n306 307 1\n307 308 1\n308 309 1\n309 310 1\n310 311 1\n311 312 1\n312 313 1\n313 314 1"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == \"6\""
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 1 3 10') == '3'\nassert solution('3 1 3 10') == '3'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 1 4 40\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n1 1 4 40\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4 0.0005 4 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\nassert solution(\"10 1 3 10\") == \"11\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 10 5 30') == '2'\nassert solution('3 100 10 0.05') == '4'\nassert solution('6 100 4 0.1') == '5'\nassert solution('7 100 5 0.5') == '2'\n\"\"\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '2 1 4 40'\n    ) == '3'\nassert solution(\n    '1 1 5 5'\n    ) == '2'\n\nSample Input:\n2 5 1\nSample Output:\n4\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '3 1 4 40') == '3'\nassert solution(\n    '1 0.01 1 1') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3 2\\n2 0.5') == '3'\nassert solution('3 1 0.5\\n3 0.5') == '3'\nassert solution('4 5 0.5\\n3 0.5') == '2'\nassert solution('8 9 2\\n2 0.5') == '6'\nassert solution('6 5 1.25\\n2 0.5') == '4'"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\n\nSample Input:\n5 5 50\nSample Output:\n5\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 4 40') == '3'\n\"\"\"\ns, r, n, z = stdin.strip().split()\ns = int(s)\nr = int(r)\nn = int(n)\nz = int(z)"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n') == '99\\n3'\nassert solution('7 3\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n') == '0'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('5 2 3') == '3'\nassert solution('20 6 4') == '0'\nassert solution('2 3 2') == '0'"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n90 99 0 86\n''') == '90'\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n90 99 0 86\n0 0 -1 -1 -1\n''') == ''\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n90 99 0 86\n0 0 -1 -1 -1\n''') == '90'\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '83'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"99\"\n\nassert solution(\"5 1\\n100 100 100 0\\n2 3 4 0\\n1 2 3 4\\n\") == \"\""
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == ''\nassert solution('''\n7 3\n0 1 2 3 5 4 6\n0 2 3 5 4 6 7\n0 3 5 4 6 7 8\n1 2 4 6 7 8 9\n2 4 6 8 9 10 11\n3 5 6 7 9 10 11\n0 4 6 7 10 11 12\n''') == '11'\nassert solution('''\n3 2\n2 3\n''') == '0'\nassert solution('''\n2 1\n1\n''') == '0'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 3') == '1 5 4'\nassert solution('1 10 7 2') == '1 10 8'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n-1 0 0\n2 -1 4\n3 4 -1\n''') == '-1'\n\nassert solution('''\n1 10\n-1 0 0\n10 -1 4\n''') == '10'\n\nassert solution('''\n1 20\n-1 0 0\n20 -1 4\n''') == '20'\n\nassert solution('''\n1 20\n-1 -1 4\n20 1 0\n''') == '20'\n\nassert solution('''\n1 10\n-1 -1 4\n10 1 0\n''') == '10'"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 352\") == \"99\"\nassert solution(\"92 76 436\") == \"99\"\nassert solution(\"99 62 -1\") == \"0\"\nassert solution(\"0 70 66 71 97\") == \"0\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '77'\n\n\"\"\""
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3 4\"\nassert solution(\"5\") == \"4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2 1\\n'\nassert solution('2 3') == '3 2\\n'\nassert solution('3 4') == '4 3\\n'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"3 4\"\nassert solution(\"1 2\") == \"2 3\"\nassert solution(\"1 2 3\") == \"1 2 4\"\nassert solution(\"2 3 4\") == \"3 4 1\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4 2 3 4'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2\\n2 3') == '2 3'\nassert solution('4\\n1 2\\n2 3\\n3 4') == '4 2'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n') == '1 2\\n2 3\\n3 4\\n'\nassert solution('4\\n') == '2 2\\n3 3\\n4 4\\n'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"1 1\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4') == '2\\n4\\n1\\n3'\nassert solution('1\\n1\\n1\\n1') == '2\\n3\\n2\\n1'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2 4'\nassert solution('''\n4\n1 2\n2 3\n3 4\n''') == '2 4'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"9.0\"\nassert solution(\"2\") == \"12.0\"\nassert solution(\"3\") == \"12.0\"\nassert solution(\"4\") == \"9.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '9.0000'\nassert solution('10') == '12.00000'\nassert solution('4') == '9.0000'"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2 1') == '9.00000'\nassert solution('2\\n3 1') == '12.00000'\nassert solution('3\\n4 1') == '9.0'\nprint('Congratulations! Your solution passed the tests')\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n1 1\n2 2\n3 2\n4 1\n\"\"\") == \"9.0000\"\nassert solution(\"\"\"\n5\n1 1\n2 2\n3 2\n4 2\n5 1\n\"\"\") == \"12.00000\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '9.00000'\n\"\"\"\n\nfrom math import radians, sin, cos\n\nN = int(input())\n\nbuildings = []\nfor i in range(N):\n    buildings.append([int(i) for i in input().split()])"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0000\\n12.00000\\n12.00000\\n9.0'\nassert solution('5\\n1 1\\n2 2\\n3 2\\n4 1\\n5 2') == '9.0000\\n12.00000\\n12.00000\\n12.00000\\n12.00000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '9.00000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n1 1\n2 2\n3 2\n4 1\n\"\"\") == \"9.0000\"\n\nassert solution(\"\"\"\n4\n1 2\n3 2\n4 1\n\"\"\") == \"12.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n2\n2\n''') == '9.00000'\nassert solution('''3\n1\n2\n3\n''') == '12.00000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"9.0\\n12.00000\\n12.00000\\n9.0\""
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"DI Y\\n\"\nassert solution(\"1\") == \"ST A\\n\"\nassert solution(\"4\") == \"ST A\\nPH A\\nST X\\nPL Y\\nDI Y\\n\"\nassert solution(\"5\") == \"DI Y\\nPH A\\nDI X\\nDI Y\\nDI Y\\nST A\\nPL Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nST A\\nST X\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"123\") == \"ST A\\nST X\\nST Y\\nST Z\\nPH A\\nPH X\\nDI Y\\nPH Z\\nPL Y\\nDI Z\"\nassert solution(\"8\") == \"ST A\\nST X\\nST Y\\nST Z\\nPH A\\nPH X\\nDI Y\\nPH Z\\nDI Z\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nDI Z\\nDI Z\\nDI A\""
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'DI A'\nassert solution('100') == 'ST A\\nST X\\nDI X\\nPH X\\nDI A\\nAD\\nPL Y\\nDI Y'\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'DI Y'\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"DI Y\"\nassert solution(\"123\") == \"DI 123\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"DI A\""
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"DI Y\"\n\n------Notes------\nA valid program may contain the following instructions:\nPH, PL, AD, and ZE.\n\nWhen the top of the stack is not empty,\n the program will send the value stored in the top of the stack to the laser display board.\n\nWhen the top of the stack is empty,\n the program will send the value of the register to the laser display board and exit.\n\nThe first line contains a number $N$ ($0 \\le N \\le 255$).\n\nYour solution must terminate when the program sends the value of the register to the laser display board and exits.\n\n-----Hints-----\n- Store and manipulate variables only, and consider using \"free\" variables.\n- The top of the stack is indexed from the end, so use negative indexes (i.e.\u00a0$-1$).\n- The standard input consists of a single line.\n- The program will terminate when the program sends the value of the register to the laser display board and exits.\n- A stack has no limit.\n- All program instructions contain at most three arguments.\n- Use free variables, i.e. don't store variables, only manipulate them.\n- The stack is indexed from the end, so use negative indexes (i.e.\u00a0$-1$).\n- Stack is implemented with a list.\n\n'''\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n''') == '''\nST A\nST X\nPH A\nPH X\nAD\nPL Y\nDI Y\n'''\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'DI Y\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI X\\nDI X\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('1 5 6') == '2'\nassert solution('1 5 6') == '2'"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5 6\") == \"2\"\nassert solutionn\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000''') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('1 10 3') == '1'\n\"\"\"\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(os.path.abspath(__file__)) +\n                 '/../')\nfrom algorithms.binary_search import binary_search_iterative\nfrom algorithms.prime_number import is_prime"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 2 1 2 1') == '3'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000''') == '2'\n\nassert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000''') == '1'\n\nassert solution('''1 1 1\n0000 0000\n0000 0000\n0000 0000\n0000 0000\n0000 0000''') == '0'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 6\") == \"2\"\nassert solution(\"1 1 1\") == \"1\""
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('10 5 6') == '11'\nassert solution('1 6 3') == '4'\nassert solution('1 6 6') == '2'\nassert solution('5 5 5') == '1'\n\"\"\""
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\") == \"abaaba\"\nassert solution(\"6\\nS -> aSb\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\") == \"abaaba\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\") == \"baaabba\"\nassert solution(\"100\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\nS -> a\\nS -> b\\"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nS->aSa\\nS->bSb\\nS->a\\nS->b\\nS->\\n') == 'abaaba'\nassert solution('5\\nS->aSa\\nS->bSb\\nS->a\\nS->b\\nS->\\n') == 'abbbbbbbbbbbbbbbbba'\nassert solution('3\\nG->G\\nG->\\nS->') == 'G'\nassert solution('3\\nG->G\\nG->\\nS->') == 'S'\nassert solution('3\\nG->G\\nG->\\nS->') == 'G'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\\\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"abaaba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"abaaba\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"a\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"NONE\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"abaaba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nNONE\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\nprint(solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nNONE\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n'))"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nNONE on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\n\nimport re"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"abaaba\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"NONE\"\nassert solution(\"5\\nS -> aaabaa\\nS -> bbabab\\nS -> a\\nS -> b\\nS -> \\n\") == \"ababab\"\nassert solution(\"5\\nS -> aaabaa\\nS -> bbabab\\nS -> a\\nS -> b\\nS -> \\n\") == \"ababab\"\nassert solution(\"5\\nS -> aaabaa\\nS -> bbabab\\nS -> a\\nS -> b\\nS -> \\n\") == \"ababab\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NONE\"\nassert solution(\"S -> aSa\") == \"abaaba\"\nassert solution(\"S -> aSaS\") == \"abaaba\"\nassert solution(\"S -> aSaS\") == \"abaaba\"\nassert solution(\"S -> aSaS\") == \"abaaba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nNONE on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\nS -> aba\nS -> aba\nS -> aa\nS -> ab\nS -> a\nS -> b\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nNONE on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\nS -> abc\nS -> babc\nS -> abc\nS -> ab\nS -> a\nS -> b\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nNONE on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abaabaabaaaaabaaaaaabaaaaaaaaaabbbbbbbbbbbbbbbbbaabbbbbbbbbaabaabaabaaaaaabbaaaaaaaaabbaaaaabaaaaaaaaabaaaaaaaaabaaaaaaaaaaabaaaaaaaaaaaaabaaaaaaaaaaabaaaaabaaaaabaaaaabaaaaabaabaabaaaaabaabaaaaaaaaaaabaaaaabbbbbbbbbbbbbbbbbbaaaabaabaabaaaaaabbaaaaaaaaabbaaaaabbabaaaaabaaaaabaaaaabbaaaaabaaaaaaaaaabaaaaaabbaaaaabaaaaabaaaaabaaaaabbaaaaaaaaabaaaaaaaaaaabaaaaaaabaaaaabaaaaabaaaaabaaaaaaaaaabaaaaabaaaaaabaaaaabaaaaaabaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaabaabaabaaaaaabbaaaaaaaaabbaaaaabaaaaaaaaabaaaaaaaaabaaaaaaaaaaabaaaaabaaaaabaaaaabaaaaabaaaaabaaaaabaabaabaaaaabaabaaaaaabbaaaaaabbaaaaabaaaaabaaaaabaaaaaaaaaabaaaaabaaaaaabaaaaabaaaaabaaaaaabaaaaaabbaaaaabaaaaabaaaaabaaaaabaaaaabaaaaabaaaaabaaaaabaaaaaabbaaaaaabbaaaaabaaaaabaaaaabaaaaabaaaaabaaaaabaaaaabaaaaaabbaaaaaabbaaaaabaaaaabaaaaabaaaaaabaaaaaabbaaaaabaaaaabaaaaabaaaaaabaaaaabaaaaaabaaaaabaaaaabaaaaabaaaaabaaaaabaaaaaabaaaaaabbaaaaabaaaaabaaaaabaaaaaabbaaaaabaaaaaabbaaaaabaaaaabaaaaaabaaaaabaaaaaabaaaaabaaaaaabaaaaaabbaaaaaabaaaaabaaaaabaaaaaabaaaaaabbaaaaabaaaaaabbaaaaabaaaaaabaaaaaabbaaaaabaaaaaabaaaaaabbaaaaaabaaaaabaaaaaabaaaaaabbaaaaabaaaaaabaaaaaabbaaaaaabaaaaabaaaaaabaaaaaabbaaaaaabaaaaaabbaaaaabaaaaaabaaaaaabbaaaaaabaaaaaabbaaaaaabaaaaaabbaaaaaabaaaaaabbaaaaaabaaaaaabbaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaabaaaaaab"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"4\"\nassert solution(\"8\\n5\\n1 5 2 5 3 4 3 5\\n1 1 4 1 1 4\\n1 1 4 1 1 4\\n1 1 4 1 1 4\\n1 1 4 1 1 4\\n1 1 4 1 1 4\\n1 1 4 1 1 4\\n1 1 4 1 1 4\\n1 1 4 1 1 4\\n1 1 4 1 1 4\\n\") == \"5\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '5'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n') == '4'\nassert solution('6\\n1 1 0\\n2 2\\n3 3\\n4 4\\n5 5\\n') == '6'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n4 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n4 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n1 2 3\") == \"4\\n1 2 3\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"10 0 3\") == \"5\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5 0 2\\n1 3 7\\n2 0\\n4\\n') == '4'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('5 2 1 3 0') == '3'\nassert solution('5 5 7 6 4') == '4'\nassert solution('5 1 0 2 3 0') == '3'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\"\nassert solution(\"1\\n3 1 2\") == \"2\""
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"2 3\") == \"NO WAY\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\n2 2\\nGGBB') == 'GO FOR IT'\nassert solution('3 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('3 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'NO CHANCE'\nassert solution('10 10\\n4 4\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW') == 'SUCCESS'\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"1 5\") == \"NO CHANCE\"\nassert solution(\"1 4\") == \"NO WAY\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n5 5\nSGBW\nWGBG\nGGBW\n''') == 'GO FOR IT'\nassert solution('''2 2\n5 5\nSGBW\nWGBG\nGGBW\n''') == 'SUCCESS'\nassert solution('''1 3\n5 5\nSSS\nSBS\nSSS\n''') == 'SUCCESS'\nassert solution('''2 2\n5 5\nSSSS\nSBBB\nSBBB\n''') == 'GO FOR IT'\nassert solution('''1 3\n5 5\nSBBB\nSSSS\nSBBB\n''') == 'SUCCESS'\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWSBB\") == \"NO WAY\"\n\n\n\n-----Explanation-----"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWBWG') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"1 2\") == \"NO CHANCE\"\n\"\"\"\n\nfrom sys import stdin\n\nlines = stdin.readlines()\nA, F = int(lines[0]), int(lines[1])\n\nN = int(lines[2])\nW, H = lines[3].split()\nW, H = int(W), int(H)\n\nMap = []\nfor line in range(4, 4+N):\n    Map.append(lines[line].strip())"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 2\\n4 4\\nWWWWWWWWWW\\nWSBBWWBBWW\\nWWWWWWWWWW\\nWBWGWWBWWG\") == \"NO WAY\"\nassert solution(\"2 2\\n4 4\\nWWWWWWWWWW\\nWSBBWWBBWW\\nWWWWWWWWWW\\nWBWGWWBWWG\") == \"NO WAY\"\nassert solution(\"2 2\\n4 4\\nWWWWWWWWWW\\nWSBBWWBBWW\\nWWWWWWWWWW\\nWBWGWWBWWG\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n'''\n) == \"GO FOR IT\"\nassert solution(\n'''2 3\n5 5\nWWWWW\nWSBBBB\nWWWWWW\nWBWGGB\n'''\n) == \"NO WAY\"\n'''\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n900\\n800\\n700\\n400\\n300\\n200') == '2243'\nassert solution('2\\n900\\n800\\n700\\n400\\n300\\n200') == '1900'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2243'\nassert solution(input_data=\"1 1\") == '900'\nassert solution(input_data=\"4 5\") == '1800'\nassert solution(input_data=\"4 3\") == '1450'\nassert solution(input_data=\"7 3\") == '2095'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n900\\n800 700 400 300 200\\n\") == \"2243\"\nassert solution(\"2\\n1000\\n500 500 200 200\\n\") == \"1000\"\nassert solution(\"3\\n3\\n1 1 2\\n\") == \"3\"\nassert solution(\"4\\n1000\\n900 900 800\\n\") == \"1000\"\nassert solution(\"5\\n10\\n1 3 2\\n\") == \"3\""
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'\nassert solution('''4 3\n1 1 1 1\n''') == '1'\nassert solution('''5 4\n1 1 1 1 1\n''') == '1'\nassert solution('''5 5\n1 1 1 1 1\n''') == '1'\nassert solution('''5 5\n0 0 0 0 0\n''') == '0'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 900\") == \"2243\"\nassert solution(\"5 20000 900\") == \"41200\"\nassert solution(\"10 0\") == \"0\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\"\nassert solution(\"5 4\\n900 700 400 300 200\") == \"936\""
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n''') == '29'\nassert solution('''10 20\n1 2 3 4 5 6 7 8 9 10\n''') == '49'\nassert solution('''10 100\n2 3 4 5 6 7 8 9 10\n''') == '110'\nassert solution('''10 1000\n1 2 3 4 5 6 7 8 9 10\n''') == '3600'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 10\") == \"10\"\nassert solution(\"5 0\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'yes'\nassert solution('''\n3\n1 2 3\n? 1 2 3\n= 1 2\n= 2 3\n? 1 2\n''') == 'yes'\nassert solution('''\n6\n1 2 3 4 5 6\n? 1 2 3 4 5 6\n= 1 2 3 4 5 6\n= 2 3 4 5 6\n= 4 5 6\n= 5 6\n? 2 4 5 6\n= 2 4 5 6\n= 4 5 6\n= 5 6\n= 6\n? 4 5 6\n= 4 5 6\n= 5 6\n= 6\n? 5 6\n= 5 6\n= 6\n= 6\n? 6\n= 6\n= 6\n''') == 'yes'\nassert solution('''\n6\n1 2 3 4 5 6\n? 1 2 3 4 5 6\n= 1 2 3 4 5 6\n= 2 3 4 5 6\n= 4 5 6\n= 5 6\n? 2 4 5 6\n= 2 4 5 6\n= 4 5 6\n= 5 6\n= 6\n? 4 5 6\n= 4 5 6\n= 5 6\n= 6\n? 5 6\n= 5 6\n= 6\n= 6\n? 6\n= 6\n= 6\n= 6\n''') == 'no'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"yes\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\") == \"yes\"\nassert solution(\"1\\n0\") == \"no\"\nassert solution(\"1\\n1\") == \"yes\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"yes\\nno\"\nassert solution(\"5 7\") == \"yes\\nno\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n= 1 3\\n= 3 4\\n? 1 3\\n= 5 2\\n? 1 5\\n\") == \"yes\\nno\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'yes\\nyes\\n'''\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2\\n= 2\\n= 2\\n? 2 3\") == \"yes\\nno\"\nassert solution(\"5\\n6\\n= 6\\n= 6\\n? 5 6\") == \"yes\\nno\"\nassert solution(\"20\\n100\\n= 20\\n= 20\\n? 5 20\") == \"yes\\nno\"\nassert solution(\"7\\n7\\n? 7 7\") == \"yes\\nno\""
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 4') == 'yes'\nassert solution('5 3') == 'no'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == 'no'\nassert solution('10 4') == 'yes'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n\"\"\") == \"\"\"yes\"\"\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10 3\") == \"2\"\nassert solution(\"10 5 4 8 3\") == \"4\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 8 5 7 4 8') == '2'\nassert solution('1 2 3 4 5 5 7 4 8') == '1'\nassert solution('3 2 3 5 6 8 8 7 6 7 3 5') == '3'"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == '2'\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"10 5 4 8 3\") == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n10 5 4 8 3') == '2'\nassert solution('5 6\\n10 5 4 3 2') == '2'\nassert solution('5 6\\n10 5 4 3 2 5') == '1'\nassert solution('5 6\\n10 5 4 3 2 5 10') == '1'\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"10 5 4 8 3\") == \"1\"\n\"\"\""
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == '2'\nassert solution('''5 2\n10 5 4 8 3''') == '1'\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '3\\n'\n    '2 3 1\\n'\n    '3 3 2\\n'\n    '3 2 1\\n'\n    '5 5 6\\n'\n    '5 4 2\\n'\n    '4 5 3\\n'\n    '4 7 3\\n'\n    '4 3 2\\n'\n    '5 6 2\\n'\n    '5 2 2\\n'\n    '6 1 2\\n'\n    '6 3 2\\n'\n    '6 4 2\\n'\n    '6 5 2\\n'\n    '6 7 2\\n'\n    '6 2 2\\n'\n    '7 3 2\\n'\n    '7 5 2\\n'\n    '7 7 2\\n'\n    '7 6 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n    '7 2 2\\n'\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '2'\nassert solution('1 5 2 4 3') == '3'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1083\"\nassert solution(\"100 100\") == \"8780\"\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 10') == '1083'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n7') == '1'\nassert solution('1 0') == '1'\nassert solution('2 4') == '3'"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 127\") == \"1083\"\nprint(solution(\"1 127\"))\n\"\"\"\n\nfrom collections import defaultdict, Counter\n\nn, m = map(int, input().split())\nnums = list(map(int, input().split()))"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 127\") == '1083'\nassert solution(\"1 1023\") == '1083'\nassert solution(\"10 3\") == '10'\nprint('\"Run\" is good. Great Job!')\"\"\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 127') == '1083'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1083\"\nassert solution(\"10 0\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == str(__import__('math').prod(map(int, input().split())))\n\"\"\""
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 127') == '1083', f\"actual: {solution('1 127')}, expected: 1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == '2.0000000000'\n\n'''\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == '2.0000000000'\nassert solution('7 7') == '2.0000000000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4\\nHow much is 6 times 9? 42') == '2.0000'\nassert solution('2 4\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '4.6666666666'\n\"\"\""
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"2.0000000000\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000'\nassert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '1.0000000000'\nassert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '0.000000000'\nassert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow?') == '0.000000000'\nassert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow?') == '0.000000000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n\"\"\") == \"2.0000000000\"\n\nprint(\"TESTS SUCCESSFUL\")\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"2.0000000000\"\nprint(solution(input()))\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '2.0000000000'"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '2.0000000000'\nprint('solution = OK')\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == 'POSSIBLE'\nassert solution('5 5') == 'IMPOSSIBLE'\n\"\"\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6') == 'POSSIBLE'"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 6\") == \"POSSIBLE\"\nassert solution(\"1 5\") == \"IMPOSSIBLE\"\nassert solution(\"5 1\") == \"IMPOSSIBLE\"\n\"\"\"\nimport collections\n\nINPUT = \"\"\"\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n\"\"\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin\npenguin 1 monkey\n''') == \"POSSIBLE\"\nassert solution('''2 4\nhelmet jacky\njacky 2 helmet\n''') == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\nlion 2 monkey\nmonkey 3 elephant\nelephant 1 monkey\n\"\"\") == \"POSSIBLE\"\n\nassert solution(\"\"\"\n4\nmonkey 3 elephant 2 rabbit\nrabbit 1 elephant\nelephant 2 monkey\nmonkey 1 rabbit\n\"\"\") == \"POSSIBLE\"\n\nassert solution(\"\"\"\n10\nrabbit 2 monkey 1 antelope\nantelope 3 monkey\nmonkey 1 rabbit\nelephant 1 rabbit\nrabbit 1 chicken\nchicken 2 rabbit\nmonkey 3 elephant\nelephant 2 chicken\nelephant 1 antelope\nchicken 1 monkey\nmonkey 3 antelope\nmonkey 2 chicken\nmonkey 1 elephant\n\"\"\") == \"POSSIBLE\"\n\nassert solution(\"\"\"\n2\nlion 3 elephant\nelephant 1 monkey\nmonkey 1 elephant\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n3\nmonkey 1 elephant\nelephant 2 rabbit\nrabbit 3 elephant\n\"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"POSSIBLE\"\nprint(solution())"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin\npenguin 1 monkey\n''') == 'POSSIBLE'\nassert solution('''3 6\nmonkey 2\nlion 3\npenguin 1\n''') == 'IMPOSSIBLE'\nassert solution('''3 6\nmonkey 2\nlion 3\npenguin 1\n''') == 'FALSE ALARM'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"POSSIBLE\"\nassert solution(\"2 6\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\") == \"POSSIBLE\"\nassert solution(\"3 1\") == \"FALSE ALARM\"\nassert solution(\"3 2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5\ncat dog fish bird\ndog 1 cat fish\nfish 0 dog\nbird 0 cat\n''') == 'POSSIBLE'\nassert solution('''\n6 5\ndog cat pig owl deer frog\ndog 2 cat 5 pig\npig 4 dog 3 owl\nowl 1 frog 2 deer\n''') == 'IMPOSSIBLE'\nassert solution('''\n7 3\ncat dog pig owl deer frog\ncat 2 dog 3 pig\ndog 2 pig 1 owl\nowl 2 deer frog\n''') == 'FALSE ALARM'\nassert solution('''\n4 5\ncat dog fish bird\ndog 1 cat fish\nfish 0 dog\nbird 0 cat\n''') == 'POSSIBLE'\nassert solution('''\n7 5\ndog cat pig owl deer frog\ndog 2 cat 5 pig\npig 4 dog 3 owl\nowl 1 frog 2 deer\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6') == 'POSSIBLE'\nassert solution('1 2 1') == 'IMPOSSIBLE'\nassert solution('1 1') == 'FALSE ALARM'\nassert solution('1 1 3') == 'FALSE ALARM'\nassert solution('1 1 1') == 'FALSE ALARM'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n') == \"triple correlation 4(1)4(3)3 found\"\nassert solution('10\\n3 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n1 4 4 1 2 3 2 6 9 9\\n') == \"triple correlation 4(1)4(3)3 found\"\nassert solution('5\\n3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n3 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n5 5 5 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n') == \"triple correlation 4(1)4(3)3 found\"\nassert solution('10\\n4 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4\\n5 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n5 5 5 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n0 1 4 4 1 2 3 2 6 9 9\\n') == \"triple correlation 4(1)4(3)3 found\"\nassert solution('10\\n4 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4\\n5 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n5 5 5 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n0 1 4 4 1 2 3 2 6 9 9\\n') == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3'\nassert solution('''\n100\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'random sequence'\nassert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3'\nassert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'random sequence'\nassert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'random sequence'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100') == 'random sequence'\nassert solution('5') == 'random sequence'\nassert solution('1234') == 'random sequence'\nassert solution('1234 567') == 'random sequence'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n\"\"\"\n) == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n\"\"\"\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\"\n) == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n\"\"\"\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\"\n) == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n\"\"\"\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\"\n) == 'triple correlation 4(1)4(3)3 found'\n\nassert solution(\n\"\"\"\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\"\n) == 'triple correlation 4(1)4(3)3 found'"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''100\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''100\n4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 7''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4''') == 'random sequence'\nassert solution('''100\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2''') == 'random sequence'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n7\n9\n5\n9\n3\n5\n0\n0\n1\n7\n8\n5\n0\n2\n6\n3\n5\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n6\n9\n3\n6\n6\n8\n5\n2\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n9\n1\n8\n5\n2\n5\n3\n2\n6\n3\n2\n6\n9\n9\n''') == 'triple correlation 4(1)4(3)3'\nassert solution('''\n100\n4\n7\n9\n5\n9\n3\n5\n0\n0\n1\n7\n8\n5\n0\n2\n6\n3\n5\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n6\n9\n3\n6\n6\n8\n5\n2\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n9\n1\n8\n5\n2\n5\n3\n2\n6\n3\n2\n6\n8\n5\n6\n7\n0\n9\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5\n1\n2\n7\n1\n8\n7\n5\n0\n4\n4\n4\n6\n3\n5"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n\") == \"4(1)4(3)3\", \"Wrong\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\", \"Wrong\"\nprint('all tests passed')\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100') == \"triple correlation 4(1)4(3)3 found\"\n\"\"\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100') == 'triple correlation 4(1)4(3)3 found'\n\n\"\"\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100') == 'triple correlation 4(1)4(3)3 found'\n\nimport itertools\nfrom typing import Tuple"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n40\n10\n40\n''') == \"40.5\"\nassert solution('''\n2 1\n0\n10\n''') == \"5.0\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10\n30\n60\n\"\"\") == \"60\"\nassert solution(\"\"\"\n100\n10\n10\n\"\"\") == \"20\"\nassert solution(\"\"\"\n10\n30\n70\n\"\"\") == \"35\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n39\\n10\\n') == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '40.5'\nassert solution('10 0.2') == '10'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1') == '42.5'\nassert solution('6 2') == '31.5'\nassert solution('100 5') == '100.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 1\n10\n40\n\"\"\") == \"40.5\"\n\nassert solution(\"\"\"\n4 0.00000000000\n20\n30\n40\n50\n\"\"\") == \"50.00000000000\"\n\nassert solution(\"\"\"\n50 10\n1\n2\n3\n4\n\"\"\") == \"3.6666666666667\"\n\nassert solution(\"\"\"\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n\"\"\") == \"1000.00000000000\"\n\nassert solution(\"\"\"\n3 10\n1\n2\n3\n\"\"\") == \"2.5\""
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"41.5\""
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1\n39\n10\n40\"\"\") == \"40.5\"\nassert solution(\"\"\"2\n3\n1\n100\nSample Input:\n1\n10\nSample Output:\n10.0\"\"\") == \"10.0\"\nassert solution(\"\"\"1\n10\n10\nSample Output:\n10.0\"\"\") == \"10.0\""
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '40.5'\nassert solution('4 1') == '41.0'\nassert solution('5 1') == '43.0'\nassert solution('5 2') == '43.5'\nassert solution('6 1') == '43.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\"\nassert solution(\"1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\n1000000000.0\\"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"2008\"\nassert solution(\"7 4\") == \"1969\"\nassert solution(\"3 3\") == \"1969\"\nassert solution(\"5 7\") == \"1969\"\nassert solution(\"2 2\") == \"1969\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2048'\nassert solution('7') == '2034'\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 6\") == \"Impossible\"\n\nassert solution(\"10 10\") == \"2\"\n\nassert solution(\"2 5\") == \"8\"\n\nassert solution(\"10 20\") == \"Impossible\"\n\nassert solution(\"5 20\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3\\n2 1\\n1 1\\n2 1\\n'\n) == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4, 6, 2, 1, 2, 3, 1, 3, 4, 4, 1, 4]) == 'Impossible'\nassert solution([4, 6, 2, 1, 2, 3, 1, 3, 4, 4, 1, 4, 5, 6, 7, 8, 9, 10, 11]) == '2015'\nprint(solution(input()))\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 6\\n\"\n    \"1 2 1987\\n\"\n    \"2 3 1987\\n\"\n    \"1 3 1987\\n\"\n    \"2 4 1987\\n\"\n    \"1 4 1987\\n\"\n    \"3 4 1987\\n\"\n) == \"Impossible\"\n\nassert solution(\n    \"4 8\\n\"\n    \"1 2 2016\\n\"\n    \"2 3 2016\\n\"\n    \"1 3 2016\\n\"\n    \"2 4 2016\\n\"\n    \"1 4 2016\\n\"\n    \"3 4 2016\\n\"\n    \"Sample Output:\n    4\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016\"\n    \"2016"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 6\") == \"Impossible\"\nassert solution(\"5 2\") == \"1, 2\"\nassert solution(\"5 3\") == \"1, 2, 3\"\nassert solution(\"5 4\") == \"1, 2, 3, 4\"\nassert solution(\"5 5\") == \"1, 2, 3, 4, 5\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4, 6,\n                 1, 2,\n                 3, 4,\n                 1, 3]) == \"2008\"\nassert solution([4, 6,\n                 1, 2,\n                 3, 4,\n                 1, 3,\n                 2, 3,\n                 2, 3]) == \"2008\"\nassert solution([4, 6,\n                 1, 2,\n                 3, 4,\n                 1, 3,\n                 2, 3,\n                 2, 3,\n                 2, 3]) == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 6') == 'Impossible'\nassert solution('10 3') == '2008'\nassert solution('6 9') == '2017'\n\n\"\"\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 1') == 'impossible'\nassert solution('5 0 1 2 4 3') == '3'\nassert solution('4 5 1 4 3') == '3'\nassert solution('5 5 1 5 3') == 'impossible'\nassert solution('4 0 1 2 4 3') == '5'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 0 1') == 'impossible'\nassert solution('4 0 2') == '3'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == \"1\"\nassert solution(\"4 0 1\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 0 3\") == \"3\"\nassert solution(\"1 0 3\") == \"impossible\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == \"3\"\nassert solution('''5 3 3\nN 1 2\nC 1 1\nN 2 3\nC 2 1\n''') == \"5\"\nassert solution('''5 1 7\nN 2 3\nC 1 1\nN 2 1\nC 2 3\n''') == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'impossible'\nassert solution('4 0 1') == '3'\nassert solution('4 0 1') == '3'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 3\\n2 3 1\\n1 3 4\\n1 2 2\\n1 1 4\\n\") == \"2\"\nassert solution(\"3 3\\n1 2 1\\n3 4 3\\n\") == \"impossible\"\nassert solution(\"4 5\\n3 4 1\\n2 4 1\\n2 3 4\\n\") == \"impossible\"\nassert solution(\"5 5\\n3 3 2\\n5 4 4\\n4 5 2\\n5 1 5\\n\") == \"impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"3\"\nassert solution(\"5 0 0\\n0 1 2\\n1 3 4\\n1 2 4\\n3 5 6\\n4 5 7\\n4 1 7\\n3 6 7\\n2 6 7\\n2 5 7\\n2 4 7\\n2 4 6\\n2 4 5\\n2 3 6\\n2 3 5\\n1 3 6\\n1 3 5\\n1 2 4\\n2 2 4\\n1 2 3\") == \"impossible\"\nassert solution(\"1 0 2\\n1 1 3\\n1 1 4\") == \"1\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\"\nassert solution(\"4 0 1\") == \"3\"\nassert solution(\"4 0 2\") == \"2\"\nassert solution(\"4 0 3\") == \"impossible\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n(\n)\n((\n))\n''') == '10'\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 10\nassert solution('((())') == 8\nassert solution('((()))') == 8\nassert solution('(((())))') == 8\nassert solution('(()(()))') == 4\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0\nassert solution(\"()\") == 0\nassert solution((()) == 0\nassert solution((\"()\",\"))\",\"(\")) == 2\nassert solution((\"(\",\"))\",\"((\",\"))\",\"((\")) == 4\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"()\") == 1\nassert solution(\"((()))\") == 4\nassert solution(\"(((((((()))))))\") == 10\nassert solution(\"(((((((((((((()))))))))))))\") == 10\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n()''') == 1\nassert solution('''1\n())''') == 2\nassert solution('''4\n()()''') == 6\nassert solution('''3\n(()\n()\n()''') == 9\nassert solution('''3\n())()\n()(\n()''') == 11\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '6'\n\"\"\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('(()') == 0\nassert solution('())') == 0\nassert solution('((())') == 0\nassert solution('()(())()') == 4\nassert solution('(((()))())()') == 11\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '10'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '10'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '10'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n377 a') == '85293'\nassert solution('2\\n377 a\\n455 h') == '14185'\nassert solution('3\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '14185'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n377\\na\\n455\\nh') == '85293'\n\"\"\"\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n7\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"85293\"\nassert solution(\"\"\"\n1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n2 2\n2 3\n2 4\n2 5\n2 6\n3 3\n3 4\n3 5\n3 6\n4 4\n4 5\n4 6\n5 5\n5 6\n6 6\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"85293\"\nassert solution(\"\"\"\n2\n2 2\n2 4\n2 5\n3 3\n3 4\n3 5\n4 4\n4 5\n5 5\n5 6\n6 6\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n2 2\n2 3\n2 4\n2 5\n2 6\n3 3\n3 4\n3 5\n3 6\n4 4\n4 5\n4 6\n5 5\n5 6\n6 6\n\"\"\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n377 a\n455 h\n180 a\n\"\"\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 a\\n5 a\") == \"0\"\nassert solution(\"1 a\\n5 h\\n1 h\\n5 a\\n4 a\\n8 h\") == \"85293\"\nassert solution(\"6\\n1 3\\n2 3\\n4 3\\n5 3\\n1 3\\n2 4\\n4 4\\n2 4\\n2 4\\n2 4\") == \"92726\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\"\nassert solution(\"5 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\"\nassert solution(\"10 10\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n1 5\\n2 5\\n1 6\\n2 6\\n3 7\\n4 7\\n1 8\\n2 8\\n1 9\\n2 9\\n1 10\\n2 10\\n\") == \"4\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n3 2\\n3 1') == '1'\nassert solution('6 5\\n1 2\\n2 3\\n1 3\\n1 4\\n2 4\\n2 5') == '1'\nassert solution('5 7\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5') == '5'\nassert solution('4 5\\n1 2\\n2 3\\n3 1') == '4'\nassert solution('8 8\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5') == '4'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\nassert solution('5 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\n\n'''\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '5'\nprint(solution(input_))\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '5'\nassert solution('5 10') == '13'\nassert solution('16 20') == '16'"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5'\nassert solution('3 1\\n2 3\\n1 4\\n2 4\\n') == '1'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\n'''"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 2\\n1 2\\n1 3\\n2 3\") == \"5\"\nassert solution(\"2 2\\n1 2\\n1 3\") == \"1\"\nassert solution(\"1 1\\n1 2\") == \"1\"\nassert solution(\"3 3\\n3 3\") == \"2\"\nassert solution(\"10 10\\n10 10\") == \"12\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\n1 2\n1 3\n2 3\n1 4\n2 4\n''') == '5'\nassert solution('''\n5 5\n1 2\n1 3\n2 3\n1 4\n2 4\n''') == '6'\nassert solution('''\n10 20\n1 2\n1 3\n2 3\n1 4\n2 4\n1 5\n2 5\n1 6\n2 6\n1 7\n2 7\n1 8\n2 8\n1 9\n2 9\n1 10\n2 10\n''') == '34'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\nassert solution('10 2\\n1 2\\n1 5\\n2 5\\n5 4\\n4 6\\n5 6\\n5 7\\n6 5\\n6 7\\n7 4\\n7 6\\n') == '1'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '3'\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\nsys.setrecursionlimit(100000)\n\n\nclass Graph:\n    def __init__(self, vertices):\n        self.graph = defaultdict(list)\n        self.V = vertices\n\n    def addEdge(self, u, v):\n        self.graph[u].append(v)\n\n    def bfs(self, s, parent):\n        visited = [False] * (self.V)\n        queue = []\n        queue.append(s)\n        visited[s] = True\n        while queue:\n            u = queue.pop(0)\n            for i in self.graph[u]:\n                if visited[i] == False:\n                    queue.append(i)\n                    visited[i] = True\n                    parent[i] = u\n        return parent\n\n    def isCyclic(self, s, parent):\n        visited = [False] * (self.V)\n        queue = []\n        queue.append(s)\n        visited[s] = True\n        while queue:\n            u = queue.pop(0)\n            for i in self.graph[u]:\n                if visited[i] == False:\n                    queue.append(i)\n                    visited[i] = True\n                    parent[i] = u\n                else:\n                    if parent[i] == u:\n                        return True\n        return False\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly''') == '5100'\nassert solution('''2\n1 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n5\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly''') == '6200'\nassert solution('''1\n2 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n5\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly''') == '7500'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly''') == '5100'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3\\n\"\n    \"3 caterpillar 3 pupa 7 butterfly\\n\"\n    \"3 dove 3 pigeon 7 aaabaaajss\\n\"\n    \"7 mouse 1 electromouse 5 rat\\n\"\n    \"7\"\n) == \"5100\"\n\nassert solution(\n    \"2\\n\"\n    \"1 dog 1 cat 1 cow 2 camel 3 horse 4 pig 5 zebra 6 elephant 7 kangaroo 8 snake 9 turtle 10 panda 11 koala 12 cheetah 13 gorilla 14 \"\n    \"fox 15 rabbit 16 tiger 17 wolf 18 giant19 giant20 giant21 gigant22 gigant23 gigant24 gigant25 giant26 giant27 giant28 giant29 \"\n    \"giant30 giant31 giant32 giant33 giant34 giant35 giant36 gigant37 giant38 giant39 giant40 gigant41 gigant42 gigant43 gigant44 \"\n    \"giant45 gigant46 gigant47 gigant48 gigant49 gigant50 giant51 giant52 giant53 giant54 giant55 giant56 gigant57 gigant58 \"\n    \"giant59 giant60 giant61 giant62 giant63 giant64 giant65 giant66 giant67 giant68 giant69 giant70 giant71 giant72 giant73 giant74 \"\n    \"giant75 giant76 giant77 giant78 giant79 giant80 giant81 giant82 giant83 giant84 giant85 giant86 giant87 giant88 giant89 \"\n    \"giant90 giant91 giant92 giant93 giant94 giant95 giant96 gigant97 gigant98 gigant99 gigant100 gigant101 gigant102 \"\n    \"giant103 gigant104 gigant105 gigant106 gigant107 gigant108 gigant109 gigant110 gigant111 gigant112 gigant113 \"\n    \"giant114 gigant115 gigant116 gigant117 gigant118 gigant119 gigant120 gigant121 gigant122 gigant123 gigant124 \"\n    \"giant125 gigant126 gigant127 gigant128 gigant129 gigant130 gigant131 gigant132 gigant133 gigant134 gigant135 \"\n    \"giant136 gigant137 gigant138 gigant139 gigant140 gigant141 gigant142 gigant143 gigant144 gigant145 gigant146 \"\n    \"giant147 gigant148 gigant149 gigant150 gigant151 gigant152 gigant153 gigant154 gigant155 gigant156 gigant157 \"\n    \"giant158 gigant159 gigant160 gigant161 gigant162 gigant163 gigant164 gigant165 gigant166 gigant167 gigant168 \"\n    \"giant169 gigant170 gigant171 gigant172 gigant173 gigant174 gigant175 gigant176 gigant177 gigant178 gigant179 \"\n    \"giant180 gigant181 gigant182 gigant183 gigant184 gigant185 gigant186 gigant187 gigant188 gigant189 gigant190 \"\n    \"gigant191 gigant192 gigant193 gigant194 gigant195 gigant196 gigant197 gigant198 gigant199 gigant200 gigant201 \"\n    \"gigant202 gigant203 gigant204 gigant205 gigant206 gigant207 gigant208 gigant209 gigant210 gigant211 gigant212 \"\n    \"gigant213 gigant214 gigant215 gigant216 gigant217 gigant218 gigant219 gigant220 gigant221 gigant222 gigant223 \"\n    \"gigant224 gigant225 gigant226 gigant227 gigant228 gigant229 gigant230 gigant231 gigant232 gigant233 gigant234 \"\n    \"gigant235 gigant236 gigant237 gigant238 gigant239 gigant240 gigant241 gigant242 gigant243 gigant244 gigant245 \"\n    \"gigant246 gigant247 gigant248 gigant249 gigant"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"3 caterpillar 3 pupa 7 butterfly\") == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '7000'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '10000'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '900'\nassert solution('2') == '9000'\nassert solution('3') == '9000'\nassert solution('4') == '90000'\nassert solution('5') == '90000'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"5100\"\nassert solution(\"\"\"\n10\n4 aardvark 2 orange 4 goat 5 lion 1 shark 9 dolphin\n3 aardvark 1 hippo 1 fly 2 turtle\n7 hippo 2 hippo 3 turtle\n3 aardvark 1 orange 2 aeroplane 3 airplane\n5 aardvark 1 bumble 2 butterfly 2 budgie 2 aeroplane\n\"\"\") == \"42000\"\nassert solution(\"\"\"\n10\n1 hippo 1 fly 2 turtle\n3 hippo 2 hippo 3 turtle\n7 hippo 2 butterfly 2 budgie 2 aeroplane\n5 aardvark 1 bumble 2 butterfly 2 aeroplane\n3 aardvark 1 orange 2 aeroplane 3 airplane\n5 aardvark 1 bumble 2 butterfly 2 aeroplane\n3 aardvark 1 fly 2 aeroplane 2 airplane 3 orange\n\"\"\") == \"5500\"\nassert solution(\"\"\"\n10\n2 eggs 4 milk 2 cucumber 1\n3 eggs 2 milk 4 cucumber 1\n5 eggs 2 milk 4 cucumber 1\n7 eggs 2 milk 4 cucumber 1\n4 milk 3 eggs 2 cucumber 1\n1 egg 1 milk 2 eggs 2\n3 milk 2 eggs 2 cucumber 1\n4 milk 2 eggs 2 eggs 2\n7 milk 2 eggs 2 eggs 2\n5 milk 2 eggs 2 eggs 2\n\"\"\") == \"7000\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 0 0\") == \"1\"\nassert solution(\"2 1 0\") == \"1\"\nassert solution(\"3 1 1 3\") == \"3\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\nassert solution('4\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3') == '-1'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"5\") == \"6\"\nassert solution(\"0\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('6\\n0\\n0\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '-1'\nassert solution('8\\n1\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1 1\") == \"3\"\nassert solution(\"1 4\") == \"2\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '5'\n    '0'\n    '1 1'\n    '1 1'\n    '2 2 3'\n    '1 4'\n    '8'\n    '1'\n    '2'\n    '3'\n    '1'\n    '4'\n    '2'\n    '3'\n    '5'\n    ) == '6 1 2 3 1 4 5'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"6\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '5\\n'\n    '0\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '2 2 3\\n'\n    '1 4\\n'\n    '8\\n'\n    '1\\n'\n    '2\\n'\n    '3\\n'\n    '1\\n'\n    '4\\n'\n    '2\\n'\n    '3\\n'\n    '5\\n'\n    ) == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"10\"\nassert solution(stdin_from_file) == \"10\""
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"10\"\nassert solution(\"\"\"\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\nSample Output:\n10\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\nSample Input 2:\n1\n1\nSample Output 2:\n1\n''') == '1'\nassert solution('''\n1\n2\nSample Input 3:\n2\n3\nSample Output 3:\n2\n''') == '2'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n''') == '10'\nassert solution(\n'''\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n''') == '19'\nassert solution(\n'''\n5\n3 1 2 1 3\n1 3 R 2\n2 1 R 4\n4 2 R 3\n4 3 O 2\n3 1 O 3\n2 2 O 4\n''') == '31'"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n2 1 R 6\nSample Output 2:\n17\n\"\"\") == \"10\"\nassert solution(\"\"\"\n1 4\n1 2 O 3\n1 2 R 5\n1 2 O 3\n2 1 O 3\n2 1 R 6\nSample Output 2:\n23\n\"\"\") == \"21\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"4\") == \"100\"\nassert solution(\"\") == \"0\"\nassert solution(\"2 1 2 2\") == \"10\"\nassert solution(\"4\") == \"100\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == '1'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\n\nSample Input:\n5 3\n0 1\n1 2\n2 3\n3 4\n4 5\nSample Output:\n3\n\"\"\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n4 3\n0 1\n1 2\n2 3\n3 1\n'''\n    ) == \"1\"\n    pass\nassert solution(\n    '''\n4 3\n0 1\n1 2\n2 3\n3 1\n3 1\n'''\n    ) == \"2\"\n    pass\nassert solution(\n    '''\n4 3\n0 1\n1 2\n2 3\n3 1\n'''\n    ) == \"4\"\n    pass\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 2\\n2 3\\n3 4\") == \"1\"\nassert solution(\"3 2\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"10 10\\n1 2\\n3 5\\n6 6\\n9 8\\n2 7\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"2\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '1 2'\nassert solution('2 3') == '2 3'\nassert solution('3 3') == '3'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('2 2') == '1'\nassert solution('5 2') == '3'\nassert solution('1 1') == '2'"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '1'\nassert solution('3 3') == '1'\nassert solution('4 1') == '2'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n0 1\\n1 2\\n2 3') == '1'\nassert solution('3 3\\n0 1\\n1 2\\n2 3') == '3'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '1'\nassert solution('4 3') == '2'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n6\n1\n3\n5\n1\n2\n4\n3\n\"\"\") == \"0.962962962963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0.962962962963'\nassert abs(solution() - 0.962962962963) <= 10**-8"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '0.962962962963'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0.5'\nassert solution('1') == '0.1000000000000'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '0.962962962963'\nassert solution('5') == '0.963928571429'\nassert solution('6') == '0.99607843137'\n\"\"\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"0.962962962963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0.962962962963'\nassert solution('5') == '0.969696969697'\nassert solution('15') == '0.945454545455'\nassert solution('20') == '0.927272727273'\nassert solution('50') == '0.918181818182'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '0.962962962963'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"0.962962962963\"\nprint(solution(input()))\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0.75'\nassert solution('4') == '0.962962962963'\nassert solution('5') == '0.9962962962963'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n''') == '0 0\\n40000000 0\\n0 40000000\\n'\nassert solution('''\n2\n''') == '0 0\\n0 40000000\\n'\nassert solution('''\n10\n''') == '0 0\\n0 40000000\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n0 40000000 0\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n''') == '0 0\\n0 40000000\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n0 40000000 0\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n0 40000000 0\\n40000000 40000000\\n0 40000000 0\\n0 40000000 40000000\\n'''\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n0 0\n40000000 0\n0 40000000\n''') == '0 0\\n40000000 0\\n0 40000000\\n'''\n\n\n\"\"\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n''') == '0 0\\n40000000 0\\n0 40000000\\n'''\nassert solution('''\n3\n''') == '0 0\\n40000000 0\\n0 40000000\\n'''\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('5') == '0 0\\n40000000 0\\n0 40000000\\n40000000 0\\n0 40000000'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000'\n\"\"\"\n\nfrom math import gcd\nimport numpy as np\nimport itertools\n\na, b = map(int, stdin.readline().split())\na_point = np.array([a, 0])\nb_point = np.array([0, b])"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0 0'\nassert solution('3') == '0 40000000 0'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0 0\\n\" * 3\n\"\"\"\nfrom math import sqrt\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0 0\\n40000000 0\\n0 40000000\\n30000000 0\\n0 30000000\\n0 20000000\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1 2\n''') == '1 4\\n'\n\nassert solution('''\n2\n1 2\n4\n1 3\n''') == '4 3\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n3 4\n4 1\n2 5\n''') == '0 40000000\\n0 40000000\\n40000000 0\\n40000000 0\\n'''\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('2 5 3 4') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"3 4 5 3 2\") == \"0\"\nassert solution(\"5 6 3 2\") == \"impossible\"\nassert solution(\"3 4 5 4\") == \"impossible\"\nassert solution(\"3 4 5 3 4\") == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('2 8 6 2') == '2'\nassert solution('1 10 1 1') == '10'\nassert solution('5 7 8 7') == 'impossible'\n\n\"\"\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 4 5') == '1'\nassert solution('1') == 'impossible'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('6 6 1 1 6') == '-1'\nassert solution('12') == 'impossible'\nassert solution('123') == 'impossible'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"10 10 10 10\") == \"impossible\"\nassert solution(\"23 9 2\") == \"0\"\nassert solution(\"1 1 1 1\") == \"impossible\"\nassert solution(\"1 1 1 1 4\") == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n5\n5\n2\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n3\n4\n5\n2\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n3\n5\n5\n2\n\"\"\"\n) == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"3 5 5 2\") == \"impossible\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '2'\nassert solution('''\n20 5 7 6\n-10 10 0\n-10 -10 0\n0 0 0\n0 0 0\n''') == '1.6'\nassert solution('''\n100 100 100\n-10 -10 -10\n-10 10 10\n0 0 0\n0 0 0\n''') == '0.50'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20 3 5 5') == '2'\nassert solution('20 20 20 20') == '0'"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 5') == '2'\nassert solution('5 3 5') == '2'\nassert solution('5 3 5') == '2'\nassert solution('5 3 5') == '2'\nassert solution('5 3 5') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 3 5 5\") == \"2\"\nassert solution(\"30 10 5 5\") == \"5\"\nassert solution(\"30 0 5 0\") == \"0\"\nassert solution(\"20 0 0 0\") == \"0\"\nassert solution(\"20 -5 0 0\") == \"0\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20 3 5 5') == '2'\nassert solution('50 10 50 50') == '0'\nassert solution('100 50 50 50') == '50'\n\"\"\"\nimport sys\nimport math\nn, k, a, b = map(int, sys.stdin.readline().strip().split())\nt = map(int, sys.stdin.readline().strip().split())\nu = map(int, sys.stdin.readline().strip().split())"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 3 5 5') == '2'\nassert solution('8 3 5 5') == '4'\nassert solution('100 3 5 5') == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 3 5 5') == '2'\nassert solution('20 3 5 5') == '2'\nassert solution('20 3 5 5') == '2'\nassert solution('20 3 5 5') == '2'\nassert solution('20 3 5 5') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n10 -4 0 -8\\n-5 -10 8 -1\\n2 1 1\\n-2 0 0\\n-3 -1 -1\\n3 2 1') == '2'\nassert solution('20\\n10 -4 0 -8\\n-5 -10 8 -1\\n2 1 1\\n-2 0 0\\n-3 -1 -1\\n3 2 1') == '0'\nassert solution('20\\n10 -4 0 -8\\n-5 -10 8 -1\\n2 1 1\\n-2 0 0\\n-3 -1 -1\\n3 2 1') == '0'\nassert solution('2\\n0 0 0\\n-2 -2 0\\n-2 -2 0\\n0 0 0\\n-2 -2 0') == '0'\nassert solution('20\\n10 -4 0 -8\\n-5 -10 8 -1\\n2 1 1\\n-2 0 0\\n-3 -1 -1\\n3 2 1') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 3 5 5') == '2'\nassert solution('20 4 6 5') == '0'\nassert solution('40 50 50 50') == '2'"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n    23\n\"\"\") == \"23\"\n\nassert solution(\"\"\"\n    11\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n    5\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n    8898\n\"\"\") == \"10000000\""
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10\n\"\"\") == \"12 14\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '12 14'\nassert solution('10') == '12 14'\nassert solution('123') == '14 12'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == '14'\nassert solution('21') == '22'\nassert solution('3') == '4'\nassert solution('10') == '12'\nassert solution('111111') == '1112223334445'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '2'\nassert solution('569') == '54'\nassert solution('3') == '12'\nassert solution('5690') == '569'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('100') == '101'\nassert solution('1000000') == '1000001'\nassert solution('10000000') == '1000001'\nassert solution('4000000') == '4000001'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"12 14\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '10'\nassert solution('50') == '50'\nassert solution('1') == '1'\n\nassert solution('51') == '10'\nassert solution('100') == '10'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('100') == '102'\nassert solution('1000') == '1020'\n\n\"\"\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('01') == '0'\nassert solution('100') == '101'\nassert solution('3399') == '3399'\nassert solution('3399 1') == '3399 1'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\nassert solution('''\n10\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n''') == '15'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '0'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '3'\nassert solution('1\\n0') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\nassert solution('6\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n') == '2'\nassert solution('7\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n') == '2'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n5\n1 0 0\n1 0 1\n3 0 0\n3 0 1\n3 0 1\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\nassert solution('6\\n0 0 0\\n0 0 1\\n0 0 0\\n0 0 1\\n0 0 0\\n0 0 1\\n') == '2'\nassert solution('5\\n0 0 0\\n0 0 1\\n0 0 0\\n0 0 1\\n0 0 0\\n0 0 1\\n') == '1'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0'\nassert solution('3') == '1'"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 0 0\n1 0 1\n3 0 1\n''') == '0'\nassert solution('''\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '1'\nassert solution('''\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\n'''\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"-1\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\n\nfor i in range(3):\n    print(solution(f\"{i+1} {i+2}\")[i])"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\n\"\"\""
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nprint(solution(input()))\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n''') == '1 1\\n2 2\\n1 3\\n2 1\nassert solution('''\n2 3\n''') == '1 1\\n2 2\\n1 3\\n2 1\n''')\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1 1\"\nassert solution(\"3 3\") == \"1 1 2 2 1\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"1 1\"\nassert solution(\"2 3\") == \"1 1\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"4 3\") == \"1 1\\n2 2\\n3 3\\n1 2\\n2 1\""
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"1 2\") == \"1 2\\n1 1\\n2 1\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 2\") == \"1 1\"\nassert solution(\"1 3\") == \"1 1\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n2 1 2\n3 4 4\n''') == '''\n2 2\n2 3\n'''\n\nassert solution('''\n2 4\n2 3 5\n1 3 1\n1 2 5\n''') == '''\n2 2\n1 3\n3 1\n2 3\n'''\n\nassert solution('''\n2 6\n1 2 5 4\n1 1 1 4\n1 1 1 3\n''') == '''\n2 2\n1 3\n3 1\n2 2\n1 3\n3 1\n1 2\n2 2\n1 3\n2 2\n1 3\n2 2\n1 3\n2 2\n1 3\n3 1\n2 2\n1 3\n3 1\n2 2\n1 3\n3 1\n1 2\n2 2\n1 3\n3 1\n2 2\n1 3\n3 1\n1 2\n2 2\n1 3\n3 1\n2 2\n1 3\n'''\n\nassert solution('''\n5 5\n4 3 5 5\n4 5 5 5\n1 4 2 4\n1 4 2 4\n1 4 2 4\n''') == '''\n3 3\n1 2\n3 4\n2 1\n3 4\n'''\n\nassert solution('''\n5 6\n1 3 5 4 6\n1 3 5 4 6\n1 4 2 4 5\n1 4 2 4 5\n1 4 2 4 5\n1 4 2 4 5\n''') == '''\n3 3\n1 2\n3 4\n2 1\n3 4\n'''"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 4 2\") == \"0.9666666666666666666666666\"\nassert solution(\"2\\n0 10 1\\n0 10 1\") == \"6.666666666666666666666666\"\nassert solution(\"3\\n0 10 1\\n0 10 1\") == \"6.666666666666666666666666\"\nassert solution(\"4\\n0 10 1\\n0 10 1\") == \"5.333333333333333333333333333\"\nassert solution(\"5\\n0 10 1\\n0 10 1\") == \"5.333333333333333333333333333\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10') == '1.8333333'\nassert solution('3 1') == '1.5'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10') == '3.33333333'\nassert solution('3 20') == '4.41666666666'\nassert solution('3 30') == '4.555555556'\nassert solution('3 50') == '5.16666666667'\nassert solution('3 100') == '5.483333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10') == '3.33333333'\nassert solution('3 3') == '3.33333333'\nassert solution('3 1') == '2.0'\nassert solution('2') == '2.0'\nassert solution('1') == '1.0'\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\\n\") == \"2.6666666666666667\"\nassert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\\n\") == \"3.3333333333333335\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333'\nassert solution('''\n4 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333'\nassert solution('''\n4 20\n0 5 1\n0 5 1\n0 5 1\n0 5 1\n''') == '2.23333333'\nassert solution('''\n6 20\n0 20 0 0 0\n0 20 0 0 0\n0 20 0 0 0\n0 20 0 0 0\n''') == '3.23333333'\nassert solution('''\n6 20\n0 20 0 0 0\n0 20 0 0 0\n0 20 0 0 0\n0 20 0 0 0\n''') == '2.23333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10') == '3.33333333'\nassert solution('0 10 1') == '3.33333333'\nassert solution('0 10 1') == '3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '3.33333333'\nassert solution('3 3') == '3.33333333'\nassert solution('2 2') == '0.5'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333'\n\nassert solution('''3 10\n1 10 2\n1 10 2\n1 10 2\n''') == '1.66666667'\n\nassert solution('''\n5 10\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n''') == '1.0'\n\nassert solution('''\n5 10\n1 10 1\n2 10 2\n3 10 3\n4 10 4\n5 10 5\n6 10 6\n7 10 7\n8 10 8\n9 10 9\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n1 10 1\n''') == '1.0'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10') == '3.33333333'\nassert solution('4 2 3') == '3.33333333'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 3 2') == '1'"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('3 3 2') == '2'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('3 2') == '2'\nassert solution('3 3 2') == '0'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution([3, 3, 2]) == \"1\"\nassert solution([1, 2, 1, 0]) == \"3\"\n\"\"\""
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 3 2\n''') == '1'\nprint(solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n'''))"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 2\n3 2 3\n''') == '1'\n\nassert solution('''\n5\n0 0 0 0 0\n0 0 1 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == '0'\n\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1 1 1\n1 0 0 0 0 0 1 1 1 1 1\n0 0 0 0 0 0 0 0 1 1 1\n1 0 0 0 0 0 0 0 0 1 1\n1 0 0 0 0 0 0 0 0 1 1\n1 0 0 0 0 0 0 0 0 1 1\n1 0 0 0 0 0 0 0 0 1 1\n1 0 0 0 0 0 0 0 0 1 1\n1 0 0 0 0 0 0 0 0 1 1\n1 0 0 0 0 0 0 0 0 1 1\n1 0 0 0 0 0 0 0 0 1 1\n''') == '7'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3 3 2') == '1'\nassert solution('2\\n3 3 2') == '0'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 1 1 1\n''') == '2'\nassert solution('''\n2\n2 2\n''') == '2'\nassert solution('''\n3\n1 1 1\n''') == '0'\nassert solution('''\n5\n5 5 5 5\n''') == '1'\nassert solution('''\n3\n1 2 1\n''') == '1'\n'''\nThis is a sample test function, you can call it and test it in a standalone function.\n'''"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"1\""
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\nabcd\\nabba\\nxyz\\nacbd\\n\\n\"\n) == \"2\"\nassert solution(\n    \"6\\naba\\nbaa\\nbba\\n\\n\"\n) == \"1\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n\nprint(solution(input()))"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '1'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '0'"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''\n4 3\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''\n4 3\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''\n4 3\n1 2\n2 3\n3 3\n''') == '1'\nassert solution('''\n4 3\n1 2\n2 3\n3 3\n''') == '1'\n'''\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n2 3\n2 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n2 1\n1 2\nSample Input:\n4 1\n2 1\nSample Output:\n2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 2\n1 2\n3 4\nSample Input:\n4 1\n1 2\n2 3\nSample Output:\n3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4 2\n1 2\n2 3\n3 4\nSample Input:\n4 1\n1 2\n2 3\n3 4\nSample Output:\n3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5 3\n1 2\n2 3\n1 4\n4 2\nSample Input:\n4 3\n1 2\n2 3\n2 4\nSample Output:\n1\n\"\"\") == \"1\""
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\n\nassert solution('''\n10 10\n1 2\n2 3\n1 4\n3 4\n4 5\n1 5\n3 6\n4 7\n5 8\n6 9\n7 10\n''') == '4'\n\nassert solution('''\n30 30\n1 2\n2 3\n1 4\n3 5\n4 6\n5 7\n6 8\n7 9\n8 10\n9 11\n10 12\n11 13\n12 14\n13 15\n14 16\n15 17\n16 18\n17 19\n18 20\n19 21\n20 22\n21 23\n22 24\n23 25\n24 26\n25 27\n26 28\n27 29\n28 30\n''') == '4'\n\nassert solution('''\n1 10\n2 4\n2 6\n''') == '1'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4\\n') == '3'"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4\\n') == '3'\nassert solution('4 2\\n1 2\\n2 3\\n2 4\\n') == '2'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 2\"\n) == \"3\"\n\nassert solution(\n    \"2 3\"\n) == \"2\"\n\nassert solution(\n    \"2 4\"\n) == \"2\"\n\nassert solution(\n    \"3 3\"\n) == \"1\"\n\nassert solution(\n    \"4 5\"\n) == \"2\""
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''\n1 3\n2 3\n2 4\n''') == '4'\n'''\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n2 3\n2 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 1\n1 2\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 3\n1 2\n2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 1\n1 2\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n1 2\n2 3\n2 4\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 2') == '1'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3\\n4 3\\n1 4') == '0'\nassert solution('2 5\\n5 3\\n1 4') == '1'\nassert solution('2 6\\n6 2\\n5 6') == '1'\nassert solution('10 5\\n1 5\\n8 7\\n2 2') == '1'\nassert solution('100 100\\n100 100\\n100 100') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1'\nassert solution('''\n4 2\n0 0\n1 1\n1 2\n3 4\n''') == '0'\nassert solution('''\n5 5\n0 0\n1 1\n1 2\n1 3\n2 3\n''') == '2'\nassert solution('''\n6 6\n1 1\n1 3\n1 5\n2 3\n2 5\n3 5\n''') == '3'\nassert solution('''\n8 8\n0 0\n1 1\n1 3\n1 5\n1 6\n2 3\n2 5\n3 5\n4 4\n''') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(\"\"\"\n1 2\n2 5\n3 5\n4 6\n5 6\n3 7\n5 7\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 2\n2 5\n3 5\n4 6\n5 6\n3 7\n5 7\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 2\n2 5\n3 5\n4 6\n5 7\n3 7\n5 7\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 2\n2 5\n3 5\n4 6\n5 7\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1'\nassert solution('''\n5 5\n0 0\n0 1\n0 2\n1 1\n1 2\n1 3\n1 4\n1 5\n0 6\n0 7\n0 8\n''') == '2'\n\nassert solution('''\n3 3\n-1 0\n-1 1\n1 2\n1 3\n1 4\n''') == '0'\n\nassert solution('''\n10 10\n-10 -10\n0 0\n0 1\n-1 0\n-1 1\n0 2\n0 3\n0 4\n-1 0\n-1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n-1 11\n-1 12\n-1 13\n-1 14\n-1 15\n-1 16\n-1 17\n0 18\n0 19\n-1 20\n0 21\n0 22\n-1 23\n0 24\n0 25\n-1 26\n0 27\n0 28\n0 29\n0 30\n0 31\n0 32\n0 33\n0 34\n0 35\n0 36\n0 37\n0 38\n0 39\n0 40\n0 41\n0 42\n0 43\n0 44\n0 45\n0 46\n0 47\n0 48\n0 49\n0 50\n0 51\n0 52\n0 53\n0 54\n0 55\n0 56\n0 57\n0 58\n0 59\n0 60\n0 61\n0 62\n0 63\n0 64\n0 65\n0 66\n0 67\n0 68\n0 69\n0 70\n0 71\n0 72\n0 73\n0 74\n0 75\n0 76\n0 77\n0 78\n0 79\n0 80\n0 81\n0 82\n0 83\n0 84\n0 85\n0 86\n0 87\n0 88\n0 89\n0 90\n0 91\n0 92\n0 93\n0 94\n0 95\n0 96\n0 97\n0 98\n0 99\n0 100\n0 101\n0 102\n0 103\n0 104\n0 105\n0 106\n0 107\n0 108\n0 109\n0 110\n0 111\n0 112\n0 113\n0 114\n0 115\n0 116\n0 117\n0 118\n0 119\n0 120\n0 121\n0 122\n0 123\n0 124\n0 125\n0 126\n0 127\n0 128\n0 129\n0 130\n0 131\n0 132\n0 133\n0 134\n0 135\n0 136\n0 137\n0 138\n0 139\n0 140\n0 141\n0 142\n0 143\n0 144\n0 145\n0 146\n0 147\n0 148\n0 149\n0 150\n0 151\n0 152\n0 153\n0 154\n0 155\n0 156\n0 157\n0 158\n0 159\n0 160\n0 161\n0 162\n0 163\n0 164\n0 165\n0 166\n0 167\n0 168\n0 169\n0 170\n0 171\n0 172\n0 173\n0 174\n0 175\n0 176\n0 177\n0 178\n0 179\n0 180\n0 181\n0 182\n0 183\n0 184\n0 185\n0 186\n0 187\n0 188\n0 189\n0 190\n0 191\n0 192\n0 193\n0 194\n0 195\n0 196\n0 197\n0 198\n0 199\n0 200\n0 201\n0 202\n0 203\n0 204\n0 205\n0 206\n0 207\n0 208\n0 209\n0 210\n0 211\n0 212\n0 213\n0 214\n0 215\n0 216\n0 217\n0 218\n0 219\n0 220\n0 221\n0 222\n0 223\n0 224\n0 225\n0 226\n0 227\n0 228\n0 229\n0 230\n0 231\n0 232\n0 233\n0 234\n0 235\n0 236\n0 237\n0 238\n0 239\n0 240\n0 241\n0 242\n0 243\n0 244\n0 245\n0 246\n0 247\n0 248\n0 249\n0 250\n0 251\n0 252\n0 253\n0 254\n0 255\n0 256\n0 257\n0 258\n0 259\n0 260\n0 261\n0 262\n0 263\n0 264\n0 265\n0 266\n0 267\n0 268\n0 269\n0 270\n0 271\n0 272\n0 273\n0 274\n0 275\n0 276\n0 277\n0 278\n0 279\n0 280\n0 281\n0 282\n0 283\n0 284\n0 285\n0 286\n0 287\n0 288\n0 289\n0 290\n0 291\n0 292\n0 293\n0 294\n0 295\n0 296\n0 297\n0 298\n0 299\n0 300\n0 301\n0 302\n0 303\n0 304\n0 305\n0 306\n0 307\n0 308\n0 309\n0 310\n0 311\n0 312\n0 313\n0 314\n0 315\n0 316\n0 317\n0 318\n0 319\n0 320\n0 321\n0 322\n0 323\n0 324\n0 325\n0 326\n0 327\n0 328\n0 329\n0 330\n0 331\n0 332\n0 333\n0 334\n0 335\n0 336\n0 337\n0 338\n0 339\n0 340\n0 341\n0 342\n0 343\n0 344\n0 345\n0 346\n0 347\n0 348\n0 349\n0 350\n0 351\n0 352\n0 353\n0 354\n0 355\n0 356\n0 357\n0 358\n0 359\n0 360\n0 361\n0 362\n0 363\n0 364\n0 365\n0 366\n0 367\n0 368\n0 369\n0 370\n0 371\n0 372\n0 373\n0 374\n0 375\n0 376\n0 377\n0 378\n0 379\n0 380\n0 381\n0 382\n0 383\n0 384\n0 385\n0 386\n0 387\n0 388\n0 389\n0 390\n0 391\n0 392\n0 393\n0 394\n0 395\n0 396\n0 397\n0 398\n0 399\n0 400\n0 401\n0 402\n0 403\n0 404\n0 405\n0 406\n0 407\n0 408\n0 409\n0 410\n0 411\n0 412\n0 413\n0 414\n0 415\n0 416\n0 417\n0 418\n0 419\n0 420\n0 421\n0 422\n0 423\n0 424\n0 425\n0 426\n0 427\n0 428\n0 429\n0 430\n0 431\n0 432\n0 433\n0 434\n0 435\n0 436\n0 437\n0 438\n0 439\n0 440\n0 441\n0 4"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 0\n2 1\n''') == '1'\nassert solution('''\n3\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1'\nassert solution('''\n3\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1'\nassert solution('''\n4\n1 0\n0 1\n1001 1\n1 3\n2 3\n''') == '1'\nassert solution('''\n4\n1 0\n0 1\n1001 1\n1 3\n2 3\n''') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\nSample Output:\n1\n0\n\"\"\") == \"1\"\nassert solution(\"\"\"3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n4 4\nSample Output:\n0\n\"\"\") == \"0\"\nassert solution(\"\"\"3 2\n0 2\n0 1\n1 3\nSample Output:\n1\n0\n\"\"\") == \"1\"\nassert solution(\"\"\"2 3\n0 2\n0 1\n2 2\nSample Output:\n1\n0\n\"\"\") == \"0\"\nassert solution(\"\"\"3 2\n1 0\n0 1\n1 3\nSample Output:\n1\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 3\n1 0\n0 1\n0 2\n2 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 3\n1 0\n0 1\n2 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n1 1000\n1 3\n2 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2 3\n1 3\n3 4\n\"\"\") == \"0\""
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1\n3\n2\n2\n1\n2\n2\n1\"\"\") == '7'\nassert solution(\"\"\"1\n2\n2\n1\"\"\") == '1'\nassert solution(\"\"\"1\n1\n1\n1\"\"\") == '2'\nassert solution(\"\"\"2\n3\n3\"\"\") == '1'\nassert solution(\"\"\"2\n2\n2\"\"\") == '3'\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"7\"\nassert solution(\"\"\"\n4\n4\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3''') == '7'\nassert solution('''3\n2\n2''') == '7'\nassert solution('''5\n2\n1''') == '7'\nassert solution('''3\n2\n1''') == '7'\nassert solution('''1\n2\n1''') == '7'\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1\n2\n3\"\"\") == \"7\"\nassert solution(\"\"\"3\n2\n2\"\"\") == \"7\"\nassert solution(\"\"\"5\n2\n1\"\"\") == \"8\"\nassert solution(\"\"\"3\n2\n1\"\"\") == \"7\"\nassert solution(\"\"\"1\n2\n3\"\"\") == \"7\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3\n5 2\n3 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"6\"\n\"\"\")\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == '7'\nassert solution('''8\n1 3 3\n3 2 3\n3 2 1\n3 2 1\n3 1 2\n3 2 2\n3 1 3''') == '6'\nassert solution('''12\n1 4 2\n2 5 2\n2 3 4\n4 4 2\n2 4 3\n3 4 3\n2 2 4\n3 3 4\n3 1 2\n2 4 4\n1 3 2\n1 3 3\n1 4 3\n1 1 2\n3 2 3\n2 4 3\n2 3 3\n3 1 3\n2 4 3\n2 3 3\n2 4 2\n2 2 4\n2 2 4\n1 4 4\n1 3 4\n2 2 2\n3 3 3\n3 2 4\n1 2 2\n3 1 3\n1 3 3\n2 2 3\n2 2 3\n2 4 3\n2 4 3\n1 1 3\n3 1 2\n2 3 3\n2 3 2\n3 1 3\n2 3 3\n2 3 3\n2 2 3\n2 2 3\n2 4 3\n2 4 3\n3 2 3\n2 2 3\n2 2 3\n2 2 3\n2 4 3\n2 4 3\n2 4 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 4 3\n2 4 3\n2 4 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 4 3\n2 4 3\n2 4 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 4 3\n2 4 3\n2 4 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 4 3\n2 4 3\n2 4 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 4 3\n2 4 3\n2 4 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3\n2 2 3"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"7\"\n\"\"\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"7\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3') == '7'\nassert solution('3\\n2 2 2\\n1 2 3\\n1 2 1\\n1 2 1\\n1 2 3') == '7'\n\n\"\"\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '7'\nassert solution('3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3') == '7'\n\nSample Input:\n7\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\nSample Output:\n7\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '20'\nassert solution('''\n2 5\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '45'\nassert solution('''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '25'\n'''\n\nn, k = (int(i) for i in input().split())\nl = {}\nfor _ in range(n):\n    c, d = input().split()\n    d = int(d)\n    if c in l:\n        l[c][1] += d\n    else:\n        l[c] = [0, d]\n\npre = {}\nfor _ in range(k):\n    c, d = input().split()\n    d = int(d)\n    if c in pre:\n        pre[c][1] += d\n    else:\n        pre[c] = [0, d]\n\nfor i, j in l.items():\n    if j[0] == 0:\n        j[0] = j[1]\n\nfor i, j in pre.items():\n    if j[0] == 0:\n        j[0] = j[1]\n\nc = sorted(l.items(), key=lambda x: (x[0], -x[1][0]))\np = sorted(pre.items(), key=lambda x: (x[0], -x[1][0]))\n\nans = 0\nfor i, j in c:\n    if j[0]!= 0:\n        ans += j[1]\n\nfor i, j in p:\n    if j[0]!= 0:\n        ans += j[1]\n\nprint(ans)"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '20'\nassert solution('10 5') == '10'\n\"\"\""
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 2\") == \"20\"\nassert solution(\"linearalgebra 10\") == \"10\"\nassert solution(\"calculus1 10\") == \"10\"\nassert solution(\"calculus2 20\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"20\"\nassert solution(\"5 1\") == \"20\"\nassert solution(\"4 5\") == \"20\"\nassert solution(\"9 9\") == \"20\"\n\n\"\"\"\nimport os\nimport sys\nimport math"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"5\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"20\"\nassert solution(\"5 3\") == \"22\""
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n2\\n1') == '2'\nassert solution('5\\n2\\n1\\n2\\n2') == '4'\nassert solution('10\\n20\\n20\\n10') == '19'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '20'\nassert solution('1') == '10'\nassert solution('2') == '20'\nassert solution('3') == '25'\nassert solution('4') == '15'\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == \"20\"\nprint(solution(*map(int, input().split())))\n\"\"\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\") == \"6\"\nassert solution(\"4 5\\n2 4 1\\n4 3 5\\n1 1 3\\n3 4 5\\n4 1 4\\n3\") == \"8\"\n\n##"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '6'\nassert solution('2 2') == '1'\nassert solution('3 3') == '3'"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2\") == \"3\"\nassert solution(\"2 3 4\") == \"4\"\nassert solution(\"3 4 1\") == \"4\"\nassert solution(\"4 1 2\") == \"4\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"6\"\n\"\"\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3''') == '6'\nassert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\nSample Output:\n13\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n2 3\n3 4 1\n3 4 1\n3\n1 4 2\n3 3 3\n4 3 6''') == '6'\nassert solution('''4 3\n2 3 2\n3 4 1\n3 4 1\n3''') == '8'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3\n4 2\n5\n2 5\n3 4\n''') == '6'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3''') == \"6\"\nassert solution('''5 5\n1 2 5\n2 3 4\n3 4 7\n4 7 2\n4''') == \"13\"\nassert solution('''8 6\n1 2 3 4 5 6\n2 3 4 5 6 7\n3 4 5 6 7 8\n4 5 6 7 8 9\n4 5 6 7 8''') == \"10\"\n\nprint('All tests passed!')\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\n4 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3') == '6'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'impossible'\nassert solution(\"\"\"2\n4\n4\n\"\"\") == 'impossible'\nassert solution(\"\"\"1\n5\n4\n\"\"\") == '3'\nassert solution(\"\"\"10\n10\n10\n\"\"\") == 'impossible'"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n') == '2'\nassert solution('3 3 2\\n1 3\\n3 2\\n2 4\\n4 1\\n3 1\\n3 2\\n1 4\\n2 3\\n1 3\\n') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '2 1 1\\n2\\n3\\n1 1\\n1 1\\n') == 'impossible'\nassert solution(\n    '2 1 1\\n2\\n3\\n1 2\\n1 3\\n') == '2'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 4 1\n3\n3 3\n2 1 2\n3 2 1\n1 2 3\n3 1 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n') == 'impossible'\nassert solution('4 3 1\\n1 2 3\\n1 2 4\\n1 3 2\\n2 3 2\\n2 4 2\\n3 4 2\\n2 2 3\\n2 3 3\\n') == '2'\nassert solution('2 4 1\\n2 3 1\\n1 3 2\\n1 3 3\\n') == 'impossible'"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 1\\n2\\n3\\n1 2\\n2 3 1') == 'impossible'\nassert solution('3 2\\n3\\n1 2\\n2 3 1') == '2'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 1') == \"impossible\"\nassert solution('2') == \"2\"\nassert solution('2') == \"impossible\"\nassert solution('1 1') == \"2\""
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 1 1\"\n    \"2\"\n    \"3\"\n    \"1 2\"\n    \"2 3 1\"\n) == \"2\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1\\n3\\n1 2\\n3') == 'impossible'\nassert solution('2 1 1\\n3\\n1 2\\n3') == '2'\nassert solution('2 1 1\\n3\\n1 2\\n3') == 'impossible'\nassert solution('2 1 1\\n3\\n1 2\\n3') == '2'\nassert solution('2 1 1\\n3\\n1 2\\n3') == 'impossible'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n''') == '500.00'\nassert solution('''\n2\n200 250\n100 250\n''') == '1000.00'\n'''\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"2 1\") == \"\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"0.00\"\nassert solution(\"2\\n250 250\\n250 750\\nSample Output:\") == \"500.00\"\nprint('\"Run\" is good practice.')\nprint('\"Check\" is better than nothing.')\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2\"\n    \"250 250\"\n    \"250 750\"\n) == \"500.00\"\nassert solution(\n    \"3\"\n    \"500 100\"\n    \"250 200\"\n    \"250 700\"\n) == \"250.00\"\nassert solution(\n    \"10\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \"0 0\"\n    \""
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '500.00'\n\n\"\"\"\nfrom math import ceil"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n1\n''') == '0.50'\n\nassert solution('''\n2\n5\n10 10\n10 10\n''') == '75.00'\n\nassert solution('''\n5\n5\n5 5\n5 5\n5 5\n''') == '100.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1') == '1.0'\nassert solution('2\\n1 1\\n1 1') == '1.0'\nassert solution('2\\n1 1\\n2 2') == '1.0'\nassert solution('2\\n1 1\\n4 4') == '1.0'\nassert solution('1\\n0') == '0.0'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n250 250\n250 750\n750 750\n''') == '500.00'\nassert solution('''\n3\n250 250\n250 750\n750 750\n''') == '600.00'\nassert solution('''\n10\n0 0\n100 100\n200 200\n100 100\n100 200\n0 0\n0 0\n100 100\n100 100\n100 100\n''') == '1000.00'"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n8 10\n1 3\n2 2\n4 4\n''') == '500.00'\nassert solution('''\n3\n8 10\n1 3\n2 2\n4 4\n''') == '2000.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1\n1\n\"\"\") == \"100.00\"\nprint(\"First Test OK\")\n\nassert solution(\n\"\"\"\n5\n0 0\n0 50\n100 100\n50 100\n100 50\n\"\"\") == \"500.00\"\nprint(\"Second Test OK\")\n\nassert solution(\n\"\"\"\n10\n0 0\n100 50\n50 100\n50 150\n150 100\n100 150\n150 150\n100 100\n50 50\n0 100\n\"\"\") == \"200.00\"\nprint(\"Third Test OK\")\n\nassert solution(\n\"\"\"\n1000\n0 0\n100 50\n50 100\n50 150\n150 100\n100 150\n150 150\n100 100\n50 50\n0 100\n\"\"\") == \"2000.00\"\nprint(\"Fourth Test OK\")\n\nassert solution(\n\"\"\"\n10000\n0 0\n2000 50\n50 100\n50 150\n150 100\n100 150\n150 150\n100 100\n50 50\n0 100\n\"\"\") == \"35000.00\"\nprint(\"Fifth Test OK\")"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n2 100 10\n100 1 10\nSample Output:\n30\n''') == '0'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '0'\nassert solution('1 2') == '3'\nassert solution('2') == '4'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '0'\nassert solution('5 2') == '5'\nassert solution('5 5') == '5'\n'''"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2\\n2 100 10\\n100 1 10') == '0'\nprint('SUCCESS')\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '0'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n2 100 10\n100 1 10\n''') == '0'\nassert solution('''\n2 1\n100 100\n''') == '200'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n2 100 10\n100 1 10\n''') == '0'\nassert solution('''\n5 2\n1 100\n1 2\n2 5\n''') == '3'\nprint('All tests passed.')\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"4 3\") == \"4\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"0\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 2\") == \"1\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '2'\nassert solution('''80 50 2 3\n75 5 25 20 50 35\n50 5 25 35''') == '1'\nassert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '0'\nassert solution('''75 5 25 20 50 35\n50 5 25 35''') == '0'\nassert solution('''75 5 25 20 50 35\n50 5 25''') == '1'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35') == '2'\nassert solution('80 50 2 5 75 5 25 20 50 35\\n50 5 25 35') == '1'\nassert solution('80 50 2 5 75 5 25 20 50 35\\n50 5 25 35') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"80 50 3 2\\n\" +\n    \"75 5 25 20 50 35\\n\" +\n    \"50 5 25 35\") == \"2\"\n\nassert solution(\n    \"10 50 3 2\\n\" +\n    \"25 5 25 20 50\\n\" +\n    \"50 5 25 20 50\") == \"2\"\n\nassert solution(\n    \"10 50 3 2\\n\" +\n    \"25 5 25 20 50\\n\" +\n    \"10 5 50 30 20\") == \"1\"\n\nassert solution(\n    \"10 50 3 2\\n\" +\n    \"25 5 25 20 50\\n\" +\n    \"30 5 50 30 20\") == \"0\"\n\nassert solution(\n    \"10 50 3 2\\n\" +\n    \"20 5 25 50\\n\" +\n    \"10 5 50 30 20\") == \"0\""
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n') == '2'\nassert solution('10 10 10 20 20 20 50 50 50 100 100 50 10 20 20 20 100 100 50 50 50\\n
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\"\n) == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35') == '2'\nassert solution('80 80 80 80\\n75 5 25 20 50 35\\n50 5 25 20 50 35\\n5 5 5 5\\n50 5 25 35\\n50 5 25 20 50 35') == '1'\nassert solution('80 80 80 80\\n75 5 25 20 50 35\\n50 5 25 20 50 35\\n5 5 5 5\\n50 5 25 20 50 35') == '1'\nassert solution('80 80 80 80\\n75 5 25 20 50 35\\n50 5 25 20 50 35\\n5 5 5 5\\n50 5 25 20 50 35') == '1'\nassert solution('80 80 80 80\\n75 5 25 20 50 35\\n50 5 25 20 50 35\\n5 5 5 5\\n50 5 25 20 50 35') == '1'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35') == '2'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '2'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '2'\nassert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25''') == '3'\nassert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '1'\nassert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 5''') == '2'\nassert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25''') == '2'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([80, 50, 3, 2]) == '2'\nassert solution([75, 5, 25, 20, 50, 35]) == '3'\nassert solution([50, 5, 25, 35]) == '1'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'AA'\nassert solution('3 4') == 'AAAA'\nassert solution('3 5') == 'AAABB'\nassert solution('6 6') == 'AAABBBBB'\nassert solution('6 6') == 'AAABBBBB'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\n2211\n1112\n1112\n''') == 'AAAABBBB'\nassert solution('''3 3\n2222\n1112\n2222\n''') == 'AAAB'\nassert solution('''3 4\n2211\n1112\n1112\n''') == 'AAAABBBB'\nassert solution('''1\n1\n''') == 'impossible'"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\nBB..\\nBBBB\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112\\n') == 'AAAA\\nBBBB\\n...A\\nBBBB'\nassert solution('1 2\\n2 2\\n1 2\\n') == 'BBBB'\nassert solution('1 2\\n2 2\\n1 2\\n') == 'BBBB'\nassert solution('3 3\\n11 12\\n11 12\\n') == 'AAAA'\nassert solution('3 3\\n11 12\\n11 12\\n') == 'AAAA'"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"AAAA\\n...A\\n....\\n....\"\n\n\n\nimport math\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\n'\nassert solution('2 2\\n1.1\\n2.2\\n3.3\\n') == 'AAAA\\n...A\\n....\\n'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4\n2211\n1112\n1112''') == 'AAAAB'\nassert solution('''2 4\n2211\n2211\n2211''') == 'AAAABB'\nassert solution('''2 4\n2211\n2211\n2211''') == 'AAAABB'\nassert solution('''3 4\n2211\n2211\n2211''') == 'AAABBB'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"BBBB\"\nprint(solution())"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == \"AAAA\\n...A\\n....\\n\"\nassert solution('2 2') == \"A...\"\nassert solution('3 3') == \"ABAB\\nABAB\\nABAB\"\nassert solution('2 0') == \"A\\n\"\nassert solution('0 2') == \"B\\n\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'AAAA\\n...A\\n....\\n....\\nCCCC'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n\"\"\") == \"9\"\nassert solution(\"\"\"\n4 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n\"\"\") == \"9\""
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n\"\"\") == \"9\""
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('3 4 1 2 3 2') == '8'\nassert solution('4 3 1 2 1 3') == '5'\nassert solution('1 4 1 2 1 3') == '4'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('3 4 1 2 3 2') == '11'\nassert solution('4 3 1 2 1') == '4'\n\nsample_input = '3 4 1 2 3 2'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 3 3') == '6'\nassert solution('2 4 1 2 3 2') == '11'\nassert solution('3 5 1 3 2') == '9'\nassert solution('3 2 1 1 3 2') == '10'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 3 3') == \"9\"\nassert solution('3 4 1 2 3 2') == \"8\"\nassert solution('4 3 1 2 1') == \"7\"\nassert solution('1 4 1 2 1 3') == \"5\"\nassert solution('1 2 3 4 1') == \"5\"\n\n--Snippet--\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''4 3 1 2 1\n1 3 1 2 1\n3 4 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n1 4 1 2 1\n3 4 1 2 1\n1 3 1 2 1\n1 2 4 1 2 1\n2 2 4 1 2 1\n2 2 4 1 2 1\n1 2 4 1 2 1\n3 4 1 2 1\n2 4 1 2 1\n1 4 1 2 1\n1 3 1 2 1\n2 2 4 1 2 1\n2 2 4 1 2 1\n2 2 4 1 2 1\n1 2 4 1 2 1\n1 3 1 2 1\n1 4 1 2 1\n''') == '18'\nassert solution('''4 3 1 2 1\n1 3 1 2 1\n3 4 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n1 4 1 2 1\n3 4 1 2 1\n1 3 1 2 1\n1 2 4 1 2 1\n2 2 4 1 2 1\n2 2 4 1 2 1\n1 2 4 1 2 1\n3 4 1 2 1\n2 4 1 2 1\n1 4 1 2 1\n''') == '25'\nassert solution('''5 4 1 2 1\n1 5 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n1 4 1 2 1\n3 4 1 2 1\n2 5 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n1 3 1 2 1\n1 3 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n1 3 1 2 1\n''') == '35'\nassert solution('''6 4 1 2 1\n1 6 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n1 4 1 2 1\n3 4 1 2 1\n2 6 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n1 3 1 2 1\n1 3 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n2 4 1 2 1\n1 3 1 2 1\n''') == '16'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('4 3 1 2 1') == '8'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''2\n3\n2\n''') == '1'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n'''\n) == '20.396078'\nassert solution(\n'''\n5 4 3 6\n0 2 7\n1 4 8\n1 6 7\n4 2 5\n1 7\n'''\n) == '27.73510'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'IMPOSSIBLE'\nassert solution('5 1 1 2') == '4.5'\nassert solution('8 7 7 3') == '3.5'\nprint('all tests passed')\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 'Impossible'\nassert solution('4 0 1 1') == 'Impossible'\nassert solution('1 0 1 2') == '1.41421356'\nassert solution('1 1 2 3') == '1.41421356'\nassert solution('3 3 0 1') == '3.41421356'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2 2 8') == '20.396078'\nassert solution('6 0 6') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2 2 8') == '20.396078'\nassert solution('0 0 6') == '20.396078'\nassert solution('3 4 7') == 'IMPOSSIBLE'\nassert solution('0 8 8') == '20.396078'\nassert solution('6 8 8') == '20.396078'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2 2 4\") == \"20.396078\"\nassert solution(\"6 2 2 8\") == \"20.396078\"\nassert solution(\"5 2 2 7\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\") == \"IMPOSSIBLE\"\nassert solution(\"6 0 2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 2 3') == '4'\nassert solution('5 2 2 3') == '2'\nassert solution('5 2 4 3') == 'IMPOSSIBLE'\nassert solution('1 2 1 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\nassert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == 'IMPOSSIBLE'\nassert solution('''\n6 2 3 3\n0 0 4\n3 4 5\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '9.354838'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\nassert solution('''\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n''') == 'Infinity'\nassert solution('''\n5 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '17.151247'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\nassert solution(\"2 4 4 4 6\\n0 0 3 0\\n3 3 1 1\\n2 2 2 1\\n3 2 1 1\\n2 3 1 1\\n2 4 1 1\\n\") == \"11.40476\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8''') == 'c'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abca') == 'c'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'd'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abca\") == \"bc\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"cd\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"rr\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\nSample Input 2:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n2\n3 8 9 10\nSample Output 2:\nc\nd\na\nSample Input 3:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n7\n0 1 2 3 4 5 6 7\nSample Output 3:\nc\ne\nd\nSample Input 4:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n5\n0 0 1 1 1\nSample Output 4:\nb\ne\na\nSample Input 5:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n5\n0 1 2 3 4\nSample Output 5:\na\nb\nc\ne\nf\nd\nSample Input 6:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n4\n0 5 1\nSample Output 6:\nb\na\nc\nf\nSample Input 7:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n5\n0 1 2 3 4 5 6 7 8 9\nSample Output 7:\na\nc\nb\ne\nd\na\nSample Input 8:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n10\n0 2 3 5 6 8 9\nSample Output 8:\nc\nf\nc\nf\ne\ne\ne\nd\na\na\nSample Input 9:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n10\n0 1 2 3 4 5 6 7 8 9\nSample Output 9:\nc\ne\nb\nd\ne\ne\ne\nc\nf\ne\nSample Input 10:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n1\n0 8\nSample Output 10:\nc\ne\nc\ne\ne\ne\nc\ne\ne\nSample Input 11:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n2\n5 0 1 2 3 4\nSample Output 11:\nc\ne\nc\ne\ne\ne\nc\ne\ne\nSample Input 12:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n5\n0 0 1 1 1\nSample Output 12:\nc\ne\nc\ne\ne\ne\nc\ne\ne\nSample Input 13:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n5\n0 1 2 3 4\nSample Output 13:\nb\ne\nc\ne\nd\ne\nc\ne\ne\nSample Input 14:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n10\n0 2 3 4 5 6 7 8 9\nSample Output 14:\nc\ne\nb\nd\ne\ne\nc\nf\ne\ne\nSample Input 15:\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n10\n10\n0 1 2 3 4 5 6 7 8 9\nSample Output 15:\nc\ne\nb\nd\ne\ne\nc"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == \"a\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"d\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abca') == 'bc'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'x'"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'v'\nassert solution('ii jj kk ll mm') == 'i'\nassert solution('hhh zz') == 'h'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'a'\nassert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'b'\nassert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'c'"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\"\n    ) == \"b\"\n\"\"\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('hobotnica') == '12'\nassert solution('robot') == '10'\nassert solution('hobi') == '16'\nassert solution('hobit') == '7'\nassert solution('rakija') == '0'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrakija\\n') == '12'\nassert solution('6\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrakija\\n') == '10'\nassert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrakija\\n') == '16'\nassert solution('3\\nhobotnica\\nrobot\\nhobi\\nhobit\\n') == '7'"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '12'\nassert solution('''\n3\nrobi\nhobi\nhobit\n''') == '10'\nassert solution('''\n5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n''') == '16'\nassert solution('''\n4\nrobi\nhobi\nhobit\nrobi\n''') == '7'"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n''') == '12'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n') == '12'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi''') == '12'\nassert solution('''4\nrobi\nhobi\nhobit\nrakija''') == '10'\n\n----------------------------------------"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('15 2\\nq b k e y') == 'q b k e y'\n'''\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n\nSample Input:\n13 10\nTTKKIYYKKIYYK\nSample Output:\nTPWMPOTKGKPVHJ\n\"\"\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"3 2 1 4\", \"Should be 3 2 1 4\"\nassert solution(\"2 2 2 2 2 2\") == \"2 2 1 2 2 2\", \"Should be 2 2 1 2 2 2\"\nassert solution(\"4 4 4 4 4 4\") == \"4 4 4 4 4 4\", \"Should be 4 4 4 4 4 4\"\nassert solution(\"1 2 2 2 2 2\") == \"1 2 1 2 2 2\", \"Should be 1 2 1 2 2 2\"\nassert solution(\"2 2 2 2 2 2 2\") == \"2 2 1 2 2 2 2\", \"Should be 2 2 1 2 2 2 2\"\n\nprint(solution(input()))\n\n\n\"\"\""
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"10 10\\nA B C\") == \"HELLO WORLD\"\nassert solution(\"13 10\\nA B C D E F\") == \"HELLO WORLD\"\nassert solution(\"10 1\\nA\") == \"A\"\nassert solution(\"11 1\\nA\") == \"A\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ROW\") == \"ROW\"\nassert solution(\"AAABBBCC\") == \"AAABBCCC\"\nassert solution(\"A\" * 100) == \"A\" * 100"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    14 4\n    JQ IRKEYFG EXQ\n''') == 'THIS IS A TEST'\n\n'''\nTest 2:\n\nConsider the following example:\n\nSample Input:\n10 10\nABAB\nSample Output:\nA"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\nABBCBB''') == 'THIS IS A TEST'\n\nassert solution('''8 4\nFFG GG HEERTT''') == 'THIS IS A TEST'\n\nassert solution('''16 4\nFROM EDWARDS RIGHT ON A LONG PATH FINDING THE FIRST POSSIBLE NUMBER OF TELEPHONES''') == 'THIS IS A TEST'\n\nassert solution('''19 4\nTELEMECANICAL''') == 'THIS IS A TEST'\n\nassert solution('''20 4\nTELEMECANICAL''') == 'THIS IS A TEST'\n\n'''"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_fmt()) == \"THIS IS A TEST\"\n\nSample Input 2:\n1 5\nABCDE\nSample Output 2:\nABCDE\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''14 4\nJQ IRKEYFG EXQ''') == 'THIS IS A TEST'\n\nSample Input 2:\n10 9\nGUJGULDDJG\nSample Output 2:\nGUJGULDDJG'''"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n9\nBACAB\n''') == 'THIS IS A TEST'\nassert solution('''\n15\nJQ IISHQAZEGB HXQDG\n''') == 'THIS IS A TEST'\nassert solution('''\n13\nBACAB\n''') == 'THIS IS A TEST'\nassert solution('''\n16\nJQ IISHQAZEGB HXQDG\n''') == 'THIS IS A TEST'\n'''\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2.6\") == \"135\"\nassert solution(\"2.7\") == \"270270\"\nassert solution(\"5.4\") == \"270\"\nassert solution(\"-1.3\") == \"No solution\"\nassert solution(\"-0.2\") == \"No solution\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2.6') == '135'\nassert solution('1.2') == '135135'\nassert solution('2.1') == '135135135'\nassert solution('0.1') == '135135135135'\nassert solution('-1.2') == '-135135135135'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2.6') == '135'\nassert solution('1.6') == '1'\nassert solution('1.7') == '1'\nassert solution('1.8') == '2'\nassert solution('1.9') == '2'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.2') == '135'\nassert solution('2.6') == '135135'\nassert solution('1.2.3.4.5.6') == '135135135135'\nassert solution('1.2.3.4.5.6.7') == '135135135135135135135135'\nassert solution('1.2.3.4.5.6.7.8') == '135135135135135135135135135135135135'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2.6\") == \"135\"\nassert solution(\"2.6\") == \"270\"\nassert solution(\"2.6\") == \"135135\"\nassert solution(\"2.6\") == \"270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    2.6\n    '''\n) == '135\\n270270\\n'\nassert solution(\n    '''\n    5776\n    '''\n) == ''\n\nimport math"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2.6\") == \"135\"\nassert solution(\"10\") == \"\"\nassert solution(\"8\") == \"\"\nassert solution(\"1.9\") == \"135135\"\n\"\"\"\n\n\n\"\"\"\nINPUT:\n    1.9\nOUTPUT:\n    135135\n\"\"\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n12\n
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(1) == 'No solution'\nassert solution(2.6) == '135'\nassert solution(2.15) == '135135'\nassert solution(2.4) == '135135'\nassert solution(2.135) == '135135'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2.6') == '135'\nassert solution('2.6.5.6') == '135135'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\n\nassert solution('''\n3\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '2'\n\nassert solution('''\n5\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '3'\n\nassert solution('''\n10\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\n\nassert solution('''\n100\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '101'"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '4', 'Fourth test case'\nassert solution('5') == '2', 'Fifth test case'\nassert solution('1') == '0', 'First test case'\nassert solution('2') == '1', 'Second test case'\nassert solution('3') == '1', 'Third test case'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9') == '4'\nassert solution('1\\n0 1\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '0'\nassert solution('2\\n0 1\\n3 7\\n4 5\\n6 5\\n9') == '1'"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\n'''"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == \"4\"\nassert solution('''3\n0 0\n1 1\n2 2\nSample Output:\n1\n''') == \"1\"\nassert solution('''10\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\nSample Output:\n14\n''') == \"14\"\nassert solution('''21\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\nSample Output:\n21\n''') == \"21\"\nassert solution('''3\n0 0\n1 1\n2 2\nSample Output:\n1\n''') == \"1\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '4'\nassert solution('''5\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3''') == '5'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\") == \"4\"\nassert solution(\"4\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == \"0\""
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\"\nprint(solution(*[input() for _ in range(int(input()))]))\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('4\\n1 2\\n1 3\\n1 4') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000'\nassert solution('3\\n1 2\\n1 3') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000'\nassert solution('1\\n1') == '0.0000000 0.0000000\\n1.0000000 0.0000000'\nassert solution('1') == '0.0000000 0.0000000\\n1.0000000 0.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n6 6\n6 7\n6 8\n6 9\n6 10\n7 7\n7 8\n7 9\n7 10\n8 8\n8 9\n8 10\n9 9\n9 10\n10 10\n''') == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n1.0000000 1.0000000\n0.0000000 -1.0000000\n-1.0000000 -1.0000000\n0.0000000 -1.0000000\n1.0000000 1.0000000\n1.0000000 -1.0000000\n-1.0000000 1.0000000\n0.0000000 -1.0000000\n-1.0000000 -1.0000000\n0.0000000 0.0000000\n1.0000000 1.0000000\n0.0000000 1.0000000\n-1.0000000 -1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n-1.0000000 -1.0000000\n0.0000000 -1.0000000\n1.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n-1.0000000 -1.0000000\n0.0000000 1.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 1.0000000\n1.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 1.0000000\n-1.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 1.0000000\n0.0000000 -1.0000000\n-1.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000\n1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 -1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n1.0000000 1.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 -1.0000000\n-1.0000000 0.0000000\n-1.0000000 1.0000000\n1.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n-1.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n-1.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000\n1.0000000 0.0000000\n1.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n-1.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 1.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n-1.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 -1.0000000\n0.0000000 1.0000000\n-1.0000000 -1.0000000\n-1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 -1.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000\n-1.0000000 1.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n-1.0000000 0.0000000\n0.0000000 0.0000000\n-1.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n-1.0000000 1.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 -1.0000000\n0.0000000 -1.0000000\n0.0000000 -1.0000000\n0.0000000 -1.0000000\n-1.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n-1.0000000 0.0000000\n-1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n-1.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n-1.0000000 1.0000000\n0.0000000 -1.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 -1.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000\n-1.0000000 1.0000000\n-1.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000 0.0000000\n0.0000000"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('2\\n1 2') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000'\nassert solution('5\\n1 2\\n1 3') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n1 2\n1 3\n1 4\n1 5\n\"\"\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"\"\"\n1\n1 2\n\"\"\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\"\nassert solution(\"\"\"\n3\n2 1\n\"\"\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\"\nassert solution(\"\"\"\n4\n4 1 2\n4 3 2\n\"\"\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n-1.0000000 1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n\"\"\") == \"0.0000000 0.0000000\"\n\nassert solution(\"\"\"\n10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n\"\"\") == \"0.0000000 0.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2\n1 3\n1 4\n1 5\n''') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'\nassert solution('''\n5\n1 2\n1 3\n1 4\n1 5\n''') == '0.0000000 0.0000000\\n0.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'\nassert solution('''\n5\n1 2\n1 3\n1 4\n1 5\n''') == '0.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n'\nassert solution('''\n5\n1 2\n1 3\n1 4\n1 5\n''') == '0.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n'\nassert solution('''\n5\n1 2\n1 3\n1 4\n1 5\n''') == '0.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\naaaa\naba\naaa\n''') == '2'\nassert solution('''\n3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '1'\nassert solution('''\n3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '1'\nassert solution('''\n5\na\nab\nabc\nabcd\na*a\n''') == '2'\n''')"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"aaa\") == \"aaa\"\nassert solution(\"aaa*\") == \"aaa\"\nassert solution(\"*aaa\") == \"aaa\"\nassert solution(\"aaa*a\") == \"aaa\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\\n\", \"No patterns\"\nassert solution(\"a\") == \"1\\n\", \"One pattern\"\nassert solution(\"a*\") == \"2\\n\", \"One pattern\"\nassert solution(\"ab*a\") == \"1\\n\", \"One pattern\"\nassert solution(\"a*a\") == \"1\\n\", \"One pattern\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\naaa\\nabc\\naba\\na*a\\naaa*') == '2\\n1'\nassert solution('2 3\\naaa\\nabc\\naba\\n*aaa\\naaa*') == '2'\nassert solution('1 2\\na\\nbb\\nab') == '1'\nassert solution('1 2\\na\\nbb\\nab') == '1'"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\n\n=======\n\nimport re\nimport sys\n\nn, q = map(int, input().split())\nwords = input().split()\n\nfor q_idx in range(q):\n    pattern = input()\n    pattern = re.sub(r'\\*', '.*', pattern)\n    pattern = re.sub(r'\\.', '.*?', pattern)\n    pattern = re.sub(r'\\?', '.', pattern)\n    pattern = re.sub(r'\\s', '', pattern)\n\n    if pattern.startswith('*'):\n        pattern = '.*?' + pattern\n    elif pattern.startswith('.'):\n        pattern = '.*?' + pattern[1:]\n    elif pattern.startswith('?'):\n        pattern = '.*?' + pattern[1:]\n\n    print(sum(1 if words[i] == pattern else 0 for i in range(n)))"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '2'\nassert solution('''\n4\naaaa\nbbbb\ncccc\ndddd\neeee\neeeee\nfffff\n''') == '2 1 1 1 2 2 1 2 1 2 1 2 1 2 1 2 1 1 2 1 1 2 2 2 1 1 1 1 2 2 1 1 2 1 2 1 1 2 1 2 2 1 2 2 1 2 1 1 2 2 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 2 2 1 2 1 2 1 1 2 1 2 1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1 1 2 1 2 1"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n') == '2'\nassert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa\\n*aaa') == '1'\nassert solution('4 4\\nabc\\nabc\\nabc\\nabc') == '0'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\naaa\\nabc\\naba') == '2'\nassert solution('3 3\\nabc\\nabc\\nabc') == '1'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\") == \"2\\n1\\n1\\n\""
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 4') == '0'\n\"\"\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\nassert solution('''4 4\nXOX\nXOX\nXOX\nXOX\nOXO\nOXX\nOXO\nOXO\n''') == '1'\nassert solution('''3 4\nOXO\nOXO\nOXO\nOXO\n''') == '0'"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\nXO\\nOX\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO') == '1'\nassert solution('2 2\\nXO\\nOX\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO') == '0'\nassert solution('3 3\\nOXXO\\nXOXO\\nXXOX\\nXXOX\\nXOXO\\nOXXO\\nOXOX') == '1'\nassert solution('3 3\\nOXXO\\nXOXO\\nXXOX\\nXXOX\\nXOXO\\nOXXO\\nOXOX') == '0'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"5 5\") == \"1\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\nXOX\\nXOX\") == \"1\"\nassert solution(\"1 1\\nOXX\\nXOX\") == \"0\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\nOX\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\nassert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '0'\nassert solution('''\n4 2\nXO\nXO\nXO\nXO\nOX\nOO\nXO\nOO\n''') == '1'\n'''\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1'\nassert solution('4 2\\nO X\\nX X\\nO X\\nX X\\nX X\\nO O\\nX O\\nO O\\n') == '0'\nassert solution('4 2\\nO X\\nX X\\nO X\\nX X\\nX X\\nO O\\nX O\\nO O\\n') == '1'\nassert solution('4 2\\nO X\\nX X\\nO X\\nX X\\nX X\\nO O\\nX O\\nO O\\n') == '0'\nassert solution('4 2\\nO X\\nX X\\nO X\\nX X\\nX X\\nO O\\nX O\\nO O\\n') == '0'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1', \"First\"\nassert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '0', \"Second\"\nassert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '0', \"Third\"\nassert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1', \"Fourth\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 2\\n1 2\\n2 1\\n3 0') == '1'\nassert solution('2\\n2 2\\n3 1\\n1 0') == '0'\nassert solution('10\\n2 1\\n5 2\\n3 2\\n2 4\\n4 5\\n1 4\\n1 5\\n1 1\\n5 1\\n1 6') == '23'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10\n3 0\n1 1\n0 3\n-1 -1\n-2 -1\n-3 -1\n-4 -1\n-5 -1\n-6 -1\n-7 -1\n-8 -1\n-9 -1\n\"\"\") == \"27\"\n\nassert solution(\"\"\"\n20\n5 -1\n-6 -1\n-1 -5\n-2 -5\n-3 -5\n-4 -5\n-5 -1\n-6 -1\n-7 -1\n-8 -1\n-9 -1\n-10 -1\n-11 -1\n-12 -1\n-13 -1\n-14 -1\n-15 -1\n-16 -1\n-17 -1\n-18 -1\n-19 -1\n-20 -1\n\"\"\") == \"2220\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '16'\n\nassert solution('4') == '16'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('100') == '101'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '10'\nassert solution('6') == '19'\n\"\"\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n-1\n2\n-2\n\"\"\") == \"16\"\nassert solution(\"\"\"\n3\n0\n1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n2\n0\n0\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1\n0\n2\n0\n\"\"\") == \"11\"\nassert solution(\"\"\"\n5\n1\n0\n2\n0\n\"\"\") == \"11\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 0\n0 2\n-2 0\n0 -2\n''') == '16'\n\nassert solution('''\n5\n2 0\n0 2\n-2 0\n0 -2\n0 4\n''') == '16'\n\nassert solution('''\n5\n2 0\n0 2\n-2 0\n0 -2\n0 4\n''') == '15'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 0\\n0 2\\n-2 0\\n0 -2\") == \"16\"\nassert solution(\"3 0\\n0 3\\n-2 0\\n0 -2\") == \"7\"\nassert solution(\"3 0\\n0 -1\\n-2 0\\n0 -2\") == \"3\"\n\"\"\"\n\nimport sys\nfrom math import sqrt"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 10 50\n8 8 2 -2\n''') == '80'\nassert solution('''\n4 10 10 50\n8 8 2 -2\n''') == '80'\nassert solution('''\n4 10 10 50\n8 8 2 -2\n''') == '80'\n''')"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '80'\n'''"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 8 2 -2') == '80'\nassert solution('4 10 50') == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 10 50\\n\"\n    \"8 8 2 -2\\n\"\n) == \"80\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 10 50\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '80'\nassert solution('4 10 50') == '80'\nassert solution('4 0 0') == '0'\n'''\n\nstdin = \"\"\"4 10 50\n8 8 2 -2\n\"\"\""
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4 10 50\\n8 8 2 -2') == '80'\nassert solution(\n    '7 3 10 20\\n-4 -10 7 2 3\\n9 2 4 -10 -7') == '10'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'\nassert solution('7 7 7 7 7 7 7\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1') == '55'\nassert solution('8 9 9 9 9 9 9 9\\n10 10 10 10 10 10 10 10\\n20 20 20 20 20 20 20 20\\n30 30 30 30 30 30 30 30 30\\n40 40 40 40 40 40 40 40 40\\n50 50 50 50 50 50 50 50 50 50\\n60 60 60 60 60 60 60 60 60 60\\n70 70 70 70 70 70 70 70 70 70\\n80 80 80 80 80 80 80 80 80 80') == '77'\nassert solution('10 20 30 40 50 60 70 80\\n20 30 40 50 60 70 80\\n30 40 50 60 70 80\\n40 50 60 70 80\\n50 60 70 80\\n60 70 80\\n70 80\\n80') == '92'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 10 50') == '80'\nassert solution('1 10 10') == '10'\nassert solution('1 10 0') == '1'\n\nstdin = \"\"\"\n2 5 0\n0 -1\n1 -1\n0 -1\n1 -1\n1 0\n1 0\n1 0\n1 0\n1 -1\n\"\"\"\nstdin = \"\"\"\n1 10 50\n8 8 2 -2\n0 -1\n1 -1\n0 -1\n1 -1\n1 0\n1 0\n1 0\n1 0\n1 -1\n\"\"\"\nstdin = \"\"\"\n2 10 10\n10 8 2 -2\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n\"\"\"\nstdin = \"\"\"\n1 10 0\n8 8 2 -2\n\"\"\""
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3') == '3.000000000'\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3') == '3.000000000'\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3') == '3.000000000'\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3') == '3.000000000'\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n5 1\n5 9\n3\n5 8\n2 2\n9 6\"\"\") == \"3.000000000\"\n\"\"\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"0 0 10 10\") == \"5.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"0 0 10 10\") == \"3.000000000\"\nassert solution(\"5 1\") == \"2.50000000\"\nassert solution(\"5 9\") == \"8.000000000\"\nassert solution(\"3\") == \"0.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3''') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 8') == '0.16666666667'\nassert solution('0 0 10 10') == '1.0'\nassert solution('5 1') == '0.16666666667'\nassert solution('5 9') == '4.3333333333'\nassert solution('3') == '0.3333333333'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"3.000000000\"\n\"\"\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 8') == '3.000000000'\nassert solution('2 2') == '0.000000000'\nassert solution('3 4') == '0.000000000'\nassert solution('5 6') == '0.000000000'\nassert solution('0 0 10 10') == '1.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 6') == '0.5000000000'\nassert solution('1 7') == '1.2'\nassert solution('1 6') == '0.5000000000'\nassert solution('2 6') == '0.5000000000'\nassert solution('3 5') == '1.7'\n\n'''"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n0 1 0\n1 2\n2 3\n2 4\nSample Input:\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\nSample Output:\n1\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4') == '1'\nassert solution('4 3') == '1'\nassert solution('5 5') == '2'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n2 1\") == \"1\"\nassert solution(\"10 10\\n0 1 1 1 1 1\\n1 2 1 1 1 1\\n1 3 1 1 1 1\\n1 4 1 1 1 1\\n1 5 1 1 1 1\\n1 6 1 1 1 1\\n1 7 1 1 1 1\\n1 8 1 1 1 1\\n1 9 1 1 1 1\\n2 1 2 2 2 2 2 2\\n2 2 3 3 3 3 3 3\\n2 3 4 4 4 4 4 4\\n2 4 5 5 5 5 5 5\\n2 5 6 6 6 6 6 6\\n2 6 7 7 7 7 7 7\\n2 7 8 8 8 8 8 8\\n2 8 9 9 9 9 9 9\\n3 1 3 3 3 3 3 3\\n3 2 3 3 3 3 3 3\\n3 3 4 4 4 4 4 4\\n3 4 5 5 5 5 5 5\\n3 5 6 6 6 6 6 6\\n3 6 7 7 7 7 7 7\\n3 7 8 8 8 8 8 8\\n3 8 9 9 9 9 9 9\\n4 1 4 4 4 4 4 4\\n4 2 4 4 4 4 4 4\\n4 3 4 4 4 4 4 4\\n4 4 5 5 5 5 5 5\\n4 5 6 6 6 6 6 6\\n4 6 7 7 7 7 7 7\\n4 7 8 8 8 8 8 8\\n4 8 9 9 9 9 9 9\\n5 1 5 5 5 5 5 5\\n5 2 5 5 5 5 5 5\\n5 3 5 5 5 5 5 5\\n5 4 5 5 5 5 5 5\\n5 5 6 6 6 6 6 6\\n5 6 7 7 7 7 7 7\\n5 7 8 8 8 8 8 8\\n5 8 9 9 9 9 9 9\\n6 1 6 1 6 1 6 1\\n6 2 6 2 6 2 6 2\\n6 3 6 3 6 3 6 3\\n6 4 6 4 6 4 6 4\\n6 5 6 6 6 6 6 6\\n6 6 7 7 7 7 7 7\\n6 7 8 8 8 8 8 8\\n6 8 9 9 9 9 9 9\\n7 1 7 1 7 1 7 1\\n7 2 7 2 7 2 7 2\\n7 3 7 3 7 3 7 3\\n7 4 7 4 7 4 7 4\\n7 5 7 5 7 5 7 5\\n7 6 7 6 7 6 7 6\\n7 7 8 8 8 8 8 8\\n7 8 9 9 9 9 9 9\\n8 1 8 1 8 1 8 1\\n8 2 8 2 8 2 8 2\\n8 3 8 3 8 3 8 3\\n8 4 8 4 8 4 8 4\\n8 5 8 5 8 5 8 5\\n8 6 8 6 8 6 8 6\\n8 7 8 7 8 7 8 7\\n8 8 9 9 9 9 9 9\\n9 1 9 1 9 1 9 1\\n9 2 9 2 9 2 9 2\\n9 3 9 3 9 3 9 3\\n9 4 9 4 9 4 9 4\\n9 5 9 5 9 5 9 5\\n9 6 9 6 9 6 9 6\\n9 7 9 7 9 7 9 7\\n9 8 9 8 9 8 9 8\\n9 8 9 8 9 8 9 8\\n10 1 10 1 10 1 10 1\\n10 2 10 2 10 2 10 2\\n10 3 10 3 10 3 10 3\\n10 4 10 4 10 4 10 4\\n10 5 10 5 10 5 10 5\\n10 6 10 6 10 6 10 6\\n10 7 10 7 10 7 10 7\\n10 8 10 8 10 8 10 8\\n10 9 10 9 10 9 10 9\\n11 1 11 1 11 1 11 1\\n11 2 11 2 11 2 11 2\\n11 3 11 3 11 3 11 3\\n11 4 11 4 11 4 11 4\\n11 5 11 5 11 5 11 5\\n11 6 11 6 11 6 11 6\\n11 7 11 7 11 7 11 7\\n11 8 11 8 11 8 11 8\\n11 9 11 9 11 9 11 9\\n12 1 12 1 12 1 12 1\\n12 2 12 2 12 2 12 2\\n12 3 12 3 12 3 12 3\\n12 4 12 4 12 4 12 4\\n12 5 12 5 12 5 12 5\\n12 6 12 6 12 6 12 6\\n12 7 12 7 12 7 12 7\\n12 8 12 8 12 8 12 8\\n12 9 12 9 12 9 12 9\\n13 1 13 1 13 1 13 1\\n13 2 13 2 13 2 13 2\\n13 3 13 3 13 3 13 3\\n13 4 13 4 13 4 13 4\\n13 5 13 5 13 5 13 5\\n13 6 13 6 13 6 13 6\\n13 7 13 7 13 7 13 7\\n13 8 13 8 13 8 13 8\\n13 9 13 9 13 9 13 9\\n14 1 14 1 14 1 14 1\\n14 2 14 2 14 2 14 2\\n14 3 14 3 14 3 14 3\\n14 4 14 4 14 4 14 4\\n14 5 14 5 14 5 14 5\\n14 6 14 6 14 6 14 6\\n14 7 14 7 14 7 14 7\\n14 8 14 8 14 8 14 8\\n14 9 14 9 14 9 14 9\\n15 1 15 1 15 1 15 1\\n15 2 15 2 15 2 15 2\\n15 3 15 3 15 3 15 3\\n15 4 15 4 15 4 15 4\\n15 5 15 5 15 5 15 5\\n15 6 15 6 15 6 15 6\\n15 7 15 7 15 7 15 7\\n15 8 15 8 15 8 15 8\\n15 9 15 9 15 9 15 9\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n\"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n4 3\n0 1 0 0\n1 2\n2 3\n3 4\n\"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n10 4\n0 1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n2 3 4 5 6 7 8 9 0\n3 4 5 6 7 8 9 0\n4 5 6 7 8 9 0\n5 6 7 8 9 0\n6 7 8 9 0\n7 8 9 0\n8 9 0\n9 0\n\"\"\"\n) == \"9\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5') == '1'\nassert solution('2 8') == '4'\nassert solution('6 6') == '3'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 0\n1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2 2\n0 0\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1'\nassert solution('4 5') == '2'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == \"1\"\n\n'''\n3\n0 1 0\n1 2\n2 3\nSample Output:\n1\n'''"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n2 3') == '1'\nassert solution('10 10\\n0 1 0 0 0 0 0 0 0 0\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30') == '10'\n\n'''"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1\n0 1\n1 2\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10 1\n0 1 1 1 0 0 1 0 1 0 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10 2\n0 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n1 2\\n1 3\\n3 2\\n1 2\\n1 3\\n3 2') == '6.283185'\nassert solution('2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n1 2') == '1.5707963267948966'\nassert solution('2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n1 2') == '0.7853981633974483'\nassert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0') == '0.7853981633974483'\nassert solution('5 4\\n0 0\\n1 1\\n0 2\\n1 1\\n0 3\\n1 1\\n0 4\\n1 1\\n0 5\\n1 1') == '1.5707963267948966'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '6.283185'\nassert solution('8 3') == '24.459512'\nassert solution('10 5') == '44.979059'\nassert solution('18 6') == '3.236026'\nassert solution('120 2') == '0.9367625'"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"6.283185\"\nassert solution(\"5 1\") == \"179.955553\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '6.283185'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1 1\n0 0\n1 1\n0 1\n0 2\n1 2\n\"\"\") == \"6.283185\"\n\nassert solution(\n\"\"\"\n1 3\n0 0\n0 1\n1 0\n0 2\n1 2\n\"\"\") == \"0.0\"\n\nassert solution(\n\"\"\"\n3 5\n0 0\n0 1\n1 0\n0 2\n1 2\n\"\"\") == \"0.0\"\n\nassert solution(\n\"\"\"\n4 6\n0 0\n0 1\n1 0\n0 2\n1 2\n\"\"\") == \"6.283185\"\n\nassert solution(\n\"\"\"\n10 10\n1 0\n0 1\n0 2\n1 1\n0 3\n1 2\n0 4\n1 3\n0 5\n1 4\n0 6\n1 5\n0 7\n1 6\n0 8\n1 7\n0 9\n1 8\n0 10\n1 9\n\"\"\") == \"18.316699\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n\"\"\") == \"6.283185\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n''') == '6.283185'\nassert solution('''\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n''') == '6.283185'\nassert solution('''\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n''') == '0.785398'\n'''\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n0\\n1') == '0.0'\nassert solution('2\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '-0.785398'\nassert solution('2\\n0 0\\n0 1\\n1 2\\n0 0\\n1 1\\n1 0\\n2 0\\n1 0\\n0 1\\n1 2\\n2 0\\n2 0\\n1 1\\n2 1') == '2.10714'\nassert solution('3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n1 0\\n0 1\\n0 2\\n1 2\\n2 0\\n2 0\\n1 1\\n1 0\\n0 2\\n0 1\\n1 2\\n1 1\\n1 1\\n2 1') == '2.35619'\nassert solution('3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n1 0\\n0 1\\n0 2\\n1 2\\n2 0\\n2 0\\n1 1\\n1 0\\n0 2\\n0 1\\n1 2\\n1 1\\n1 1\\n2 1') == '0.785398'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n\"\"\") == \"6.283185\"\n\nassert solution(\"\"\"\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n\"\"\") == \"2.831853\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1\\n0 1\\n1 0\\n0 1\\n0 2') == '6.283185'\nassert solution('6 6\\n1 1\\n0 0\\n1 1\\n0 0\\n0 0\\n1 1\\n0 0') == '6.283185'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 2\"\n\"\"\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"9\") == \"1 2 3 4 5 6 7 8 9\"\nassert solution(\"5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '1 2 3 4 5 6 7 8 9 10'\n\nassert solution('''2\n5\n1\n5\n4\n1\n3\n6\n4\n1\n2''') == '1 2 5 1 4 3 6 4'\n\nassert solution('''3\n10\n8\n2\n''') == '1 2 10 8'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1 2 3\"\nprint(\"Solution = {}\".format(solution(input())))\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 1 2\") == \"1 2 3\"\nassert solution(\"7\\n0 1 2 3 4 5 6\") == \"1 2 3 4 5 6 7\""
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1 2'\nprint(solution(input()))\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"6\") == \"1 2 3 4 5 6\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\"\n\n--\n\nSample Input:\n1\nSample Output:\n1\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '1 3'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n2 4\n3 4\n\"\"\") == '1 2 3 4'\n\nassert solution(\"\"\"\n3 3\n2 3\n\"\"\") == '2'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('4 4') == '1'\nassert solution('1 2') == '1 2'\nassert solution('1 3') == '1 3'\nassert solution('2 4') == '2 4'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 1\n1 2\n1 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\n''') == '1'\nassert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\n''') == '2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution([\n    '4 4',\n    '1 2',\n    '1 3',\n    '2 4',\n    '3 4'\n]) == '1 2 3 4'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\n\nclass Solution(object):\n    def minFlights(self, n, flights, airports):\n        g = defaultdict(list)\n        for u, v in flights:\n            g[u].append(v)\n\n        seen = set(airports)\n        print(airports)\n        q = [(0, '@')]\n        while q:\n            (dist, curr) = heapq.heappop(q)\n            if dist > 9999:\n                return -1\n            if curr == '@':\n                if dist < 9999:\n                    return dist\n            seen.add(curr)\n            for i in g[curr]:\n                if i not in seen:\n                    heapq.heappush(q, (dist + 1, i))\n    def minFlights(self, n, flights, airports):\n        g = defaultdict(list)\n        for u, v in flights:\n            g[u].append(v)\n\n        seen = set(airports)\n        q = [(0, '@')]\n        while q:\n            (dist, curr) = heapq.heappop(q)\n            if dist > 9999:\n                return -1\n            if curr == '@':\n                if dist < 9999:\n                    return dist\n            seen.add(curr)\n            for i in g[curr]:\n                if i not in seen:\n                    heapq.heappush(q, (dist + 1, i))\n\n    def minFlights(self, n, flights, airports):\n        g = defaultdict(list)\n        for u, v in flights:\n            g[u].append(v)\n\n        seen = set(airports)\n        q = [(0, '@')]\n        while q:\n            (dist, curr) = heapq.heappop(q)\n            if dist > 9999:\n                return -1\n            if curr == '@':\n                if dist < 9999:\n                    return dist\n            seen.add(curr)\n            for i in g[curr]:\n                if i not in seen:\n                    heapq.heappush(q, (dist + 1, i))\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n\nimport sys"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 4\n1 2\n1 3\n2 4\n3 4\n\"\"\") == \"1 2 3 4\"\n\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n2 4\n3 4\n\"\"\") == \"1 2 3 4\"\n\nassert solution(\"\"\"\n1 10\n1 2\n2 1\n2 3\n1 3\n3 4\n3 5\n3 6\n4 5\n4 7\n4 8\n4 9\n5 4\n5 8\n5 10\n6 9\n6 12\n6 13\n7 12\n7 14\n7 16\n7 18\n7 19\n7 20\n8 7\n8 11\n8 13\n8 14\n8 15\n8 17\n8 19\n8 20\n9 8\n9 10\n9 12\n9 14\n9 16\n9 18\n9 20\n10 9\n10 11\n10 13\n10 14\n10 16\n10 18\n10 19\n10 20\n11 10\n11 12\n11 14\n11 16\n11 18\n11 19\n11 20\n12 11\n12 13\n12 15\n12 16\n12 18\n12 19\n12 20\n13 12\n13 14\n13 16\n13 18\n13 19\n13 20\n14 13\n14 15\n14 17\n14 18\n14 19\n14 20\n15 14\n15 16\n15 18\n15 19\n15 20\n16 15\n16 17\n16 18\n16 19\n16 20\n17 16\n17 18\n17 19\n17 20\n18 17\n18 18\n18 19\n18 20\n19 17\n19 18\n19 19\n19 20\n20 19\n20 20\n\"\"\") == \"1 10 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\"\n\nassert solution(\"\"\"\n2\n1 2\n1 3\n\"\"\") == \"1 2 3\"\n\nassert solution(\"\"\"\n1\n1 2\n\"\"\") == \"1 2\""
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1 2'\nassert solution('4 4') == '1 2 3 4'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1 2') == '1'\nassert solution('2 1\\n1 2') == '2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 2') == '1'\n\"\"\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '2'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 2') == '1'\nassert solution('3 1\\n1 2\\n3 1') == '2'\n\"\"\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1 2\\n\") == \"1\"\nassert solution(\"1 5\\n1 2\\n1 3\\n2 4\\n3 4\\n4 5\\n\") == \"4\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\n1 2\\n') == '1'\nassert solution('3 2\\n1 2\\n2 3\\n') == '2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution(\"3 1\") == '1'\nassert solution(\"2 0\") == '0'\nassert solution(\"5 1\") == '1'\nassert solution(\"3 3\") == '3'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n2 2\") == \"1\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 2\n3 4\n5\n4 3\n2 3''') == '1'\nassert solution('''5 7\n1 2\n3 4\n5 6\n4 7\n2 6\n5 2''') == '2'\nassert solution('''5 5\n1 2\n3 4\n5 5\n4 3\n2 3\n5 5''') == '1'\nassert solution('''10 20\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20''') == '1'\nassert solution('''100 100\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n37 38\n39 40\n41 42\n43 44\n45 46\n47 48\n49 50\n51 52\n53 54\n55 56\n57 58\n59 60\n61 62\n63 64\n65 66\n67 68\n69 70\n71 72\n73 74\n75 76\n77 78\n79 80\n81 82\n83 84\n85 86\n87 88\n89 90\n91 92\n93 94\n95 96\n97 98\n99 100''') == '2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"20\"\nassert solution(\"4\") == \"160\"\nassert solution(\"5\") == \"3160\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('6') == '60'\nassert solution('16') == '2220'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == '45'\nassert solution(\"2\") == '45'\nassert solution(\"2\") == '45'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"45\"\nprint(solution(input))"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"60\"\nassert solution(\"3\") == \"405\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '45'\n\nSample Input:\n5\nSample Output:\n0"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '45'\nprint(solution(input()))\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\"\n) == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '45'\nassert solution('100') == '95025'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == '45'\nassert solution('3') == '1'"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 20 20') == '4'\nassert solution('7 11 9 12 2') == '5'\nassert solution('1 100 100') == '1'\nassert solution('1 100 100') == '1'\n'''\n\n\nimport sys\nimport math"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 20 20\n7 11 9 12 2''') == '4'\nassert solution('''5 5 5\n8 9 1 1 5\n6 1 8 2\n4 6 3 4\n4 5 1 4''') == '4'\nassert solution('''5 5 5\n8 9 1 1 5\n6 1 8 2\n4 6 3 4\n4 5 1 4\n2 4 4 1''') == '3'\nassert solution('''5 20 20\n7 11 9 12 2\n2 4 5 5\n4 4 4 4\n4 5 1 4\n4 6 3 4\n2 4 4 4''') == '1'\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\\n\") == \"4\"\nassert solution(\"7 20 20\\n1 3 1 4 2\\n\") == \"2\"\nassert solution(\"7 20 20\\n1 3 2 5 6 8\\n\") == \"3\"\nassert solution(\"7 20 20\\n1 3 2 6\\n\") == \"4\"\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 20 20\n7 11 9 12 2\n''') == '4'\n\"\"\"\nimport sys\nimport itertools\n\ninput = lambda: sys.stdin.readline().rstrip() \n\nn, s1, s2 = map(int, input().split())\nprint(min(n, max(n - 1, 1)))\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 20 20') == '4'\nassert solution('7 11 9 12 2') == '5'\n\n\"\"\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\nassert solution('1 2 3 4\\n3 1 2 4') == '2'\nassert solution('100 2 2\\n4 6 5') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 20 20') == \"4\"\nassert solution('7 11 9 12 2') == \"3\""
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1 2\n3 4\n5 6\n\"\"\"\n    ) == \"4\"\nassert solution(\n\"\"\"\n1 2\n4 3\n5 6\n\"\"\"\n    ) == \"3\"\nassert solution(\n\"\"\"\n1 2\n3 4\n6 5\n\"\"\"\n    ) == \"2\"\nassert solution(\n\"\"\"\n1 2\n3 4\n5 6\n\"\"\"\n    ) == \"0\"\nassert solution(\n\"\"\"\n5 20 20\n7 11 9 12 2\n\"\"\"\n    ) == \"4\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == \"4\""
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '2'\nassert solution('''\n5 2\nkenny 2 harrypotter1\ncharlie 2 lordoftherings\njenny 1 harrypotter1\nlaura 1 harrypotter1\n''') == '4'\nassert solution('''\n6 3\nkenny 3 harrypotter1\ncharlie 3 lordoftherings\njenny 1 harrypotter1\nlaura 1 harrypotter1\n''') == '2'\nassert solution('''\n10 2\nkenny 2 harrypotter1\ncharlie 2 lordoftherings\njenny 1 harrypotter1\nlaura 1 harrypotter1\n''') == '5'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"3 3\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"3 5\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"1\"\nassert solution(\"3 2\\nkenny 1 harrypotter1\\njenny 1 harrypotter1\") == \"1\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"1\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2'\n\nassert solution(\n    '1 1\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '1'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '2'\nassert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '1'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\"\nassert solution(\"10 20\\nbruce 100 johnson 1\\njenny 100 johnson 1\\njenny 100 johnson 1\\nlaura 100 johnson 1\\n\") == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\n\n'''"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '2'\n'''\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nassert solution(\"10\\n00 01 11 10 11 11 11 11 11 10 11 01\") == \"2 1\"\nassert solution(\"5\\n0101100 110110 110110 110110 110110 110110\") == \"2 5\"\nassert solution(\"10\\n
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1 2\"\nassert solution(\"01\") == \"2 1\"\nassert solution(\"\") == \"0 0\"\nassert solution(\"0101\") == \"0 2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1\\n\"\n    \"01\"\n    ) == \"1 1\"\nassert solution(\n    \"1\\n\"\n    \"00\"\n    ) == \"2 2\"\nassert solution(\n    \"1\\n\"\n    \"11\"\n    ) == \"1 2\"\nassert solution(\n    \"1\\n\"\n    \"01\"\n    ) == \"1 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join(['1', '0', '0'])) == '1 1'\nassert solution('\\n'.join(['0', '0', '0'])) == '1 1'\nassert solution('\\n'.join(['0', '1', '1'])) == '1 2'\nassert solution('\\n'.join(['1', '1', '1'])) == '2 2'\nassert solution('\\n'.join(['1', '0', '0', '1', '0', '1'])) == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0\n00\n''') == '2 1'\nassert solution('''1\n0\n''') == '2 0'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1\n01\n\"\"\") == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\") == \"1 1\"\nassert solution(\"2\\n00 0 0 0 1 1 1 1 1\") == \"1 2 1\"\nassert solution(\"100\\n\" + \"0\" * 100 + \"1\") == \"1 100\"\n\nassert solution(\"100\\n\" + \"0\" * 1000 + \"1\") == \"1 1000\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n01\nSample Input 2:\n10\n
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"2 123\"\n\n\nSample Input:\n2\n3 3\n1 2 3\n5 4 6\n8 7 9\n4\n6 4 6\n7 4 5\nSample Output:\n3 3\n9 3\n9 3\n----\n4\n7 4 6\n4 4 5\n7 5 4\n----\n4\n9 2 2\n9 2 4\n4 4 8\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2\n3 3 2\n2 3 1\n2 3 1\n3 3 2\n----\n8\n4 4 2\n4 4 6\n6 4 6\n----\n4\n7 4 2\n4 4 6\n7 4 5\n----\n3\n9 5 3\n9 5 2\n9 4 3\n----\n5\n1 2 2\n2 3 2"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4 3'\nassert solution('4') == '2 3'\nassert solution('5') == '2 3'\nassert solution('6') == '2233'\nassert solution('7') == '2233'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3 1\n2123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n''') == '''\n4 3\n2233\n2233\n1111\n'''\nassert solution('''\n7\n3 2\n1 123\n2 2\n22\n2 2\n23\n12\nSample Output:\n''') == '''\n7 3\n22333\n22333\n2222\n2233\n2233\n1111\n'''\nassert solution('''\n5\n3 1\n2123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n''') == '''\n4 3\n22333\n22333\n1111\n'''"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n4 1\\n2 123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n') == '4 3\\n2123\\n1012\\n2123\\n'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 1\n2123\n2 2\n''') == '4 3'\nassert solution('''\n3\n4 1\n2 123\n2 2\n''') == '4 3'\nassert solution('''\n2\n5 1\n20\n10\n12\n20\n5 2\n''') == '3 5'\nassert solution('''\n10\n1\n1\n2\n3\n2\n1\n3\n4\n5\n6\n7\n8\n9\n''') == '6 7'\nassert solution('''\n10\n1\n1\n2\n3\n2\n1\n3\n4\n5\n6\n7\n8\n9\n''') == '5 6'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 4\n1 1\n1 1\n1 1\n2 2\n2 2\n''') == '1 2'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1 3\n2 3\n3 4\n5 4\n2 3\n\"\"\") == \"3 2\"\n\nassert solution(\"\"\"\n3\n1 1\n2 2\n3 3\n\"\"\") == \"3 2\"\n\nassert solution(\"\"\"\n5\n1 1\n2 2\n3 3\n4 4\n2 3\n\"\"\") == \"2 3\"\n\nassert solution(\"\"\"\n7\n2 3\n3 2\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"3 2\"\n\nassert solution(\"\"\"\n7\n2 3\n3 2\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1 2\""
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n\"\"\") == \"4 3\"\n\nassert solution(\"\"\"\n3\n4 1\n2 123\n2 2\n21\n10\n2 2\n23\n12\n\"\"\") == \"4 3\"\n\nassert solution(\"\"\"\n3\n3 1\n2 123\n2 2\n21\n10\n2 2\n23\n12\n\"\"\") == \"2 1\"\n\nassert solution(\"\"\"\n2\n3 1\n2 123\n2 2\n21\n10\n2 2\n23\n12\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n1\n3 1\n2 123\n2 2\n21\n10\n2 2\n23\n12\n\"\"\") == \"1 2\""
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4 1\n2 123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"atk\"\nassert solution(\"1\") == \"pango\"\nassert solution(\"14\") == \"cannot be ordered\"\nassert solution(\"1 0\") == \"cannot be ordered\"\nassert solution(\"20\") == \"cannot be ordered\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'emacs xorg-x11 lisp'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'atk'\nassert solution('14') == 'cannot be ordered'\nassert solution('11') == 'cannot be ordered'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('14\\n' +\n'libattr\\n' +\n'vim-X11 vim-common gtk2 libattr\\n' +\n'vim-common\\n' +\n'gtk2 libtiff atk pango glib2\\n' +\n'libtiff zlib libjpeg atk\\n' +\n'atk\\n' +\n'pango xorg-x11-libs freetype glib2\\n' +\n'glib2\\n' +\n'zlib\\n' +\n'libjpeg\\n' +\n'xorg-x11-libs grep freetype\\n' +\n'grep pcre\\n' +\n'pcre\\n' +\n'freetype\\n' +\n'0\\n') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10\\nlibattr\\nvim-common\\ngtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff\\natk\\npango xorg-x11\\nfreetype glib2\\nlibtiff\\nlibjpeg\\natk\\npango xorg-x11\\ngrep pcre\\npcre\\nfreetype\\nemacs xorg-x11 lisp') == \"atk pango glib2 libtiff gtk2 vim-common xorg-x11 lisp zlib pango freetype\\ngrep atk pango xorg-x11\""
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk pango gtk2 vim-X11 libattr pango xorg-x11 freetype glib2 zlib libjpeg libtiff xorg-x11-libs grep freetype pcre lisp gtk2 libattr vim-X11 lisp'\n\n'''\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ngtk2\\nvim-X11\\n'''\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ngtk2\\nvim-X11\\n'''"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\n\"\"\") == \"vim-X11 gtk2 pango xorg-x11-libs freetype atk pango gtk2 glib2 libtiff zlib libjpeg xorg-x11-libs grep pcre freetype gtk2 atk pango atk zlib xorg-x11-libs freetype gtk2 pango xorg-x11-libs freetype zlib xorg-x11-libs pango gtk2 pango pango gtk2 gtk2 pango xorg-x11-libs freetype gtk2 pango gtk2 pango zlib atk pango gtk2 gtk2 pango gtk2 pango gtk2 pango gtk2 xorg-x11-libs pango gtk2 gtk2 pango pango gtk2 pango pango pango gtk2 pango pango xorg-x11-libs gtk2 pango pango pango pango gtk2 pango pango pango gtk2 pango pango pango pango gtk2 pango pango gtk2 pango pango gtk2 pango pango pango gtk2 pango pango pango gtk2 pango pango gtk2 pango pango pango pango gtk2 pango pango pango pango pango gtk2 pango pango pango pango pango gtk2 pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango pango gtk2 pango pango gtk2 pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango gtk2 pango pango gtk2 pango pango pango pango pango pango pango pango gtk2 pango pango gtk2 pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango gtk2 pango pango gtk2 pango pango pango pango gtk2 pango pango pango pango pango pango gtk2 pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango pango gtk2 pango pango gtk2 pango pango pango pango pango pango pango gtk2 pango pango gtk2 pango pango pango pango pango pango pango pango gtk2 pango pango pango gtk2 pango pango pango pango pango pango gtk2 pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango gtk2 pango pango gtk2 pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango pango pango pango pango pango pango gtk2 pango pango pango pango pango p"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"32 20\") == \"16\"\nassert solution(\"32 20\") == \"16\"\nassert solution(\"32 20\") == \"16\"\nassert solution(\"32 20\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n32 20\n\"\"\") == r\"16\"\nassert solution(r\"\"\"\n3 3\n\"\"\") == r\"\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('32 20') == '16'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('100') == '10'\nassert solution('345') == '23'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 0\") == \"10\"\nassert solution(\"12 0\") == \"10\"\nassert solution(\"1 0\") == \"10\"\nassert solution(\"0 1\") == \"2\"\nassert solution(\"0 1\") == \"2\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '10'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('32 20') == '16'\nassert solution('2147483647') == '32'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '16'\nassert solution(\"32 20\") == '16'"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20\\n32') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n4\n''') == '16'\n\nassert solution('''\n10 8\n10\n''') == '10'\n\nassert solution('''\n2 2\n2\n''') == '4'\n\nassert solution('''\n6 5\n6\n''') == '16'\n\nassert solution('''\n22 2\n2\n''') == '20'"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('#.\\n###\\n...#') == '5\\n13'\nassert solution('##.#\\n#...#\\n....') == '1\\n1'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4\n...\n...\n''') == '5 13'\n\"\"\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 4\n...\n.#.\n\"\"\") == \"5 13\"\nassert solution(\"\"\"\n5 5\n.....\n..#.#\n....#\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n.#.#\\n.###') == '5 13'\nassert solution('5 5\\n..#..\\n...#.\\n.##.\\n.##.#') == '11 3'\nassert solution('10 20\\n.##..\\n##.##\\n##.#.\\n#.##.\\n.##..\\n...##\\n.##.##\\n##.##.\\n..##.\\n..#.#\\n.##.#.\\n###.#\\n#####') == '15 19'\nassert solution('10 10\\n.##.#.\\n###.#\\n##.##.\\n#.##.#\\n#.#.#.\\n#.#.#.\\n#.#.#.\\n##.##.\\n###.#.\\n##.##.\\n##.##.\\n#.##.##') == '12 4'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1 2 3 4'\n) == '2 1'\nassert solution(\n    '2 3 4 1'\n) == '3 2'\n\"\"\""
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == \"5\"\nassert solution('2') == \"13\"\nassert solution('3') == \"13\"\nassert solution('4') == \"13\""
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n.##\\n#..\\n') == '13'\nassert solution('4 3\\n.##.\\n..#\\n.##\\n') == '13'\nassert solution('4 3\\n#..\\n...\\n#..\\n') == '13'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n...##\\n.....\") == \"13\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"5 13\"\nassert solution(\"5 5\") == \"17\"\nassert solution(\"3 1\") == \"0\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 3\n...\n.#.\"\"\") == \"\"\"13\"\"\"\"\n\nassert solution(\"\"\"3 3\n..#\n...\n.##\"\"\") == \"\"\"17\"\"\"\"\n\nassert solution(\"\"\"5 8\n....\n..#.\n.#..\n..##\"\"\") == \"\"\"23\"\"\"\"\n\nassert solution(\"\"\"10 15\n.##.\n.##.\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\n\nassert solution('''\n10 10\n5 6 2 7 8 9 1 10\n4 1 10 9 5 6 7 8 2 3\n''') == '20'\n\nassert solution('''\n10 10\n10 2 3 3 1 2 1 1 1\n2 6 3 1 1 1 1 1 1\n1 1 6 1 2 1 1 1 1\n1 1 1 2 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '11'\n\nassert solution('''\n5 5\n3 3 1 3 1\n3 5 5 3 1\n3 2 5 1 1\n1 3 3 3 3\n2 1 2 2 1\n''') == '7'\n\nassert solution('''\n6 6\n5 1 2 3 4 4\n1 5 6 2 3 4\n1 4 5 6 2 3\n1 4 5 1 3 2\n1 4 2 5 3 1\n1 1 2 3 2 4\n''') == '10'"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\"\nassert solution(\"5 2\\n1 2 3 1\\n2 3 5 1\\n3 1? 0\\n3 1? 0\\n3 3? 0\") == \"4\"\nassert solution(\"4 3\\n1 2 3 1\\n2 3 5 1\\n3 1? 0\\n3 1? 0\\n3 3? 0\") == \"2\"\nassert solution(\"6 1\\n1 2 3 1\\n2 3 5 1\\n3 1? 0\\n3 1? 0\\n3 3? 0\\n4 3? 0\") == \"5\"\nassert solution(\"7 1\\n1 2 3 1\\n2 3 5 1\\n3 1? 0\\n3 1? 0\\n3 3? 0\\n4 3? 0\") == \"7\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('4 4') == '3'\nassert solution('5 5') == '3'"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '5'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '5'\nassert solution('2 2') == '3'\nassert solution('5 1 2 5 1') == '5'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 3') == '5'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '3'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\n-1 0\n-1 1\n0 1\n''') == '0'\n\nassert solution('''3 6\n0 1 2\n-1 0\n-1 1\n-1 2\n-2 1\n-2 2\n-2 0\n-3 1\n-3 2\n-3 0\n''') == '1'\n\nassert solution('''2 2\n-1 0\n-1 1\n0 1\nSample Output:\n0\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '0'\nassert solution('10 5') == '2'\nassert solution('2 5') == '1'\nassert solution('1 1') == '1'\nassert solution('5 5') == '2'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3'\nassert solution('10 6') == '3'\nassert solution('1 2 4 6 7 9 11 16 17 18') == '16'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3\\n-1 0\\n-1 1\\n0 1\\n') == '3'\nassert solution('2 3\\n-1 0\\n-1 1\\n0 1\\n') == '0'\nassert solution('1 3\\n1 2\\n-1 1\\n-1 0\\n-1 3\\n-1 2\\n-1 0\\n-1 1\\n-1 2\\n0 1\\n') == '2'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1\") == '1'\nassert solution(\"3\") == '3'\nassert solution(\"4\") == '4'\nassert solution(\"5\") == '5'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"3\"\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 2\") == \"2\"\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 2\\n0 3\") == \"1\"\nassert solution(\"5 5\\n-1 0\\n-1 1\\n-1 2\\n0 3\\n1 4\") == \"4\"\nassert solution(\"5 5\\n-1 0\\n-1 1\\n-1 2\\n0 3\\n1 4\\n2 5\") == \"2\""
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 0\n-1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 5\n-1 0\n-1 1\n1 2\n1 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 2\n-1 0\n-1 1\n1 2\n1 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"1 4\") == \"0\"\nassert solution(\"4 5\") == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1') == '2'\nassert solution('4\\n1 2 3 4') == '4'\nassert solution('1\\n3') == '3'\nassert solution('1\\n5') == '5'\nassert solution('1\\n10') == '10'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n') == '6'\nassert solution('10\\n') == '5'\nassert solution('100\\n') == '1000'\n\"\"\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == \"1\"\nassert solution('10') == \"9\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n4 6 1\n''') == '3'\nassert solution('''5\n9 6 2 4\n''') == '5'\nassert solution('''1\n2\n''') == '0'\nassert solution('''5\n12 20 3 4\n''') == '7'"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 6 2 4') == '6'\nassert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('4') == '2'\n'''\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\nassert solution('10\\n8 3 2 1') == '10'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n1\n1\n1\n''') == '6'\nassert solution('''10\n10\n20\n50\n100\n250\n500\n1000\n2000\n5000\n10000\n25000\n50000\n1000000''') == '6'\n\nassert solution('''3\n3\n4\n5\n''') == '5'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n4\n3\n1\n5''') == '5'\nassert solution('''4\n9\n8\n7\n6''') == '6'\nassert solution('''5\n3\n1\n2\n5''') == '5'"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '6'\nassert solution('9 6 2 4') == '7'\nassert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('0') == '1'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 4 8 16 32 64 128 256 1024''') == '6'\nprint(solution('''1 2 4 8 16 32 64 128 256 1024'''))\nprint(solution
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\nassert solution('8 8 2 9') == '8.000000'\nassert solution('6 9 9 10') == '7.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 3 2\") == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '1.99999'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '2.000000'\nassert solution('3 1 1') == '3.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.500000\""
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1 1 3 2\n2 5 1''') == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1 1 3 2\n2 5 1\n''') == '2.000000'\nassert solution('''\n2 1 1 3 2\n1 5 1\n''') == '3.000000'\nassert solution('''\n2 1 1 3 2\n1 5 1\n''') == '3.000000'\nassert solution('''\n2 1 1 3 2\n1 5 1\n''') == '2.000000'\nassert solution('''\n2 1 1 3 2\n2 5 1\n''') == '3.000000'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '96'\nassert solution('2 3') == '96'\nassert solution('4') == '96'"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96', 'Minimizing the transmission cost of the resulting network is 96'\nassert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '97', 'Minimizing the transmission cost of the resulting network is 97'\nassert solution('''\n2\n1 2\n1 3\n''') == '4', 'Minimizing the transmission cost of the resulting network is 4'\nassert solution('''\n1\n1 2\n1 3\n''') == '4', 'Minimizing the transmission cost of the resulting network is 4'\n\n\"\"\""
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 2, 3, 4]) == '96'\n\n=======\nfrom math import sqrt"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3 4\n3 1\n4 5\n4 1\n3 2\n1 3\n1 4\n\n''') == '96', 'First sample'\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 1\n3 2\n1 3\n1 4\n\n''') == '96', 'Second sample'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\") == \"96\"\nassert solution(\"3\\n1 2\\n2 3\\n4\") == \"99\"\nassert solution(\"10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\") == \"300\""
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n\") == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96', 'First sample'\nassert solution('''\n4\n1 2\n2 3\n3 4\n4 1\n''') == '16', 'Second sample'\n'''\n)\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4') == \"96\"\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == \"208\"\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == \"48\"\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == \"176\"\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n') == \"24\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '96'\nassert solution('3') == '96'\nassert solution('4') == '96'\nassert solution('5') == '96'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('3') == '9'\nassert solution('4') == '12'\n'''"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 0\n1 1\n''') == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 0\n0 1''') == '1'\nassert solution('''2\n0 0\n0 1''') == '0'\nassert solution('''5\n1 2\n3 4\n4 5\n0 0\n1 1''') == '4'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n1 1') == '3'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0\\n0 1\\n1 0\\n1 1') == '3'\nassert solution('3\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2') == '2'\nassert solution('3\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2') == '1'\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '3'\nassert solution('2\\n-1 -1\\n1 0\\n0 -1\\n-1 -1\\n') == '1'\nassert solution('2\\n0 0\\n0 -1\\n0 -1\\n') == '0'\nassert solution('3\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '3'\nassert solution('2\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '1'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n0 0\\n1 0\\n1 1\\n0 1\\n0 0\\n1 1') == '3'\nassert solution('1\\n1\\n') == '0'\n\"\"\""
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0\\n1 0\\n2 1') == '2'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n2 1\\n2 0') == '3'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\n\"\"\""
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1\n4\n0 0\n1 0\n1 1''') == '3'"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 8') == '10'\nassert solution('3 1') == '10'\nassert solution('1 4') == '9'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 3\\n3 4') == '10'\nassert solution('1\\n2 3\\n3 4 5') == '15'\nassert solution('1\\n2 3\\n3 4 5 6') == '10'\nassert solution('1\\n2 3\\n3 4 5 6 7') == '15'\n\nprint('Congratulations! All test cases passed.')"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"10\"\nassert solution([1, 4]) == \"9\"\nassert solution([3, 4]) == \"11\"\nassert solution([1, 2, 3]) == \"5\"\nassert solution([2, 3, 4]) == \"7\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2 3\\n5 3\\n1 2') == '10\\n10\\n10\\n'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n5\\n7') == '7\\n9\\n10\\n'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2\n8\n3 1\n1 4\n\"\"\") == \"10\"\nassert solution(\"\"\"6\n8\n4 1\n2 2\n1 4\n3 6\n7 3\n\"\"\") == \"10\"\nassert solution(\"\"\"10\n8\n4 1\n2 2\n1 4\n3 6\n7 3\n\"\"\") == \"19\"\nassert solution(\"\"\"3\n2 4\n3 3\n5 2\n\"\"\") == \"19\"\nassert solution(\"\"\"5\n8\n7 2\n5 1\n2 4\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3 6 7\\n5 4 3') == \"8\"\nassert solution('1\\n3 3 1 2 3 2\\n2 5 6 4') == \"8\""
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 8\n3 1\n1 4\n''') == '10'\nassert solution('''\n1 2\n1 1\n''') == '1'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n2 8\n3 1\n1 4\n\"\"\") == \"10\"\nassert solution(\"\"\"2\n2 2\n1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"4\n1 9\n4 8\n2 8\n3 8\n\"\"\") == \"6\"\nassert solution(\"\"\"1\n1 2\n1 3\n\"\"\") == \"4\"\nassert solution(\"\"\"6\n1 5\n3 6\n5 9\n7 5\n8 7\n9 8\n10 10\n\"\"\") == \"24\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 8\n3 1\n1 4\n''') == '10'\nassert solution('''\n2\n1 1\n''') == '2'\nassert solution('''\n1\n''') == '1'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n#J#\\n#F#\") == \"IMPOSSIBLE\"\nassert solution(\"4 3\\n#####\\n#JF#\\n#..#\\n#..#\\nSample Input:\") == \"4\"\nassert solution(\"5 7\\n########\\n#JF###\\n#..#.#\\n#######\\n#F#.#J\\n#..#.#\\n#..J#F\\n#..#.F\\n#.J#.#\\n#.#J#F\\n#.J#.F\\n#######\\n#.F###F\\n#..#.#F\\n########\\nSample Output:\") == \"5\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n#.F\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\\n####\\n#.F\") == \"3\"\nassert solution(\"2 3\\n#.F\\n####\\n#.F\") == \"0\"\nassert solution(\"2 2\\n#.F\\n#.F\\n###\") == \"1\"\nassert solution(\"2 2\\n#.F\\n#.F\\n####\") == \"0\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'IMPOSSIBLE'\nassert solution('3 2') == '3'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == 'IMPOSSIBLE'\n\nassert solution('4 4') == '4'\n\nassert solution('1 1') == 'IMPOSSIBLE'\n\nassert solution('2 5') == '5'\n\nassert solution('4 2') == 'IMPOSSIBLE'"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4') == 'IMPOSSIBLE'\nassert solution('4 4 #JF# #..# #..# #..#') == '3'\nassert solution('4 4 #F..# #JF# #..# #..#') == '2'"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"IMPOSSIBLE\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"3 3\") == \"4\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n#####\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\\n#####\\n#..#\\n#..#\") == \"3\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"IMPOSSIBLE\", solution\nassert solution(\"2 3\") == \"0\", solution\nassert solution(\"8 3\") == \"1\", solution\nassert solution(\"10 10\") == \"2\", solution\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nassert solution('1 1 1') == '0.3333333333'\nassert solution('1 2 2') == '0.3333333333'\nassert solution('1 5 1') == '0.8'\nassert solution('3 4 5') == '0.5'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '0.3333333333'\nassert solution('3 3 3') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n8 2 2\n2\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n\"\"\") == \"0.33333333333333333333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nassert solution('1 1') == '0.3333333333'\nassert solution('1 2') == '0.3333333333'\nassert solution('1 3') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == '0.3333333333'\nassert solution('1 1 1') == '0.3333333333'"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"0.8\""
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5 2 2\n3\n2 2 1 1\n'''\n) == '0.50000000000000001'\nassert solution(\n'''\n5 3 2\n1 2 1 1\n'''\n) == '0.6666666666666667'\nassert solution(\n'''\n5 4 2\n1 1 1 1 1\n'''\n) == '0.6493508442812891'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2 2\n2\n1 1\n\"\"\") == \"0.3333333333\"\nassert solution(\"\"\"\n1 2 3\n3\n1 2\n\"\"\") == \"0.33333\"\nassert solution(\"\"\"\n1 1\n2\n1\n\"\"\") == \"0.25\"\nassert solution(\"\"\"\n1 1\n2\n1\n\"\"\") == \"0.25\"\nassert solution(\"\"\"\n1 1\n1\n\"\"\") == \"0.25\"\n\"\"\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 2 2\n2\n1 1\n\"\"\") == \"0.3333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\"\nassert solution(\"1 2 3\\n2\\n1 1\\n\") == \"0.25\"\nassert solution(\"1 3 5\\n2\\n1 2\\n\") == \"0.8125\"\nassert solution(\"1 1 1\\n1\\n1\\n\") == \"0.166666666667\"\nassert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.75\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\\\n10\n1*1\n''') == '1023'\nassert solution('''\\\n10\n1*1\n1*2\n''') == '1025'\nassert solution('''\\\n10\n1*1\n1*1\n''') == '1024'\nassert solution('''\\\n10\n1*1\n1*2\n''') == '1'\nassert solution('''\\\n10\n1*1\n1*2\n1*2\n''') == '1'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n1111111\n''') == \"1\"\nassert solution('''\n20\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('3\\n10111110\\n') == '10'\nassert solution('2\\n1*1\\n') == '1'\nassert solution('2\\n1*1\\n') == '1'\nassert solution('3\\n1*1\\n') == '0'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1023\"\nprint(solution())"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1*1\n''') == \"1023\", 'first'\n\nassert solution('''\n2\n1*1\n*''') == \"10001\",'second'\n\nassert solution('''\n3\n1*1\n1*1\n''') == \"1023\", 'third'\n\nassert solution('''\n5\n1*1\n1*1\n1*1\n1*1\n1*1\n''') == \"1000000\", 'fourth'\n\nassert solution('''\n10\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n''') == \"111110000\", 'fifth'"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n101\n1\n\"\"\") == \"1023\"\n\nassert solution(\"\"\"\n50\n111\n\"\"\") == \"2509\"\n\nassert solution(\"\"\"\n10\n1*1\n\"\"\") == \"1023\"\n\nassert solution(\"\"\"\n10\n1*1*1\n\"\"\") == \"1023\"\n\nassert solution(\"\"\"\n10\n111\n\"\"\") == \"9999\""
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1023'\nassert solution('011') == '1024'\nassert solution('1*1') == '1'\nassert solution('10101110') == '2'\nassert solution
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1023'"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1023'\nassert solution('11') == '111'\nassert solution('1') == '1'\n\"\"\""
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '1'\nassert solution('11111') == '1'\nassert solution('111111') == '1'\nassert solution('1*1') == '1'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 2') == '6'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"1 1\") == \"6\"\nassert solution(\"0 0\") == \"0\"\n\"\"\""
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '10'\nassert solution('0 0') == '0'\nassert solution('10 20') == '10'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '6'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '6'\nassert solution('3 3') == '6'\nassert solution('1 1') == '2'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nprint(solution(input()))\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 2') == '6'\nassert solution('1 2') == '1'\nassert solution('2 1') == '2'\nassert solution('5 3') == '1'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '6'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '6'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == \"2930\"\nprint(solution(input()))\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == 'Impossible'"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000 2000 7') == 'Impossible'\nassert solution('100') == 'Impossible'\nassert solution('480') == 'Impossible'\nassert solution('500') == 'Impossible'\nassert solution('550') == 'Impossible'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930'\nassert solution('''10 50 20\n8\n4\n2\n8''') == 'Impossible'\n\nimport math"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == '2930'\n\nassert solution('''\n500\n1000\n1400\n1500\n''') == 'Impossible'\n\nassert solution('''\n500\n1000\n1400\n1500\n''') == 'Impossible'\n\nassert solution('''\n1000\n1500\n1500\n''') == 'Impossible'\n\nassert solution('''\n1000\n1500\n1500\n''') == 'Impossible'"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2930\"\nprint(solution(__import__('sys').stdin.read()))\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == 'Impossible'\nassert solution('1 1 1 1') == '1'\nassert solution('2 3') == 'Impossible'\nassert solution('3 2') == 'Impossible'"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"Impossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"1400\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000 2000 7\") == \"2930\"\nassert solution(\"100\") == \"Impossible\"\nassert solution(\"1000\") == \"Impossible\"\nassert solution(\"1500\") == \"Impossible\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3\n0\n0\n1\n''') == '2'\nassert solution('''\n1 2 3\n0\n0\n0\n''') == '1'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 2 3\n0\n0\n1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 2 3\n0\n0\n2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 2 3\n0\n0\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 2 3\n0\n0\n2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 2 3\n0\n0\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1'\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == \"2\"\nassert solution('3 5 2') == \"3\"\nassert solution('9 5 2') == \"7\"\n\nimport os"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3\n0\n0\n1\n''') == '2'\nassert solution('''\n3\n0\n0\n1\n''') == '0'\nassert solution('''\n3\n0\n1\n2\n''') == '0'\nassert solution('''\n2\n0\n1\n''') == '0'\nassert solution('''\n5\n0\n0\n1\n0\n2\n''') == '0'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '1 2 3\\n0\\n0\\n1\\n') == '2'\n'''\nimport math\n\ncache = set()\ncache_size = 0"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1\\n') == '2'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('0') == '0'\nassert solution('0 0 0') == '1'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '12'\nassert solution('1 1') == '2'\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(input())"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '10'\nassert solution('3 3') == '10'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\n\n'''"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"10\"\nassert solution(\"2 3\") == \"12\"\nassert solution(\"2 2\") == \"0\""
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3 3\n    -5 2 -5\n    -1 -2 -1\n    5 4 -5\n    2 2\n''') == '10'\nassert solution('''\n    1 2\n    1\n    1\n''') == '1'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == \"10\"\nassert solution('3 3') == \"30\"\nassert solution('5 4 -5') == \"5\"\nassert solution('2 2') == \"10\""
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n1\\n2') == '1'\nassert solution('1\\n2\\n2\\n2') == '4'\nassert solution('3\\n3\\n1\\n1') == '2'\nassert solution('2\\n3\\n1\\n1') == '3'"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\n\nassert solution('''\n4 4\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\n\nassert solution('''\n2 2\n2 2\n''') == '0'\n\nassert solution('''\n1 1\n1 1\n''') == '1'\n\nassert solution('''\n1 2\n1 2\n''') == '0'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '3000'\nassert solution('10 5') == '4000'\nassert solution('1 100') == '10'\n\n'''"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n'''\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    1 4 300\n    3 5 300\n    \"\"\"\n) == \"3100\"\n\nassert solution(\n    \"\"\"\n    5 2\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    1 4 300\n    3 5 300\n    \"\"\"\n) == \"3000\"\n\nassert solution(\n    \"\"\"\n    0\n    1 2\n    1 3\n    3 2\n    \"\"\"\n) == \"0\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 1\") == \"3\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n\"\"\"\nYour solution goes here\n\"\"\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nprint(solution(input()))\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\nassert solution('1\\n5\\n1 2\\n1 2\\n3 3\\n2 3\\n3 4\\n4 4\\n5 2\\n3 3\\n2 4\\n') == '2600'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '3100'\n\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '3300'\n\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '4500'\n\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n2\n1 4 300\n3 5 300''') == '3800'\n\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n2\n1 4 300\n3 5 300''') == '4600'"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\n    '2 2',\n    '1 2',\n    '0 1'\n]) == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 1\") == \"0\""
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"2 1 2 1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\n\"\"\""
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    2 2\n    0 1\n    1 2\n    ''') == '0'\n\nassert solution('''\n    3 3\n    0 1 0\n    0 2 0\n    1 2 1\n    ''') == '1'\n\n'''\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('3 1') == '2'\nassert solution('4 1') == '3'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n0 1') == '0'\nassert solution('2 5\\n0 1 2 3 5\\n0 1 5 3\\n1 1 2 4\\n1 2 3 4 5\\n3 3 5 2 4\\n3 4 4 5 5\\n1 2 3 4\\n1 1 3 3\\n1 3 5 2\\n1 1 2 4\\n2 2 2 2\\n1 4 2 3\\n2 1 3 2\\n2 3 2 3\\n1 1 2 1\\n1 3 3 5\\n1 2 1 2\\n1 1 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 1 1 2\\n1 2 1 2\\n1 3 3 5\\n1 2 3 4\\n1 1 3 5\\n1 3 5 5\\n2 2 2 2\\n2 1 3 5\\n2 3 4 4\\n3 3 5 2\\n3 4 4 5\\n4 4 5 5\\n2 2 2 2\\n1 4 2 3\\n2 1 3 5\\n2 3 4 4\\n2 2 2 2\\n1 3 5 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2\\n1 1 3 3\\n1 3 5 5\\n1 2 1 2"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 1') == '1'\nassert solution('3 3') == '2'\nassert solution('4 1') == '3'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1\\n0 1') == '0'\nassert solution('2 100000\\n0 1 1 1\\n1 0 1 1\\n1 1 2 1\\n1 1 1 1 1\\n2 1 1 1\\n2 2 1 1\\n3 1 1 1\\n3 2 1 1\\n3 3 1 1\\n3 3 2 1\\n4 3 2 1\\n4 4 3 1\\n5 2 3 2\\n5 3 2 1\\n6 2 1 1\\n6 3 2 1\\n7 3 2 1\\n7 3 1 2\\n8 3 1 2\\n8 2 1 1\\n9 3 1 2\\n9 4 1 2\\n10 3 1 2\\n10 3 2 1\\n10 4 1 1\\n9 4 1 1\\n8 4 1 1\\n7 5 1 1\\n7 6 1 2\\n7 6 1 1\\n7 6 1 1\\n6 5 1 1\\n5 4 1 1\\n4 5 1 1\\n4 5 1 2\\n4 5 1 1\\n4 4 1 2\\n4 4 1 2\\n4 4 1 1\\n4 3 2 1\\n4 3 2 1\\n4 4 1 1\\n4 4 2 1\\n4 4 1 1\\n4 3 1 2\\n4 3 1 2\\n3 3 2 1\\n3 3 1 2\\n3 3 1 2\\n2 4 1 1\\n2 3 1 1\\n1 3 1 2\\n1 3 2 1\\n1 3 2 1\\n1 3 2 1\\n1 2 1 1\\n1 2 1 1\\n1 2 1 2\\n1 2 1 1\\n0 1 1 1\\n0 1 1 2\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 2\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 2\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 2\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\"\nassert solution(\"2 1\\n0 1\\n1 2\") == \"1\"\nassert solution(\"2 3\\n0 1\\n0 2\\n1 3\") == \"1\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10') == '10'"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 10') == '10'\nassert solution('5 50') == '1'\nassert solution('200 100') == '7'\nassert solution('10123456789') == '0'\n\"\"\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 10') == '10'\nassert solution('3 7') == '1'\nassert solution('1 20') == '0'"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 10') == '10'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 10') == '10'\nassert solution('0 1') == '0'\nassert solution('1 2') == '0'\nassert solution('4 4') == '4'\nassert solution('2 6') == '3'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3 4\n1 2\n3"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10') == '10'\nassert solution('20 10') == '0'\nassert solution('20 10') == '0'\nassert solution('20 10') == '0'\nassert solution('1000 1000') == '4'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 2') == '0'"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 10\n''') == '10'\nassert solution('''\n1 10\n''') == '10'\nassert solution('''\n100 100\n''') == '100'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"1 100\") == \"99\"\nassert solution(\"-1 100\") == \"98\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 10\") == \"10\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n-2 -3\n0 0\n1 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n10\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10\n1 2\n3 4\n5 6\n7 8\n9 10\n10 11\n12 13\n14 15\n16 17\n18 19\n20 21\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n5\n-1 -2 -3 -4 -5\n1 2\n3 4\n5 6\n7 8\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3\n-1 -2 -3\n0 0\n1 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '0'\n\"\"\""
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n1000 0\") == \"0\"\nassert solution(\"3\\n0 0\\n1000 0\\n0 1000\") == \"2\"\nassert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n0 1000\") == \"0\"\nassert solution(\"5\\n0 0\\n1000 0\\n0 1000\\n0 1000\\n1000 1000\") == \"3\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0\\n1000 0\\n0 1000\") == \"0\"\nassert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n0 1000\") == \"1\"\nassert solution(\"5\\n0 0\\n1000 0\\n0 1000\\n0 1000\\n0 1000\") == \"2\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0\\n1000 0\\n0 1000') == '0'\nassert solution('3\\n0 0\\n100 0\\n0 100') == '1'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n3\n0 0\n10 0\n0 10\n10 10\n3\n2 2\n5 5\n5 5\n\"\"\") == \"0\"\nassert solution(r\"\"\"\n3\n0 0\n10 0\n0 10\n10 10\n3\n1 4\n1 4\n\"\"\") == \"2\"\nassert solution(r\"\"\"\n2\n10 0\n10 10\n\"\"\") == \"0\"\n\n'''\n--- Part Two ---\n\nIf you need even more spots, you can still modify the input data slightly. The same pattern can be reproduced as above, but the points must be distinct in x and y. Thus, the input data must be rearranged so that all of the points are distinct in x and y.\n\nTo solve the next part of the problem, you must find a way to generate all of the points. What is the minimum number of spots needed to make a pattern with symmetry?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. The first line of input will consist of a single integer $n$ ($1 \\le n \\le 1000$) indicating the number of spots. Each of the next $n$ lines will hold two space-separated integers $x$ and $y$ ($-20000 \\le x,y \\le 20000$), which are the coordinates of a spot. The locations of all spots are guaranteed to be unique.\n\n-----Output-----\nOutput a single integer, indicating the minimum number of spots needed to make a pattern with symmetry.\n\n-----Examples-----\nSample Input:\n4\n0 0\n1000 0\n0 1000\n1000 1000\n3\n2 2\n5 5\n5 5\nSample Output:\n3\n'''"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '0'\nassert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '2'\nassert solution('5\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '4'\nassert solution('7\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 1000\\n') == '1'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '0'\nassert solution('''\n4\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '2'\nassert solution('''\n2\n-1 2\n-1 2\n''') == '0'\n'''\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3\\n4 5 6') == '0'\nassert solution('2\\n-1 0\\n-1 -2') == '3'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == '0'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n0 1 0.5\\n') == '0.500000000 1.000000000'\nassert solution('2 1\\n0 1 0.5\\n') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '0.500000000 1.000000000'\nassert solution('2 2') == '0.2500000000 0.2500000000'\nassert solution('3 1') == '0.12500000000 0.12500000000 0.12500000000'\nassert solution('3 2') == '0.12500000000 0.12500000000 0.12500000000'\nassert solution('4 2') == '0.12500000000 0.12500000000 0.12500000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"0.500000000 1.000000000\"\nassert solution(\"2 1\") == \"0.500000 1.000000000\"\nassert solution(\"2 1\") == \"0.5000 0.0000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n2 1\n0 1 0.5\n\"\"\"\n    ) == \"0.500000000 1.000000000\"\nassert solution(\n    \"\"\"\n1 1\n0 1\n\"\"\"\n    ) == \"0.0 0.0\"\nassert solution(\n    \"\"\"\n1 1\n0 0\n\"\"\"\n    ) == \"0.0 0.0\"\nassert solution(\n    \"\"\"\n4 3\n0 1 0.5\n0 1 0.5\n0 2 0.5\n0 3 0.5\n\"\"\"\n    ) == \"0.1666666666 -0.33333333 -0.33333333 0.1666666666\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 1\n0 1 0.5\n0 2 0.7\n0 3 0.5\n0 4 0.7\n0 5 0.7\n0 6 0.7\n0 7 0.7\n0 8 0.7\n0 9 0.7\n10 1\n0 1 0.5\n0 2 0.7\n0 3 0.5\n0 4 0.7\n0 5 0.7\n0 6 0.7\n0 7 0.7\n0 8 0.7\n0 9 0.7\n10 1\n0 1 0.5\n0 2 0.7\n0 3 0.5\n0 4 0.7\n0 5 0.7\n0 6 0.7\n0 7 0.7\n0 8 0.7\n0 9 0.7\n10 1\n''') == '0.500000000 1.000000000'\n\nassert solution('''\n1 1\n0 1 0.5\n''') == '1.000000000'\n\nassert solution('''\n10 2\n0 0 0.5\n1 0 0.7\n1 1 0.5\n''') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '0.500000000 1.000000000'\nassert solution('5 2') == '0.3666666666 1.33333333 1.33333333 1.33333333'\nassert solution('10 5') == '0.40999999 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000'\nassert solution('25 5') == '0.40999999 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000'\nassert solution('40 6') == '0.40999999 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000 1.15000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n0 1 0.5\n''') == '0.500000000 1.000000000'\nassert solution('''\n5 5\n0 1 1 0.5\n0 2 1 0.5\n0 3 2 1 0.5\n0 4 1 1 0.5\n''') == '-1.0 -1.0 -1.0 -1.0 -1.0'\n'''\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '0.500000000 1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1\\n0 1 0.5') == '0.500000000 1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n0 1 0.5\n''') == '0.500000000 1.000000000'\nassert solution('''\n2 1\n0 0 0.5\n''') == '0.500000000 1.000000000'\nassert solution('''\n2 1\n1 0 0.5\n''') == '0.500000000 1.000000000'\nassert solution('''\n2 1\n0 1 0.5\n0 2 0.5\n''') == '0.500000000 1.000000000'\nassert solution('''\n2 1\n0 1 0.5\n0 1 0.5\n''') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '2'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 1\\n4 1\") == \"7\"\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\""
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"7\"\n'''\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"7\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"10 10\") == \"7\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\n'''\n\nstdin = input()\n\nN = int(stdin)"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '8'\nassert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '8'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"7\"\n\"\"\""
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\n\n---Input---\n8\n1 1\n2 1\n2 2\n3 1\n3 2\n3 3\n4 1\n4 2\n4 3\n4 4\n5 1\n5 2\n5 3\nSample Output:\n8\n\"\"\""
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\na b') == '9-b'\nassert solution('3-b 5-b') == '8-a'\nassert solution('6-a 2-b') == '5-b'\nassert solution('2') == '0'"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0''') == '9-b'\nassert solution('''3\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0''') == '9-b'\n'''\n\nfrom collections import deque"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''a b\n3-b 5-b\n6-a 2-b\n2''') == '9-b'\n\nassert solution('''a b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\na\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\"\"\") == \"9-b\"\nassert solution(\"\"\"\n1\na\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\nab\n\"\"\") == \"8-a\"\nassert solution(\"\"\"\n1\na\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\nab\nba\n\"\"\") == \"8-a\"\nassert solution(\"\"\"\n1\na\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\nab\nba\nba\n\"\"\") == \"8-a\"\nassert solution(\"\"\"\n1\na\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\nab\nba\nba\nba\n\"\"\") == \"8-a\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n\"\"\") == \"9-b\"\nassert solution(\"\"\"\n3\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n\"\"\") == \"8-a\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '8-a'\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\na b\na a\nb a\n''') == '9-b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b'\n\nassert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '8-a'\n\nassert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b'\nassert solution('1\\na\\n0\\n') == '0-a'\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\na\\nb\\n') == '9-b'\nassert solution('2\\na\\nb\\n') == '8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\na b') == '9-b'\nassert solution('3-b 5-b\\n6-a 2-b') == '8-a'\nprint(solution('''\n6-a 2-b\n5-b 1-a\n6-b 3-a\n6-a 1-b\n5-a 2-b\n6-b 3-b\n'''))\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"3246R3246\"\nassert solution(\"2\") == \"123456789012\"\nassert solution(\"3\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"4\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"5\") == \"0123456789\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'E'\nassert solution('2') == 'E'\nassert solution('3') == 'C'\nassert solution('4') == 'C'\nassert solution('5') == 'M'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"3246\"\nassert solution(\"2\") == \"3246\"\nassert solution(\"3\") == \"3246\"\nassert solution(\"4\") == \"3246\"\nassert solution(\"5\") == \"3246\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '3246'\nassert solution('10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '3246R3246U3246D3246U3246D3246U3246D3246U3246D3246U3246D3246U3246D3246U3246D3246U3246D3246'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '3246R3246'\nassert solution('1\\n2\\n3\\n4') == '3246R3246U4'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"3246R3246\"\nassert solution(\"2\") == \"2346R2346\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"3246\"\nassert solution(\"1\\n1\") == \"3246\"\nassert solution(\"1\\n1\\necho\") == \"3246R3246\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\necho\\n1\\nechoecho\\n') == '3246R3246'\nassert solution('2\\nqwertyuiop\\n123456789\\n9876543210\\n') == '13246R12346'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n4\\n7\\n6\\n5\\n4\\n3\\n\") == \"U3\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"YES\\n1 2\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"1\") == \"YES\\n2\\n\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1\n1 2\n1 3''') == 'YES'\n\nassert solution('''3 1\n2 3\n2 1''') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1\n1 2\n1 3\n''') == 'YES\\n1 2\\n1 3\\n'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3 1\n1 2\n1 3\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n3 2\n1 2\n1 3\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 1\") == \"YES\\n1 2\\n1 3\"\nassert solution(\"1 1\") == \"YES\\n1 2\\n1 3\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"100 100\") == \"YES\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3\\n'\n\n##########################\n\n--- Day 7: The N-th Superstar ---\n\nSuperstar rules\n\n    The universe is infinite in both time and space.\n    The universe can contain any object (not matter its size or position).\n    The universe can be infinite in itself, but also finite along each axis.\n    The universe can be described by a list of its objects.\n    The universe can be described by an infinite list of coordinates,\n    (for example, the object at a coordinate (0, 0) is part of the universe).\n\nSuperstars are specific objects that can connect together in some way. A couple of examples of ways superstars can connect together are as follows:\n\n    * They can be used to build large structures (such as ships or structures of cities);\n    * They can be used to boost the overall efficiency of a machine (such as a computer or satellite);\n    * They can be used to stabilize the movement of objects around the universe (such as asteroids);\n    * They can be used to eliminate unnecessary duplication (such as the maze);\n\nSuperstar rules describe the minimal amount of information required to describe a specific object. The universe can contain any object satisfying the following rules:\n\nThe universe can contain any object (not matter its size or position).\nThe universe can contain any object satisfying the rule $i + 1 < j$ (or equivalently, $i < j$).\n\nThe universe can be described by a list of its objects.\nThe universe can be described by an infinite list of coordinates,\n(for example, the object at a coordinate (0, 0) is part of the universe).\n\nSuperstars can be described by a list of coordinates. They do not have coordinates (i.e., they are never located).\nSuperstars can be described by a list of coordinates of objects (i.e., they are located).\n\nSuperstars are specific objects that can connect together in some way. A couple of examples of ways superstars can connect together are as follows:\n\n    * They can be used to build large structures (such as ships or structures of cities);\n    * They can be used to boost the overall efficiency of a machine (such as a computer or satellite);\n    * They can be used to stabilize the movement of objects around the universe (such as asteroids);\n    * They can be used to eliminate unnecessary duplication (such as the maze);\n\nSuperstar rules describe the minimal amount of information required to describe a specific object. The universe can contain any object satisfying the following rules:\n\nThe universe can contain any object (not matter its size or position).\nThe universe can contain any object satisfying the rule $i + 1 < j$ (or equivalently, $i < j$).\n\nThe universe can be described by a list of its objects.\nThe universe can be described by an infinite list of coordinates,\n(for example, the object at a coordinate (0, 0) is part of the universe).\n\nSuperstars can be described by a list of coordinates. They do not have coordinates (i.e., they are never located).\nSuperstars can be described by a list of coordinates of objects (i.e., they are located).\n\nDefine the universe with coordinates $X_1, X_2, \\ldots, X_n$.\n\nDefine a superstar with coordinates $Y_1, Y_2, \\ldots, Y_m$.\n\nGiven $n$ and $m$, your task is to find the length of the shortest path between the superstar and its star, if one exists.\n\nIf the superstar does not exist, print -1. If there is no path between the two objects, print -1.\n\nNote that the path does not need to be the shortest path.\n\nGiven $n$ and $m$, your task is to find the length of the shortest path between the superstar and its star, if one exists.\n\nIf the superstar does not exist, print -1. If there is no path between the two objects, print -1.\n\n--- Part Two ---\n\nThe rules for building a superstar are now:\n\nThe universe can contain any object (not matter its size or position).\nThe universe can contain any object satisfying the rule $i + 1 < j$ (or equivalently, $i < j$).\n\nThe universe can be described by a list of its objects.\nThe universe can be described by an infinite list of coordinates,\n(for example, the object at a coordinate (0, 0) is part of the universe).\n\nSuperstars can be described by a list of coordinates. They do not have coordinates (i.e., they are never located).\nSuperstars can be described by a list of coordinates of objects (i.e., they are located).\n\nDefine the universe with coordinates $X_1, X_2, \\ldots, X_n$.\n\nDefine a superstar with coordinates $Y_1, Y_2, \\ldots, Y_m$.\n\nGiven $n$ and $m$, your task is to find the length of the shortest path between the superstar and its star, if one exists.\n\nIf the superstar does not exist, print -1. If there is no path between the two objects, print -1.\n\nNote that the path does not need to be the shortest path.\n\nGiven $n$ and $m$, your task is to find the length of the shortest path between the superstar and its star, if one exists.\n\nIf the superstar does not exist, print -1. If there is no path between the two objects, print -1.\n\n---------------\n\nclass Solution(object):\n    def superstar(self, n, m):\n        def superstar_helper(n, m):\n            return -1 if not n and not m else max(superstar_helper(n - 1, m - 1), superstar_helper(n, m - 1)) + 1 if n and m else -1\n        return superstar_helper(n, m)\n\nclass Solution(object):\n    def superstar(self, n, m):\n        def superstar_helper(n, m, dp):\n            if not n and not m:\n                return 0\n            if not n or not m:\n                return -1\n            if dp[n][m] > -1:\n                return dp[n][m]\n            if n - 1 >= m - 1:\n                dp[n][m] = max(superstar_helper(n - 1,"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1') == 'YES\\n1 2\\n1 3\\n1 4\\n1 5'\nassert solution('3 1') == 'YES'\nassert solution('3 10') == 'NO'"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('5 4') == 'YES'\nassert solution('5 1') == 'NO'\nassert solution('5 3') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\nassert solution(\"100 200\") == \"NO\"\nprint(\"AoC 2020 Day 03: Corporate Policy\")"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n\") == \"YES\\n1 2\\n1 3\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9') == '176'\nassert solution('1') == '0'\nassert solution('6') == '0'\nassert solution('10') == '0'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\n\nassert solution('''\n10\n1\n1\n23456\n1\n2\n23456\n1\n2\n23456\n1\n2\n23456\n''') == '37'\n\nassert solution('''\n10\n1\n1\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n''') == '14'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\") == \"176\"\nassert solution(\"9\\n3\\n6 6\\n300003\") == \"176\"\nassert solution(\"9\\n3\\n6 6\\n300003\\n300003\") == \"348\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"176\"\nassert solution(\"1\") == \"1\"\nassert solution(\"6 6\") == \"1\"\nassert solution(\"333333\") == \"46\"\nassert solution(\"300003\") == \"16\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n8\n9\n43\n11\n43\n43\n43\n43\n43\n43''') == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1\n    2\n    3\n    3\n    1\n    \"\"\",\n) == \"176\"\n\nassert solution(\n    \"\"\"\n    10\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    \"\"\",\n) == \"2584\"\n\nassert solution(\n    \"\"\"\n    0\n    1\n    2\n    3\n    4\n    5\n    \"\"\",\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    5\n    1\n    2\n    3\n    3\n    1\n    \"\"\",\n) == \"1\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\\n5\\n1 2 3\\n3 3 3\\n3 3 3\\n4 4 4\\n3 3 3\\n\"\n) == \"27\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"176\"\nassert solution(\"1\") == \"176\"\nassert solution(\"6 6\") == \"176\"\nassert solution(\"333333\") == \"176\"\nassert solution(\"300003\") == \"176\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1\n2\n1\n4\n''') == '175'\n\nassert solution('''\n8\n1\n2\n1\n4\n1\n3\n1\n4\n''') == '178'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n12!\n''') == '012'\nassert solution('''\n15!\n''') == '15'\nassert solution('''\n24!\n''') == '24'\nassert solution('''\n500000!\n''') == '5'\nassert solution('''\n11000000000!\n''') == '11'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '2'\nassert solution('15') == '9'\nassert solution('00001234') == '123'\n\n'''"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '123'\nassert solution('100') == '100'\nassert solution('1000000') == '0123'"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('123\\n') == '123'\nassert solution('1234\\n') == '1234'\nassert solution('12347\\n') == '1234'\nassert solution('123468\\n') == '1234'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1000\") == \"123\"\nassert solution(\"10002468\") == \"123456\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"12\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '02'\nassert solution('12') == '12'\nassert solution('1234') == '1234'\nassert solution('12345') == '12'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '12'\nassert solution('9') == '999'\nassert solution('12') == '012'\nassert solution('9799') == '9799'\nassert solution('123') == '123'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '12'"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == None\nassert solution('5') == '12'\nassert solution('123456789') == '1234567'\nassert solution('99999') == '99'\n\"\"\"\n\nn = int(input())\nnum = str(n)\ncount = 0\ncount_two = 0\ni = 0\nwhile count < 3:\n    count += 1\n    if i == len(num):\n        break\n    if num[i] == \"0\":\n        count_two += 1\n    i += 1\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1\") == \"??\"\n\nSample Input:\n5 2\n(()()()\n1\n-1\n-100\n-2\nSample Output:\n-1\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 1\") == \"??\""
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"??\"\nassert solution(\"4 3\") == \"??\"\nassert solution(\"5 3\") == \"??\"\nassert solution(\"6 3\") == \"??\"\nassert solution(\"7 3\") == \"??\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1') == '?'"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"??\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 1\n((()\n480\n617\n-570\n928\n\"\"\") == \"480\"\nassert solution(\"\"\"5 5\n(())\n-200\n(())\n-200\n(())\n\"\"\") == \"400\"\nassert solution(\"\"\"5 5\n(((\n-200\n(()\n-200\n(())\n-200\n(()\n\"\"\") == \"500\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"??\"\n\nprint(solution())\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '?', \"Should return? if Bruce can get the parenthetical sequence balanced\"\nassert solution('4 1') == '480', \"Should return 480 if Bruce can get the parenthetical sequence balanced\"\nassert solution('6 1') == '?', \"Should return? if Bruce can get the parenthetical sequence balanced\"\n\n\"\"\""
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 1\n((()\n480\n631\n-470\n928\n''') == '480'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'\nassert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == 'None'\nassert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\nSample Output:\") == \"5 6 7 8 9 10 11 12 13\"\nprint(solution(input()))\n\n---Input---\n16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9 10 11 12 13 14 15 16\n7 8 9"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\nSample Output:') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3 5 6 7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\nSample Output:') == '5 6\\n7 8 9 10 11 12 13'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 3 5 6 7 8 9 10 11 13'\n\"\"\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\n\nassert solution('''\n7\n3 1 4\n4 2 5\n6 7 8\n4 3 5\n7 4 1\n2 6 5\n8 3 2\n1 3 6\n5 4 8\n4 1 3\n5 2 8\n7 4 1\n4 8 2\n4 3 5\n2 1 6\n4 5 7\n5 3 2\n''') == '3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 8"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    2 2 4\n    3 1 3 5\n    2 2 4\n    3 1 3 6\n    2 2 6\n    2 4 5\n    2 8 9\n    2 7 9\n    2 7 8\n    2 11 13\n    2 10 12\n    2 11 13\n    2 10 12\n    ''') == '2 4'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '''2 4\n5 6\n7 8 9 10 11 12 13\n'''\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \"1 2 3\\n\"\n    \"1 4 8\\n\"\n    \"2 3 12\\n\"\n    \"3 5 4\\n\"\n    \"4 5 2\"\n) == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 5\\n\" +\n    \"1 2 3\\n\" +\n    \"1 4 8\\n\" +\n    \"2 3 12\\n\" +\n    \"3 5 4\\n\" +\n    \"4 5 2\\n\"\n) == \"35 39 36 27 29\"\nassert solution(\n    \"7 5\\n\" +\n    \"1 2 3 4 5 6\\n\" +\n    \"1 2 3 4 5 6\\n\" +\n    \"1 2 3 4 5 6\\n\" +\n    \"1 2 3 4 5 6\\n\" +\n    \"1 2 3 4 5 6\\n\" +\n    \"1 2 3 4 5 6\\n\"\n) == \"28 129 761 29\""
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '35 39 36 27 29'\n\n\"\"\"\n--- Day 10: Adapter Array ---\nhttps://adventofcode.com/2020/day/10\n\n--- Part Two ---\nhttps://adventofcode.com/2020/day/10\n\n\"\"\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '35 39 36 27 29'\nassert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n') == '35 39 36 27 29'\nassert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '35 39 36 27 29'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\nassert solution('3 3\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '39 36 27 29'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"35 39 36 27 29\"\nassert solution(\"10 10\") == \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '0 672'\nassert solution('8 3') == '0 0 0 0 0 0 0 0 0'\n\nExplanation\nSample Case 1\n\nIf the parameters are (M = 3, N = 3):\n\nThe picture after the first step is:\n\nBelow are three examples of valid pictures:\n\nAfter few hours of hard work, Bash has finished his painting, and shows his best friend Cee. The picture satisfies all the above properties, with parameters $b = (c_{1}, c_{2}, \\ldots, c_{N})$ and $r = (M - c_{1}, M - c_{2}, \\ldots M - c_{N})$. No cells are left unpainted in this picture.\n\nCee wants to know step-by-step of how Bash created such beautiful painting. Bash can not remember the order which he painted the cells, but Bash remembers that he always followed these rules:\n - Bash starts with an empty picture.\n - First, Bash paints the bottom-left cell $(1, 1)$ blue and the top-right cell $(M, N)$ red.\n - In each step, Bash chooses some unpainted cell, paints it either red or blue, such that the picture after this step satisfies all the above properties.\n - The process stops when the picture is completed.\n\nCee tries to follow Bash\u2019s rules to replicate the painting. But first Cee wants to know how many ways Cee can create the painting. Two ways are considered different if there exists a step where the painted cells are different.\n\nTwo ways are considered different if there exists a step where the painted cells are different.\n\nRepresent the result as $100003^X \\times Y$, where $Y$ is not divisible by $100003$, and output $X \\; Y_ m$ where $Y_ m$ is the result of $Y \\bmod 100003$.\n\nSample Input:\n3 2\n1 4 3\nSample Output:\n0 5\n\"\"\"\nimport time"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '0 672'\n\"\"\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    10 10\n    1 1 4 5\n    2 2 1 3\n    2 1 1 3\n    1 1 1 2\n    1 3 5 3\n    1 1 3 3\n    3 3 1 2\n    1 2 2 1\n    3 2 1 2\n    2 2 1 2\n    3 2 1 1\n    3 2 3 1\n    2 3 1 3\n    3 3 1 3\n    3 2 1 3\n    3 3 1 3\n    3 2 1 2\n    2 3 1 2\n    2 2 1 2\n    2 3 1 2\n    2 3 1 2\n    3 3 1 2\n    2 3 1 2\n    2 3 1 2\n    1 2 2 1\n    2 2 1 2\n    1 3 1 3\n    1 3 1 3\n    1 3 5 3\n    1 3 5 3\n    1 2 2 1\n    1 3 5 3\n    3 3 1 2\n    2 2 1 2\n    3 3 1 2\n    2 2 1 2\n    2 3 1 2\n    3 2 1 2\n    2 2 1 2\n    3 2 1 2\n    3 2 1 2\n    3 2 1 2\n    3 2 1 2\n    2 2 1 2\n    2 2 1 2\n    1 2 2 1\n    2 2 1 2\n    1 3 5 3\n    1 3 5 3\n    1 3 5 3\n    1 3 5 3\n    3 3 1 2\n    3 2 1 2\n    2 2 1 2\n    3 2 1 2\n    2 2 1 2\n    3 2 1 2\n    3 2 1 2\n    2 2 1 2\n    2 2 1 2\n    3 2 1 2\n    3 2 1 2\n    2 2 1 2\n    2 2 1 2\n    1 2 2 1\n    2 2 1 2\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1 3 1 3\n    1"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n3 2 1') == '0 672'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 2 1\") == \"0 672\"\nassert solution(\"2\\n3 2 1\") == \"1 721\"\nassert solution(\"3\\n3 2 1\") == \"0 1055\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '0 672'\nassert solution('3 5 5') == '0 384'\nassert solution('2 1 1') == '1 1 1'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"672\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n\"\"\""
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n3 2 1\n''') == '0 672'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 1') == '0 0'\nassert solution('4 5 5') == '0 1'\n\n'''\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 1') == '0 1'\nassert solution('5 2 2') == '1 0'\nassert solution('4 4 6') == '0 2'\nassert solution('10 3 5') == '8 2'\nassert solution('6 7 7') == '0 2'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"Impossible\""
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == '2.500000'\nassert solution('5 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == 'Impossible'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == 'Impossible'\nassert solution('2\\n3\\n3') == '2.5000000'\nassert solution('3\\n3\\n3') == '3.5000000'\nassert solution('1\\n0\\n1') == '1.5000000'\nassert solution('1\\n10\\n10') == '1.0'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 100') == '2.500000'\nassert solution('4 5 100') == 'Impossible'\n\"\"\""
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"Impossible\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 20 35\") == \"0.0\"\nassert solution(\"2 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"0.0\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 20 35\") == \"0.0\""
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5 100') == '2.500000'\nassert solution('2 4 2') == 'Impossible'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n2 2 18\\n2 40 50') == 'Impossible'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2 3\\n0 1\\n1 2\\n') == '1'\nassert solution('4\\n2 3\\n0 1\\n1 2\\n1 3\\n1 4\\n') == 'Impossible'\nassert solution('4\\n2 3\\n0 1\\n1 2\\n1 3\\n1 4\\n') == '2.5'\nassert solution('4\\n2 3\\n0 1\\n1 2\\n1 3\\n1 4\\n') == 'Impossible'\nassert solution('4\\n2 3\\n0 1\\n1 2\\n1 3\\n1 4\\n') == '3.25'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n1 2\\n2 3\\n1 3\\n1 4\\n2 4\\n3 5\\n4 5\\n2 4\\n4 5') == 'Impossible'\nassert solution('5\\n1\\n4\\n3\\n3\\n2\\n3\\n4\\n5\\n3\\n4\\n2\\n2\\n1\\n2\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n2\\n4\\n3\\n3\\n4\\n5\\n2\\n3\\n4\\n5\\n4\\n5\\n3\\n4\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n3\\n2\\n1\\n4\\n3\\n3\\n4\\n3\\n3\\n2\\n2\\n1\\n3\\n2\\n3\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n1\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n4\\n4\\n2\\n3\\n3\\n3\\n3\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5 100\") == \"2.500000\"\nassert solution(\"1 1 0\") == \"Impossible\"\n\"\"\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3 4\n''') == '3'\nassert solution('''\n5 10 2\n''') == '3'\nassert solution('''\n5 5 3\n''') == '5'\n''')"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5 3 4\n''') == '3'\nassert solution('''\n3\n6 5 3\n''') == '4'\n''')\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '4'\nassert solution('100') == '11'\nassert solution('1000000') == '20'\nassert solution('25') == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\"\nassert solution(\"3\\n5 3 5 4\") == \"4\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '4'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3 2 4') == '1'\nassert solution('2\\n3 5 7') == '2'\nassert solution('3\\n4 8 7') == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 2\") == \"2\"\nassert solution(\"1 1 1 2 3\") == \"3\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('5 3 4') == '3'\nassert solution('1000000') == '1000000'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 1\n''') == '2'\nassert solution('''\n2 2 2\n''') == '0'\n'''\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1 2\n''') == '1'\n\nassert solution('''\n3 1 3\n''') == '2'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('1 1 2') == '0'\nassert solution('3 2 3') == '8'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 1') == '2'\nassert solution('6 1 1') == '5'\nassert solution('6 1 1') == '2'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1 1\n1\n''') == '2'\n\nassert solution('''5 5 6\n2\n''') == '8'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 1') == '2'"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\\n\") == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1') == '2'"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == \"2\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1 1\n''') == '2'\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('4 2 3') == '10'\nassert solution('5 1 2') == '10'\nassert solution('6 5 2') == '8'\n\nimport sys\nfrom typing import List"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 5') == '7'\nassert solution('2\\n4 5') == '9'\nassert solution('3\\n4 5') == '8'\nassert solution('4\\n5 6') == '9'\nassert solution('5\\n3 5') == '7'\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 3 5') == '7'\nassert solution('4\\n1 2 5 7') == '7'\nassert solution('6\\n7 8 9 1 2') == '1'\nprint('You are all set!')\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 3 5') == '7'\nassert solution('5\\n1 1 2 3 5') == '5'\nassert solution('1\\n1 2 3 4 5') == '1'\nassert solution('2\\n2 4 5') == '1'\nassert solution('2\\n1 2 3 4 5') == '1'\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3 5\n''') == '7'\n\nassert solution('''\n2\n1 2\n''') == '0'\n\nassert solution('''\n3\n1 2 3\n''') == '0'\n\nassert solution('''\n4\n1 3 2 3\n''') == '4'\n\nassert solution('''\n5\n1 2 2 3 2\n''') == '3'\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n12 3 21\") == \"8\"\nassert solution(\"4\\n2 1 4 8\") == \"8\""
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(samples.SAMPLE_1) == \"7\"\nassert solution(samples.SAMPLE_2) == \"26\"\n\"\"\"\nfrom math import log2\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('3 9 4 2') == '13'\nassert solution('6') == '7'\nassert solution('3') == '3'"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n10\n''') == '11', \"First\"\n\nassert solution('''\n2\n3 5\n''') == '5', \"Second\"\n\nassert solution('''\n100000\n3\n1 3 5\n''') == '7', \"Third\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2\njohn rhinocerous 2 jets\njohn rhinocerous 1 jets\njohn rhinocerous 2 jets\n\"\"\") == \"\"\"\njohn rhinocerous 1 jets\njohn rhinocerous 2 jets\njohn rhinocerous 2 jets\n\"\"\".strip()\nassert solution(\"\"\"\n2\n1\nmary rhinocerous 2 jets\n\"\"\") == \"\"\"\nmary rhinocerous 2 jets\n\"\"\".strip()\nassert solution(\"\"\"\n2\n2\nmary rhinocerous 2 jets\njohn rhinocerous 2 jets\n\"\"\") == \"\"\"\njohn rhinocerous 2 jets\n\"\"\".strip()\nassert solution(\"\"\"\n3\n3\njohn rhinocerous 2 jets\njohn rhinocerous 1 jets\njohn rhinocerous 2 jets\n\"\"\") == \"\"\"\njohn rhinocerous 1 jets\n\"\"\".strip()\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rocks\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''\nfred jetsons\njohn jets\nruth rockets\n'''"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1\neric dicks 2\neric jonkers 1\neric grayman 2\n1\n1\neric jonkers 1\neric grayman 1\neric jonkers 1\neric grayman 2\n\"\"\") == \"eric jonkers\"\nassert solution(\"\"\"\n2\n1\neric jonkers 1\neric grayman 1\neric jonkers 1\neric grayman 2\n\"\"\") == \"eric jonkers\"\nassert solution(\"\"\"\n2\n1\neric jonkers 1\neric grayman 1\neric jonkers 1\neric grayman 2\n\"\"\") == \"eric jonkers\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''\nfred jetsons\njohn jets\nruth rockets'''\nassert solution('''\n5\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nsteve psang 3 jets\n''') == '''\nsteve psang'''\nassert solution('''\n3\nfred dinosaur 2 jets\njohn rhinocerous 2 jetsons rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nsteve psang 3 jets\n''') == '''\nsteve psang'''\nassert solution('''\n3\nfred dinosaur 2 jets\njohn rhinocerous 2 jetsons rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nsteve psang 3 jets\n''') == '''\nsteve psang'''\n\ninput()"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"\"\"\njets\n\"\"\".lower()\nassert solution(\"\"\"\n3\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nruth platypus 1\nruth platypus 1\nruth platypus 1\n\"\"\") == \"\"\"\njets\n\"\"\".lower()\n\nassert solution(\"\"\"\n10\n3\nfred dinosaur 2 jets\njohn rhinocerous 2 jets\nmary rhinocerous 2\nruth platypus 1\n\"\"\") == \"\"\"\njets\n\"\"\".lower()\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''\nfred jetsons\njohn jets\nruth rockets\n'''\nassert solution('''\n1\n1\nfred dinosaur 2\njohn rhinocerous 2\nmary rhinocerous 2\nruth platypus 1\n''') == '''\nruth platypus 1\n'''\nprint('All test cases passed.')"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'john jets\\nmary jets\\nruth jets\\n'\nassert solution('10') =='mary jets\\nruth jets\\n'\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''\nfred jetsons\njohn jets\nruth rockets\n'''\n\nassert solution('''\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\n''') == '''\nfred jetsons\njohn rockets\n'''\nassert solution('''\n1\nfred dinosaur 2 jets jetsons\n''') == '''\nImpossible\n'''\nassert solution('''\n2\ndinosaur 2 jets\n''') == '''\ndinosaur\n'''\nassert solution('''\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''\ndinosaur\n'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''\nfred jetsons\njohn jets\nruth rockets\n'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n') == \"Impossible.\\nImpossible.\\nImpossible.\\n\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3') == '1 2 1'\nprint(solution('''3\n4 3\n-10 9\n-2 3'''))\nassert solution('''2\n0 1\n5 0''') == '3 1 2 2'\nassert solution('''3\n-10 9\n-2 3\n3 8''') == '1 1 1 2 1'\nassert solution('''3\n10 3\n-10 9\n-2 3''') == '1 1 1 1'\nassert solution('''3\n10 10\n-10 -8\n-2 3''') == '1 1 2 1 2'\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"1 1\"\nassert solution('3') == \"1 1 1\""
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n-1\n1\n\"\"\") == \"1 1 1\"\n\nassert solution(\"\"\"\n1\n-1\n0\n\"\"\") == \"1 1 0\"\n\nassert solution(\"\"\"\n1\n1\n0\n\"\"\") == \"1 1 1\"\n\nassert solution(\"\"\"\n2\n1 -2\n1 -2\n\"\"\") == \"1 0 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n4 3\n-10 9\n-2 3\n\"\"\") == \"1 2 1\"\n\nassert solution(\"\"\"\n5\n1 0\n3 3\n-2 2\n-5 6\n1 5\n-1 0\n\"\"\") == \"4 4 2 1\"\n\nassert solution(\"\"\"\n10\n3 3\n1 1\n-2 2\n-2 1\n1 4\n-1 1\n-1 -1\n1 2\n-1 3\n1 1\n-1 -1\n-1 -1\n1 4\n-1 1\n1 3\n\"\"\") == \"2 2 1 2 1 2 2 1 2 3 1 4\"\n\nassert solution(\"\"\"\n8\n-1 -1\n-1 -1\n-1 2\n-1 -1\n1 -1\n-1 -1\n1 -1\n-1 -1\n\"\"\") == \"6 6 2 1\"\n\nassert solution(\"\"\"\n4\n1 1\n1 -1\n-1 -1\n-1 1\n\"\"\") == \"2 2 1 1\""
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n4 3\n-10 9\n-2 3\n''') == '2 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1 2 1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n4 3\n-10 9\n-2 3\n\"\"\") == \"1 2 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 2 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n2\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n2\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n3\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n3\n-10 9\n-2 3\n''') == '1 2 1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3\\n') == '1 2 1'\n\"\"\""
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n\"\"\"\n) == \"2.125\"\n\n\"\"\"\n1 2 3\n2 2 3\n3 3 3\n3 2 3\n3 2 3\n\"\"\"\n\nassert solution(\n\"\"\"\n2 1 3\n2 2 3\n3 3 3\n3 2 3\n3 2 3\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n1 1 1\n1 1 1\n1 1 1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n2 1 1\n2 2 1\n3 3 1\n\"\"\"\n) == \"2\"\n\n\"\"\"\n10 1 10\n9 9 9\n8 8 8\n7 7 7\n6 6 6\n5 5 5\n4 4 4\n3 3 3\n2 2 2\n1 1 1\n0 0 0\n\"\"\"\n\nassert solution(\n\"\"\"\n5 5 5\n5 4 5\n4 4 4\n3 3 3\n2 2 2\n1 1 1\n0 0 0\n\"\"\"\n) == \"5\"\n\n\"\"\"\n5 1 1\n5 2 1\n5 3 1\n5 4 1\n4 4 4\n3 3 3\n2 2 2\n1 1 1\n\"\"\""
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 1 4\n2 3 6\n10 7 10\n4 7 4\n10 4 5\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\nSample Output:\n1.0\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 1 7\n3 2 3\n5 1 4\n6 10 10''') == '2.125', \"Wrong!\"\nassert solution('''1\n1 1 7\n2 2 2\n5 1 4\n6 10 10''') == '3.714285714285714', \"Wrong!\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '2.125'\nassert solution('4\\n1 2 3\\n3 2 4\\n4 2 5\\n5 3 5\\n6 3 6\\n') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n\"\"\") == \"2.125\"\nassert solution(\"\"\"\n3\n2 1 7\n1 2 3\n5 1 4\n6 10 10\n\"\"\") == \"2.125\"\nassert solution(\"\"\"\n4\n2 1 7\n3 2 3\n1 2 3\n5 1 4\n6 10 10\n\"\"\") == \"2.125\"\nassert solution(\"\"\"\n3\n1 1 7\n3 2 3\n5 1 4\n\"\"\") == \"2.125\"\nassert solution(\"\"\"\n3\n1 1 7\n3 2 3\n5 1 4\n\"\"\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n7 9 10\nSample Output:\n4.25\n''') == '4.25'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 1 7\n3 2 3\n5 1 4\n6 10 10\nSample Output:\n2.125\n''') == '2.125'\nassert solution('''\n2\n3 2\n3 4\nSample Output:\n2.125\n''') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\nSample Input 2:\n8\n8 8 9\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n2 6 6\n2 7 7\n2 8 8\n3 9 9\n4 10 10\n5 11 11\n6 12 12\n7 13 13\n8 14 14\n9 15 15\n10 16 16\nSample Output 2:\n21.0\n''') == '21.0'\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"*.*\") == [\"main.c\", \"a.out\"]\n\"\"\"\n\n\nclass Solution:\n    def solution(self, pattern):\n        result = []\n        for i in range(1, 101):\n            if fnmatch.fnmatch(i, pattern):\n                result.append(str(i))\n        return result\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('*.*') =='main.c\\na.out\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\nassert solution(\\'*.*\\') == \\'main.c\\n\\ta.out\\n\\tdef solution(stdin: str) -> str:\\n\\t\\tpass\\n\\t\\tassert solution(\\'*.*\\') == \\'main.c\\n\\t\\t\\ta.out\\n\\t\\t\\tdef solution(stdin: str) -> str:\\n\\t\\t\\tpass\\n\\t\\t\\tassert solution(\\'*.*\\') == \\'main.c\\n\\t\\t\\t\\ta.out\\n\\t\\t\\t\\tdef solution(stdin: str) -> str:\\n\\t\\t\\t\\tpass\\n\\t\\t\\t\\tassert solution(\\'*.*\\') == \\'main.c\\n\\t\\t\\t\\t\\ta.out\\n\\t\\t\\t\\t\\tdef solution(stdin: str) -> str:\\n\\t\\t\\t\\t\\tpass\\n\\t\\t\\t\\t\\t"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"a.out\") == \"a.out\"\n\nassert solution(\"*.*\") == \"a.out\"\n\nassert solution(\"*.c\") == \"main.c\"\n\nassert solution(\"a.c\") == \"a.c\"\n\nassert solution(\"a.out.c\") == \"a.out.c\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('*') == ['main.c', 'a.out', 'yacc']\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"**/*.c\") == [\"main.c\", \"a.out\", \"readme\", \"yacc\"]\n\"\"\"\n\nimport os\n\nPATTERN = input()\nN = int(input())\nFILES = []\nfor _ in range(N):\n    FILES.append(input())\n\nfor file_name in FILES:\n    if '*' in PATTERN or '?' in PATTERN:\n        file_name = ''.join(c for c in file_name if c.isalpha() or c.isdigit() or c == '.')\n    else:\n        file_name = ''.join(c for c in file_name if c.isalpha() or c.isdigit() or c == '.')\n    if file_name.find(PATTERN)!= -1:\n        print(file_name)"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"*.*\\n1\\nmain.c\\na.out\\nreadme\\nhello\\nsolution\\n**\"\n    ) == \"main.c\\na.out\\nhello\\n\"\n\"\"\"\n\n\nimport re\nimport sys\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('*.*') =='main.c\\na.out\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\nassert solution(input()) =='main.c\\na.out\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\nassert solution(input()) =='main.c\\na.out\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\nassert solution(input()) =='main.c\\na.out\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\nassert solution(input()) =='main.c\\na.out\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"*.*\") == [\"main.c\",\"a.out\"]\n\n----------------\nSample Input:\n*.c\n5\n/usr/local/lib/python3.8/dist-packages/pandas/_libs/parsers.py\nSample Output:\n/usr/local/lib/python3.8/dist-packages/pandas/_libs/parsers.py\n----------------\nSample Input:\n*.c\n5\n/usr/local/lib/python3.8/dist-packages/pandas/_libs/parsers.py\n/*.c\nSample Output:\n/usr/local/lib/python3.8/dist-packages/pandas/_libs/parsers.py\n----------------\nSample Input:\n*.c\n5\n/usr/local/lib/python3.8/dist-packages/pandas/_libs/parsers.py\n/*.c\nSample Output:\n*/usr/local/lib/python3.8/dist-packages/pandas/_libs/parsers.py\n----------------\nSample Input:\n*.c\n5\n/usr/local/lib/python3.8/dist-packages/pandas/_libs/parsers.py\n/*.c\n/*.py\nSample Output:\n*/usr/local/lib/python3.8/dist-packages/pandas/_libs/parsers.py\n\"\"\"\n\npattern = input().strip()\ncount = int(input())\nfiles = []\n\nfor i in range(count):\n    files.append(input())\n\nprint(*[f for f in files if f.startswith(pattern)],sep=\"\\n\")\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''*.*''') == ['main.c', 'a.out']\nassert solution('''*.*''') == ['main.c', 'a.out']\nassert solution('''*.*''') == ['main.c', 'a.out']\nassert solution('''*.*''') == ['main.c', 'a.out']\n\nSample Input:\na.out\nc\nSample Output:\na.out\nc\n'''\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('*.*') == ['main.c', 'a.out','readme', 'yacc']\n\nSample Input:\n/Users/lucas/Documents/Python/labs/lab05/\n4\nREADME.md\nREADME.TXT\nREADME.BASICS\nREADME.TESTING\nSample Output:\nREADME.md\nREADME.TXT\nREADME.BASICS\nSample Input:\n/Users/lucas/Documents/Python/labs/lab05/\n3\n*.py\n.doc\nREADME\nSample Output:\nREADME\n*.py\n.doc\n\n\"\"\"\n\nimport sys\n\nassert sys.version_info >= (3, 7), \"This script requires at least Python 3.7\"\n\nimport pathlib, os, sys"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.500000\\n0.500000') == '0.500000'\n\n---Input---\n2\n8 1\n0.001 0.1 0.01 0.1 0.0001 0.001 0.001\n1 0.9 0.8\nSample Output:\n0.8\n0.8\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0.500000'\nassert solution('1 1.5') == '0.500001'\nassert solution('0.500001') == '0.500001'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000''') == '0.500000'\n\nassert solution('''5 1\n0.5000001\n0.5000002\n0.5000001\n0.5000002\n0.5000002''') == '0.5000002'\n\nassert solution('''5 1\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000''') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1\\n0.5\\n') == '0.500000'\nassert solution('1 1\\n0.500000\\n') == '0.500000'\nassert solution('1 1\\n0.500000\\n') == '0.500000'\nassert solution('1 1\\n0.500000\\n') == '0.500000'\nassert solution('1 1\\n0.500000\\n') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n0.500000\n0.500000''') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\nassert solution('1 2\\n0.250000') == '0.250000'\nassert solution('1 2\\n0.500001') == '0.500001'\nassert solution('1 2\\n0.500000') == '0.500000'\nassert solution('1 2\\n0.500001') == '0.500001'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1\\n0.500000\\n0.611718') == '0.611718', solution('3 1\\n0.500000\\n0.611718')\nassert solution('3 1\\n0.500000\\n0.611718') == '0.611718', solution('3 1\\n0.500000\\n0.611718')\nassert solution('3 1\\n0.500000\\n0.611718') == '0.611718', solution('3 1\\n0.500000\\n0.611718')\nassert solution('3 1\\n0.500000\\n0.611718') == '0.611718', solution('3 1\\n0.500000\\n0.611718')\nassert solution('3 1\\n0.500000\\n0.611718') == '0.611718', solution('3 1\\n0.500000\\n0.611718')\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.1000000') == '0.1000000'\nassert solution('5 0.920000\\n0.000000\\n0.150000\\n0.250000\\n0.500000\\n0.1000000') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0.500000\") == \"0.500000\"\nassert solution(\"1 1\\n0.500000\") == \"0.500000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n1\n2\n''') == '0.25'\nassert solution('''\n1 1\n0.000000\nSample Input:\n1 1\n0.0\nSample Output:\n0.25\n''') == '0.25'\nassert solution('''\n1 1\n0.1\nSample Input:\n1 1\n0.11\nSample Output:\n0.19\n''') == '0.19'\n'''\n\n---Solution---\nn, m = map(float, input().split())\np = float(input())\np1 = round(p, 6)\np2 = 1.0 - p\nn1 = round(n, 6)\nn2 = 1.0 - n\nprob1 = n1 * p1 + n2 * p2\nprob2 = m * p1 + (n1 - m) * p2\nprint(round(prob1, 6))\nprint(round(prob2, 6))\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"0.0\"\n\nInput:\n0 49.9\nOutput:\n0.0\n\nInput:\n15 49.9\nOutput:\n15.0\n\nInput:\n15 0.7\nOutput:\n15.0\n\nInput:\n15 0.0\nOutput:\n15.0\n\nInput:\n15 -0.7\nOutput:\n15.0\n\nInput:\n15 -0.0\nOutput:\n15.0\n\nInput:\n15 0.0000001\nOutput:\n15.000001\n\"\"\""
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 49.9') == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 49.9') == '0.0'\n\"\"\"\n\nx = int(stdin.split()[0])\np = float(stdin.split()[1])"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 49.9') == '0.0'\n\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 49.9') == '0.0'\n\n\"\"\"\n\n############################################################\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '0 49.9') == '0.0'\nassert solution(\n    '1 60.5') == '2.0'\nassert solution(\n    '1 20.9') == '2.0'\nassert solution(\n    '1 20.0') == '2.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0 49.9\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4\n0 20.4"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0.1') == '0.0'\nassert solution('10 0.5') == '0.0'\n\n\"\"\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 50.9') == '0.0'\nassert solution('1 5.4') == '4.8999999999999996'\nassert solution('1 5.9') == '2.150000000000001'\nassert solution('2 5.4') == '6.100000000000001'\nassert solution('2 5.9') == '3.3000000000000001'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"0.0\"\n'''"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 1\n4 1\n\"\"\") == \"1 2\\n2 3\\n3 1\\n4 1\\n\"\"\n\nassert solution(\"\"\"\n3\n2 1\n3 2\n1 3\n\"\"\") == \"2 1\\n3 2\\n1 3\\n\"\"\n\nassert solution(\"\"\"\n3\n1 1\n2 2\n3 3\n\"\"\") == \"1 1\\n3 3\\n2 2\\n\"\"\"\n\nassert solution(\"\"\"\n6\n1 2\n1 3\n2 3\n3 4\n2 5\n3 5\n\"\"\") == \"1 2\\n2 3\\n3 4\\n3 5\\n2 5\\n\"\"\"\n\nassert solution(\"\"\"\n7\n1 4\n1 5\n2 6\n2 7\n3 8\n3 9\n4 10\n4 11\n\"\"\") == \"1 4\\n1 5\\n2 6\\n2 7\\n3 8\\n3 9\\n4 10\\n4 11\\n\"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3\\n'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '1 2\\n2 3\\n3 1\\n4 1\\n'\nassert solution('3\\n1 2\\n2 3\\n3 1\\n') == '1 2\\n2 3\\n3 1\\n'\nassert solution('2\\n1 2\\n2 3\\n3 1\\n') == '1 2\\n2 3\\n3 1\\n'\nassert solution('1\\n1 2\\n2 3\\n3 1\\n') == '1 2\\n2 3\\n3 1\\n'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1 2\\n2 1\\n3 1\"\nassert solution(\"4\") == \"4 1\\n1 3\\n2 3\\n3 1\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 1\n4 1\n''') == '4 1 2 3'\nassert solution('''\n4\n2 3\n1 2\n3 1\n4 1\n''') == '2 1 3 4'\n'''"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3'\nassert solution('3\\n1 2\\n2 3\\n3 1\\n4 1') == '3 1\\n2 1\\n1 4\\n1 3'"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n2 3\") == \"1 2\"\nassert solution(\"3\\n1 2\\n2 3\\n3 1\") == \"1 2\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"2 1\"\nassert solution(\"4 2\") == \"2 1 3 4\"\nassert solution(\"5 1\") == \"1 1 2 3 4\"\n\n'''"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2 1'\nassert solution('3 2') == '1 2'\nassert solution('4 1') == '1 3'\nassert solution('5 3') == '3 2 1 5'\nassert solution('5 5') == '3 2 1 5 5'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n) == \"1\"\n\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n) == \"2\"\n\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n    \"1 2 5 3 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n) == \"1\"\n\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n    \"1 2 5 3 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n) == \"2\"\n\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n    \"1 2 5 3 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\"\n    \"2 3 4 5\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '6 5\\n'\n    '2 1 6 3 5 3\\n'\n    '1 2 5 3 5\\n'\n) == '1'\nprint(solution())\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6 5\n2 1 6 3 5 3\n1 2 5 3 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"6 5\n2 1 6 3 5 3\n1 2 5 3 5\n\"\"\") == \"0\"\n\nassert solution(\"\"\"6 5\n2 1 6 3 5 3\n1 2 5 3 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"6 5\n2 1 6 3 5 3\n1 2 5 3 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"6 5\n2 1 6 3 5 3\n1 2 5 3 5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n10 3\n1 5 3 2 4 3\n2 5 5\n''') == '1'\nassert solution(\n'''\n10 3\n1 2 2 3\n1 3 3\n''') == '1'\nassert solution(\n'''\n10 4\n5 3 1 3 2\n2 3 2\n2 3 1\n''') == '2'\nassert solution(\n'''\n10 5\n1 3 1 2 1 2\n1 1 1\n''') == '1'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3') == '1'\nassert solution('10 10\\n1 1 1 1 1 1 1\\n1 2 5 3 4 1') == '9'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 3 2\\n2 3') == 'forever'\nassert solution('4 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 3 2\\n2 3') == 'forever'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1\\n2 1 6 3 5 3') == '1'\nassert solution('10 100000\\n3 3 3 3 3 3 3 3 3 3 3 3 3\\n1 2 5 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution(\"1 2 2\") == '2'\nassert solution(\"2 1 2\") == '1'\nassert solution(\"2 1\") == '0'\nassert solution(\"1 1 2 2 2\") == '2'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 10') == '3'\nassert solution('0 1 1 2 6') == 'impossible'\n\"\"\""
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 3\n3\n4\n''') == '3'\nassert solution('''\n1 1 1 1\n1\n''') == '3'\nassert solution('''\n1 1 1 1\n2\n''') == '3'\nassert solution('''\n2 3 3\n3\n4\n''') == '3'\nassert solution('''\n3 3 3\n3\n4\n''') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\n\"\"\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\nassert solution('5 7 5 4 6 8\\n3 1 5 2 4 6') == '9'\nassert solution('5 1 5 4 6 8\\n2 1 5 2 4 6') == '11'\nassert solution('5 1 5 4 6 8\\n1 2 5 2 4 6') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 10\\n0 1 1 2 6') == '3'\nassert solution('1 1 10\\n0 1 1 2 6\\n1 1 1 2 6\\n3 1 1 1 2 6') == '1'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 10') == '3'\nassert solution('0 1 1 2 6') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 10') == '3'\nassert solution('2 1 10 0 1 1 2 6') == '2'\nassert solution('5 1 1 1 2 3 4 5 4 5') == '5'\nassert solution('3 4 6 7 8 10 0 10 0 0') == '10'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 10') == '3'\nassert solution('2 1 5') == 'impossible'\nassert solution('2 3 3') == 'impossible'\nassert solution('6 4 1 2 3 5 4') == '3'"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 100\n99 1\n1 99\n''') == '2'\nassert solution('''\n10 1\n5 9\n''') == '10'\nassert solution('''\n1 5\n1 2\n2 1\n''') == '1 1'\nassert solution('''\n2 6\n3 4\n''') == '3 4'\nassert solution('''\n5 3\n3 3\n2 2\n1 1\n''') == '3 3'"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 100\n99 1\n1 99\n1 2\n''') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '1 2'\nassert solution('2 50\\n30 50') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 100\n99 1\n1 99\n''') == '2'\nassert solution('''\n2 100\n99 1\n1 99\n''') == '2'\nassert solution('''\n10 30\n99 1\n2 99\n1 99\n1 99\n1 99\n2 99\n3 99\n3 99\n3 99\n3 99\n''') == '3'\nassert solution('''\n10 30\n99 1\n2 99\n1 99\n1 99\n1 99\n2 99\n2 99\n2 99\n2 99\n''') == '3'\nassert solution('''\n10 20\n99 1\n2 99\n1 99\n1 99\n1 99\n1 99\n2 99\n2 99\n2 99\n2 99\n''') == '2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2 1 2'\nassert solution('2 100\\n1 99\\n1 99') == '2 1 2'\nassert solution('2 100\\n99 1\\n99 1') == '2 1 2'\nassert solution('3 100\\n99 99 99\\n99 99 99') == '2 1 2'\nassert solution('3 100\\n99 999 999\\n99 999 999') == '2 1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 100\n99 1\n1 99\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n10 0\n100 99\n2 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 0\n99 1\n2 2\n\"\"\") == \"1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 100]) == \"1 2\"\nassert solution([99, 1]) == \"1 2\"\nassert solution([1, 99]) == \"1 2\"\nassert solution([99, 1]) == \"1 2\"\nassert solution([1, 1]) == \"1\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n1 1\n''') == '1'\n\nassert solution('''\n2 200\n99 1\n1 99\nSample Output:\n2\n1 2\nSample Input:\n1 50\n1 50\nSample Output:\n1\n''') == '1'\n\nassert solution('''\n1 100\n99 1\n1 99\nSample Output:\n2\n1 2\nSample Input:\n2 200\n99 1\n1 99\nSample Output:\n2\n1 2\nSample Input:\n3 200\n1 100\n2 99\nSample Output:\n1\n''') == '1'\n\nassert solution('''\n2 100\n99 1\n1 99\nSample Output:\n2\n1 2\nSample Input:\n3 200\n1 100\n2 99\nSample Output:\n1\n''') == '1'\n\nassert solution('''\n2 100\n99 1\n1 99\nSample Output:\n2\n1 2\nSample Input:\n4 200\n1 100\n2 99\nSample Output:\n2\n1 3\nSample Input:\n4 200\n1 100\n2 99\nSample Output:\n1\n''') == '1'"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 100\n99 1\n1 99\n''') == '2 1 2'\n'''"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 100\n99 1\n1 99\n''') == '2 1 2'\nassert solution('''\n2 100\n99 1\n1 99\n''') == '2 1'\nassert solution('''\n1 100\n99 1\n1 99\n''') == '2 1'\nassert solution('''\n2 100\n99 1\n1 99\n''') == '2 1'\nassert solution('''\n2 100\n1 99\n1 99\n''') == '2 1'"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nH\nT\n0.5\n\"\"\") == \"0.5\", \"First\"\nassert solution(\"\"\"\nH\nH\n0.5\n\"\"\") == \"0.5\", \"Second\"\nassert solution(\"\"\"\nH\nT\n0.5\n\"\"\") == \"0.5\", \"Third\""
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.5\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('H') == 'H'\nassert solution('HT') == 'T'\nassert solution('HT10') == 'T'\nassert solution('HHT') == 'H'\nassert solution('TTT') == 'T'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nH\nT\n0.5\n''') == '0.5'\nassert solution('''\nH\nT\n0.99\n''') == '0.99'\nassert solution('''\nH\nT\n0.001\n''') == '0.001'\nassert solution('''\nH\nT\n0.0003\n''') == '0.0003'\nassert solution('''\nH\nT\n0.000000001\n''') == '0.000000001'\n\n'''\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nH\nH\n0.5\n''') == '0.5', 'First'\nassert solution('''\nH\nT\n0.5\n''') == '0.5', 'Second'\nassert solution('''\nT\nH\n0.5\n''') == '0.5', 'Third'\nassert solution('''\nT\nT\n0.5\n''') == '0.5', 'Fourth'\nassert solution('''\nT\nT\n0.5\n''') == '0.5', 'Fifth'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('G') == 'H'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('H\\nH\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nH\\n0.1') == '0.9'\nassert solution('H\\nT\\n0.1') == '0.9'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('H') == 'H'\nassert solution('HT') == 'HT'\nassert solution('HT') == 'HT'\nassert solution('TT') == 'TT'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('H' 'T') == 'H'\nassert solution('H' 'T' '0.5') == 'T'\nassert solution('H' 'T' '0.7') == 'H'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('6') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"2\") == \"1 3\"\n\nassert solution(\"10\") == \"1 3 5 7 9 11 13 15 17 19\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n''') == '8'\nassert solution('''\n1\n''') == '1 3 5 7 9 11 13 15'\nassert solution('''\n4\n''') == '0'\n''')\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n4\\n1') == '8\\n1 3 5 7 9 11 13 15\\n'\n\"\"\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '1 3 5 7 9 11 13 15'\n\n'''"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('\\\n3\\\n') == '8\\\n1 3 5 7 9 11 13 15'\nassert solution('\\\n4\\\n') == '8\\\n1 3 5 7 9 11 13 15 16 17'"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '8\\n1 3 5 7 9 11 13 15\\n'\nassert solution('6') == '8\\n1 3 5 7 9 11 13 15\\n'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('5') == '6'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('6') == '8'\nassert solution('10') == '1 3 5 7 9 11 13 15'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '8'\nassert solution('7') == '1 3 5 7 9 11 13 15'\nassert solution('9') == '8 1 2 3 4 5 6 7'\n\"\"\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '1'\nassert solution('''\n4\n5 9 2 7\n3\n2 2\n2 5\n1 5\n''') == '0'\nassert solution('''\n1\n10\n5\n''') == '10'\nassert solution('''\n1\n10\n7\n''') == '0'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 5 7') == '3'\nassert solution('3') == '1'\nassert solution('2 2') == '0'\nassert solution('2 5') == '2'\nassert solution('1 5') == '5'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\"\nassert solution(\"5\\n2 1 3 5 7\\n3\\n4 2\\n2 5\\n1 5\\n\") == \"1\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\"\n) == \"3\\n1\\n0\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\n'\nassert solution('5\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\n'\nassert solution('10\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\n'\nassert solution('1000\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\n'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '1\\n0\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 5 7') == '3'\nassert solution('3') == '1'\nassert solution('2 2') == '0'\nassert solution('2 5') == '1'\nassert solution('1 5') == '0'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3\\n3\\n4\\n4\\n') == '4'\n\nprint(solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5\nSample Output:\n3\n1\n0\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 3 5 7''') == '3'\nassert solution('''2 2''') == '0'\nassert solution('''2 5''') == '1'\nassert solution('''1 5''') == '0'\nassert solution('''5''') == '0'\n''')\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0'\nprint(solution('''3 3\n1 -2 1 2\n2 -3 -1 4 5\n2 3 1 2'''))\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 -2 0\") == \"0\""
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 1\\n1 1 -2 0\"\n) == \"0\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"2\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2\n1 1 0\n''') == '0'\nassert solution('''\n3 3\n1 1 -2 0\n0 0 2 0\n0 -1 3 0\n''') == '1'\nassert solution('''\n5 4\n1 -1 -2 0\n1 1 -2 0\n1 0 2 0\n0 1 3 0\n0 0 2 0\n''') == '2'\nassert solution('''\n3 3\n1 1 -2 0\n1 1 -2 0\n1 0 2 0\n''') == '1'\nassert solution('''\n3 4\n1 1 -2 0\n1 0 2 0\n0 -1 3 0\n''') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 -2 0\\n') == '0'\nassert solution('2 1\\n1 1 -2 0\\n') == '1'"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 -2 0') == '0'"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 -1 0 1\\n1 1 -2 0\\n-1 -2 1 1\") == \"0\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5566'\nassert solution('1') == '8888'\nassert solution('2') == '8888'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '194'\nassert solution('3') == '1707'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '194'\nassert solution('2') == '194'\nassert solution('3') == '194'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194'\nassert solution('''\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194'\nassert solution('''\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194'\nassert solution('''\n3\n3\n2020 10 18\n2020 10 19\n2020 10 23\n''') == '311'\nassert solution('''\n4\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '311'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\"\n) == \"194\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '194'\nassert solution('2') == '234'\nassert solution('3') == '1136'\nassert solution('4') == '1034'\nassert solution('5') == '1304'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '147'\nassert solution('2') == '197'\nassert solution('3') == '197'\nassert solution('4') == '197'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n1\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\"\n) == \"194\"\nassert solution(\n    \"\"\"\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\"\n) == \"194\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == '5 12.5'\nassert solution('6 10 10 10 10 0') == '6 12.5'"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"6 10 10 10 10 0\") == \"6 15.5\"\nassert solution(\"5 10 10 5 10 0\") == \"negative-infinity -5\"\nassert solution(\"6 10 10 10 10 0\") == \"6 15.5\"\nassert solution(\"5 10 10 5 10 0\") == \"negative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n'''"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity -5'\nassert solution('5 10 10 5 10 0') == 'negative-infinity'\nassert solution('6 10 10 10 10 0') == '5 12.5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0''') == 'negative-infinity 0\nassert solution('''6 10 10 10 10 0\n6 10 10 5 10 0''') == '5 12.5\nassert solution('''1 10 10 10 10 0\n1 10 10 5 10 0''') == '0 0'''"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity -5\"\nassert solution(\"5 10 10 10 10 0\") == \"negative-infinity 5\""
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 10 0\") == \"negative-infinity 0\"\nassert solution(\"3 1 0\") == \"negative-infinity -5\"\nassert solution(\"2.1 -0.2 1.9 1.8 1.7 1.5 1.4 1.3 1.2 1.1\") == \"negative-infinity -5\"\nassert solution(\"2.1 -1.9 1.8 1.7 1.5 1.4 1.3 1.2 1.1\") == \"negative-infinity -5\"\nassert solution(\"0 0 0 0 0\") == \"positive-infinity positive-infinity positive-infinity\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n'''\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0 -2 3 4\") == \"negative-infinity 0\"\nassert solution(\"-5 0 -2 3 4\") == \"-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == 'negative-infinity -5\\n5 12.5\\nnegative-infinity -5\\n'''\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\n\"\"\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4, 4]) == \"2\"\nassert solution([5, 5]) == \"2\"\nassert solution([4, 30000]) == \"IMPOSSIBLE\"\nassert solution([200, 20000]) == \"IMPOSSIBLE\"\nassert solution([300, 10000]) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == '2'\nassert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n3\n3\n4\n5\n4\n1\n1\n2\n3\n1\n1\n3\n5\n1\n0\n3\n4\n5\n2\n3\n2\n1\n1\n1\n1\n1\n4\n5\n1\n2\n1\n1\n4\n2\n5\n1\n2\n3\n1\n1\n1\n3\n2\n2\n4\n5\n3\n2\n3\n4\n4\n5\n3\n4\n4\n3\n2\n3\n4\n5\n4\n1\n2\n3\n1\n2\n5\n1\n2\n4\n4\n3\n2\n2\n3\n2\n4\n4\n4\n3\n2\n1\n2\n1\n2\n1\n2\n2\n2\n3\n3\n2\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == '2'\n\nassert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'IMPOSSIBLE'\nassert solution('1 2 3') == '2'\nassert solution('5 2 4 5 1') == '4'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\nassert solution('''\n1 1\n1 1000000\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 3\n3 2\n3 1\n''') == '1'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"2 4\") == '6'\nassert solution(\"3 4\") == '7'\nassert solution(\"1 -2 5 200\") == '10'\nassert solution(\"-8 0 -4 -10\") == '-10'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n') == '345 2\\nrotS 2 1\\nnegR 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 4\") == \"345 2\"\nassert solution(\"1 -2 5 200\") == \"345 2\"\nassert solution(\"-8 0 -4 -10\") == \"345 2\"\nassert solution(\"11 4 0 100\") == \"345 2\""
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"5RC\"\nassert solution(\"4 4\") == \"345\"\nassert solution(\"3 4\") == \"rotR 2 1\"\nassert solution(\"5 4\") == \"rotS 2 1\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3\\n-1 -2\\n1 4\\n') == '1 0'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '1 0'\nassert solution('5 5\\n10 100 10 50 100\\n20 200 20 250 20\\n30 30 30 30 30 30\\n40 40 40 40 40 40\\n50 50 50 50 50 50\\n60 60 60 60 60 60\\n70 70 70 70 70 70\\n80 80 80 80 80 80\\n90 90 90 90 90 90\\n100 100 100 100 100 100') == '101 0'"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"\"\"345 2\nrotS 2 1\nnegR 2\n\"\"\"[:-1]\nassert solution(\"\"\"\n4 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"\"\"345 2\nrotS 2 1\nnegR 2\n\"\"\"[:-1]\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"\"\"345 2\nrotS 2 1\nnegR 2\n\"\"\"[1:]\nassert solution(\"\"\"\n3 5\n1 2 3 4 5\n5 2 3 4 1\n1 3 4 2 5\n\"\"\") == \"\"\"289 7\nrotS 2 1\nnegR 2\n\"\"\"[1:]\nassert solution(\"\"\"\n3 6\n1 2 3 4 5 6\n5 2 3 4 1\n1 3 4 2 5\n\"\"\") == \"\"\"17 4\nrotS 2 1\nnegR 2\n\"\"\"[1:]\nassert solution(\"\"\"\n3 2\n1 2 3\n2 1 3\n\"\"\") == \"\"\"2 1\nrotS 2 1\nnegR 2\n\"\"\"[1:]\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"345 2 rotS 2 1 negR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\nrotR 1 1\n''') == '345 2'\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\nrotR 2 1\n''') == '345 2'\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\nrotR 2 1\nrotS 1 1\n''') == '345 2'\nassert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\nrotR 2 1\nrotS 1 1\nrotS 1 1\n''') == '345 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '0.5'\nassert solution('2 2 2') == '0.75'\nassert solution('3 3 3') == '0.25'"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 1 1') == '0.5'\nassert solution('2 6\\n1 1 1 1') == '1.0'\nassert solution('10 6\\n1 1 1 1 1 1 1 1 1 1') == '1.0'\nassert solution('1 1\\n1 2 3') == '0.0'\nassert solution('5 1\\n1 1 1 1 1') == '0.25'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n5 1 1\n''') == '0.5'\nassert solution('''\n3 5\n6 1 1 1 1\n''') == '6'\nassert solution('''\n6 8\n5 1 1 1 1 1\n''') == '9'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"0.5\"\nassert solution(\"5 5\") == \"0.0\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('20 10') == '0.0'\nassert solution('6 4') == '0.833333333333333'\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 10') == '0.5'\nassert solution('10 3 4') == '4'\nassert solution('4 4 4') == '4'\nassert solution('5 1 3 4 4') == '4'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\"\nassert solution(\"6 3\\n6 1 5 7 4\\n\") == \"0.2\""
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('1 2') == '0.5'\nassert solution('1 1') == '0.5'\nassert solution('1 0') == '0.5'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('3 2 2') == '0.5'\nassert solution('3 3') == '0.5'\nassert solution('4 4 4') == '0.4'\nassert solution('1000000000 5') == '0.0'\n\"\"\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 1 1') == '0.5'\nassert solution('1 1 1\\n2 3 2') == '0.5'\nassert solution('2 4 2\\n3 4 3') == '1.0'\nassert solution('4 4 4\\n3 4 4') == '0.25'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5\\n2 6 7\\n3 8 9\\n6 8 5 9\\n8 9 5 1 4\\n6 7 2\\n6 9 7 9\\n5 9 8 9\\n3 9 9 1 6\\n'''\nassert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5\\n2 6 7\\n3 8 9\\n6 8 5 9\\n8 9 5 1 4\\n6 7 2\\n6 9 7 9\\n5 9 8 9\\n3 9 9 1 6\\n'''\n\n'''\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"1 2 4 5 6 7 8 9\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9 11\") == \"1 4 5 2 6 7 3 8 9\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1 3'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n12 5\n1 2\n2 3\n1 4\n5 6\n1 7\n2 8\n4 9\n3 9\n4 7\n7 8\n8 9\n3 6\n6 7\n5 7\n6 8\n8 9\n5 9\n4 7\n1 4\n2 7\n3 4\n4 6\n6 7\n4 8\n7 6\n6 9\n4 9\n3 8\n''') == '2 6 7\\n4 8 9\\n4 7 9\\n'''"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\"\"\") == \"\"\"\n1 4 5\n2 6 7\n3 8 9\n2 6 7\n3 9 8\n5 9 8\n4 6 7\n\"\"\"\n\nassert solution(\"\"\"\n6 3\n2 3\n3 2\n3 1\n1 1\n\"\"\") == \"\"\"\n2 3 1\n\"\"\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5 2 6 7 7 8 9 8 9'\nassert solution('''\n5\n1 2\n3 4\n1 4\n4 3\n1 1\n''') == '1 2 4 3 4 1'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5\\n2 6 7\\n2 7 3\\n3 8 3\\n4 5 9\\n5 6 8\\n6 9 9\\n8 9 6\\n9 5 4\\n'''\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5 2 6 7 7 8 8 9 3 9'\nassert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5 2 6 7 7 8 8 9 3 9'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9 11\") == \"1 4 5 6 7 8 9\"\nassert solution(\"1 4\") == \"1 4\""
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11 2') == '1350'\nassert solution('12000') == '1350'\nassert solution('9000') == '3100'\nassert solution('4500') == '2700'\nassert solution('10000') == '0'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 2\") == \"13500\"\nassert solution(\"12000\") == \"13500\"\nassert solution(\"9000\") == \"10000\"\nassert solution(\"4500\") == \"10000\"\nassert solution(\"10000\") == \"10000\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1000000\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"4 4\") == \"30000\"\nassert solution(\"5 4\") == \"30000\"\nassert solution(\"1000000 2\") == \"10000000\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11 2\") == \"1350\"\nassert solution(\"12000\") == \"1350\"\nassert solution(\"9000\") == \"1150\"\nassert solution(\"4500\") == \"1350\"\nassert solution(\"10000\") == \"1150\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 2') == '13500'\nassert solution('12000') == '13500'\nassert solution('9000') == '13500'\nassert solution('4500') == '13500'\nassert solution('10000') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 2\") == \"1350\"\nassert solution(\"12000\") == \"1350\"\nassert solution(\"9000\") == \"1250\"\nassert solution(\"4500\") == \"1350\"\nassert solution(\"10000\") == \"9000\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"1000000\"\nassert solution(\"5 3\") == \"1000000\"\nassert solution(\"10 2\") == \"1000000\"\nassert solution(\"10 3\") == \"1000000\"\nassert solution(\"100 2\") == \"1000000\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0 0'\nassert solution('2 2') == '0 0'\nassert solution('1 2') == '1 0'\n\n'''"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 4 4 4 4\nSample Output:\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 4 4 4 4\nSample Output:\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 16') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\nSample Output:\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n''') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n\nassert solution('''\n1 2\nabcd\n\n1 2\nabc\n\n2 2\nab\n\n2 1\na\n\n1 2\na\n''') == 'abcd\\nabc\\nabc\\nabc\\nabc\\na\\n\\na\\n'\n\nassert solution('''\n3 3\nabcd\n\n3 3\nabc\n\n3 1\na\n\n3 2\na\n\n3 3\na\n\n''') == 'abcd\\nabc\\nabc\\nabc\\na\\n\\na\\na\\n'\n\nassert solution('''\n3 4\nabcd\n\n3 4\nabc\n\n3 4\nab\n\n3 3\na\n\n3 4\na\n\n3 4\na\n\n''') == 'abcd\\nabc\\nabc\\nabc\\na\\n\\na\\na\\n'\n\nassert solution('''\n1 1\nabcd\n\n1 1\nabc\n\n1 2\na\n\n1 2\na\n\n''') == 'abcd\\nabc\\nabc\\na\\n\\na\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 16') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 16\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\n\"\n\nassert solution(\"2 16\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\n\"\n\nassert solution(\"2 15\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\n\"\n\nassert solution(\"2 15\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\n\"\n\nassert solution(\"1 10\") == \"__One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\n__One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 4\nRed_Bull\n1 1\nPurple_Cow\n2 2\nCow_Bull\n2 4\nPurple_Cow\n2 2\nRed_Bull\n1 1\n''') == '''\nRed_Bull_=___Red_Bull_=\n______Cow_Bull_____\nRed_Bull_=________Red_Bull_=\nCow_Bull_=__________Cow_Bull_=\nPurple_Cow_=__________Purple_Cow_=\n'''"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '2 16'\n    'Hot cross buns! = Hot cross buns! ='\n    '4 4 4 4 4 4 4 4'\n    'One a pen- ny, Two a pen- ny, Hot cross buns! ='\n    '2 2 2 2 2 2 2 2 4 4 4 4'\n    ) == (\n    'Hot_cross_buns!_=___Hot_cross_buns!_=\\n'\n    '____________________Hot_cross_buns!_=\\n'\n    'One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\n'\n    'Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n    )\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '33', solution\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33', \"TEST 1 PASS\"\nassert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33', \"TEST 2 PASS\"\n\nstdin = '''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n'''\nprint(solution(stdin))\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1') == '33'\nassert solution('2 1 1') == '36'\nassert solution('3 2 1') == '36'\nassert solution('3 3 2 2') == '33'\nassert solution('3 2 2 3') == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33', 'Should give thirty-three...'\nprint('All tests passed!')\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 1') == '33'\nassert solution('3 2 1') == '33'\nassert solution('3 2 2') == '1'\nassert solution('3 2 1 1') == '33'\nassert solution('3 2 1 1 1 1') == '2'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == '33'\nassert solution('3 2 1') == '33'\nassert solution('3 2 1') == '33'"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n3 2\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\n\nassert solution('''\n10 5\n1 2 3 4 6 8 9 10\n2 3 5 6 8 9\n4 6 7 8 9 10\n5 6 7 8 9\n6 7 8 9 10\n7 8 9 10\n8 9 10\n9 10\n10\n''') == '95'\n\nassert solution('''\n8 3\n1 2 3 4 5 6 7\n2 3 5 6 7 8\n3 6 7 8 9 10\n4 5 6 7 8 9\n5 6 7 8 9 10\n6 7 8 9 10\n7 8 9 10\n8 9 10\n9 10\n10\n''') == '75'\n\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n2 3 5 6 7 8 9\n3 6 7 8 9 10\n4 5 6 7 8 9\n5 6 7 8 9\n6 7 8 9 10\n7 8 9 10\n8 9 10\n9 10\n10\n''') == '87'"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1') == '33'\nassert solution('3 2 1') == '33'\nassert solution('3 2 1') == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 1') == '33'\nassert solution('2 1 10') == '70'\nassert solution('2 1 6 6') == '70'\nassert solution('2 10 30 33') == '70'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n1 2 1\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '100'\nassert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '30'\nassert solution('''\n3 3 2 1\n1 2 3 4\n1 3 2 5\n1 4 2 6\n1 5 3 7\n1 6 2 8\n1 7 2 9\n1 8 3 10\n2 9 3 11\n2 11 3 12\n2 12 3 13\n2 13 3 14\n2 14 3 15\n3 15 3 16\n3 16 3 17\n3 17 3 18\n3 18 3 19\n3 19 3 20\n3 20 3 21\n3 21 3 22\n3 22 3 23\n3 23 3 24\n3 24 3 25\n4 25 3 26\n4 26 3 27\n4 27 3 28\n4 28 3 29\n4 29 3 30\n4 30 3 31\n4 31 3 32\n4 32 3 33\n4 33 3 34\n4 34 3 35\n4 35 3 36\n5 36 3 37\n5 37 3 38\n5 38 3 39\n5 39 3 40\n5 40 3 41\n5 41 3 42\n5 42 3 43\n5 43 3 44\n5 44 3 45\n5 45 3 46\n5 46 3 47\n5 47 3 48\n5 48 3 49\n6 49 3 50\n6 50 3 51\n6 51 3 52\n6 52 3 53\n6 53 3 54\n6 54 3 55\n6 55 3 56\n6 56 3 57\n6 57 3 58\n6 58 3 59\n6 59 3 60\n6 60 3 61\n6 61 3 62\n6 62 3 63\n6 63 3 64\n6 64 3 65\n6 65 3 66\n6 66 3 67\n6 67 3 68\n6 68 3 69\n6 69 3 70\n6 70 3 71\n6 71 3 72\n6 72 3 73\n6 73 3 74\n6 74 3 75\n6 75 3 76\n6 76 3 77\n6 77 3 78\n6 78 3 79\n6 79 3 80\n6 80 3 81\n6 81 3 82\n6 82 3 83\n6 83 3 84\n6 84 3 85\n6 85 3 86\n6 86 3 87\n6 87 3 88\n6 88 3 89\n6 89 3 90\n6 90 3 91\n6 91 3 92\n6 92 3 93\n6 93 3 94\n6 94 3 95\n6 95 3 96\n6 96 3 97\n6 97 3 98\n6 98 3 99\n6 99 3 100\n6 100 3 101\n7 101 3 102\n7 102 3 103\n7 103 3 104\n7 104 3 105\n7 105 3 106\n7 106 3 107\n7 107 3 108\n7 108 3 109\n7 109 3 110\n7 110 3 111\n7 111 3 112\n7 112 3 113\n7 113 3 114\n7 114 3 115\n7 115 3 116\n7 116 3 117\n7 117 3 118\n7 118 3 119\n7 119 3 120\n7 120 3 121\n7 121 3 122\n7 122 3 123\n7 123 3 124\n7 124 3 125\n7 125 3 126\n7 126 3 127\n7 127 3 128\n7 128 3 129\n7 129 3 130\n7 130 3 131\n7 131 3 132\n7 132 3 133\n7 133 3 134\n7 134 3 135\n7 135 3 136\n7 136 3 137\n7 137 3 138\n7 138 3 139\n7 139 3 140\n7 140 3 141\n7 141 3 142\n7 142 3 143\n7 143 3 144\n7 144 3 145\n7 145 3 146\n7 146 3 147\n7 147 3 148\n7 148 3 149\n7 149 3 150\n7 150 3 151\n7 151 3 152\n7 152 3 153\n7 153 3 154\n7 154 3 155\n7 155 3 156\n7 156 3 157\n7 157 3 158\n7 158 3 159\n7 159 3 160\n7 160 3 161\n7 161 3 162\n7 162 3 163\n7 163 3 164\n7 164 3 165\n7 165 3 166\n7 166 3 167\n7 167 3 168\n7 168 3 169\n7 169 3 170\n7 170 3 171\n7 171 3 172\n7 172 3 173\n7 173 3 174\n7 174 3 175\n7 175 3 176\n7 176 3 177\n7 177 3 178\n7 178 3 179\n7 179 3 180\n7 180 3 181\n7 181 3 182\n7 182 3 183\n7 183 3 184\n7 184 3 185\n7 185 3 186\n7 186 3 187\n7 187 3 188\n7 188 3 189\n7 189 3 190\n7 190 3 191\n7 191 3 192\n7 192 3 193\n7 193 3 194\n7 194 3 195\n7 195 3 196\n7 196 3 197\n7 197 3 198\n7 198 3 199\n7 199 3 200\n7 200 3 201\n7 201 3 202\n7 202 3 203\n7 203 3 204\n7 204 3 205\n7 205 3 206\n7 206 3 207\n7 207 3 208\n7 208 3 209\n7 209 3 210\n7 210 3 211\n7 211 3 212\n7 212 3 213\n7 213 3 214\n7 214 3 215\n7 215 3 216\n7 216 3 217\n7 217 3 218\n7 218 3 219\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '6'\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0''') == '405'\nassert solution('''4\n7\n1 2\n2 3\n2 4\n2 5\n1 3\n3 4\n1 5\n1 6''') == '2908'\nassert solution('''5\n10\n3 4\n0 6\n0 5\n1 4\n5 2\n3 5\n6 4\n0 0\n1 3\n''') == '967'\nassert solution('''1\n1\n1''') == '1'\nassert solution('''2\n10\n3 5\n1 1\n2 3\n1 5\n''') == '10'\n'''"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2\n10 50\n10 10\"\"\") == \"500\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '405'\nassert solution('10') == '500'\n\"\"\"\nimport sys\nsys.stdin = open('input.txt')"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0\\n') == '405'\nassert solution('4\\n2 2\\n1 1\\n0 0\\n') == '1'\nassert solution('1\\n1\\n0\\n') == '0'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n10 7 3 7\n0 1 2\n3 4 5\n3\n2 5\n\"\"\") == \"405\"\nassert solution(\"\"\"\n5\n20 15 10\n7 7\n30 0\n3 1\n2 5\n\"\"\") == \"405\"\nassert solution(\"\"\"\n3\n20 15 10\n7 7\n30 0\n3 1\n2 5\n\"\"\") == \"405\"\nassert solution(\"\"\"\n5\n20 15 10\n7 7\n30 0\n3 1\n2 5\n\"\"\") == \"405\"\nassert solution(\"\"\"\n5\n20 15 10\n7 7\n30 0\n3 1\n2 5\n\"\"\") == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''3\n20 15 10\n7 7\n30 1\n''') == '405'\nassert solution('''3\n20 15 10\n7 7\n30 2\n''') == '407'\nassert solution('''3\n20 15 10\n7 7\n30 3\n''') == '407'\nassert solution('''3\n20 15 10\n7 7\n30 4\n''') == '407'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n20 15 10\n7 7\n30 0\n\"\"\") == \"405\"\nassert solution(\"\"\"\n1\n10\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0\n''') == '405'\n\nassert solution('''3\n20 15 10\n7 7\n30 0\n''') == '405'\n\nassert solution('''3\n20 15 10\n7 7\n30 0\n''') == '405'\n\nassert solution('''3\n20 15 10\n7 7\n30 0\n''') == '405'\n\nassert solution('''3\n20 15 10\n7 7\n30 0\n''') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0\\n') == '405'\nassert solution('1\\n2\\n3\\n') == '5'\nassert solution('2\\n1\\n3\\n') == '4'\nassert solution('3\\n2\\n1\\n') == '5'\nassert solution('3\\n4\\n1\\n') == '5'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 4 7') == '28 4 21 14.0'\nassert solution('1 2 4 7 3') == '28 4 21 14.0'\nassert solution('4') == '20 1 3 4'\nassert solution('1 2 2 3 4') == '18 1 4 4'\nassert solution('1 2 3 3 4') == '21 1 4 4'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\n1 2 4 7\\n\") == \"28 4 21 14.0\"\nassert solution(\n    \"3\\n1 2 3\\n\") == \"3 2 2 3.0\"\nassert solution(\n    \"3\\n1 3 1\\n\") == \"3 1 2 1.0\"\nassert solution(\n    \"6\\n1 2 2 3 4 5\\n\") == \"11 6 3 2 2 2 2.0\"\nassert solution(\n    \"4\\n1 2 3 4\\n\") == \"4 2 3 2.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 4 7\\n\") == \"28 4 21 14.0\"\nassert solution(\"1 2 3\\n\") == \"4 2 1\"\n\n\"\"\"\n\nimport math\nfrom itertools import combinations"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 4 7\\n') == '28 4 21 14.0'\nassert solution('2\\n1 2 3\\n') == '4 4 4 4.0'\nassert solution('1\\n') == '0 0 0 0.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    6\n    1 2 4 7\n    \"\"\"\n) == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2 4 7\n''') == '28 4 21 14.0'\nprint(solution('''4\n1 2 4 7\n'''))\nassert solution('''2\n1 2\n''') == '2 2'\nprint(solution('''1\n2\n'''))\nassert solution('''1\n1\n''') == '1 1'\nprint(solution('''1\n1\n'''))\nassert solution('''2\n2\n''') == '2 2'\nprint(solution('''2\n2\n'''))\nassert solution('''4\n1 2 4 7\n''') == '28 4 21 14.0'\nprint(solution('''4\n1 2 4 7\n'''))\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 2 3 4\") == \"4\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2 4 7\\n') == '28 4 21 14.0'\n\n\"\"\"\n\nfrom math import floor, sqrt"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"3 4 1 2\\n2 3 4 1\\n1 2 3 4\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes'\nassert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'no'\nassert solution('''\n4 2\n1 2 3 4\n1 3 4 1\n''') == 'no'"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"no\"\nassert solution(\"4 2\") == \"yes\"\nassert solution(\"3 3\") == \"no\"\nassert solution(\"4 4\") == \"yes\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n1 2 3\n2 3 4\n1 4 2\n''') == 'yes'\n\nassert solution('''\n3 3\n1 2 3\n2 3 1\n3 1 2\n''') == 'no'\n\nassert solution('''\n5 5\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n5 1 2 3 4\n''') == 'yes'\n\nassert solution('''\n2 1\n2 2\n''') == 'no'\n\nassert solution('''\n8 8\n1 2 3 4 5 6 7 8\n2 3 4 5 6 7 8 1\n3 4 5 6 7 8 1 2\n4 5 6 7 8 1 2 3\n5 6 7 8 1 2 3 4\n6 7 8 1 2 3 4 5\n7 8 1 2 3 4 5 6\n8 1 2 3 4 5 6 7\n''') == 'yes'"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes\\n1 2 3 4\\n2 3 4 1\\n'''\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\n    \"4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n3 4 5 1 2\\n2 3 4 5 1\\n1 2 3 4 5\\n\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 2 3 4\n2 3 4 1''') == 'yes'\nassert solution('''4 3\n1 2 3 4\n2 3 4 1\n3 4 1 2''') == 'yes'\nassert solution('''6 4\n1 2 3 4 5 6\n2 3 4 1 5 6\n3 4 5 1 2 6\n4 5 1 2 3 6\n5 1 2 3 4 6\n6 5 4 3 2 1''') == 'no'\nassert solution('''3 3\n1 2 3\n2 3 1\n3 1 2''') == 'yes'\nassert solution('''3 2\n1 2 3\n2 3 1''') == 'no'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 5\n1 2 3 4 5\n4 5 3 2 1\n3 1 4 2 5\n2 5 4 1 3\n1 3 5 4 2''') == 'yes\\n1 2 3 4 5\\n4 5 3 2 1\\n3 1 4 2 5\\n2 5 4 1 3\\n1 3 5 4 2'"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == 'yes'\nassert solution('4 3') == 'no'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n-10 10 -4 10\n''') == '10.000000000'\nassert solution('''\n4\n-10 -4 10 10\n''') == '0.000000000'\nassert solution('''\n4\n10 10 -4 10\n''') == '10.000000000'\nassert solution('''\n3\n-10 10 -4 10\n''') == '10.000000000'\nassert solution('''\n3\n10 10 -4 10\n''') == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.0'\n\nassert solution('6\\n1 2 3 4 5 6') == '6.0'\n\nassert solution('3\\n1 -2 3') == '1.0'\n\nassert solution('1\\n1') == '0.0'\n\nassert solution('100\\n-10 -10 -10 -10 -10 -10 -10') == '0.0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"1\") == \"0.0\"\nassert solution(\"5 -10 2 1\") == \"2.5\"\nassert solution(\"10 -10 2 1\") == \"10.0\"\nassert solution(\"5 -10 2 1 -2 -4 3\") == \"6.666666667\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"10.000000000\"\nassert solution(\"2\") == \"10.000000000\"\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n10 10 -10 -4 10\\n') == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '10.0000000000'\nassert solution('5\\n10 10 -10 -4 10') == '10.0000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n10 10 -10 -4 10\n''') == '10.000000000'\n\nassert solution('''\n2\n1 2 -1\n''') == '0.5'\n\nassert solution('''\n1\n2 2\n''') == '0.0'\n\nassert solution('''\n5\n-2 -4 -2 2 2\n''') == '0.0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0.0'\nassert solution('2') == '0.0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '10.0'\nassert solution('5 2 3 4') == '8.0'\nassert solution('5 2 3 4 -1') == '8.0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\\n\") == \"10.000000000\"\nassert solution(\"3\\n1 1 1\\n\") == \"1.500000000\""
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3\\n2\\n45') == '1'\nassert solution('4\\n30\\n3\\n2\\n45') == '2'\nassert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('4\\n40\\n3\\n2\\n45') == '0'\n\nSample Input:\n5\n30\n3\n2\n45\n6\nSample Output:\n3\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2\\n4\\n') == '1'\nassert solution('5\\n6\\n8\\n') == '2'\nassert solution('5\\n6\\n8\\n9\\n') == '3'\n\n'''\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('30') == '1'\nassert solution('45') == '1'\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n\"\"\""
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 1\nassert solution('2') == 0\nassert solution('10') == 1\nassert solution('100') == 2\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"1\""
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n2\n30\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n30\n20\n7\n3\n10\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n6\n10\n10\n30\n45\n10\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"20\") == \"10\"\nassert solution(\"123\") == \"3\"\nassert solution(\"3425\") == \"8\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '2'\nassert solution('5') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n30\\n3\\n2\\n45\") == \"1\"\nassert solution(\"5\\n100000\\n100000\\n100000\\n100000\\n100000\") == \"0\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"0.000000000 1.360000000\"\nassert solution(\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"0.000000000 1.000000000\"\nassert solution(\"\"\"\n10 2 10.0 1.0\n1 1 1\n5 5 5\n\"\"\") == \"0.000000000 0.000000000\"\nassert solution(\"\"\"\n10 2 10.0 1.0\n1 1 1\n5 5 5\n\"\"\") == \"0.000000000 -0.000000000\"\nassert solution(\"\"\"\n10 3 4.0 1.0\n1 1 1\n5 5 5\n\"\"\") == \"0.000000000 -1.000000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\nSample Output:\n0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n''') == '0.000000000 1.000000000\\n'\nprint(solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\nSample Output:\n0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n''')) == '0.000000000 1.000000000\\n'\nprint(solution('''\n3 3 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\nSample Output:\n0.000000000 1.000000000\n0.000000000 1.000000000\n0.000000000 0.360000000\n0.000000000 0.000000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n0.000000000 -1.000000000\n''')) == '0.000000000 1.000000000\\n'\nprint(solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\nSample Output:\n0.000000000 1.000000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n''')) == '0.000000000 1.000000000\\n'\nprint(solution('''\n1 4 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\nSample Output:\n0.000000000 1.000000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n0.000000000 0.000000000\n''')) == '0.000000000 1.000000000\\n'\nprint(solution('''\n2 7 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\nSample Output:\n0.000000000 1.000000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n0.000000000 0.000000000\n''')) == '0.000000000 1.000000000\\n'\nprint(solution('''\n1 4 6 3.0 0.66"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000'\nassert solution('3 2 1.0\\n4 4 0.75\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 -1.000000000'\nassert solution('3 2 1.0\\n5 5 0.75\\n5 6 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 0.360000000'\nassert solution('5 5 2.0\\n5 5 0.75\\n1 5 7\\n3 5 3\\n') == '1.02037965897'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000'\nassert solution('''\n3 4 5\n1 2 2\n2 3 1\n1 3 2\n''') == '0.000000000 1.000000000'\nassert solution('''\n3 4 5\n1 2 2\n2 3 1\n1 3 2\n''') == '0.000000000 1.000000000'\nassert solution('''\n1 2 2\n2 3 1\n1 3 2\n''') == '0.000000000 1.000000000'\nassert solution('''\n2 2\n1 3\n1 3\n''') == '0.000000000 0.000000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000'\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.000000000'\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 0.360000000'\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '-0.880000000 -0.360000000'\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '1.02037965897'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n'\n\n\"\"\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\nSample Output:\n0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n''') == '0.000000000 1.360000000'\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\nSample Output:\n0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n''') == '0.000000000 1.360000000'\nassert solution('''5 4 2.2 0.1 0.9\n1 3 2\n2 4 2\n3 4 1\n2 5 4\n2 5 2\n1 4 2\n4 5 4\n3 4 2\n3 4 1\nSample Output:\n0.000000000 1.000000000\n0.000000000 1.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 -0.000000000\n0.000000000 -0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 -0.000000000\n0.000000000 -0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 -0.000000000\n0.000000000 -0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000\n0.000000000 0.000000000"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000'\nassert solution('3 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.000000000'\nassert solution('6 6 2.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 0.360000000'\nassert solution('3 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 -1.000000000'\nassert solution('6 6 2.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 0.360000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n5 3 1\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.000000000'\nassert solution('5\\n5 3 1\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 0.000000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000'\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.000000000'\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 -1.000000000'\nassert solution('''\n1 1 1.0000000000 1.0000000000\n3 3 3.0000000000 3.0000000000\n3 3 3.0000000000 3.0000000000\n3 3 3.0000000000 3.0000000000\n3 3 3.0000000000 3.0000000000\n3 3 3.0000000000 3.0000000000\n''') == '1.0000000000 1.0000000000'\nassert solution('''\n1 1 1.0000000000 1.0000000000\n2 2 2.0000000000 2.0000000000\n2 2 2.0000000000 2.0000000000\n2 2 2.0000000000 2.0000000000\n2 2 2.0000000000 2.0000000000\n2 2 2.0000000000 2.0000000000\n''') == '1.0000000000 0.7500000000000001'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == '4'"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('100') == '100'\nassert solution('100000') == '99999'\n\n'''\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '4'\n'''\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == '4', \"First Example is Wrong\"\n\nassert solution('''\n5\n-2 0\n-2 0\n-3 0\n0 -2\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == '5', \"Second Example is Wrong\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n-2 -3\n0 -1\n-1 -3\n2 0\n-2 -4\n-4 2\n-1 1\n2 -2\n''') == '4'\nassert solution('''\n8\n-5 -5\n-2 -6\n-2 -3\n-4 4\n-4 -2\n-5 -4\n-4 0\n-3 3\n-3 -4\n-6 6\n-5 5\n-4 -1\n-6 -5\n-3 -4\n-1 -2\n-2 1\n-3 1\n-1 -1\n2 2\n3 2\n''') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\nfrom heapq import heappop, heappush, heapify\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nh = []\nfor i in range(n):\n    heappush(h, (a[i], i))\n\nres = 0\nfor j in range(n):\n    t = h[0][0]\n    if (b[j] > t):\n        heappush(h, (b[j], j))\n        res += 1\n    else:\n        res += heappop(h)\n        heappush(h, (b[j], j))\n\nprint(res)\n\n\"\"\"\n\n\n\"\"\"\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nh = []\nfor i in range(n):\n    heappush(h, (a[i], i))\n\nres = 0\nfor j in range(n):\n    t = h[0][0]\n    if (b[j] > t):\n        heappush(h, (b[j], j))\n        res += 1\n    else:\n        res += heappop(h)\n        heappush(h, (b[j], j))\n\nprint(res)\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nh = []\nfor i in range(n):\n    heappush(h, (a[i], i))\n\nres = 0\nfor j in range(n):\n    t = h[0][0]\n    if (b[j] > t):\n        heappush(h, (b[j], j))\n        res += 1\n    else:\n        res += heappop(h)\n        heappush(h, (b[j], j))\n\nprint(res)\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == '4', 'Wrong result'\n\n\n\nSample Input:\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n3 3\n3 0\n2\n1 1\n2 2\nSample Output:\n3\n'''\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == \"4\", 'wrong solution'\n\nassert solution('''\n3\n1 1\n2 1\n3 1\n''') == \"1\", 'wrong solution'\n\nassert solution('''\n1\n0 0\n0 1\n0 0\n''') == \"0\", 'wrong solution'\n\nassert solution('''\n1\n1 1\n1 1\n1 1\n''') == \"2\", 'wrong solution'"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input(\"\")) == \"3\""
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n\"\"\") == \"4\"\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 0\n0 1\n0 2\n0 3\n''') == '3 2 3 1'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4 0\n0 1\n0 2\n0 3\n''') == '''\n2\n3 2\n3 1\n'''\nassert solution(\n'''\n5 3\n1 2\n2 3\n3 4\n4 5\n''') == '''\n2\n2 3\n3 4\n3 5\n'''\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"2\"\nassert solution(\"0 1\") == \"3 2\"\nassert solution(\"0 2\") == \"3 1\"\nassert solution(\"0 3\") == \"3 1\"\nassert solution(\"1 1\") == \"1 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n0 1\\n0 2\\n0 3\\n') == '2 3 1\\n'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 0\n0 1\n0 2\n0 3\n\"\"\") == \"2 1 2 3\"\nassert solution(\"\"\"\n3 0\n0 1\n0 2\n\"\"\") == \"3 1 2\""
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 0') == '2'\nassert solution('4 1') == '3 2'\nassert solution('4 2') == '3 1'\nassert solution('4 3') == '3 2'\n\n\"\"\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 0') == '2'\nassert solution('4 0\\n0 1\\n0 2\\n0 3') == '3 2'\nassert solution('3 5\\n2 5\\n2 4\\n1 6\\n3 5\\n1 3\\n3 4\\n0 0\\n0 1\\n2 5\\n2 3\\n3 4\\n') == '2 3'\nassert solution('9 5\\n4 5\\n4 2\\n3 3\\n3 1\\n3 1\\n2 4\\n3 2\\n5 4\\n6 5\\n7 6\\n') == '1 2'\nassert solution('5 5\\n4 4\\n5 3\\n3 4\\n2 3\\n4 4\\n2 2\\n0 0\\n4 5\\n1 1\\n3 4\\n2 2\\n0 0\\n3 2\\n4 4\\n1 1\\n3 2\\n1 1\\n') == '0 1'"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3''') == '2 3 2'\n\nassert solution('''4 5\n1 0\n0 1\n0 2\n0 3\n2 4''') == '4'\n\nassert solution('''6 3\n1 2\n1 3\n2 0\n3 0\n3 4\n4 0\n5 0''') == '3 4'\n\nassert solution('''8 2\n1 2\n1 3\n1 5\n2 0\n3 0\n4 0\n4 5\n5 0\n6 0\n7 0''') == '3 1 2'\n\nassert solution('''11 4\n1 2\n1 3\n1 5\n2 0\n3 0\n4 0\n4 5\n5 0\n6 0\n7 0\n8 0\n9 0\n10 0\n11 0''') == '4 3'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1'\nassert solution('4 0\\n0 1\\n0 3\\n0 2\\n') == '2\\n3 1\\n3 0'\nassert solution('5 0\\n0 1\\n0 2\\n0 3\\n0 4\\n') == '0\\n0\\n0\\n0\\n0'\nassert solution('4 0\\n0 1\\n1 2\\n0 3\\n') == '1\\n3 2\\n3 1'\nassert solution('4 0\\n0 1\\n0 2\\n0 3\\n0 4\\n') == '2\\n3 1\\n3 0'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 0') == '2'\nassert solution('4 1') == '3 2'\nassert solution('4 2') == '3 1'\nassert solution('4 3') == '3 1'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n\"\n    \"0 0 0\\n\"\n    \"0 1.5 0\\n\"\n) == \"ok\"\n\nassert solution(\n    \"2\\n\"\n    \"0 0 0\\n\"\n    \"0 0 0\\n\"\n) == \"crash\"\n\nassert solution(\n    \"3\\n\"\n    \"0 0 0\\n\"\n    \"0 0 0\\n\"\n    \"0 0 0\\n\"\n) == \"crash\"\n\nassert solution(\n    \"1\\n\"\n    \"0 0 0\\n\"\n    \"0 0 0\\n\"\n    \"0 0 0\\n\"\n) == \"ok\"\n\nassert solution(\n    \"2\\n\"\n    \"0 0 0\\n\"\n    \"0 0 0\\n\"\n) == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2\\n0 0 0\\n0 1.5 0\"\n) == \"ok\"\n\nassert solution(\n    \"3\\n2 2.5 2\\n1 2.5 1.5\\n0 0 0\"\n) == \"ok\"\n\nassert solution(\n    \"1\\n0 0 0\\n-1 2.5 2\"\n) == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 0\\n0 1.5 0\\n\") == \"ok\"\nassert solution(\"1\\n0 0 0\\n0 1.5 0\\n\") == \"crash\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'ok'\nassert solution('2') == 'ok'\nassert solution('3') == 'ok'\n\"\"\""
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1.5 0 0\n0 0 1.5 0\n''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0 0 0\\n0 1.5 0\") == \"ok\"\nassert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"crash\"\n\"\"\""
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'ok'\nassert solution('3') == 'ok'\nassert solution('4') == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'ok'\nassert solution('3') == 'crash'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'ok'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == '2'\nassert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == '1'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"4\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '2'\nassert solution('3 3') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2'\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '4'"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"2\"\nassert solution(\"8 3\") == \"10\"\nassert solution(\"1 9\") == \"4\"\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"2\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"6 4\") == \"1\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2'\nassert solution('5 10\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n0 1') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 4\\n\"\n    \"0 1\\n\"\n    \"0 3\\n\"\n    \"1 2\\n\"\n    \"2 4\\n\"\n    \"0 2\\n\"\n    \"0 4\\n\"\n    \"2 3\\n\"\n    \"2 4\") == \"2\"\n\nassert solution(\n    \"5 4\\n\"\n    \"0 1\\n\"\n    \"0 3\\n\"\n    \"1 2\\n\"\n    \"2 4\\n\"\n    \"0 2\\n\"\n    \"0 4\\n\"\n    \"2 3\\n\"\n    \"2 4\") == \"4\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n\"\"\") == \"2\"\nassert solution(\"\"\"7 5 5 5\nA B C\nD E F\nG H I\nJ K L\nM N O\nQ R S\nT U V\nW X Y Z\n\"\"\") == \"1\"\nassert solution(\"\"\"10 5 5 5\nA B C\nD E F\nG H I\nJ K L\nM N O\nQ R S\nT U V\nW X Y Z\nA B D\nB E D\nB F E\nC G F E\nC H G E\nD I H F E\nD J I H F E\nD G I H F E\nE K I D F E\nE L I D F E\nE M I D F E\nE N I D F E\nF G I D F E\nF H I D F E\nF J I D F E\nF K I D F E\nG H I D F E\nG I J K D E\nG L I J K D E\nG M I J K D E\nG N I J K D E\nH I N I J K D E\nH L I N I J K D E\nH M I N I J K D E\nH N I J K L D E\nH O J N I L D E\nH P J N I L D E\nH R J N I L D E\nH S J N I L D E\nH T J N I L D E\n\"\"\") == \"2\""
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == \"2\"\nassert solution('''\n7 4 4 4\nA B C D E F\nG H I J K\nL M N O P\nQ R S T U\nV W X Y Z\n1 A E G\n2 G F H\n3 A F I\n4 F D J\n5 H C K\n6 L G M\n7 N P O\n8 P Q R\n9 S T U\n10 V W X\n11 X Y Z\n''') == \"6\"\nassert solution('''\n7 5 5 5\nA B C D E F\nG H I J K\nL M N O P\nQ R S T U\nV W X Y Z\n1 A E G\n2 G F H\n3 A F I\n4 F D J\n5 H C K\n6 L G M\n7 N P O\n8 P Q R\n9 S T U\n10 V W X\n11 X Y Z\n''') == \"3\"\n'''"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3 3 3') == '2'"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n'''\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 3 3') == '2'\nassert solution('6 6 6 6') == '1'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 3 3 3\") == \"2\"\nassert solution(\"4 3 3 2\") == \"2\"\nassert solution(\"7 7 3 3\") == \"1\"\nassert solution(\"7 7 6 3\") == \"1\"\nassert solution(\"8 8 8 8 8 8\") == \"8\""
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3 3 3\") == \"2\"\nassert solution(\"6 2 7 3\") == \"3\"\nassert solution(\"8 3 4 5\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution(\"10 1 1 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3 3 3') == '2'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('3 2') == '2'\nassert solution('4 5') == '1 2 3 4'\nassert solution('1 2') == '1 2'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\nYYY\nNYY\nYNY\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2\nYYY\nYNY\nYNY\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3\nYYY\nYNY\nYNY\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n2\nYYY\nNYY\nYNY\n\"\"\") == \"2\""
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nNYY\\nYYY') == '2 3 1 2'\nassert solution('2\\nYYY\\nNYY') == '2 1 3 2'\nassert solution('2\\nYYY\\nYNY') == '2 1 2 3'\nassert solution('3\\nYYY\\nYYY\\nYYY') == '1 1 2 3'\nassert solution('3\\nYYY\\nYYY\\nYYY') == '0 0 1 2'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3 1 2 3 1'\nassert solution('2') == '1 1'\nassert solution('2') == '3 1'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0\nYYY\nNYY\nYNY\n''') == '0'\nassert solution('''\n1\nYYY\nNYY\nYNY\n''') == '2'\nassert solution('''\n2\nYYY\nNYY\nYNY\n''') == '2'\nassert solution('''\n1\nYYY\nNYY\n''') == '1'\nassert solution('''\n0\nYYY\nNYY\n''') == '0'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"YYY\") == \"1 2 3\"\nassert solution(\"NYY\") == \"1 2 3\"\nassert solution(\"YNY\") == \"1 2 3\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\\n\") == \"3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nYNY\\nNYY\") == \"1 2 3\"\nassert solution(\"1\\nN\") == \"1\"\nassert solution(\"3\\nYYY\\nYYY\\nYNY\") == \"1 2 3\"\nassert solution(\"3\\nYYY\\nYYY\\nYNY\") == \"2 3 1\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1 2 3'"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '1 2 3'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\nxx\\nx.\\n') == '4'\n\n---Input is hidden until Solution---\n'''\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n2\nx..\n...\nx..\n3\n1 3\n1 1\n3 2\n\"\"\") == \"4 0 5\"\n\"\"\""
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4 0 5\"\nassert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4 0 5\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\nx..\\n...') == '4'\nassert solution('2 2\\nxx.\\n.x') == '0'\nassert solution('2 1\\nxx.\\n.x') == '5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nx.x.\\n.x.x.\\nx.x.x\") == \"4\"\n\nassert solution(\"3 3\\nx.x.\\nx.x.\\nx.x.x\") == \"5\""
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '4'\nassert solution('2 4') == '5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\"\n\nimport sys"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '4'\nassert solution('1 3') == '0'\nassert solution('3 2') == '5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '4\\n0\\n5\\n'\nassert solution('4 3') == '2\\n0\\n2\\n'\nassert solution('5 3') == '5\\n2\\n3\\n'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n1 3\n1 1\n3 2\n3 3\n\"\"\") == \"4 0 5\""
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1.118 2.037'\nassert solution('3') == '4.114 -2.842'\nassert solution('10') == '1.118 2.037'\nassert solution('12') == '6.297 -0.784'\nassert solution('100') == '1.118 2.037'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n5\n3\n4\n5 3\n5 5\n3 4\n3 1\n5 3\n4 3\n4 2\n5 1\n5 3\n4 1\n5 3\n4 2\n5 3\n4 3\n5 3\n3 3\n4 1\n4 1\n5 3\n4 2\n5 3\n4 1\n4 2\n5 3\n''') == '''\n1.136 -1.493\n3.900 -0.797\n4.005 -0.745\n5.000 1.000\n6.251 -0.100\n4.425 0.500\n5.000 3.000\n4.403 1.000\n4.666 1.000\n5.000 3.000\n'''\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3.000'\nassert solution('5') == '5.000'\nassert solution('3') == '3.000'\nassert solution('5') == '5.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"4.114 -2.842\n6.297 -0.784\n5.000 3.000\"\"\"\nassert solution(\"\"\"\n3\n2\n5\n3\n4\n5 3\n\"\"\") == \"\"\"2.842 -0.784\n5.000 3.000\"\"\"\nassert solution(\"\"\"\n2\n1\n1\n2\n2\n\"\"\") == \"\"\"1.000 -0.000\n2.000 1.000\"\"\"\nassert solution(\"\"\"\n1\n5\n2\n1\n2\n\"\"\") == \"\"\"1.000 0.000\n2.000 1.000\"\"\"\nassert solution(\"\"\"\n2\n1\n3\n1\n2\n\"\"\") == \"\"\"1.000 0.000\n2.000 1.000\"\"\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3') == '1.118 2.037'\nassert solution('4\\n5\\n3') == '4.114 -2.842'\nassert solution('1\\n1\\n1') == '1.118 2.037'\nassert solution('1\\n2\\n3') == '6.297 -0.784'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1.118 2.037\"\nassert solution(\"5\") == \"4.114 -2.842\"\nassert solution(\"3\") == \"4.114 -2.842\"\nassert solution(\"4\") == \"5.000 3.000\"\nassert solution(\"5\") == \"5.000 3.000\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n5\n3\n4\n5 3\n\"\"\") == \"4.114 -2.842\"\n\nassert solution(\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"6.297 -0.784\"\n\nassert solution(\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"5.000 3.000\"\n\nassert solution(\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"4.114 -2.842\"\n\nassert solution(\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"6.297 -0.784\""
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1.118 2.037'\nassert solution('3') == '1.118 2.037'\nassert solution('4') == '4.114 -2.842'\nassert solution('5') == '6.297 -0.784'\nassert solution('6') == '4.606 -0.891'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1.118 2.037'\nassert solution('3') == '1.118 2.037'\nassert solution('4') == '4.114 -2.842'\nassert solution('5') == '4.114 -2.842'\nassert solution('6') == '5.000 3.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n5\\n3') == '4.114 -2.842'\nassert solution('3\\n10\\n3') == '7.849 3.000'\nassert solution('3\\n2\\n4') == '4.091 -2.842'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"8\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '0'\nassert solution('4\\n') == '0'\nassert solution('5\\n') == '0'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '13'\n\nassert solution('''2 3\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '6'\n\nassert solution('''2 5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '11'"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 5 7') == '5'\nassert solution('2 2 4 4 6 5') == '5'\nassert solution('4 5') == '6'\nassert solution('3 2 5 7') == '5'\nassert solution('4 2 4 4 5 5') == '6'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == \"3\\n5\\n8\\n10\\n13\"\nprint(solution('''\n3 4\n3 1 2 2\n1\n1\n1\n1\n1\n1\n'''))"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 5 7\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 5 7\") == \"10\"\nassert solution(\"2\") == \"8\"\nassert solution(\"5\") == \"13\"\nassert solution(\"6\") == \"10\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5') == '3'\nassert solution('2 3 5 7') == '5'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('5') == '8'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '4'\nassert solution('1 1') == '1'\nassert solution('2 3 5 7') == '7'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\") == \"5\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"5 4\") == \"8\"\nassert solution(\"1000000000 5\") == \"1000000001\"\nassert solution(\"1000000001 1000000000\") == \"1000000001\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"6 3\") == \"0\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n''') == '0'\n\"\"\"\nYou are given a graph G = (V,E) consisting of $V$ vertices and $E$ edges.\n\nYou are asked to delete the least number of edges in a cycle in the graph so that every vertex of G is either surrounded by at least one other vertex or is a leaf vertex.\n\nIt is guaranteed that the graph G can be decomposed into cycles.\n\nInput:\nThe first line contains $T$, the number of test cases. Then follow $T$ lines, each containing a graph specified as above. The graph is decomposed into cycles.\n\nOutput:\nFor each test case, output the minimum number of edges to be removed in order to make the graph decomposed into cycles.\n\nConstraints:\n1 <= T <= 50\n3 <= V, E <= 10^5\nExample:\nInput\n\n3\n3 2\n0 1\n1 2\n3 4\n2 3\n1 5\n1 2 5 \nOutput\n\n3\n1\n\nExplanation\n\nTest Case 1:\nWe can remove the edges from the graph as follows:\n\nRemove the edge between vertices $0$ and $1$:\n\nRemove the edge between vertices $1$ and $2$:\n\nRemove the edge between vertices $2$ and $3$:\n\nRemove the edge between vertices $3$ and $4$:\n\nRemove the edge between vertices $4$ and $5$:\n\nRemove the edge between vertices $5$ and $1$:\n\nWe are left with the graph:\n\nRemove the edge between vertices $0$ and $5$:\n\nRemove the edge between vertices $1$ and $2$:\n\nRemove the edge between vertices $2$ and $3$:\n\nRemove the edge between vertices $3$ and $4$:\n\nRemove the edge between vertices $4$ and $1$:\n\nThus, the final graph is:\n\n0 1\n1 2\n\nTest Case 2:\nWe can remove the edges from the graph as follows:\n\nRemove the edge between vertices $1$ and $2$:\n\nRemove the edge between vertices $2$ and $3$:\n\nRemove the edge between vertices $3$ and $4$:\n\nRemove the edge between vertices $4$ and $5$:\n\nRemove the edge between vertices $5$ and $1$:\n\nRemove the edge between vertices $1$ and $0$:\n\nThus, the final graph is:\n\n0 1\n1 2\n\nTest Case 3:\nWe can remove the edges from the graph as follows:\n\nRemove the edge between vertices $0$ and $1$:\n\nRemove the edge between vertices $1$ and $2$:\n\nRemove the edge between vertices $2$ and $3$:\n\nRemove the edge between vertices $3$ and $4$:\n\nRemove the edge between vertices $4$ and $5$:\n\nRemove the edge between vertices $5$ and $6$:\n\nThus, the final graph is:\n\n0 1\n1 2\n\n-----\n\nSOLUTION:\n\n\"\"\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n\"\"\") == \"0\"\nassert solution(\"\"\"\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n3 4\n\"\"\") == \"1\"\n\"\"\"\n1"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 3 4 1 2 4 3\") == \"2\"\nassert solution(\"2 1 2 3\") == \"1\"\nassert solution(\"2 1 3 1 2 2\") == \"0\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\"\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"1\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n''') == '0'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n''') == '0'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n''') == '1'\n'''\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n') == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"2 3\") == \"1\""
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\\n100 100\") == \"0\""
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n''') == '0'\nassert solution('''\n5 5\n3 5\n1 5\n5 5\n1 5\n''') == '4'\nassert solution('''\n9 9\n1 5\n5 1\n4 8\n2 4\n8 2\n8 1\n1 3\n7 7\n7 1\n3 7\n''') == '6'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 5 C1 L1 C1 U1 C1\n70 3 1 C1\n1 1 5 C1 L1 C100 U1 C1\n''') == '107'"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"107\""
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '106\\n107\\n71'\n\"\"\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1\\n4 3 1 C1 L1 C1 U1 C1\\n1 2 5 C1 L1 C100 U1 C1\\n50 2 5 C1 L1 C1 U1 C1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1 C1 U1 C1\\n50 3 1 C1 L1 C1 U1 C1 C1 C1 U1 C1\\n70 3 1 C1 L1 C1 U1 C1 C1 C1 U1 C1\\n1 100 5 C1 L1 C1 U1 C1 C1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1 C1 U1 C1\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L1 C100 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1 1 5 C1 L1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L1 C100 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1 1 5 C1 L1 C100 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 100 5 C1 L1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L1 C100 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L1 C100 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L100 U100 C100 U100 C100 U100 C100 U100 C100 U100 C100\\n1 1 5 C1 L1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1 1 5 C1 L1 C100 U1 C1 C1 U1 C1 C1 U1 C1 C1 U1 C1 C1\\n1"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 5 1') == '106'\nassert solution('3 1 5 1') == '107'\nassert solution('4 3 1 2') == '112'\n\"\"\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '106\\n107\\n71\\n'\n\nassert solution('''\n1 1\n70 3 1 C1\n''') == '106\\n'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3 2\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '107'\nassert solution(\n'''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '106'\nassert solution(\n'''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '107'\nassert solution(\n'''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '107'\nassert solution(\n'''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '106'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '106'\nassert solution('1 1 5 C1 L1 C1 U1 C1') == '107'\nassert solution('70 3 1 C1') == '71'\nassert solution('1 1 5 C1 L1 C100 U1 C1') == '71'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1') == '106\\n107\\n71'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 5 L1 C1 U1 C1') == '106'\nassert solution('3 1 5 L1 C1 U1 C1') == '107'\nassert solution('3 1 5 C1 L1 C1 U1 C1') == '107'\nassert solution('3 1 5 L1 C1 L1 C1 U1 C1') == '107'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"A\") == \"1\"\nassert solution(\"AA\") == \"2\"\nassert solution(\"AAAA\") == \"3\"\nassert solution(\"AAAB\") == \"3\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"AA\") == \"51\"\nassert solution(r\"BB\") == \"0\"\nassert solution(r\"AB\") == \"1\"\n\nstdin = r\"ABABABABABABAB\""
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AA') == '51'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AA') == '1'\nassert solution('ABC') == '2'\nassert solution('ABA') == '2'\nassert solution('ABCD') == '3'\nassert solution('ABCDABCD') == '3'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AA') == \"1\"\nassert solution('AAB') == \"2\"\nassert solution('BB') == \"1\"\nassert solution('BBB') == \"2\"\nassert solution('BBBB') == \"0\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(3) == 1\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(10) == 4\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''AA''') == '51'\nassert solution('''ABA''') == '52'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input(), lambda x: x) == \"51\"\nassert solution(input(), lambda x: x) == \"51\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AA') == '51'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'no ties'\nassert solution('3') == 'no ties'\nassert solution('4') == 'no ties'\nassert solution('5') == 'no ties'\nassert solution('6') == 'no ties'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'no ties'\nassert solution('2') == '2 1'"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == \"no ties\"\nassert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == \"1 2\"\nassert solution('''\n2\n2 2\n''') == \"no ties\"\nassert solution('''\n2\n1 2\n''') == \"1 2\"\nassert solution('''\n1\n1 1\n''') == \"1 2\"\n''')\n\n\n\nn = int(input())\narr = list(map(int, input().split()))\n\ncol = 0\n\nwhile col < n - 1:\n    row = 0\n    \n    while row < n - 1:\n        if arr[row] > arr[row + 1]:\n            col = row\n            break\n        row += 1\n\n    if row == n - 1:\n        break\n\n    row = 0\n    while row < n - 1:\n        if arr[row] < arr[row + 1]:\n            col = row\n            break\n        row += 1\n\nprint(col + 1, arr[col])\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '2'\n) == 'no ties'\nassert solution(\n    '3'\n) == 'no ties'\nassert solution(\n    '3'\n) == '1 2'\nassert solution(\n    '3'\n) == '1 2'\nassert solution(\n    '2'\n) == 'no ties'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n4 26 55 54\n6 17 25 35 41\n7 21 25 39 45\n12 25 40 50 52\n\"\"\") == \"6 17\"\nassert solution(\"\"\"\n10 12 25 40 50\n13 25 41 52 55\n16 25 42 54 57\n15 25 42 55 60\n\"\"\") == \"16 25\"\nassert solution(\"\"\"\n10 12 25 40 50\n13 25 41 52 55\n16 25 42 54 57\n15 25 42 55 60\n\"\"\") == \"15 25\"\nassert solution(\"\"\"\n10 12 25 40 50\n13 25 41 52 55\n16 25 42 54 57\n15 25 42 55 60\n\"\"\") == \"16 25\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'no ties'\nassert solution('3') == '2 3'\nassert solution('4') == 'no ties'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == 'no ties'\n\nassert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\n\nassert solution('''\n1\n2\n3\n4\n5\n''') == 'no ties'\n\nassert solution('''\n2\n3\n4\n5\n''') == 'no ties'\n\nassert solution('''\n5\n''') == 'no ties'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"6 6 6 6 6 6\") == \"6 6\"\nassert solution(\"6 6 6 6 6 6\") == \"no ties\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"no ties\"\nassert solution(\"1\\n2\\n\") == \"1 2\"\nassert solution(\"2\\n1\\n\") == \"1 2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"no ties\"\nassert solution(\"1\\n3\\n2\\n5\\n6\\n\") == \"5 2\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('2\\n3 2 1\\n1 2 3\\n1 2 3') == '2'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('4\\n3 2 1\\n1 2 3\\n1 2 3') == '1'"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\""
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 1\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''\n5\n3 2 1\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '2'\nassert solution('''\n5\n3 2 1\n1 2 3\n1 2 3\n1 2 4\n1 2 3\n''') == '0'\n\nimport sys\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''\n3\n5 2 1\n1 2 3\n1 2 3\n1 2 3\n''') == '2'\nassert solution('''\n3\n5 2 1\n1 2 3\n1 2 3\n1 2 3\n''') == '2'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('3\\n1 2 1\\n1 2 3\\n1 2 3') == '1'\nassert solution('9\\n3 2 1\\n1 2 3\\n1 2 3\\n1 3 2\\n1 3 2\\n1 3 2\\n1 4 2\\n1 4 2\\n1 4 2') == '3'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\n\nassert solution('5\\n2 2 1\\n1 2 3\\n1 2 3\\n2 2 3\\n2 2 3') == '3'\n\nassert solution('7\\n2 1 2 3 4 5 2\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7') == '6'"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '1'"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2 1\n2 3\n''') == '0'\nassert solution('''\n4\n3 2 1\n1 2 3\n1 2 3\n''') == '1'\nassert solution('''\n5\n3 2 1\n1 2 3\n1 3 4\n2 1 4\n''') == '2'\nassert solution('''\n10\n1 2 2 1 3 1 1 2 2 3 2 2 1 2 2 3 2 2 1 2 3 2 3 1 2 2 2 1 2 3 1 2 2 2 3 2 1 2 3 1 3 2 1 3 2 3 1 2 1 2 3 2 3 1 2 1 2 2 3 1 2 1 2 3 2 2 1 1 3 1 1 1 2 3 3 2 3 2 3 3 2 2 1 1 3 1 1 2 3 2 3 1 2 1 1 3 2 2 1 2 1 3 1 1 1 2 3 1 2 1 1 3 2 1 2 1 2 3 1 2 2 1 1 3 2 3 1 2 1 1 2 3 1 2 1 1 3 2 3 1 2 1 1 3 2 3 1 2 1 2 2 1 2 1 3 2 2 2 1 1 3 2 1 2 1 2 3 3 2 3 1 2 3 2 3 1 2 2 2 3 2 3 1 2 2 2 1 1 3 2 3 1 2 1 2 3 2 2 1 1 1 3 2 3 1 2 1 1 3 2 3 1 2 1 2 2 1 1 1 2 2 1 1 1 2 1 2 1 2 2 2 3 1 2 3 1 2 1 1 2 2 1 1 1 2 2 1 2 1 1 2 2 1 2 2 1 2 2 2 1 1 1 2 2 1 2 2 1 1 2 2 1 2 1 1 2 3 1 2 2 1 1 1 3 2 1 2 1 1 1 2 3 3 2 1 2 3 2 1 2 2 3 1 2 1 2 1 1 3 2 3 1 2 1 1 2 2 1 2 1 1 3 2 3 1 2 1 1 2 3 1 2 2 1 1 1 2 2 1 2 2 1 2 2 1 2 2 2 1 1 1 2 2 1 2 1 1 2 2 3 1 2 2 1 2 1 1 2 2 3 2 2 1 1 1 3 2 2 1 2 1 2 3 3 1 2 1 2 1 1 3 2 1 2 1 1 2 1 2 1 1 2 2 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 2 2 1 2 1 1 2 2 1 1 1 2 3 1 2 1 2 1 1 3 2 1 2 1 1 1 2 1 2 1 1 2 2 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 2 3 1 2 1 2 1 1 1 3 2 1 2 1 1 1 1 2 2 3 1 2 1 1 2 1 2 1 2 1 1 1 1 3 2 1 2 1 1 1 2 1 2 3 1 2 1 1 2 1 1 2 1 2 1 1 1 1 2 3 1 2 1 1 2 1 1 2 1 1 1 1 3 1 1 1 1 1 2 2 1 1 1 1 2 3 3 2 3 1 2 3 2 1 2 1 2 1 2 1 1 1 1 2 2 2 3 1 2 1 1 1 1 2 2 3 1 2 1 1 1 2 1 2 1 2 1 1 1 1 3 1 1 1 1 2 3 1 2 1 1 2 1 1 2 1 1 2 3 2 2 1 1 1 3 1 2 1 1 1 1 2 2 1 2 1 1 1 3 3 2 1 2 3 2 1 2 1 1 2 3 3 2 1 2 3 1 2 1 1 1 1 1 2 2 3 1 2 1 1 1 1 2 1 2 1 1 1 2 2 3 1 2 1 1 1 1 2 3 3 1 2 3 2 1 2 1 1 2 2 3 1 2 1 1 1 1 2 1 2 1 1 1 1 2 3 2 2 2 1 1 1 3 2 3 1 2 1 1 2 2 1 1 1 1 3 2 1 1 1 1 1 1 1 2 2 3 1 2 1 1 1 1 1 2 1 2 3 1 2 1 1 1 1 1 1 3 3 1 2 1 2 1 1 1 1 3 2 1 2 1 1 1 1 2 3 3 2 1 2 3 2 1 2 1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 3 2 1 2 1 1 1 1 2 1 2 1 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 3 2 1 1 1 1 1 1 1 1 1 1 1 2 3 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 3 1 2 1 1 1 1 1 1 1 1 1 1 1 2 3 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 2 3 4 5\n2 1 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '0'\nassert solution('''\n2\n1 2\n1 2\n''') == '2'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n3 2 1\n1 2 3\n1 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n3 1 1\n1 2 3\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n3 2 3\n1 2 3\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n3 1 1\n1 2 3\n1 2 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3') == '0.4\\n0'\nassert solution('4\\n1 2 3\\n10 2 3\\n16 3 4') == '0.171428571429\\n0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '0.4'\nassert solution('6 2 3') == '0.2'\nassert solution('10 2 3') == '0.171428571429'\nassert solution('16 3 4') == '0.228571428571'"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\"\nassert solution(\"1\\n1 1\\n10 1\\n16 1\\n3\\n4\\n\") == \"0\\n0.2\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3\n6 2 3\n10 2 3\n16 3 4''') == '0.2\\n0\\n0.171428571429\\n0.228571428571\\n'''\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '0.4\\n0.2\\n'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '0.4\\n0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0.818181818182'\nassert solution('4') == '0.142857142857'\nassert solution('5') == '0.0'\nassert solution('10') == '0.2'\nassert solution('16') == '0.071428571429'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == '0.4'\nassert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0'\nassert solution('5\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n20 3 5') == '0.2'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\"\nassert solution(\"8\\n10 10 10 10 10 10 10 10\\n20 20 20 20 20 20 20 20\\n40 40 40 40 40 40 40 40\\n60 60 60 60 60 60 60 60\\n80 80 80 80 80 80 80 80\\n100 100 100 100 100 100 100 100\\n120 120 120 120 120 120 120 120\\n160 160 160 160 160 160 160 160\\n200 200 200 200 200 200 200 200\\n220 220 220 220 220 220 220 220 220\\n240 240 240 240 240 240 240 240 240\") == \"0.2\\n0\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 4 4\n2 2 2\n1 1 3\n1 4 4''') == '0.2\\n0.2\\n0.2\\n0.171428571429'\n\n'''"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2\n5 7\n4 9\n3 5\n-1 -6\nSample Input:\n2\n4\n3\n5\n5\nSample Output:\n1 + 2 = 5\n-6 * 2 = -12\n''') == '1 + 2 = 5'\nassert solution('''5\n1 5\n2 2\n5 7\n4 9\n3 5\n-1 -6\nSample Input:\n2\n3\n4\n5\n5\nSample Output:\n1 + 2 = 5\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n''') == '1 + 2 = 5'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2\n2 1\n2 -1\n1 2\n-1 1\n''') == '1 2 = 1\\n2 1 = 2\\n2 -1 = -1\\n1 2 = -1'\nassert solution('''\n1 2\n3 4\n5 7\n3 2\n1 -6\n-1 -1\n''') == '1 2 = 1\\n3 4 = 3\\n5 7 = 5\\n3 2 = 3\\n1 -6 = 1\\n-1 -1 = -1'\nassert solution('''\n1 2\n3 3\n4 5\n2 -2\n1 -1\n''') == '1 2 = 1\\n3 3 = 3\\n4 5 = 5\\n2 -2 = -2\\n1 -1 = -1'\nassert solution('''\n3\n1 2\n2 3\n3 4\n''') == 'impossible'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"1 * 3 = 3\"\nassert solution(\"4\") == \"2 * 2 = 4\"\nassert solution(\"5\") == \"1 + 1 = 2\"\nassert solution(\"6\") == \"2 * 2 = 4\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('2\\n3 4\\n1 2\\n-4 -5') == '1 * 2 = 4\\n3 - 4 = 1\\n-4 - -5 = 5'"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\n\nSample Input:\n5\n1 2\n2 2\n4 4\n4 4\n4 4\n4 4\nSample Output:\n4 + 4 = 8\n4 * 4 = 16\n4 * 4 = 16\n4 * 4 = 16\n4 * 4 = 16\n4 * 4 = 16\nimpossible'\n\"\"\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 5\n3 3\n''') == '1 + 5 = 6', 'First example is wrong.'\n\nassert solution('''\n3\n1 3\n2 4\n-1 -6\n''') == '3 * 3 = 9', 'Second example is wrong.'\n\nassert solution('''\n8\n1 5\n3 3\n4 5\n-1 -6\n7 -4\n1 2\n7 8\n5 8\n''') == '1 + 5 = 6', 'Third example is wrong.'\n\nassert solution('''\n10\n1 5\n3 3\n4 5\n-1 -6\n7 -4\n1 2\n7 8\n5 8\n-9 -7\n''') == '3 * 3 = 9', 'Fourth example is wrong.'\n\nprint('\"solution\" is ready to get used!')\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5 3\n3 3\n2 5\n-1 -6\n4 6\n5 2\n-1 3\n''') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n'''\nassert solution('''\n2\n5 3\n3 3\n4 5\n-1 -6\n4 6\n5 2\n-1 3\n''') == '''\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n'''\nassert solution('''\n1\n5 3\n3 3\n4 5\n-1 -6\n''') == '''\n5 + 3 = 8\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n'''\nassert solution('''\n2\n1 2\n4 5\n-1 -6\n''') == '''\n4 - 5 = -1\n-1 - -6 = 5\n'''\nassert solution('''\n4\n2 4\n3 3\n4 5\n-1 -6\n''') == '''\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n'''\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 + 5 = 6'\nassert solution('7') == '3 * 3 = 9'\nassert solution('100') == '4 - 5 = -1'\nassert solution('4') == 'impossible'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('1\\n1\\n3\\n4\\n4\\n5\\n4\\n-1\\n-2') == '1 + 1 = 2\\n3 * 3 = 9\\n4 - 4 = 0\\n4 - 5 = -1'\nassert solution('5\\n-2\\n3\\n4\\n5\\n-1\\n-2') == '-2 + 3 = 5\\n-2 * 3 = -6\\n-2 - 4 = -2\\n-2 - 5 = -3\\n-2 - -1 = -2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n3 1\n5 5\n1 3\n-1 -6\n3 4\n-5 -8\n-3 -7\n5 -1\n-1 5\n5 2\n2 2\n-2 -1\n2 4\n''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n3 + 4 = 7\\n5 - 1 = 4'\nassert solution('''\n10\n4 -5\n-5 3\n-4 -6\n-3 -7\n5 5\n-2 -2\n2 4\n3 4\n-4 2\n-3 -1\n-5 2\n3 -5\n5 5\n3 4\n-4 4\n3 -1\n-5 3\n3 -4\n-5 -5\n-3 -4\n-4 -4\n-1 3\n2 -3\n-2 -2\n''') == '3 + 5 = 8\\n5 - 1 = 4\\n5 + 5 = 10\\n3 + 4 = 7\\n-5 + -3 = 2\\n5 - 3 = 2\\n-5 + 5 = 3\\n5 + 4 = 8\\n-2 - 2 = -4\\n5 - 4 = 2\\n-5 + 4 = 3\\n3 - 1 = 2\\n2 + 3 = 4\\n3 + 4 = 7\\n3 - 4 = -1\\n5 + -3 = 2\\n3 - 4 = -1\\n5 + 5 = 10\\n3 - 2 = -2\\n5 - 4 = -2\\n3 - 5 = 2\\n-5 - 5 = -4\\n-4 - 3 = -1\\n-3 - 4 = -2\\n'''\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 5\\n1 2\\n2 2\\n3 2\\n3 2\\n3 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\") == \"3\\n1\\n3\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"4\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 3\") == \"0\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '5 3'\n    '1 8'\n    '2 3'\n    '2 8'\n    '5 8'\n    '5 9'\n    '3 6 6'\n    '1 7 4'\n    '1 3 1'\n    ) == '4\\n1\\n4\\n6\\n0'\nassert solution(\n    '''20 4\n    2 5\n    4 7\n    5 8\n    7 9\n    10 10\n    12 12\n    14 14\n    16 16\n    18 18\n    20 20'''\n    ) == '4\\n1\\n4\\n6\\n0\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1\\n1\\n1\\n1\\n0'"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\"\"\") == \"4\"\nassert solution(\"\"\"2 3\n1 2\n2 1\"\"\") == \"2\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '4'\nassert solution('1 8') == '1'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nprint(solution(input()))\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '1\\n4\\n0\\n'\nassert solution('5 3') == '1\\n4\\n0\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4 1'\nprint('all tests passed!')\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0\\n'\n\nassert solution('''1\n3\n2''') == '0\\n'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == \"4\"\nassert solution('4') == \"0\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '4\\n'\n    '1 2 3 4'\n    ) == '4'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '4'"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '4', \"Wrong answer\"\nassert solution('1 2 3 4 5') == '3', \"Wrong answer\"\nassert solution('1 2 3 4 5 6') == '2', \"Wrong answer\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3 4') == '4'\nassert solution('5\\n1 2 3 4 5') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '8'\nassert solution('20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '11'\nassert solution('50\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '32'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4', \"Wrong\"\nassert solution('1 1 2 3') == '0', \"Wrong\"\nassert solution('1 1 2 2') == '2', \"Wrong\"\nassert solution('1 1 1 1') == '1', \"Wrong\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 1\") == \"0\"\nassert solution(\"1 -1\") == \"0\"\nassert solution(\"-1 -1 -1\") == \"1\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == \"4\"\nassert solution('10 20 30 40') == \"5\"\n\n'''"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 3 4''') == '4'\nprint(solution('''4\n1 2 3 4'''))\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"20 60\") == \"1\"\nassert solution(\"50 90\") == \"0\"\nassert solution(\"20 20\") == \"0\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 30 2\n20 60\n50 90\n5 40\n13 32\n23 48\n28 49\n15 30''') == '2 4'\nassert solution('''1 10 2\n20 60\n50 90\n5 40\n13 32\n23 48\n28 49\n15 30''') == '1 1'\nassert solution('''1 1 2\n20 60\n50 90\n5 40\n13 32\n23 48\n28 49\n15 30''') == '0 0'\n\n''')\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 25 20') == '1 26'\nassert solution('1 25 1') == '1 26'\nassert solution('1 6 5') == '1 7'\nassert solution('2 5 4') == '1 7'"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 6 1\") == \"1\"\nassert solution(\"12 5 3\") == \"1\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 10') == '5 2'\nassert solution('1 50') == '1 2'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 31 2') == '4 3'\nassert solution('20 60') == '2 2'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 30 2\n30 50\n50 90\n''') == \"1 3\"\nassert solution('''\n10 20 4\n10 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"4 3\"\nassert solution(\"20 1\") == \"0 0\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 1') == '1 2'\nassert solution('5 4 1') == '1 2'\nassert solution('5 5 2') == '2 2'\nassert solution('5 10 2') == '2 2'\nassert solution('5 10 3') == '1 2'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('2 2 2') == '3'\nassert solution('3 4 1') == '3'\nassert solution('3 4 3') == '2'\nassert solution('7 7 2') == '9'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == '3'\nassert solution('6 2 1') == '6'"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 2\") == \"6\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 1''') == '3'\nassert solution('''2 2 3''') == '6'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 2\") == \"6\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == '3'\nassert solution('3 2 2') == '6'\n'''"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 1\n''') == '3'\nassert solution('''2 2 2\n''') == '6'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == '3'\n\ninput_string = \"\"\"\n3 3 1\n\"\"\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"6\"\n\nstdin = read_input()\nprint(solution(stdin))\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 1\\n') == '3'\nassert solution('3 3 1\\n') == '6'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 1'\nassert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1341 2412 1200 3112 2391\n''') == '3 1'\nassert solution('''\n4\n1234\n''') == '1 2 3 4'\nassert solution('''\n6\n1234 123\n123\n1234\n''') == '2 4 3 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n1341 2412 1200 3112 2391\n\"\"\") == \"3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391\\n') == '3 1'\nassert solution('3\\n0 1 2\\n') == '1 2'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\\n\") == \"3 1\"\nassert solution(\"5\\n1240 2540\\n\") == \"2 0\"\nassert solution(\"5\\n1240 2540\\n\") == \"2 1\"\nassert solution(\"5\\n1240 2540\\n\") == \"2 2\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1341 2412 1200 3112 2391\n''') == '3 1'\nassert solution('''\n5\n1544 5452 2395 9489 9941 9795 1780\n''') == '3 1'\nassert solution('''\n5\n1341 2412 1200 3112 2391\n''') == '4 2'\nassert solution('''\n5\n123 744 539 545 823 1283 \n''') == '4 1'\nassert solution('''\n5\n1341 2412 1200 3112 2391\n''') == '5 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 2 3 4'\nassert solution('7') == '3 1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"10\\n10 20 20 30 30 50 50 60 60 80 80\") == \"0 0\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391\n''') == '3 1'\nassert solution('''1\n1\n''') == '1'\nassert solution('''1\n1\n''') == '1'\nassert solution('''8\n1341 2412 1200 3112 2391\n1341 2412 1200 3112 2391\n''') == '3 1'\nassert solution('''13\n1\n1\n1\n1\n''') == '4 1'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 20') == '6'\nassert solution('5 3') == '6'\nassert solution('1 5') == '5'\nassert solution('2 1 1') == '2'\nassert solution('2 3 2') == '3'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 20') == '6'\nassert solution('10 20') == '7'\n\n\"\"\""
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('7 9') == '2'\nassert solution('10 1') == '10'"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 20') == '6'\nassert solution('7 5') == '2'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 7\\n2 1 1\\n2 3 2\\n2 3 5') == '6'\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == '6'\nassert solution('10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == '9'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '5'\nassert solution('5') == '5'\nassert solution('4') == '4'\nassert solution('3') == '3'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 20') == '6'\nassert solution('10 10') == '9'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5\\n3 5\\n') == '6'\nassert solution('10 20\\n3 5\\n') == '6'\nassert solution('10 20\\n5 3\\n') == '4'\nassert solution('10 20\\n5 3\\n') == '6'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2 a\") == \"0 1\"\nassert solution(\"2 ab b\") == \"0 1\"\nassert solution(\"2 b\") == \"-1 0\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 ab b') == '0 1 -1'\nassert solution('1 b') == '-1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 ab b\\n\"\n    \"1 b\"\n) == \"0 1\"\nassert solution(\n    \"2 ab b\\n\"\n    \"1 a\"\n) == \"1 -1\"\nassert solution(\n    \"2 ab c\\n\"\n    \"1 b\"\n) == \"0 1\"\nassert solution(\n    \"2 ab c\\n\"\n    \"1 c\"\n) == \"1 0\"\nassert solution(\n    \"2 ab c\\n\"\n    \"1 a\"\n) == \"1 1\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 ab b\n1 b\n''') == '0 1'\nassert solution('''\n2 ab b\n1 b\n''') == '0 1'\n''')\nassert solution('''\n2 ab b\n1 a\n''') == '0 1'\nassert solution('''\n2 ab b\n1 ab\n''') == '0 -1'\nassert solution('''\n2 ab b\n2 ab\n''') == '0 1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 ab b\n1 b\n\"\"\") == \"0 1\"\n\nassert solution(\"\"\"\n3 ef\n1 a\n\"\"\") == \"0 -1\"\n\nassert solution(\"\"\"\n20 aef g\n10 ab\n\"\"\") == \"0 1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120\"\"\") == \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 ab b\n1 b\n1 ab''') == '0 1 \nassert solution('''3 ab ab\n3 ab\n4 ab\n5 ab''') == '1 -1 \nassert solution('''4 ab ab\n2 ab\n4 ab\n5 ab''') == '1 -1 \nassert solution('''6 ab ab\n2 ab\n5 ab\n5 ab\n5 ab\n3 ab''') == '2 1 \nassert solution('''9 ab ab\n2 ab\n4 ab\n3 ab\n4 ab\n5 ab\n5 ab\n5 ab\n5 ab''') == '1 -1 \n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1 0 -1 1'\nassert solution('''\n2 ab b\n1 b\n2 ab b\n''') == '0 0 1 -1 0 -1 0 -1 1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 ab b\n1 b\n''') == '0 1 \nassert solution('''\n2 b\n1 b\n''') == '-1 0\nassert solution('''\n2 ab b\n1 b\n''') == '0 1 \nassert solution('''\n2 ab b\n1 b\n''') == '0 1 \n'''\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 ab b') == '1 -1'\nassert solution('3 b b b') == '0 0 0'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"0.5\"\nassert solution(\"2\\n1 1 2\") == \"3\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    2 4\n    1 1 2\n    2\n    1 1 2\n    2\n    '''\n) == '3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 1 2\n2\n1 1 2\n2\n\"\"\") == \"3\"\nprint(solution(\"\"\"\n1 1 2\n2\n1 1 2\n2\n\"\"\") == \"3\")\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2 4\n1 1 2\n2\n1 1 2\n2\n\"\"\") == \"\"\"1\n3\"\"\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 4\n1 1 2\n2\n1 1 2\n2\n''') == '3'\nassert solution('''\n2 5\n2 5 5 5 1\n2\n2\n2\n1\n''') == '3'\n'''\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '1\\n3'\nassert solution('2\\n1 2') == '1\\n3'\nassert solution('3\\n1 2 3') == '1\\n3'\nassert solution('4\\n2 2 2 2') == '1\\n3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 4\n1 1 2\n2\n1 1 2\n2\n''') == '1\\n3\\n', \"First\"\nassert solution('''\n2 4\n1 1 2\n2\n1 1 2\n2\n''') == '0\\n3\\n', \"Second\"\nassert solution('''\n2 10\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n''') == '1\\n1\\n', \"Third\"\nassert solution('''\n2 3\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n''') == '1\\n1\\n', \"Fourth\"\nassert solution('''\n2 4\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n''') == '1\\n1\\n', \"Fifth\"\n\"\"\"\nThe game Pokenom Go has just been released. Pokenom trainers can now travel the world, capture Pokenom in the wild and battle each other! Bash \u2014 the Pokenom trainer \u2014 has decided to drop out of his university to pursue his childhood dream of becoming the best Pokenom trainer!\n\nHowever, Linux puts $N$ black boxes on a straight line. The black boxes are numbered from $1$ to $N$ from left to right. Initially, all black boxes are empty. Then Linux gives Bash $Q$ queries. Each query can be one of the following $2$ types:\n - Linux puts exactly one stone inside exactly one box between $u$-th box and $v$-th box, inclusive, with equal probability. $(1 \\le u \\le v \\le N)$.\n - Let $a_ i$ be the number of stones in black box numbered $i$. Let $A = \\sum _{i=1}^{N}{a_ i^2}$. Bash has to calculate the expected value $E(A)$.\n\nBash can only drop out of his university if he is able to answer all queries correctly. But now all Bash can think of is Pokenom. Please help him!\n\n-----Input-----\nThe first line of input contains exactly $2$ positive integers $N$ and $Q$. $(1 \\le N, Q \\le 10^5)$.\n\n$Q$ lines follow, each line contains exactly one query. As explained, a query can be one of the following $2$ types:\n - $1 \\; u \\; v$: Linux puts a stone inside one of the boxes between $u$ and $v$.\n - $2$: Linux asks Bash to compute $E(A)$.\n\n-----Output-----\nIt can be proved that the expected value can be represented as an irreducible fraction $\\dfrac {A}{B}$. For each query of type $2$, print one line containing the value $A \\times B^{-1}$ modulo $10^{9} + 7$. The given input guarantees that $B$ is not a multiple of $10^{9} + 7$.\n\n-----Explanation for examples-----\n - In the first example: With a probability of $0.5$, two stones are in different squares. Hence, the answer to the fourth query is $0.5 \\times (1^{2} + 1^{2}) + 0.5 \\times 2^{2} = 3$.\n - In the second example: With a probability of $\\frac{2}{3}$, two stones are in different squares. Hence, the answer to the fourth query is $\\frac{2}{3} \\times 2 + \\frac{1}{3} \\times 4 = \\frac{8}{3}$.\n\n-----Examples-----\nSample Input:\n2 4\n1 1 2\n2\n1 1 2\n2\nSample Output:\n1\n3\n\"\"\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3 4\") == \"5\"\nassert solution(\"5 5 5 5 5 5 5 5\") == \"16\"\nassert solution(\"12 5 5 5 5 5 5 5 12\") == \"8\"\nassert solution(\"12 5 5 5 5 5 5 5 12\") == \"16\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n\") == \"1\\n3\\n\"\nassert solution(\"1\\n2\\n1\\n2\\n\") == \"1\\n3\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 0\n3\n''') == '3'\nassert solution('''\n3\n0 3\n1 2\n2 1\n''') == '2'\nassert solution('''\n4\n0 2 1 0\n1 4 3\n2 0 0\n3 3 0\n''') == '7'\nassert solution('''\n4\n0 1 1 0\n1 4 3\n2 0 0\n3 3 0\n''') == '4'\n\n''')\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '3\\n'\n    '0 5 2\\n'\n    '5 0 4\\n'\n    '2 4 0\\n'\n    ) == '7'\nassert solution(\n    '6\\n'\n    '1 2 3 4 5\\n'\n    '5 3 2 1 0\\n'\n    '4 1 2 0 3\\n'\n    '3 0 4 1\\n'\n    '0 4 2 3 1\\n'\n    '0 1 2 3 4\\n'\n    '1 0 1 2 3\\n'\n    ) == '12'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\nassert solution(\"\"\"\n0\n0 1\n2\n0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n1 1\n3\n1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1\n1 1\n3\n1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\""
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n0 5 2\\n5 0 4\\n2 4 0') == '7'\n\"\"\"\n\nstdin = \"\"\"\n4\n0 5 2\n5 0 4\n2 4 0\n\"\"\"\n\nimport collections\nfrom itertools import combinations"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('\\n'.join(['3', '0 5 2', '5 0 4', '2 4 0'])) == '7'\n\"\"\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().rstrip()\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\nprint(\"The test passed!\")\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n6\n0 5 2\n5 0 4\n2 4 0\n0 1 2\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n2\n0 1\n1 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2\n1 2\n1 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1\n1 1\n\"\"\") == \"2\""
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15') == '9'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('12') == '2'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('123') == '0'\n'''\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == '1'\nassert solution('1234567890') == '6'\nassert solution('1234567898765432') == '8'\nassert solution('123456789101112131415161718192021222324252627282930') == '26'\nassert solution('1234567891011121314151617181920212223242526272829303') == '26'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12345\") == \"2\"\nassert solution(\"1000000000000\") == \"10\"\nassert solution(\"1023456789\") == \"2\"\nassert solution(\"12345678\") == \"2\"\nassert solution(\"1234567\") == \"1\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20') == '5'\n\"\"\""
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1099511627776\") == \"8\"\nassert solution(\"2147483647\") == \"32\"\nassert solution(\"5000000000000\") == \"32\"\nassert solution(\"3\") == \"3\"\nassert solution(\"100\") == \"4\""
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '8'\nprint(solution(input()))\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"0\"\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '2'\nassert solution('3 2') == '0'\nassert solution('4 1') == '1'\nassert solution('3 4') == '1'\nassert solution('2 5') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 3') == '2'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n.x.\n.x.\nx.x\n''') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2'\n\n\"\"\"\nfrom typing import List\n\n\nclass Solution:\n    def __init__(self):\n        self.row = 0\n        self.col = 0\n        self.diag_one = 0\n        self.diag_two = 0\n\n    def __update_building_count(self, building_map: str) -> int:\n        \"\"\"\n        update the building_count\n        \"\"\"\n        self.row = len(building_map)\n        self.col = len(building_map[0])\n        for i in range(self.row):\n            for j in range(self.col):\n                if building_map[i][j] == 'x':\n                    self.diag_one = self.diag_one + 1\n                elif building_map[i][j] == '.':\n                    self.diag_two = self.diag_two + 1\n\n    def count_max_disarm(self, building_map: str) -> int:\n        \"\"\"\n        find the maximum number of disarmed buildings\n        \"\"\"\n        self.__update_building_count(building_map)\n        if self.diag_one == self.diag_two:\n            return 1\n        elif self.diag_one > self.diag_two:\n            return self.diag_one\n        else:\n            return self.diag_two\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2'\nassert solution('''\n8 7\nxx.\n.xx\n.xx\nxx.\nx.x\nxx.\nx.x\nxx.\n''') == '4'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\nx.x.\nx.x.\nx.x.\n''') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 3\nx.x\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '2'\nassert solution('8 3') == '5'\nassert solution('4 4') == '3'\nassert solution('12 0') == '3'\nassert solution('4 0') == '0'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == '9'\nassert solution('2 5 2') == '6'\nassert solution('3 0 0') == '5'\nassert solution('4 2 4') == '6'\nassert solution('5 3 0') == '-1'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"9\"\nassert solution(\"3 1 4\") == \"8\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n''') == '9'\nassert solution('''\n4\n0 3\n0 0 2\n2 2 5\n4 5 3\n''') == '6'\n'''\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '9'\nassert solution('2') == '-1'\nassert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('5') == '9'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n\") == \"9\\n-1\\n5\\n6\\n\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n\") == \"-1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n0 1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 0 1\\n3 4 5 6 7 8 9 0 1 2\\n4 5 6 7 8 9 0 1 2 3\\n5 6 7 8 9 0 1 2 3 4\\n6 7 8 9 0 1 2 3 4 5\\n7 8 9 0 1 2 3 4 5 6\\n8 9 0 1 2 3 4 5 6 7\\n9 0 1 2 3 4 5 6 7 8\\n10 0 1 2 3 4 5 6 7 8 9\\n\") == \"-1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n0 1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 0 1\\n3 4 5 6 7 8 9 0 1 2\\n4 5 6 7 8 9 0 1 2 3\\n5 6 7 8 9 0 1 2 3 4\\n6 7 8 9 0 1 2 3 4 5\\n7 8 9 0 1 2 3 4 5 6\\n8 9 0 1 2 3 4 5 6 7\\n9 0 1 2 3 4 5 6 7 8\\n10 0 1 2 3 4 5 6 7 8 9\\n\") == \"6\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n0 1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 0 1\\n3 4 5 6 7 8 9 0 1 2\\n4 5 6 7 8 9 0 1 2 3\\n5 6 7 8 9 0 1 2 3 4\\n6 7 8 9 0 1 2 3 4 5\\n7 8 9 0 1 2 3 4 5 6\\n8 9 0 1 2 3 4 5 6 7\\n9 0 1 2 3 4 5 6 7 8\\n10 0 1 2 3 4 5 6 7 8 9\\n\") == \"5\""
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '9\\n-1\\n5\\n6\\n'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"10\\n-1\\n5\\n6\\n-1\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '9'\nassert solution('1') == '-1'\nassert solution('2') == '5'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    5\n    1 3 2\n    2 5 2\n    3 0 0\n    4 2 4\n    5 3 0\n    '''\n    ) == '9\\n-1\\n5\\n6\\n'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == \"0\"\nassert solution('3') == \"1\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('4\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n3 1 95 95 95 10') == '97'\nassert solution('5\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n3 1 95 95 95 10\\n3 2 95 50 30 20') == '97'\nassert solution('6\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n3 1 95 95 95 10\\n3 2 95 50 30 20\\n2 2 95 50 30 20') == '97'\nassert solution('7\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n3 1 95 95 95 10\\n3 2 95 50 30 20\\n2 2 95 50 30 20\\n3 1 95 95 95 10') == '97'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == \"91\"\nassert solution('''3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == \"87\"\nassert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n3 1 95 95 95 10\n4 1 65 50 30 20\n''') == \"92\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == \"91\"\n'''"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '91'\nassert solution('10') == '0'\nassert solution('30') == '31'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == \"91\"\nassert solution(\"\"\"\n2\n1 1 40 30 20 10\n3 1 95 95 95 10\n\"\"\") == \"95\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n1 100 100 100 100\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == \"91\"\nassert solution(\"\"\"\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == \"91\"\nassert solution(\"\"\"\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == \"131\"\nassert solution(\"\"\"\n10\n1 1 3 2 4 5 6 8 9 10\n5 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n1 1 10 10 10 10 10 10 10\n\"\"\") == \"216\"\nassert solution(\"\"\"\n5\n1 1 2 2 3 3 3\n2 1 2 2 2 2 2\n2 1 2 2 2 2 2\n1 1 2 2 3 3 3\n1 1 2 2 2 2 2\n1 1 2 2 2 2 2\n\"\"\") == \"93\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''\n3\n0 0 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '105'\nassert solution('''\n4\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n0 0 0 0 0 0\n''') == '106'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n2 2\n0\n1 1\n\"\"\") == \"16\"\n\nassert solution(\"\"\"\n3\n4 4\n0\n1 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n1 3\n1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n2 2\n1 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n6\n0 3 5 1 4\n0\n0 1\n1 2\n1 3\n1 4\n2 4\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n15 20\n0\n1 1\n''') == '15'\nassert solution('''\n3\n15 20\n0\n1 1\n''') == '15'\nassert solution('''\n4\n15 20\n0\n1 1\n1 1\n''') == '15'\nassert solution('''\n5\n15 20\n0\n1 1\n1 2\n1 1\n''') == '15'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '15'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n15 20\n0\n1 1\n''') == \"15\"\nassert solution('''\n1\n7\n0 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 2\n8 3\n9 3\n10 3\n11 4\n12 4\n13 4\n14 5\n15 5\n''') == \"31\"\nassert solution('''\n13\n
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '18'\nassert solution('3') == '81'\nassert solution('4') == '131'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"15\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n2\n''') == '1'\nassert solution('''\n4\n6\n2\n3\n1\n1\n3\n''') == '7'\nassert solution('''\n1\n1\n1\n''') == '0'\nassert solution('''\n3\n1\n3\n''') == '0'\nassert solution('''\n3\n1\n3\n''') == '0'\n'''\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n15 20\n0\n1 1\n''') == \"15\"\nassert solution('''\n2\n6\n1 1\n1 2\n0 1\n0 3\n1 1\n''') == \"6\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '15'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n0\n1 1\n\"\"\") == \"15\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"impossible\"\nassert solution(\"2 4 716\") == \"42\"\n\"\"\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"4\", \"Should be 4\"\nassert solution(\"5 5\") == \"impossible\", \"Should be impossible\"\nassert solution(\"5 5\") == \"impossible\", \"Should be impossible\"\nassert solution(\"5 5\") == \"impossible\", \"Should be impossible\"\n\"\"\""
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == 'impossible'\nassert solution('''5 5\n1 5 8\n1 5 3\n2 5 9\n2 6 4\n2 4 6\n3 4 1\n3 5 5\n''') == 'impossible'\nassert solution('''5 5\n1 5 8\n1 5 3\n2 5 9\n2 6 4\n2 4 6\n3 4 1\n3 5 5\n''') == 'impossible'\nassert solution('''5 5\n1 5 8\n1 5 3\n2 5 9\n2 6 4\n2 4 6\n3 4 1\n3 5 5\n''') == 'impossible'\nassert solution('''5 5\n1 5 8\n1 5 3\n2 5 9\n2 6 4\n2 4 6\n3 4 1\n3 5 5\n''') == 'impossible'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('10 20\\n0 0 0\\n1 1 0\\n2 2 0\\n3 3 0\\n4 4 0\\n5 5 0\\n6 6 0\\n7 7 0\\n8 8 0\\n9 9 0\\n10 10 0\\n11 11 0\\n12 12 0') == 'impossible'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n') == 'impossible'\nassert solution('5 4\\n2 1 375\\n3 4 98\\n1 4 716\\n2 5 283\\n') == '2'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == 'impossible'\nassert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == '375'\nprint('Day 1, Part 1:', solution(sys.stdin))"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 1, 375]) == 'impossible'\nassert solution([2, 5, 283]) == '348'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == 'impossible'\nassert solution('2 5 283') == '200'\nassert solution('3 4 98') == '208'\nassert solution('1 4 716') == '156'\nassert solution('2 5 88') == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == 'impossible'\nassert solution('''6 5\n1 3 5 5 8\n3 2 6 5 6\n1 4 7 5 7\n3 4 9 8 9\n2 5 4 8 8\n2 5 4 8 8\n''') == 'impossible'\nassert solution('''5 5\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n3 4 9 8\n2 5 4 8\n2 5 4 8\n''') == 'impossible'\nassert solution('''5 4\n1 3 375\n2 5 283\n1 4 716\n3 4 98\n2 5 4 8\n2 5 4 8\n''') == 'impossible'\nassert solution('''5 4\n1 3 375\n2 5 283\n1 4 716\n3 4 98\n3 4 9 8\n2 5 4 8\n2 5 4 8\n2 5 4 8\n''') == 'impossible'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1.000000000\"\n\nInput:\n1\nOutput:\n1.000000000\n\"\"\"\nimport time\nimport collections\nimport random\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.50000000000000001'\nassert solution('3') == '1.0000000000000002'\nassert solution('10') == '0.9999999999999996'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1.000000000\"\nassert solution(\"2\") == \"2.000000000\"\n'''\n\n'''\n    mock_input = ''\n    for i in range(1, 21):\n        mock_input += f'{i} '\n\n    mock_input += '\\n'\n\n    return mock_input\n'''\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('10') == '1.000000000'\nassert solution('11') == '2.000000000'\nassert solution('100') == '1.500000000'\nassert solution('1000') == '2.181818182'\n\n\n--Input--\n3\n--Output--\n2.181818182\n--Input--\n4\n--Output--\n2.181818182\n--Input--\n7\n--Output--\n4.0000000000000\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1.000000000'\n\nassert solution('1') == '1.000000000'\n\nassert solution('1') == '1.000000000'\n\nassert solution('4') == '3.882978514'\n\nassert solution('2') == '2.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == '1.000000000'\nassert solution(\"5\") == '6.999999999'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0.000000000'\nassert solution('10') == '2.92063492'"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '2.000000000'\n'''"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('4') == '2.000000000'\nassert solution('5') == '1.500000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '1.000000000'\nassert solution('3') == '1.000000000'\nassert solution('4') == '1.000000000'\nassert solution('5') == '1.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100 3 10') == '115.000000000'\nassert solution('15 99 98') == '115.000000000'\nassert solution('40 3 2') == '115.000000000'\nassert solution('90 10 9') == '115.000000000'"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100 3 10') == '115.000000000'\nassert solution('15 99 98') == '135.000000000'\nassert solution('40 3 2') == '52.999999999'\nassert solution('90 10 9') == '53.000000000'"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"100 3 10\") == \"115.000000000\"\nassert solution(\"0 3 10\") == \"0.000000000\"\nassert solution(\"5 0 10\") == \"5.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"100 3 10\") == \"115.000000000\"\nassert solution(\"15 99 98\") == \"99.000000000\"\nassert solution(\"40 3 2\") == \"2.0000000000\"\nassert solution(\"90 10 9\") == \"9.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"100 3 10\") == \"115.000000000\"\nassert solution(\"15 99 98\") == \"95.000000000\"\nassert solution(\"40 3 2\") == \"49.000000000\"\nassert solution(\"90 10 9\") == \"76.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5 3') == \"16\"\nassert solution('10 10 1') == \"9.9999999999\"\nassert solution('1 1 1') == \"1.0\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nassert solution('''\n1 1 1\n1 1 1\n1 1 1\n''') == '1'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nassert solution('''\n100 2 10\n50 1 4\n20 3 2\n30 3 2\n''') == '94.7333333333333'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nassert solution('''\n1 0 0\n''') == '0.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100 3 10') == '115.000000'\nassert solution('15 99 98') == '115.000000'\nassert solution('40 3 2') == '150.000000'\nassert solution('90 10 9') == '150.000000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nprint(solution(input()))\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n100 1 1') == '199.500000'\nprint(solution('''1\n100 1 1\n100 1 1.5\nSample Input 2:\n2\n100 0 1\n100 1 0\nSample Output 2:\n100 0 0''') == '100 0 0')\nprint(solution('''3\n100 0 0\n100 0 0.5\nSample Output 3:\n101.333333''') == '101.333333')\nprint(solution('''5\n100 0 0\n100 1 0\n100 0 0.5\nSample Output 4:\n100 0 0\n100 1 0''') == '100 0 0')\nprint(solution('''3\n100 0 0\n100 1 0\nSample Output 4:\n101.333333''') == '101.333333')\nprint(solution('''3\n100 0 0\n100 1 0\nSample Output 4:\n100 0 0\n100 1 0''') == '100 0 0')\nprint(solution('''3\n100 0 0\n100 1 0\nSample Output 4:\n100 0 0\n100 1 0''') == '100 0 0')\nprint(solution('''3\n100 0 0\n100 1 0\nSample Output 4:\n100 0 0\n100 1 0''') == '100 0 0')\nprint(solution('''3\n100 0 0\n100 1 0\nSample Output 4:\n100 0 0\n100 1 0''') == '100 0 0')\nprint(solution('''1\n100 0 0\n100 1 0\nSample Output 4:\n101.333333''') == '101.333333')\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nprint('ALL TEST CASES PASSED')\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 2 1\\n4 2.1 1\\n4 2.1 1.5\\n') == '198.990000'\nassert solution('3\\n10 5.3 3\\n3 3 5\\n') == '98.990000'\nprint('Congratulations! All test cases passed')\n\n'''\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n100 1 1\n100 1 1.5\n''') == '199.500000'\n\n\"\"\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '199.500000'\nassert solution('2') == '199.500000'\nassert solution('3') == '199.500000'\nassert solution('4') == '199.500000'\nassert solution('5') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2 1 1\\n2 1 2') == '199.5000000'\nassert solution('1\\n2 1 1.5\\n2 1 2') == '199.5000000'\nprint('all tests passed')"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n100 1 1\n100 1 1.5\n''') == '199.5000000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 1\\n0.5 0.5 0.5') == '199.500000'\nassert solution('3\\n1 1 1\\n0 0 0') == '199.500000'\nassert solution('10\\n1 2 3.1\\n4 5 6.2') == '5179.133399'\nassert solution('10\\n3.3 1 1.1\\n5 5 6.2') == '3169.500000'\nassert solution('30\\n1 2 2 3.1\\n4 5 6.2') == '5179.133399'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\n\nassert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '2'\n\nassert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '3'\n\nassert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\n\nassert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '2'"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"4 4\") == \"1\"\n\nprint(solution(input))\n\n'''"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 5\n1 2 3 4 5 6\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 3\n1 2 3 4 5 6\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 1\n1 2 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1'\n\nassert solution('''2 2\n1 2 3 4\n1 2\n''') == '0'\n\nassert solution('''2 4\n1 2 3 4\n1 2\n''') == '2'\n\nassert solution('''2 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n''') == '2'\n\nassert solution('''2 10\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''5 8\n1 2 3 4 5 6 7 8 9 10 11''') == '2'\nassert solution('''6 2\n1 2 3 4 5 6 7''') == '0'\nassert solution('''1 2\n1 2 3''') == '2'\nassert solution('''1 1\n1 1''') == '0'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1', \"First\"\nassert solution('''\n2 4\n1 2 3 4 5 6 7 8 9 10 11\n''') == '3', \"Second\"\nassert solution('''\n5 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '3', \"Third\"\nassert solution('''\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1', \"Fourth\"\n\n\"\"\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3 2 1 1') == '5'\nassert solution('20\\n3 2 1 1') == 'Impossible'\nassert solution('13\\n3 2 1 1') == '3'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"Impossible\"\nassert solution(\"4\\n\") == \"5\"\nassert solution(\"3\\n1 1 5\\n\") == \"5\"\nassert solution(\"5\\n1 1 5\\n\") == \"Impossible\"\nassert solution(\"15\\n1 1 1 1\\n\") == \"Impossible\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"Impossible\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Impossible'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == 'Impossible'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == 'Impossible'\nassert solution('4') == '2'\nassert solution('6') == '3'\nassert solution('1') == '1'\nassert solution('20') == 'Impossible'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''13\n3 2 1 1''') == 'Impossible'\nassert solution('''23\n4 5 6 7''') == '10'\nassert solution('''99\n7 5 2 3''') == '17'\nassert solution('''33\n8 9 2 4''') == '13'\nassert solution('''48\n1 1 1 1\n1 2 1 1\n1 1 1 2\n1 2 1 2\n1 1 1 2\n1 2 1 1\n1 1 2 2\n1 2 1 2\n1 1 1 1\n1 2 2 1\n1 1 2 1\n1 2 1 2\n1 2 2 1\n1 2 1 1\n1 1 1 1''') == 'Impossible'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 1 1\\n') == '5'\nassert solution('13\\n3 2 1 1\\n') == 'Impossible'"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == 'Impossible'\nassert solution('9') == '1'\nassert solution('7') == '1'\nassert solution('1000000000') == 'Impossible'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"Impossible\"\nassert solution('2') == \"2\"\nassert solution('3') == \"1\"\nassert solution('5') == \"1\"\nassert solution('10') == \"2\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '5'\nassert solution([13,3,2,1,1]) == '5'"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\naabcad\naba\nacd\n''') == 'yes'\nassert solution('''\naabcad\nabc\nabcd\n''') == 'no'\nassert solution('''\naabcad\na\nbc\n''') == 'no'\nassert solution('''\naabcad\nabcd\nbcd\n''') == 'yes'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'no'\nassert solution('a') == 'yes'\nassert solution('ab') == 'no'\nassert solution('abc') == 'yes'\nassert solution('aabc') == 'yes'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\naabcad\naba\nacd\n'''\n) == 'yes'\nassert solution(\n'''\naabcad\naba\nacd\n'''\n) == 'no'\nassert solution(\n'''\naabcad\naba\nacd\n'''\n) == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\naabcad\naba\nacd\n''') == 'yes'\nassert solution('''\n'') == 'no'\n''')\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'yes'\nassert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\naabcad\naba\nacd\n''') == 'yes', \"First Example\"\nassert solution('''\nzabcdefg\nzy\nyf\n''') == 'no', \"Second Example\"\nassert solution('''\nhijklmno\nhijkl\nmno\n''') == 'yes', \"Third Example\"\nassert solution('''\nabacde\nab\nacd\n''') == 'no', \"Fourth Example\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '5'\nassert solution('''\n3 5 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '3'\n\nassert solution('''\n7 5\n6 6\n2 5\n1 4\n4 5\n5 3\n6 7\n1 8\n3 2\n''') == '5'\nassert solution('''\n7 5\n6 6\n2 5\n1 4\n4 5\n5 3\n6 7\n1 8\n3 2\n''') == '4'"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '5'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"5\"\n\nassert solution('''\n1 5 10\n2 3\n1 3 5\n2 4\n2 5\n2 4\n4 4\n4 5\n1 4\n1 5\n1 3\n2 4\n''') == \"5\"\n\nassert solution('''\n1 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"5\"\n\nassert solution('''\n2 4 8\n1 3\n1 5\n2 4\n2 5\n3 4\n3 5\n4 4\n4 5\n5 5\n5 6\n''') == \"7\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5 10') == '5'\nassert solution('3 2') == '2'\nassert solution('3 1 1 6') == '1'\nassert solution('3 4 7 10') == '4'\nassert solution('2 4 3 5') == '0'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n\") == \"5\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 5 10\\n\"\n    \"3 2\\n\"\n    \"1 2 4 7\\n\"\n    \"3 1 1 6\\n\"\n    \"3 4 7 10\\n\"\n    \"2 4 3 5\\n\"\n    \"4 2 8 9\\n\"\n) == \"5\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 10') == '5'\nassert solution('3 2') == '2'\nassert solution('1 2 4 7') == '5'\nassert solution('3 1 1 6') == '5'\nassert solution('3 4 7 10') == '7'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5 10') == '5'\nassert solution('3 2') == '2'\nassert solution('3 1 1 6') == '3'\nassert solution('3 4 7 10') == '2'\nassert solution('2 4 3 5') == '1'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same\n''') == '4', 'Should be 4'\nassert solution('''5 1\n2 5 true\n''') == '2', 'Should be 2'\nassert solution('''5 1\n1 5 false\n''') == '0', 'Should be 0'"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same\n''') == '4', 'First sample'\n\nassert solution('''5 2\n2 4 same\n3 5 same\n''') == '0', 'Second sample'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n\n\"\"\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4'\nassert solution('5 2\\n2 4 different\\n3 5 same') == '0'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n2 4 same\n3 5 same\nSample Input:\n7 7\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n13 14 15\n16 17 18\n19 20 21\nSample Output:\n19\n''') == '4'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2 same\\n1 2 same\\n1 2 same\\n1 2 same') == '4'\nassert solution('5 2\\n3 4 same\\n3 4 same\\n3 4 same\\n3 4 same\\n') == '0'"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same\n''') == '4'\nassert solution('''5 2\n2 4 same\n3 5 same\n''') == '0'\nassert solution('''5 2\n2 4 same\n3 5 same\n''') == '1'\nassert solution('''5 2\n2 4 same\n3 5 same\n''') == '2'\n'''\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 same\") == \"4\"\nassert solution(\"3 5 same\") == \"0\"\n\"\"\"\n\nfrom itertools import product"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4 same\n2 5 same\n1 5 same\n3 1 same\n''') == '4'\nassert solution('''4 6 same\n3 2 same\n2 1 same\n1 3 same\n''') == '3'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n2 4 same\n3 5 same\n''') == '4'\n\nassert solution('''\n5 2\n2 4 same\n3 5 same\n4 6 same\n''') == '5'"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"10 5\") == \"2\"\nassert solution(\"6 4\") == \"3\"\nassert solution(\"6 5\") == \"4\"\nassert solution(\"6 0 1\") == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 4\n0 1\n0 2\n3 4\n3 5\n''') == '3'\nassert solution('''\n5 4\n0 1\n0 2\n4 5\n3 6\n''') == '1'\nassert solution('''\n5 5\n0 1\n0 2\n4 5\n3 6\n''') == '2'\n''')\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 10\n0 1\n0 2\n3 4\n3 5\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '3', \"Should be 3\"\nassert solution('6 4') == '3', \"Should be 3\"\nassert solution('0 1') == '1', \"Should be 1\"\nassert solution('0 2') == '2', \"Should be 2\"\nassert solution('3 4') == '3', \"Should be 3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6 4\n0 1\n0 2\n3 4\n3 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 1\n1 2\n1 1\n2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 6\n0 1\n0 2\n3 4\n3 5\n4 5\n4 6\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n0 1\\n0 2\\n3 4\\n3 5') == '3'\nassert solution('10 3\\n0 0\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100\\n')\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"6 4\") == \"3\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"10 7\") == \"2\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == '3'\nassert solution('6 4\\n0 1\\n0 2\\n3 4\\n5 4') == '4'\nassert solution('6 4\\n0 1\\n0 2\\n3 4\\n5 4') == '0'\nassert solution('6 4\\n0 1\\n0 2\\n3 4\\n5 4') == '0'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([6, 4], [[0, 1], [0, 2], [3, 4], [3, 5]]) == 3\nassert solution([5, 3], [[0, 1], [1, 2], [2, 3]]) == 2\nassert solution([10, 10], [[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]]) == 9\nassert solution([10, 10], [[0, 1], [1, 2], [2, 3]]) == 9"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([6, 4], [[0, 1], [0, 2], [3, 4], [3, 5]]) == \"3\"\nassert solution([6, 4], [[0, 1], [0, 2], [3, 4], [3, 5], [5, 2]]) == \"4\"\nassert solution([6, 4], [[0, 1], [0, 2], [3, 4], [3, 5], [5, 2], [3, 4]]) == \"4\"\nassert solution([6, 4], [[0, 1], [0, 2], [3, 4], [3, 5], [5, 2], [5, 3], [4, 3], [4, 2], [4, 0], [5, 0]]) == \"4\"\nassert solution([6, 4], [[0, 1], [0, 2], [3, 4], [3, 5], [5, 2], [5, 3], [4, 3], [4, 2], [4, 0], [5, 0], [0, 2], [0, 1]]) == \"2\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\n') == '9.0\\n6.5\\n2.5\\n'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5\\n'''\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4.0'\nassert solution('5') == '2.0'\nassert solution('10') == '2.5'\nassert solution('1000') == '11.0'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"9.0\"\nassert solution(\"5 2 2 3 5\") == \"6.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"9.0\"\nassert solution(\"20\") == \"23.5\"\nassert solution(\"300\") == \"301.0\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'\nassert solution('2\\n4 2\\n1 2\\nLUR') == '6.5'\n\"\"\""
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"9.0\\n6.5\\n2.5\\n\", \"Error with simple example\"\n\nassert solution(input_string=\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\", \"Error with complex example\"\n\nassert solution(\"15\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"19.0\\n6.5\\n2.5\", \"Error with negative example\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\n''') == '''9.0\n6.5\n2.5\n'''\nassert solution('''5\n1 3\n2 2\n3 2\n4 3\n5 5\nURD\n''') == '''7.0\n7.0\n4.0\n'''\nassert solution('''5\n1 3\n2 2\n3 2\n4 3\n5 5\nURD\n''') == '''10.0\n10.0\n5.0\n'''\nassert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nURD\n''') == '''8.5\n8.5\n2.5\n'''\nassert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nURD\n''') == '''8.5\n8.5\n2.5\n'''\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5\\n'''\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"9.0\"\nassert solution(\"2\") == \"2.5\"\nassert solution(\"1\") == \"1.0\"\n\"\"\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\n\") == \"1\\n\"\nassert solution(\"4 4 1\\nR 3 1\\nR 1 4\\nB 3 2\\nB 1 2\\nB 2 3\\nR 3 4\\n\") == \"0\\n\"\nassert solution(\"4 4 1\\nR 3 1\\nR 1 4\\nB 3 2\\nB 1 2\\nB 2 3\\nR 3 4\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5 2\nB 1 2\nB 2 3\nR 3 1\nB 1 3\nR 3 2''') == '1', \"Oranges\"\nassert solution('''5 6 2\nB 5 2\nB 1 6\nR 3 1\nR 5 2\nR 1 3''') == '1', \"Oranges\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''\n4 5 3\nB 1 2\nB 3 4\nR 3 1\n''') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '0'\nassert solution('''\n6 6 3\nR 3 1\nR 3 2\nR 3 3\nB 1 2\nB 3 3\nB 4 5\n''') == '1'\n''')\n\n## [Directed Graph with Edges not Colored]\n\nGiven a directed graph, write a function that determines whether it is a directed acyclic graph and, if so, returns an array of the lengths of each strongly connected subgraph.\n\nFor example, given the following graph:\n\nA ---> B\nB ---> C\nC ---> D\nA ---> D\n\nreturn: [2, 3, 2]\n\n-----Input-----\nThere will be a single test case in the input. Each test case will begin with a line with a single integer $n$, which is the number of nodes in the graph, followed by an edge-by-edge description of the graph.\n\n-----Output-----\nOutput a single line, containing the length of each subgraph. If the graph is not a DAG, then the answer should be $0$.\n\n-----Examples-----\nSample Input:\n\n5\n--A--\nA--B--\nB--C--\nC--D--\nD--E--\n\nSample Output:\n\n2"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''\n5 6 4\nR 5 3 1\nR 5 2 1\nR 5 1 2\nR 5 2 3\nB 4 2\nB 5 3\nB 5 4\n''') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 2') == '1'\nassert solution('7 3 4') == '0'\nassert solution('20 4 1') == '1'\nassert solution('10 3 2') == '0'\nassert solution('1 7') == '1'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\n') == '1'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3 2\nR 1 2\nR 2 3\n''') == '1'\n\nassert solution('''\n3 3 3\nB 1 2\nB 2 3\nR 3 1\nR 3 2\n''') == '0'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 5 1\n0 0 1\n''') == '1'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n') == '88\\n5\\n5\\n7\\n'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == '88'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2,5,0,5]) == '88'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == \"88\"\nassert solution('3') == \"12\"\nassert solution('4') == \"5\"\nassert solution('5') == \"7\"\nassert solution('10') == \"7\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '88'\nassert solution('5') == '5'\nassert solution('4') == '7'\nassert solution('88') == '88'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([5, 0, 5]) == \"88\"\n\nassert solution([7, 0, 7]) == \"5\"\n\nassert solution([4,]) == \"7\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\") == \"88\\n5\\n5\\n7\"\nassert solution(\"4\\n\") == \"\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"88\"\nassert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"7\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88'\n\nassert solution('''\n5\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n''') == '0'\n\nassert solution('''\n5\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n''') == '0'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\") == \"5\"\nassert solution(\"3 3 1 2\") == \"5\"\nassert solution(\"3 3 1 2\") == \"5\"\nassert solution(\"4 4 1 5 1\") == \"4\"\nassert solution(\"4 4 1 5 1\") == \"4\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 1 1 1\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 2 2 2\n2\n1 2\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5 4 1 1\n3\n1 3 1\n3 2 2\n1 2 3\n4 2 3\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5 5 2 3\n2\n1 2 2\n1 3 1\n2 3 2\n3 2 3\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\") == \"5\""
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '-1'\nassert solution(\"\"\"\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n\"\"\") == '5'"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5\\n7 7 7 7 7\\n1 2 1 2 1 2 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n3 3 3 3 3 3 3\\n2 2 2 2 2 2 2\\n1 1 1 1 1 1 1\\n2 2 2 2 2 2 2\\n3 3 3 3 3 3 3\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\") == \"5\""
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '5'\nassert solution_2() == '5'"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2') == '5'\nassert solution('2') == '-1'\nassert solution('2 1 1') == '2'\nassert solution('3') == '3'\nassert solution('2 1 2') == '-1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '5'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2 2 1 2\n1 3 1\n1 2 1\n2 3 3\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n2 2 1 2\n1 3 1\n1 2 1\n2 3 3\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\n\"\"\"\n\nimport re"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkniz'\nassert solution('mirkov5') =='mirk5'\nassert solution('mirkov3') =='mirk3'\nassert solution('mirkov1') =='mirk1'\nassert solution('mirkov2') =='mirk2'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz', \"Wrong\"\nassert solution('C4') == 'C4', \"Wrong\"\nassert solution('C4nizCC44') == 'C4nizCC44', \"Wrong\""
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('mirkoC44') =='mirkoC44'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirnoviz\"\nassert solution(\"GnqE9rKX7jqZjU4.bzNw0.9i4.f6T.2T.3W\") == \"GnqE9rKX7jqZjU4.bzNw0.9i4.f6T2T3W\""
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('C4') == '12ab'\n'''"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovnizCC44', 'Wrong output'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkniz\"\nassert solution(\"mirkoP44\") == \"mirkoP\"\nassert solution(\"mirkoP44mirkoP44\") == \"mirkoP44\"\nassert solution(\"mirkoP44mirkoP44mirkoP44\") == \"mirkoP44\"\nassert solution(\"mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44mirkoP44\") == \"mirkoP44\""
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '32'"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n2\n1\n1\n''') == '1'\nassert solution('''\n3\n1\n1\n''') == '1'\nassert solution('''\n5\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n8\n1\n1\n1\n1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '32'\nassert solution(input(\"\")) == '32'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    4\n    100 65\n    200 10\n    300 60\n    \"\"\") == \"\"\"\n    32\n    \"\"\".strip()\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3 10\\n3 5\\n') == '32'\nassert solution('3\\n3 10\\n5 15\\n') == '32'\nassert solution('2\\n3 10\\n5 10\\n') == '32'\nassert solution('3\\n3 10\\n5 20\\n') == '32'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n3 65\n45 10\n60 25\n\"\"\") == \"32\"\nassert solution(\"\"\"\n3\n3 65\n45 10\n60 25\n\"\"\") == \"32\"\nassert solution(\"\"\"\n3\n3 65\n45 10\n60 25\n\"\"\") == \"32\"\nassert solution(\"\"\"\n3\n3 65\n45 10\n60 25\n\"\"\") == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"32\"\nassert sorted(solution()) == sorted([32, 38, 60])\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 65\n45 10\n60 25\n''') == '32'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"32\""
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 0 3 1\\n\") == \"3\"\nassert solution(\"10\\n-1 -2 -3 -4 -5\\n\") == \"8\"\nassert solution(\"4\\n-3 -2 1 0\\n\") == \"1\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 0 3 1\n''') == '3'"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0 3 1\") == \"2\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 0 3 1\\n') == '3'\nassert solution('1\\n1\\n') == '0'\n\"\"\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 0 3 1\\n\") == \"3 2\""
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution(\"\"\"\n5\n1 2 0 3 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n1 2 0 3 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 0 3 1\n''') == '3'\nassert solution('''\n3\n1 1 2\n''') == '2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 0 3 1') == '2\\n1'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 0 3 1\\n') == '3'\nassert solution('2\\n2 2\\n') == '0'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n') == '2'\nassert solution('10 3 3\\n+ 1 1\\n+ 1 2\\n+ 1 3\\n- 1 4\\n- 1 5\\n- 1 6\\n- 1 7\\n') == '3'"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nprint('solution() is working!')"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 4 4\") == \"4\"\nassert solution(\"+ 1 1\") == \"1\"\nassert solution(\"- 1 2\") == \"1\"\nassert solution(\"+ 1 3\") == \"1\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 10 4\n+ 1 1\n+ 1 2\n- 1 2\n- 1 3\n+ 1 3\n- 1 3\n+ 1 4\n- 1 4\n+ 1 5\n- 1 5\n+ 1 6\n- 1 6\n+ 1 7\n- 1 7\n+ 1 8\n- 1 8\n+ 1 9\n- 1 9\n+ 1 10\n- 1 10''') == '2'\nassert solution('''\n10 10 4\n+ 1 1\n+ 1 2\n- 1 2\n- 1 3\n+ 1 3\n- 1 3\n+ 1 4\n- 1 4\n+ 1 5\n- 1 5\n+ 1 6\n- 1 6\n+ 1 7\n- 1 7\n+ 1 8\n- 1 8\n+ 1 9\n- 1 9\n+ 1 10\n- 1 10''') == '5'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 3\\n') == '1'\nassert solution('1\\n2 4\\n') == '0'"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\") == \"3\"\nassert solution(\"2 5 4\") == \"2\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 5 4\") == \"2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == '1'\n\nassert solution('''6 8 6\n+ 1 1\n+ 1 2\n+ 1 3\n+ 1 4\n+ 1 5\n- 1 6\n- 1 7\n- 1 8''') == '0'\n\nassert solution('''10 8 10\n+ 1 1\n+ 1 2\n+ 1 3\n+ 1 4\n+ 1 5\n+ 1 6\n+ 1 7\n+ 1 8\n+ 1 9\n- 1 10\n- 1 11\n- 1 12\n- 1 13\n- 1 14\n- 1 15\n- 1 16\n- 1 17\n- 1 18\n- 1 19\n- 1 20''') == '73'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 4') == '2'\nassert solution('5 5 5') == '0'\nassert solution('1 5 1') == '2'\nassert solution('9 9 9') == '27'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n') == '2'\nassert solution('5 5 2\\n+ 1 1\\n- 1 2\\n- 1 3\\n+ 1 4\\n- 1 5\\n') == '4'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 2') == '3'\nassert solution('2 2 2') == '2'\nassert solution('1 1 1') == '2'\nassert solution('1 1 2') == '1'\nassert solution('2 2 2') == '0'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10000000000 0\n10000000000 1\n''') == '500000004'\nprint(solution('''\n2\n5000000000 0\n10000000000 1\n'''))"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"100%02\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000000000 0\\n1000000000 1\") == \"500000004\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000000000 0') == '500000004'\nassert solution('1000000000 1') == '300000000'"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n100000000 0\n100000000 1\n100000000 2\n''') == '4'\n\nassert solution('''\n2\n100000000 0\n100000000 1\nSample Output:\n2\n''') == '2'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '500000004'\nassert solution('1000000000 0') == '500000004'\nassert solution('1000000000 1') == '500000004'\nassert solution('1000000000 0 1') == '500000004'\nassert solution('1000000000 1 0') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '6.62475158590083e-64'"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '10449423659726333017'\nassert solution('4') == '6528507926570894401'\nprint(solution(input()))\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000000000 0\\n1000000000 1\") == \"500000004\"\nassert solution(\"2 1\\n2 1\") == \"500000004\"\nassert solution(\"2 3\\n1 3\") == \"400000008\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 8') == '12'\nassert solution('4 6') == '16'\n'''\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 6\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\nassert solution('''\n5 10\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '50'\nassert solution('''\n5 6\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '21'\nassert solution('''\n4 6\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 3 13 27\n3 5 23 24\n''') == '45'"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 8\") == \"12\"\nassert solution(\"6 9\") == \"15\"\nassert solution(\"5 7\") == \"17\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"8 8\") == \"1\""
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 3 13 27\\n3 5 23 24') == \"12\"\nassert solution('5 10\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 3 13 27\\n3 5 23 24') == \"22\""
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8') == '12'\nassert solution('5 5') == '5'\nassert solution('3 4') == '3'\nassert solution('3 4') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '12'\nassert solution('10 10') == '50'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 8\\n\"\n    \"1 2 1 10\\n\"\n    \"2 4 11 16\\n\"\n    \"2 1 9 12\\n\"\n    \"3 5 28 100\\n\"\n    \"1 3 13 27\\n\"\n    \"3 5 23 24\"\n) == \"12\"\n\"\"\"\n\n\"\"\"\nRuntime: 24 ms, faster than 99.88% of Python3 online submissions for Minimize Sum of Flights' Frustration.\nMemory Usage: 12.6 MB, less than 100.00% of Python3 online submissions for Minimize Sum of Flights' Frustration.\n\"\"\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5, 8]) == \"12\"\nassert solution([5, 6]) == \"16\"\nassert solution([1, 2]) == \"8\"\nassert solution([2, 4]) == \"11\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\nassert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 3 13 27\n3 5 23 24\n''') == '20'\nassert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 3 13 27\n3 5 23 24\n''') == '37'\nassert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 3 13 27\n3 5 23 24\n''') == '37'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '3\\n'\n    '15 5 3\\n'\n    '12 4 4\\n'\n    '20 10 5\\n'\n) == '3'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n5 6\n10 5 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n8 9 1\n8 9 1\n8 9 1\n8 9 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n9 6\n8 5 1\n8 9 1\n8 9 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n1 5 1\n1 5 1\n1 5 1\n1 5 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n15 5 3\n12 4 4\n20 10 5\n5 15 4\n10 3 3\n12 8 4\n''') == '3'\nassert solution('''\n4\n10 6 3\n20 7 4\n1 10 2\n9 10 3\n''') == '4'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '3'\nassert solution('10 5') == '10'\nassert solution('15 5 3') == '3'\nassert solution('12 4 4') == '4'\nassert solution('20 10 5') == '4'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 19\n15 5 3\n12 4 4\n20 10 5\n''') == '3'\nassert solution('''\n3 30\n12 12 12\n10 12 12\n20 12 12\n''') == '4'\n'''\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 5\n5 5 5\n3 4 4\n10 11 1\nSample Input:\n8 8\n10 9 1\n4 7 8\n12 9 9\n16 10 1\n8 8 4\n15 7 1\n11 9 9\n13 2 1\n11 12 7\nSample Output:\n4\n''') == \"4\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n15 5 3\\n12 4 4\\n20 10 5') == '3'\nassert solution('10\\n10000 50 200\\n200 20 50\\n2000 2 200\\n2000 2 200') == '2'\nassert solution('7\\n1 2 3\\n2 3 3\\n3 4 2\\n4 5 2\\n5 2 2\\n2 1 2') == '5'\nassert solution('2\\n1000 1000\\n100 1000\\n1000 100\\n100 100\\n10000 100\\n100 1000\\n1000 100\\n1000 100\\n100 1000\\n10000 1000') == '2'\nassert solution('5\\n1000000 100000\\n1000000 100000\\n1000000 100000\\n1000000 100000\\n1000000 100000') == '5'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n15 5 3') == '3'\nassert solution('10\\n10 10 10 10\\n20 10 10 10\\n15 10 10 10') == '6'\nassert solution('6\\n1 2 2 2\\n2 2 2 2\\n2 2 2 2\\n1 2 2 2') == '5'\nassert solution('4\\n5 5 5 5\\n5 5 5 5\\n3 3 3 3\\n1 1 1 1') == '4'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '3\\n15 5 3\\n12 4 4\\n20 10 5'\n) == '3', \"All tests failed\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"3\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n1 1\n''') == '1'\n\nassert solution('''4\n5 1 1\n6 3 1\n7 3 1\n8 3 1''') == '2'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('5 1') == '4'\nassert solution('5 3') == '1'\nassert solution('5 4') == '2'\nassert solution('5 5') == '0'"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\n\"\"\""
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 1\") == \"1\"\nassert solution(\n    \"3 1 2 3\") == \"2\"\nassert solution(\n    \"3 2\") == \"0\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2') == '1'\nassert solution('2\\n3 2') == '0'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n1 2\n1 3\n1 4\n1 5\n1 6''') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 1\\n') == '1'\nassert solution('2\\n1 2\\n') == '0'"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('11') == '4'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == 1\nassert solution(\"2 2\") == 0\nassert solution(\"3 2\") == 2\nassert solution(\"2 3\") == 1\nassert solution(\"3 4\") == 3\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RGRG\") == \"4\"\nassert solution(\"GBGB\") == \"4\"\nassert solution(\"BYBY\") == \"3\"\nassert solution(\"YRYR\") == \"0\"\nassert solution(\"RRR\") == \"0\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nRGGR\nGBGB\nBYBY\nYRYR\n''') == '3'\n'''\nSample Input:\nRYGY\nGGRBY\nRYBY\nGGYB\nSample Output:\n5\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RRRB') == '3'\nassert solution('RBRB') == '1'\nassert solution('BRBB') == '4'\nassert solution('RBBR') == '1'\nassert solution('RRBB') == '2'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"RGRR\\nGBGB\\nBYBY\\nYRYR\") == \"4\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RGGR') == '3'\nassert solution('GBGB') == '2'\nassert solution('BYBY') == '1'\nassert solution('YRYR') == '4'\n\nimport unittest\n\nclass Test(unittest.TestCase):\n\n    def test_solution(self):\n        self.assertEqual(solution('RGGR'), '3')\n        self."
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RRB\") == \"2\"\nassert solution(\"YBB\") == \"2\"\nassert solution(\"YYB\") == \"3\"\nassert solution(\"YYG\") == \"3\"\nassert solution(\"YRB\") == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RRRR\") == \"3\"\nassert solution(\"RRGG\") == \"2\"\nassert solution(\"RRBB\") == \"1\"\nassert solution(\"RBBB\") == \"1\"\nassert solution(\"YBBG\") == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RGGR') == '3'\nassert solution('GBGB') == '1'\nassert solution('BYBY') == '2'\nassert solution('YRYR') == '1'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''RGGR\nGBGB\nBYBY\nYRYR\n''') == '3'\nassert solution('''RGBY\nGYYG\nBBBY\nYYRY\n''') == '4'\nassert solution('''RGBY\nYGGG\nBBBY\nYYRY\n''') == '4'\nassert solution('''RGBY\nYGGG\nBBYY\nYYRY\n''') == '4'\nassert solution('''BBYY\nYGGG\nRGBY\nYYRY\n''') == '5'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\""
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'AAABB'"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'AAA'\nassert solution('100') == 'AAAAAAABAA'"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAAAA', 'First'\n\nassert solution('''10\n-1 1 1 1 1 1 1 1 1 1 1 1\n''') == 'BBBBB', 'Second'\n\nassert solution('''101\n-1 0 1 0 1 1 1 0 1 1\n''') == 'AABBB', 'Third'\n\nassert solution('''20\n-1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == 'AAAAAABAABBB', 'Fourth'\n\nassert solution('''30\n-1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == 'AAAAAAAAAAABAABBB', 'Fifth'"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'ABAB'\nassert solution
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'ABABAB'"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n-2 -1 0 1 2\n2 1 0 -1 -2\"\"\") == \"AABB\"\nassert solution(\"\"\"4\n-1 -1 0 1\n1 1 0 -1\n1 -1 0 1\n-1 -1 0 1\"\"\") == \"AAAB\"\nassert solution(\"\"\"6\n-1 -1 0 1 2 -1\n1 1 0 -1 -2 1\n1 -1 0 1 2 -1\n-1 -1 0 1 2 -1\n-1 1 0 -1 -2 1\n-1 -1 0 1 2 -1\"\"\") == \"AAABB\"\nassert solution(\"\"\"5\n-2 -1 0 1 2\n2 1 0 -1 -2\n1 1 0 -1 -2\n-1 -1 0 1 2\n-1 -1 0 1 2\"\"\") == \"AAAAAABB\"\nassert solution(\"\"\"1\n0\n-1\n0\n0\n\"\"\") == \"AB\"\n\"\"\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"A\"\nassert solution(\"2\") == \"B\"\nassert solution(\"5\") == \"ABAAB\"\nassert solution(\"10\") == \"AAABB\"\nassert solution(\"100\") == \"AAABBA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'AAAAA'\nassert solution('1') == 'A'\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''0\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == 'AAAAAAAA'\n\n'''\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"AAAA\"\nassert solution(\"0\") == \"AA\"\nassert solution(\"6\") == \"BBBB\"\nassert solution(\"-1\") == \"ABA\"\nassert solution(\"-2\") == \"ABA\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('\\n'.join(['6', '3'])) == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\\n3 0\\n0 2\\n1 1\") == \"1\"\nassert solution(\"2 3\\n1 0\\n0 2\\n1 1\") == \"2\""
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"IMPOSSIBLE\"\nassert solution(\"20\") == \"IMPOSSIBLE\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nassert solution([6, 3]) == \"IMPOSSIBLE\"\nassert solution([2, 3]) == \"2\"\nassert solution([4, 0]) == \"IMPOSSIBLE\"\nassert solution([0, 2]) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\n    '6 3',\n    '2 3',\n    '4 0',\n    '0 2',\n    '6 1',\n])) == 'IMPOSSIBLE'\n\nassert solution('\\n'.join([\n    '5 5',\n    '0 0',\n    '5 5',\n])) == '2'\n\nassert solution('\\n'.join([\n    '6 6',\n    '2 4',\n    '1 0',\n    '3 5',\n    '4 6',\n])) == '2'\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\n4 0\n0 2\n6 1\n''') == 'IMPOSSIBLE'\nassert solution('''\n5 5\n3 0\n6 3\n1 0\n7 5\n0 7\n''') == '3'\nassert solution('''\n4 4\n2 0\n7 0\n1 3\n6 0\n''') == '5'\nassert solution('''\n7 9\n3 0\n6 3\n4 0\n1 5\n5 7\n2 3\n8 5\n0 7\n''') == '9'\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n0 2\n1 2\n2 3\n''') == \"IMPOSSIBLE\", \"First\"\nassert solution('''\n3 3\n2 3\n0 2\n1 2\n2 3\n''') == \"IMPOSSIBLE\", \"Second\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3') == 'IMPOSSIBLE'\nassert solution('10 1') == '1'\nassert solution('5 10') == '1'\n'''\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '1'\nassert solution('8 8') == '2'"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    5 5\n    austria\n    autocorrect\n    program\n    programming\n    computer\n    autocorrelation\n    programming\n    competition\n    zyx\n    austria\n    ''') == '''\n    12\n    4\n    11\n    3\n    2\n    '''\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria') == '12'\nassert solution('2 2\\nhello\\nworld\\n') == '3'\nassert solution('1 3\\n') == '3'\nassert solution('1 3\\n') == '3'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\naustria\\naustria\\naustria\\naustria\\naustria') == '12'\n\nassert solution('5 5\\naustria\\naustria\\naustria\\naustria\\naustria\\naustria\\naustria\\naustria\\naustria\\naustria\\nautocorrelation\\naustria\\ncompetition\\nzyx\\naustria\\n') == '11'\n\nassert solution('5 5\\naustria\\naustria\\naustria\\naustria\\naustria\\naustria\\naustria\\naustria\\naustria\\naustria\\nautocorrelation\\ncomputer\\nautocorrelation\\ncompetition\\nzyx\\naustria\\n') == '4'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline().strip()\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '12'\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '4'\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '11'\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '3'\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '2'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == \"5\"\nassert solution('4') == \"7\"\nassert solution('5') == \"6\"\nassert solution('6') == \"5\"\nassert solution('7') == \"8\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx') == '12'\nassert solution('4 4\\nprogram\\ncomputer\\ncompetition\\nzyx\\nprogram\\nprogramming\\n') == '13'\nassert solution('5 4\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\n') == '11'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''12\n4\n11\n3\n2\n'''\nassert solution('''\n10 3\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''11\n4\n11\n3\n2\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '12'\n\nassert solution('2 2') == '4'\n\nassert solution('3 3') == '3'\n\nassert solution('2 2') == '5'\n\nassert solution('3 3') == '3'"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\naustria\nautocorrect\nprogram\n''') == '11'\nassert solution('''\n4\naustria\nautocorrect\nprogram\nprogramming\n''') == '2'\nassert solution('''\n5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\n''') == '9'\nassert solution('''\n5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\n''') == '5'\nassert solution('''\n10\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogram\ncompetition\nzyx\naustria\nSample Output:\n17\n3\n2\n4\n2\n''') == '14'"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(\"1 0 1\\n\") == \"3\"\nassert solution(\"2 0 0 1\\n\") == \"2\"\nassert solution(\"3 0 1 1\\n\") == \"2\"\nassert solution(\"4 1 2 2\\n\") == \"4\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '3'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n0 1\n''') == '3'\nassert solution('''\n3\n1 2 3\n''') == '4'\nassert solution('''\n2\n2 1\n''') == '2'\nassert solution('''\n1\n3\n''') == '1'\nassert solution('''\n1\n1 1 1\n''') == '1'\n'''\ninput\n3\n0 1 1\noutput\n3\n4\n2\n2\n1\n'''\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('1 1 1') == '2'\nassert solution('3 0 0 1 1 1') == '4'\nassert solution('7 0 0 1 1 1 1 1') == '8'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n0 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6\n0 1 1 1 1 1\n\"\"\") == \"7\"\nassert solution(\"\"\"\n10\n0 1 1 1 1 1 1 1 1 1\n\"\"\") == \"3\"\n\n\"\"\"\n--- Day 10: Adapter Array ---\n\nPatched into your computer with a debugger, you discover a strange array. You can't seem to remember why it was there or what shape it was in.\n\nIt's an array of integers. Each integer is 0 or 1 - exactly one 0 and exactly one 1. You can think of it as a bitmask. To recreate the mask, add 1s to the left side, then add 0s to the right side.\n\nFor example, using the given array [0, 0, 0, 1, 0], you could recreate a bitmask of: 1010.\n\nRecreat the bitmask of the given array by adding 1s to the left and 0s to the right, then finding the number of contiguous 1s in the bitmask and returning that. For example, using the given array, the answer would be 2, since the array contains a subarray of size 3.\n\nGiven an array of n integers, create a mask that causes the maximum number of consecutive 1s to be in any location in the mask. How many bits would need to be flipped to fit the given array in this manner?\n\nFind the number of bits that would need to be flipped to fit the given array.\n\n\"\"\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n0 1 1') == '3'\nassert solution('5\\n1 1 1 1 2') == '3'\nassert solution('7\\n2 2 3 1 2 3') == '4'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '3\\n'\n    '0 1 1'\n) == '3'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 1, 1]) == '3'\nassert solution([10, 5, 0]) == '11'\nassert solution([1, 0, 1]) == '1'\nassert solution([0, 1, 1]) == '1'\nassert solution([1, 1, 1]) == '1'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('3\\n2 0 3') == '3'\nassert solution('3\\n1 0 3') == '2'\nassert solution('3\\n1 1 1') == '1'\nassert solution('3\\n1 2 1') == '3'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"impossible\"\n\"\"\""
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"HFDCEICJCBGI\") == \"HFDCEICJCBGI\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre In In Post In Pre'\nassert solution('BIGEDCJFAH') == 'Pre In Post In Pre'\nassert solution('BIGEDCJFAH') == 'Post In In Post In Pre'"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('HFBBIGEDCJA') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'\nassert solution('BIGEDCJFAH') == 'BIGEDCJFAH'\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre In Post In Pre'\nassert solution('BIGEDCJFAH') == 'Pre In Post In Pre'\nassert solution('BIGEDCJFAH') == 'Pre In Post In Pre'\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"HBFJHBIGEDCJA\") == \"Pre In Post In Pre\"\nassert solution(\"JHBIGEDCJABIGEDCJA\") == \"Pre In Post In In\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"HFBJCDEGIA\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"In In Pre In\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Pre In In\"\nassert solution(\"HFBJCDEGIA\") == \"Pre In In Pre\"\n\nThe middle one was expected to fail, so there was a chance that my code was not adjusting to the input and giving incorrect output.\n\nBut that was not a case in our tests."
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A B C D E F G H I J\") == \"A B C D E F G H I J\"\nassert solution(\"A B C D E F G H I J\") == \"A B C D E F G H I J\"\nassert solution(\"A B C D E F G H I J\") == \"A B C D E F G H I J\"\nassert solution(\"A B C D E F G H I J\") == \"A B C D E F G H I J\"\nassert solution(\"A B C D E F G H I J\") == \"A B C D E F G H I J\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre In In Pre In Pre'\nassert solution('BIGEDCJFAH') == 'Pre In In Post In Post In'\nassert solution('BIGEDCJFAH') == 'Pre In In Post In In'\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('HFBJCDEGIA') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'BIGEDCJFAH'\nassert solution('IGEDCJBAFH') == 'IGEDCJBAFH'\n'''\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '10'\nassert solution('3') == '1'\nassert solution('4') == '0'"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == '10'\nassert solution('2\\n2\\n5 5 5\\n5 6 6\\n4\\n') == '10'\nassert solution('2\\n2\\n5 5 5\\n3 2 3\\n4\\n') == '7'\n\"\"\"\n\nn = int(input())\n\nn_list = []\nfor i in range(n):\n    n_list.append(list(map(int, input().split())))\n\nshortest_length = 10**6\nfor n in n_list:\n    if len(n) < shortest_length:\n        shortest_length = len(n)\n\nprint(shortest_length)\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '10'\nassert solution('3') == '1'\nassert solution('10') == '1'\nassert solution('1') == '1'"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('3\\n2\\n3 1 1\\n1\\n2 1 0\\n2\\n3 2 0\\n2\\n3 1 0\\n3\\n1 2 0\\n') == '10'\nassert solution('4\\n2\\n3 1 1\\n1\\n2 1 0\\n2\\n3 2 0\\n2\\n3 1 0\\n3\\n1 2 0\\n') == '4'\nassert solution('5\\n2\\n4 1 1\\n1\\n2 1 0\\n2\\n3 2 0\\n2\\n3 1 0\\n3\\n1 2 0\\n') == '5'\nassert solution('4\\n2\\n5 1 1\\n1\\n2 1 0\\n2\\n3 2 0\\n2\\n3 1 0\\n3\\n1 2 0\\n') == '5'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n10 0\n3 1 1\n1\n4 1 0\n''') == '10'\nassert solution('''\n2\n5 0\n3 2 1 1\n1\n4 1 0\n''') == '5'\nassert solution('''\n5\n1\n1\n1\n2\n''') == '1'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '10'\nassert solution('2') == '10'\nassert solution('1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0\n''') == '10'\nassert solution('''3\n3\n10 0\n3 1 1\n1\n4 1 0\n''') == '10'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''4\n2\n1 1\n1\n2\n''') == '2'\nassert solution('''5\n3\n1 1 1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n10 0\") == \"10\"\nassert solution(\"3\\n1 1 1\") == \"5\"\nassert solution(\"3\\n4 1 0\") == \"4\""
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0 100 100\\n30 30 60 60') == '10000.00'\nassert solution('5\\n0 0 10 20\\n30 30 60 60 10\\n0 0 10 20\\n30 30 60 60 10\\n0 0 10 20') == '300000.00'\n\n\"\"\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60') == '10000.00'\n\nimport itertools"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 100 100') == '10000.00'\nassert solution('30 30 60 60') == '10000.00'\nprint(solution(input()))\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0 100 100\\n30 30 60 60') == '10000.00'\nassert solution('10\\n0 0 100 100\\n30 30 60 60\\n60 60 50 50') == '120000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60\\n') == '10000.00'\nprint(solution(*(stdin.split('\\n'))), end='')\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60') == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0 0 100 100\\n30 30 60 60') == '10000.00'\nassert solution('2\\n0 0 100 100\\n30 30 60 60\\n20 20 50 50') == '10000.00'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4') == '5'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n3 3\\n2 3\\n') == '6'\nassert solution('2\\n1 1\\n') == '0'\nassert solution('6\\n5 2\\n4 4\\n3 3\\n2 2\\n') == '9'"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    1 3\n    4 5\n    2 4\n    '''\n) == '5'\nassert solution(\n    '''\n    2 2\n    1 1\n    '''\n) == '3'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 3\n1 3\n4 5\n2 4\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n1 7\n2 5\n4 8\n3 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 2\n2 4\n5 4\n6 7\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 3\"\n    \"1 3\"\n    \"4 5\"\n    \"2 4\"\n    ) == \"5\"\n\nassert solution(\n    \"5 1\"\n    \"1 2\"\n    \"3 4\"\n    \"2 3\"\n    ) == \"4\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1 3\n4 5\n2 4\n\"\"\"\n) == \"5\"\nassert solution(\n\"\"\"\n1 10\n11 15\n12 14\n13 16\n14 13\n15 16\n16 16\n17 19\n18 18\n19 20\n20 20\n21 24\n22 23\n23 20\n24 24\n25 26\n26 25\n27 28\n28 27\n29 30\n30 30\n31 32\n32 31\n33 34\n34 33\n35 36\n36 35\n37 38\n38 37\n39 40\n40 39\n41 42\n42 41\n43 44\n43 43\n44 44\n44 44\n45 46\n46 45\n47 48\n48 47\n49 50\n49 49\n50 50\n50 50\n51 52\n52 51\n53 54\n54 53\n55 56\n56 55\n57 58\n58 57\n59 60\n59 59\n60 60\n60 60\n61 62\n62 61\n63 64\n63 63\n64 64\n64 64\n65 66\n66 65\n67 68\n67 67\n68 68\n68 68\n69 70\n69 69\n70 70\n70 70\n71 72\n72 71\n73 74\n73 73\n74 74\n74 74\n75 76\n76 75\n77 78\n77 77\n78 78\n78 78\n79 80\n79 79\n80 80\n80 80\n81 82\n81 81\n82 83\n82 83\n83 84\n83 83\n84 84\n84 84\n85 86\n85 85\n86 86\n86 86\n87 88\n87 87\n88 88\n88 88\n89 90\n89 89\n90 90\n90 90\n91 92\n91 91\n92 92\n92 92\n93 94\n93 93\n94 94\n94 94\n95 96\n95 95\n96 96\n96 96\n97 98\n97 97\n98 98\n98 98\n99 100\n99 99\n100 100\n100 100\n101 102\n101 101\n102 102\n102 102\n103 104\n103 103\n104 104\n104 104\n105 106\n105 105\n106 106\n106 106\n107 108\n107 107\n108 108\n108 108\n109 110\n109 109\n110 110\n110 110\n111 112\n111 111\n112 112\n112 112\n113 114\n113 113\n114 114\n114 114\n115 116\n115 115\n116 116\n116 116\n117 118\n117 117\n118 118\n118 118\n119 120\n119 119\n120 120\n120 120\n121 122\n121 121\n122 122\n122 122\n123 124\n123 123\n124 124\n124 124\n125 126\n125 125\n126 126\n126 126\n127 128\n127 127\n128 128\n128 128\n129 130\n129 129\n130 130\n130 130\n131 132\n131 131\n132 132\n132 132\n133 134\n133 133\n134 134\n134 134\n135 136\n135 135\n136 136\n136 136\n137 138\n137 137\n138 138\n138 138\n139 140\n139 139\n140 140\n140 140\n141 142\n141 141\n142 142\n142 142\n143 144\n143 143\n144 144\n144 144\n145 146\n145 145\n146 146\n146 146\n147 148\n147 147\n148 148\n148 148\n149 150\n149 149\n150 150\n150 150\n151 152\n151 151\n152 152\n152 152\n153 154\n153 153\n154 154\n154 154\n155 156\n155 155\n156 156\n156 156\n157 158\n157 157\n158 158\n158 158\n159 160\n159 159\n160 160\n160 160\n161 162\n161 161\n162 162\n162 162\n163 164\n163 163\n164 164\n164 164\n165 166\n165 165\n166 166\n166 166\n167 168\n167 167\n168 168\n168 168\n169 170\n169 169\n170 170\n170 170\n171 172\n171 171\n172 172\n172 172\n173 174\n173 173\n174 174\n174 174\n175 176\n175 175\n176 176\n176 176\n177 178\n177 177\n178 178\n178 178\n179 180\n179 179\n180 180\n180 180\n181 182\n181 181\n182 182\n182 182\n183 184\n183 183\n184 184\n184 184\n185 186\n185 185\n186 186\n186 186\n187 188\n187 187\n188 188\n188 188\n189 190\n189 189\n190 190\n190 190\n191 192\n191 191\n192 192\n192 192\n193 194\n193 193\n194 194\n194 194\n195 196\n195 195\n196 196\n196 196\n197 198\n197 197\n198 198\n198 198\n199 200\n199 199\n200 200\n200 200\n201 202\n201 201\n202 202\n202 202\n203 204\n203 203\n204 204\n204 204\n205 206\n205 205\n206 206\n206 206\n207 208\n207 207\n208 208\n208 208\n209 210\n209 209\n210 210\n210 210\n211 212\n211 211\n212 212\n212 212\n213 214\n213 213\n214 214\n214 214\n215 216\n215 215\n216 216\n216 216\n217 218\n217 217\n218 218\n218 218\n219 220\n219 219\n220 220\n220 220\n221 222\n221 221\n222 222\n222 222\n223 224\n223 223\n224 224\n224 224\n225 226\n225 225\n226 226\n226 226\n227 228\n227 227\n228 228\n228 228\n229 230\n229 229\n230 230\n230 230\n231 232\n231 231\n232 232\n232 232\n233 234\n233 233\n234 234\n234 234\n235 236\n235 235\n236 236\n236 236\n237 238\n237 237\n238 238\n238 238\n239 240\n239 239\n240 240\n240 240\n241 242\n241 241\n242 242\n242 242\n243 244\n243 243\n244 244\n244 244\n245 246\n245 245\n246 246\n246 246\n247 248\n247 247\n248 248\n248 248\n249 250\n249 249\n250 250\n250 250\n251 252\n251 251\n252 252\n252 252\n253 254\n253 253\n254 254\n254 254\n255 256\n255 255\n256 256\n256 256\n257 258\n257 257\n258 258\n258 258\n259 260\n259 259\n260 260\n260 260\n261 262\n261 261\n262 262\n262 262\n263 264\n263 263\n264 264\n264 264\n265 266\n265 265\n266 266\n266 266\n267 268\n267 267\n268 268\n268 268\n269 270\n269 269\n270 270\n270 270\n271 272\n271 271\n272 272\n272 272\n273 274\n273 273\n274 274\n274 274\n275 276\n275 275\n276 276\n276 276\n277 278\n277 277\n278 278\n278 278\n279 280\n279 279\n280 280\n280 280\n281 282\n281 281\n282 282\n282 282\n283 284\n283 283\n284 284\n284 284\n285 286\n285 285\n286 286\n286 286\n287 288\n287 287\n288 288\n288 288\n289 290\n289 289"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5 3\n1 3\n4 5\n2 4\n\"\"\") == '5'\nassert solution(\n\"\"\"\n5 3\n1 3\n4 5\n2 4\n\"\"\") == '5'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"14\""
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '5'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0\\n') == '2095'\nassert solution('11 13 17\\n5 2 4\\n0 0 0\\n5\\n1\\n2\\n') == '2095'\nassert solution('11 13 17\\n5 2 4\\n0 0 0\\n5\\n1\\n2\\n1\\n2\\n') == '2095'\nassert solution('11 13 17\\n5 2 4\\n0 0 0\\n5\\n1\\n2\\n3\\n4\\n') == '2095'\nassert solution('11 13 17\\n5 2 4\\n0 0 0\\n5\\n1\\n2\\n3\\n4\\n5\\n') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"11 13 17\n5 2 4\n0 0 0\"\"\") == \"2095\"\n\n\"\"\"\n--- Day 2: Password Philosophy ---\nYou arrive at the airport only to realize that you grabbed your North Pole Credentials instead of your passport. While these documents are extremely similar, North Pole Credentials aren't issued by a country and therefore aren't actually valid documentation for travel in most of the world.\n\nIt seems like you're not the only one having problems, though; a very long line has formed for the automatic passport scanners, and the delay could upset your travel itinerary.\n\nDue to some questionable network security, you realize you might be able to solve both of these problems at the same time. You need to find the two lines that cause the most trouble, and perhaps the only way to get around them is to buy more passports.\n\nThe automatic passport scanners are slow because they're having trouble detecting which passports have all required fields. The expected fields are as follows:\n\nbyr (Birth Year)\niyr (Issue Year)\neyr (Expiration Year)\nhgt (Height)\nhcl (Hair Color)\necl (Eye Color)\npid (Passport ID)\ncid (Country ID)\nPassport data is validated in batch files (your puzzle input). Each passport is represented as a sequence of key:value pairs separated by spaces or newlines. Passports are separated by blank lines.\n\nHere is an example batch file containing four passports:\n\necl:gry pid:860033327 eyr:2020 hcl:#fffffd\nbyr:1937 iyr:2017 cid:147 hgt:183cm\n\niyr:2013 ecl:amb cid:350 eyr:2023 pid:028048884\nhcl:#cfa07d byr:1929\n\nhcl:#ae17e1 iyr:2013\neyr:2024\necl:brn pid:760753108 byr:1931\nhgt:179cm\n\nhcl:#cfa07d eyr:2025 pid:166559648\niyr:2011 ecl:brn hgt:59in\nThe first passport is valid - all eight fields are present. The second passport is invalid - it is missing hgt (the Height field).\n\nThe third passport is interesting; the only missing field is cid, so it looks like data from North Pole Credentials, not a passport at all! Surely, nobody would mind if you made the system temporarily ignore missing cid fields. Treat this \"passport\" as valid.\n\nThe fourth passport is missing two fields, cid and byr. Missing cid is fine, but missing any other field is not, so this passport is invalid.\n\nAccording to the above rules, your improved system would report 2 valid passports.\n\nCount the number of valid passports - those that have all required fields. Treat cid as optional. In your batch file, how many passports are valid?\n\"\"\"\n\nimport re\n\nwith open('day_2.in') as f:\n    lines = f.read().splitlines()\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"1 0 0\\n5 2 4\\n0 0 0\") == \"7\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n10 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n10 2 4\\n0 0 0\") == \"7\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 4') == \"2095\"\nassert solution('11 13 17') == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 5 10') == '2095'\nassert solution('20 21 21') == '1309'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 13 17') == '2095'\nassert solution('3 4 5') == '7'\nassert solution('2 3 3') == '8'\nassert solution('2 3 2') == '4'\nassert solution('2 2 3') == '7'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\nprint('Solution:', solution(''))\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''11 13 17\n5 2 4\n0 0 0''') == '2095'\nassert solution('''100 80 100\n1 1 1\n0 0 0''') == '2580'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n11 13 17\n5 2 4\n0 0 0\n''') == '2095'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a = \"Gon\";\\nb = a;\\nc = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"var a = \" \"Gon\";\\n\" \"var b = a;\\n\" \"var c = `My name is ${a}`;\\n\" \"print c;\\n\" \"print `My name is ${b}`;\\n\" \"end.\\n\") == \"My name is Gon\"\nassert solution(\"var a = \" \"Gon\";\\n\" \"var b = a;\\n\" \"var c = `My name is ${a}`;\\n\" \"print c;\\n\" \"print `My name is ${b}`;\\n\" \"end.\\n\") == \"My name is Gon\"\nassert solution(\"var a = \" \"Gon\";\\n\" \"var b = a;\\n\" \"var c = `My name is ${a}`;\\n\" \"print c;\\n\" \"print `My name is ${b}`;\\n\" \"end.\\n\") == \"My name is Gon\"\nassert solution(\"var a = \" \"Gon\";\\n\" \"var b = a;\\n\" \"var c = `My name is ${a}`;\\n\" \"print c;\\n\" \"print `My name is ${b}`;\\n\" \"end.\\n\") == \"My name is Gon\"\nassert solution(\"var a = \" \"Gon\";\\n\" \"var b = a;\\n\" \"var c = `My name is ${a}`;\\n\" \"print c;\\n\" \"print `My name is ${b}`;\\n\" \"end.\\n\") == \"My name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nprint `My name is ${a}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == \"My name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    var a = \"Gon\";\n    var b = a;\n    var c = `My name is ${a}`;\n    print(c);\n    print(`My name is ${b}`);\n    end.''') == \"\"\"My name is Gon\nMy name is Gon\"\"\"\n\nassert solution('''\n    var a = \"Gon\";\n    var b = a;\n    var c = `My name is ${a}`;\n    print(c);\n    print(`My name is ${b}`);\n    end.'''.strip()) == \"\"\"My name is Gon\"\"\""
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"My name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon'"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon'\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon'\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == ''\nassert solution('2') == 'discard 2'\nassert solution('3') == 'fill 2'\nassert solution('4') == 'fill 2'\nassert solution('5') == 'fill 2'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n10\\n5\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\"\nassert solution(\"1\\n3\\n2\\n\") == \"fill 1\\ntransfer 1 1\\ntransfer 1 0\\ndiscard 0\\nfill 1\\ntransfer 0 1\\ntransfer 0 0\\n\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == 'discard 1'\nassert solution('4') == 'fill 2'\nassert solution('5') == 'discard 1'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n'\nassert solution('3\\n2 4\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n10\n20\n\"\"\") == \"\"\"\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 0\n\"\"\", \"It should be possible to add enough dry ice to fill the bottle and transfer it to the destination.\"\n\nassert solution(\"\"\"\n8\n20\n40\n50\n30\n10\n20\n\"\"\") == \"\"\"\nfill 2\ntransfer 2 1\ndiscard 1\ndiscard 1\ntransfer 1 0\ndiscard 1\ntransfer 1 0\ndiscard 1\ntransfer 1 0\ndiscard 1\ndiscard 1\n\"\"\", \"It should be possible to add enough dry ice to fill the bottle and transfer it to the destination.\"\n\nassert solution(\"\"\"\n12\n100\n40\n50\n30\n10\n20\n\"\"\") == \"\"\"\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ndiscard 1\ntransfer"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '3 3 3 2 1 1'\nassert solution('3') == '3 3 3 2 1 1 1 1 2 1 2 0 0'\nassert solution('4') == '3 3 3 2 1 1 1 1 1 2 1 2 0 0'\nassert solution('5') == '3 3 3 2 1 1 1 1 1 1 2 1 2 0 0'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\n7 8\n10\"\"\") == \"\"\"fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ntransfer 2 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n7 8\\n10\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n10\n5\n\"\"\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\"\"\".strip()\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n7 8\n10\nSample Output:\ndiscard 7\ndiscard 8\ndiscard 10\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 10\ndiscard 8\ndiscard 7\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 10\ndiscard 8\ndiscard 7\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 10\ndiscard 8\ndiscard 7\n\"\"\") == \"discard 7\\ndiscard 8\\ndiscard 10\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 10\\ndiscard 8\\ndiscard 7\""
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('6 3 3') == '6'"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6 3') == '27'\nassert solution('10 3 3') == '27'\nassert solution('5 5 5') == '0'\nassert solution('10 5 2') == '20'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"27\"\n\nIn Sample Case #2, there are 10 gnomes. All of them will be divided into groups of size 4. \nOne group has size of 1, one group has size of 2, one group has size of 3 and so on. \nThe lightning bolt does not have the ability to break any of the groups of size 4. \nThus the maximum damage you can do is $10$ damage. \n\n\"\"\"\nimport math\nn, m, k = map(int, input().split())"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 7 3\n''') == '6'\nassert solution('''\n3 2 5\n''') == '4'"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 3') == '27'\nassert solution('6 5 3') == '10'\nassert solution('10 6 5 3') == '27'\nassert solution('10 10 10 10') == '0'\nassert solution('100 100 100 100') == '0'\n\n'''\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 4 3\n''') == '27'\nassert solution('''\n10 10 5\n''') == '50'\nassert solution('''\n10 10 10\n''') == '50'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 4 3\") == \"6\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 4 3\") == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 4 3\n''') == '27'\nassert solution('''\n1 10 3\n''') == '10'\n'''\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '4'\nassert solution('''\n5 6 7 8 9 10\n3 4 1 5 7\n1 2 3 4 5\n2\n1 1 1\n2\n''') == '9'\nassert solution('''\n5 6 7 8 9 10\n3 4 1 5 7\n2\n1 3 3\n2\n1 1 1\n2\n''') == '-1'\n\n'''"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 5') == '3'\nassert solution('2 1 2') == '1'\nassert solution('2') == '-1'\nassert solution('2 4') == '-1'\nassert solution('4 3 5') == '-1'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 3 5\n2 3 1 2\n1 3 3\n2\n1 1 1\n2\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n4 5 3\n1 4 1 2 4\n1 2 3 2\n1 4 2\n1 4 3\n1 3 2\n2 4 2\n2 4 2\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4 5 3\n1 4 1 2 4\n1 2 3 2\n1 4 2\n1 4 3\n1 3 2\n2 4 2\n2 4 2\n\"\"\") == \"4\""
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3 5') == '3'\nassert solution('2 3 1 2') == '-1'\nassert solution('2') == '4'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 5\") == \"3\"\nassert solution(\"3 5 4\") == \"2\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '4'\nassert solution('''\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '3'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n1 1 1\\n2\\n') == '4\\n-1\\n4'\n\nassert solution('4 3 5\\n1 2 2 2\\n1\\n1 2 2 2\\n1 3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n2\\n') == '3\\n4\\n5'\n\"\"\""
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 5') == '4'\nassert solution('2 3 1 2') == '3'\nassert solution('2') == '-1'"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 5') == '3'\nassert solution('4 3 5') == '-1'\nassert solution('4 3 5') == '4'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1''') == '4', 'Wrong result'\nassert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '-1', 'Wrong result'\nassert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n1 1 1''') == '4', 'Wrong result'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1000 1000\") == \"533.3333333333\"\nassert solution(\"5 8 7\") == \"720.0\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '0.999999999'\nassert solution('1000000 100000000') == '200000000'\nassert solution('1000 2 1000000000') == '23.00000000'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1000000 100 1000') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 3000 1000') == \"533.3333333333\"\nassert solution('1000000 1000 3000 1000') == \"533.3333333333\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('100 1000 2000') == '891.66666667'\nassert solution('10 10 10') == '10'\nassert solution('1 1 1') == '1'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 1') == '533.3333333333'\nassert solution('4 3 1') == '532.3333333333'\nassert solution('4 2 1') == '332.3333333333'\nassert solution('1000 3000 1000') == '533.3333333333'\nassert solution('10000 100000 100000') == '99999.99999999999'\n\"\"\"\n\n\"\"\"\nA method to find the sum of the squares of the first n natural numbers (n = 1 to N)"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1000 3000 1000\n''') == '533.3333333333'\nassert solution('''\n100 1000 100\n''') == '101.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1000 3000 1000\n''') == '533.3333333333', solution.__doc__\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1000 1000\\n') == '533.3333333333'\nassert solution('1 1 1\\n') == '0'\nassert solution('1 1 1\\n') == '0'\nassert solution('1 1 1\\n') == '0'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"2.66666667\"\nassert solution(\"5 2 3\") == \"3.33333333\"\nassert solution(\"5 6 3\") == \"3.33333333\"\nassert solution(\"1000000 100000000\") == \"75000000\""
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '0.00'\nassert solution('2\\n0\\n0\\n0\\n') == '11.11'\nassert solution('5\\n0\\n0\\n0\\n0\\n0\\n0\\n') == '13.13'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 0\n10 0\n10 10\n''') == \"14.14\"\nassert solution('''\n2 0\n10 0\n10 10\n''') == \"14.14\"\nassert solution('''\n1 0\n1 0\n''') == \"14.14\"\nassert solution('''\n4 0\n0 0\n0 0\n''') == \"0.14\"\nassert solution('''\n1 0\n10 0\n10 10\n''') == \"0.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 0\n10 0\n10 10\n\"\"\") == \"14.14\"\nassert solution(\"\"\"\n3 0\n10 0\n10 10\n\"\"\") == \"10.00\"\nassert solution(\"\"\"\n4 0\n10 0\n10 10\n10 0\n10 10\n\"\"\") == \"10.00\"\nassert solution(\"\"\"\n8 0\n10 0\n10 10\n10 0\n10 10\n10 0\n10 10\n\"\"\") == \"10.00\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"14.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 0') == '14.14'\nassert solution('2 0\\n10 0\\n10 10') == '15.84'\n'''\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '7.14'\nassert solution('10 0') == '9.90'\nassert solution('10 10') == '8.76'\nprint('\"Run\" is the best way to get your ass to work!')\n'''\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 0') == '14.14'\nassert solution('3 1') == '17.42'\nassert solution('4 5') == '26.07'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n10 0\\n10 10') == \"14.14\"\nassert solution('1\\n0 10\\n10 10') == \"8.57\"\nassert solution('2\\n0 0\\n0 0') == \"4.00\""
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == '14.14'\nassert solution('''2 0\n10 0\n10 10\nSample Input 2:\n3 0\n10 10\n10 10\nSample Output 2:\n11.11''') == '11.11'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '123458 1'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '1 0\\n2 1\\n0 0\\n0 1\\n1 0\\n'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n2 3 3 3\\n3 2\\n') == '2 3\\n'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\") == r\"\"\"123457 0\n0 2\n123458 1\n\"\"\".strip()\n\nimport sys\nfrom typing import List"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '123456 0\\n0 2\\n123458 1\\n123456 0'\n\n\"\"\""
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n\"\"\") == \"\"\"123457 0\n0 2\n\"\"\"[:-1]\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123456') == '123457 0\\n0 2'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\") == \"123457 0\\n0 2\\n123458 1\\n\"\nassert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\") == \"123457 0\\n0 2\\n123458 1\\n\"\n\"\"\")"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '2 1\\n1 0\\n2 1'\n\"\"\"\n\n\"\"\"\n--note--\n-when multiple numbers are divided, what would be the result?\n-how many are returned?\n\"\"\""
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n\"\"\") == \"\"\"123457 0\n0 2\n\"\"\".strip()\n\nassert solution(\"\"\"\n10 10\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n123456\n\"\"\") == \"\"\"123457 0\n0 2\n123456 1\n0 2\n\"\"\".strip()\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\\\n5\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\n\nassert solution(\"\"\"\\\n10\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\n\nassert solution(\"\"\"\\\n1\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\\\n3\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\n\nassert solution(\"\"\"\\\n3\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3 5 10 2 5\n2 4 5 1 3\n''') == '90'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\nassert solution('10\\n3 5 10 2 5\\n2 4 5 1 3\\n10\\n3 5 10 2 5\\n2 4 5 1 3') == '120'"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\nassert solution('3\\n2 4 5 1 3\\n2 4 5 1 3\\n1 2 3 4') == '97'\nassert solution('6\\n1 2 3 4 5 6\\n4 5 6 7 8 9 10\\n3 4 5 6 7 8\\n5 3 2 6 7 8 9 10\\n4 1 2 3 6 7 8 9\\n5 2 4 3 6 7 8 9 10\\n6 1 3 5 2 4 7 8 9 10\\n5 1 2 3 4 6 7 8 9 10\\n3 1 5 2 4 6 7 8 9 10') == '80'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n3 4 5 6 7 8 9 10\\n5 1 2 3 4 6 7 8 9 10\\n6 1 3 5 2 4 7 8 9 10\\n9 1 2 3 4 5 6 7 8 10\\n8 1 2 3 4 5 6 7 9 10\\n7 1 2 3 4 5 6 7 8 9 10\\n6 1 3 5 2 4 7 8 9 10\\n5 1 2 3 4 6 7 8 9 10\\n4 1 2 3 5 6 7 8 9 10\\n3 1 2 4 5 6 7 8 9 10\\n2 1 2 4 5 6 7 8 9 10\\n1 1 2 3 4 5 6 7 8 9 10') == '51'\nassert solution('15\\n1 2 3 4 5 6 7 8 9 10\\n3 4 5 6 7 8 9 10\\n5 1 2 3 4 6 7 8 9 10\\n6 1 3 5 2 4 7 8 9 10\\n9 1 2 3 4 5 6 7 8 10\\n8 1 2 3 4 5 6 7 9 10\\n7 1 2 3 4 5 6 7 8 9 10\\n6 1 3 5 2 4 7 8 9 10\\n5 1 2 3 4 6 7 8 9 10\\n4 1 2 3 5 6 7 8 9 10\\n3 1 2 4 5 6 7 8 9 10\\n2 1 2 4 5 6 7 8 9 10\\n1 1 2 3 4 5 6 7 8 9 10') == '12'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3\\n1 2\\n2 3\") == \"90\"\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n1 3\") == \"90\"\n\nprint(solution(*[line.split() for line in stdin]))\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '90'\nassert solution('10') == '90'\nassert solution('20') == '179'\nassert solution('12345') == '1794'\nassert solution('1234567') == '1793'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\nassert solution('1\\n3 5 10 1 2 3\\n3 5 4 1 2') == '60'\nassert solution('3\\n1 3 1\\n1 1 1\\n1 1 1') == '0'\nassert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n3 5 4 1 2\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n3 5 4 1 2') == '90'\nassert solution('10\\n1 2 3 5 6 7 8 9 10\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9\\n1 2 3 5 6 7 8 9') == '168'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\n\"\"\"\nimport math"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\n\nassert solution(\"\"\"\n10\n1 1 1 2 2 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"18\"\n\nassert solution(\"\"\"\n10\n2 2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n10\n1 1 1 1 1 1 1 1 1 1\n2 1 1 1 1 1 1 1 1 2\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\n\nassert solution(\"\"\"\n10\n10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10\n\"\"\") == \"2700\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '6.0'\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 10\") == \"6.000000\"\nassert solution(\"5 10\") == \"8.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"6.000000\"\nassert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 5\n\"\"\") == \"7.000000\"\nassert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 5\n\"\"\") == \"6.000000\"\n\n\"\"\"\nIdea:\nThe first part is to find the max width and height of buildings, then find the maximum distance between buildings using that.\n\nThe maximum distance is the distance between the leftmost building and the maximum height.\n\"\"\""
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10') == '6.000000'\nassert solution('4 2 4') == '9.5'\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == stdout_string"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 6\n0 4 3\n0 8 2\n''') == '6.000000', 'First'\nassert solution('''\n1 2 1\n0 4 1\n0 8 2\n''') == '4.8333333', 'Second'\n''')\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2\n''') == '6.000000'\nassert solution('''3 10\n1 1 2\n0 0 0\n0 0 0\n''') == '2.000000'\nassert solution('''3 10\n1 2 6\n0 4 3\n0 8 2\n''') == '6.000000'\nassert solution('''3 10\n1 2 6\n0 4 3\n0 8 2\n''') == '6.000000'\nassert solution('''3 10\n1 2 6\n0 4 3\n0 8 2\n''') == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"6.000000\"\n\n\"\"\""
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n0\n1\n0\n1\n1\n1\n2\n3\n''') == '6.000000'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n0 0\n0 0\n1.\n..\n0\n\"\"\") == \"\"\"\n1.\n..\n1.\n\"\"\", \"\"\"\n9.\n..\n7.\n\"\"\")\n\nassert solution(\"\"\"\n0 0\n0 0\n1.\n..\n0\n\"\"\") == \"\"\"\n1.\n..\n1.\n\"\"\"\n\nassert solution(\"\"\"\n0 0\n0 0\n1.\n..\n0\n\"\"\") == \"\"\"\n1.\n..\n1.\n\"\"\"\n\nassert solution(\"\"\"\n0 0\n0 0\n1.\n..\n0\n\"\"\") == \"\"\"\n1.\n..\n1.\n\"\"\"\n\nassert solution(\"\"\"\n0 0\n0 0\n1.\n..\n0\n\"\"\") == \"\"\"\n1.\n..\n1.\n\"\"\""
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\") == \"1.\\n..\\n1.\"\nassert solution(\"5\\n0 0\\n0 0\\n1.\\n.\\n.\\n4.\") == \".\\n.\\n.\\n..\\n..\\n1.\\n\"\nassert solution(\"10\\n0 0\\n0 0\\n1.\\n.\\n.\\n9.\\n8.\\n7.\\n6.\\n5.\\n4.\\n3.\\n2.\\n1.\\n.\\n0.\\n\") == \".\\n.\\n.\\n..\\n..\\n1.\\n\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0.\n0.\n1.\n.\n0\nSample Input:\n10\n0.\n0.\n1.\n0.\n0.\n.\n.\n0.\n0.\n0.\n0.\n1.\n.\n.\n.\n.\n.\n.\nSample Output:\n1.\n0.\n0.\n0.\n0.\n.\n.\n.\n.\n0.\n0.\n.\n0.\n0.\n.\n.\n0.\n0.\n0.\n0.\n0.\n.\n.\n.\n0.\n0.\n.\n0.\n0.\n.\n0.\n0.\n0.\n0.\n.\n0.\n0.\n0.\n0.\n0.\n0.\n.\n0.\n0.\n0.\n.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n.\n.\n.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n.\n0.\n0.\n0.\n0.\n0.\n.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0.\n0."
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0 0\\n0 0\\n1.') == '1\\n0 0\\n0 0\\n1.'\n\"\"\"\n\nimport math\nimport queue"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2\\n1.0\\n1.1\\n2.0\\n0.0\\n0.0\\n1.0\\n1.0\\n1.0\\n0.0\\n0.0\\n'\n) == '1.1\\n1.1\\n1.0\\n1.0\\n0.0\\n0.0\\n1.0\\n1.0\\n1.0\\n0.0\\n0.0\\n'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2\n0 0\n0 0\n1.\n..\n0\nSample Output:\n1.\n..\n1.\n\"\"\")) == \"1.1.1.1..\""
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.') == '1.'\nassert solution('10\\n0 0\\n0 0\\n1.\\n.\\n1.\\n1.\\n1.\\n1.\\n.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n0 0\n0 0\n1.\n..\n0\nSample Output:\n2\n..\n3.\n\"\"\") == \"2.\\n.\\n3.\\n\"\n\nassert solution(\"\"\"\n3\n0 0\n0 0\n2.\n..\n0\nSample Output:\n3.\n.\n3.\n\"\"\") == \"3.\\n.\\n3.\\n\"\n\nassert solution(\"\"\"\n4\n0 0\n0 0\n1.\n..\n0\nSample Output:\n3.\n.\n4.\n\"\"\") == \"3.\\n.\\n4.\\n\"\n\nassert solution(\"\"\"\n5\n0 0\n0 0\n2.\n..\n0\nSample Output:\n4.\n.\n4.\n\"\"\") == \"4.\\n.\\n4.\\n\"\n\nassert solution(\"\"\"\n6\n0 0\n0 0\n1.\n..\n0\nSample Output:\n5.\n.\n5.\n\"\"\") == \"5.\\n.\\n5.\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1.\\n1.\\n', 'Should be 1.'\nassert solution('0') == '1.\\n1.\\n', 'Should be 1.'\nassert solution('1 1') == '1.\\n1.\\n1.\\n', 'Should be 1.'\nassert solution('0 0\\n0 0\\n1 1') == '1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n', 'Should be 1.'\nassert solution('0 0\\n0 0\\n1 1\\n1 1') == '1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n', 'Should be 1.'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\") == \"1.\\n..\\n\"\n\"\"\"\nfrom typing import List\nimport collections\nimport sys\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, m, n2, m2, n3, m3 = map(int, stdin.split())\n        if n == 1 and m == 1:\n            return \"1.\\n1.\\n\"\n        grid = [[0 for i in range(n)] for j in range(n)]\n        for i in range(n):\n            for j in range(m):\n                grid[i][j] = 2\n        def in_range(x, y):\n            return x >= 0 and x < n and y >= 0 and y < m\n        dirs = [[1, 0], [0, 1], [-1, 0], [0, -1]]\n        dir_codes = [[1, 0], [0, 1], [-1, 0], [0, -1]]\n        def get_dir(i):\n            return dirs[i % 4]\n        def add_to_grid(x, y, grid, dir, moves, attacked, attack_upgrades, armour_upgrades):\n            # check if we are out of bounds\n            if not in_range(x, y):\n                return\n            # do not move if we are attacked or attacked by opponent\n            if grid[x][y] == 1 or grid[x][y] == 2:\n                return\n            # if we are attacked, attack as much as possible\n            if grid[x][y] == 3:\n                # move to max damage\n                damage = max(attack_upgrades[dir])\n                for dx, dy in dirs:\n                    new_x, new_y = x + dx, y + dy\n                    if in_range(new_x, new_y) and grid[new_x][new_y] == 0:\n                        moves[dir] += 1\n                        grid[new_x][new_y] = 3\n                        if attack_upgrades[dir] == damage:\n                            return\n                # if the attack damage is greater than the armour, then attack with less than the armour\n                damage = min(damage, attack_upgrades[dir])\n                for dx, dy in dirs:\n                    new_x, new_y = x + dx, y + dy\n                    if in_range(new_x, new_y) and grid[new_x][new_y] == 0:\n                        moves[dir] += 1\n                        grid[new_x][new_y] = 3\n                        if attack_upgrades[dir] == damage:\n                            return\n                # if the attack damage is greater than the armour, then attack with less than the armour\n                damage = min(damage, attack_upgrades[dir])\n                for dx, dy in dirs:\n                    new_x, new_y = x + dx, y + dy\n                    if in_range(new_x, new_y) and grid[new_x][new_y] == 0:\n                        moves[dir] += 1\n                        grid[new_x][new_y] = 3\n                        if attack_upgrades[dir] == damage:\n                            return\n            # if the attack upgrades are greater than 0, then attack\n            if attack_upgrades[dir] > 0:\n                attack_upgrades[dir] -= 1\n                grid[x][y] = 3\n                # move\n                for dx, dy in dirs:\n                    new_x, new_y = x + dx, y + dy\n                    if in_range(new_x, new_y) and grid[new_x][new_y] == 0:\n                        moves[dir] += 1\n                        grid[new_x][new_y] = 3\n                        return\n            # if the attack upgrades are greater than 0, then attack\n            if attack_upgrades[dir] > 0:\n                attack_upgrades[dir] -= 1\n                grid[x][y] = 3\n                # move\n                for dx, dy in dirs:\n                    new_x, new_y = x + dx, y + dy\n                    if in_range(new_x, new_y) and grid[new_x][new_y] == 0:\n                        moves[dir] += 1\n                        grid[new_x][new_y] = 3\n                        return\n            # if the attack upgrades are greater than 0, then attack\n            if attack_upgrades[dir] > 0:\n                attack_upgrades[dir] -= 1\n                grid[x][y] = 3"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\na\nbc\nabc\n2\n1 abca\n2 1\n2 3\n''') == '1'\nassert solution('''4\nabc\nabc\nc\n''') == '2'\n\nimport sys\nn = int(sys.stdin.readline())\nlines = []\nfor i in range(n):\n    lines.append(sys.stdin.readline().strip())\nq = int(sys.stdin.readline())"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\n\nprint('coding complete? Click \"Check\" for more tests.')\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"a\") == \"1\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n\"\"\") == \"2\"\n\"\"\"\nUse this space to test your solution and see how it does. When you are finished editing your code, use the space provided for printing the solution as your own function.\n\nWhen you run your code, you will not be able to test your code further, so your code will not be graded.\n\nUse this space as a playground for your code, before making changes to it.\n\"\"\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\nabc\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"a\") == \"1\"\nassert solution(\"bc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"aabc\") == \"1\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 1\"\n\"\"\""
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nabc\\nabc\\nabc') == '1\\n1\\ndef\\n'\nassert solution('1\\nabc\\nabc\\nabc') == '1\\n1\\n1\\n'\nassert solution('2\\nabc\\nabc\\nabc') == '1\\n1\\ndef\\n'\nassert solution('3\\nabc\\nabc\\nabc') == '1\\n1\\n1\\n'\nassert solution('3\\nabc\\nabc\\nabc') == '1\\n1\\n1\\n'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1 1 1\n''') == 'YES', 'easy'\nassert solution('''\n1 2 1 1\n''') == 'NO', 'easy'\nassert solution('''\n1 2 2 1\n''') == 'NO', 'easy'\nassert solution('''\n1 1 1 1\n''') == 'YES', 'easy'\n'''\n'''"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('1 1 2 1') == 'NO'\nassert solution('1 1 2 2') == 'YES'\nassert solution('1 1 2 3') == 'NO'\nassert solution('2 1 3 3') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1 1 1\n''') == 'YES'\nassert solution('''1 1 1 1\n1 1 1 1\n''') == 'YES'\nassert solution('''1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == 'NO'\nassert solution('''1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == 'NO'\nassert solution('''1 1 1 1\n2 2 2 2\n1 1 1 1\n1 1 1 1\n''') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 5 4 3\n''') == 'YES'\n\n'''\nIn above input, John wants to transport his possessions from one bank of Lake Michigan to the other. His possessions consist of $W$ wolves, $S$ sheep, and $C$ cabbages. The transportation will be carried out using a boat that can hold up to $K$ of these items at the same time. During each step, John can take some items from one bank and transfer them to the other bank. Unfortunately, when left unsupervised, wolves will eat sheep and sheep will eat cabbages. John doesn\u2019t want to lose his possessions, so he has to devise a scheme such that this doesn\u2019t happen. With John present, any combination of items is allowed (both on the bank and in the boat). This is also true during the loading process. Since John isn\u2019t very good at solving problems like this, he asks you to help him.\n\n-----Input-----\nInput contains a single line with four integers: $W$, $S$, $C$, $K$. The input satisfies the following constraints:\\[ 0 \\leq W, S, C, K \\leq 10^6, \\]\\[ 1 \\leq max(W, S, C). \\]\n\n-----Output-----\nIf it\u2019s possible to perform the transportation without the loss of items, print YES, otherwise print NO.\n\n-----Examples-----\nSample Input:\n1 1 1 1\nSample Output:\nYES\n'''"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 2 1 2\") == \"NO\"\nassert solution(\"1 2 2 1\") == \"NO\"\nassert solution(\"1 1 2 2\") == \"NO\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '10.5'\n\"\"\"\nfrom functools import reduce\nimport operator"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 96') == '80.567500000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 96') == '80.5696'\nassert solution('2 4.8 3.9 4.0') == '1.1075'\nassert solution('3 1.2 1.3 1.1') == '1.0720'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 96\") == \"80.5696000000\"\nassert solution(\"20 10 2.0\") == \"32.709375\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 100\n-1.5 -5.5 6.5\n-3.5 -2.5 -4.5\n-1.5 -1.5 -1.5\n-2.5 -3.5 2.5\n-1.5 -2.5 3.5\n-3.5 -1.5 1.5\n''') == '80.5696000000'\n\nassert solution('''\n3 10\n-1.5 1.5 1.5\n-2.5 2.5 -1.5\n-1.5 1.5 1.5\n''') == '0.0'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(inp1) == out1\nassert solution(inp2) == out2\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 96') == '80.5696000000'\nassert solution('-0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000') == '80.5696000000'\n\n'''\n\n\nimport math\n\nfor i in range(int(input())):\n    stdin = input().split()\n    a = float(stdin[0])\n    b = float(stdin[1])\n    c = float(stdin[2])\n\n    m = 0\n    for j in range(int(stdin[0])):\n        m += (b * j + c) * (2 ** j)\n    \n    print(math.ceil(m / (a * 1.0)))\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 96\") == \"80.5696000000\"\n\"\"\""
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == \"80.5696000000\"\nassert solution('5 20\\n-0.4983 0.4983 0.4983 0.4983\\n-0.4983 0.4983 0.4983 0.4983\\n-0.4983 0.4983 0.4983 0.4983\\n-0.4983 0.4983 0.4983 0.4983\\n-0.4983 0.4983 0.4983 0.4983') == \"92.5\"\nassert solution('3 30\\n-0.3549 0.3549 0.3549 0.3549\\n-0.3549 0.3549 0.3549 0.3549\\n-0.3549 0.3549 0.3549 0.3549') == \"7.5\"\nassert solution('8 10\\n-0.9878 0.9878 0.9878 0.9878\\n-0.9878 0.9878 0.9878 0.9878\\n-0.9878 0.9878 0.9878 0.9878\\n-0.9878 0.9878 0.9878 0.9878\\n-0.9878 0.9878 0.9878 0.9878\\n-0.9878 0.9878 0.9878 0.9878') == \"0.9878\"\nassert solution('10 40\\n-0.5637 0.5637 0.5637 0.5637\\n-0.5637 0.5637 0.5637 0.5637\\n-0.5637 0.5637 0.5637 0.5637\\n-0.5637 0.5637 0.5637 0.5637\\n-0.5637 0.5637 0.5637 0.5637\\n-0.5637 0.5637 0.5637 0.5637') == \"0.5637\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"5 0 0 1 1 1 0 0 1\") == \"3\"\nassert solution(\"2 0 0 1 1 1 0 0 1\") == \"1\"\nassert solution(\"6 0 0 1 1 1 0 0 1\") == \"3\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 0 0 1 1 1 0 0 1\n''') == '2'\nassert solution('''\n2 0 0 1 1 1 0 0 1\n''') == '1'\nassert solution('''\n5 0 0 1 1 1 0 0 1\n''') == '3'\nassert solution('''\n10 0 0 1 1 1 0 0 1 1 1 0 0 1\n''') == '3'\nassert solution('''\n100 0 0 1 1 1 0 0 1 1 1 0 0 1\n''') == '3'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 0 3 1 0 1\") == \"3\"\nassert solution(\"4 4 3 5 5 6 1 2\") == \"5\"\nassert solution(\"8 2 4 1 0 2 1 0 1\") == \"2\"\nassert solution(\"8 8 4 1 0 2 1 0 1\") == \"3\"\nassert solution(\"6 7 6 7 7\") == \"6\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4 0 0 1 1 1 0 0 1\nSample Input:\n4 0 0 1 1 1 0 0 1\nSample Output:\n2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"1 0 0 1 1 1 0 0 1\") == \"4\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 0 0 1 1 1 0 0 1\n''') == '2'\nassert solution('''\n5 0 0 0 1 1 1 0 0 1\n''') == '1'\n''')"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '4'\nassert solution('6') == '3'\nassert solution('7') == '5'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 0 0 1 1 1 0 0 1\n''') == '2'\nassert solution('''\n5 5 5 5 5 5 5 5 5\n''') == '10'\n''')\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == \"2\"\nassert solution('10 0 0 5 1 1 1 0 0 1 0 0 0 1') == \"5\"\nassert solution('20 0 0 5 1 1 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1') == \"3\"\nassert solution('10000 0 0 5 1 1 1 0 0 1 0 0 0 0 1 0 0 0 0 0 1') == \"2\"\nassert solution('3 0 0 1 1 1 0 0 0 0') == \"1\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == \"1400\"\nassert solution(\"10 9 10\\n-20 -20 20\\n1 1 0\\n1 0 0\\n1 0 0\\n2 1 0\\n2 0 0\\n2 0 0\\n2 0 0\\n1 0 0\\n1 0 0\\n1 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n3 1 0\\n3 0 0\\n3 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n3 0 0\\n3 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n1 0 0\\n1 0 0\\n1 0 0\\n1 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n1 0 0\\n1 0 0\\n1 0 0\\n1 0 0\\n1 0 0\\n1 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2 2 3\n0 0 400\n1000 0 400\n2000 0 400\"\"\") == \"1400\"\nassert solution(\"\"\"3 3 3\n0 0 400\n1000 0 400\n2000 0 400\"\"\") == \"impossible\"\nassert solution(\"\"\"3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\nSample Output:\nimpossible\"\"\") == \"impossible\"\nassert solution(\"\"\"3 1 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\nSample Output:\nimpossible\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\") == \"1400\"\nassert solution(\"0 0 400\") == \"impossible\"\nassert solution(\"1000 0 400\") == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n''') == '1400'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '3 2 3\\n' +\n    '0 0 400\\n' +\n    '1000 0 400\\n' +\n    '2000 0 400\\n' +\n    '300 0 150\\n' +\n    '1300 0 150\\n'\n) == '1400'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\"\"\") == \"1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n3000 0 150\\n1300 0 150\\n\") == \"1400\"\nassert solution(\"5 3 1\\n0 0 400\\n1500 0 400\\n2000 0 400\\n3000 0 150\\n4000 0 150\\n1300 0 150\\n\") == \"impossible\"\nassert solution(\"5 3 1\\n0 0 400\\n1500 0 400\\n2000 0 400\\n3000 0 150\\n3000 0 150\\n1300 0 150\\n\") == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n''') == '1400'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n\"\"\") == \"1400\"\nassert solution(\"\"\"\n6 1 2\n0 0 100\n3000 0 100\n4000 0 100\n500 0 100\n2500 0 100\n1500 0 100\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\nSample Output:\nimpossible\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london''') == '3907'\n\nprint(solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london'''))\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 15') == '3907'\nassert solution('10 15') == '3907'\nassert solution('10 20') == '3267'\n\"\"\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 15') == '3907'\nassert solution('10 25') == '3936'\nassert solution('10 45') == '3911'\nassert solution('10 75') == '3918'\nassert solution('10 115') == '3944'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 15') == '3907'\nassert solution('7 12') == '1615'\n\"\"\""
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173''') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 15') == '3907'\n\n'''"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 15') == '3907'\nassert solution('15 10') == '3907'\nassert solution('15 5') == '3102'\nassert solution('10 5') == '1390'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 15') == '3907'\nassert solution('10 20') == '1251'\nassert solution('10 50') == '3450'\nassert solution('1 2') == '2'\nassert solution('10 1') == '1'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 15\") == \"3907\"\nassert solution(\"10 20\") == \"3907\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam''') == '3907':\n    print('Success')\nelse:\n    print('Failed')"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '1'\nassert solution('1 2') == '1'\nassert solution('2 1') == '2'\nassert solution('4 1') == '2'\nassert solution('5 1') == '1'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == \"2\"\nassert solution('''\n3 3\n1 1 1\n2 2\n1 2\n''') == \"1\"\nassert solution('''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == \"1\"\nassert solution('''\n3 3\n1 1 1\n2 2\n1 2\n''') == \"1\"\nassert solution('''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == \"2\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '2'\nassert solution('5 5') == '1'\nassert solution('3 5') == '1'\nassert solution('4 5') == '1'\nassert solution('10 10') == '9'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"1\""
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"1\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"3 1 3 4 2\") == \"2\"\nassert solution(\"0 5\") == \"0\"\nassert solution(\"0 9\") == \"0\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n3 1 3 4 2') == '1'\nassert solution('6 3\\n2 1 1 3 2 2\\n4 1\\n3 1\\n3 3\\n4 2\\n4 3\\n2 2\\n6 2') == '0'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\"\nassert solution(\"10 5\\n0 5\\n2 1\\n2 3\\n3 2\\n4 3\\n4 5\\n6 4\\n6 7\\n7 4\\n7 8\\n8 7\\n8 9\\n9 8\\n9 10\\n10 9\\n10 11\\n11 10\\n11 12\\n12 11\\n12 13\\n13 12\\n13 14\\n14 13\\n14 15\\n15 14\\n15 16\\n16 15\\n16 17\\n17 16\\n17 18\\n18 17\\n18 19\\n19 18\\n19 20\\n20 19\\n20 21\\n21 20\\n21 22\\n22 21\\n22 23\\n23 22\\n23 24\\n24 23\\n24 25\\n25 24\\n25 26\\n26 25\\n26 27\\n27 26\\n27 28\\n28 27\\n28 29\\n29 28\\n29 30\\n30 29\\n30 31\\n31 30\\n31 32\\n32 31\\n32 33\\n33 32\\n33 34\\n34 33\\n34 35\\n35 34\\n35 36\\n36 35\\n36 37\\n37 36\\n37 38\\n38 37\\n38 39\\n39 38\\n39 40\\n40 39\\n40 41\\n41 40\\n41 42\\n42 41\\n42 43\\n43 42\\n43 44\\n44 43\\n44 45\\n45 44\\n45 46\\n46 45\\n46 47\\n47 46\\n47 48\\n48 47\\n48 49\\n49 48\\n49 50\\n50 49\\n50 51\\n51 50\\n51 52\\n52 51\\n52 53\\n53 52\\n53 54\\n54 53\\n54 55\\n55 54\\n55 56\\n56 55\\n56 57\\n57 56\\n57 58\\n58 57\\n58 59\\n59 58\\n59 60\\n60 59\\n60 61\\n61 60\\n61 62\\n62 61\\n62 63\\n63 62\\n63 64\\n64 63\\n64 65\\n65 64\\n65 66\\n66 65\\n66 67\\n67 66\\n67 68\\n68 67\\n68 69\\n69 68\\n69 70\\n70 69\\n70 71\\n71 70\\n71 72\\n72 71\\n72 73\\n73 72\\n73 74\\n74 73\\n74 75\\n75 74\\n75 76\\n76 75\\n76 77\\n77 76\\n77 78\\n78 77\\n78 79\\n79 78\\n79 80\\n80 79\\n80 81\\n81 80\\n81 82\\n82 81\\n82 83\\n83 82\\n83 84\\n84 83\\n84 85\\n85 84\\n85 86\\n86 85\\n86 87\\n87 86\\n87 88\\n88 87\\n88 89\\n89 88\\n89 90\\n90 89\\n90 91\\n91 90\\n91 92\\n92 91\\n92 93\\n93 92\\n93 94\\n94 93\\n94 95\\n95 94\\n95 96\\n96 95\\n96 97\\n97 96\\n97 98\\n98 97\\n98 99\\n99 98\\n99 100\\n100 99\\n100 101\\n101 100\\n101 102\\n102 101\\n102 103\\n103 102\\n103 104\\n104 103\\n104 105\\n105 104\\n105 106\\n106 105\\n106 107\\n107 106\\n107 108\\n108 107\\n108 109\\n109 108\\n109 110\\n110 109\\n110 111\\n111 110\\n111 112\\n112 111\\n112 113\\n113 112\\n113 114\\n114 113\\n114 115\\n115 114\\n115 116\\n116 115\\n116 117\\n117 116\\n117 118\\n118 117\\n118 119\\n119 118\\n119 120\\n120 119\\n120 121\\n121 120\\n121 122\\n122 121\\n122 123\\n123 122\\n123 124\\n124 123\\n124 125\\n125 124\\n125 126\\n126 125\\n126 127\\n127 126\\n127 128\\n128 127\\n128 129\\n129 128\\n129 130\\n130 129\\n130 131\\n131 130\\n131 132\\n132 131\\n132 133\\n133 132\\n133 134\\n134 133\\n134 135\\n135 134\\n135 136\\n136 135\\n136 137\\n137 136\\n137 138\\n138 137\\n138 139\\n139 138\\n139 140\\n140 139\\n140 141\\n141 140\\n141 142\\n142 141\\n142 143\\n143 142\\n143 144\\n144 143\\n144 145\\n145 144\\n145 146\\n146 145\\n146 147\\n147 146\\n147 148\\n148 147\\n148 149\\n149 148\\n149 150\\n150 149\\n150 151\\n151 150\\n151 152\\n152 151\\n152 153\\n153 152\\n153 154\\n154 153\\n154 155\\n155 154\\n155 156\\n156 155\\n156 157\\n157 156\\n157 158\\n158 157\\n158 159\\n159 158\\n159 160\\n160 159\\n160 161\\n161 160\\n161 162\\n162 161\\n162 163\\n163 162\\n163 164\\n164 163\\n164 165\\n165 164\\n165 166\\n166 165\\n166 167\\n167 166\\n167 168\\n168 167\\n168 169\\n169 168\\n169 170\\n170 169\\n170 171\\n171 170\\n171 172\\n172 171\\n172 173\\n173 172\\n173 174\\n174 173\\n174 175\\n175 174\\n175 176\\n176 175\\n176 177\\n177 176\\n177 178\\n178 177\\n178 179\\n179 178\\n179 180\\n180 179\\n180 181\\n181 180\\n181 182\\n182 181\\n182 183\\n183"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n3 1 3 4 2') == '2'\nassert solution('10 1\\n10 10\\n10 20\\n0 10\\n0 8\\n0 7\\n1 10\\n1 10\\n1 10\\n2 10\\n2 10\\n4 10\\n5 10\\n') == '4'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n2\\n1\\n2\\n1\"\n\n-------SOLUTION-------\nx = int(stdin)\nfor _ in range(x):\n    l = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    if l % 2 == 0:\n        s = sum(a[:l//2])\n        print(s)\n    else:\n        d = a[(l//2 + 1) % l]\n        s = sum(a[:l//2])\n        print(s+d)\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n') == '2'\n\nassert solution('5 10\\n3 1 4 5 2\\n0 5\\n0 9\\n4 5\\n2 1\\n') == '1'\n\nassert solution('5 10\\n3 1 5 5 4\\n0 5\\n0 9\\n4 5\\n2 1\\n') == '2'\n\nassert solution('5 10\\n3 1 6 6 4\\n0 5\\n0 9\\n4 5\\n2 1\\n') == '1'\n\nassert solution('5 10\\n3 1 7 7 4\\n0 5\\n0 9\\n4 5\\n2 1\\n') == '1'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 5\n01001\n11100\n10111\n''') == '00010'\nassert solution('''\n3 5\n11111\n01100\n00011\n''') == '00010'\nassert solution('''\n5 3\n11111\n01100\n00011\n10111\n''') == '01110'\nassert solution('''\n5 5\n01100\n11100\n10011\n11001\n00011\n''') == '01100'\nassert solution('''\n5 5\n11111\n01100\n00011\n10111\n''') == '11111'\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5\n01001\n11100\n10111\n''') == '00010'\n\"\"\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1\\n1011\\n11100\\n01111\\n') == '00011'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 5\n01001\n11100\n10111\n\"\"\") == \"00010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5\n01001\n11100\n10111\n''') == '00010'\nassert solution('''\n4 6\n10111\n11000\n10111\n11100\n''') == '01100'\nassert solution('''\n5 4\n11111\n11000\n11000\n11000\n''') == '11000'\nassert solution('''\n6 4\n11111\n11000\n11000\n11100\n11000\n''') == '11100'\n'''\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5\n01001\n11100\n10111\n''') == '00010'\n\nassert solution('''\n1\n10\n''') == '010'\n\nassert solution('''\n5\n111\n10\n100\n000\n''') == '00100'\n\nassert solution('''\n5\n010\n011\n110\n100\n''') == '01010'\n\nassert solution('''\n6\n001\n101\n1\n011\n000\n101\n''') == '00110'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n\") == \"01\"\nassert solution(\"1 1\\n\") == \"00\"\nassert solution(\"1 1\\n\") == \"00\"\n'''\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '0000'\nassert solution('3 2') == '00100'\nassert solution('10 1') == '00111'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"00010\"\nassert solution(\"2 5\") == \"01001\"\nassert solution(\"2 5\") == \"00010\"\nassert solution(\"3 5\") == \"00010\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\nassert solution('2\\n3 1\\n2 3') == 'impossible'\nassert solution('4\\n5 1\\n1 2\\n3 4\\n5 3') == 'impossible'\n\"\"\"\n\nf = int(input())\nfor i in range(f):\n    n = int(input())\n    lines = list(map(lambda x: x.split(), input().split()))\n    if n == 1:\n        print('possible')\n        continue\n    t = []\n    for j in range(n):\n        t.append(int(lines[j][0]))\n        t.append(int(lines[j][1]))\n    t.sort()\n    for j in range(1, n):\n        if t[j] <= t[j-1]:\n            print('impossible')\n            break\n    else:\n        print('possible')"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 2\n0 4\n6 12\n''') == 'possible'\nassert solution('''\n2 1\n1 2\n''') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\nassert solution('2\\n6 2\\n0 4\\n6 12') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4 2\") == \"possible\"\n\nassert solution(\"10\\n2\\n4\\n6\\n10\\n6\\n9\\n6\\n12\\n8\\n7\\n8\\n10\\n10\\n7\\n10\\n12\\n9\\n10\\n8\\n10\\n10\\n9\\n10\\n12\\n8\\n10\\n10\\n7\\n10\\n7\\n9\\n12\\n10\\n10\\n8\\n10\\n10\\n7\\n10\\n10\\n9\\n10\\n10\\n9\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n9\\n10\\n9\\n10\\n7\\n10\\n10\\n9\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10\\n10\\n7\\n10"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\nassert solution('1\\n6 3\\n0 1\\n6 3') == 'impossible'\nassert solution('1\\n6 1\\n0 3\\n6 3') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\n\nhttps://www.hackerrank.com/challenges/ctci-linked-list/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=linked-lists"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n6\\n4\\n6\\n12') == 'possible'\nassert solution('6\\n2\\n6 12') == 'impossible'\nassert solution('4\\n1\\n2\\n2\\n2\\n2') == 'impossible'\n'''\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n0 4\\n6 12') == 'possible'\nassert solution('10\\n1\\n10\\n2\\n3\\n3\\n4\\n4\\n4\\n3\\n3\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n2\\n3\\n3\\n3\\n2\\n2\\n1\\n2\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\nassert solution('1\\n6 2\\n6 12') == 'impossible'\n\"\"\"\nimport sys"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"100\\n2 0 1\\n10 0 1\\n0 -5 1\\n-5 0 1\") == \"1\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n4 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == \"2\"\n\"\"\""
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nassert solution('5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '1'\nprint('Tests passed')\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == '2'\nassert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == '3'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('5 0 1') == '1'\nassert solution('10 0 1') == '1'\nassert solution('0 5 1') == '1'\nassert solution('0 -5 1') == '1'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n\") == \"2\""
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n\n''') == \"2\"\n\nassert solution('''4\n5 0 1\n0 5 1\n-5 0 1\n-5 0 1\nSample Output:\n3\n\n''') == \"3\""
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"5 0 1\") == \"2\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n0 0 1\") == \"1\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nprint(solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''')) == 'Yes'\nprint(solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''')) == 'Yes'\nprint(solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''')) == 'Yes'\nprint(solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''')) == 'Yes'\nprint(solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''')) == 'Yes'\nprint(solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''')) == 'Yes'\nprint(solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''')) == 'Yes'\nprint(solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''')) == 'Yes'\nprint(solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '3\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nE it_goes_on_and_on\\nd'\n    ) == 'Yes\\n3 Just A Dream'\nassert solution(\n    '3\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nE it_goes_on_and_on\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nd'\n    ) == 'Yes\\n3 Just A Dream\\nYes'\nassert solution(\n    '3\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nE it_goes_on_and_on\\nd'\n    ) == 'No\\nPlot Error\\nPlot Error'\nassert solution(\n    '4\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nE it_goes_on_and_on\\nd'\n    ) == 'Yes\\n3 Just A Dream\\nYes'\nassert solution(\n    '1\\nE\\nS 1\\nE 1\\nD 1\\nS 2\\nE 2\\nD 2\\nS 3\\nE 3\\nD 3\\nS 4\\nE 4\\nD 4\\nS 5\\nE 5\\nD 5\\nS 6\\nE 6\\nD 6\\nS 7\\nE 7\\nD 7\\nS 8\\nE 8\\nD 8\\nS 9\\nE 9\\nD 9\\nS 10\\nE 10\\nD 10\\nS 11\\nE 11\\nD 11\\nS 12\\nE 12\\nD 12\\nS 13\\nE 13\\nD 13\\nS 14\\nE 14\\nD 14\\nS 15\\nE 15\\nD 15\\nS 16\\nE 16\\nD 16\\nS 17\\nE 17\\nD 17\\nS 18\\nE 18\\nD 18\\nS 19\\nE 19\\nD 19\\nS 20\\nE 20\\nD 20\\nS 21\\nE 21\\nD 21\\nS 22\\nE 22\\nD 22\\nS 23\\nE 23\\nD 23\\nS 24\\nE 24\\nD 24\\nS 25\\nE 25\\nD 25\\nS 26\\nE 26\\nD 26\\nS 27\\nE 27\\nD 27\\nS 28\\nE 28\\nD 28\\nS 29\\nE 29\\nD 29\\nS 30\\nE 30\\nD 30\\nS 31\\nE 31\\nD 31\\nS 32\\nE 32\\nD 32\\nS 33\\nE 33\\nD 33\\nS 34\\nE 34\\nD 34\\nS 35\\nE 35\\nD 35\\nS 36\\nE 36\\nD 36\\nS 37\\nE 37\\nD 37\\nS 38\\nE 38\\nD 38\\nS 39\\nE 39\\nD 39\\nS 40\\nE 40\\nD 40\\nS 41\\nE 41\\nD 41\\nS 42\\nE 42\\nD 42\\nS 43\\nE 43\\nD 43\\nS 44\\nE 44\\nD 44\\nS 45\\nE 45\\nD 45\\nS 46\\nE 46\\nD 46\\nS 47\\nE 47\\nD 47\\nS 48\\nE 48\\nD 48\\nS 49\\nE 49\\nD 49\\nS 50\\nE 50\\nD 50\\nS 51\\nE 51\\nD 51\\nS 52\\nE 52\\nD 52\\nS 53\\nE 53\\nD 53\\nS 54\\nE 54\\nD 54\\nS 55\\nE 55\\nD 55\\nS 56\\nE 56\\nD 56\\nS 57\\nE 57\\nD"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"Yes\", \"Simple Case\"\nassert solution(\"1\") == \"Yes\", \"Two-Event Story\"\nassert solution(\"2\") == \"No\", \"Tricky Case\"\nassert solution(\"3\") == \"Yes\", \"Three-Event Story\"\nassert solution(\"4\") == \"Yes\", \"Four-Event Story\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n3\nD\nS 1\n!bobby_died\nS 2\n!bobby_died\nE it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n9\nE business_as_usual\nE business_as_usual\nS 1\nE stuff_happens\nS 2\nE stuff_happens\nE it_goes_on_and_on\nS 2\nS 1\nS 2\nE jr_does_bad_things\nS 1\nS 2\nE jr_does_bad_things\nS 2\nS 1\nS 2\nS 1\nS 2\nS 2\nS 1\nS 2\nS 2\nS 1\nE it_goes_on_and_on\nS 2\nS 2\nE it_goes_on_and_on\nS 2\nS 1\nS 2\nE jr_does_bad_things\nS 1\nS 2\nE jr_does_bad_things\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 2\nS 1\nS 1\nS 2\nS 1\nS 1\nS 2\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 1\nS 2\nS 1\nS 2\nS 2\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 2\nS 1\nS 1\nS 2\nS 1\nS 2\nS 2\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 2\nS 1\nS 1\nS 2\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 1\nS 2\nS 2\nS 2\nS 1\nS 2\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 2\nS 1\nS 1\nS 2\nS 2\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 2\nS 2\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 2\nS 2\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 2\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\nS 1\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 1 bobby_dies\\nS 3 business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 2 business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 2 business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 1 bobby_died\\nS 1 business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == '3 Just A Dream'\nprint('PASSED')"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('3\\nE business_as_usual\\nS 1!bobby_dies\\nE jr_does_bad_things\\nS 2!bobby_dies\\n') == 'Yes'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"Yes\"\nassert solution(sample_input_2) == \"Yes\"\nassert solution(sample_input_3) == \"Yes\"\nassert solution(sample_input_4) == \"Yes\"\nassert solution(sample_input_5) == \"Yes\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n3\nD\nE\nS 1\nS 2\nS 2\n''') == 'Plot Error'\nassert solution('''\n0\nE\nS 1\nS 2\n''') == 'Plot Error'\n'''\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 3!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 3!bobby_dies\\nS 4!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 3!bobby_dies\\nS 4!bobby_dies\\nS 5!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 3!bobby_dies\\nS 4!bobby_dies\\nS 5!bobby_dies\\nS 6!bobby_dies it_goes_on_and_on') == 'Yes'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n10\n2 1\n5 3''') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consectetur |X|\\n|Duis aute irure dolor in | |\\n|reprehenderit in        |v|\\n+------------------------+-+'''\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua\nUt enim ad minim veniam quis nostrud exercitation ullamco laboris\nnisi ut aliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in | |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n'''\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consectetur |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 10 5 8\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n\"\"\") == \"\"\"+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\"\"\".strip()\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consectetur |X|\\n|Duis aute irure dolor in | |\\n+------------------------+-+'\nassert solution('4 5 3 8') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consectetur |X|\\n|Duis aute irure dolor in | |\\n+------------------------+-+'\nassert solution('3 5 3 5') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consectetur |X|\\n|Duis aute irure dolor in | |\\n+------------------------+-+'\nassert solution('0 0 0 0') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consectetur |X|\\n|Duis aute irure dolor in | |\\n+------------------------+-+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"24 5 8 7\") == \"-+-+-+\"\nassert solution(\"10 20 50\") == \"|x|\"\nassert solution(\"100 100\") == \"-|X|\"\nassert solution(\"900 100\") == \"|---|\"\nassert solution(\"100 10\") == \"|x|\""
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"24 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\""
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('24 5 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('24 5 8 7') == '+----------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo conse    |X|\\n|duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+----------------+-+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n\"\"\"\n    ) == \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n\"\"\"\nassert solution(\n\"\"\"\n-17 -2 -8 -6 -3 5 -6\nH -16 -9 -5 -6 -3 3 -6\nM -10 -7 -5 -2 -3 5 -6\nS -7 -8 -4 -5 -6 -4 -6\nD -9 -5 -3 -5 -3 -3 -6\nC -5 -5 -4 -4 -3 -3 -3\n\"\"\"\n    ) == \"\"\"\n-------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n\"\"\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\nassert solution(\"3 3\\n0 1 2\\n1 0 2\\n2 0 1\\n\") == \"impossible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\n\"\"\"\n\nimport sys\n\nfrom heapq import heapify, heappop, heappush\n\nsys.setrecursionlimit(10**6)\n\nn, L = map(int, input().split())\nd = list(map(int, input().split()))\n\narr = []\nfor i in range(n):\n    arr.append([i, d[i]])\n\narr = sorted(arr, key=lambda x: x[1])\narr = sorted(arr, key=lambda x: x[0])\n\nans = 0\ncnt = 0\nheapify(arr)\nwhile len(arr) > 0:\n    if cnt > L:\n        break\n    tmp = heappop(arr)\n    cnt += tmp[1]\n    ans += tmp[1]\n\nprint('possible' if cnt == L else 'impossible')"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 2, 0, 1]) == \"possible\"\nassert solution([2, 0, 1, 3]) == \"impossible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n5 2 4 6 7\\n8 5 4 3 7 9\") == \"impossible\"\nprint(\"You passed the tests!\")"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\"\nassert solution(\"4 3\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"impossible\""
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10') == 'possible'\nassert solution('4 10') == 'impossible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('4 9\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\n\n'''"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'impossible'\nassert solution('''\n5 2\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'\nassert solution('''\n5 20\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n6 6\n0 5 1 2\n0 7 2 1\n3 0 2 1\n4 2 0 1\n5 2 1 0\n''') == 'impossible'\nassert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1') == 'impossible'\nassert solution('2\\n2\\n3\\n4') == 'impossible'\nassert solution('3\\n4\\n1\\n2') == 'impossible'\nassert solution('4\\n5\\n6\\n7') == 'possible'"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1') == '1.00000000','sample test'\nassert solution('10 1 1') == '0.9999999','sample test'\nassert solution('50 1 1') == '0.9999999','sample test'\nassert solution('50 10 1') == '0.9999999','sample test'\nassert solution('1 50 1') == '1.00000000','sample test'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\") == \"1.0\", \"Should win 1.0\"\nassert solution(\"2 2 1\") == \"0.5\", \"Should draw\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1') == '1.0'\n\"\"\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '1.00000000'\nassert solution('2 1 3') == '2.00000000'\nassert solution('2 1 5') == '2.00000000'\nassert solution('2 2 3') == '3.00000000'\nassert solution('2 3 3') == '3.00000000'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1 1\n1\n2''') == \"1.00000000\"\n\nassert solution('''4 5 2\n1\n2\n1\n2''') == \"1.99999994\"\n\nassert solution('''4 5 3\n1\n2\n2\n2''') == \"1.99999994\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '1.00000000'\nassert solution('2 1 1') == '1.000000000'\nassert solution('2 2 2') == '1.000000000'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\") == \"1.00000000\", \"Should return 1\"\n\"\"\"\n\nfrom math import ceil\nfrom collections import deque\nfrom sys import stdin\n\nstdin = stdin.read().split('\\n')\nN, D, C = int(stdin[0]), int(stdin[1]), int(stdin[2])\n\ncard = list(range(1, N+1))\ncards = deque(card)\n\nplayer_1_win = False\nplayer_2_win = False\nround_num = 0"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1\\n1') == '1.00000000'\nassert solution('2 1 1\\n2') == '1.999999999'\nassert solution('2 1 1\\n3') == '1.0'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1\\n1') == '1.0', f\"actual: {solution('2 1 1\\n1')}, expected: 1.0\"\nassert solution('2 1 1\\n2') == '1.0', f\"actual: {solution('2 1 1\\n2')}, expected: 1.0\"\nassert solution('2 1 1\\n2') == '1.0', f\"actual: {solution('2 1 1\\n2')}, expected: 1.0\"\nassert solution('2 1 1\\n2') == '1.0', f\"actual: {solution('2 1 1\\n2')}, expected: 1.0\"\nassert solution('3 1 1\\n2') == '0.6666666666666666', f\"actual: {solution('3 1 1\\n2')}, expected: 0.6666666666666666\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\"\nassert solution(\"2 1 1\\n1\\n2\\n\") == \"0.99999994\"\n\"\"\""
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 4 3 3 2\"\n    ) == \"2\"\nassert solution(\n    \"5 5 3 3 3 2\"\n    ) == \"3\"\nassert solution(\n    \"5 5 4 3 3 2\"\n    ) == \"2\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 3 3 2\") == \"2\\n1\\n3\\n\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 3 3 2\") == \"1\"\nassert solution(\"5\\n5 4 3 3 2\") == \"3\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\") == \"3\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(f\"5 4 3 3 2\\n3\\n1 2\") == \"2\"\nassert solution(f\"5 4 3 3 2\\n3\\n1 2\\n1 1\") == \"3\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == ''\nassert solution(\"1\") == '1'\nassert solution(\"2\") == '2'\nassert solution(\"3\") == '3'\nassert solution(\"4\") == '4'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 3 3 2\") == \"2\"\nassert solution(\"10 4 8 10 7 7 7 7 7 7 5\") == \"5\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"2 2 2\") == \"1\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '1\\n1\\n1\\n'\nassert solution('10\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '2\\n1\\n1\\n'\nassert solution('30\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '3\\n1\\n1\\n'\nassert solution('30\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '3\\n1\\n1\\n'\nassert solution('30\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '3\\n1\\n1\\n'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '1'\nassert solution('5\\n4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '3'\nassert solution('10\\n1 2 3 5 6 7 8 10\\n9\\n1 2 3 4 5 6 7 8\\n7\\n1 2 3 4 5 6 7 8\\n') == '8'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n5 4 3 3 2\\n3') == '1\\n2'\nassert solution('6\\n5 4 3 3 2\\n3') == '3'\nassert solution('6\\n5 4 3 3 2\\n1 1\\n2 4') == '2'\nassert solution('6\\n5 4 3 3 2\\n1 1\\n2 4\\n3') == '3'\nassert solution('6\\n5 4 3 3 2\\n4 4\\n2 4\\n3') == '3'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n\") == \"1\\n1\\n3\\n\""
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('10 2') == '2'\nassert solution('3 1') == '5'\nassert solution('7 5') == '2'\nassert solution('9 6') == '5'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2\n1 1\n1 3\n1 0\n''') == '1', 'First'\n\nassert solution('''\n3\n2\n1 1\n1 3\n1 0\n''') == '2', 'Second'\n\nassert solution('''\n4\n2\n1 1\n1 3\n1 0\n''') == '2', 'Third'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('10 3') == '5'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n0 1\\n1 2\\n0 2\\n') == '1'\nassert solution('5 2\\n0 1\\n1 3\\n0 3\\n') == '1'\nassert solution('5 2\\n0 1\\n1 2\\n2 3\\n0 3\\n') == '0'\nassert solution('5 2\\n0 1\\n1 2\\n3 3\\n0 3\\n') == '1'\n\n'''\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\") == \"2\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\\n1 1\") == \"1\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n4 2\n1 1\n1 1\n1 1\n\"\"\") == \"never meet\""
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 2\n0 1\n1 2\n0 2\n0 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 3\n0 1\n1 2\n0 2\n0 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n1 1\n2 2\n0 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n1 1\n2 2\n0 2\n\"\"\") == \"never meet\"\nassert solution(\"\"\"\n3 2\n2 2\n1 2\n2 2\n\"\"\") == \"never meet\"\nassert solution(\"\"\"\n3 2\n2 2\n1 1\n2 2\n\"\"\") == \"never meet\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 4\") == \"2\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n0 1\\n1 2\\n0 2\\n\") == \"1\"\nassert solution(\"3 3\\n0 1\\n1 2\\n0 2\\n\") == \"1\"\nassert solution(\"2 2\\n0 1\\n1 2\\n0 2\\n\") == \"never meet\"\n\nn, m = map(int, input().split())\n\nfor _ in range(m):\n    u, v = map(int, input().split())\n    if u == v:\n        print(\"never meet\")\n    else:\n        print(min((abs(u-v) + abs(u-2*v)) / 2, (abs(u-v) + abs(u-3*v)) / 3))\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"100 3 4\") == \"1453999997\"\nassert solution(\"5 7 2\") == \"1464500011\"\nassert solution(\"1 4 4\") == \"1452\"\n\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 2') == '14500000001'\nprint('Solution ='+ solution(''))\nprint('Solution ='+ solution('5 4 2'))\nprint('Solution ='+ solution('5 2 2'))\n'''"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4 2\n1 1\n2 2\n3 3\n4 4\n''') == '14500000001'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"5 4 2\") == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 4 2\n''') == '14500000001'\nassert solution('''\n5 5 1\n''') == '10'\nassert solution('''\n6 4 4\n''') == '8'\n'''\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4 1\n5 4 2''') == '14500000001'''\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 2') == '14500000001'\nassert solution('1') == '1'\nassert solution('1 2 2') == '0'\nassert solution('1 2 3 4 5') == '0'\n\"\"\"\n\nfrom fractions import Fraction\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 2') == '14500000001'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4 2') == '14500000001'\nassert solution('5 5 2') == '14540000001'\nassert solution('9 9 2') == '14539999995'\nassert solution('7 7 2') == '145400000001'\nassert solution('2 1 1') == '120000000000'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\"\nassert solution(\"10\\n2 2\\n1 5\\n2 3\\n2 5\\n1 1\\n2 1\\n2 5\\n1 2\\n2 3\\n2 5\\n1 1\\n2 5\\n1 5\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\""
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n1\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\") == \"2\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n5\n3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n3\n5\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n2\n\"\"\") == \"1\""
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'\n\nassert solution('2\\n1 2\\n3 3\\n2 2\\n1 2\\n2 1\\n3 4\\n1 1\\n2 1') == '2\\n2\\n1\\n2\\n1\\n2'\n\nassert solution('10\\n3 1\\n4 8\\n2 5\\n9 9\\n3 1\\n8 3\\n6 1\\n7 4\\n8 3\\n9 4\\n4 6\\n7 6\\n8 5\\n9 6') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9'\n\nassert solution('20\\n2 3\\n4 3\\n8 4\\n13 5\\n19 6\\n9 9\\n16 3\\n17 3\\n18 4\\n14 5\\n17 4\\n20 4\\n12 5\\n14 6\\n16 6\\n19 5\\n18 5\\n19 4') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19'\n\nassert solution('10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n4 3 5\\n1 2 4\\n3 4 5\\n4 3 5') == '1\\n1\\n2'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3 4\\n1 6\\n2 6') == '0 1'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    1 4\n    3 7\n    1 6\n    2 6\n''') == '2'\n''')\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('6') == '1'\nassert solution('10') == '2'\nassert solution('10 2') == '3'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '2'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n5 5 2\\n4 5 3\\n1 1 3') == '0\\n1\\n1\\n1'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2 1000\n2 3 1000\n4 5 500\n2''') == '3100'\n\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\nSample Output:\n3100\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '3100'\nassert solution('4 6') == '2800'\nassert solution('4 10') == '10800'\nassert solution('8 5') == '100800'"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3100'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n10 10\n5 5 5\n1 2 5\n1 3 3\n1 3 4\n3 2 1\n2 2 1\n3 3 1\n2 4 1\n3 4 1\n1 2 4\n2 4 3\n3 4 4\n4 5 4\n1 3 4\n2 3 4\n3 4 4\n4 5 3\n''') == '10904'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n'''\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '3 2'\n    '1 2 1000'\n    '2 3 1000'\n    '4 5 500'\n    '2'\n    '1 4 300'\n    '3 5 300'\n) == '3100'\n\nassert solution(\n    '4 3'\n    '1 2 1000'\n    '2 3 1000'\n    '4 5 500'\n    '2'\n    '1 4 300'\n    '3 5 300'\n) == '3100'\n\nassert solution(\n    '5 3'\n    '1 2 1000'\n    '2 3 1000'\n    '4 5 500'\n    '2'\n    '1 4 300'\n    '3 5 300'\n) == '3100'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3300\"\nassert solution(\"\"\"\n3 2\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n\"\"\") == \"3300\"\n\n\"\"\""
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution() == '3100'"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 5\\n6 7\\n2 3\") == \"5.25\"\nassert solution(\"4 1\\n2 4\\n1 4\\n1 3\\n2 5\") == \"1.5\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"5.250000000\"\nassert solution(\"3 2\") == \"5.250000000\"\nassert solution(\"10 10\") == \"11.666666666666666\"\nprint('All tests passed!')\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n'\n) == '5.25'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n1 8\n6 5\n2 5\n2 9\n7 13\n''') == '5.250000000'\nassert solution('''\n3 2\n1 5\n2 7\n''') == '2.50000000'\nassert solution('''\n2 2\n1 5\n2 7\n''') == '0.50000000'\nassert solution('''\n5 5\n1 2\n3 4\n5 7\n8 9\n10 11\n2 12\n13 14\n''') == '3.50000000'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n1 8\n6 5\n2 5\n2 9\n7 13\n''') == '5.250000000'\nassert solution('''\n5 2\n3 5\n4 8\n1 7\n1 3\n''') == '2.250000000'\nassert solution('''\n3 4\n2 4\n2 2\n2 5\n''') == '3.0'\nassert solution('''\n0 1\n1 5\n''') == '1.5'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"5.25\", \"Should be 5.25\"\n\n\"\"\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '3.25'\nassert solution('5 4') == '5.25'\nassert solution('10 20') == '5.25'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 2') == '1.5'\nassert solution('1 2\\n1 2') == '1.5'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"5.25\"\n\"\"\"\nfrom collections import Counter, deque\nfrom functools import reduce\nfrom typing import Iterable, List, Optional\n\nfrom utils import time_it\n\n\n@time_it\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '4.0'\nassert solution('3 5') == '2.0'\nassert solution('2 7') == '3.0'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"7\\n\"\n    \"1 2 3 1 2 1 1\\n\"\n    \"5\\n\"\n    \"1 3 1 2 3\\n\"\n    \"1 2 1 2\\n\"\n    \"2 2 1 2\\n\"\n    \"3 2 1 2\\n\"\n    \"4 2 1 2\\n\"\n    ) == \"7\\n2\\n2\\n4\\n\"\nassert solution(\n    \"4\\n\"\n    \"1 2 1 2\\n\"\n    \"2 2 1 2\\n\"\n    \"3 2 1 2\\n\"\n    \"4 2 1 2\\n\"\n    ) == \"1\\n\"\nassert solution(\n    \"6\\n\"\n    \"1 2 3 1 2 1\\n\"\n    \"2 2 2 3\\n\"\n    \"2 2 3 1\\n\"\n    \"2 2 3 3\\n\"\n    \"3 2 1 2\\n\"\n    \"4 2 1 2\\n\"\n    \"4 2 3 3\\n\"\n    ) == \"5\\n\"\nassert solution(\n    \"7\\n\"\n    \"1 2 3 1 2 1 1\\n\"\n    \"2 2 2 3\\n\"\n    \"3 2 1 2\\n\"\n    \"4 2 1 2\\n\"\n    \"5 2 3 3\\n\"\n    \"6 2 3 3\\n\"\n    \"6 2 3 3\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    \"7 2 1 2\\n\"\n    ) == \"13\\n\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 1 2 1 1\") == \"7\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"2 2 2 3\") == \"3\"\nassert solution(\"3 2 1 2\") == \"0\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3') == '7'\nassert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 2 1 2\\n3 2 1 2') == '2'\nassert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3') == '0'\nassert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n3 2 1 2') == '4'\nassert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 2 1 2\\n3 2 1 2\\n4 2 1 2\\n5 2 1 2') == '4'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7'\nassert solution('''\n2\n1 2 1 2\n1 2 1 2\n''') == '2'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == \"7\"\nassert solution(solution.__doc__, test_only) == \"7\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7'\nassert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '2'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n0 1 2 3 4 5 6 7 8 9 10\n5\n10 20\n3 9 7 5\n1 2 3\n0 0\n''') == '7'\nassert solution('''\n7\n0 1 2 3 4 5 6 7 8 9 10\n5\n1 2 3 4 5 6 7 8 9 10\n3 9 7 5\n1 2 3\n0 0\n''') == '4'\nassert solution('''\n10\n0 1 2 3 4 5 6 7 8 9 10\n5\n10 20\n3 9 7 5\n1 2 3\n0 0\n''') == '0'\nassert solution('''\n10\n0 1 2 3 4 5 6 7 8 9 10\n5\n10 20\n3 9 7 5\n1 2 3\n1 2\n''') == '0'"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 1 2 1 1') == '7'\nassert solution('5') == '2'\n\"\"\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4\\n', f'actual output: {solution(stdin)}'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1\n1\n2\n1\n2\n2\n3\n2\n4\n2\n3\n2\n3\n2\n3\n''') == '7'\nassert solution('''\n7\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n5 2 1 2\n''') == '2'\nassert solution('''\n2\n1 2 1 2\n1 2 1 2\n''') == '0'"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448', \"You failed the Sample Test\""
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nassert solution('''6\n3 1 2\n0.2 0.2 0.2\n0.2 0.2 0.2\n0.2 0.2 0.2\n0.2 0.2 0.2\n0.2 0.2 0.2\n0.2 0.2 0.2\n''') == '0.5'\nassert solution('''10\n10 10 10 10 10 10 10 10 10 10\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n''') == '0.3'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == '32.6405451448'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"32.6405451448\"\nprint(solution())\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n\"\"\"\n) == \"32.6405451448\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 4 3') == '2 3 1 4'\nassert solution('1 1 1 1') == '1 1 2'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 1 4 3\n\"\"\") == \"2 3 4 1\"\nassert solution(\"\"\"\n3 4 1 3 2\n\"\"\") == \"3 4 2 1\"\nassert solution(\"\"\"\n2 1 3 3\n\"\"\") == \"2 3 1 1\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1 4 3\\n') == '2 3 4 1'\nassert solution('2\\n2 1 4 3\\n') == '2 3 4 1'\nassert solution('100\\n10 1 1 1 1 1 1 1 1 1 1\\n') == '10 1 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 1 4 3\\n') == '1 3 2 4'\nassert solution('6\\n1 2 3 4 5 6\\n') == '1 4 2 3 5 6'\n\n'''"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3 4 1\\n2 4 5 3') == '4 1 5 3 2'\nassert solution('1\\n5 3 2 1\\n1 3 6 5 4') == '5 1 4 3 6 3'\nassert solution('1\\n3 5 2 4 1\\n5 4 1 3 2') == '3 5 4 1 2 1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 4 3\\n') == '2 3 1 4'\nassert solution('1 1 1 1\\n') == '1 1 1 1'\nassert solution('2 1 1 2\\n') == '2 1 2 1'\nassert solution('2 1 2 1\\n') == '2 1 2 1'\nassert solution('2 2 1 1\\n') == '2 1 2 1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2 3\n''') == '2 3 1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 4 3') == '2 3 1 4'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1 4 3\n''') == '2 3 4 1'\nassert solution('''\n3 1\n2 1 4\n''') == '2 1 4 3'\nassert solution('''\n4 1 2 3\n''') == '1 2 3 4'\nassert solution('''\n10 1 2 3 4 5 6 7 8 9 10\n''') == '2 3 4 5 6 7 8 9 10 1'\nassert solution('''\n12 1 2 3 4 5 6 7 8 9 10 11 12\n''') == '2 3 4 5 6 7 8 9 10 11 12 1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n2 1 4 3\n\"\"\") == \"2 3 4 1\"\nassert solution(\"\"\"\n1\n3 1\n\"\"\") == \"1 3 1\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"1 1 1\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '7.656854249492381'\nassert solution('1') == '7.656854249492381'\nassert solution('2') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4.000000000000000'\nassert solution('1') == '2.000000000000000'\nassert solution('3') == '3.8000000000000000'\nassert solution('4') == '4.000000000000000'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"10\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"10\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"10000\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\nassert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\n\n'''\n\n'''"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\"\"\") == \"9.457176585387683\"\nassert solution(r\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\"\"\") == \"1.160487781341382\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"7.656854249492381\"\nassert solution(\"1 3\") == \"7.656854249492381\"\nassert solution(\"2 4\") == \"7.656854249492381\"\nassert solution(\"3 3\") == \"7.656854249492381\"\nassert solution(\"3 2\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n2\n3\n3\n2\n1\n''') == '7.656854249492381'\n\nassert solution('''\n1\n1\n2\n3\n2\n2\n1\n''') == '7.656854249492381'\n\nassert solution('''\n5\n1 2\n1 3\n2 3\n3 3\n2 4\n''') == '7.656854249492381'\n\nassert solution('''\n8\n3 4\n5 4\n6 4\n5 6\n4 5\n3 4\n2 4\n1 4\n''') == '10.77486406326532'\n\nassert solution('''\n4\n0 3\n1 2\n1 3\n2 4\n''') == '10.77486406326532'"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n1 3\") == \"7.656854249492381\"\nassert solution(\"8\\n1 2\\n1 3\\n2 3\") == \"7.656854249492381\"\nprint(solution(*input().split()))\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\nassert solution('''6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 3 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3 3\n0 0\n1 1\n0 3\n0 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n5\n5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n6\n5\n6\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''\n3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''\n5\n3 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '1'\nassert solution('''\n5\n3 2\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '0'\nassert solution('''\n3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '0'\n'''\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\") == \"2\"\nassert solution(\"5 5 3\") == \"3\"\nassert solution(\"3 1 2\") == \"1\"\nassert solution(\"5 5 1\") == \"0\"\nassert solution(\"3 1 3\") == \"0\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == \"2\"\n\nassert solution(\"\"\"2\n1 1\n2 2\n1 3\"\"\") == \"2\"\n\nassert solution(\"\"\"3\n1 1\n2 2\n1 3\"\"\") == \"0\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 6 5\n0 0\n0 0\n0 2\n2 1\n1 2\n1 4\n1 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 5 5\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n\"\"\") == \"2\""
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == \"2\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 3') == '2'\nassert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n\n\"\"\""
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n') == '9', solution('2 1\\n')\nassert solution('1 1\\n') == '9', solution('1 1\\n')\nassert solution('5 7\\n') == '18', solution('5 7\\n')\nassert solution('15 13\\n') == '26', solution('15 13\\n')\nassert solution('4 5\\n') == '12', solution('4 5\\n')\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"1 1\") == \"9\"\nassert solution(\"2 1\") == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '9'"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '9'\nassert solution('10 3') == '14'\nassert solution('10 2') == '10'\n\n\"\"\"\n\nfrom math import prod\nfrom functools import reduce"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '9'\nassert solution('1 2') == '2'\nassert solution('1 2 2') == '3'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '9'\nassert solution('1 1') == '1'\nassert solution('7 8') == '4'\nassert solution('12') == '1'\nassert solution('7 8') == '4'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"6 10\") == \"19\"\nassert solution(\"8 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"1 6\") == \"9\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '12'\nassert solution('4') == '12'\nassert solution('3') == '12'\nassert solution('2') == '12'\nassert solution('1') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '12'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('5') == '7'\nassert solution('7') == '12'\n\n'''"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\"\n\"\"\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3\n4\n4\n4''') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2\n3\n5\n7\n12\n''') == '12'\nassert solution('''\n5\n-1\n3\n5\n7\n12\n''') == '12'\nassert solution('''\n6\n-1\n2\n-2\n3\n5\n-3\n''') == '3'\nassert solution('''\n3\n1\n3\n5\n7\n12\n''') == '12'\nassert solution('''\n5\n-1\n3\n5\n7\n12\n''') == '7'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1\n2\n3\n4\n5\n6\n''') == '12'\nassert solution('''\n3\n5\n5\n4\n''') == '7'\nassert solution('''\n1\n2\n2\n3\n''') == '4'\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == ''\nassert solution('4') == '2'\nassert solution('5') == '3'\n\nassert solution('1000000000') == '278912'\nassert solution('10000') == '1234'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n4\n5\n7\n\"\"\") == \"12\"\nassert solution(\"\"\"\n5\n2\n3\n5\n7\n\"\"\") == \"\"\nassert solution(\"\"\"\n5\n4\n4\n3\n4\n\"\"\") == \"4\""
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n3\n5\n7\n12\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n4\n2\n5\n7\n12\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n2\n2\n5\n7\n12\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n5\n3\n5\n7\n12\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n8\n2\n5\n7\n12\n13\n23\n45\n67\n89\n\"\"\") == \"12\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n2\n3\n5\n7\n12\nSample Input 2:\n3\n5\n-5\n-5\n-5\nSample Output 2:\n2\n3\n4\n5\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '0110'\nassert solution('4') == -1\nassert solution('3') == '0110'\nassert solution('2') == '1110'\nassert solution('1') == '1111'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n00\n01\n10''') == '11'\nassert solution('''5\n00\n01\n10\n110\n111''') == '11'\nassert solution('''50\n00100010001\n011001010000\n001010101010\n011001010000\n01100010001''') == '011'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '100'\nassert solution('4') == '110'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '110'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('00') == '00'\nassert solution('01') == '1'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"11\"\nassert solution(\"100\") == \"01\"\nassert solution(\"101\") == \"00\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"10\\n00\\n01\\n10\\n110\\n111\") == \"10\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n0\\n0\\n0\") == \"0\"\nassert solution(\"100\\n001\\n010\\n100\\n000\\n001\") == \"100\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"10101\") == \"001110\"\nassert solution(\"10111\") == \"000111\"\nassert solution(\"101100111\") == \"111010111\""
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '111'\nassert solution() == '-1'\n'''\n\nimport unittest"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111''') == '110'\n\nassert solution('''3\n00\n10\n110''') == '110'\n\nassert solution('''4\n00\n10\n100\n111''') == '111'\n\nassert solution('''8\n00\n010\n1020\n100110\n11111\n101110\n101010\n010100\n''') == '11111'\n\nprint('All test cases passed...')\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11'\n\"\"\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '100 250 320'\nassert solution('''1\n10 100\n1\n10 100''') == '10 100'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1') == '100 250 320'\n\"\"\""
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    1\n    20 100\n    1\n    150 50\n\"\"\") == \"100 250 320\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '100 250 320'\nassert solution('1') == '1'\nassert solution('2') == '100 250 320'\nassert solution('20') == '100 250 320'\nassert solution('100') == '100'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"100 250 320\"\nassert solution(\"20\") == \"100 250 320\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n\"\"\") == \"100 250 320\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n20 100\n100 10\n1\n150 50\n1''') == '100 250 320'\nassert solution('''2\n1\n1\n1\n1''') == '1 1 1 1'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\n\n'''\n- You are an expert investor who is investing in multiple companies. At the end of the year you are expected to file your taxes, which requires you to track and report the total number of shares you held during any of your trading days during the year.\n\n- You are an expert investor who is investing in multiple companies. At the end of the year you are expected to file your taxes, which requires you to track and report the total number of shares you held during any of your trading days during the year.\n\nThe records you have kept are sorted by company: for each company, you have a list of notes stating how many shares of that company you owned on a given day.\n\nYour tax accountant has asked you to produce a list of the total number of shares across all companies you have held on each of the days on which you have traded and recorded your holdings.\n\n-----Input-----\nThe first line of input contains an integer $C$ ($1 \\le C \\le 20$), the total number of companies of which you hold shares. Next will be $C$ blocks of records, one for each company.\n\nEach record block starts with an integer $K$ ($1 \\le K \\le 50$), which is the number of records you have kept for this company. This is followed by $K$ lines of input, each containing two integers $N$ ($1 \\le N \\le 1000$) and $D$ ($1 \\le D \\le 365$), denoting that you held $N$ shares of this company on day $D$. The days in the input may be specified in any order.\n\n-----Output-----\nPrint, on a single line, for each day for which you have at least one record, the total number of shares held on that day. The share totals shall be printed in increasing order of trading days.\n\n-----Examples-----\nSample Input:\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\nSample Output:\n100 250 320\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n50\\n100') == '3 7 4 6 5 7 2 15 2'\nassert solution('4\\n1\\n2') == '6 2'"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''50 100''') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9\") == \"9 7 2 15 2\"\nassert solution(\"10 20 30 40 50 60 70 80 90 100\") == \"9 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15''') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n4\n1 2\n1 3\n1 4\n1 5''') == '3 7 4 6 5 7 2 15 2'\nassert solution('''1\n1\n5\n2''') == '4 7 9'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\n\nNotes\nNo effort has been taken to optimize the program. It is easier to read a few lines at a time.\nThe input and output format is taken from the description on the Kattis platform.\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3 7 4 6 5 7 2 15 2'\nassert solution('''50 100''') == '3 7 4 6 5 7 2 15 2'''"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1\\n0 1\\n0 2\\n1 2\\n0 2\\n\") == \"0.9999999999\"\nassert solution(\n    \"3\\n2 3\\n4 5\\n2 5\\n2 4\\n\") == \"1.0000000000\"\nassert solution(\n    \"5\\n0 0\\n0 14\\n15 14\\n15 0\\n\") == \"9.0000000000\"\n\nimport math\n\nstdin = \"\"\"\n5\n0 0\n0 14\n15 14\n15 0\n5\n8 3\n4 6\n7 10\n11 7\n\"\"\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\nassert solution('''\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '41.0000000000'\n'''"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == '40.0000000000'\nassert solution('6\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n5\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n6\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == '71.6923076923'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\"\n    ) == \"40.0000000000\"\nassert solution(\n    \"5\\n3 2\\n0 0\\n0 3\\n4 3\\n4 0\\n2 2\\n2 0\"\n    ) == \"24.0000000000\"\nassert solution(\n    \"10\\n-10 -5\\n0 0\\n1 1\\n2 1\\n3 3\\n5 5\\n6 6\\n7 7\\n9 9\\n10 10\\n-10 -5\"\n    ) == \"45.0000000000\""
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n3 4\\n') == '40.0000000000'\nassert solution('8\\n0 3\\n3 4\\n5 3\\n4 6\\n6 7\\n7 8\\n') == '28.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000', 'Should have 40'\nassert solution('''\n3\n0 0\n0 10\n12 10\n''') == '20.0000000000', 'Should have 20'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0\\n0 14\\n15 14\\n15 0\") == \"40.0000000000\"\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\") == \"40.0000000000\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n\"\"\") == \"40.0000000000\"\nprint(\"\\033[32mTESTS PASSED!\\033[0m\")"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0\\n0 14\\n15 14\\n15 0') == '40.0000000000'\nassert solution('4\\n0 0\\n0 14\\n15 14\\n15 0') == '40.0000000000'\nassert solution('8\\n3 3\\n4 4\\n5 5\\n5 5\\n7 7\\n9 9\\n11 11\\n') == '38.9999999999'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0\\n0 1\") == \"1.0\"\nassert solution(\"3\\n0 0\\n0 1\\n1 0\") == \"2.0\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n2 1 3') == '1'\nassert solution('2\\n5\\n1 2 4 5') == '1 2'\nassert solution('2\\n3\\n1 2 3') == '1'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n1 2\n''') == '1'\n\nassert solution('''\n2\n3\n1 2\n''') == '2'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n1 2 3') == '1'\nassert solution('2\\n5\\n1 4 2 3') == '2'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n2 1 3') == '1'\nassert solution('1\\n4\\n1 1 1 2') == '1'\nassert solution('1\\n5\\n1 1 2 1 3') == '1'\nassert solution('2\\n3\\n1 1 2') == '2'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n1 1 1\") == \"2\"\nassert solution(\"2\\n3\\n1 1 1\") == \"1 1\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n2 1 3') == '1'\n\nassert solution('1\\n3\\n1 2 3') == '1'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 2\\n1 2 3\\n') == '2'\nassert solution('2\\n3 1 2\\n1\\n') == '3'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n3 1 3\n''') == '1'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '10'\nassert solution('''\n20\n9 8 2 9 5 7 1 9 6 7\n''') == '1,2,3,4,5,6,7'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n1\\n\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"2\\n1\\n\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n75.00 1.71 2.38\n\"\"\") == \"199 162\"\nassert solution(\n\"\"\"\n37.00 0.00 8.80\n\"\"\") == \"none\"\nassert solution(\n\"\"\"\n0.00 0.00 8.80\n\"\"\") == \"none\"\nassert solution(\n\"\"\"\n25.00 0.00 8.80\n\"\"\") == \"none\"\nassert solution(\n\"\"\"\n0.00 75.00 8.80\n\"\"\") == \"0.00 1.71\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"975.25 1.6 1.38\") == \"199 162\"\nassert solution(\"1.6 975.25\") == \"208 174\"\nassert solution(\"1.5 2.25\") == \"1 2\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'None'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n73.00 1.71 2.38\n73.00 2.00 1.71 2.38\n73.00 2.00 1.71 1.71 2.38\n73.00 1.71 1.71 2.38\n73.00 2.00 1.71 1.71 2.38\n73.00 2.00 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 2.38\n73.00 1.71 2.00 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 2.00 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 2.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 2.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 2.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 2.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 2.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 2.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 2.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 2.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 2.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 2.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 1.71 2.38\n73.00 1.71 1.71"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    775.85 1.71 2.38\n''') == '199 162'\nassert solution('''\n    775.85 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1.71 2.38\n    106.35 1."
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7.25 1.71 2.38') == '199 162'\nassert solution('10.25 0.25 1.75') == 'None'\nassert solution('100.25 0.25 10.75') == 'None'\nassert solution('50.25 1.75 0.75') == 'None'\nassert solution('100.75 1.75 0.75') == 'None'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '200'\nassert solution('99') == '0'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0.04 1.16 2.45') == 'None'\nassert solution('3.13 0.36 1.36 0.37 1.79 0.20') == '199 162'\nassert solution('7.37 2.95 0.37 1.37 0.69 1.37 0.68 0.88') == '199 162'"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7.35 1.71 2.38\") == \"199 162\"\nassert solution(\"45.42 4.51 2.75\") == \"None\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"73.10 4.50 4.75\") == \"199 162\"\nassert solution(\n    \"100.00 7.00 1.00\") == \"0 0\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"14\"\nassert solution(\"8 1\") == \"20\"\nassert solution(\"5 3\") == \"16\"\n\"\"\"\n\nimport sys\n\nstdin = sys.stdin.read()\ninput = stdin.split(\"\\n\")\n\nN = int(input[0])\nK = int(input[1])\n\nboard = []\nfor i in range(2, N + 2):\n    board.append(list(map(int, input[i-2].split(\" \"))))"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"16\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"3 4\") == \"6\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"4 2\") == \"8\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '5 3\\n'\n    '2 1 -1\\n'\n    '1 3 2\\n'\n    '0 2 3\\n'\n    '2 1 1\\n'\n    '3 3 0\\n') == '16\\n'"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5 3\\n'\n    '2 1 -1\\n'\n    '1 3 2\\n'\n    '0 2 3\\n'\n    '2 1 1\\n'\n    '3 3 0'\n) == '16'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '16'\nassert solution('10 5') == '40'\nassert solution('10 10') == '80'\nassert solution('10 20') == '100'\nassert solution('5 3') == '16'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\nassert solution('20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20\\n20 20 20 20 20 20') == '64'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"16\"\nassert solution(\"10 5\") == \"14\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0\n''') == '16'\nassert solution('''\n5 2\n2 1 1\n1 3 2\n2 1 -1\n''') == '4'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1 1 1\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    O 2\n    O 4\n    O 6\n    O 7\n    O 9\n    O 13\n    E 13\n    E 13\n    E 13\n    E 13\n    E 13\n    O 5\n    E 4\n    O 9\n    E 9\n    E 9\n    E 9\n    O 4\n    E 4\n    O 4\n    O 4\n    O 4\n    E 4\n    E 4\n    E 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    O 4\n    E 4\n    O 4\n    E 4\n    E 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    E 4\n    E 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    E 4\n    E 4\n    O 4\n    E 4\n    E 4\n    E 4\n    O 4\n    E 4\n    E 4\n    E 4\n    E 4\n    E 4\n    O 4\n    E 4\n    O 4\n    O 4\n    O 4\n    E 4\n    O 4\n    O 4\n    E 4\n    O 4\n    O 4\n    E 4\n    E 4\n    O 4\n    O 4\n    E 4\n    E 4\n    E 4\n    O 4\n    E 4\n    O 4\n    O 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    O 4\n    E 4\n    O 4\n    E 4\n    E 4\n    O 4\n    E 4\n    O 4\n    O 4\n    O 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    E 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    E 4\n    O 4\n    E 4\n    E 4\n    E 4\n    O 4\n    O 4\n    O 4\n    E 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    E 4\n    E 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    E 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O 4\n    O"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1 2 4\"\nassert solution(\"2\") == \"1 2 4\"\nassert solution(\"3\") == \"1 2 3\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4 5 7 9'\nassert solution('2') == '1 2 3 5 6 7 8 10 11 13 14 15 16 17 19 20'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nO 4\\nO 2\\n') == '2 1 4'\n\nassert solution('4\\nO 4\\nI 2\\nO 4\\nO 6\\nO 4\\n') == '1 1 4'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nO 4\\n') == '1 2 4'\nassert solution('1\\nO 4\\n') == '2 1 4'\nassert solution('1\\nO 4\\n') == '1 2 4'\nassert solution('1\\nI 4\\n') == '2 1 4'\nassert solution('1\\nI 4\\n') == '1 2 4'\n\"\"\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nO 4') == '2 1 4'\nassert solution('1\\nO 4\\nO 4') == '2 1 4'\nassert solution('1\\nO 4\\nI 4') == '2 1 4'\nassert solution('3\\nO O O\\nO O O') == '1 1 1'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nO 5\nO 5\nO 3\nE 4\nI 4\nO 5\nO 3\nE 4\nE 3\nO 3\nI 2\n''') == '1 2 1 4'\nassert solution('''\nO 4\nO 4\nE 4\nI 4\nE 4\nI 4\nE 4\nI 4\nE 3\nO 3\nE 3\nO 3\nI 2\nI 2\n''') == '1 2 1 4'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 O 5\n1 E 2\n2 O 3\n3 E 3\n4 O 6\n1 E 7\n''') == '1 2 6 5 3'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nO 4\\n') == '2 1 4'\nassert solution('2\\nE 4\\n') == '4 3 2'\nassert solution('4\\nI 4\\n') == '1 2 2'"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 1 4 5\n5 1 12 4\n5 5 9 10\n''') == '4'\nassert solution('''\n5\n2 1 4 5\n5 1 12 4\n5 5 9 10\n''') == '4'\nassert solution('''\n6\n2 1 4 5\n3 1 6 4\n5 1 12 4\n5 5 9 10\n1 6 4 10\n''') == '3'\nassert solution('''\n3\n1 1 1\n1 1 1\n1 1 1\n''') == '1'\nassert solution('''\n3\n1 1 1\n1 1 1\n1 1 1\n''') == '0'\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 8') == '4'\nassert solution('10 8') == '1'\nassert solution('50 8') == '0'\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n'''\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nassert solution('10 1 12 4\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '5'\nassert solution('1 1 1 1\\n2 1 1 2\\n2 1 1 2\\n2 1 1 2\\n1 1 1 1') == '3'\nassert solution('6 5 9 5\\n2 4 9 4\\n4 4 4 4\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7') == '2'\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '4'\nassert solution('5 1 12 4') == '1'\nassert solution('5 5 9 10') == '5'\nassert solution('1 6 4 10') == '1'\nassert solution('2 11 7 14') == '4'\n\"\"\"\n\nfrom math import sin, cos, pi"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n\"\"\") == \"4\""
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 5\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '5 8\\n'\n    '2 1 4 5\\n'\n    '5 1 12 4\\n'\n    '5 5 9 10\\n'\n    '1 6 4 10\\n'\n    '2 11 7 14\\n'\n) == '4'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.9888978\"\nassert solution(\"9 99 9 99 9\") == \"9.9888978\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('99 99.99 9999.99') == '9.585073'\nassert solution('99 999.99 9999.99') == '9.585073'\nassert solution('9 999.99 9999.99') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('-99.99 99.99 9999.99') == \"9.585073\"\nassert solution('99 9 999 9999') == \"9.585073\"\nassert solution('9 99 9 99 9') == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('99.99 99.99 9999.99') == '9.585073'\n\"\"\"\n\nimport math\nimport re\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.1\\n99.99 9999.99') == '9.585073'\nassert solution('1.1\\n99.99 9999.99') == '9.585073'\nassert solution('99.99 99.99 9999.99\\n9 9 999 9999\\n9 9 999 9999') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.591611'\nassert solution('9 99 9 99 9') == '9.591611'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\nassert solution('9 99 9 99 9') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('-99.99 99.99 9999.99') == \"9.585073\"\nassert solution('99 9 999 9999') == \"9.9999\"\nassert solution('9 99 9 99 9') == \"9.9999\"\nassert solution('9 99 9 9 9') == \"9.9999\"\nassert solution('9 999 9 999 9') == \"9.9999\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\nassert solution('9 99 9 99 9') == '9.585073'\n\"\"\""
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 0') == 'impossible'\nassert solution('5 1') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 30\") == \"12.74 127.83\"\nassert solution(\"5 5\") == \"0.00 0.00\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\nassert solution('''\n1 1\n1 1\n1 1\n''') == 'impossible'\n'''"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 30\") == \"12.74 127.83\"\nassert solution(\"20 40\") == \"impossible\"\nassert solution(\"30 40\") == \"impossible\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20 30') == '12.74 127.83'\nassert solution('10 10') == '12.74 12.74'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20 30\") == \"12.74 127.83\"\n\nassert solution
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10\\n') == '12.74 127.83'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\nassert solution('''2 10 20 2 24 18 28 10\n''') == 'impossible'\nassert solution
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\nassert solution('''\n10 10\n10 10 5 10 10 10 10\n''') == 'impossible'\nassert solution('''\n10 10\n1 1 3 2 4 2 2\n''') == 'impossible'\nassert solution('''\n10 10\n1 1 3 2 4 2 2\n3 3 3 3 3 3 3 3 3 3\n''') == 'impossible'\nassert solution('''\n20 20\n0 0 0 1 0 1 0 1 0 1 0\n0 0 0 1 0 1 0 1 0 1 0\n''') == 'impossible'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"1 2\") == \"impossible\"\nassert solution(\"1 2 3\") == \"impossible\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    110\n    6\n    ''') == '016'\nassert solution('''\n    1000\n    1000\n    ''') == '0011011'\n''')\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0 1\n1 0 1\n0 0 1\n''') == '0116'\n\nassert solution('''\n2\n0 0 1\n1 0 1\n''') == '10010'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n110\\n6') == '1610'\nassert solution('5\\n10 20 10 30 50') == '52003050'\nassert solution('10\\n10 10 10 10 10 10 10 10 10 10 10 10') == '1001000100000'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1') == '1001000100000'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n110\n6\n\"\"\") == \"0116\"\nassert solution(\"\"\"\n1\n110\n6\n\"\"\") == \"0246\"\nassert solution(\"\"\"\n2\n10\n10\n\"\"\") == \"02400\"\nassert solution(\"\"\"\n1\n100\n0\n\"\"\") == \"01\"\nassert solution(\"\"\"\n1\n0\n0\n\"\"\") == \"00\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'\nassert solution('2\\n1\\n0\\n') == '0'\nassert solution('1\\n0\\n1\\n') == '0'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n110\\n\") == \"0116\"\nassert solution(\"2\\n110\\n1\\n\") == \"0111\"\nassert solution(\"2\\n110\\n5\\n\") == \"0110\"\nassert solution(\"2\\n110\\n100\\n\") == \"0110\"\nassert solution(\"2\\n110\\n55\\n\") == \"0101\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(['2', '110', '6']) == '0116'\nassert solution(['1', '110', '6']) == '01110'\n\"\"\"\n\nn = int(input())\nm = []\nfor i in range(n):\n    m.append(input().split())\n\nm.sort(key=lambda x: ''.join(x))\nm.sort(key=lambda x: int(''.join(x)))\nm.sort(key=lambda x: int(''.join(x)))\n\nprint(''.join(m))"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n110\\n6') == '16110'"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n110\n6\n''') == '0116'\nassert solution('''\n2\n6\n6\n''') == '0116'\nassert solution('''\n2\n9\n9\n''') == '929'\nassert solution('''\n4\n1\n2\n3\n4\n''') == '1234'\nassert solution('''\n2\n1\n3\n4\n''') == '3412'\n'''"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n110\\n6') == '0116'\nassert solution('2\\n111\\n6') == '00111'\nassert solution('2\\n110\\n9') == '00110'\nassert solution('2\\n109\\n9') == '00109'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 1\n4 1 1\n4 3 4\n4 4 3\n3 4 4\n\"\"\") == \"3 0 1 2\"\nassert solution(\"\"\"\n7 2\n4 1 4 1\n4 1 4\n\"\"\") == \"4 0 1 1 2 2\"\nassert solution(\"\"\"\n3 10\n3 1 4\n1 2 3\n\"\"\") == \"1 2 1 3\"\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == '0 2 4'\nassert solution('7 3') == '0 1 2'\nassert solution('10 3') == '0 1 3 5 6 8 9 10'\nassert solution('1 100') == '1 1 1'\nassert solution('10 10') == '10 10 10 10 10 10 10 10 10'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n8 3\n1 4 2\n\"\"\") == \"0 2\"\nassert solution(\"\"\"\n8 3\n4 5 4\n\"\"\") == \"2 2\"\nassert solution(\"\"\"\n8 3\n1 3 2\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n8 3\n2 2 2\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n8 3\n1 2 3\n\"\"\") == \"2 3\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"20 2\\n10 1 3\\n9 5 8\\n16 9 8 8\") == \"5 3 3 8\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8 3\n4 4 4\n''') == '0 2 4'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 3\") == \"0 2 4\"\nassert solution(\"8 3 2\") == \"0 1 4\"\nassert solution(\"8 3 3\") == \"0 1 2 3\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n8 3\n4 4 4\n\"\"\") == \"0 2 4\"\nassert solution(\"\"\"\n10 2\n1 2\n\"\"\") == \"5 1\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n0 1 5\\n0 2 4') == '0 2'\nassert solution('2 4\\n4 2 1') == '0 0'\nassert solution('5 8\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1 2 3') == '0 0 0 0 0'\n\"\"\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 3\n4 4 4''') == '0 2 4'''\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"0 2 4\""
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'impossible'\nassert solution('2') == 'possible'\nassert solution('4') == 'impossible'"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''\n5\n8\n0 4\n1 4\n2 6\n3 7\n4 8\n5 6\n6 8\n7 6\n8 9\n5 7\n6 9\n7 9\n8 7\n9 8\n5 6\n6 7\n7 8\n8 9\n9 6\n''') == 'impossible'\nassert solution('''\n10\n10\n1 4\n1 3\n1 5\n3 3\n1 2\n1 6\n3 4\n5 6\n2 6\n4 5\n5 5\n7 7\n7 9\n7 8\n3 7\n5 6\n4 6\n8 6\n6 7\n8 8\n2 7\n4 5\n5 4\n5 5\n7 8\n5 6\n6 4\n8 8\n7 6\n9 8\n2 6\n5 6\n6 6\n5 7\n6 7\n8 7\n7 9\n8 7\n9 7\n2 6\n6 7\n9 8\n6 8\n8 9\n7 9\n8 6\n9 6\n5 6\n3 5\n4 5\n''') == 'impossible'\nassert solution('''\n5\n10\n1 4\n1 3\n1 5\n3 3\n1 2\n1 6\n3 4\n5 6\n2 6\n4 5\n5 5\n7 7\n7 9\n7 8\n3 7\n5 6\n4 6\n8 6\n6 7\n8 8\n2 7\n4 5\n5 4\n5 5\n7 8\n5 6\n6 4\n8 8\n7 6\n9 8\n2 6\n5 6\n6 4\n5 7\n6 7\n8 7\n7 9\n8 7\n9 7\n2 6\n6 7\n9 8\n6 8\n8 9\n7 9\n8 6\n9 6\n5 6\n3 5\n4 5\n''') == 'possible'\nassert solution('''\n2\n6\n0 1 3\n0 2 3\n0 3 1\n0 4 1\n0 5 1\n1 0 1\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n2 0 1\n2 1 2\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 0 1\n3 0 2\n3 1 3\n3 2 2\n3 3 3\n3 4 4\n3 5 5\n3 6 6\n3 7 7\n3 8 8\n3 9 9\n4 0 1\n4 1 4\n4 2 2\n4 3 3\n4 4 4\n4 5 5\n4 6 6\n4 7 7\n4 8 8\n4 9 9\n5 0 1\n5 1 5\n5 2 2\n5 3 3\n5 4 4\n5 5 5\n5 6 6\n5 7 7\n5 8 8\n5 9 9\n6 0 1\n6 1 6\n6 2 2\n6 3 3\n6 4 4\n6 5 5\n6 6 6\n6 7 7\n6 8 8\n6 9 9\n7 0 1\n7 1 7\n7 2 2\n7 3 3\n7 4 4\n7 5 5\n7 6 6\n7 7 7\n7 8 8\n7 9 9\n8 0 1\n8 1 8\n8 2 2\n8 3 3\n8 4 4\n8 5 5\n8 6 6\n8 7 7\n8 8 8\n8 9 9\n9 0 1\n9 1 9\n9 2 2\n9 3 3\n9 4 4\n9 5 5\n9 6 6\n9 7 7\n9 8 8\n9 9 9\n''') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == 'impossible'\nassert solution('7') == 'impossible'\nassert solution('2 2 4') == 'possible'\nassert solution('3 1 3 5') == 'possible'\nassert solution('1 2') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2\n4\n''') == 'impossible'\nassert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''\n3\n4\n1 2\n3 2\n''') == 'possible'\nassert solution('''\n10\n1 2 4\n2 3 4 5 6 7 8 9 10\n1 3 5 6\n1 4 5\n2 4 3\n3 4 2\n3 6 4\n5 3 4\n5 6 7\n4 3 5\n4 5 6\n6 3 5\n6 5 7\n5 6 7\n''') == 'impossible'"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\n\nassert solution('''5\n8\n1 2 3 4 5 6 7\n2 5 3 4 1 7\n1 4 3 2 5 7\n3 1 4 2 5 7\n4 6 5 2 1 7\n5 2 6 1 4 7\n3 1 6 2 5 7\n''') == 'impossible'\n\nassert solution('''6\n10\n3 3 3 1 2 5 6 7 7 8 8\n2 8 5 4 1 3 2 6 7 7\n1 5 6 6 7 4 5 3 2 8\n3 1 4 3 4 1 6 7 8\n8 1 8 6 8 4 5 1 2\n5 7 7 5 2 3 4 8 1\n4 1 5 6 6 7 8 8 8\n8 3 4 2 6 5 4 1 3\n7 2 6 7 4 5 1 6 8\n1 5 5 3 6 7 3 8 9\n''') == 'impossible'\n\nassert solution('''6\n4\n1 2 2 1 3 3\n1 2 1 2 3\n1 3 1 3 2\n1 3 2 2 2\n2 1 3 3 2\n2 2 2 1 3\n1 3 3 3 1\n''') == 'impossible'\n\nassert solution('''4\n6\n3 1 5\n2 4 6\n2 5 2\n1 3 3\n1 4 5\n3 2 1\n1 1 6\n1 4 1\n2 2 5\n''') == 'possible'"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\n\nassert solution('''\n3\n1 3\n1 2\n2 1\n''') == 'impossible'\n\nassert solution('''\n4\n4\n1 2\n2 3\n3 4\n''') == 'possible'\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n''') == 'impossible'\n\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1 1 1 1\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1 2 1 2\n1 2 1 2 1 2 1 2 1"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7') == 'impossible'\nassert solution('5\\n4\\n4\\n1 2\\n2 1\\n1 2\\n4 2 6 4 7') == 'impossible'\nassert solution('1\\n5\\n3\\n5 1 2 2\\n2 3\\n2 1 3 4') == 'impossible'\nassert solution('1\\n5\\n3\\n5 1 2 2\\n2 3\\n2 1 3 4\\n3 2') == 'impossible'\nassert solution('3\\n4\\n3\\n2 1 2 3\\n1 2\\n2 1 3 4\\n1 3') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == 'impossible', solution\nassert solution('5') == 'impossible', solution\nassert solution('7') == 'possible', solution\nassert solution('10') == 'impossible', solution\nassert solution('13') == 'impossible', solution\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4\\n\"\n    \"7\\n\"\n    \"2 2 4\\n\"\n    \"3 1 3 5\\n\"\n    \"1 2\\n\"\n    \"2 1 5\\n\"\n    \"4 2 6 4 7\\n\"\n    \"2 5 7\\n\"\n    \"2 6 5\\n\"\n    \"Sample Output:\n    impossible\"\n) == \"impossible\"\nassert solution(\n    \"4\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"10\\n\"\n    \"11\\n\"\n    \"12\\n\"\n    \"13\\n\"\n    \"14\\n\"\n    \"15\\n\"\n    \"16\\n\"\n    \"17\\n\"\n    \"18\\n\"\n    \"19\\n\"\n    \"20\\n\"\n    \"21\\n\"\n    \"22\\n\"\n    \"23\\n\"\n    \"24\\n\"\n    \"25\\n\"\n    \"26\\n\"\n    \"27\\n\"\n    \"28\\n\"\n    \"29\\n\"\n    \"30\\n\"\n    \"31\\n\"\n    \"32\\n\"\n    \"33\\n\"\n    \"34\\n\"\n    \"35\\n\"\n    \"36\\n\"\n    \"37\\n\"\n    \"38\\n\"\n    \"39\\n\"\n    \"40\\n\"\n    \"41\\n\"\n    \"42\\n\"\n    \"43\\n\"\n    \"44\\n\"\n    \"45\\n\"\n    \"46\\n\"\n    \"47\\n\"\n    \"48\\n\"\n    \"49\\n\"\n    \"50\\n\"\n    \"51\\n\"\n    \"52\\n\"\n    \"53\\n\"\n    \"54\\n\"\n    \"55\\n\"\n    \"56\\n\"\n    \"57\\n\"\n    \"58\\n\"\n    \"59\\n\"\n    \"60\\n\"\n    \"61\\n\"\n    \"62\\n\"\n    \"63\\n\"\n    \"64\\n\"\n    \"65\\n\"\n    \"66\\n\"\n    \"67\\n\"\n    \"68\\n\"\n    \"69\\n\"\n    \"70\\n\"\n    \"71\\n\"\n    \"72\\n\"\n    \"73\\n\"\n    \"74\\n\"\n    \"75\\n\"\n    \"76\\n\"\n    \"77\\n\"\n    \"78\\n\"\n    \"79\\n\"\n    \"80\\n\"\n    \"81\\n\"\n    \"82\\n\"\n    \"83\\n\"\n    \"84\\n\"\n    \"85\\n\"\n    \"86\\n\"\n    \"87\\n\"\n    \"88\\n\"\n    \"89\\n\"\n    \"90\\n\"\n    \"91\\n\"\n    \"92\\n\"\n    \"93\\n\"\n    \"94\\n\"\n    \"95\\n\"\n    \"96\\n\"\n    \"97\\n\"\n    \"98\\n\"\n    \"99\\n\"\n    \"100\\n\"\n    \"101\\n\"\n    \"102\\n\"\n    \"103\\n\"\n    \"104\\n\"\n    \"105\\n\"\n    \"106\\n\"\n    \"107\\n\"\n    \"108\\n\"\n    \"109\\n\"\n    \"110\\n\"\n    \"111\\n\"\n    \"112\\n\"\n    \"113\\n\"\n    \"114\\n\"\n    \"115\\n\"\n    \"116\\n\"\n    \"117\\n\"\n    \"118\\n\"\n    \"119\\n\"\n    \"120\\n\"\n    \"121\\n\"\n    \"122\\n\"\n    \"123\\n\"\n    \"124\\n\"\n    \"125\\n\"\n    \"126\\n\"\n    \"127\\n\"\n    \"128\\n\"\n    \"129\\n\"\n    \"130\\n\"\n    \"131\\n\"\n    \"132\\n\"\n    \"133\\n\"\n    \"134\\n\"\n    \"135\\n\"\n    \"136\\n\"\n    \"137\\n\"\n    \"138\\n\"\n    \"139\\n\"\n    \"140\\n\"\n    \"141\\n\"\n    \"142\\n\"\n    \"143\\n\"\n    \"144\\n\"\n    \"145\\n\"\n    \"146\\n\"\n    \"147\\n\"\n    \"148\\n\"\n    \"149\\n\"\n    \"150\\n\"\n    \"151\\n\"\n    \"152\\n\"\n    \"153\\n\"\n    \"154\\n\"\n    \"155\\n\"\n    \"156\\n\"\n    \"157\\n\"\n    \"158\\n\"\n    \"159\\n\"\n    \"160\\n\"\n    \"161\\n\"\n    \"162\\n\"\n    \"163\\n\"\n    \"164\\n\"\n    \"165\\n\"\n    \"166\\n\"\n    \"167\\n\"\n    \"168\\n\"\n    \"169\\n\"\n    \"170\\n\"\n    \"171\\n\"\n    \"172\\n\"\n    \"173\\n\"\n    \"174\\n\"\n    \"175\\n\"\n    \"176\\n\"\n    \"177\\n\"\n    \"178\\n\"\n    \"179\\n\"\n    \"180\\n\"\n    \"181\\n\"\n    \"182\\n\"\n    \"183\\n\"\n    \"184\\n\"\n    \"185\\n\"\n    \"186\\n\"\n    \"187\\n\"\n    \"188\\n\"\n    \"189\\n\"\n    \"190\\n\"\n    \"191\\n\"\n    \"192\\n\"\n    \"193\\n\"\n    \"194\\n\"\n    \"195\\n\"\n    \"196\\n\"\n    \"197\\n\"\n    \"198\\n\"\n    \"199\\n\"\n    \"200\\n\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'possible'\nassert solution('5') == 'possible'\nassert solution('10') == 'impossible'\nassert solution('15') == 'impossible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n0 0\n2\n0 10\n\"\"\") == \"1.00000\"\nassert solution(\"\"\"\n2\n0 0\n1\n2\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\nassert solution('''\n5\n0 0\n0 10\n5 5\n5 0\n''') == 'impossible'\n''')\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '4.00000'\nassert solution('1') == 'Impossible'\nassert solution('0') == '4.00000'\nassert solution('0 0') == '4.00000'\nassert solution('0 10') == '4.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2.00000'\nassert solution('3') == 'impossible'\nassert solution('4') == '3.00000'\n\"\"\""
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\nassert solution('4') == 'impossible'"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\nassert solution('''\n0 0\n0 10\n2\n4 10\n4 0\n''') == 'impossible'\nassert solution('''\n0 0\n0 10\n2\n10 10\n4 0\n''') == 'impossible'\nassert solution('''\n0 0\n0 10\n2\n10 10\n4 0\n''') == '4.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n0 0\n0 10\n2\n4 10\n4 0\n\"\"\") == \"4.00000\"\nassert solution(\"\"\"\n2\n0 0\n0 10\n2\n4 10\n4 0\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\n\nassert solution('''\n10\n-1 1\n0 0\n0 10\n2\n4 10\n4 0\n''') == 'impossible'\n\nassert solution('''\n2\n-1 1\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\n\nassert solution('''\n3\n-1 1\n0 0\n0 10\n2\n4 10\n4 0\n''') == 'impossible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2') == '4.00000'\nassert solution('3\\n1 0\\n2 5\\n2 3\\n3 1\\n4 1\\n4 0\\n') == 'impossible'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n1 3\\n2 2') == '1'\nassert solution('3 3 4\\n1 1\\n2 2\\n1 2') == '0'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1\\n'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '0'\n'''\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2 5\") == \"1\"\nassert solution(\"3 2 5\") == \"0\"\nassert solution(\"3 2 6\") == \"1\"\nassert solution(\"2 5 4\") == \"1\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    4 4 4\n    1 1\n    1 3\n    3 1\n    3 3\n    2 2\n''') == '1'\nassert solution('''\n    7 7 7\n    3 3\n    3 3\n    3 1\n    3 1\n    3 1\n    3 3\n    2 3\n    2 2\n    2 2\n''') == '0'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('\\n'.join(['3 2 5',\n            '1 1',\n            '1 3',\n            '3 1',\n            '3 3',\n            '2 2',\n            '2 2',\n            '2 2'])) == '1'\n\nassert solution('\\n'.join(['5 5',\n            '1 1',\n            '1 3',\n            '2 2',\n            '2 4',\n            '3 4',\n            '3 2',\n            '3 3',\n            '2 4'])) == '0'\n\nassert solution('\\n'.join(['4 4',\n            '1 1',\n            '1 2',\n            '2 1',\n            '2 2'])) == '1'\n\nassert solution('\\n'.join(['3 3',\n            '1 1',\n            '2 2',\n            '2 2',\n            '2 2',\n            '1 2',\n            '1 1',\n            '2 2'])) == '0'"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n\") == \"1\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1', 'Should return 1'\nassert solution('3 4 5\\n2 1\\n3 1\\n3 1\\n3 1\\n3 2\\n3 2\\n3 2\\n') == '0', 'Should return 0'\nassert solution('10 10 10\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n') == '1', 'Should return 1'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2 5\n1 1\n1 3\n3 1\n3 3''') == '1'\nassert solution('''5 2 4\n1 1\n1 3\n2 3\n2 3\n3 4''') == '0'\nassert solution('''2 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\nSample Output:\n1\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 2 5\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 3\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1 2 0\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n\"\"\") == \"\"\"5 3\n1 0\n2 4\n\"\"\"\n\nassert solution(r\"\"\"5 4\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n\"\"\") == \"\"\"impossible\"\"\"\n\nassert solution(r\"\"\"4 5\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n\"\"\") == \"\"\"impossible\"\"\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"3 1\\n2 0\\n2 1\\n1 0\""
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '3 1 0 4 3'\nassert solution('5 6') == '1 0 2 4 3'\nassert solution('0 1') == '0 1'\nassert solution('0 1') == '0 1'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n5 2') == '5 0'\nassert solution('5\\n7 1') == '7 2'\nassert solution('1\\n0 1') == 'impossible'"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '3 4'\nassert solution('0 1') == '1 0'\nassert solution('2 3') == '0 2'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '5 3\\n1 0\\n2 4'\nassert solution(\n'''\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '5 4'\n'''\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"5 3\"\nassert solution(\"7 8\") == \"7 8\"\nassert solution(\"8 9\") == \"7 8\"\nassert solution(\"10 11\") == \"9 10\"\nassert solution(\"12 13\") == \"12 13\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '3 4'\nassert solution('10 5') == '0 4'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '5 3'\nassert solution('7 7') == '0 1'\nassert solution('10 10') == '0 1'\nassert solution('0 0') == 'impossible'\nassert solution('1 1') == 'impossible'"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1 2'\nassert solution('5 1') == '1 2 3 4 5'\nassert solution('6 1') == '1 2 3 4 5 6'\nassert solution('6 1') == '1 2 3 4 5 6'\nassert solution('9 1') == '1 2 3 4 5 6 7 8 9'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == '2'\nassert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == '2'\nassert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''5 5\n1 1\n0 1\n1 0\n0 0\n1 1''') == '1'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 1\n0 0\n0 1\n1 0\n1 1\n''') == '2\n'''\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1') == '2'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n0 0\n1 1\n''') == \"1 2\"\n\nassert solution('''\n2 2\n0 0\n1 1\n''') == \"2\"\n\nassert solution('''\n2 3\n0 0\n1 1\n0 0\n1 2\n''') == \"3\"\n\nassert solution('''\n2 3\n0 0\n1 1\n0 0\n1 2\n''') == \"2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2 1 2'\nassert solution('4 1') == '2 1 2'\nassert solution('0 0') == '1'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 1\n0 0\n0 1''') == '2'\nassert solution('''2 1\n0 0\n0 1''') == '1'\nassert solution('''2 1\n0 0\n0 1''') == '1'\n\nimport sys\nn, d = map(int, sys.stdin.readline().split())\n\ninput = sys.stdin.readline\n\nsensors = []\nfor i in range(n):\n    sensors.append((int(input()), i + 1))"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 2') == '1 2'\nassert solution('3 3') == '3'\nassert solution('5 5') == '3 4 5'\nassert solution('10 10') == '5 6 7 8 9 10'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == '2'\nassert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == '3'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1') == '2\\n1 2'\nassert solution('6 3') == '4\\n1 3'\nassert solution('100 3') == '25\\n2 3'\nassert solution('500 3') == '256\\n8 3'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 4 6 9') == '1'\nassert solution('2\\n1 2 4 5') == '1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nassert solution('10 3') == '1'\nassert solution('1 1') == '0'\nassert solution('10 3') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n10 1\n1 2\nSample Input:\n10 1\n2 1\nSample Output:\n0\n''') == '0'\nassert solution('''\n10 3\n1 3 5 7 9 11 13 15 17 16\nSample Output:\n-1\n''') == '-1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n10 2\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    10 2\n    1 3 5 7 9 11 13 15 17 16\n    ''') == '1'\n    \n    \n    \n    \n''')\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n2 1\n''') == '1'\nassert solution('''\n3 4\n3 4 5 6\n''') == '1'\nassert solution('''\n4 5\n3 4 5 6 7\n''') == '0'\nassert solution('''\n5 6\n2 5 4 5 7\n''') == '2'\nassert solution('''\n6 7\n4 5 4 5 5 6\n''') == '0'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nprint('all test cases passed...')\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"7 4\"\n\nassert solution() == \"3 7\"\n\nassert solution() == \"7 4\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4\\n'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([7, 5, 'ACDBB', 5, 6, 8, 9, 4, 13, 1, 10, 7, 4, 10, 9, 3, 7]) == \"7 4\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([7, 5, 'ACDBB']) == '7 4'\nassert solution([5, 6, '8 9']) == '5 6'\nassert solution([8, 9, '4 13']) == '8 9'\nassert solution([4, 13, '1 10']) == '4 13'\nassert solution([1, 10, '7 4']) == '1 10'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"7 4\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n\"\"\") == \"7 4\"\nassert solution(\"\"\"\n5 1\nDDDD\n3 4\nDDDD\nDDDD\nDDDD\n\"\"\") == \"5 4\"\nassert solution(\"\"\"\n5 3\nDAD\nDCB\nDD\nBDB\nDD\n\"\"\") == \"5 1\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7') == '7 4'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4'"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 LET A = 1\\n2 PRINT \" \"HELLO THERE \" \"A\") == \"HELLO THERE 1\"\nassert solution(\"1 LET A = 1\\n2 PRINTLN \" \"HELLO THERE \" \"A\") == \"HELLO THERE 1\""
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n\"\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nassert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN A\\n70 IF A <= 5 THEN GOTO 60\\n80 PRINTLN A\\n90 IF A <= 5 THEN GOTO 60\\n50 IF A <= 5 THEN GOTO 20\\n70 PRINTLN A\\n80 PRINTLN A\\n90 PRINTLN A\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\nDONE\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nprint(solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n'''))"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE'\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nassert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE'\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 0 1') == '3'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('3 0 1') == '3'\nassert solution('0 1') == '3'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 0 1\n0 1\n2 1\n''') == '3'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('3 0 1') == '3'\nassert solution('0 1') == '2'\nassert solution('0 1 0 1') == '3'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n3 0 1\n0 1''') == \"3\"\nassert solution('''5\n5 1 1 1 1\n1 1 1 1''') == \"5\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 0 1\n0 1\nSample Input 2:\n5\n4 1 0 2\n0 2\nSample Output 2:\n6\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n0 1') == '3'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '6'\nassert solution('4') == '1'\n\nimport math\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"LLRRRRLL\"\nassert solution(\"5\") == \"LLRLRRLR\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 5\\n2 3\") == \"LLRLRRLR\"\nassert solution(\"2 5\\n2 3\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"4 5\\n3 4\\n3 4\") == \"impossible\"\nassert solution(\"2 3\\n3 5\\n1 3\") == \"LRLLRLRL\"\nassert solution(\"1 3\\n3 5\\n2 3\") == \"LRLRRLR\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'LRLR'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'LLRRRRLL'\nassert solution('1\\n2\\n1\\n3\\n2\\n1\\n1\\n3\\n') == 'impossible'\n\n'''\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\n    '3',\n    '1 3',\n    '1 2',\n    '2 5',\n    '3 5',\n    '2 3',\n    '1 3',\n    '3 5',\n    '4 5',\n    '3 4',\n    '1 3',\n]) == 'LLRRRRLL'\nassert solution([\n    '4',\n    '1 2',\n    '1 3',\n    '1 4',\n    '2 4',\n    '3 4',\n    '2 3',\n    '2 4',\n    '3 4',\n    '3 5',\n    '4 5',\n    '3 4',\n]) == 'RRRRRRLL'\nassert solution([\n    '5',\n    '1 2',\n    '1 3',\n    '1 4',\n    '1 5',\n    '2 4',\n    '2 5',\n    '3 4',\n    '3 5',\n    '4 5',\n    '4 6',\n    '5 6',\n    '4 5',\n    '5 4',\n    '5 4',\n    '4 5',\n    '4 5',\n    '5 4',\n    '4 5',\n    '4 5',\n    '4 5',\n    '4 5',\n    '4 5',\n    '5 4',\n    '5 4',\n    '4 5',\n    '4 5',\n    '4 5',\n    '4 5',\n    '4 5',\n    '5 4',\n    '5 4',\n    '4 5',\n    '4 5',\n    '5 4',\n    '5 4',\n    '4 5',\n    '4 5',\n    '4 5',\n    '4 5',\n    '4 5',\n    '5 4',\n    '5 4',\n    '4 5',\n    '4 5',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5 4',\n    '5"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL'\nassert solution('10\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\n    \"1 2\",\n    \"2 5\",\n    \"2 3\",\n    \"1 3\",\n    \"3 5\",\n    \"4 5\",\n    \"3 4\",\n    \"1 3\",\n]) == \"LLRRRRLL\"\nassert solution([\n    \"1 2\",\n    \"2 5\",\n    \"2 3\",\n    \"1 3\",\n    \"3 5\",\n    \"4 5\",\n    \"3 4\",\n    \"1 3\",\n    \"1 4\",\n    \"4 5\",\n    \"3 4\",\n    \"1 3\",\n
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL'\nassert solution('3\\n1 2\\n2 5\\n3 4\\n1 3') == 'impossible'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n') == 'LLRRRRLL'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n') == 'RRRLLRLRRLL'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n') == 'LLRRRRLL'\nassert solution('4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2') == 'LLRRRRLL'\nassert solution('5\\n1 2\\n2 5') == 'LLRRRRLL'\nassert solution('5\\n1 2\\n2 5\\n2 3') == 'LLRLRRLR'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3') == 'LLRLRRLR'\nassert solution('5\\n1 2\\n2 3\\n2 3') == 'impossible'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1\\n2011\\n'\nprint('Solution:', solution(__import__('sys').stdin.read()))\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1009 2011\n1017 2011\nSample Output:\n1\n2011\n''') == '1\\n2011\\n'\nprint('All tests passed!')\n\nSample Input:\n2\n1009 2011\n1017 2011\nSample Output:\n2\n2011\n''')"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1009 2011\n1017 2011\n1018 2011\nSample Output:\n0\n''') == '0\\n'\nassert solution('''\n5\n1009 2011\n1017 2011\n1018 2011\n1019 2011\n1016 2011\nSample Output:\n1\n2011\n''') == '1\\n'\nassert solution('''\n6\n1009 2011\n1017 2011\n1018 2011\n1019 2011\n1016 2011\n1015 2011\nSample Output:\n2\n2011\n''') == '2\\n'\nassert solution('''\n1\n1009 2011\n1017 2011\n1018 2011\n1019 2011\n1016 2011\n1015 2011\n1009\nSample Output:\n0\n''') == '0\\n'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1001 2010\\n1017 2011') == '1\\n2011'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1009 2011') == '2011'\nassert solution('2\\n1009 2011') == '2011'\nassert solution('2\\n1017 2011') == '2011'\nassert solution('2\\n1009 1017') == '1017'\nassert solution('2\\n1009 1009') == '1009'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution(\"2\") == \"2011\"\nassert solution(\"10\") == \"2011\"\nassert solution(\"1000\") == \"2011\"\nassert solution(\"1010\") == \"2011\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 4\\n\" +\n    \"0 1 100\\n\" +\n    \"0 2 100\\n\" +\n    \"1 3 100\\n\" +\n    \"2 3 100\\n\" +\n    \"0 3\"\n) == \"0 3\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3'\n\"\"\"\n\n\nclass Solution:\n    def __init__(self):\n        self.min_w = None\n        self.visited = {}\n\n    def dfs(self, v, w, parent):\n        if w not in self.visited:\n            self.visited[w] = parent\n            self.min_w = min(self.min_w, w) if self.min_w else w\n        for i in self.G[w]:\n            if i!= parent:\n                self.dfs(w, i, w)\n\n    def solve(self, stdin: str):\n        self.G = {}\n        self.G[0], self.G[1] = [2], [2]\n        self.G[2], self.G[3] = [2, 4], [2, 4]\n        self.G[4], self.G[5] = [2, 3, 4], [2, 3, 4]\n        self.G[6], self.G[7] = [], [5]\n        self.G[8], self.G[9] = [], [8]\n        for x, y, z in stdin.split():\n            self.G[int(x)], self.G[int(y)] = self.G.get(int(x), []), self.G.get(int(y), [])\n            self.G[int(x)].append(int(y))\n            self.G[int(y)].append(int(x))\n        self.visited = {}\n        self.dfs(0, 1, None)\n        return str(self.min_w)\n\n\nprint(Solution().solve(stdin))\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\nassert solution(\"2 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n1 5\\nSample Output:\") == \"0 3\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"1,2,3,4\", \"1\"\nassert solution(\"10 2 8 1\") == \"9,8,7,6,5,4,3,2,1,0\", \"10\"\nassert solution(\"2 3 4\") == \"2,1,0\", \"2\"\nassert solution(\"4 4\") == \"2,1,0\", \"4\"\nassert solution(\"6 4\") == \"3,4,0,1\", \"6\"\nprint(\"The local tests seem to be passing.\")"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n') == '0 3'\n\"\"\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3'\nassert solution('1 2\\n3 1\\n1 4\\n1 1\\n4 1\\n2 1\\n3 1\\n2 1') == '1 2'\nassert solution('0\\n') == '0'\nassert solution('2\\n') == '1'\nassert solution('2\\n') == '1'\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '20'\nassert solution('''2.0 10.0\n3 4 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '18.25'\nassert solution('''2.0 10.0\n3 5 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '17.5'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2.0 10.0') == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2.0 10.0') == '20'\nassert solution('2.0 20.0') == '20'\nassert solution('2.0 10.0') == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2.0 10.0') == '20'\nassert solution('2.0 20.0') == '14'\nassert solution('2.0 100.0') == '100'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2.0 10.0') == '20'"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2.0 10.0') == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\n\"\"\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"20\"\nassert solution(\"2.0 10.0\") == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.0 10.0') == '20'\nassert solution('2.0 10.0') == '20'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\") == \"4\"\nassert solution(\"2\\n0 2 1\\n1 0\\n1 1\\n\") == \"1\""
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '4'\nassert solution('3\\n0 2 3\\n0 1 3\\n1 3 2\\n') == '1'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join(['2', '0 1 3 4 5 6', '0 1 3 4 5 6', '1 6 5 4 2 1', '2 6 5 3 2 1', '1 1 2 3 4 6', '2 1 2 3 4 5', '1 1 2 3 4 5 6'])) == '4'\nassert solution('\\n'.join(['3', '0 1 3 4 5 6', '0 1 3 4 5 6', '1 6 5 4 2 1', '2 6 5 3 2 1', '1 1 2 3 4 6', '2 1 2 3 4 5', '1 1 2 3 4 5 6'])) == '4'\nassert solution('\\n'.join(['8', '0 1 2 3 4 5 6 7', '0 1 2 3 4 5 6 7', '1 6 7 5 4 3 2 1', '2 6 7 5 4 3 2 1', '1 1 2 3 4 5 6 7', '2 1 2 3 4 5 6 7', '1 1 2 3 4 5 6 7 8', '2 1 2 3 4 5 6 7 8'])) == '4'\nassert solution('\\n'.join(['1', '0 1 3 4 5 6 7 8', '0 1 3 4 5 6 7 8', '1 6 7 5 4 3 2 1', '2 6 7 5 4 3 2 1', '1 1 2 3 4 5 6 7 8', '2 1 2 3 4 5 6 7 8', '1 1 2 3 4 5 6 7 8 9'])) == '1'"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '4'\nassert solution('10') == '5'\nassert solution('20') == '7'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\"\n) == \"4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '4'\nassert solution('2\\n0 1 2 3 4 5\\n1 0 2 3 4 5\\n2 1 0 3 4 5\\n3 2 1 0 4 5\\n4 2 3 1 0 5\\n5 3 4 2 1 0\\n') == '3'\nassert solution('3\\n0 2 4 5 6\\n1 2 4 5 6\\n2 3 4 5 6\\n') == '1'\nprint('All test cases passed')\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '4'\nassert solution('0 2 3 4 5 6') == '4'\nassert solution('0 1 3 4 5 6') == '3'\nassert solution('2 6 5 4 2 1') == '3'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '2'\nassert solution('0 2 3 4 5 6') == '2'\nassert solution('0 1 3 4 5 6') == '3'\nassert solution('1 6 5 4 2 1') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'\nassert solution('3\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n') == '5'\nassert solution('1\\n') == '1'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '7'\n\"\"\"\n\nimport sys\nimport heapq\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n''') == '4'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nassert solution('5\\n1 1 1 1\\n1 2 3 4\\n1 3 5 6\\n1 4 7 8\\n1 5 9 10\\n1 6 11 12') == '12'\nassert solution('100\\n1 1\\n1 2 3 4\\n1 3 5 6\\n1 4 7 8\\n1 5 9 10\\n1 6 11 12') == '72'\nassert solution('20\\n1 1\\n1 2 3 4\\n1 3 5 6\\n1 4 7 8\\n1 5 9 10\\n1 6 11 12\\n1 7 13 14') == '13'\nassert solution('1000\\n1 1\\n1 2 3 4\\n1 3 5 6\\n1 4 7 8\\n1 5 9 10\\n1 6 11 12\\n1 7 13 14\\n1 8 15 16\\n1 9 17 18\\n1 10 21\\n1 11 23\\n1 12 25\\n1 13 27\\n1 14 29\\n1 15 31\\n1 16 33\\n1 17 35\\n1 18 37\\n1 19 39\\n1 20 41\\n1 21 43\\n1 22 45\\n1 23 47\\n1 24 49\\n1 25 51\\n1 26 53\\n1 27 55\\n1 28 57\\n1 29 59\\n1 30 61\\n1 31 63') == '112'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6') == '4'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('3') == '3'\nassert solution('12') == '9'\nassert solution('4') == '1'\n\"\"\"\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(sys.path[0]) + '/lib')\n\nfrom io_lib import *"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 2 3 4') == '7'\nassert solution('2 3 4 5 6 7') == '8'\nassert solution('3 4 5 6 7 8') == '9'\nassert solution('4 5 6 7 8 9') == '10'"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n''') == '4'\nassert solution('''2\n1 2\n3\n''') == '4'\nassert solution('''10\n1 1\n1 2 3 4 5 6\n7 8 9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31 32 33 34 35\n36 37 38 39 40 41 42 43 44\n45 46 47 48 49 50 51 52 53 54 55\nn9001001 2"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('1\\n2.1 2.1') == '1'\nassert solution('3\\n5.9 5.9\\n5.8 5.8\\n5.7 5.7\\n6.1 5.7\\n6.4 5.6\\n5.6 5.6') == '4'\nassert solution('4\\n7.0 7.0\\n7.0 7.0\\n5.9 5.9\\n5.8 5.8\\n5.7 5.7\\n6.1 5.7\\n6.4 5.6\\n5.6 5.6') == '5'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6'\nassert solution('''\n7\n-1.00 -1.00\n-1.00 -1.00\n-1.00 -1.00\n-1.00 -1.00\n-1.00 -1.00\n-1.00 -1.00\n-1.00 -1.00\n''') == '7'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('20\\n0.0 0.0\\n0.0 10.0\\n0.0 10.0\\n0.0 5.0\\n0.0 5.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0.0 10.0\\n0"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6'\n\"\"\"\n--- Day 13: The Gathering ---\n\n\"You've managed to find yourself in the midst of a giant alien race. The gates have begun! You've made it to the surface, but there's a little left over when you reach the far side of the gate. You have been caught in an alien race and cannot escape! The alien race is over, and you're the last surviving member. There is not much left for you to do: you have no friends. You must gather all of the information that you can from the alien race's gathered evidence.\n\nIn order to escape the race, you must find a way to gather all of the information you can about the alien race's population before it is destroyed. There are four major tasks in this process: you must gather the population numbers of every single alien race, and determine the current leader, the alien race with the most current leader, and the alien race with the least current leader; you must gather the population numbers of the alien race with the least current leader, and determine the alien race with the most current leader; you must gather the population numbers of the alien race with the most current leader and determine its leading member; and finally, you must gather the population numbers of every single alien race.\n\nAll four of these tasks can be completed by finding a path to each alien race's leading member, but finding the population numbers of each alien race can be tricky. The alien race with the least current leader can be the race with the most current leader, the least current leader can be the race with the least current leader, and the most current leader can be the race with the most current leader. So, you must be able to find paths to any of these four races from the leading member, or else the population numbers cannot be found for each alien race.\n\nIn order to escape the alien race, you must find a way to gather all of the information about the alien race before it is destroyed. The alien race will be destroyed if you can find a way to gather enough information to determine the population numbers of all alien races. The leading member is the alien race that has the most current leader, and the least current leader is the alien race that has the least current leader. The leading member can be found by finding a path to it from the leading member of the leading member's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member is the alien race that has the least current leader; the least current leader is the alien race that has the most current leader; and the most current leader is the alien race that has the most current leader. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member can be found by following the path to it from the leading member of the least current leader's race; in this way, the leading member can be found.\n\nAll of the information you need to gather is contained in the alien race's evidence, which you can find by following the path to the leading member. The leading member"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '5'\nassert solution('''\n2\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6'\nassert solution('''\n2\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '5'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('2\\n1.1 1.1\\n2.1 1.1\\n3.1 3.1\\n') == '4'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == \"6\"\nassert solution(input_data_2) == \"7\"\nassert solution(input_data_3) == \"7\"\nassert solution(input_data_4) == \"7\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2\\n2\\n2\\n') == '2'\nassert solution('3\\n2\\n2\\n2\\n') == '2'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2\\n2\\n2') == '5'\nassert solution('3\\n2\\n2\\n2\\n4\\n2') == '2'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n2') == '1'\nassert solution('3\\n2\\n3') == '3'\nassert solution('3\\n5\\n3') == '5'\nassert solution('3\\n5\\n5') == '5'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n2\\n') == '4'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '0'\nassert solution('2') == '1'\nassert solution('2') == '2'"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n2\n2\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2\n1\n2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n2\n2\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n2\\n') == '0'\nassert solution('1\\n2\\n2\\n') == '3'\nassert solution('1\\n2\\n1\\n') == '5'\nassert solution('1\\n1\\n1\\n') == '6'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n2\n2\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2\n4\n6\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n2\n2\n2\n3\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"1 1\"\nassert solution_2(input_) == \"1 1\"\n'''\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"3 5\\n1 2 2 1\") == \"2 2\"\nassert solution(\"5 5\\n2 1 2 1\") == \"2 2\"\nassert solution(\"6 10\\n3 2 1 2 1\") == \"2 2\"\nassert solution(\"13 10\\n5 2 1 2 1\") == \"2 1\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 3\n2 2 2 1\n''') == '1 1'\n'''\n------Prepare to start the coding interview--------\nThe deadline for the interview is now. You have this many minutes to work on your solution.\n\n-----Write your code below this line------"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1'\nassert solution('1000000002\\n2 1000000001\\n1000000002\\n1000000002\\n1000000002\\n1000000002\\n1000000002\\n1000000002\\n1000000002') == '1 0'\n\"\"\""
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1\n2 3\n5 5\n1 2 5\n''') == '1 1'\nassert solution('''1 1\n1 4\n2 4\n1 4\n''') == '2 2'\nassert solution('''1 10\n1 4\n2 4\n1 4\n''') == '2 1'\nassert solution('''1 1\n1 1\n1 1\n1 2\n''') == '2 2'\nassert solution('''1 10\n1 4\n2 4\n1 4\n''') == '2 1'\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '1 1'\nassert solution('2 2 2 1') == '1 1'"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '1 1'\n'''\n\nimport math"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2 2 2 1\n''') == '1 1'\nassert solution('''6\n4 2 2 1\n''') == '2 1'\n\"\"\"\nfrom typing import List\nimport math\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 3\n2 2 2 1\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n1 20\n8 3 2 1\n\"\"\") == \"1 60\"\n\nassert solution(\"\"\"\n1 30\n16 4 5 2\n\"\"\") == \"2 200\"\n\nassert solution(\"\"\"\n1 40\n16 4 5 2\n\"\"\") == \"2 800\"\n\nassert solution(\"\"\"\n1 45\n16 4 5 2\n\"\"\") == \"2 1500\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 2 2 1\n\"\"\") == \"1 1\""
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"1\""
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n9\n''') == '101'\nassert solution('''\n10\n''') == '28\n''')"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"10\"\nassert solution(input_) == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '10'\nassert solution('3') == '14'\nassert solution('10') == '42'\nassert solution('30000') == '24435'\nprint(solution(input()))\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"2\"\nassert solution(\"1000\") == \"1\"\nassert solution(\"10000\") == \"2\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\nSample Input:\n1\nSample Output:\n10\n''') == '10'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '10'\nassert solution('4') == '8'\nassert solution('5') == '9'\nassert solution('10') == '18'\nassert solution('13') == '11'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('123') == '5'\nassert solution('321') == '4'\nassert solution('12345') == '3'\nassert solution('9876') == '1'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"10\"\n\"\"\""
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2\n1000 1 0\n1 1000 1\n\"\"\") == \"0.001\"\nassert solution(\"\"\"\n5 3\n1000 1 0\n1 1000 1\n1 1000 1\n1 1000 1\n1 1000 1\n\"\"\") == \"0.0000\"\nassert solution(\"\"\"\n5 2\n1 2 0\n1 2 0\n\"\"\") == \"0.0625\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 2\n1000 1 0\n1 1000 1\n1 1000 1\n0.1\"\"\") == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '1 2\\n'\n    '1000 1 0\\n'\n    '1 1000 1\\n'\n) == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n1000 1 0\n1 1000 1\n''') == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0.001'\nassert solution('1 1000 1') == '0.0'\nassert solution('1 1000 1') == '0.0'\nassert solution('1 1000 1') == '0.0'\nassert solution('1 1000 1') == '0.0'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2\n1000 1 0\n1 1000 1\n''') == \"0.001\"\nassert solution('''\n1 2\n1000 1 0\n2 1000 1\n''') == \"0.003\"\nassert solution('''\n1 2\n1 2 3\n1 3 2\n''') == \"0.003\"\nassert solution('''\n1 2\n1 2 2\n1 3 1\n''') == \"0.002\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n1000 1 0\n1 1000 1\n''') == '0.001'\nassert solution('''\n1 2\n1001 1 0\n1 1001 1\n''') == '0.1'\nassert solution('''\n1 2\n1001 1 0\n1 1001 1\n''') == '0.99'\nassert solution('''\n10 10\n2 2 2 1 3 4 5 1 2\n''') == '0.01'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0.001'\nassert solution('1000000 1000 1 0') == '0.00001'\nassert solution('10000000 1000 1 0') == '0.000001'\nassert solution('1000001 1000 1 0') == '0.000006'\nassert solution('1000000000 1000 1 0') == '0.0000002'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    1 2\n    1000 1 0\n    1 1000 1\n\"\"\") == \"0.001\"\nassert solution(\"\"\"\n    2 3\n    20 5 5\n    5 1 1\n\"\"\") == \"0.005\"\nassert solution(\"\"\"\n    10 4\n    200 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n    10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n    10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n    10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n    10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n    10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n    10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n    10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n    10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n    10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n    10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n\"\"\") == \"0.0006345546875\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0.00\"\nassert solution(\"1 2\") == \"0.00\"\nassert solution(\"1 1000 1\") == \"0.00\"\nassert solution(\"1 1000 1 0\") == \"0.000\"\nassert solution(\"1 1000 1 1\") == \"0.001\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1') == '0'\nassert solution('1 1 1\\n1 2\\n2 3') == '3'\nassert solution('1 1 1\\n1 2\\n2 3') == '4'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\""
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3 2 10000\n1 2\n2 3\n3 1\n''') == '0'\nassert solution('''\n3 2 3 10000\n1 2\n2 1\n''') == '1'\nassert solution('''\n1 2 2 10000\n1 2\n2 1\n''') == '2'\nassert solution('''\n5 5 6 2 10000\n1 2 1\n2 3 2\n3 4 2\n4 1 3\n''') == '3'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    3 3 2 10000\n    1 2\n    2 3\n    3 1\n    ''') == '0'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 2 10000') == '0'\nassert solution('6 2 5 1 3 5 3') == '1'\n\"\"\""
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 2 10000') == '0'\nassert solution('5 6 6 9') == '11'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 2 10000\n1 2\n2 3\n3 1\n''') == '0', 'Should be 0'\nassert solution('''\n3 3 2 10000\n1 2\n2 3\n3 1\n''') == '1', 'Should be 1'\nassert solution('''\n3 3 2 10000\n1 2\n2 3\n3 1\n''') == '0', 'Should be 0'\n''')\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\\n\") == \"0\"\n\"\"\""
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 2 10000') == '0'\nassert solution('2 2') == '2'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4 2 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '0'\nassert solution('1 2 4') == '0'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '26'\nassert solution('4') == '25'\nassert solution('3') == '18'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '26'"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '26'\n\nassert solution('''\n3\n0 0 1\n1 0 0\n0 1 0\n''') == '18'\n\nassert solution('''\n6\n0 1 1 1 1 1\n1 0 2 2 2 2\n1 2 0 3 3 3\n1 2 3 0 4 4\n1 2 4 0 5 5\n1 2 5 0 6 6\n''') == '20'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '26'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '26', solution()\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n1 1 1 1 1 1 1 1 1\n1 0 2 2 2 2 2 2 2\n1 2 0 3 3 3 3 3 3\n1 2 3 0 4 4 4 4 4\n1 2 3 4 0 5 5 5 5\n1 2 3 4 5 0 6 6 6\n1 2 3 4 5 6 0 7 7\n1 2 3 4 5 6 7 0 8\n1 2 3 4 5 6 7 8 0\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10 11\n1 2 3 4 5 6 7 8 9 10 11 12\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53\n1 2 3 4 5 6 7 8 9 10 11 12 13 14"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 2\n1 2 0\n''') == '26'\nassert solution('''\n5\n0 1 1 1 1\n1 0 2 2 2\n1 2 0 3 3\n1 2 3 0 0\n1 3 0 0 0\n''') == '26'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n0 1 1\n1 0 2\n1 2 0\n1 2 3\n''') == \"14\"\nassert solution('''7\n0 1 1 1 1 1 1\n1 0 2 2 2 2 1\n1 2 0 3 3 0 1\n1 2 3 0 0 1 1\n1 2 3 0 0 1 1\n1 2 3 0 0 1 1\n1 2 3 0 0 1 1\n''') == \"63\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n1 3 0 0\n''') == \"26\"\n\nassert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == \"26\"\n\nassert solution('''\n5\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n1 3 0 0\n''') == \"26\"\n\nassert solution('''\n6\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n1 3 0 0\n1 4 0 0\n''') == \"50\"\n\nassert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == \"25\""
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n40 20\n.X''') == '0.166667'\nprint(solution('''\n2 2\n20 20\n.X''')) == '0.166667'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 2\n20 20 20 40\nX.X\nT.T\n\"\"\") == \"0.3333333333333333\"\nassert solution(\"\"\"\n5 5\n0.9 0.1 0.1 0.1 0.1\n0.1 0.9 0.1 0.1 0.1\n0.1 0.1 0.9 0.1 0.1\n0.1 0.1 0.1 0.9 0.1\n0.1 0.1 0.1 0.1 0.9\n\"\"\") == \"0.33\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n20 20 20 40\n.X.\nT.T''') == '0.333333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.666666667'\n\nassert solution('5 1\\n20 20 20 40\\nX.X\\nT.T\\nT.T\\n') == '0.333333333'\n\nassert solution('5 3\\n20 20 20 20 20\\nX.X\\nX.X\\nX.X\\nT.T\\n') == '0.333333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '0.33333333'\nassert solution('9 5') == '0.08633333'\n'''"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2\\n20 20 20 40') == '0.333333333'\nassert solution('20 20\\nX.X\\nT.T') == '0.666666667'\nassert solution('2 2\\n.X.\\nT.T') == '0.3'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 1\n30\n.T.\nT.T.\nT.T.\nX.\n''') == '0.333333333'\nassert solution('''3 2\n20 20 20 40\nX.X\nT.T\nT.T\n''') == '0.3333333333333333'\nassert solution('''3 1\n20\n.T.\nX.\n''') == '0.3333333333333333'\nassert solution('''4 4\n30 30 30 30\nT.T.\nX.T.\nT.T.\n''') == '0.3333333333333333'\nassert solution('''4 1\n30\n.T.\nT.T.\nT.T.\n''') == '0.3333333333333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.333333333'\nassert solution('''\n2 3\n2 2\n.X\n.X\n''') == '0.3333333333333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '0.2'\nassert solution('3 2') == '0.1'\nassert solution('3 2') == '0.1'\n\"\"\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == '0.33333333'\nassert solution(\"5 5\") == '0.166666667'\n\"\"\"\nimport math\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n45 45 0 0\n\"\"\"\n) == \"0.75\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('45 45 0 0') == '0.75', \"Wrong!\"\nassert solution('56 -54 0 0') == '0.5', \"Wrong!\"\nassert solution('-56 -54 0 0') == '0.5', \"Wrong!\"\nassert solution('-56 -54 45 0') == '0.5', \"Wrong!\"\nassert solution('-56 -54 0 45 0') == '0.5', \"Wrong!\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"89 49 8 0\") == \"0.789375\"\nassert solution(\"23 47 7 11\") == \"0.875\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == \"0.75\"\nprint(solution(input_string))"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('0.1 0.2 0.3 0.4') == '0.75'\nassert solution('0.1 0.2 0.3 0.4') == '0.75'\n\"\"\""
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''45 45 0 0''') == '0.75'''\nassert solution('''0.25 0.5 0.75 0.3''') == '0.625'''\nprint(solution('''50 50 0 0'''))\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0.75\"\nassert solution(input(\"\")) == \"0.0\"\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10**6)\n\nfrom math import pi, cos, sin, radians\n\na, b, c, d = map(float, input().split())"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('45 -45 0 0') == '0.5'\nassert solution('45 45 45 0') == '0.75'\nassert solution('45 45 45 45') == '0.75'\nassert solution('45 45 45 45 45') == '0.75'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"0 0 1 1\") == \"0.2\"\nassert solution(\"3.0 2.0 1.0 1.0\") == \"0.0625\"\nassert solution(\"3.1 2.1 1.1 1.1\") == \"0.025\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''45 45 0 0''') == '0.75'\nassert solution('''40 40 0 0''') == '0.0'\nassert solution('''30 30 0 0''') == '1.0'\nassert solution('''30 30 10 0''') == '0.20'\nassert solution('''30 30 20 0''') == '1.00'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n') == \"4\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert sorted(solution()) == sorted(['4', '5', '6'])"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 7\n0 1 7\n0 2 5\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n\"\"\") == \"12\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '4'\nassert solution('4 6') == '3'\nassert solution('6 7') == '5'\nassert solution('4 8') == '9'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"0 1 2\\n\"\n    \"0 3 8\\n\"\n    \"1 2 11\\n\"\n    \"2 3 5\\n\"\n    \"2 4 2\\n\"\n    \"4 3 9\"\n) == \"4\"\n\nassert solution(\n    \"10 10\\n\"\n    \"0 1 2 3 4 5 6 7 8 9 10\\n\"\n    \"0 10 11 12 13 14 15 16 17 18 19\\n\"\n    \"0 20 21 22 23 24 25 26 27 28 29 30\\n\"\n    \"0 30 31 32 33 34 35 36 37 38 39 40\\n\"\n    \"0 40 41 42 43 44 45 46 47 48 49 50\\n\"\n    \"0 50 51 52 53 54 55 56 57 58 59 60\\n\"\n    \"0 60 61 62 63 64 65 66 67 68 69 70\\n\"\n    \"0 70 71 72 73 74 75 76 77 78 79 80\\n\"\n    \"0 80 81 82 83 84 85 86 87 88 89 90\\n\"\n    \"0 90 91 92 93 94 95 96 97 98 99 100\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\"\nprint(solution())\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '4'\nassert solution('5 5') == '4'\nassert solution('1 1') == '0'\nassert solution('2 3') == '1'\nassert solution('2 3 4') == '2'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\nprint(solution('''5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n'''))\nassert solution('''5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '11'\nprint(solution('''5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n'''))\nassert solution('''5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '15'\nprint(solution('''5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n'''))\nassert solution('''5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '15'\nprint(solution('''5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n'''))\nassert solution('''5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '18'\nprint(solution('''5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n'''))\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n10 10 0 5') == '100'\nassert solution('2\\n10 10 0 5') == '104'\nassert solution('3\\n10 10 0 5') == '114'\nassert solution('4\\n10 10 0 5') == '104'\nassert solution('5\\n10 10 0 5') == '120'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1\\n10 10 0 5\"\n) == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\"\nassert solution(\"2\\n3 0 3 0\") == \"3\"\nassert solution(\"2\\n4 1 1 1\") == \"5\"\nassert solution(\"2\\n4 1 2 1\") == \"5\"\nassert solution(\"2\\n4 0 0 0\") == \"0\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 10 0 5\n''') == '100'\nassert solution('''\n1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 10 0 5\n
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n100 100 100\n100 100 100\n100 100 100\n''') == '100'\n\nassert solution('''\n1\n0 100 100\n''') == '100'\n\nassert solution('''\n5\n1 1 1 1 1\n0 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '7'\n\nassert solution('''\n6\n1 1 1 1 1 1\n0 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '16'"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n10 10 0 5') == '100'\nassert solution('2\\n20 20 0 5') == '200'\nassert solution('3\\n10 10 0 5') == '100'\nassert solution('4\\n20 20 0 5') == '200'\nassert solution('5\\n10 10 0 5') == '100'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0 2 2\\n1 1 3 4\") == \"1\"\nassert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"0\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution('''\n    1\n    1\n    1\n''') == \"1\"\nassert solution('''\n    1\n    1\n    2\n''') == \"1\"\nassert solution('''\n    1\n    2\n    1\n''') == \"1\"\nassert solution('''\n    2\n    1\n    2\n''') == \"0\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n-10 -9 -8 -7 -6\n-5 -4 -3 -2 -1\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n0 0 2 2\n1 1 3 4\n5 7 6 8\n6 8 0 -1\n0 -1 -3 -4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\"\nassert solution(\"10\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n10 10 10 12\\n0 0 2 2\\n1 1 3 4\\n5 5 5 5\\n10 10 10 12\\n0 0 2 2\\n1 1 3 4\\n5 5 5 5\\n10 10 10 12\\n0 0 2 2\\n1 1 3 4\\n5 5 5 5\\n10 10 10 12\") == \"1\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '0'\n'''"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\nassert solution('''\n1\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '0'\nassert solution('''\n6\n0 0 2 2\n1 1 3 4\n5 7 6 8\n0 1 2 3\n5 0 6 7\n5 1 2 3\n''') == '1'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\n\nassert solution('''\n4\n-2 -3 -4 -5\n-3 -6 -7 -8\n-4 -5 -6 -7\n-5 -8 -7 -6\n''') == '0'\n\nassert solution('''\n4\n0 0 2 2\n1 1 3 4\n5 7 6 8\n1 7 3 5\n''') == '1'\n\nassert solution('''\n4\n0 0 2 2\n1 1 3 4\n5 7 6 8\n1 7 3 5\n0 0 2 2\n''') == '0'\n\nassert solution('''\n4\n0 0 2 2\n1 1 3 4\n5 7 6 8\n1 7 3 5\n''') == '0'"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\n-10 -20 2 3\n-4 -1 1 2\n-10 9 -4 -1\n1 7 -1 -5\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n4 -10 -20 2 3\n-4 -1 1 2\n-10 9 -4 -1\n1 7 -1 -5\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3 2 5 7\\n4 6 1 8\\n') == '1'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n1 1 5 5\n5 1 2 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n0 0 2 2\n1 1 3 4\n5 7 6 8\n6 7 5 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n0 0 2 2\n1 1 3 4\n5 7 6 8\n6 7 5 4\n9 9 9 9\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"0\""
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '17'\nprint(solution())\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"6 4\\n7 3 5 2 9 6\\n2 5 3 8 8\\n7 7 7 7 7\\n7 4 2 5 7\\n3 3 3 6 7\\n2 4 2 3 6\\n3 3 3 4 2\\n8 8 8 8 8\\n3 4 2 6 9\\n5 4 3 2 6\\n3 4 3 2 4\\n5 4 3 2 3\\n2 2 2 3 2\\n5 4 3 2 2\\n3 5 3 2 4\\n5 2 4 6 7\\n8 5 5 5 7\\n6 6 6 6 6\\n2 2 2 2 3\\n4 4 4 4 4\\n5 4 4 4 4\\n2 2 2 2 4\\n2 2 2 2 2\\n4 4 4 4 4\\n2 2 2 2 2\\n8 5 5 5 7\\n3 5 3 2 4\\n5 3 3 4 4\\n2 4 4 5 6\\n5 4 4 5 5\\n3 4 3 6 7\\n3 5 3 6 7\\n5 2 4 6 7\\n3 4 3 4 4\\n3 5 2 6 7\\n5 4 4 5 5\\n6 5 5 5 5\\n5 5 5 5 5\\n8 7 7 7 7\\n3 5 5 5 5\\n8 7 7 7 7\\n5 5 5 5 5\\n5 5 5 5 5\\n3 5 5 5 5\\n5 4 4 5 5\\n4 4 4 4 4\\n3 4 4 4 4\\n5 3 3 4 4\\n3 4 4 4 4\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n3 5 5 5 5\\n5 5 5 5 5\\n3 5 5 5 5\\n3 5 5 5 5\\n3 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n3 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n3 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n3 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n3 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '17'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\nassert solution('5 4 3 2 1') == '8 8 8 8 8'\nassert solution('-2 -2 -2 -2 -2') == '17'\nassert solution('8 8 8 8 8') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n\") == \"17\"\nassert solution(\"3 4\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"7\"\nassert solution(\"10 10\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n\") == \"8\"\n\n---Type your code here\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n''') == '17'\nassert solution('''\n5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n''') == '17'\nassert solution('''\n5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n''') == '7'\nassert solution('''\n5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n''') == '14'\nassert solution('''\n5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n''') == '17'\n'''"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"17\"\nassert solution(\"5 5\") == \"17\"\nassert solution(\"5 5\") == \"17\"\nassert solution(\"5 5\") == \"17\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n\") == \"17\"\nprint(solution(input()))"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\n3 2 3 1 1\n\"\"\"\n) == \"\"\"\n1 4 3 5 2 \n2 3 5 1 4\n\"\"\""
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1 4 3 5 2\"\nassert solution(\"6\") == \"1 4 5 2 3\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2'\nassert solution('6\\n4 3 3 2 1 1') == '1 4 3 5 2 3'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3 2 3 1 1\nSample Input:\n8\n3 2 3 4 5 1 6 7\nSample Output:\n1 4 7 3 5 2 6\n2 3 6 5 7 4 1\n''') == '1 4 7 3 5 2 6'"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 2 3 1 1\\n\") == \"1 4 3 5 2\"\nassert solution(\"5\\n4 5 3 2 1 1\\n\") == \"1 4 3 5 2\"\nassert solution(\"5\\n1 1 5 1 2 2\\n\") == \"1 4 3 5 2\"\nassert solution(\"5\\n1 2 1 3 5 4 2\\n\") == \"1 4 3 5 2\""
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"5\\n1 1 2 2 3 4\") == \"1 4 3 5 2\"\nassert solution(\"5\\n1 1 2 2 3 4\") == \"impossible\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3 2 3 1 1\n''') == \"1 4 3 5 2\""
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''5\n3 2 3 1 1''') == '1 4 3 5 2'\nassert solution(\n'''3\n3 2 3 1 1''') == '1 4 3 5 2'\n'''\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndp = [[0] * (n + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(i, n + 1):\n        dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1]\n        for k in range(i, j):\n            dp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j])\n\nfor _ in range(int(input())):\n    print(dp[1][n])\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2'\nassert solution('7\\n3 4 3 1 1 2 2') == '1 4 3 5 2 3 7'\nassert solution('5\\n7 4 3 1 1 2 2') == '1 4 3 5 2 7'\nassert solution('3\\n2 3 2 1') == '2 3 3 2 1'"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 3 1 1') == \"1 4 3 5 2\"\nassert solution('5') == \"impossible\"\n\n'''\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('2') == '0.08333333'\n'''"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n3 0 1\n1 4''') == '0.76772047'\nassert solution('''2\n2 0 1\n1 4''') == '0.23529412'\nassert solution('''3\n3 0 1\n1 4''') == '0.18181818'\nassert solution('''4\n3 0 1\n1 4''') == '0.33333333'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n3 1 5\\n1 3') == '0.0'\nassert solution('4\\n0 0 1\\n5 1 0\\n0 1 1\\n5 2 1\\n1 5 2') == '0.5'\nassert solution('1\\n0 0 1\\n10 3') == '1.0'\nassert solution('1\\n0 0 1\\n0 0') == '0.5'\nassert solution('1\\n0 0 1\\n0 0') == '0.5'\n\"\"\"\n\nimport math\nfrom itertools import product\n\nx_y_dist = [(i, j) for i, j in product(range(10), range(10))]\ndist = [0]\nfor i in x_y_dist:\n    dist.append(i[0]**2 + i[1]**2)\ndist = sorted(dist)"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n8\n1 0 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n\"\"\") == \"0.76772047\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 0 1\n1 4\n\"\"\") == \"0.76772047\"\nassert solution(\"\"\"\n1\n2 2\n\"\"\") == \"0.0\"\nassert solution(\"\"\"\n3\n-1 1\n\"\"\") == \"1.0\"\n\"\"\""
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('2') == '0.0027148226'\nassert solution('10') == '0.0'\nassert solution('100') == '0.0'\nassert solution('1000') == '0.0'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1\\n1 4\\n') == '0.76772047'\nassert solution('2\\n4 1\\n4 3\\n') == '0.50292047'\nassert solution('1\\n2 5\\n4 4\\n') == '0.50292047'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == '0.76772047'"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('10') == '0.76772047'\nassert solution('12') == '0.76772047'\nassert solution('1 2') == '0.76772047'\nassert solution('2') == '0.3333333333333'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10\n0 0 5\n1 4\n1 1 3\n0\n2\n1 1 1\n1 1 0\n\"\"\") == '0.625'\nassert solution(\"\"\"\n1\n0 0 5\n2 4\n2 2 2\n\"\"\") == '0.5'\nassert solution(\"\"\"\n2\n0 0 5\n1 2\n1 1 1\n0\n1 1\n1 1\n\"\"\") == '0.5'\nassert solution(\"\"\"\n1\n0 0 5\n1 2\n1 1 1\n0\n1 2\n1 1 1\n\"\"\") == '1.0'"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello helo') == '6'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''hello\nteams''') == '27'\nassert solution('''hel\nle\nteams''') == '4'\nassert solution('''helo\nteams''') == '6'\nassert solution('''hello\nteams''') == '5'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('hello teams') == '27'\nassert solution('sample input') == '3'\nassert solution('sample input bbdddbbbb') == '1'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\nl o\nl a\nl a\na p\n\"\"\") == \"27\"\nassert solution(r\"\"\"\nb b\nbb bb\nbbb bbb\nbbbb bbbb\nbbbbbbbb\n\"\"\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nshft lo helmp\nshft h\nshft l\nshft p''') == '27'\n\nassert solution('''\nshft lo helmp\nshft h\nshft l\nshft p''') == '3'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('hello teams') == '27'\nassert solution('one two three four') == '11'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hello teams') == '27'\nassert solution('aaabb') == '3'\nassert solution('zxy') == '4'\nassert solution('aaa') == '1'\nassert solution('z') == '0'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"bbdddbbbb\") == \"1+2=3\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"foooooo bbdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('hello teams') == '27'\nassert solution('12345 abcde') == '12345 abcde'\nassert solution('z qwertyuiop') == 'z qwertyuiop'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2 4\n1 2\n5 2\n1 4\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3 3\n1 2\n5 2\n8 8\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '0'\nassert solution('6 3') == '2'\nassert solution('9 2') == '1'\nassert solution('10 6 3') == '1'\nassert solution('16 6 3') == '1'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 8\\n5 4\\n7 7\\n9 2\\n\") == \"2\"\nassert solution(\"3 3\\n1 8\\n5 4\\n7 7\\n9 2\\n3 4\\n6 3 1\\n12 6 3\\n\") == \"3\"\nassert solution(\"2 10\\n0 0\\n\") == \"0\"\nassert solution(\"10 10\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\") == \"0\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n') == '2\\n'\nassert solution('10 3\\n4 1\\n5 8\\n8 4\\n9 7\\n7 2\\n10 2\\n8 7\\n6 3 1\\n12 6 3\\n') == '2\\n'\nassert solution('5 2\\n2 1\\n3 8\\n6 8\\n7 1\\n4 7\\n9 3\\n8 2\\n') == '1\\n'\nassert solution('5 2\\n2 1\\n4 1\\n8 1\\n7 2\\n') == '1\\n'\nassert solution('9 5\\n4 6\\n1 2\\n1 2\\n2 1\\n2 2\\n4 3\\n5 3\\n') == '1\\n'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '2'\nassert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '4'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 4\\n4 5') == '1'\nassert solution('10 10\\n1 5\\n4 5\\n5 4\\n7 4\\n10 5\\n4 5') == '1'\nassert solution('5 4\\n5 5\\n1 4\\n6 4\\n6 5') == '2'\nassert solution('1 2\\n5 4\\n3 4\\n1 4\\n2 4') == '2'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == \"2\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == \"1\"\nassert solution(\"6 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n12 2\\n13 2\\n14 2\\n15 2\\n16 2\\n17 2\\n18 2\\n19 2\\n20 2\\n21 2\\n22 2\\n23 2\\n24 2\\n25 2\\n26 2\\n27 2\\n28 2\\n29 2\\n30 2\\n31 2\\n32 2\\n33 2\\n34 2\\n35 2\\n36 2\\n37 2\\n38 2\\n39 2\\n40 2\\n41 2\\n42 2\\n43 2\\n44 2\\n45 2\\n46 2\\n47 2\\n48 2\\n49 2\\n50 2\\n51 2\\n52 2\\n53 2\\n54 2\\n55 2\\n56 2\\n57 2\\n58 2\\n59 2\\n60 2\\n61 2\\n62 2\\n63 2\\n64 2\\n65 2\\n66 2\\n67 2\\n68 2\\n69 2\\n70 2\\n71 2\\n72 2\\n73 2\\n74 2\\n75 2\\n76 2\\n77 2\\n78 2\\n79 2\\n80 2\\n81 2\\n82 2\\n83 2\\n84 2\\n85 2\\n86 2\\n87 2\\n88 2\\n89 2\\n90 2\\n91 2\\n92 2\\n93 2\\n94 2\\n95 2\\n96 2\\n97 2\\n98 2\\n99 2\\n100 2\\n\") == \"1\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n1 4 5\") == \"2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 1\n1 5\n2 4\n2 3\n1 4\n1 5\n2 3\n2 2\n1 2\n1 3\n1 5\n1 4\n2 4\n1 3\n1 3\n1 2\n1 4\n2 4\n1 2\n2 2\n1 2\n1 5\n1 4\n2 5\n2 3\n2 3\n1 4\n1 4\n1 3\n1 5\n1 4\n2 4\n1 2\n2 2\n1 2\n1 4\n1 5\n1 3\n2 3\n1 4\n1 3\n2 3\n1 4\n2 4\n2 4\n1 5\n1 4\n1 3\n2 3\n1 5\n1 4\n1 2\n2 2\n1 2\n1 3\n1 5\n1 4\n2 4\n2 5\n1 2\n2 2\n1 3\n2 4\n1 5\n1 5\n2 4\n1 5\n1 5\n1 4\n2 5\n1 3\n1 5\n1 4\n2 5\n1 4\n1 5\n1 4\n2 5\n2 4\n2 5\n1 5\n1 4\n1 5\n2 5\n1 4\n1 4\n1 3\n2 4\n1 5\n1 4\n1 3\n1 5\n2 4\n1 3\n2 4\n1 4\n1 5\n1 4\n1 5\n1 5\n1 4\n2 5\n1 4\n1 4\n1 5\n1 4\n1 5\n1 5\n1 4\n2 5\n1 4\n1 5\n1 5\n1 4\n1 4\n1 5\n2 4\n1 3\n1 5\n1 4\n2 4\n1 4\n1 5\n1 4\n1 5\n1 5\n1 4\n2 5\n1 4\n1 3\n1 5\n1 4\n1 4\n1 5\n1 5\n1 4\n1 4\n1 5\n1 4\n1 4\n1 5\n1 5\n1 4\n1 5\n1 4\n1 5\n2 4\n1 4\n1 3\n2 4\n1 4\n1 5\n1 4\n1 4\n1 5\n1 4\n1 5\n1 4\n2 5\n1 4\n1 4\n1 5\n1 4\n1 5\n1 4\n1 5\n1 4\n1 5\n1 4\n1 5\n1 5\n1 4\n1 5\n1 5\n1 4\n1 4\n1 4\n1 5\n1 4\n1 5\n1 5\n1 4\n1 5\n1 5\n1 4\n1 5\n1 4\n1 5\n1 5\n1 4\n1 5\n1 5\n1 5\n1 4\n1 4\n1 5\n1 4\n1 5\n1 5\n1 4\n1 5\n1 4\n1 5\n1 5\n1 4\n1 5\n1 4\n1 5\n1 4\n1 5\n1 5\n1 4\n1 5\n1 5\n1 4\n1 5\n1 5\n1 5\n1 4\n1 5\n1 5\n1 5\n1 4\n1 5\n1 5\n1 5\n1 5\n1 5\n1 4\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '26'\nassert solution('2 3') == '23'\n\n------\nInput:\n5 3\na\nb\nc\nd\ne\ncad\nOutput:\n2\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n5 3\na\nb\nc\nd\ne\ncad\n\"\"\") == \"26\"\n\nassert solution(r\"\"\"\n8 3\ndg\nbq\njh\nmt\nbe\noq\noi\nqu\n\"\"\") == \"6\"\n\nassert solution(r\"\"\"\n5 5\ngggggg\ngggggg\ngggggg\ngggggg\ngggggg\n\"\"\") == \"12\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3\na\nb\nc\nd\ne\ncad\n''') == '26'\nassert solution('''\n9 3\nabc\nbca\ncab\ncad\nabc\nabc\nabd\nabcd\nabc\nabc\n''') == '27'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '18'\nassert solution('5 4') == '7'\nassert solution('5 6') == '10'\nassert solution('1 1') == '1'\nassert solution('2 3') == '11'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\nab\\nac\") == \"2\"\nassert solution(\"3 2\\naba\\naca\") == \"1\"\nassert solution(\"3 2\\nabaa\\nac\") == \"0\"\nassert solution(\"3 2\\nabac\\nac\") == \"0\"\nassert solution(\"3 2\\nabab\\nac\") == \"2\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncad') == '26'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n10 3\na\nb\nc\nd\ne\ncad\n''') == '26'\nassert solution(\n'''\n100 2\na\nb\nc\nd\ne\ncad\n''') == '59'\nassert solution(\n'''\n100 100\na\nb\nc\nd\ne\ncad\n''') == '3180'\n'''\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne') == '26'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == \"26\"\nassert solution('10 50') == \"48\"\nassert solution('5 5') == \"48\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 10 30\n10 5 3 1 3\n\"\"\") == \"3 5 2 1 4\"\nassert solution(\"\"\"5 10 5\n10 5 3 1 3\n\"\"\") == \"impossible\"\nassert solution(\"\"\"5 10 30\n10 5 3 1 3\n10 5 3 1\n\"\"\") == \"3 5 2 1 4\"\n\"\"\"\n5 10 30\n10 5 3 1 3\n10 5 3 1\n10 5 3\n10 5\n3 5 2 1 4\n\n\"\"\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1 4'\nassert solution('5 10 30') == '3 5 2 1 4'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n7 5 3 1 3\") == \"5 3 2 1 4\"\nassert solution(\"5 10 30\\n2 7 3 1 3\") == \"2 3 5 1 4\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 10 30\") == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 1 4') == '3 5 2 1 4', \"Wrong\"\nassert solution('5 10 30') == '3 5 2 1 4', \"Wrong\"\nassert solution('5 1 3 1 2') == '5 2 1 3 4', \"Wrong\"\nassert solution('5 3 5 5 5') == '5 3 4 5 5', \"Wrong\"\nassert solution('5 10 10 10 10') == '5 1 2 3 4', \"Wrong\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3 5 2 1 4'\nprint(solution())"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 10 30\n10 5 3 1 3\n''') == \"3 5 2 1 4\"\nassert solution('''\n10 5 3 1 3\n''') == \"3 5 2 1 4\"\nassert solution('''\n10 0 5 0 0\n''') == \"0 10 5 0 0\"\nassert solution('''\n5 0 3 1 3\n''') == \"3 5 2 1 4\"\nassert solution('''\n5 0 0 1 0\n''') == \"0 5 1 0 0\"\n'''\n\nstdin = input()\nn, m, k = list(map(int, stdin.split()))\nscores = list(map(int, stdin.split()))\n\nscores.sort(reverse=True)\n\naverage = sum(scores) / len(scores)\n\nresult = []\n\nfor i in range(n):\n    if average - scores[i] <= k/n:\n        result.append(i+1)\n        k -= scores[i]"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3 3\\n3 1 5 2\") == \"3 1 5 2\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 1 5 2\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"3 5 2 1\"\nassert solution(\"5 10 30\\n10 5 3 1 2\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"2 3 1 4\") == \"2 1 3 4\"\nassert solution(\"3 4 1 2\") == \"2 1 3 4\"\nassert solution(\"4 3 2 1\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1\n2 3\n2 3\n''') == '2'\n\nassert solution('''\n3\n1 3\n3 2\n3 1\n''') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2\\n3') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0\n1 2\n3 5\n''') =='shovel time!'\n\nassert solution('''\n1 1\n2 3\n''') == '1'\n\nassert solution('''\n2 1\n3 2\n''') == '2'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n2 3\n2 3\n''') == '2'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n2 3\n2 3''') =='shovel time!'\n'''\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') =='shovel time!'\nassert solution('5') =='shovel time!'\nassert solution('7') =='shovel time!'"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') =='shovel time!'\nassert solution('2') =='shovel time!'\nassert solution('3') =='shovel time!'\n\"\"\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4\n1 1\n2 3\n2 3\n3 2\n''') == \"shovel time!\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 1\n2 2\n3 3\n3 3\n''') == '1'\nassert solution('''\n5\n1 3\n2 3\n3 3\n4 4\n5 5\n''') == '0'\nassert solution('''\n3\n1 1\n1 1\n''') =='shovel time!'"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3\\n2 3') == '2'\nassert solution('1\\n10 4\\n10 5\\n9 3') == '1'\nassert solution('1\\n20 4\\n20 3\\n19 4') == '3'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2') == '3'\nassert solution('4 3 4 2 2') == '4'"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 1 2\\n') == '3'\nassert solution('4\\n1 2 3 5\\n') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '9'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"4\""
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2 1 1 2\n''') == '3'\nassert solution('''\n3\n2 1 1 2\n''') == '2'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution(\"\"\"\n3\n10 10 10\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n') == '3'\nassert solution('4\\n1 2 1 2') == '4'\n\"\"\""
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n1 2\\n\") == \"3\"\nassert solution(\"2\\n3\\n1 2\\n\") == \"2\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 1 2') == '3'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 1 2') == '3'\nassert solution('5\\n4 3 2 1 2') == '3'\n\n'''"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 999999937\n''') == '79'\nassert solution('''\n2 3 2\n''') == '3'\n\n---\n\nSample Input:\n6 10 6\nSample Output:\n5"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4 999999937\") == \"79\""
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4 999999937') == '79'\nassert solution('5 5 2') == '5'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4 999999937') == '79'\nassert solution('5 999999999 999999937') == '129'\n\"\"\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 2') == '4'\nassert solution('4 4 2') == '2'\nassert solution('8 4 2') == '7'\nassert solution('4 4 2') == '4'\nassert solution('20 10 2') == '9'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 2 1 2\\n\"\n    \"1 1 1 1\\n\"\n    \"1 0 1 1\\n\"\n) == \"1\"\nprint(solution(input()))"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 3\") == \"1\"\nassert solution(\"6 6 6\") == \"60\"\nassert solution(\"2 5 2\") == \"14\"\nassert solution(\"2 2 2\") == \"8\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 4 999999937\"\n) == \"79\"\nassert solution(\n    \"2 5 2 2\"\n) == \"1\"\nassert solution(\n    \"2 5 5 3\"\n) == \"0\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2 2\n3 3 4\n4 5 6\n7 8 9\n8 1 2\n3 3 4\n4 5 6''') == \"1\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\n\nSample Input:\n2 3 3\nSample Output:\n3"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"zucchini\\nmushrooms\\nmozzarella\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\n'\nassert solution(\n    '1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n1\\n1 -zucchini\\n2 +mushrooms +pepperoni\\n') == 'zucchini\\n'\nassert solution(\n    '1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n1\\n1 -zucchini\\n2 +mushrooms +pepperoni\\n') == 'zucchini\\nmozzarella\\nmushrooms\\n'\nassert solution(\n    '1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n1\\n1 -zucchini\\n2 +mushrooms +pepperoni\\n') == 'zucchini\\nmushrooms\\n'\nassert solution(\n    '1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n1\\n1 -zucchini\\n2 +mushrooms +pepperoni\\n') == 'zucchini\\nmushrooms\\n'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini'\nassert solution('2\\n4 +zucchini\\n') == 'zucchini'\nassert solution('3\\n4 -zucchini\\n') == ''\nassert solution('4\\n4 -zucchini\\n') == 'zucchini'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1\\n\"\n    \"4 +zucchini +mozzarella +mushrooms -artichoke\"\n    ) == \"zucchini\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n+zucchini +mozzarella +mushrooms -artichoke''') == 'zucchini'\nassert solution('''1\n+zucchini''') == 'zucchini'\nassert solution('''1\n-zucchini''') == 'zucchini'\n'''"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\"\n\"\"\""
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n1\n+zucchini +mozzarella +mushrooms -artichoke\n\"\"\"\n) == \"zucchini\"\nassert solution(\n    \"\"\"\n2\n+pepper +grape +pineapple\n+cheese +pepper +olives +grape +grapefruit\n+pepper +grape +pineapple +cheese\n\"\"\"\n) == \"pepper\"\nassert solution(\n    \"\"\"\n3\n+pepper +grape +pineapple\n+pepper +grape +pineapple +cheese\n+pepper +grape +pineapple +cheese +olives +grape\n+pepper +grape +pineapple +cheese +olives +grape +grapefruit\n+pepper +grape +pineapple +cheese +olives +grape +grapefruit +peppers +pineapple\n+pepper +grape +pineapple +cheese +olives +grape +grapefruit +peppers +pineapple +cheese\n+pepper +grape +pineapple +cheese +olives +grape +grapefruit +peppers +pineapple +cheese +olives +grape +grapefruit +peppers +pineapple +cheese\n\"\"\"\n) == \"pepper\""
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'zucchini'\nassert solution('2') == 'zucchini, mozzarella, mushrooms, artichoke'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n\"\n    \"1\\n3 +lemon +mushrooms +lemon\\n\"\n    \"1\\n\"\n) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(\n    \"4\\n+zucchini +mozzarella +mushrooms -artichoke\\n\"\n    \"1\\n3 +lemon +mushrooms +lemon\\n\"\n    \"1\\n\"\n) == \"zucchini\\nmushrooms\\nartichoke\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini'\nassert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n+cucumber -pepper -mushrooms -lettuce\n''') == 'zucchini'\nassert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n+cucumber -pepper -mushrooms -lettuce\n''') == 'zucchini'\nassert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n+cucumber -pepper -mushrooms -lettuce\n''') == 'zucchini'\n'''\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'PS'\nassert solution('2 5') == 'PP'\nassert solution('1 2') == 'RR'"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\n') == 'PS'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nPP\\nRR\") == \"PS\"\nassert solution(\"2 2\\nPP\\nPS\\nSS\") == \"PS\"\nassert solution(\"1 2\\nPP\\nPS\\nSS\") == \"SS\"\nassert solution(\"4 1\\nPP\\nPS\\nSS\") == \"SS\"\nassert solution(\"5 4\\nPP\\nRR\\nSS\\nPS\\nSS\") == \"SS\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'SS'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\nPP\\nRR\\nPS\\nSS') == 'PS'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'PP'\nassert solution('2 4') == 'RR'\nassert solution('3 4') == 'PS'\n\"\"\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"RR\") == \"RR\"\nassert solution(\"RRR\") == \"RRR\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS') == 'PS'\nassert solution('3 4\\nPP\\nRR\\nSS') == 'PP'\nassert solution('3 4\\nPP\\nSS\\nRR') == 'SS'\nassert solution('3 4\\nPP\\nSS\\nRR') == 'PP'\nassert solution('3 4\\nSS\\nPS\\nPP') == 'PS'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"PS\""
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'P'\nassert solution('2') == 'R'\nassert solution('3') == 'S'\n\nstdin = '2'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5.0 2.0\\n1\\n2\\n3\\n4\\n5') == '288'\nassert solution('0.1 2.0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('1.0 2.0\\n1\\n2\\n3\\n4\\n5') == '336'\nassert solution('0.1 0.2\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('0.1 0.2\\n0\\n0\\n0\\n0\\n0') == '0'"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '5\\n'\n    '0.1 2.0\\n'\n    '0\\n'\n    '0\\n'\n    '0\\n'\n    '0\\n'\n) == '288.000000'\nprint(solution(\n    '4\\n'\n    '0.01 2.0\\n'\n    '0.01 1.0\\n'\n    '0.01 1.0\\n'\n    '0.01 1.0\\n'\n))\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10\\n10 10 10 10 10\\n') == '0.000000'"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input) == '288'\nassert solution(input) == '238'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"288\"\nassert solution(\"5.5\") == \"546\""
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n0.1 2.0\n0\n0\n\"\"\") == \"288\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '288'\nassert solution('5.1') == '288.1'\nassert solution('0.1') == '288'\nassert solution('0.001') == '288'\nassert solution('1') == '288.1'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"0.1 2.0\n0\n0\n0\n0\n0\"\"\") == \"288\"\nassert solution(\"\"\"1\n0.1 2.0\n0\n0\n0\n0\n0\"\"\") == \"288\"\nassert solution(\"\"\"10\n0.1 2.0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\"\"\") == \"3248.4\"\nassert solution(\"\"\"1000\n0.1 2.0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\"\"\") == \"3248.4\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n3\n1\n0\n0\"\"\") == \"1.0\""
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0.1 2.0\n0\n0\n0\n0\n0\n''') == '288.0'\nassert solution('''\n5\n0.1 2.0\n0\n0\n0\n0\n0\n''') == '288.0'\nassert solution('''\n5\n0.1 2.0\n0\n0\n0\n0\n0\n''') == '0.0'\n'''\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nprint(solution(input()))\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('pastimeofwhimsy') == '1'"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\nabcd\nxyz\n''') == '2'\nassert solution('''\n1\nbc\nxyz\n''') == '1'\n''')"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('pastimeofwhimsy') == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('pastimeofwhimsy') == \"1\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\nmeow\n''') =='meow'\n\nassert solution(\n'''\nT\n''') == 'T'\n\nassert solution(\n'''\na\n''') == 'a'\n\nassert solution(\n'''\nace\n''') == 'ace'\n\nassert solution(\n'''\nracecar\n''') == 'racecar'"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 2 2 1') == 'NO'\nassert solution('2 3 3 1') == 'NO'\nassert solution('1 2 2 3') == 'YES'\nassert solution('1 2 2 1 3') == 'YES'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2 3\\n1 2 2 1'\n) == 'YES'\nassert solution(\n    '1 2\\n1 2'\n) == 'NO'\nassert solution(\n    '1 1'\n) == 'NO'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2 2 1\\n\") == \"YES\"\nprint(solution(\"3 4\\n1 2 2 1\\n\"))"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\n1 2 2 1\n''') == 'YES'\nassert solution('''\n3 5\n1 2 2 1 1\n''') == 'NO'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 2 2 1\") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('5 5') == 'YES'\nassert solution('10 10') == 'NO'\nassert solution('7 6') == 'NO'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n') == 'YES'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 2 1') == 'YES'\nassert solution('3 4') == 'NO'"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\n1 2 2 1\n''') == \"YES\"\nassert solution('''\n5 3\n1 1 3 2 1\n''') == \"NO\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1 2 2 1\\n') == 'YES'\nassert solution('10 1\\n1 1 1 1 1 1 1 1 1 1 1\\n') == 'NO'\nassert solution('20 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == 'YES'\nassert solution('30 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == 'NO'\nassert solution('3 4\\n3 2 3 1\\n') == 'NO'\n\nimport sys\n\ninput_lines = []\n\nfor line in sys.stdin:\n    input_lines.append(line.strip())\n\nfor line in input_lines:\n    print(solution(line))"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n5\\n8\\n') == '3/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n3\\n1\\n2\\n') == '3/1'\nassert solution('4\\n3\\n2\\n1\\n') == '2/1'\n\n'''"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n2\n3\n4\n\"\"\") == \"3/1\"\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\"\"\") == \"3/1\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2\\n3\\n4') == '3/1'\nprint(solution('10\\n5 1\\n10\\n5 2\\n6 2\\n7 3\\n9 3\\n3 2\\n7 8\\n7 4\\n8 8\\n1 2\\n3 3\\n6 3\\n7 8\\n1 4\\n3 4\\n8 1\\n1 3\\n1 4\\n4 4\\n3 2\\n1 1\\n2 3\\n3 1\\n6 2\\n7 5\\n3 1\\n2 4\\n5 5\\n2 5\\n1 3\\n2 5\\n5 3\\n2 1\\n3 2\\n7 3\\n3 1\\n1 1\\n8 5\\n4 2\\n1 1\\n4 3\\n5 2\\n8 4\\n6 3\\n2 2\\n1 1\\n4 4\\n3 1\\n1 1\\n1 4\\n5 4\\n5 4\\n6 4\\n2 2\\n8 4\\n4 1\\n8 5\\n2 2\\n6 4\\n6 4\\n6 3\\n5 4\\n3 2\\n6 1\\n5 2\\n6 2\\n5 2\\n4 2\\n1 2\\n1 2\\n4 3\\n3 1\\n4 1\\n1 2\\n4 2\\n3 2\\n3 2\\n3 2\\n3 3\\n2 2\\n6 2\\n4 2\\n3 2\\n6 2\\n6 2\\n1 4\\n2 2\\n2 2\\n1 3\\n2 2\\n1 1\\n1 2\\n2 3\\n5 2\\n6 2\\n3 3\\n2 2\\n5 3\\n1 2\\n1 1\\n3 2\\n7 3\\n5 3\\n5 3\\n7 3\\n5 3\\n1 1\\n5 4\\n6 4\\n1 1\\n6 4\\n5 4\\n1 2\\n2 1\\n1 2\\n3 2\\n6 4\\n2 2\\n6 3\\n1 1\\n3 3\\n2 2\\n1 2\\n1 2\\n3 2\\n7 3\\n1 4\\n2 3\\n3 1\\n3 3\\n1 2\\n2 3\\n4 4\\n2 4\\n6 1\\n1 1\\n3 1\\n5 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3') == '1/2'\nassert solution('3\\n2\\n1') == '1/2'\nassert solution('3\\n2') == '1/2'\nassert solution('2\\n2\\n3') == '3/1'\nassert solution('2\\n3') == '1/2'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3/1'\nassert solution('1 3') == '2/1'\nassert solution('2 3') == '1/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3\\n4') == '1/1'\nassert solution('2\\n1 2\\n3\\n4') == '2/1'\nassert solution('5\\n1 2\\n3\\n4') == '1/1'\n\"\"\""
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n4') == '7.5'\nassert solution('2\\n1 2\\n4\\n') == '3/1'\nassert solution('5\\n1 2\\n3\\n4\\n') == '6/5'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n''') == '3/1'\nassert solution('''\n1\n2\n3\n4\n5\n''') == '3/1'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3\n5\n12\n''') == '1.0'\nassert solution('''\n2\n3\n5\n12\n''') == '0.3'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n2\n10.99999999999999\n''') == '1.1464146593459745'\n\nassert solution('''\n3\n0.1\n2.2\n10.2\n''') == '1.1131020691495195'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n1.2 10.2\\n2.2 15.2\"\n) == \"1.114672365\"\n\nassert solution(\n    \"100\\n1.2 10.2\\n2.2 15.2\"\n) == \"1.447840245\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.2 10.2') == '1.114672365'\nassert solution('2.2 15.2') == '2.114672365'\n\"\"\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == \"0.01\"\nassert solution('4') == \"0.005\"\nassert solution('5') == \"0.00115\"\nassert solution('6') == \"0.00115\"\nassert solution('7') == \"0.00115\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1.114672365'\nassert solution('1') == '0.9090909090909091'\nassert solution('10') == '2.9999999999999998'\nprint('Congratulations! All test cases passed.')\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2\\n') == '1.114672365'\nassert solution('3\\n1.1 2.2 3.3\\n2.2 5.5 6.6\\n3.3 7.7 8.8\\n') == '1.151289747'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\nprint(solution('2\\n1.2 10.2\\n2.2 15.2'))"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1.114672365'\nassert solution('1') == '1.1'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 3\\n1 1\\n2 1\\n2 0\\n') == '3\\n1 2 3\\n2 2 2\\n'\nprint('Whole solution: ', solution(''))\nassert solution('1\\n3\\n0 3\\n2 1\\n2 0\\n') == '3\\n1 2 3\\n2 2 2\\n'\nprint('Whole solution: ', solution(''))\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '10\\n1 2 3 4 5 6 7 8 9\\n'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3 2 1 2'\nassert solution('5\\n0 3\\n1 1\\n2 1\\n2 0') == '4 4 2 1 2'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2\n2 1\n2 0\n''') == '''\n2 1 2 1\n'''\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1 2 3'\nassert solution('4') == '1 2 3'\nassert solution('3') == '1 2 3'\nassert solution('5') == '2 3 4 1'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0 3\n1 1\n2 1\n2 0\n''') == '3 1 2 3'\n\nassert solution('''\n5\n0 3\n1 1\n2 1\n2 0\n''') == '4 1 2 3 2'\n\nassert solution('''\n1\n0\n''') == '1'\n\nassert solution('''\n5\n0 3\n1 1\n2 1\n2 0\n''') == '3 1 2 3'\n\nassert solution('''\n1\n0\n''') == '1'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n0 3\n1 1\n2 1\n2 0\n\"\"\") == \"3 1 2 3\"\nassert solution(\"\"\"\n4\n0 3\n1 1\n2 1\n2 0\n\"\"\") == \"2 1 2\"\nassert solution(\"\"\"\n10\n10 20\n20 10\n10 20\n20 10\n10 20\n20 10\n20 10\n10 20\n20 10\n10 20\n20 10\n20 10\n10 20\n20 10\n\"\"\") == \"3 3 3 2 2 2 1 1\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n0 3\n1 1\n2 1\n2 0\n\"\"\") == \"\"\"\n3\n1 2 3 2\n\"\"\".strip()\n\nassert solution(\"\"\"\n2\n0 3\n2 0\n\"\"\") == \"\"\"\n2\n1 1\n\"\"\".strip()\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n0 3\n1 1\n2 1\n2 0\n''') == '3 1 2 1'\n\nassert solution('''\n5\n2 3\n1 1\n2 1\n1 2\n2 1\n''') == '3 1 2 1 2'\n\nassert solution('''\n1\n0\n''') == '1 1'\n\nassert solution('''\n1\n0\n''') == '1 0'\n\nassert solution('''\n1\n1\n''') == '1 1'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n3 0 3\\n1 1\\n2 1\\n2 0') == '1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '1 2 3 2'\nassert solution('1\\n0 3\\n1 1\\n2 1\\n2 0') == '1 2 3 2'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10\n3 4\n3 2\n2 0\n0 2\n2 3\n4 4\n4 5\n5 5\n5 5\n5 4\n1 2\n2 3\n1 1\n1 2\n2 4\n1 2\n1 1\n0 2\n\"\"\") == \"\"\"\n4\n1 2 3 2\n\"\"\"\n\nassert solution(\"\"\"\n6\n3 0\n2 0\n3 0\n4 2\n5 4\n0 0\n\"\"\") == \"\"\"\n5\n1 2 3 4\n\"\"\"\n\nassert solution(\"\"\"\n8\n1 3\n1 4\n1 5\n1 6\n1 7\n2 2\n2 4\n2 5\n2 6\n2 7\n3 4\n4 4\n4 5\n4 6\n4 7\n5 5\n5 6\n5 7\n6 6\n6 7\n7 7\n\"\"\") == \"\"\"\n4\n2 4 4 2 3\n\"\"\"\n\nassert solution(\"\"\"\n10\n3 0\n2 0\n2 0\n4 4\n2 0\n0 0\n0 0\n3 1\n1 1\n2 2\n3 3\n1 2\n3 4\n1 1\n1 1\n1 3\n\"\"\") == \"\"\"\n4\n1 2 3 4\n\"\"\""
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == '1'\nassert solution('3\\n1 2 3') == '3'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == 'none'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"none\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 4 5\") == \"5\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\n\nassert solution('''\n3\n1 1 2\n''') == 'none'\n\nassert solution('''\n4\n1 1 2 1 3\n''') == 'none'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 3\") == \"1 2 3\"\nassert solution(\"4\\n1 1 2 3\") == \"1 2 3\"\nassert solution(\"2\\n1 2 1 3\") == \"none\"\nassert solution(\"2\\n1 2 1 2 3 3\") == \"none\"\nassert solution(\"3\\n1 2 3\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"none\"\nassert solution(\"1 2 3\") == \"1 2 3\""
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 1 2') == '1'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"none\"\nassert solution(\"4\") == \"none\"\n\"\"\"\n\nn = int(input())\nm = set(map(int, input().split()))\nm2 = set(map(int, input().split()))\ns = set()\n\nfor i in range(n):\n    if i not in m and i not in m2:\n        s.add(i)"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '2'\nassert solution('3') == '3'\nassert solution('4') == 'none'"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('10') == '1'\nassert solution('1000') == '4'\nassert solution('10000') == '5'\nassert solution('100000') == '6'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 0 1 2 3 3') == '5'\nassert solution('10\\n5 1 5 2 7 4 4 6 2') == '13'\nassert solution('100\\n17 9 4 2 6 13 8 5 13') == '25'"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1 1 1 0 1\n''') == '0'\nassert solution('''5\n2 1 0 1 2 3\n''') == '5'\nassert solution('''6\n2 1 0 1 2 3 3\n''') == '5'\nassert solution('''8\n3 2 0 3 2 0 0\n''') == '4'\nassert solution('''9\n4 4 4 4 4 4 4 4\n''') == '4'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1 1 0 1 2 3 3') == '5'\nassert solution('6\\n2 3 0 1 3 1') == '5'\nassert solution('6\\n2 2 2 2 3 3 3') == '5'\nassert solution('7\\n3 2 0 1 2 1 2') == '6'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '5'\nprint(solution())\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n2 3 4\\n') == '1'\nassert solution('4\\n3 4 3 1\\n') == '3'\nassert solution('4\\n4 3 2 1\\n') == '3'\nassert solution('4\\n3 3 2 1\\n') == '2'\nassert solution('7\\n2 1 0 1 2 3 3\\n') == '1'\n\n'''\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n2 1 0 1 2 3 3\n''') == '5'\nassert solution('''\n5\n1 0\n''') == '4'\nassert solution('''\n5\n1 0 1 1 0\n''') == '4'\nassert solution('''\n5\n1 0 1 1 1\n''') == '4'\nassert solution('''\n5\n1 0 1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n2 1 0 1 2 3\n''') == '5'\nassert solution('''5\n2 4 0 4 0\n''') == '6'\nassert solution('''8\n2 1 0 1 2 3 3\n''') == '5'\nassert solution('''7\n2 1 0 1 2 3 3\n''') == '5'\nassert solution('''4\n0 0 0 0\n''') == '0'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 1 0 1 2 3 3') == '5'\nassert solution('8\\n4 3 1 1 2 2 1 3 1') == '4'\nassert solution('5\\n3 3 2 1 2 1') == '5'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\", \"Test 1\"\nassert solution(\"\\n\\n\") == \"\", \"Test 2\"\nassert solution(\"\\n\") == \"\", \"Test 3\"\nassert solution(\"\\n\\n\\n\") == \"\", \"Test 4\"\nassert solution(\"\\n\\n\\n\\n\") == \"\", \"Test 5\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#__.#\\n#####\") == \"4 4 5 6 4\"\nassert solution(\"3 6\\n#####\\n#...#\\n#_###\\n#__.#\\n#####\") == \"-1\""
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 3\\n#####\\n#...#\\n#_###\\n#__.#\\n#####\"\n    ) == \"2 4 5 6 -1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n_###\\n_M.#\\n__.#') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\n\nassert solution('4 5') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 6\"\n) == \"3 4 5 6 -1\"\nassert solution(\n    \"5 5\"\n) == \"1 2 1 3 1\"\nassert solution(\n    \"9 7\"\n) == \"0 0 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#####\") == \"3 3 1 1 -1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"10 10\") == \"-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"5 5\") == \"3\"\nprint(solution(input()))\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '6'\n\n'''"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n\"\"\") == \"impossible\""
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\nassert solution('''4 6 2\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '8'\nSample Input 2:\n6 7 2\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\nSample Output 2:\n14\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 4 1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1\n2 3 1\n1 3 1\n1 4 1\n2 4 4\n3 4 3\n''') == '5'\nassert solution('''\n4\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '8'\nassert solution('''\n4\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\n'''\n    pass\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\nassert solution('''5 3 2\n1\n1 2 1\n2 1 3\n1 3 2\n3 1 3\n2 3 1\n''') == 'Impossible'\nassert solution('''5 3 1\n1\n1 2 1\n2 3 3\n1 3 1\n3 4 2\n3 4 1\n''') == '11'\nassert solution('''5 4 3\n1\n1 2 2\n2 3 3\n3 4 3\n4 4 3\n''') == 'Impossible'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"2\"\nassert solution(\"10 10 10 10\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'Impossible'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"1234 1234\") == \"0\"\nassert solution(\"1234 12341234\") == \"1\"\nassert solution(\"123441234412344\") == \"1\"\n\"\"\""
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 4 2 1\n''') == \"01001\"\nassert solution('''\n2 4 2 0\n''') == \"impossible\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n\n'''\n\nstdin = input().split(\" \")\na = int(stdin[0])\nb = int(stdin[1])\nc = int(stdin[2])\nd = int(stdin[3])"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 2 1') == '01001'\n\n'''\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == \"impossible\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0 1\") == \"01\"\nassert solution(\"3 4 2 1\") == \"01101\""
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 2 1') == '01001'\nassert solution('6 9 9 6') == '10000000'\n\"\"\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 0\") == \"impossible\"\nassert solution(\"0 0 1 1\") == \"101\"\nassert solution(\"2 2 1 1\") == \"10\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"1 2 2 3\") == \"00101\"\nassert solution(\"3 4 5 2\") == \"01101\"\nassert solution(\"3 3 3 3\") == \"10100\"\nassert solution(\"1 2 3 4\") == \"10101\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"0\") == \"0\"\nassert solution(\"01\") == \"01\"\nassert solution(\"010\") == \"01\"\nassert solution(\"011\") == \"1\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'possible'\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\nassert solution('''\n1 1\n1 2\n1 3\n''') == 'impossible'\nassert solution('''\n5 5 3\n1 1\n2 2\n3 3\n4 4\n''') == 'possible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 4 7') == 'impossible'\nassert solution('3 4 6') == 'possible'\nassert solution('5 5 5') == 'possible'\nassert solution('5 5 5') == 'impossible'\n\n\"\"\""
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == 'impossible'\nassert solution('3 4 6') == 'possible'\nassert solution('1 1') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('2 2') == 'possible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'impossible'\nassert solution('5 4 6') == 'possible'\n\n\"\"\""
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5 6') == 'impossible'\nassert solution('3 4 6') == 'possible'\nassert solution('3 3 6') == 'impossible'\nassert solution('3 3 4') == 'impossible'\nassert solution('3 4 3') == 'impossible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\"\nassert solution(\"4 4 4\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"impossible\"\nassert solution(\"1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"impossible\"\nassert solution(\"2 4\\n1 1\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"impossible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 6\") == \"impossible\"\nassert solution(\"2 2\") == \"possible\"\nassert solution(\"2 3\") == \"impossible\"\nassert solution(\"2 4\") == \"possible\"\nassert solution(\"2 5\") == \"impossible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\") == \"possible\"\n\nassert solution(\"\"\"\n2 1\n1 2\n2 1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2 1\n3 1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n3 2\n1 1\n1 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 6\") == \"impossible\"\nassert solution(\"3 2\") == \"possible\"\nassert solution(\"4 2\") == \"impossible\"\nassert solution(\"4 3\") == \"impossible\"\nassert solution(\"4 5\") == \"impossible\"\n\"\"\"\nfrom typing import List, Set\nclass Solution:\n    def solution(self, N: int, M: int, B: int, r: int, c: int) -> str:\n        # N, M = 4, 5\n        # B = 3\n        # r = 1\n        # c = 2\n        # print(N, M, B, r, c)\n        # N, M, B = 4, 3, 1\n        # r, c = 1, 2\n        # print(N, M, B, r, c)\n        # N, M, B = 2, 3, 1\n        # r, c = 1, 2\n        # print(N, M, B, r, c)\n        # N, M, B = 2, 3, 2\n        # r, c = 1, 2\n        # print(N, M, B, r, c)\n        # N, M, B = 3, 4, 3\n        # r, c = 1, 2\n        # print(N, M, B, r, c)\n        # N, M, B = 4, 4, 2\n        # r, c = 1, 2\n        # print(N, M, B, r, c)\n        # N, M, B = 5, 4, 2\n        # r, c = 1, 2\n        # print(N, M, B, r, c)\n\n        # N, M, B = 5, 4, 2\n        # r, c = 3, 2\n        # print(N, M, B, r, c)\n        # N, M, B = 4, 4, 2\n        # r, c = 2, 3\n        # print(N, M, B, r, c)\n        # N, M, B = 4, 4, 3\n        # r, c = 2, 2\n        # print(N, M, B, r, c)\n        # N, M, B = 4, 4, 4\n        # r, c = 2, 3\n        # print(N, M, B, r, c)\n\n        # N, M, B = 5, 5, 4\n        # r, c = 3, 3\n        # print(N, M, B, r, c)\n        # N, M, B = 5, 5, 5\n        # r, c = 4, 4\n        # print(N, M, B, r, c)\n        # N, M, B = 5, 5, 5\n        # r, c = 5, 5\n        # print(N, M, B, r, c)\n        # N, M, B = 5, 5, 5\n        # r, c = 5, 5\n        # print"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n') == 'possible'\nassert solution('1\\n2\\n3\\n2\\n3\\n') == 'impossible'\nassert solution('3\\n2\\n3\\n1\\n2\\n3\\n') == 'possible'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'\nassert solution('2\\n0 0 1\\n0 1 1\\n0 0 2\\n0 1 2') == '0.0'\nprint('SUCCESS: %s' % solution.__name__)\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n') == '2.0'\nassert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n') == '1.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n5\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n2 1 2\n\"\"\") == \"2.0\"\n\nassert solution(r\"\"\"\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\"\"\") == \"4.0\"\n\nassert solution(r\"\"\"\n3\n0 0 1\n0 1 1\n2 0 3\n\"\"\") == \"2.0\"\n\nassert solution(r\"\"\"\n6\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n4 0 5\n4 1 5\n\"\"\") == \"5.0\"\n\nassert solution(r\"\"\"\n1\n1\n1\n\"\"\") == \"0.0\""
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1.24142135623730951\"\nassert solution(\"5\") == \"1.7453508595043894\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2.0'\n\"\"\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n\") == \"2.0\"\nprint(solution(*tuple(map(int, input().split()))))\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n') == \"2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '2.0'\nassert solution('0 0 1') == '1.4142135623730951'\nassert solution('0 1 1') == '1.4142135623730951'\nassert solution('2 0 3') == '2.23606797752809'\nassert solution('2 1 3') == '2.23606797752809'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 0 1\n2 1 1\n0 2 3\n0 1 3\n0 1 2\n''') == '1.403299004138953'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"2.0\"\nassert solution(\"\"\"\n10\n0 0 1\n0 1 1\n0 2 3\n0 3 4\n0 4 5\n0 5 6\n0 6 7\n0 7 8\n0 8 9\n0 9 10\n1 0 11\n1 1 12\n1 2 13\n1 3 14\n1 4 15\n1 5 16\n1 6 17\n1 7 18\n1 8 19\n1 9 20\n2 0 21\n2 1 22\n2 2 23\n2 3 24\n2 4 25\n2 5 26\n2 6 27\n2 7 28\n2 8 29\n2 9 30\n3 0 31\n3 1 32\n3 2 33\n3 3 34\n3 4 35\n3 5 36\n3 6 37\n3 7 38\n3 8 39\n3 9 40\n4 0 41\n4 1 42\n4 2 43\n4 3 44\n4 4 45\n4 5 46\n4 6 47\n4 7 48\n4 8 49\n4 9 50\n5 0 51\n5 1 52\n5 2 53\n5 3 54\n5 4 55\n5 5 56\n5 6 57\n5 7 58\n5 8 59\n5 9 60\n6 0 61\n6 1 62\n6 2 63\n6 3 64\n6 4 65\n6 5 66\n6 6 67\n6 7 68\n6 8 69\n6 9 70\n7 0 71\n7 1 72\n7 2 73\n7 3 74\n7 4 75\n7 5 76\n7 6 77\n7 7 78\n7 8 79\n7 9 80\n8 0 81\n8 1 82\n8 2 83\n8 3 84\n8 4 85\n8 5 86\n8 6 87\n8 7 88\n8 8 89\n8 9 90\n9 0 91\n9 1 92\n9 2 93\n9 3 94\n9 4 95\n9 5 96\n9 6 97\n9 7 98\n9 8 99\n\"\"\") == \"1.3238954407336423\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 3 2 1 6 7') == \"4\"\nassert solution('4 5 3 2 1 6 7') == \"0\"\nassert solution('2 5 3 2 1 6 7') == \"1\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\\\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\nassert solution('''\\\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n7 7 8 9 9 9 1\n''') == '2'\nassert solution('''\\\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n8 7 8 9 9 9 1\n''') == '2'\nassert solution('''\\\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n9 9 8 9 9 8 1\n''') == '1'\nassert solution('''\\\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n9 9 8 9 9 9 1\n10 8 8 8 8 9 1\n''') == '0'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '4'\nassert solution('6\\n7 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '3'\nassert solution('10\\n5 5 1 1 3 4 7\\n6 6 1 1 3 4 5\\n3 7 1 4 5 6 2') == '3'\nassert solution('3\\n3 3 3 3 3 3 3\\n3 3 3 3 3 3 3\\n3 3 3 3 3 3 3\\n3 3 3 3 3 3 3') == '0'\nassert solution('8\\n3 3 3 3 3 3 3 3\\n3 3 3 3 3 3 3 3\\n3 3 3 3 3 3 3 3\\n3 3 3 3 3 3 3 3\\n3 3 3 3 3 3 3 3\\n3 3 3 3 3 3 3 3\\n3 3 3 3 3 3 3 3\\n3 3 3 3 3 3 3 3\\n3 3 3 3 3 3 3 3') == '1'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '4'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 5 4 3 2 1 6 7') == '4'\nassert solution('3 7 1 4 5 6 2') == '2'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 3 2 1 6 7') == '4'\nassert solution('7 5 4 3 2 1 6 7') == '3'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5 3 2 1 6 7\\n5 5 1 1 3 4 7\") == \"4\"\nassert solution(\"8\\n6 3 3 4 5 4 4 4 4\\n3 4 1 4 5 3 3 3\\n\") == \"5\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3\n4 5 6\n7 8 9\n''') == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7') == '4'\nassert solution('7\\n5 4 3 2 1 6 7\\n') == '4'\nassert solution('7\\n5 4 3 2 1 6 7\\n3 7 1 4 5 6 2\\n') == '3'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n3 4 1 1 2 3 5\n7 8 9 7 9 1 1''') == '4'\nassert solution('''5 5 1 1 3 4 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n3 4 1 1 2 3 5\n7 8 9 7 9 1 1''') == '3'\nassert solution('''5 5 1 1 3 4 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n3 4 1 1 2 3 5\n7 8 9 7 9 1 1''') == '2'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '2'\nassert solution('5') == '1'\n\"\"\"\nimport math\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n-10 0\\n-10 10\\n') == '2'\nassert solution('5\\n-10 0\\n-10 10\\n') == '4'\nassert solution('2\\n-10 0\\n-10 10\\n') == '4'"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('20') == '15'\nassert solution('1000') == '1005'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n-10 0\n-10 10\n''') == '2'\nassert solution('''\n6\n-1 2\n-1 3\n''') == '2'\nassert solution('''\n10\n-3 0\n-3 -10\n''') == '5'\nassert solution('''\n10\n-3 0\n-3 -10\n''') == '3'\nassert solution('''\n10\n-1 -5\n-1 -6\n''') == '7'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n20\n-10 0\n-10 10\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '4'\n\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\n\n###"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 2 3\") == \"3\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"8\"\nassert solution(\"-10 -10\") == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 5\"\n) == \"0\"\nassert solution(\n    \"2 5\"\n) == \"3\"\nassert solution(\n    \"3 3\"\n) == \"0\"\nassert solution(\n    \"2 4\"\n) == \"3\"\nassert solution(\n    \"3 4\"\n) == \"2\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == '0'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5') == '0'\nassert solution('5 2') == '1'\nassert solution('1000000000 2') == '0'\nassert solution('5 2 90000') == '1'\nassert solution('10 10') == '1'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 5\n''') == '0'\nassert solution('''\n2 4\n''') == '1'\nassert solution('''\n4 4\n''') == '3'"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"0\"\n\nassert solution(\"2 4\") == \"3\"\n\nassert solution(\"5 4\") == \"2\"\n\nassert solution(\"5 10\") == \"3\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"0\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"1 10\") == \"2\"\nassert solution(\"2 10\") == \"1\""
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5') == '0'\nassert solution('2 4') == '2'\n\n---Input---\nThe input consists of one line with two space-separated positive integers, $k$ and $n$. It is guaranteed that $k \\leq 100$ and $n \\leq 1000000$.\n\n---Output---\nOutput a single non-negative integer giving the number of lawns that Rex will visit on which he will rearrange rocks.\n\n---Examples---\nSample Input:\n1 5\nSample Output:\n0\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '0'"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0 0\\n1 1'"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0 0\\n1 1\\n'"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n0 0 0 1\n0 0 1 0\n1 1 1 1''') == '0 0'\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"\"\"\n0 0\n1 1\n\"\"\".strip()\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"\"\"0 0\n1 1\n\"\"\".strip()\n\nassert solution(\"\"\"\n1 1\n1 1\n\"\"\") == \"\"\"0 0\n\"\"\".strip()\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '2 2\\n'\n    '1 0\\n'\n    '0 1\\n'\n    '3 3\\n'\n    '1 0 0\\n'\n    '0 1 0\\n'\n    '0 0 1\\n'\n    ) == '0 0\\n1 1\\n'"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\") == \"0 0\\n1 1\"\nassert solution(\"3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"1 1\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n'\nassert solution('3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n'\nassert solution('4 3\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0') == '0 0\\n1 1\\n'\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0 0\\n1 1\\n'\n\"\"\"\nimport math"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == '0 0\\n1 1\\n'''\nassert solution('''\n1 2\n1 0\n0 1\n''') == '0 0\\n1 1\\n'''"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 0.950000\n0.700000 50\n''') == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 0.950000\n0.700000 50\n''') == '44.975'\nassert solution('''\n1 5 1\n0.650000 1\n0.550000 2\n0.500000 3\n0.440000 4\n0.350000 5\n''') == '31.75'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50\\n') == '44.975'\nassert solution('1 2 0.950000\\n0.700000 50\\n') == '44.975'\nassert solution('1 2 0.950000\\n0.700000 50\\n') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2 0.950000\n0.700000 50''') == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == \"44.975\"\nassert solution('1 2 0.940000\\n0.700000 50') == \"0.20000\"\nassert solution('1 2 0.950000\\n0.700000 50\\n1') == \"1.960000\"\nassert solution('1 2 0.950000\\n0.700000 50\\n2') == \"1.960000\"\nassert solution('1 2 0.950000\\n0.700000 50\\n1\\n0.950000\\n1\\n0.950000\\n0.950000\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1\\n0.950000\\n1"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 0.950000\n0.700000 50\n''') == '44.975'\nassert solution('''\n1 2 0.950000\n0.700000 100\n''') == '100000000.0'\nassert solution('''\n2 2 0.950000\n0.700000 50\n''') == '20000000.0'\nassert solution('''\n2 2 0.950000\n0.700000 100\n''') == '2.0'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 2, 0.950000]) == '44.975'\nassert solution([0.700000, 50]) == '68.75000'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"0 0.950000\\n1 0.700000 50\") == \"50.1\"\n\"\"\"\nfrom math import log10\nn = int(input())\nt = int(input())\nf = float(input())\nbug = []\nfor i in range(n):\n    bug.append([int(x) for x in input().split()])\nbug = sorted(bug, key=lambda x: x[0])\nbugs = {}\nfor i in bug:\n    if i[0] in bugs.keys():\n        bugs[i[0]] += i[1]\n    else:\n        bugs[i[0]] = i[1]\n\ns = 0\nfor i in bugs.keys():\n    s += log10(bugs[i] * f) * i\n\nprint(s)\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('5 2') == '2'\nassert solution('1 3') == '3'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2 3\n1 1\n5 2\n1 3\n3''') == '2'\nassert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\nSample Output:\nIMPOSSIBLE\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"5 2\") == \"IMPOSSIBLE\"\nassert solution(\"1 3\") == \"IMPOSSIBLE\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3\") == \"IMPOSSIBLE\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('2 2 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 3\\n1 1\\n5 2\\n1 3\\n3') == '2'\nassert solution('4 2 2\\n1 1\\n2 2\\n1 2\\n1 3\\n2 3\\n1 2\\n2 2\\n1 3\\n2 3') == '2'\nassert solution('5 1 1\\n1 2\\n2 2\\n1 3\\n2 3\\n1 2\\n2 2\\n1 3\\n2 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 2 3\n1 1\n5 2\n1 3\n3\"\"\") == \"2\"\nassert solution(\"\"\"3 2 3\n1 1\n5 2\n1 3\n3\n2\n1\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"5 2\n1 5\n1 2\n2 3\n1 4\n3 5\"\"\") == \"2\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n10 2 4\n1 1\n5 2\n1 3\n3\n3\n2\n1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 2 4\n1 1\n5 2\n1 3\n3\n3\n2\n1\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"\n6 3 4\n1 1\n5 2\n1 3\n3\n3\n2\n1\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('3') == 'IMPOSSIBLE'\nassert solution('3 2') == 'IMPOSSIBLE'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\") == \"2\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0\n\"\"\") == \"4.0\"\nassert solution(\"\"\"\n1 1\n0.0 1.0\n\"\"\") == \"0.0\"\nassert solution(\"\"\"\n1 1\n0.0 0.0\n\"\"\") == \"0.0\"\nassert solution(\"\"\"\n1 1\n0.0 1.0\n\"\"\") == \"0.0\"\nassert solution(\"\"\"\n1 1\n0.0 1.0\n\"\"\") == \"0.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('7 4') == '13.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 1\\n2 2\\n') == '0.2'\n\"\"\""
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4.0\"\n\nstdin = '''\n3 4\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0\n'''\n\nassert solution(stdin) == \"4.0\"\n\nstdin = '''\n3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0\n'''\n\nassert solution(stdin) == \"4.0\"\n\nstdin = '''\n10 10\n0.0 0.0\n1.0 1.0\n2.0 2.0\n3.0 3.0\n4.0 4.0\n5.0 5.0\n6.0 6.0\n7.0 7.0\n8.0 8.0\n9.0 9.0\n10.0 10.0\n'''\n\nassert solution(stdin) == \"10.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"2.0\"\nassert solution(\"5 5\") == \"19.0\"\nassert solution(\"2 1\") == \"2.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 1\n1.0 1.0\n1.0 1.0\n\"\"\") == \"1.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('1 1') == '2.0'\n\n'''\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 2\"\n    ) == \"1.0\"\n\nassert solution(\n    \"4 3\"\n    ) == \"5.0\"\n\nassert solution(\n    \"10 10\"\n    ) == \"30.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('2 2') == '0.0'\n\"\"\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('1 2') == '1.0'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\nassert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '37000'\nassert solution('4\\n230 30\\n180 30\\n230 30\\n220 30') == '19000'"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\n\nassert solution('''\n3\n170 110\n170 220\n250 240\n''') == '30000'\n\nassert solution('''\n5\n220 30\n195 30\n200 30\n170 20\n180 30\n''') == '25000'\n\nassert solution('''\n5\n180 30\n200 30\n205 30\n195 20\n220 30\n''') == '33000'\n\nassert solution('''\n6\n195 20\n195 20\n195 20\n195 20\n195 20\n195 20\n''') == '18000'"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\nassert solution('''\n5\n247 9\n175 22\n180 24\n168 29\n''') == '18000'\n'''\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\nassert solution('2\\n250 41\\n180 30\\n150 11') == '8055'\nassert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '14200'\nprint('Super stellar!')"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '25000'\nassert solution('3') == '18000'\nassert solution('4') == '21500'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30\\n') == '18000'\n\nassert solution('3\\n300 200\\n320 300\\n') == '18000'\n\nassert solution('3\\n270 30\\n310 90\\n') == '13500'\n\nassert solution('10\\n12 13 17\\n20 17 12\\n21 12 20\\n30 10 9\\n') == '58800'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\nassert solution('3\\n150\\n300\\n5\\n250\\n500\\n75\\n100\\n150\\n50\\n60\\n150') == '11000'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\") == \"28\"\nassert solution(\"ERS TICKERS\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n') == '28'\nprint('Solution:')\nprint(solution(input))\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BUYSTICKERS') == '28'\nassert solution('TICKERS') == 'IMPOSSIBLE'\nassert solution('ERS') == 'IMPOSSIBLE'\nassert solution('BUYER') == '28'"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n3\\nBUYER 1\\nERS 1\\nTICKERS 1\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 2\\nERS 1\\nTICKERS 2\\nERS 1\\nERS 2\\nERS 3\\nERS 4\\nERS 5\\nERS 6\\nERS 7\\nERS 8\\nERS 9\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 1\\nERS 1\\nTICKERS 1\\nERS 2\\nERS 3\\nERS 4\\nERS 5\\nERS 6\\nERS 7\\nERS 8\\nERS 9\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 1\\nERS 1\\nTICKERS 1\\nERS 2\\nERS 3\\nERS 4\\nERS 5\\nERS 6\\nERS 7\\nERS 8\\nERS 9\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('BUYSTICKERS') == '28'\nassert solution('STICKY') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('BUYSTICKERS\\n') == 'IMPOSSIBLE'\nassert solution('TICKERS\\n') == '28'\nassert solution('TICKERS\\nBUYER\\n') == 'IMPOSSIBLE'\nassert solution('BUYER\\nTICKERS\\n') == 'IMPOSSIBLE'\nassert solution('STICKY\\nERS 1\\n') == '28'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('BUYSTICKERS') == 'ER'\nassert solution('STICKY') == 'TICKERS'\nassert solution('TICKERS') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BUYSTICKERS') == '28'\nassert solution('STICKY 10') == 'IMPOSSIBLE'\nassert solution('ERS 8') == 'IMPOSSIBLE'\n\nimport os\nimport sys"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\nassert solution('''TRUE\n0\n1\n2\n3''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n') == '28'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"CORP 1\"\nassert solution(\"5 3 9\") == \"CORP 4\"\nassert solution(\"5 4 7\") == \"INDV 1\"\nassert solution(\"2 3 8\") == \"CORP 1\"\nassert solution(\"3 4 7\") == \"INDV 4\""
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 6\") == \"CORP 1\"\nassert solution(\"4 2 4\") == \"CORP 1\"\nassert solution(\"1 1 1\") == \"INDV 1\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 8') == 'INDV 2'\nassert solution('1 1') == 'INDV 1'\nassert solution('2 1') == 'INDV 1'\nassert solution('3 1') == 'INDV 2'\nassert solution('4 2') == 'INDV 2'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\") == \"INDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 8') == 'INDV 1 CORP 4'\nassert solution('3 8 5') == 'CORP 4 INDV 3'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 5') == 'INDV 3\\nINDV 1\\nINDV 4'\nassert solution('5 3 10') == 'CORP 1\\nINDV 1\\nINDV 2\\nINDV 4\\nINDV 5'\nassert solution('10 10 10') == 'INDV 1\\nINDV 2\\nINDV 3\\nCORP 1\\nCORP 2\\nCORP 3\\nCORP 4\\nCORP 5'\nassert solution('3 2 5') == 'CORP 2\\nINDV 3\\nINDV 4'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 8\") == \"INDV 4 CORP 5\"\nassert solution(\"5 3 8\") == \"INDV 1 INDV 2 CORP 3 INDV 4 CORP 5\"\nassert solution(\"10 10 3\") == \"INDV 2 CORP 5 CORP 1 CORP 3 INDV 4 CORP 6 CORP 2 CORP 5\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3\n''') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\nCORP 1'''\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"INDV 2\"\nassert solution(\"1 1\") == \"INDV 1\"\nassert solution(\"2 1\") == \"CORP 1\"\nassert solution(\"3 1\") == \"INDV 4\"\nassert solution(\"4 2\") == \"CORP 2\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 8') == 'CORP 2'\nassert solution('1 1') == 'INDV 1'\nassert solution('2 1') == 'INDV 2'\nassert solution('3 1') == 'INDV 3'\nassert solution('4 2') == 'CORP 1'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1\n0\n\"\"\") == \"0.0\"\n\nassert solution(\"\"\"\n6\n3\n1\n4\n3\n2\n\"\"\") == \"0.8\"\n\nassert solution(\"\"\"\n30\n1\n12\n10\n20\n12\n20\n10\n30\n24\n22\n24\n21\n20\n19\n17\n14\n19\n16\n13\n10\n4\n2\n1\n\"\"\") == \"15.971191198076147\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n10 1\\n1\\n0\\n10') == '2.4142135624'"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2.4142135624'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n5\n10 10\n0\n0\n0\n0\n''') == '10.0'\nassert solution('''\n10\n5 5\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n''') == '6.0'\nassert solution('''\n3\n100 100\n100 100\n100 100\n''') == '0.0'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == \"2.4142135624\"\nassert solution('''\n3\n5 6\n1\n2\n3\n4\n5\n6\n''') == \"5.6708333333\"\nassert solution('''\n3\n5 6\n1\n2\n3\n4\n5\n6\n''') == \"7.0\"\nassert solution('''\n3\n5 6\n1\n2\n3\n4\n5\n6\n''') == \"8.3333333333\"\n\nassert solution('''\n1\n10 10\n0\n''') == \"10\""
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n10 1\\n1\\n0') == '2.4142135624'\nassert solution('4\\n12 5\\n10 1\\n0') == '11.0'\nassert solution('4\\n6 8\\n9 2\\n1') == '11.0'\nassert solution('12\\n100 200\\n10 0\\n0') == '85.0'\nassert solution('13\\n100 200\\n0 0\\n0') == '85.0'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n3\n10 1\n1\n2\n10\n10\n''') == '0.5'\nassert solution('''\n5\n10 1\n1\n2\n3\n4\n''') == '0.66666666666'\nassert solution('''\n6\n10 1\n1\n2\n3\n4\n5\n''') == '1.25'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n10 1') == '2.0'\nassert solution('1\\n1') == '0.0'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n20 10\n1\n0\n20\n10\n''') == '2.4142135624'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\n3 3\n3\n1 1\n2 3\n3 4\n2 2\n3 1\n2 3\n2 1\n3 5\n3 1\n1 1\n2 2\n4 5\n4 5\n3 3\n4 5\n1 1\n3 2\n4 3\n5 1\n2 3\n4 5\n5 2\n3 5\n2 4\n4 2\n4 2\n3 5\n4 4\n3 5\n4 5\n2 5\n2 4\n2 1\n2 4\n3 5\n4 5\n2 1\n3 4\n3 2\n4 2\n4 2\n3 5\n4 5\n1 2\n2 3\n3 3\n1 2\n2 3\n2 2\n3 3\n2 2\n3 3\n2 2\n4 1\n4 1\n3 4\n4 5\n3 5\n5 5\n4 4\n3 4\n3 4\n3 4\n2 2\n1 2\n5 3\n4 4\n2 4\n4 4\n2 4\n5 2\n3 4\n2 2\n3 4\n2 4\n5 5\n3 3\n2 4\n3 4\n3 4\n3 5\n3 5\n2 4\n4 4\n2 5\n4 4\n4 4\n2 5\n2 4\n1 2\n3 4\n1 4\n1 4\n1 4\n1 4\n2 3\n2 3\n3 3\n2 3\n1 1\n2 2\n2 2\n2 4\n2 4\n2 4\n2 4\n3 2\n2 2\n2 4\n2 4\n3 4\n2 2\n2 4\n2 4\n3 4\n2 4\n2 4\n1 4\n2 4\n1 4\n3 4\n2 4\n2 4\n2 4\n3 4\n1 4\n2 4\n1 4\n2 4\n2 4\n1 4\n2 4\n1 4\n2 4\n3 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n3 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n3 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n3 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''\n4\n6 0\n4 2\n6 0\n''') == '17'\nassert solution('''\n4\n4 0\n4 2\n4 0\n''') == '18'\nassert solution('''\n3\n2 1\n1 2\n''') == '2'\nassert solution('''\n1\n1 1\n''') == '0'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '15'\nassert solution('3\\n3 1 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'\nassert solution('5\\n1 2\\n3 1\\n2 1\\n1 2') == '9'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n5 3\n5 1 4\n4 3\n3 4\n3 1\n3 2\n''') == \"15\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\n\nassert solution('''3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '16'\n\nassert solution('''4\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '16'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3\\n5\\n1 3\\n2 1\\n5 0\\n1 3') == '15'\nprint('Solution: ', solution(*tuple(open(0))))\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\nassert solution(\"\"\"\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\nassert solution(\"\"\"\n4\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\nassert solution(\"\"\"\n10\n10 11 20\n11 11 21\n20 20 21\n11 11 21\n1 1\n1 1\n1 2\n1 3\n1 3\n1 5\n1 6\n1 7\n1 7\n2 2\n2 3\n2 5\n3 2\n3 2\n3 2\n3 2\n3 3\n3 4\n3 5\n3 5\n3 6\n4 2\n4 2\n4 3\n4 4\n\"\"\") == \"17\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1') == \"15\\n\"\nprint(solution('''3\n1 2 5\n3 1 5\n2 1'''))\nprint(solution('2\\n5 3\\n4 3'))\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15', 'First'\nassert solution('''\n4\n4 1 2\n4 0 3\n3 1\n2 2\n1 1\n''') == '10', 'Second'\nassert solution('''\n5\n2 5 2\n2 3 1\n3 1\n4 1\n5 0\n0 1\n''') == '10', 'Third'"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'\nprint(solution(input()))"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\"\nassert solution(\n    \"4\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 3 3 4') == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\"\n\n\"\"\""
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD'"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '....C'\nassert solution('5 5 3 3') == '.....A'\nassert solution('1') == '.....'\nassert solution('3') == '.....'\nassert solution('2') == 'BBBB'\n\"\"\""
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1 2 3\n1 2 3 2\n1 2 1 3\n1 1 2 3''') == '.....'\n\nassert solution('''1 1 1 3\n1 2 3 2\n1 2 1 3\n1 1 2 3''') == '...BBC'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n...BC\\n..A.C\\n....C\\n@DDDD'\nassert solution('10 10 20 30') == '.......\\n.@.@.\\n.@.@.\\n.@.@.\\n.@.@.\\n.@.@.\\n.@.@.\\n@.....\\n@.@.@\\n@.@.@\\n@.@.@\\n@.@.@\\n@.@.@'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD'\nassert solution('100 100 100 100') == '@DDDD'\n'''\nimport sys\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5 3 3 4\") == \"...BBC..\\n..A.C.\\n....C@\\n@DDDD@\"\nassert solution(\"3 4 4 1 2\") == \".....\\n..A.C\\n....C@\\n@DDDD@\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \".\"\nassert solution(\"2 2 1 1\") == \"..B.C\"\nassert solution(\"1 1 1 1\") == \"..ABC\"\nassert solution(\"3 2 1 2\") == \"...BC\"\nassert solution(\"4 4 4 4\") == \".....A\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5 3 3 4\") == \"....C\"\n\"\"\"\n\nr, c, i, j, n = list(map(int, input().split()))\n\nstart_row = i - 1\nstart_col = j - 1"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n111\n001\n000\n111\n000\nSample Input 2:\n4 3\n001\n001\n001\n001\nSample Output 2:\n001\n001\n001\n001\n''') == '001'\nassert solution('''\n2 1\n1 1\nSample Input 3:\n5 3\n111\n001\n000\n111\n000\nSample Output 3:\n001\n001\n''') == '001'\nassert solution('''\n7 1\n111\n001\n000\n111\n000\n001\n001\nSample Input 4:\n4 3\n001\n001\n001\n001\nSample Output 4:\n001\n001\n001\n001\n''') == '001'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '001'\nassert solution('3 1') == '111'\nassert solution('10 1') == '100'\nassert solution('20 2') == '200'\nassert solution('100 0') == '100'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '111'\nassert solution('4') == '000'\nassert solution('10') == '001'\nassert solution('20') == '001'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"001\"\nassert solution(\"5 2\") == \"001\"\nassert solution(\"5 1\") == \"001\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '001'\nassert solution('9 3') == '001'\nassert solution('6 4') == '001'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '001'\nassert solution('5 4') == '001'\nassert solution('5 5') == '001'\nassert solution('5 6') == '001'\nassert solution('5 7') == '001'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '001'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('11') == '1'\nassert solution('100') == '100'\nassert solution('101') == '100'\nassert solution('1010') == '1010'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '001'\nassert solution('5 3') == '001'\nassert solution('5 2') == '001'\nassert solution('5 2') == '001'\nassert solution('5 2') == '001'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n11\\n111\") == \"11111\"\nassert solution(\"5\\n3\\n111\\n001\\n000\") == \"1111100\"\nassert solution(\"5\\n3\\n111\\n001\\n000\\n111\") == \"111\"\nassert solution(\"5\\n3\\n111\\n001\\n000\\n111\\n111\") == \"11111\"\nassert solution(\"5\\n3\\n111\\n001\\n000\\n111\\n000\") == \"1\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17\n\"\"\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/13\\n19/2\\n19/17\\n10/7\\n20/13\\n19/15\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/13\\n19/2\\n19/17\\n10/7\\n20/13\\n19/15\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"20/3\\n5/7\\n10/1\\n20/13\\n19/2\\n10/7\\n10/13\\n20/11\\n19/2\\n19/11\\n\") == \"10 20\\n13 15 17\\n11 18\\n\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"19/13\") == \"10 20\"\nassert solution(\"10/1\") == \"10 10\"\nassert solution(\"19/14\") == \"20 20\"\nassert solution(\"4/3\") == \"20 13\"\nassert solution(\"20/7\") == \"20 13\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"19/13\") == \"19 20\"\nassert solution(\"10/1\") == \"10 20\"\nassert solution(\"19/14\") == \"19 10\"\nassert solution(\"4/3\") == \"20 12\"\nassert solution(\"20/7\") == \"14 13 7\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['19/13', '10/1', '19/14', '4/3', '20/7', '19/7', '20/13', '19/15', '10/7', '20/17', '19/2', '19/17', '5/5']) == '5 3 7 2 5 3'\n\nassert solution(['19/1', '20/1', '19/2', '20/2', '19/3', '20/3']) == '19 20'\n\nassert solution(['18/1', '18/2', '18/3', '18/4', '18/5', '18/6']) == '18 20'\n\nassert solution(['18/1', '18/2', '18/3', '18/4', '18/5', '18/6']) == '18 18 18 18 18 18 18'\n\nassert solution(['18/1', '18/2', '18/3', '18/4', '18/5', '18/6']) == '18 18 18 18 18 18 18'"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/13\n19/2\n19/17\n10/7\n20/13\n19/15\n15 14 13 7 2''') == '19 20\\n17 15 14 13 7 2'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''19/13\n10/1\n19/14''') == '19 20'\nassert solution('''4/3\n20/7\n19/7\n20/13\n19/15''') == '4 14'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"19/13\") == \"20 17 14 13 7 2\"\nassert solution(\"19/14\") == \"19 20 14 13 7 2\"\nassert solution(\"4/3\") == \"10 20 14 13 7 2\"\nassert solution(\"20/7\") == \"19 20 7 13 7 2\"\nassert solution(\"19/7\") == \"19 20 7 13 7 2\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"19/13\") == \"19 20\"\nassert solution(\"10/1\") == \"10\"\nassert solution(\"19/14\") == \"14\"\nassert solution(\"4/3\") == \"14\"\nassert solution(\"20/7\") == \"7\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('19/13') == '19 20'\nassert solution('10/1') == '10'\nassert solution('19/14') == '19'\nassert solution('4/3') == '4'\nassert solution('20/7') == '20'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'possible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"possible\"\nassert solution(\"2 0\") == \"possible\"\nassert solution(\"2 0\") == \"possible\"\nassert solution(\"2 0\") == \"impossible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"possible\"\nassert solution(\"2 0\") == \"impossible\"\nassert solution(\"2 2 2\") == \"impossible\"\nassert solution(\"3 0\") == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'possible'\nassert solution('''\n3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'impossible'\n'''\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'possible'\nassert solution('''3 2\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'impossible'\nassert solution('''10 10\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n4 4 5 6\n5 5 5 6\n6 6 6 6\n7 7 7 7\n8 8 8 8\n9 9 9 9\n10 10 10 10\n''') == 'impossible'\n\"\"\"\n\n\"\"\"\nint i, j;\nchar solution(int w, int p, vector<vector<int>> &wells, vector<vector<int>> &pipes) {\n    vector<vector<int>> ans;\n    vector<vector<int>> cross(wells.size());\n    for(i = 0; i < p; i++){\n        vector<int> start, end;\n        int x, y;\n        cin >> x >> y;\n        if(start.push_back(x) && end.push_back(y) && wells.at(i).size() >= 2){\n            for(j = 0; j < w; j++){\n                vector<int> robot;\n                int x, y;\n                cin >> x >> y;\n                if(robot.push_back(x) && robot.push_back(y) && wells.at(i).size() >= 2){\n                    cross[i].push_back(j);\n                    break;\n                }\n            }\n            if(cross[i].size() == 0)\n                return \"impossible\";\n            for(j = 0; j < p; j++){\n                if(wells.at(i).size() > 0 && pipes.at(j).size() > 0 && cross[i].size() > 0){\n                    int start_well, end_well;\n                    if(wells.at(i).at(cross[i].front()) == -1){\n                        continue;\n                    }\n                    start_well = wells.at(i).at(cross[i].front());\n                    end_well = wells.at(i).at(cross[i].back());\n                    while(1){\n                        if(pipes.at(j).at(0) == start_well){\n                            start = pipes.at(j).at(0);\n                            end = pipes.at(j).at(1);\n                            break;\n                        }\n                        if(pipes.at(j).at(0) == end_well){\n                            start = pipes.at(j).at(0);\n                            end = pipes.at(j).at(1);\n                            break;\n                        }\n                        else\n                            j = j + 1;\n                    }\n                    if(start == -1 || end == -1){\n                        return \"impossible\";\n                    }\n                    if(start == end){\n                        return \"impossible\";\n                    }\n                    ans.push_back({start_well, end_well});\n                }\n            }\n        }\n    }\n    for(i = 0; i < p; i++){\n        vector<int> robot;\n        int x, y;\n        cin >> x >> y;\n        if(robot.push_back(x) && robot.push_back(y) && wells.at(i).size() >= 2){\n            cross[i].push_back(pipes.size());\n            break;\n        }\n    }\n    if(cross[i].size() == 0)\n        return \"impossible\";\n    for(i = 0; i < p; i++){\n        if(wells.at(i).size() > 0 && pipes.at(j).size() > 0 && cross[i].size() > 0){\n            int start_well, end_well;\n            if(wells.at(i).at(cross[i].front()) == -1){\n                continue;\n            }\n            start_well = wells.at(i).at(cross[i].front());\n            end_well = wells.at(i).at(cross[i].back());\n            while(1){\n                if(pipes.at(j).at(0) == start_well){\n                    start = pipes.at(j).at(0);\n                    end = pipes.at(j).at(1);\n                    break;\n                }\n                if(pipes.at(j).at(0) == end_well){\n                    start = pipes.at(j).at(0);\n                    end = pipes.at(j).at(1);\n                    break;\n                }\n                else\n                    j = j + 1;\n            }\n            if(start == -1 || end == -1){\n                return \"impossible\";\n            }\n            if(start == end){\n                return \"impossible\";\n            }\n            ans.push_back({start_well, end_well});\n        }\n    }\n    for(i = 0; i < p; i++){\n        vector<int> robot;\n        int x, y;\n        cin >> x >> y;\n        if(robot.push_back(x) && robot.push_back(y) &&"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'impossible'\nassert solution('1 2') == 'possible'\nassert solution('2 1 2') == 'possible'\nassert solution('3 1 3') == 'possible'\nassert solution('3 2 2 3') == 'impossible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"possible\"\nassert solution(\"2 2\") == \"impossible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('2 3') == 'impossible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"impossible\"\nassert solution(\"3 3 1 0 2 0 3\") == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'possible'\nassert solution('''\n5 5\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n4 2 4\n''') == 'impossible'\nassert solution('''\n8 9\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n4 2 4\n5 2 5\n6 2 6\n''') == 'impossible'\nassert solution('''\n6 7\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n4 2 4\n5 2 5\n6 2 6\n''') == 'possible'\nassert solution('''\n6 6\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n4 2 4\n5 2 5\n6 2 6\n''') == 'impossible'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"4\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '4'\nassert solution('10 8') == '10'\nassert solution('1 4') == '4'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '4'\nassert solution('4 1') == '5'\nassert solution('6 2') == '8'\nassert solution('3 2') == '3'\nassert solution('12 1') == '12'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n2\n2\n3\n4\n4\n''') == '4', \"Positive\"\nassert solution('''\n10 3\n2\n2\n6\n9\n10\n6\n9\n5\n10\n10\n4\n''') == '12', \"Partial\"\nassert solution('''\n8 3\n3\n4\n4\n5\n4\n4\n6\n''') == '10', \"All\"\nassert solution('''\n16 3\n5\n6\n10\n13\n10\n13\n''') == '16', \"Negative\"\n\nimport sys\nfrom collections import Counter\nfrom collections import defaultdict\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 2\n2\n2\n''') == '4'\nassert solution('''\n2 2\n2\n1\n''') == '3'\nassert solution('''\n5 3\n1\n2\n3\n4\n5\n''') == '5'"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2\\n2\\n2\\n') == '4'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"4\"\nassert solution(\"4 3\") == \"3\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1 2\\n1 3\\n') == 'Mirko'\n\nassert solution('3\\n3 1\\n3 2\\n') == 'Slavko'\n\nassert solution('3\\n1 2\\n3 3\\n') == 'Slavko'\n\nassert solution('1\\n3\\n2\\n') == 'Mirko'"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n1 1\n1 2\n1 3\n1 4\n\"\"\") == \"Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Slavko\"\nassert solution(\"3\") == \"Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"Slavko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3\n''') == 'Mirko'\nassert solution('''5\n1 1\n2 2\n3 3\n4 4\n5 5\n''') == 'Slavko'\n\nimport math\nimport sys\nimport random"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n1 2\\n1 2\\nMirko') == \"Mirko\"\nassert solution('5\\n1 1\\n3 3\\n3 3\\n3 3\\nSlavko') == \"Slavko\"\n\n'''\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == 'Mirko', 'fucking testcase'\n\n\"\"\""
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3\n    1 1\n    1 2\n    1 3\n    ''') == 'Mirko'\n\nassert solution('''\n    2\n    3 1\n    2 1\n    ''') == 'Slavko'\n\nassert solution('''\n    4\n    1 1\n    2 3\n    2 4\n    3 4\n    ''') == 'Slavko'\n\nassert solution('''\n    5\n    2 2\n    2 3\n    3 3\n    4 3\n    4 4\n    ''') == 'Slavko'\n\nassert solution('''\n    6\n    5 1\n    4 1\n    3 1\n    2 1\n    1 1\n    ''') == 'Slavko'"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == 'Mirko'\nassert solution('4\\n1 1\\n2 2\\n3 3\\n4 4') == 'Slavko'"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3''') == 'Slavko'\nassert solution('''5\n1 1\n1 2\n1 3\n1 4\n1 5''') == 'Mirko'\n\n--Input--\n\n-----Output-----\nSample Output 0:\n\n2\n\nSample Output 1:\n\n1\n\nSample Input 1:\n\n3\n1 1\n1 2\n1 3\nSample Output 1:\n\nMirko\n\nSample Input 2:\n\n4\n1 1\n1 2\n1 3\n1 4\nSample Output 2:\n\nSlavko\n\nSample Input 3:\n\n5\n1 1\n1 2\n1 3\n1 4\n1 5\nSample Output 3:\n\nSlavko\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(f'{input()}\\n{input()}\\n{input()}') == '2 4'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '2 4'\nassert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 4\") == \"2 4\"\nassert solution(\"3 5 7\") == \"2 3 5 7\"\nassert solution(\"10\") == \"2 4 6 8 10\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"2 4\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '2 4'\nassert solution('3') == '2 4'\nassert solution('10') == '2 4 6 8 10'\nassert solution('15') == '2 4 6 8 10 15'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2 4\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    5\n    34\n    38\n    12\n    6\n''') == '4 2'\nassert solution('''\n    1\n    1\n''') == '1'\nassert solution('''\n    3\n    4\n    3\n''') == '0'\n'''\n\nfrom sys import stdin\n\nN = int(stdin.readline())\ndivider = 1\nanswer = ''\nwhile divider <= N:\n    if N % divider == 0:\n        answer += str(divider) + \" \"\n    divider += 1\nprint(answer)"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sorted(stdin.split())) == sorted(stdin.split())\nassert solution([2, 4]) == \"2 4\"\nassert solution([3, 4]) == \"4\""
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2 4\"\nassert solution(\"4\") == \"2 4\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2 4\"\nassert solution(\"2\\n3\") == \"2 3\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"12\"\nassert solution(\"5\") == \"12\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('10') == '10'\nassert solution('100') == '120'\nassert solution('99999999999999') == '2147483647'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nprint(solution(input()))\n\nprint(solution(input()))"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''5\n8 10 2 1000000 30556926000\n''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\n\nprint(solution('''\n4\n10000 400000 500000 900000\n'''))"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '12'\nassert solution('5') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '5'"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 8') == 'YES'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_stdin) == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 4 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\") == \"YES\"\nassert solution(\"5 3\\n1 2 4 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n\"\"\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'\nassert solution('2 3\\n1 2\\n2 4') == 'NO'\nassert solution('1 2\\n2 1') == 'NO'\nassert solution('2 3\\n1 2\\n1 3') == 'NO'\nassert solution('4 4\\n0 0 0\\n1 1 0\\n0 1 1') == 'NO'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n6\n0\n1 8 0\n2 4 0\n3 5 0\n4 3 7 0\n5 2 6 0\n6 1 0\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n8\n0\n1 8 0\n2 4 0\n3 5 0\n4 3 7 0\n5 2 6 0\n6 1 0\n7 3 0\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"YES\"\nassert solution(\"12\\n3\\n5\\n4\\n1\\n7\\n8\\n0\") == \"NO\"\nassert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\n\nassert solution('''\n2 4\n0\n1 8\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'NO'\n\nassert solution('''\n2 4\n0\n1 8\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'NO'\n\n\"\"\""
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\nassert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\nassert solution('''\n6 6\n0\n0 1 2\n1 1 1\n1 1 1\n2 1 2\n2 1 2\n''') == 'NO'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0''') == 'YES'\nassert solution('''5 2\n1 4\n3 2\n5 4\n3 4\n6 4\n3 4''') == 'NO'\nassert solution('''7 4\n1 6\n3 4\n4 1\n3 4\n2 2\n1 1\n6 4''') == 'YES'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n5 2\n3 4 5 6 1 2\n\"\"\") == \"5 6 1 2 3 4\"\n\"\"\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '6 2\\n'\n    '3 4 5 6 1 2'\n) == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1 1 2 2 1\"\nassert solution(\"1 2 1 2\") == \"1 1 1 1 1 1\"\nassert solution(\"1 2 1 2 3 4 5\") == \"1 1 1 1 1 1 1 2 3 4 5\"\nassert solution(\"1 2 3 4 5\") == \"1 1 2 3 4 5\"\nassert solution(\"1 2 1 2 3 4 5\") == \"1 1 1 1 1 1 1 2 3 4 5\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n6 2\n3 4 5 6 1 2\n\"\"\") == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6 2\n3 4 5 6 1 2\n\"\"\") == \"5 6 1 2 3 4\"\nassert solution(\"\"\"\n6 2\n3 4 5 6 1 2\n\"\"\") == \"5 6 1 2 3 4\"\nassert solution(\"\"\"\n6 2\n1 3 4 5 6 2\n\"\"\") == \"1 3 4 5 6 2\"\nassert solution(\"\"\"\n6 2\n1 3 4 5 6 1 2\n\"\"\") == \"1 3 4 5 6 1 2\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n4 1 2 3\n5 4 1 3\n4 1 3 2\n4 2 3 1\n''') == '5 6 1 2 3 4'"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\n\nassert solution('''\n3 3\n1 4 5\n''') == 'Impossible'\n\nassert solution('''\n6 2\n3 4 5 1 2\n''') == '1 2 3 4 5 6'\n\nassert solution('''\n6 2\n1 2 3 4 5 6\n''') == 'Impossible'\n\nassert solution('''\n5 2\n1 2 3 4 5\n''') == '1 2 3 4 5'"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 5 4 5 1 2') == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"7 1 2\\n3 4 5 6 1 2\\n4 1 2\\n6 5 7\\n1 2 3\\n4 5 6\\n7 1 2\\n1 3 4 5 6 7\") == \"1 2 3 4 5 6 7\"\nassert solution(\"3 3\\n6 4 5\\n1 2 3 4 5\\n2 3 4 5\\n3 2 4\\n3 1\\n2 4 3\") == \"1 2 3 4 5\"\nassert solution(\"5 4 3\\n1 2\\n3 4\\n5 2\\n1 4\\n3 5\\n1 1\") == \"3 5 2 4 1\"\nassert solution(\"3 3\\n1 1\\n2 3\\n3 1\\n3 2\\n1 3\") == \"2 3 1 3\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1 1\n4\n''') == \"IMPOSSIBLE\", \"1st example\"\nassert solution('''\n5 2 8 4\n5\n''') == \"121314\", \"2nd example\"\nassert solution('''\n5 2 8 4\n1\n''') == \"IMPOSSIBLE\", \"3rd example\"\nassert solution('''\n3 4 1 3\n2\n''') == \"IMPOSSIBLE\", \"4th example\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"3 2 4\") == \"Impossible\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 8 4''') == '20512'\nassert solution('''8 5 2 4''') == '111414'\nassert solution('''15 5 9 8''') == '111515'\nassert solution('''9 14 5 8''') == '111515'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"5 3 6 8\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 8 4') == '20512'\n\"\"\""
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 8 4\n''') == '20512'\nassert solution('''\n6 2 2 4\n''') == 'Impossible'\n\n'''\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 7 9') == '208'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 8 4''') == '20512'\nassert solution('''1 2 3''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('2 2 5 5') == '205'\nassert solution('1 2 3 4 5') == 'IMPOSSIBLE'\nassert solution('3 3 5 5 6') == 'IMPOSSIBLE'\nassert solution('4 4 4 5 5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 8 4\n''') == '20512', solution.__doc__\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string()) == output_string()\n\"\"\""
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\\\n2 3\nBAC\nABC\"\"\") == \"2\"\nassert solution(\"\"\"\\\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\"\"\") == \"3\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 3') == '2'\nassert solution('2 4') == '2'\nassert solution('3 5') == '3'\nassert solution('4 5') == '3'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 8') == '3'\nassert solution('4 8') == '3'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0, \"Empty string\"\nassert solution(\"A\") == 1, \"One letter\"\nassert solution(\"ABC\") == 3, \"Trivial case\"\nassert solution(\"BAC\") == 2, \"One letter\"\nassert solution(\"ABCD\") == 3, \"Trivial case\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\nBAC\nABC\n''') == '2'\n\nassert solution('''\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == '3'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\nBAC\nABC\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == \"2\"\nassert solution('''\n4 4\nBCD\nABC\nBCDA\nBCDA\nACCD\nBCCA\nBCDA\n''') == \"1\"\nassert solution('''\n1 5\nBA\n''') == \"1\"\nassert solution('''\n1 2\nAB\n''') == \"1\"\nassert solution('''\n1 5\nABD\nABDC\n''') == \"1\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 8') == '3'\nassert solution('4 4') == '3'\nassert solution('5 6') == '2'\nassert solution('6 6') == '3'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == 2\nassert solution('3 8') == 3\nassert solution('4 8') == 3\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"3 8\") == \"3\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n\") == \"3\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"2 2\\n\") == \"1\""
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\n\nprint(solution())\n\"\"\"\n\n\n\"\"\"\nAn example:\n\ninput = \n5 6\n\noutput = \n4\n\"\"\"\n\n\"\"\"\nA different way to do the above problem.\n\"\"\"\n\nR = int(input())\nC = int(input())"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1, 2]) == \"3\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 2') == '4'\nassert solution('1 1') == '0'\nassert solution('1 2') == '3'\nassert solution('2 2') == '3'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\n\n'''\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('5 5') == '24'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 5') == '4'\nassert solution('3 3') == '9'\nassert solution('4 5') == '8'\nassert solution('4 10') == '17'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n') == '3'\nassert solution('2 2\\n') == '1'\nassert solution('3 3\\n') == '1'\nassert solution('1 1\\n') == '0'"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n') == '3'\nassert solution('4 5\\n') == '9'\nassert solution('5 1\\n') == '0'\nprint(f\"solution() tester passed!\")\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n''') == '3'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n3 0 1 2\\n3 0 1 2\") == \"3\"\nassert solution(\"1\\n1 3 2 3\\n3 2 4 5\") == \"2\"\nassert solution(\"5 3\\n1 2 3 4 5\\n2 3 1 4 5\\n3 4 1 5 2\\n5 3 2 4 1\\n5 4 2 3 1\") == \"3\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3''') == '3'\nprint('5-3 = 3')\nassert solution('''5 7\n0 0 1 0 2 0 1\n1 2 3 0 0 1\n2 3 0 0 1\n3 0 0 0\n4 0 0 0\n0 0 0 0''') == '5'\nprint('5-7 = 4')\nassert solution('''5 5\n0 0 0 0 1\n1 1 1 1\n2 1 1 1\n3 1 1 1\n4 1 1 1''') == '4'\nprint('5-5 = 3')\nassert solution('''5 3\n0 1 2\n1 2 3\n2 3 4\n3 4 5\n4 5 6''') == '2'\nprint('5-3 = 1')\nassert solution('''5 7\n0 0 1 0 2 0 1\n1 2 3 0 0 1\n2 3 0 0 1\n3 0 0 0\n4 0 0 0\n0 0 0 0''') == '5'\nprint('5-7 = 4')\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n2 1 2') == '3'\nassert solution('5 3\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\nassert solution('10 10\\n6 6 6 6 6 6 6 6 6\\n9 9 9 9 9 9 9 9 9\\n7 7 7 7 7 7 7 7 7\\n4 4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5 5\\n3 3 3 3 3 3 3 3 3\\n1 1 1 1 1 1 1 1 1') == '4'\nassert solution('10 10\\n10 10 10 10 10 10 10 10 10\\n1 1 1 1 1 1 1 1 1 1\\n9 9 9 9 9 9 9 9 9\\n2 2 2 2 2 2 2 2 2 2\\n1 1 1 1 1 1 1 1 1 1\\n3 3 3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5 5 5\\n6 6 6 6 6 6 6 6 6 6\\n7 7 7 7 7 7 7 7 7 7\\n8 8 8 8 8 8 8 8 8 8 8') == '3'\nassert solution('1000 1000\\n50 50 50 50 50 50 50 50\\n3 3 3 3 3 3 3 3 3\\n1 1 1 1 1 1 1 1 1 1\\n0 0 0 0 0 0 0 0 0 0\\n2 2 2 2 2 2 2 2 2 2\\n0 0 0 0 0 0 0 0 0 0\\n4 4 4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5 5 5\\n6 6 6 6 6 6 6 6 6 6\\n7 7 7 7 7 7 7 7 7 7\\n8 8 8 8 8 8 8 8 8 8 8') == '4'"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\\n') == '3'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '3'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"3\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"5 5\") == \"1\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\\n') == '3'\nassert solution('5 3\\n0 1 2\\n0 1 2 3\\n0 1 2 4\\n0 2 3\\n0 3 4\\n1 3 4\\n2 4\\n3 4\\n4 4\\n') == '4'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"2 1 2\\n\"\n    \"3 0 2 3\\n\"\n    \"3 0 1 4\\n\"\n    \"2 1 4\\n\"\n    \"2 2 3\\n\"\n) == \"3\"\n\nassert solution(\n    \"3 5\\n\"\n    \"2 1 2\\n\"\n    \"3 0 2 3\\n\"\n    \"2 1 4\\n\"\n    \"2 2 3\\n\"\n) == \"2\"\n\nassert solution(\n    \"4 5\\n\"\n    \"2 1 2\\n\"\n    \"3 0 2 3\\n\"\n    \"3 0 1 4\\n\"\n    \"3 0 2 3\\n\"\n) == \"2\"\n\nassert solution(\n    \"10 7\\n\"\n    \"2 3 5 6 1\\n\"\n    \"2 2 4 3 1\\n\"\n    \"1 4 5 2 1\\n\"\n    \"2 6 7 3 2\\n\"\n    \"2 7 4 3 1\\n\"\n    \"3 1 2 4 2\\n\"\n    \"1 3 2 4 2\\n\"\n    \"3 2 3 1 2\\n\"\n    \"1 6 3 2 2\\n\"\n    \"1 7 5 3 2\\n\"\n    \"3 3 3 1 2\\n\"\n    \"1 7 2 2 2\\n\"\n) == \"1\"\n\nassert solution(\n    \"13 7\\n\"\n    \"2 3 5 6 1\\n\"\n    \"2 2 4 3 1\\n\"\n    \"1 4 5 2 1\\n\"\n    \"2 6 7 3 2\\n\"\n    \"2 7 4 3 1\\n\"\n    \"3 1 2 4 2\\n\"\n    \"1 3 2 4 2\\n\"\n    \"3 2 3 1 2\\n\"\n    \"1 6 3 2 2\\n\"\n    \"1 7 5 3 2\\n\"\n    \"3 3 3 1 2\\n\"\n    \"1 7 2 2 2\\n\"\n) == \"2\"\n\n\"\"\"\nfrom collections import defaultdict\n\nN, K = list(map(int, input().split()))\nmembers = []\ngreat_achievements = defaultdict(int)\n\nfor i in range(N):\n    members.append(int(input()))\n\nfor i, j in zip(members, members[1:]):\n    great_achievements[i] += j\n    great_achievements[j] += i\n\nans = 0\nfor key, value in great_achievements.items():\n    if value < K:\n        ans += 1\n\nprint(ans)\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '3'\nassert solution('10 3') == '4'"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2''') == 'YES'\nassert solution('''6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1''') == 'NO'\nassert solution('''15\n2 1\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1''') == 'YES'\n'''"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n4\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n\"\"\") == \"YES\"\n\nassert solution(r\"\"\"\n2\n2 2\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution([\n    \"2\",\n    \"4\",\n    \"6\",\n    \"3\",\n    \"2\",\n    \"3\",\n    \"2\",\n    \"2\",\n    \"2\",\n    \"3\",\n    \"2\",\n    \"3\",\n    \"2\",\n    \"3\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"1\",\n    \"2\",\n    \"2\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\",\n    \"3\","
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'NO'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'YES'\nassert solution('''\n2\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'NO'\nassert solution('''\n2\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'NO'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\nSample Output:\nYES\nNO\n\"\"\") == \"YES\\n\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'YES\\n'\n\n\"\"\""
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3\\n3 2\\n1 1\\n1 2\\n2 1') == 'YES'\nassert solution('1\\n1 1\\n2 2\\n3 3\\n1 1\\n1 2') == 'YES'\nassert solution('2\\n2 1\\n1 2\\n1 2\\n1 2\\n2 2') == 'NO'\nassert solution('3\\n3 1\\n1 2\\n1 1\\n2 1\\n2 1\\n2 1') == 'NO'\nassert solution('2\\n2 1\\n1 1\\n1 3\\n1 2\\n2 1\\n1 1\\n1 3\\n1 2\\n2 2\\n2 2\\n3 3') == 'NO'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES'\nassert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n4') == 'NO'\nassert solution('2\\n1') == 'NO'\nassert solution('2\\n2') == 'NO'\n\"\"\""
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3.000000000'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n\") == \"1.0\"\nassert solution(\"20\\n20\\n\") == \"4.0\"\nassert solution(\"1000\\n1000\\n\") == \"4.0\"\nassert solution(\"10\\n5\\n\") == \"1.81818182\"\n\"\"\""
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('10') == '20.000000000'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('3') == '1.947381412'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3.000000000'\nassert solution('5') == '3.9999999999'\n\n'''\n\nimport numpy as np\nimport math\nimport sys\nfrom collections import deque\n\nclass Graph:\n\n    def __init__(self,n,edges,isUndirected=False):\n        self.n=n\n        self.edges=np.array(edges)\n        self.isUndirected=isUndirected\n        self.g=np.zeros((self.n,self.n))\n        for row in self.edges:\n            self.g[row[0]][row[1]]=1\n\n    def BFS(self,n):\n        visited=np.zeros(self.n)\n        q=deque([n])\n        while q:\n            c=q.popleft()\n            visited[c]=1\n            for i in range(self.n):\n                if self.g[c][i] and not visited[i]:\n                    q.append(i)\n        return visited\n\n    def DFS(self,n):\n        visited=np.zeros(self.n)\n        stack=deque([n])\n        while stack:\n            c=stack.pop()\n            visited[c]=1\n            for i in range(self.n):\n                if self.g[c][i] and not visited[i]:\n                    stack.append(i)\n        return visited\n\n    def DFSInOrder(self,n):\n        visited=np.zeros(self.n)\n        stack=deque([n])\n        while stack:\n            c=stack.pop()\n            if visited[c]:\n                continue\n            visited[c]=1\n            for i in range(self.n):\n                if self.g[c][i] and not visited[i]:\n                    stack.append(i)\n        return visited\n\n    def DFSRec(self,n):\n        visited=np.zeros(self.n)\n        stack=deque([n])\n        while stack:\n            c=stack.pop()\n            if visited[c]:\n                continue\n            visited[c]=1\n            for i in range(self.n):\n                if self.g[c][i] and not visited[i]:\n                    stack.append(i)\n        return visited\n\n    def BFSRec(self,n):\n        visited=np.zeros(self.n)\n        q=deque([n])\n        while q:\n            c=q.popleft()\n            visited[c]=1\n            for i in range(self.n):\n                if self.g[c][i] and not visited[i]:\n                    q.append(i)\n        return visited\n\n    def isConnected(self,n):\n        for i in range(self.n):\n            if np.sum(self.g[i])!=1:\n                return False\n        return True\n\n    def findTree(self):\n        for i in range(self.n):\n            if np.sum(self.g[i])==1:\n                return i\n        return -1"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n') == '1.000000000'\nassert solution('5\\n') == '5.000000000'\nassert solution('10\\n') == '4.8000000000'\nassert solution('1\\n') == '1.000000000'\nassert solution('1000\\n') == '3.000000000'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3.000000000\"\nassert solution(\"1000\") == \"5.833333333\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3.000000000'\nassert solution('100') == '23.99999999'\nassert solution('5000') == '1023.99999999'\nassert solution('1000000') == '120000000000'\nassert solution('10') == '7.99999999999'"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('10') == '10.000000000'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3.000000000'\nassert solution('4') == '3.500000'\nassert solution('8') == '3.75000000'\nassert solution('1000') == '3.6565217391304348'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2\n3''') == '1'\n\nassert solution('''2\n4\n5\n6''') == '3'"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2\n''') == '1'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 2\n3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 2\n3\n2 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 2\n1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n4\n4 6 9''') == '1'\nassert solution('''2\n5\n9 6''') == '3'\nassert solution('''2\n1\n3''') == '1'\nassert solution('''5\n8\n5 5 4 9''') == '3'\nassert solution('''5\n8\n6 8''') == '3'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2') == '1'\nassert solution('10\\n4 5 6 3 8 1 2') == '2'\nassert solution('10\\n4 5 6 3 8 1 2') == '2'\nassert solution('5\\n1 3 2 2 4') == '3'\nassert solution('4\\n1 4 4 2') == '1'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '3'\nassert solution('1 3 4') == '4'\nassert solution('0 2 2 3 2') == '2'\nassert solution('1 3 2') == '3'\nassert solution('1 2 4') == '2'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n    ''') == '3'\nassert solution(\n    '''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n    ''') == '3'\nassert solution(\n    '''\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n    ''') == '1'\nassert solution(\n    '''\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n    ''') == '1'\nassert solution(\n    '''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n    ''') == '2'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n') == '3'\nassert solution('3 4 5\\n1 2 4\\n0 2 2 3 2\\n1 3 2\\n1 1 4\\n1 1 4\\n') == '2'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 2 3\"\n\nSample Input:\n3 5 4\n2 4 0 1 2 3\n3 4 1\n1 2 3\n2 1 3\n1 2 4\n1 3 4\n1 1 4\nSample Output:\n1\n1\n1\n2\n3\n1\n\"\"\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\nassert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '1'\nassert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '3'\nassert solution('1 3 4') == '3'\nassert solution('0 2 2 3 2') == '2'\nassert solution('1 3 2') == '3'\nassert solution('1 2 4') == '4'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\nassert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n'''\n    ) == '3'\n\nassert solution(\n'''\n5 5 3\n2 3 4 1\n1 3 2\n1 2 5\n2 4 1\n3 4 2\n'''\n    ) == '4'\n\nassert solution(\n'''\n3 5 3\n2 3 4 1\n1 3 2\n1 2 5\n2 4 1\n3 4 2\n'''\n    ) == '4'\n\nassert solution(\n'''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n'''\n    ) == '3'"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n1 1 4\\n') == '3'\nassert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n1 1 4\\n1 1 4\\n') == '2'\nassert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n1 1 4\\n1 1 4\\n1 1 4\\n') == '3'\nassert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n1 1 4\\n1 1 4\\n1 1 4\\n') == '4'\nassert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n1 1 4\\n1 1 4\\n1 1 4\\n1 1 4\\n1 1 4\\n') == '3'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution('''2 2 2 2\n3 3 2\n1 1 3\n1 1 4''') == '1'\nassert solution('''2 2 3 3\n1 2 3\n1 2 4\n1 1 5''') == '2'\nassert solution('''2 2 3 3\n1 2 3\n1 2 4\n1 1 5''') == '3'\nassert solution('''2 2 3 3\n1 2 3\n1 2 4\n1 1 5''') == '2'\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"HelloWorld.c\\ndef solution(stdin: str) -> str:\\n  pass\\n\\n\"\nassert solution(\"1\") == \"def solution(stdin: str) -> str:\\n  pass\\n\\n\"\nassert solution(\"2\") == \"HelloWorld.c\\ndef solution(stdin: str) -> str:\\n  pass\\n\\n\"\nassert solution(\"5\") == \"def solution(stdin: str) -> str:\\n  pass\\n\\n\"\nassert solution(\"4\") == \"def solution(stdin: str) -> str:\\n  pass\\n\\n\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nHelloWorld.c\\n\\n') == '2 HelloWorld.c\\n'\nassert solution('2\\nAdd.c\\n\\n') == '2 Add.c\\n'\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n''') == '2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n'"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == \"HelloWorld.c\\nint Main() { printf(\"Hello %d\\n\",i); }\"\nassert solution('3') == \"int Main() { printf(\"Hello %d\\n\",i); printf(\"THE END\\n\"); }\"\n\n'''"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 Add.c\""
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('HelloWorld.c') == '2 HelloWorld.c'\nassert solution('Add.c') == '2 Add.c'\nassert solution('123123123123') == '0 123123123123'"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\nHelloWorld.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\n\"\"\") == \"1 HelloWorld.c\\n1 def solution(stdin: str) -> str\\n    pass\\n2 Add.c\\ndef solution(stdin: str) -> str\\n    for (int i=0; i<10; i++) sum += i;\\n    printf('SUM %d', sum);\\n    printf('THE END\\n');\\n***END***\\n\"\n\nassert solution(\"\"\"\n1\nHelloWorld.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\n2\nint main() {\n  return 0;\n}\n***END***\n\"\"\") == \"2 HelloWorld.c\\n***END***\\n1 def solution(stdin: str) -> str\\n    pass\\n2 Add.c\\ndef solution(stdin: str) -> str\\n    return 0\\n    ***END***\\n***END***\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'HelloWorld.c'\nassert solution('3') == 'Add.c'\nassert solution('4') == 'int Main() {'\nassert solution('5') =='sum = 0'\nassert solution('6') == 'Hello %d'\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Hello World\") == \"Hello World\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n2 2 2\n4 2 1\n4 4 1''') == '1 2 2'\n\nprint(solution('''3 3\n2 2 2\n4 2 1\n4 4 1'''))\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 4') == '2'\nassert solution('3 0') == '1'\n\"\"\""
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"1\\n2\\n2\"\nassert solution(\"2 2\") == \"1\\n2\"\nassert solution(\"4 3\") == \"1\\n1\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '2'\nassert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '1'\nassert solution('''\n2 1\n2 1\n''') == '2'\nassert solution('''\n6 6\n5 1 4\n5 5 3\n5 5 4\n5 5 1\n5 2 1\n3 1\n''') == '1'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == '1'\nassert solution(\"2 2 2\") == '1'\nassert solution(\"2 2 2 4 1\") == '2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n2 2 2\\n4 2 1\\n4 4 1\\n\") == \"1\\n2\\n2\\n2\\n\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"1\\n2\\n2\"\nassert solution(\"4 3\") == \"1\\n2\\n2\"\nassert solution(\"4 4\") == \"1\\n2\\n3\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n2 2 2') == '1'\nassert solution('2 2 2\\n4 2 1\\n4 4 1') == '1 2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '1 2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '1'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\nassert solution('3 1') == '2'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 5') == '5'\nassert solution('3 20') == '20'\nassert solution('10 10 10') == '10'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 20') == '5'\nassert solution('5 10') == '3'\nassert solution('100 110 4') == '0'\nassert solution('50 70 10') == '3'\nassert solution('150 190 16') == '6'"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 20') == '5'\nassert solution('4 20') == '0'\n\"\"\""
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4\\n2 1 3\") == \"2\"\nassert solution(\"4\\n2 4 2\") == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 20') == '5'\nassert solution('1 10') == '1'\nassert solution('1 1') == '1'\nassert solution('3 3') == '1'\nassert solution('3 100') == '100'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == \"5\"\nassert solution('''\n2 50\n50 70\n100 110\n''') == \"2\"\n'''\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '2'\nassert solution('6 6 6') == '10'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\nassert solution('''\n1 1 1\n1 2 3\n2 4 5\n3 6 7\n''') == '3'\nassert solution('''\n100 5\n''') == '0'\nassert solution('''\n5\n10 50 60 10\n20 120 20 40\n30 30 20 10\n40 50 40 20\n50 20 50 20\n''') == '1'\nassert solution('''\n3 10\n10 10 10\n5 20 20 20\n''') == '3'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\n\nassert solution('''\n3 20\n40 70 10\n100 110 4\n150 190 16\n''') == '4'\n\nassert solution('''\n1 50 70 10\n100 110 4\n150 190 16\n''') == '10'\n\nassert solution('''\n1 40 70 10\n100 110 4\n150 190 16\n''') == '8'\n\n''')"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n.....\n.#.#.\n.#.#.\n....#\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n\"\"\") == \"26\"\nassert solution(\"\"\"\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5\n....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)''') == \"26\"\nassert solution('''5 5\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)''') == '26'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '26'\n\"\"\"\n\nfrom collections import deque\nfrom itertools import combinations\nfrom typing import Deque, Tuple\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n(2 5)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\") == \"26\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 5\\n\" +\n    \"(2 5) (5 3) (3 3) (2 3) (1 3) (1 2)\\n\" +\n    \".....\\n\" +\n    \".#.#.\\n\" +\n    \".#.#.\\n\" +\n    \"....#\\n\" +\n    \"#.##\\n\" +\n    \"1\"\n    ) == \"26\"\nassert solution(\n    \"6 5\\n\" +\n    \"(4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n\" +\n    \".....\\n\" +\n    \".#.#.\\n\" +\n    \".....\\n\" +\n    \"....#\\n\" +\n    \".#.##\\n\" +\n    \"1\"\n    ) == \"IMPOSSIBLE\"\n\nstdin = \"\"\".#.\n..#\n###\"\"\"\nprint(solution(stdin))"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5\\n(2 5)\\n...\\n.....\\n....#\\n1') == '26'\nassert solution('5 5\\n(2 5)\\n....\\n.....\\n....#\\n1') == 'IMPOSSIBLE'\nassert solution('5 5\\n(2 5)\\n....\\n.....\\n....#\\n1\\n(4 2)\\n(4 3)\\n(3 3)\\n(2 3)\\n(1 3)\\n(1 2)') == '34'\nassert solution('5 5\\n(2 5)\\n....\\n.....\\n....#\\n1\\n(4 2)\\n(4 3)\\n(3 3)\\n(2 3)\\n(1 3)\\n(1 2)') == 'IMPOSSIBLE'\nassert solution('3 4\\n(0 0)\\n(2 2)\\n(2 2)') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\n((2 5) (5 3))') == \"26\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'failure'\nassert solution('5') =='success'\nassert solution('10') == 'failure'\n\"\"\"\nimport math"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'failure'\nassert solution('6') =='success'\nassert solution('5') == 'failure'\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') == 'failure'\nassert solution('''10\n1 2\n0 0\n0 0\n1 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n''') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1'\n) == 'failure'\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 1\n2 2\n1 3\n2 3\n''') =='success'\n\nassert solution('''\n5\n2 3\n4 4\n1 1\n1 4\n2 1\n''') =='success'\n\nassert solution('''\n20\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-999 -999\n-"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n\") == \"failure\"\nprint(solution(input()))"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"failure\"\nassert solution(\"1\") == \"success\"\n\n\"\"\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\nassert solution(\"4\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"success\"\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"success\"\nassert solution(\"3\\n-1 0\\n0 0\\n1 0\") == \"failure\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n-1 0\n0 0\n1 0\n''') =='success', \"example test 1\"\n\nassert solution('''\n5\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') == 'failure', \"example test 2\"\n\nassert solution('''\n4\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') =='success', \"example test 3\"\n\nassert solution('''\n10\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n-1 2\n0 3\n1 2\n-1 3\n0 4\n1 3\n-1 4\n0 5\n1 4\n-1 5\n0 6\n1 5\n-1 6\n0 7\n1 6\n-1 7\n0 8\n1 7\n-1 8\n0 9\n1 8\n-1 9\n0 10\n1 9\n-1 10\n''') =='success', \"example test 4\"\n\nassert solution('''\n100\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n-1 2\n0 3\n1 2\n-1 3\n0 4\n1 3\n-1 4\n0 5\n1 4\n-1 5\n0 6\n1 5\n-1 6\n0 7\n1 6\n-1 7\n0 8\n1 7\n-1 8\n0 9\n1 8\n-1 9\n0 10\n1 9\n-1 10\n-1 11\n0 12\n1 11\n-1 12\n0 13\n1 12\n-1 13\n0 14\n1 13\n-1 14\n0 15\n1 14\n-1 15\n-1 16\n0 17\n1 16\n-1 17\n0 18\n1 17\n-1 18\n0 19\n1 18\n-1 19\n0 20\n1 19\n-1 20\n-1 21\n0 22\n1 22\n-1 21\n0 23\n1 23\n-1 24\n0 25\n1 24\n-1 25\n0 26\n1 26\n-1 27\n-1 28\n0 29\n1 28\n-1 29\n0 30\n1 30\n-1 31\n0 32\n1 31\n-1 32\n0 33\n1 33\n-1 34\n0 35\n1 34\n-1 35\n0 36\n1 36\n-1 37\n0 38\n1 37\n-1 38\n0 39\n1 39\n-1 40\n0 41\n1 40\n-1 41\n0 42\n1 42\n-1 43\n0 44\n1 43\n-1 44\n0 45\n1 45\n-1 46\n0 47\n1 47\n-1 48\n0 49\n1 49\n-1 50\n''') == 'failure', \"example test 5\""
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == \"possible\"\nassert solution('1 2') == \"impossible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('3 3') == 'impossible'\nassert solution('5 2 2') == 'possible'\nassert solution('5 2 2') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2') == \"possible\"\nassert solution('1 2') == \"impossible\"\nassert solution('3 3') == \"impossible\"\nassert solution('5 2 2') == \"impossible\"\nassert solution('5 2 2') == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 2') == 'impossible'\nassert solution('5 2 2') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n1\n1\n''') == 'possible'\nassert solution('''\n2\n1\n1\n''') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('3 3') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\") == 'possible'\nassert solution(\"1 2\") == 'impossible'"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n5\\n6\\n7\\n') == 'impossible'\nassert solution('4\\n2\\n2\\n3\\n3\\n') == 'possible'\n\"\"\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\") == \"possible\"\nassert solution(\"1 2\") == \"impossible\"\nassert solution(\"3 3\") == \"impossible\"\nassert solution(\"5 2 2\") == \"impossible\"\nassert solution(\"5 2 2\") == \"possible\""
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"3 2\n1 1 2\n1 2 3\n-1 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"3 3\n0 1 2\n1 2 3\n0 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"10 10\n0 1 2\n1 2 3\n0 1 2\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '0'\nassert solution('10 3') == '1'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3\n1 2\n1 2 3\n-1 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n10 10\n2 1 2 1 1 2 2 2 2 1\n1 3 1 1 1\n2 5 1 5\n3 4\n1 3 2\n1 4\n1 3 2\n1 3\n3 2\n1 4\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2') == '0'\nassert solution('3\\n1\\n1\\n1') == '2'\nassert solution('3\\n2\\n1\\n2') == '2'\nassert solution('3\\n3\\n2\\n2') == '1'\nassert solution('3\\n3\\n3\\n2') == '1'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 3\n0 1 3\n1 2 1\n2 3 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '0'\nassert solution('5 1 1') == '2'\nassert solution('3 2') == '0'\nassert solution('3 2') == '0'\nassert solution('3 2') == '0'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2 1 1 2') == '1'\nassert solution('3 2 1 1 2 -1 1 2') == '0'\nassert solution('3 2 1 1 2 -1 1 2') == '1'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '0'\nassert solution('1 1 2') == '1'\nassert solution('1 2 1') == '2'\nassert solution('-1 1 2') == '1'\nassert solution('2 4 1') == '1'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 0\") == \"0\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('5') == '13'\nassert solution('5') == '13'\n\nstdin = '1234'\nassert solution(stdin) == '13'\nassert solution(stdin) == '13'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '4'\nassert solution('3 2') == '3'\nassert solution('5 2') == '5'\nassert solution('6 2') == '6'\nassert solution('6 3') == '6'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1') == '4'\nassert solution('5\\n2') == '3'\nassert solution('5\\n3') == '2'\nassert solution('5\\n4') == '1'\nassert solution('5\\n5') == '0'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('23') == '23'\nassert solution('2020') == '2020'\nassert solution('123') == '123'\nassert solution('100') == '100'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '5'\nassert solution('9 2') == '9'"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1''') == '4'\nassert solution('''2\n3''') == '4'\nassert solution('''3\n1''') == '4'\nassert solution('''4\n1''') == '3'\nassert solution('''5\n1''') == '3'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n353''') == \"3\"\nassert solution('''4 2\n1234''') == \"4\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"4\""
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('1234') == '1313'\nassert solution('12345') == '1313'\nassert solution('123456') == '1313'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n') == '4'\nassert solution('8\\n') == '8'\nassert solution('100\\n') == '100'\nassert solution('1006\\n') == '101'\nassert solution('1000\\n') == '1001'\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 47 0 4 9''') == 'YES'\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n\nassert solution(input) == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n12 30 45 3 11\n''') == 'NO'\nassert solution('''\n3 47 0 4 9\n''') == 'YES'\nassert solution('''\n12 0 1 12 1\n''') == 'YES'\n'''\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n12 30 45 3 11\n\n''') == 'NO', \"12h 30m 45s\"\nassert solution('''\n3 47 0 4 9\n\n''') == 'YES', \"3h 47m 0s\"\nassert solution('''\n10 19 0 5 0\n\n''') == 'NO', \"10h 19m 0s\"\nassert solution('''\n12 30 45 3 11\n\n''') == 'NO', \"12h 30m 45s\"\nassert solution('''\n12 0 1 12 1\n\n''') == 'YES', \"12h 0m 1s\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 1 2 3 1 0\n2 4 20\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 1 2 3 1 0\n15 27 26\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1 2 3 1 0\n15 20 15\n\"\"\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1 2 3 1 0\n2 4 20''') == '3'\nassert solution('''1 1 2 3 1 0\n15 27 26''') == '2'\nassert solution('''1 1 2 3 1 0\n15 15 0''') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2 3 1 0\") == \"3\"\nassert solution(\"2 4 20\") == \"2\"\nassert solution(\"1 1 2 3 1 0\") == \"0\"\nassert solution(\"1 1 2 3 1 0\") == \"0\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 1 2 3 1 0\n2 4 20\"\"\") == \"3\"\n\nassert solution(\"\"\"\n1 1 2 3 1 0\n15 27 26\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1 1 2 3 1 0\n2 2 1\"\"\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"1 1 2 3 1 0\n2 4 20\"\"\") == \"3\"\nassert solution(\n\"\"\"1 1 2 3 1 0\n15 27 26\"\"\") == \"2\"\nassert solution(\n\"\"\"1 1 2 3 1 0\n1 2 1\"\"\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 2 3 1 0') == '3'\nassert solution('15 27 26') == '2'\nassert solution('1 1 2 3 1 0') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 2 3 1 0\n2 4 20\n''') == '3'\n\nassert solution('''\n1 1 2 3 1 0\n2 4 20\n''') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n0 1\") == \"0\"\nassert solution(\"1 1 2 3 1 0\\n31 81\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2 3 1 0\") == \"3\"\nassert solution(\"2 4 20\") == \"2\"\nassert solution(\"1 1 2 3 1 0\") == \"0\"\nassert solution(\"1 1 2 3 1 0\") == \"0\"\nassert solution(\"1 1 2 3 1 0\") == \"0\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 2 3 1 0\n2 4 20\n''') == '3'\nassert solution('''\n1 1 2 3 1 0\n2 2 1\n''') == '0'\nassert solution('''\n1 1 2 3 1 0\n15 27 26\n''') == '2'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('3') == '4'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"3\") == \"8\"\nassert solution(\"3\") == \"12\"\n\"\"\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n''') == \"4\"\nassert solution('''\n3\n0 0 2\n3 0 2\n6 0 2\n''') == \"6\"\nassert solution('''\n3\n0 0 2\n2 0 2\n1 1 2\n''') == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == stdout_, \"Your code is wrong!\"\n\n\"\"\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 0 1\n2 0 1\n4 0 1\n''') == '4'\nassert solution('''\n0 0 2\n3 0 2\n6 0 2\n''') == '8'\nassert solution('''\n0 0 2\n3 0 2\n6 0 2\n''') == '8'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'\nassert solution('3') == '4'\nassert solution('3\\n0 0 1\\n2 0 1\\n4 0 1') == '4'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('0') == '4'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\nassert solution(f\"{3}\\n{2}\\n{4}\\n\") == \"6\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\\\n3\n0 0 1\n2 0 1\n4 0 1\n\"\"\") == '4'\n\nassert solution(\"\"\"\\\n3\n0 0 2\n3 0 2\n6 0 2\n\"\"\") == '8'\n\nassert solution(\"\"\"\\\n3\n0 0 2\n2 0 2\n1 1 2\n\"\"\") == '10'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 6 0 6 6 0 6') == 'YES'\nassert solution('1 3 3 5 5 3 3 1') == 'NO'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_sample_01) == 'YES'\nassert solution(input_sample_02) == 'NO'"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES'\nassert solution('''\n0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n''') == 'NO'\n'''\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n\"\"\") == \"YES\", \"First\"\nassert solution(\"\"\"\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n\"\"\") == \"NO\", \"Second\"\nassert solution(\"\"\"\n-100 100 -100 100 -100 100 -100 100\n-100 100 -100 100 -100 100 -100 100\n\"\"\") == \"YES\", \"Third\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"1 3 5 4 5\") == \"YES\"\nassert solution(\"-1 -3 -5 -4 -5\") == \"YES\"\nassert solution(\"6 0 6 6 0 6 0 0\") == \"YES\"\nassert solution(\"7 4 4 7 7 10 10 7\") == \"YES\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"NO\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == 'YES'\nassert solution('''\n0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n''') == 'NO'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\n    \"0 0 6 0 6 6 0 6\\n7 4 4 7 7 10 10 7\\n\") == \"NO\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES'\nassert solution('0 0 6 0 6 6 0 6\\n7 4 4 7 7 10 10 7\\n') == 'YES'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES'\nassert solution('''\n0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n''') == 'NO'\nassert solution('''\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == 'YES'\nassert solution('''\n0 0 6 0 6 6 0 6\n7 4 4 7 7 10 10 7\n''') == 'NO'"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"sjfnb\"\nassert solution(\"2\") == \"cslnb\"\nassert solution(\"2\") == \"sjfnb\"\nassert solution(\"3\") == \"sjfnb\"\nassert solution(\"3\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 1\") == \"sjfnb\"\nassert solution(\"4\\n1 1 1 1\") == \"sjfnb\"\nassert solution(\"4\\n0 0 0 0\") == \"cslnb\"\nassert solution(\"5\\n1 1 1 1 1\") == \"cslnb\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"cslnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == \"sjfnb\"\nassert solution(\"1\") == \"cslnb\"\nassert solution(\"2\") == \"cslnb\"\nassert solution(\"3\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\nprint('All test cases passed!')\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') =='sjfnb'\nassert solution('2') == 'cslnb'\nassert solution('3') =='sjfnb'\nassert solution('2 3 1') == 'cslnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0\n\n''') =='sjfnb', 'first'\nassert solution('''\n2\n1 0\n\n''') == 'cslnb','second'\nassert solution('''\n3\n2 3 1\n\n''') =='sjfnb', 'third'\nassert solution('''\n4\n1 2 1 2\n\n''') == 'cslnb', 'fourth'\nassert solution('''\n2\n2 2\n\n''') =='sjfnb', 'fifth'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n0\\n') =='sjfnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'\n\n'''\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n0') == 'cslnb'\nassert solution('2\\n1 0') == 'cslnb'\nassert solution('2\\n2 2') =='sjfnb'\nassert solution('3\\n2 3 1') =='sjfnb'\n\nstdin = ''\nsolution(stdin)\n\n\n\"\"\"\n\n\n\n\"\"\"\nfor i in range(1,n):\n    if (stones[i-1] == stones[i]):\n        print(\"csl\",i,stones[i])\n        return \"csl\",i,stones[i]\n\n\"\"\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() in ('sjfnb', 'cslnb')\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 5') == '2'\nassert solution('1 1') == '0'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1') == '1'\nassert solution('3 5\\n1 5 3') == '2'\nassert solution('1 1\\n1') == '1'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n\n\n'''\nfrom math import inf\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n\"\"\"\nimport math\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INPUT) == '2'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5 3') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1\", \"First\"\nassert solution(\"1 1\") == \"1\", \"Second\"\nassert solution(\"1 1\") == \"0\", \"Third\"\nassert solution(\"1 1\") == \"0\", \"Fourth\"\nassert solution(\"1 1\") == \"0\", \"Fifth\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"5 5\") == \"1\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\nassert solution('3') == '2'\nassert solution('4') == '-1 0 1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\\n-1 0 1\"\nassert solution(\"5\") == \"5\\n-1 0 1\"\n\nassert solution(\"1\") == \"1\\n0 1\"\nassert solution(\"2\") == \"2\\n-1 0 1\"\n\nassert solution(\"3\") == \"3\\n-1 0 1\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\nassert solution('3') == '2 -1 0 1'\nassert solution('4') == '-1 -1 0 1'\nassert solution('5') == '2 -1 -1 0 1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2 0 1'\nassert solution('1') == '0 1'\nassert solution('0') == '1 -1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n1''') == '1\\n0 1'\nassert solution('''2\n-1 0 1''') == '2\\n-1 0 1'\nassert solution('''3\n-1 -1 0 1''') == '3\\n1 0 1'"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\n\n\nInput\n3\n\nOutput\n3\n-1 -1 0 1\n1\n0 1\n\n\nInput\n2\n\nOutput\n2\n-1 0 1\n1\n0 1\n\n\nInput\n4\n\nOutput\n3\n-1 0 1\n1\n0 1\n\nInput\n5\n\nOutput\n3\n-1 0 1\n1\n0 1\n\nInput\n6\n\nOutput\n2\n-1 0 1\n1\n0 1\n\n\nInput\n8\n\nOutput\n3\n-1 0 1\n1\n0 1\n\nInput\n14\n\nOutput\n-1\n-1\n-1\n1\n0 1\n\nInput\n15\n\nOutput\n-1\n-1\n-1\n-1\n0 1\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\nassert solution('3') == '-1 0 1'\nassert solution('4') == '1 1'\nassert solution('5') == '-1 1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1\\n0 1\\n0\\n1'\nassert solution('2') == '2\\n-1 0 1\\n1'\n\n\"\"\""
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == \"2\\n-1 0 1\"\nassert solution('1') == \"1\\n0 1\""
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\n\nassert solution(\"1\") == \"-1 0 1\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 2 2'"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 3 3 \nassert solution() == \"2 3 2 \nassert solution() == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '1 3 3'\n\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '2 3 2'\n\nassert solution('''\n10 2 6 6\n''') == '2 1 1 1 1 1 2 2 3 1 1 2 3'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '1 3 3', 'First example'\n\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '2 3 2', 'Second example'\n\nassert solution('''\n3 2 5 3\n1 3 1\n''') == '1 2 2', 'Third example'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 5 4') == '1 3 3'\nassert solution('3 1 5 3') == '2 3 2'\nassert solution('3 2 5 3') == '1 2 2'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '1 3 3', 'Error'\n\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '2 3 2', 'Error'\n\nassert solution('''\n2 1 5 3\n1 3 1\n''') == '1 2 2', 'Error'\n\nassert solution('''\n3 2 5 3\n1 3 1\n''') == '1 3 3', 'Error'\n\nprint('All tests passed')"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 5 3') == '1 3 3'\nassert solution('3 2 5 3') == '2 3 2'"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 2 3\"\nassert solution() == \"1 2 2\"\nassert solution() == \"1 3 1\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 5 4') == '1 3 3', 'First example'\nassert solution('3 1 5 3') == '1 2 2', 'Second example'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1 5 4\n1 2 1 3\n''') == '1 3 3', 'test 1'\nassert solution('''3 1 5 3\n1 3 1\n''') == '1 2 2', 'test 2'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"1001\") == \"1\"\nassert solution(\"0001101\") == \"3\"\nassert solution(\"100001010\") == \"3\"\nassert solution(\"10101011\") == \"3\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''110\n2''') == '3'\nassert solution('''111111011\n2''') == '169'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\nassert solution('1') == '1'\nassert solution('101') == '0'\n\n'''\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\n\n'''\n\nn = int(stdin.readline())\nk = int(stdin.readline())\n\nfrom math import floor\nfrom math import log"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"110\") == \"3\"\nassert solution(\"111111011\") == \"169\"\nassert solution(\"11111111111111111111111111011\") == \"37\""
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\nassert solution('110110') == '30'\nassert solution('0') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n\n110\n2\n\n''') == '3'\n\nassert solution('''\n\n111111011\n2\n\n''') == '169'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''110\n2''') == '3'\nassert solution('''111111011\n2''') == '169'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 1 2 0 0') == '11.084259940083'\nassert solution('5 0 4 2 2 0') == '33.121375178000'\nassert solution('6 2 5 3 7 1') == '12.261499999'\nassert solution('9 2 4 2 5 0') == '19.6020286697'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n''') == '11.084259940083'\nassert solution('''\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n''') == '33.121375178000'\n\nprint('All tests passed!')\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 0 4 2 2 0') == '33.121375178000'\nassert solution('3 1 1 2 0 0') == '11.084259940083'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n\"\"\") == \"11.084259940083\"\nprint(solution(*tuple(map(int, input().split()))))\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n''') == '11.084259940083'\nassert solution('''5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n''') == '33.121375178000'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n''') == '11.084259940083'\nassert solution('''\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n''') == '33.121375178000'\nassert solution('''\n7 0 0 0 1 0 0\n7\n0 1\n0 0\n1 1\n0 0\n0 0\n0 0\n''') == '18.696578592796'\nassert solution('''\n4 0 0 0 0\n4\n1 2\n0 0\n2 1\n''') == '3.6037006604438'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 0 4 2 2 0''') == '33.121375178000'\nassert solution('''3 1 1 2 0 0''') == '11.084259940083'\nassert solution('''5 0 4 2 2 0''') == '33.121375178000'\nassert solution('''3 1 1 2 0 0''') == '11.084259940083'"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 2 0 0') == '11.084259940083'\nassert solution('5 0 4 2 2 0') == '33.121375178000'\n\n'''\n\nimport math\nimport sys\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1 2 0 0\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\") == \"33.121375178000\"\nassert solution(\"8 0 6 0 3 0 0 6 0\") == \"13.366038060000\""
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1 2 0 0') == '11.084259940083'\nassert solution('3 1 1 2 0 0') == '33.121375178000'\nprint('All tests passed!')"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(example_input_3) == example_output_3\nassert solution(example_input_4) == example_output_4\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"10000000000 1000000000001\") == \"50000000000\"\nassert solution(\"10\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 5\n''') == '2'\nassert solution('''8 15\n''') == '1'\nassert solution('''7 20\n''') == '0'\nassert solution('''1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 5\n''') == '2'\nassert solution('''\n8 15\n''') == '1'\nassert solution('''\n7 20\n''') == '0'\nassert solution('''\n1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000000000000 50000000001') == '1'\nassert solution('7 200000001000') == '0'\nassert solution('1000000000000 50000000001') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"2\"\nassert solution(\"8 5\") == \"2\"\nassert solution(\"7 20\") == \"1\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == stdout_data\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 10') == '11'\nassert solution('5 10 1') == '2'\nassert solution('7 2 3') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1 10\n01000\n''') == \"11\"\nassert solution('''5 10 1\n01000\n''') == \"2\"\nassert solution('''7 2 3\n1111111\n''') == \"0\"\nassert solution('''6 10 5\n111111\n''') == \"0\"\nassert solution('''11 11 11\n111111111111\n''') == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\nassert solution(input(\"\"\"1 10 1\n01000\n\"\"\")) == '11'\nassert solution(input(\"\"\"7 2 3\n1111111\n\"\"\")) == '0'\n\"\"\"\n3 4 5\n1234\n\"\"\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"11\""
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1 10') == '11'\nassert solution('5 10 1') == '2'\nassert solution('7 2 3') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10\") == \"11\"\nassert solution(\"5 10 1\") == \"2\"\nassert solution(\"7 2 3\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1 10\n01000''') == '11'\nassert solution('''5 10 1\n01000''') == '2'\nassert solution('''7 2 3\n1111111''') == '0'\nprint(solution('''11\n11\n111'''))\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\") == \"1\"\nassert solution(\"5 1 10\") == \"11\"\nassert solution(\"5 10 1\") == \"2\"\nassert solution(\"7 2 3\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1 10') == '11'\nassert solution('5 10 1') == '2'\nassert solution('7 2 3') == '0'\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3 1\") == \"1\"\nassert solution(\"5 10 1\") == \"11\"\nassert solution(\"7 2 3\") == \"0\""
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n\n\nimport itertools"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n\n\"\"\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1 1\n''') == '2 1'\nassert solution('''5 1 2\n''') == '19 5'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"1 1 1\") == \"2 1\"\nassert solution(\"2 5 2\") == \"19 5\"\nassert solution(\"3 3 1\") == \"2 1\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"3 2 1\") == \"2 3\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1 1\n2 1\n1 2\n''') == '2 1'\nassert solution('''5 1 2\n19 5\n1 2\n4 1\n3 1\n2 1\n5 1\n2 3\n''') == '19 5'\nprint('all test cases passed')"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n2 2''') == '4'\nassert solution('''10 2\n2 2''') == '4'\nassert solution('''10 1\n2 2''') == '1'\nassert solution('''10 1\n2 2''') == '9'\nassert solution('''8 9\n4 4''') == '0'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'\nassert solution('11 3') == '1'\nassert solution('12 4') == '1'\nassert solution('13 5') == '2'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 1''') == '6'\nassert solution('''10 2''') == '4'\nassert solution('''16 5''') == '2'\nassert solution('''3 10''') == '7'\nassert solution('''3 15''') == '3'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 1''') == '6'\nassert solution('''10 2''') == '4'\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nTask\n\nYou are given a string, S, and a list of words, L, that are all of the same length. Find all starting indices of\nsubstrings in S that are a concatenation of all the words in L exactly once without any intervening characters.\n\nFor example, given:\nS: abcdefffebaec\nL: list\n\nReturn:\n[0, 9]\n\n-------Solution-----\n\nfrom collections import defaultdict"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 1''') == '6'\nassert solution('''10 2''') == '4'\nassert solution('''1 1''') == '1'\nprint('Hurray! All tests passed!')"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('2') == '195.0.0.0/8'\nassert solution('3') == '-1'"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('2') == '195.0.0.0/8'\nassert solution('3') == '-1'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '-1'\nassert solution('1') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('4') == '149.154.167.99'\nassert solution('3') == '127.0.0.4/30'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('2') == '195.0.0.0/8'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('6') == '-1'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n-149.154.167.99\n\n2\n-127.0.0.1/32\n+127.0.0.1\n\n3\n+127.0.0.0/29\n+127.0.0.0/30\n+127.0.0.1\n-195.0.0.0/8\n+127.0.0.2/31\n-127.0.0.6/31\n+127.0.0.6/30\n-127.0.0.4/30\n''') == '2\\n0.0.0.0/0\\n'\n\nassert solution('''\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\n6\n+127.0.0.1/32\n-127.0.0.1\n\n7\n+127.0.0.0/30\n+127.0.0.0/29\n+127.0.0.1\n-195.0.0.0/8\n+127.0.0.2/31\n-127.0.0.6/31\n+127.0.0.6/30\n-127.0.0.4/30\n''') == '2\\n195.0.0.0/8\\n'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('2') == '195.0.0.0/8'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"-149.154.167.99\") == \"0.0.0.0/0\"\nassert solution(\"-127.0.0.4/31\") == \"195.0.0.0/8\"\nassert solution(\"-127.0.0.6/31\") == \"-127.0.0.6/31\"\nassert solution(\"+127.0.0.1/32\") == \"127.0.0.1/32\"\nassert solution(\"+129.0.0.1/32\") == \"-129.0.0.1/31\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '-1', \"This test should fail\"\nassert solution('1') == '0.0.0.0/0', \"This test should fail\"\nassert solution('4') == '0.0.0.0/0', \"This test should fail\"\nassert solution('5') == '195.0.0.0/8', \"This test should fail\"\nassert solution('6') == '-1', \"This test should fail\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0.0.0.0/0\"\nassert solution(\"4\") == \"0.0.0.0/0\"\nassert solution(\"5\") == \"195.0.0.0/8\"\nassert solution(\"6\") == \"-1\"\nassert solution(\"7\") == \"0.0.0.0/0\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n+127.0.0.1/32\n-127.0.0.1\n''') == '2'\nassert solution('''\n+127.0.0.1/32\n-127.0.0.1\n''') == '-1'\nassert solution('''\n+127.0.0.1/32\n-127.0.0.1\n''') == '-1'\nassert solution('''\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n''') == '0.0.0.0/0'\nassert solution('''\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n''') == '195.0.0.0/8'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\n\nassert solution() == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11\\n00000000008') == '1'\nassert solution('22\\n0011223344556677889988') == '2'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"2\"\nassert solution(input) == \"2\""
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '1'\nassert solution('22') == '2'\nassert solution('11') == '0'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\"\nassert solution(\"31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution('') == '0'\nassert solution('22') == '2'\nassert solution('11') == '1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"11\") == \"2\"\nassert solution(\"22\") == \"2\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"11\"\n) == \"1\"\n\nassert solution(\n    \"22\"\n) == \"2\"\n\nassert solution(\n    \"11\"\n) == \"0\"\n\nassert solution(\n    \"31415926535\"\n) == \"0\"\n\nassert solution(\n    \"21\"\n) == \"1\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11') == '1'\nassert solution('22') == '2'\nassert solution('11') == '0'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '3\\nrow 1\\nrow 2\\nrow 3'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '-1'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '-1'\nassert solution() == '4'\n\n\"\"\""
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n2 2\n2 2\n\n''') == '4'\nassert solution('''\n3 3\n0 0 0\n0 1 0\n0 0 0\n\n''') == '-1'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '4'\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '-1'\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\n''') == '4'"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5\\n2 2 2 3 2') == '4'\nassert solution('5 3\\n1 1 1 1 1') == '3'\nassert solution('3 3\\n1 1 1') == '-1'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '3\\nrow 1\\nrow 2\\nrow 3\\n'"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n') == '4'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '3'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '-1'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2 1 4\") == \"NO\"\nassert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"10 3 11 4\") == \"YES\"\nassert solution(\"5 2 1 4\") == \"YES\"\nassert solution(\"4 1 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 6 4 5''') == 'YES'\nassert solution('''8 6 4 6''') == 'NO'\nassert solution('''10 3 11 4''') == 'YES'\nassert solution('''4 2 1 4''') == 'YES'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"YES\"\nassert solution(\"4 2 1 4\") == \"YES\"\nassert solution(\"1 2 1 4\") == \"NO\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 6 4 5') == 'YES'\nassert solution('8 6 4 6') == 'NO'\nassert solution('10 3 11 4') == 'YES'\nassert solution('4 2 1 4') == 'NO'\n\n---\n\nsolution = lambda stdin: (stdin[0] == 'YES') and 'YES' or 'NO'"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"YES\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 3 11 4''') == 'YES'\nassert solution('''10 2 1 4''') == 'YES'\nassert solution('''8 6 4 5''') == 'NO'\nassert solution('''8 6 4 6''') == 'YES'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 4 4 5') == 'YES'\nassert solution('8 6 4 5') == 'YES'\nassert solution('10 3 11 4') == 'NO'\nassert solution('4 2 1 4') == 'YES'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == 6\nassert solution(\"7 8\") == 12\nassert solution(\"2 2\") == -1\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '6'\nassert solution('7 8') == '12'\nassert solution('1 2') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"7 8\") == \"12\"\nassert solution(\"3 2\") == -1"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"7 8\") == \"12\"\nassert solution(\"2 2\") == \"-\""
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"12\"\nassert solution(\"7 8\") == \"12\"\nassert solution(\"2 2\") == \"-1\"\nassert solution(\"7 8\") == \"-1\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n1 3\n1 4\n\n''') == '6'\nassert solution('''\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\n''') == '12'\nassert solution('''\n2 2\n1 2\n2 1\n\n''') == '-1'\nassert solution('''\n11\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"7 8\") == \"12\"\nassert solution(\"2 2\") == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 3\n1 4\n''') == '6'\nassert solution('''7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12'\nassert solution('''2 2\n1 2\n2 1\n''') == '-1'\nassert solution('''4 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 3\n1 4\n''') == '6'\nassert solution('''7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12'\nassert solution('''2 2\n1 2\n2 1\n''') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_str) == str(6)"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == \"NO\"\nassert solution('3 2') == \"YES\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'NO'\n\"\"\"\n\nfrom collections import Counter\nimport math"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 0\n1 1\n0 1''') == 'NO'\nassert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0''') == 'YES'\n''')"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'YES'\n\nassert solution('5 3') == 'NO'"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"NO\"\n\nassert solution(input(\"\")) == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == 'NO'\nassert solution('3 2') == 'YES'\n\n---\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"NO\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\"\"\") == \"NO\"\nassert solution(\"\"\"3 2\n1 0\n1 1\n0 1\"\"\") == \"YES\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5\\n2 3 5 12') == 'Yes'\nassert solution('2 7\\n2 3') == 'No'"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\"\nassert solution(\"4 5\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"1 1\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('3 2') == 'Yes'\nassert solution('4 5') == 'Yes'\nassert solution('2 7') == 'No'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 5\n2 3 5 12\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n2 7\n2 3\n\"\"\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\"\nassert solution(\"4 5\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5\n2 3 5 12\n\n''') == \"Yes\"\nassert solution('''\n2 7\n2 3\n\n''') == \"No\"\n\n\n\"\"\""
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5') == 'Yes'\nassert solution('2 7') == 'No'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\""
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\nprint(solution(input()))"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 4') == '6', \"Y11R3P2T1 - BINARY SEARCH\"\nassert solution('1 1 1') == '2', \"Y11R3P2T1 - BINARY SEARCH\"\nassert solution('1 2 3') == '-1', \"Y11R3P2T1 - BINARY SEARCH\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 4\") == \"8\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"3 3 4\") == \"6\"\nassert solution(\"5 3 2\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 1 3\") == \"4\"\nassert solution(\"5 5 4\") == \"8\"\nassert solution(\"3 4 1\") == \"6\"\nassert solution(\"3 4 2\") == \"8\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n3 4 1\n''') == '6'\n\nassert solution(\n'''\n6 4 2\n''') == '8'\n\nassert solution(\n'''\n2 3 4\n''') == '-1'\n\nassert solution(\n'''\n4 4 5\n''') == '-1'\n\nassert solution(\n'''\n10 10 3\n''') == '-1'"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '6'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"3\") == \"2\""
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 2 4 3') == '2'\nassert solution('3\\n4 1 1') == '0'\n\nstdin = \"\"\"\n5\n1 2 2 4 3\n\n\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 2 4 3\\n') == '2'\nassert solution('3\\n4 1 1\\n') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 2 4 3\n''') == '2'\nassert solution('''\n4\n1 1 2 2\n''') == '-1'\nassert solution('''\n1\n4 1 1\n''') == '0'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 2 4 3\n\n''') == '2'\nassert solution('''4\n0 3 0 4\n\n''') == '0'\nassert solution('''6\n1 2 3 4 5 6\n\n''') == '-1'\nassert solution('''5\n1 2 1 1 2\n\n''') == '2'\nassert solution('''5\n2 2 1 1 2\n\n''') == '2'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1 2 2 4 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n4 1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n0 3 0 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1000000000\n0 0 0 4000000000000\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n5\n5 5 5 5 5\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 2 4 3\n\n''') == '2'\nassert solution('''\n4\n4 1 1\n\n''') == '0'\nassert solution('''\n4\n0 3 0 4\n\n''') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 2 4 3') == '2'\nassert solution('3\\n4 1 1') == '0'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5'\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\nassert solution('2') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('10111') == '4'\nassert solution('010101') == '3'\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '5'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n000000000000\n000000000000\n000000000000\n000000000000\n000000000000\n000000000000\n''') == '2'\nassert solution('''\n2\n000000000000\n000000000000\n000000000000\n000000000000\n000000000000\n000000000000\n''') == '5'\nassert solution('''\n8\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n000000000000\n000000000000\n000000000000\n000000000000\n000000000000\n000000000000\n000000000000\n''') == '5'\nassert solution('''\n1\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n''') == '5'\nassert solution('''\n5\n000000000000000000000000000000000\n000000000000000000000000000000000\n000000000000000000000000000000000\n000000000000000000000000000000000\n000000000000000000000000000000000\n000000000000000000000000000000000\n000000000000000000000000000000000\n''') == '5'\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('2') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10000011''') == '5'\nassert solution('''01''') == '2'\nassert solution('''000000000110101''') == '4'\nassert solution('''0000000000000101''') == '4'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n00100011\") == \"5\"\n\nassert solution(\"2\\n01\") == \"2\"\n\n\n\"\"\""
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10000011') == '5'\nassert solution('01') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\n10000011''') == 5\nassert solution('''2\n01''') == 2\nassert solution('''3\n010''') == 2\n\n\"\"\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3 1 4\n''') == '3'\nassert solution('''4\n4 4 4 4\n''') == '-1'\nassert solution('''4\n2 1 4 3\n''') == '1'\n\n\n\"\"\""
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2 3 1 4') == '3'\n\nassert solution('4\\n4 4 4 4') == '-1'\n\nassert solution('4\\n2 1 4 3') == '1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3'\nassert solution('4\\n4 4 4 4\\n') == '-1'\nassert solution('4\\n2 1 4 3\\n') == '1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 3 1 4\n''') == '3'\nassert solution('''\n4\n4 4 4 4\n''') == '-1'\nassert solution('''\n4\n2 1 4 3\n''') == '1'\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1 4\") == \"3\"\nassert solution(\"4 4 4 4\") == \"-1\"\nassert solution(\"2 1 4 3\") == \"1\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"1\"\nassert solution(\"3\\n2 1 4 3\\n\") == \"1\"\n\"\"\"\n\nn = int(input())\ncrush = [int(i) for i in input().split()]"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2 3 1 4\n\n''') == '3'\n\nassert solution('''\n4\n4 4 4 4\n\n''') == '-1'\n\nassert solution('''\n4\n2 1 4 3\n\n''') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 3 1 4\n''') == '3'\n\nassert solution('''\n4\n4 4 4 4\n''') == '-1'\n\nassert solution('''\n4\n2 1 4 3\n''') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1 4\") == \"3\"\nassert solution(\"4 4 4 4\") == \"-1\"\nassert solution(\"3 5 1 2\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3'\nassert solution('4\\n4 4 4 4\\n') == '-1'\nassert solution('4\\n2 1 4 3\\n') == '1'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n\n1 3 2 0\n''') == '2'\nassert solution('''\n7\n\n1 3 3 2 1 2 3\n''') == '0'\nassert solution('''\n2\n\n2 2\n''') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 3 2 0\") == \"2\"\nassert solution(\"4\\n1 3 2 0\") == \"1\"\nassert solution(\"7\\n1 3 3 2 1 2 3\") == \"0\"\nassert solution(\"2\\n2 2\") == \"1\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n') == '2'\nassert solution('7\\n') == '0'\nassert solution('2\\n') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n\") == '2'\nassert solution(\"7\\n\") == '0'\nassert solution(\"2\\n\") == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"1\"\nprint(solution(input_string))"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 3 2 0\n''') == '2'\nassert solution('''\n4\n''') == '0'\nassert solution('''\n7\n''') == '1'\nassert solution('''\n2\n''') == '0'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 3 2 0\n''') == '2'\nassert solution('''\n7\n1 3 3 2 1 2 3\n''') == '0'\nassert solution('''\n2\n2 2\n''') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 2 0') == '2'\nassert solution('7') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution(\"\"\"\n4\n\n1 3 2 0\"\"\") == '2'\nassert solution(\"\"\"\n7\n\n1 3 3 2 1 2 3\"\"\") == '0'\nassert solution(\"\"\"\n2\n\n2 2\"\"\") == '1'\nprint('Good job!')\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '2'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"7\\n\"\n    \"10\\n\"\n    \"12\\n\"\n) == \"210\"\n\nassert solution(\n    \"1\\n\"\n    \"5\\n\"\n    \"15\\n\"\n) == \"15\""
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([9]) == 504\nassert solution([7]) == 210\nassert solution([7, 6, 5]) == 210\nassert solution([7, 6, 5, 11]) == 216\nassert solution([7, 6, 5, 11, 12]) == 216\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\n\n\n\"\"\"\nfrom math import gcd"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '28'\nassert solution('7') == '210'\nassert solution('6') == '280'\nassert solution('5') == '210'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\"\n\nsolution(\"7\")"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n''') == '504'\nassert solution('''\n7\n''') == '210'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\nassert solution('5') == '210'\nassert solution('3') == '12'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n9\n''') == '504'\nassert solution('''\n7\n''') == '210'\nassert solution('''\n7\n6\n5\n''') == '210'"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n''') == '1 1'\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n''') == '3 4'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 1'\nassert solution('3') == '1 1'\nassert solution('4') == '3 4'\nassert solution('5') == '3 4'\nassert solution('6') == '3 4'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == '1 1'\nassert solution(input_string) == '1 1'\nassert solution(input_string) == '1 1'\n\nprint('Congratulations!')"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1 1'\nassert solution('3') == '1 1'\nassert solution('4') == '1 1'\nassert solution('5') == '3 4'\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1 1'\nassert solution('4') == '1 1'\nassert solution('5') == '3 4'"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\"\nassert solution(\"5\\n0 0 5 5\\n0 1 4 4\\n1 0 2 1\\n1 1 4 4\\n\") == \"3 4\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1 1\"\nassert solution(\"3\") == \"1 1\"\nassert solution(\"5\") == \"3 4\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\n\"\"\") == \"3 4\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n5\n0 0 5 5\n0 1 4 4\n1 2 6 7\n2 3 5 6\n8 1 9 2\n''') == '3 4'\nassert solution('''\n4\n0 0 5 5\n0 1 4 4\n1 2 6 7\n2 3 5 6\n''') == '1 1'\nassert solution('''\n5\n0 0 10 8\n0 1 2 5\n1 2 4 4\n1 1 4 4\n8 1 9 2\n''') == '3 4'\n\n'''\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3 4\"\nassert solution(\"3\") == \"1 1\"\nassert solution(\"4\") == \"1 1\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n18 55 16 17\n\n''') == 'YES', 'test_example_1'\nassert solution('''6\n40 41 43 44 44 44\n\n''') == 'NO', 'test_example_2'\nassert solution('''8\n5 972 3 4 1 4 970 971\n\n''') == 'YES', 'test_example_3'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"8\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n18 55 16 17\n''') == \"YES\"\nassert solution('''6\n40 41 43 44 44 44\n''') == \"NO\"\nassert solution('''8\n5 972 3 4 1 4 970 971\n''') == \"YES\"\nprint(solution('''6\n18 55 16 17\n'''))\nprint(solution('''8\n5 972 3 4 1 4 970 971\n'''))"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n18 55 16 17\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n6\n40 41 43 44 44 44\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n8\n5 972 3 4 1 4 970 971\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n5 972 3 4 1 4 970 971\\n\") == \"YES\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"NO\"\nassert solution(\"10\\n8 972 3 4 1 4 970 971\\n\") == \"NO\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"YES\", \"First\"\nassert solution(\"6\") == \"NO\", \"Second\"\nassert solution(\"8\") == \"YES\", \"Third\""
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n18 55 16 17\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n8\n5 972 3 4 1 4 970 971\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"8\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == 'YES'\nassert solution('6') == 'NO'\nassert solution('4') == 'YES'\nassert solution('10') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == 'YES'\nassert solution('8') == 'NO'\nassert solution('10') == 'NO'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5''') == '10'\nprint(solution('''3\n0 1 2\n0 1 2'''))\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\nassert solution('''\n5 4\n1 2 3 4\n1 2 3\n''') == '1'\nassert solution('''\n2 2\n1 2\n1 2\n''') == '2'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 9\") == \"9\"\nassert solution(\"5 5\") == \"10\"\n\n\n------"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 9\") == \"9\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3 7 8 9 11 12 13\") == \"9\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"2 2 3\") == \"1\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\n\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n\nassert solution('''3 3\n2 3 3\n3 1 2\n''') == '2'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == \"Petya\"\nassert solution('8') == \"Petya\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"Vasya\"\nassert solution(\"2\\n\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'Petya'\nassert solution('9') == 'Vasya'\nassert solution('10') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'Petya'\nassert solution('8') == 'Petya'\nassert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('4') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\""
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(INPUT) == '0'\n\n>>> sorted(solution(INPUT))\n[0, 1]\n\n>>> sorted(solution(INPUT)) == sorted(answer(INPUT))\nTrue"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5 3\") == \"0\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"4 3 6\") == \"1\"\n\n\nTest 4\n\nAnother possible solution is to not use any nuclear fusion at all. We can just purchase all missing elements at once and we are done.\n\n\n [Image]\n\nTest 5\n\nWe can use nuclear fusion and get the element from three other samples, so we don't need to purchase anything.\n\nWe can still not use any nuclear fusion as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\nTest 6\n\nWe cannot use any nuclear fusion at all as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\n\nTest 7\n\nWe can use nuclear fusion and get the element from four other samples, so we don't need to purchase anything.\n\nWe can still not use any nuclear fusion as there are no missing elements.\n\n[Image]\n\nTest 8\n\nWe cannot use any nuclear fusion at all as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\n\nTest 9\n\nThere are several possible solutions. One of them is illustrated below.\n\nNote that after purchasing one element marked as red it's still not possible to immidiately produce the middle element in the bottom row (marked as 4). So we produce the element in the left-top corner first (marked as 1), and then use it in future fusions.\n\n [Image]\n\nTest 10\n\nAnother possible solution is to not use any nuclear fusion at all. We can still not use any nuclear fusion as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\n\nTest 11\n\nWe can use nuclear fusion and get the element from four other samples, so we don't need to purchase anything.\n\nWe can still not use any nuclear fusion as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\nTest 12\n\nWe cannot use any nuclear fusion at all as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\n\nTest 13\n\nThere are several possible solutions. One of them is illustrated below.\n\nNote that after purchasing one element marked as red it's still not possible to immidiately produce the middle element in the bottom row (marked as 4). So we produce the element in the left-top corner first (marked as 1), and then use it in future fusions.\n\n [Image]\n\nTest 14\n\nAnother possible solution is to not use any nuclear fusion at all. We can still not use any nuclear fusion as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\n\nTest 15\n\nWe cannot use any nuclear fusion at all as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\n\nTest 16\n\nWe cannot use any nuclear fusion at all as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\n\nTest 17\n\nThere are several possible solutions. One of them is illustrated below.\n\nNote that after purchasing one element marked as red it's still not possible to immidiately produce the middle element in the bottom row (marked as 4). So we produce the element in the left-top corner first (marked as 1), and then use it in future fusions.\n\n [Image]\n\nTest 18\n\nAnother possible solution is to not use any nuclear fusion at all. We can still not use any nuclear fusion as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\n\nTest 19\n\nThere are several possible solutions. One of them is illustrated below.\n\nNote that after purchasing one element marked as red it's still not possible to immidiately produce the middle element in the bottom row (marked as 4). So we produce the element in the left-top corner first (marked as 1), and then use it in future fusions.\n\n [Image]\n\nTest 20\n\nAnother possible solution is to not use any nuclear fusion at all. We can still not use any nuclear fusion as there is only one row, so we have to purchase all missing elements.\n\n[Image]\n\"\"\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(test1) == \"1\"\nassert solution(test2) == \"2\"\nassert solution(test3) == \"1\"\n\n\"\"\""
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3\") == \"0\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"4 3 6\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3') == '0'\nassert solution('1 5 3') == '2'\nassert solution('4 3 6') == '1'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 3') == '0'\nassert solution('1 5 3') == '2'\nassert solution('4 3 6') == '1'"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == '2'\nassert solution('1 5 3') == '1'\nassert solution('4 3 6') == '1'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 2') == '0'\nassert solution('4 3 6\\n1 3\\n2 2\\n2 3') == '1'\nassert solution('3 3 6\\n1 3\\n2 2') == '2'\nassert solution('2 3 6\\n1 3\\n2 2') == '1'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3\") == \"0\"\nassert solution(\"1 5 3\") == \"2\""
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2 3\n1 2\n2 2\n2 1''') == '0'\n\nassert solution('''1 5 3\n1 3\n1 1\n1 5\n\n''') == '1'\n\nassert solution('''4 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n\n''') == '1'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA\\n') == '2\\n'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '0'\nassert solution('6') == '3'\nassert solution('7') == '7'\nassert solution('8') == '0'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nAB\\nBB\\nAB') == '2'\nassert solution('10\\nABABAB\\nBAAABA\\nBAAABB\\nBABBAB') == '1'\nassert solution('1000\\nAAAAABBBBB\\nBBAAABBBBB\\nBBBBBBBBBB\\nBBBBBBBBAA\\nBBAAABBBAA\\nAAABBBBBAA\\nAAABBBBBAA') == '17'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nAA\\nAB\\nAB\") == \"2\\n\"\nassert solution(\"4\\nAA\\nAB\\nAB\\nAA\") == \"0\\n\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\nA\nB\nB\nA''') == '2'\n\nassert solution('''\n10\nA\nB\nB\nA''') == '4'\n\nassert solution('''\n10\nB\nA\nB\nA''') == '8'\n\nassert solution('''\n10\nB\nA\nB\nA''') == '10'\n\nassert solution('''\n5\nA\nB\nC\nD\nE''') == '0'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == '2'\nprint(solution(input()))\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('7') == '5'\nassert solution('8') == '6'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'\nassert solution('10\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA') == '24'\nassert solution('20\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA') == '32'\n\"\"\"\n\nimport time\n\nstart = time.time()\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2 3 4\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n2 3 4 6 7\n\n\"\"\") == \"3\"\nassert solution(\"\"\"\n\n\"\"\") == \"\""
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"3\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 4\") == \"2\"\nassert solution(\"5 2 3 4 6 7\") == \"3\"\n\nstdin = \"\"\"\n1\n4\n5 5 5 5\n\"\"\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 3 4\") == \"2\"\nassert solution(\"3 2 4\") == \"2\"\nassert solution(\"4 3 2\") == \"2\"\nassert solution(\"5 3 2\") == \"3\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '3\\n'\n    '2 3 4'\n) == '2'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2 3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n2 3 4 6 7\n\"\"\") == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\n\n---"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 4') == '2'\nassert solution('5 2 3 6 7') == '3'\n\n'''"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nABAAC') == '11'\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nABAAC''') == '11'\nassert solution('''5\nABABC''') == '10'\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nABAAC') == '11'\nassert solution('10\\nACBAABA') == '10'\nassert solution('1\\nAB') == '0'\nassert solution('2\\nABAB') == '1'\nassert solution('3\\nABCD') == '2'"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\nassert solution(\"10\\nABABAABAABAA\") == \"12\"\nassert solution(\"2\\nAB\") == \"0\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nAB\\n') == '4\\nABC\\n'\nassert solution('5\\nABAABC\\n') == '7\\nABCDCBA\\n'"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '11'\nassert solution('6') == '12'\nassert solution('10') == '12'\nassert solution('1000') == '1201'\n\n'''\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '2'\nassert solution('8') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '11'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nABAAC') == '11'\n\"\"\""
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n4 2\n1 1\n0 1\n2 3\n\n''') == '3', \"min\"\nassert solution('''1023\n1 2\n1 0\n1 2\n1 1\n\n''') == '-1', \"max\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 2\\n1 1\\n0 1\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\") == \"-1\""
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '3'\nassert solution('1023 1') == '-1'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"1023\") == \"323\""
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '3'\nassert solution('1023 1') == '-1'\n\n'''\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n4 2\n1 1\n0 1\n2 3\n\n''') == '3'\nassert solution('''\n1023\n1 2\n1 0\n1 2\n1 1\n\n''') == '-1'"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n4 2\n1 1\n0 1\n2 3\n''') == \"3\"\nassert solution('''\n1023\n1 2\n1 0\n1 2\n1 1\n''') == \"-1\"\nassert solution('''\n0\n0\n1\n''') == \"1\"\nassert solution('''\n1\n0\n2\n''') == \"1\"\nassert solution('''\n4\n1 2\n1 0\n1 2\n''') == \"2\""
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('1023') == '-1'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == '2'\nassert solution(\"3\") == '2'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\n\"\"\"\nimport math\n\nN = int(input())\nn = int(math.sqrt(N))\nl = list(map(int, input().split()))\n\np = int(input())\ncount = 0\nfor i in range(n, 0, -1):\n    if l[i - 1] == 0:\n        l[i - 1] = 2\n        count += 1\n    if l[i - 1] == 2:\n        l[i - 1] = 1\n        count += 1\n    if l[i - 1] == 1:\n        l[i - 1] = 2\n        count += 1\n    if l[i - 1] == 2:\n        l[i - 1] = 1\n        count += 1\n    if l[i - 1] == 1:\n        l[i - 1] = 2\n        count += 1\n    if l[i - 1] == 2:\n        l[i - 1] = 1\n        count += 1\n\nprint(count)\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n4 5') == '2'\nassert solution('3\\n4 5') == '2'"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n3 2\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n4 5\\n') == '2'\nassert solution('3\\n4 5\\n') == '2'\nassert solution('1\\n4 5\\n') == '1'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n4 5\n''') == '2'\nassert solution('''2\n5 6\n''') == '1'\n\n'''"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n4 5\\n') == '2'\nassert solution('2\\n3 4\\n') == '3'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('2\\n1 1\\n') == '2'\nassert solution('2\\n2 3\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '2'\nassert solution('''\n3\n2 5 1\n''') == '3'\nassert solution('''\n5\n1 2 5 4 3\n''') == '3'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n5 4\n''') == '2'\nassert solution('''2\n4 5\n''') == '2'\n\"\"\"\nimport math"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n4 5\") == \"2\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 2 1''') == 'YES'\nassert solution('''1 2 3 4''') == 'NO'\nassert solution('''2 2 2 3''') == 'NO'"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2 1') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2 1') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 2 1') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 2 1') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 2 1') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 6\") == \"YES\"\nassert solution(\"2 4\") == \"NO\""
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\n\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 1 4 3 2\") == \"YES\"\nassert solution(\"3 6\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'YES'\nassert solution('''\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'NO'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2 4\n1 3 2 4\n1 3 4 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4\n1 3 2 4\n1 3 4 2\n''') == 'YES'\n\nassert solution('''4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'NO'\n\nassert solution('''3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n\n''') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 3 4\\n1 3 4 2\\n3 4 1 2\\n4 1 2 3') == 'YES'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'NO'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 4') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"YES\"\nassert solution(\"3 6\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\n\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"4 4\") == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"YES\"\n\n\"\"\""
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1\\n') == '0\\n'\nassert solution('1 2 1\\n') == '666666672\\n'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1\\n') == '0\\n'\nassert solution('1 2 1\\n') == '666666672\\n'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1 1\n\nOutput:\n0\n\nInput:\n1 2 1\n\nOutput:\n666666672\n''') == '0.66666667'\n\nassert solution('''\n1 1 1\n\nOutput:\n666666672\n\nInput:\n1 2 1\n\nOutput:\n222222222\n\nInput:\n1 2 2\n\nOutput:\n0\n
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\nassert solution('2 3 1') == '10'\nassert solution('1 1 1') == '0'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1 1\n''') == '0'\nassert solution('''\n1 2 1\n''') == '666666672'"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 1 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n1 2 1\n\"\"\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1 1\n''') == '0'\nassert solution('''\n1 2 1\n''') == '666666672'\n\nassert solution('''\n1 1 2\n''') == '1'\nassert solution('''\n1 1 1\n''') == '0'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 1\n''') == '0'\nassert solution('''\n1 2 1\n''') == '666666672'\n\n'''\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 1\n''') == '0'\n\nassert solution('''\n1 2 1\n''') == '666666672'"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n7 2 3 1 5 6\n''') == '5'\nassert solution('''\n10\n8 5 7 9 6 2 3 1 5 6\n''') == '6'\nassert solution('''\n8\n10 3 9 2 5 8 7 6 1\n''') == '6'\nassert solution('''\n4\n3 5 1 2\n''') == '4'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"6\\n7 2 3 1 5 6\\n\") == \"5\"\nassert solution(\"10\\n9999999 999 999\") == \"4\"\n\n\n\"\"\""
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '5'\n\"\"\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == \"5\"\nassert solution('8\\n7 3 2 1 5 6') == \"4\""
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n7 2 3 1 5 6''') == '5'\nassert solution('''2\n2 2''') == '0'"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('1\\n5 2 3 4 5 6') == '6'\nassert solution('10\\n10 0') == '1'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 2, 1, 5, 6]) == 5\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n7 2 3 1 5 6''') == '5'\nassert solution('''2\n1 2''') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 8\") == '2'\nassert solution(\"4 2 2 6\") == '3'\nassert solution(\"3 7 4 6\") == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1 1 1 8\") == \"2\"\nassert solution(\n    \"4 2 2 6\") == \"3\"\nassert solution(\n    \"3 7 4 6\") == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 8\") == '2'\nassert solution(\"4 2 2 6\") == '3'\nassert solution(\"3 7 4 6\") == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1 8') == \"2\"\nassert solution('4 2 2 6') == \"3\"\nassert solution('3 7 4 6') == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1 1 8\n\n''') == '2'\nassert solution('''4 2 2 6\n\n''') == '3'\nassert solution('''3 7 4 6\n\n''') == '1'"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1 1 8\n''') == '2'\nassert solution('''4 2 2 6\n''') == '3'\nassert solution('''3 7 4 6\n''') == '1'\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"2\"\n\"\"\""
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'\n\n\n\n\"\"\"\n\na, b, m = map(int, input().split())"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 5\n''') == '2'\n\nassert solution('''-1 4 15\n''') == '4'\n\nassert solution('''0 -1 5\n''') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 2\n\nassert solution([1, 2, 5]) == 3\n\nassert solution([-1, 4, 15]) == 4\n\nassert solution([0, -1, 5]) == -1\n\n\n'''"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\n\"\"\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '6 1\\n'\n    '2 1 2 3 4 3\\n'\n) == '2'\n\nassert solution(\n    '6 1\\n'\n    '1 1 2 2 3 3\\n'\n) == '0'\n\nassert solution(\n    '6 1\\n'\n    '1 1 2 2 3 3\\n'\n) == '2'\n'''\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 1\n2 1 2 3 4 3\n''') == '2'\nassert solution('''6 2\n1 1 2 2 3 3\n''') == '0'\nassert solution('''6 1\n1 1 2 2 3 3\n''') == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3') == '2'\nassert solution('6 2\\n1 1 2 2 3 3') == '0'\nassert solution('6 1\\n1 1 2 2 3 3') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 1\n2 1 2 3 4 3\n''') == '2'\nassert solution('''6 1\n1 1 2 2 3 3\n''') == '0'\nassert solution('''6 1\n1 1 2 2 3 3\n''') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 2 3 3\") == \"2\"\nassert solution(\"1 1 2 2 3 3\") == \"0\"\nassert solution(\"1 1 2 2 3 3\") == \"2\"\n\"\"\""
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3') == '2'\nassert solution('6 2\\n1 1 2 2 3 3') == '0'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 3\") == \"0\"\nassert solution(\"1 2 3 4 3\") == \"0\"\nassert solution(\"1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 1\n2 1 2 3 4 3\n''') == '2'\n\nassert solution('''\n6 2\n2 1 2 3 4 3\n''') == '0'\n\nassert solution('''\n6 1\n1 1 2 2 3 3\n''') == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n\"\"\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"monday\\ntuesday\\n\") == \"NO\"\nassert solution(\"saturday\\ntuesday\\n\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"monday\\ntuesday\") == 'NO'\nassert solution(\"saturday\\ntuesday\") == 'YES'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nmonday\nsunday''') == 'NO'\nassert solution('''\nwednesday\nfriday''') == 'YES'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('monday\\ntuesday') == 'NO'\nassert solution('saturday\\ntuesday') == 'YES'\nassert solution('saturday\\nsaturday') == 'YES'\nassert solution('sunday\\ntuesday') == 'YES'\nassert solution('sunday\\nsunday') == 'YES'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('monday') == 'YES'\nassert solution('tuesday') == 'YES'\nassert solution('sunday') == 'NO'\nassert solution('saturday') == 'YES'\nassert solution('friday') == 'NO'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"friday\") == \"NO\"\n\nstdin = \"\"\"\nmonday\ntuesday\n\"\"\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('monday\\ntuesday') == 'YES'\nassert solution('saturday\\ntuesday') == 'YES'\nassert solution('saturday\\nsunday') == 'NO'\nassert solution('sunday\\nsunday') == 'NO'\nassert solution('sunday\\nfebruary') == 'NO'"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('monday') == 'NO'\nassert solution('tuesday') == 'YES'\nassert solution('saturday') == 'YES'\nassert solution('sunday') == 'NO'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('35\\n') == '17'\nassert solution('10000000000\\n') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    35\n''') == '17'\n\nassert solution('''\n    10000000000\n''') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''35''') == '17'\nassert solution('''10000000000''') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5000000001\") == \"91\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"17\"\nassert solution(\"10000000000\") == \"91\"\nassert solution(\"0\") == \"0\""
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '17'\nassert solution(input()) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n''') == '2'\nassert solution('''\n1\n''') == '0'\nassert solution('''\n5000000001\n4999999999\n''') == '91'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n\n\n\n\"\"\""
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('HA') == 'YES'\nassert solution('XO') == 'NO'\n\n'''"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 5') == '0'\nassert solution('3 2 5') == '1'"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1 2 5\n''') == '1'\n\nassert solution('''\n3\n1 2 5\n''') == '1'\n\nassert solution('''\n2\n1 5\n''') == '0'\n\nassert solution('''\n2\n1 1\n''') == '1'"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1 3 5 6 8\") == \"1\"\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('3 1 2') == '1'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 5\n''') == '0'\n\nassert solution('''\n3\n1 2 5\n''') == '1'"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\nassert solution('''4\n1 5 2 4\n''') == '0'\nassert solution('''5\n1 2 3 4 5\n''') == '1'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '0'\nassert solution('3 1 2') == '1'\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('-1 1000000000') == 'Yes'\nassert solution('0 0') == 'Yes'\nassert solution('RUDDRUDD') == 'Yes'\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == 'Yes', \"First\"\nassert solution('1 2') == 'No', \"Second\"\nassert solution('-1 1000000000') == 'Yes', \"Third\"\nassert solution('0 0') == 'Yes', \"Fourth\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"-1 1000000000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 2\\nRU\") == \"Yes\"\nassert solution(\n    \"1 2\\nRU\") == \"No\"\nassert solution(\n    \"-1 1000000000\\nLRRLU\") == \"Yes\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('-1 1000000000') == 'Yes'\nassert solution('0 0') == 'Yes'"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'No', solution\nassert solution('2 2') == 'Yes', solution\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\n\n'''"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution('1\\n2\\n3') == '0'\nassert solution('1\\n2 3') == '1'\nassert solution('1\\t2 3') == '1'\nassert solution('1\\n2\\n3') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '0'\nassert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '1'\nassert solution('22 19 3') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 3 7''') == '1'\nassert solution('''10   3   7''') == '1'\nassert solution('''314''') == '0'\nassert solution('''22 19 3''') == '1'\nassert solution('''60''') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 3 7\n''') == '1', 'First test case fails'\nassert solution('''\n10   3   7\n''') == '1', 'Second test case fails'\nassert solution('''\n314\n159 265\n358\n''') == '0', 'Third test case fails'\nassert solution('''\n22 19 3\n''') == '1', 'Fourth test case fails'\nassert solution('''\n60\n''') == '1', 'Fifth test case fails'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 3 7\n''') == '1'\nassert solution('''\n10   3   7\n''') == '1'\nassert solution('''\n314\n159 265\n358\n''') == '0'\nassert solution('''\n22 19 3\n''') == '1'\nassert solution('''\n23 53 27\n25 45 22\n''') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 3 7\n''') == '1'\nassert solution('''\n10   3   7\n''') == '1'\nassert solution('''\n314\n''') == '0'\nassert solution('''\n22 19 3\n''') == '1'\nassert solution('''\n\n   60\n  \n  \n      31\n          \n          \n          \n          \n          \nSample Output 5:\n1\n''') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n10 3 7\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10   3   7\n\"\"\") == \"1\"\nassert solution(\"\"\"\n314\n\"\"\") == \"0\"\nassert solution(\"\"\"\n22 19 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n  60\n  \n  29\n  \n      31\n          \n          \n          \n          \nSample Output 6:\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'\nassert solution('60') == '1'"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n5\n10\n''') == '9'\nassert solution('''1\n1\n10\n''') == '9'\nassert solution('''5\n5\n6\n''') == '9'\nassert solution('''10\n10\n10\n''') == '8'\nassert solution('''1\n1\n10\n''') == '0'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '9'\nassert solution('101') == '12'\nassert solution('11') == '1'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"3\") == \"9\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''S''') == '9'\nassert solution('''1''') == '9'\n'''))\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '9'\nassert solution('3') == '9'\nassert solution('4') == '10'\nassert solution('5') == '10'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"\") == \"0\"\n\"\"\"\nimport collections\nimport itertools\nimport math\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '9'\nassert solution('1234567890') == '9990'\n\"\"\"\n\nimport sys\nfrom math import sqrt"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n') == '5\\n'\nassert solution('1\\n') == '9\\n'\nassert solution('10\\n') == '9\\n'\nassert solution('10\\n') == '9\\n'\n\"\"\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '9'\nassert solution('3') == '9'\nassert solution('4') == '9'\nassert solution('5') == '9'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '-1'\nassert solution('5') == '3'"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n3 6 28 9\n''') == '4'\nassert solution('''\n5\n5 12 9 16 48\n''') == '3'\nassert solution('''\n4\n1 2 4 8\n''') == '-1'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n3 6 28 9\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n5 12 9 16 48\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n1 2 4 8\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '-1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3 6 28 9\\n') == '4'\nassert solution('5\\n5 12 9 16 48\\n') == '3'\nassert solution('4\\n1 2 4 8\\n') == '-1'\nprint('You passed the tests!')"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'\nassert solution() == '3'\nassert solution() == '-1'"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n3 6 28 9') == '4'\nassert solution('5\\n5 12 9 16 48') == '3'\nassert solution('4\\n1 2 4 8') == '-1'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT) == '3'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 6 28 9\\n\") == \"4\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n0 5 0 2 3\n''') == '2'\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2'\nassert solution('7\\n1 0 0 5 0 0 2') == '1'"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n0 5 0 2 3\"\n    ) == \"2\"\nassert solution(\n    \"7\\n1 0 0 5 0 0 2\"\n    ) == \"1 7 3 5 6 4 2\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n0 5 0 2 3\n''') == '2'\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n0 5 0 2 3\n''') == '2'\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n0 5 0 2 3\n''') == '2'\nassert solution('''7\n1 0 0 5 0 0 2\n''') == '1'\nassert solution('''20\n4 5 0 5 5 0 0 5 5 5 5 5 5\n''') == '3'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"1 7 3 5 6 4 2\"\nassert solution(\"5\") == \"0 5 0 2 3\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n0 5 0 2 3\n''') == '2'\nassert solution('''7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'\n\n'''\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n') == '2\\n'\nassert solution('5\\n') == '5\\n'\n\n\"\"\""
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\"\n\n\n\"\"\"\n\nfrom math import gcd\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n') == '5'\nassert solution('10\\n') == '10'\nassert solution('11\\n') == '5'\nassert solution('13\\n') == '5'\nassert solution('14\\n') == '6'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nprint(solution(input()))\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'\n\"\"\""
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'\n\n\"\"\"\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n''') == '2'\nassert solution('''5\n''') == '5'\nassert solution('''6\n''') == '6'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '18'\n\nassert solution('''4 2 2\n10 8 8 3\n10 7 9 4\n''') == '31'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('4 2 2') == '31'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 2\") == \"18\"\nassert solution(\"4 2 2\") == \"31\""
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '18'\nassert solution('''4 2 2\n10 8 8 3\n10 7 9 4\n''') == '31'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\") == \"18\"\nassert solution(\"4 2 2\") == \"31\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\") == \"18\"\nassert solution(\"4 2 2\") == \"31\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('4 2 2') == '31'"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '18', \"Question 1\"\nassert solution('''\n4 2 2\n10 8 8 3\n10 7 9 4\n''') == '31', \"Question 2\"\n\n\"\"\""
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '18'\nassert solution('''4 2 2\n10 8 8 3\n10 7 9 4\n''') == '31'\nassert solution('''5 3 1\n5 2 5 1 7\n6 3 1 6 3\n''') == '23'\nassert solution('''1 2 \n1 3 5 \n''') == '1 3 5 \nassert solution('''4 1 \n4 2 2 4\n''') == '4 2 2 4'\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2\n1 3\n1 4\n\n''') == 'Yes'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n\n''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1\n1 2\n''') == 'Yes'\n\nassert solution('''4 3\n1 2\n1 3\n1 4\n''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1\n1 2\n\n''') == 'Yes'\nassert solution('''4 3\n1 2\n1 3\n1 4\n\n''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\nassert solution(\"4 3\\n1 3\\n1 2\\n2 3\\n\") == \"Yes\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"Yes\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"Yes\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_from_sample_files) == \"Yes\\naa\"\n\nassert solution(input_from_stdin) == \"Yes\\nab\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 1\n1 2\n\n\"\"\") == \"Yes\"\nassert solution(\n\"\"\"\n4 3\n1 2\n1 3\n1 4\n\n\"\"\") == \"No\"\nassert solution(\n\"\"\"\n3 1\n1 2\n1 3\n\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2\n1 3\n1 4''') == 'Yes'\nassert solution('''4 3\n1 2\n1 3\n1 4''') == 'No'\nprint(solution(input()))"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"4 3\") == \"No\""
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('0 2 1') == '19'\nassert solution('0 3 2') == '14'"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '7'\nprint(solution())"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('0 2 1') == '11'\nassert solution('0 3 1') == '7'"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0 1 1\n1 0 1\n1 1 0\n3\n''') == '7'\nassert solution('''0 2 1\n1 0 100\n1 2 0\n5\n''') == '87'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3') == '7'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n3') == '19'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('1 0 1') == '7'\nassert solution('1 2 0') == '19'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 1 1\") == \"7\"\nassert solution(\"1 0 1\") == \"19\"\nassert solution(\"1 2 0\") == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0 1 1\n1 0 1\n1 2 0\n3''') == '7'\nassert solution('''0 2 1\n1 0 100\n1 2 0\n5''') == '87'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('1 0 1') == '7'\nassert solution('1 2 0') == '19'\nassert solution('2 3 4') == '12'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('1 0 1') == '11'\nassert solution('1 2 0') == '21'\nassert solution('3') == '19'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''Bulbbasaur\nF''') == '1'\nassert solution('''aBddulbasaurrgndgbualdBdsagaurrgndbb''') == '2'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''Bulbbasaur\n''') == '1'\nassert solution('''F\n''') == '0'\nassert solution('''aBddulbasaurrgndgbualdBdsagaurrgndbb\n''') == '2'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"Bulbbasaur\n\"\"\") == \"1\"\nassert solution(\"\"\"F\n\"\"\") == \"0\"\nassert solution(\"\"\"aBddulbasaurrgndgbualdBdsagaurrgndbb\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''Bulbbasaur''') == '1'\nassert solution('''aBddulbasaurrgndgbualdBdsagaurrgndbb''') == '2'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    Bulbbasaur\n    ''') == '1'\n\nassert solution('''\n    F\n    ''') == '0'\n\nassert solution('''\n    aBddulbasaurrgndgbualdBdsagaurrgndbb\n    ''') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''bulbbasaur\n''') == '1'\nassert solution('''aBddulbasaurrgndgbualdBdsagaurrgndbb\n''') == '2'\nassert solution('''F\n''') == '0'"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"1\""
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"NO\"\nassert solution(\"1 3\") == \"YES\"\nassert solution(\"1 4\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"3 2\") == \"YES\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('5 2') == 'NO'\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('4 1') == 'YES'\nassert solution('5 2') == 'NO'\n'''\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\narc\nrac\n''') == 'YES', '1st example'\nassert solution('''\n2 2\nacd\n''') == 'NO', '2nd example'"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 4\\nfbrd\\nbrdg\\nldjk\\n') == 'NO'\nassert solution('1 3\\narc\\nrac') == 'NO'\nassert solution('1 4\\nfbrd\\nbrdg\\nldjk\\n') == 'NO'\nassert solution('1 5\\nfbrd\\nbrdg\\nldjk\\n') == 'NO'\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 3\\nabc\\ndef') == 'NO'\nassert solution('2 3\\nxyz\\nabc') == 'YES'\nassert solution('2 3\\nabc\\nxyz') == 'NO'\nassert solution('5 5\\nabcd\\nefgh\\nijkl') == 'YES'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"YES\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == 'YES'\n\"\"\""
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 11') == '4'\nassert solution('5 100') == '4'\nassert solution('6 111') == '4'\nassert solution('6 101') == '4'\nassert solution('7 111') == '5'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 111\n1111\n10111\n10010\n''') == '4'\n\nassert solution('''\n3 1\n100\n101\n1\n''') == '1'\n\nassert solution('''\n1 8\n''') == '0'\n\nassert solution('''\n2 7\n''') == '0'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 111') == '4'\nassert solution('6 10') == '2'\n\"\"\"\nfrom math import factorial, sqrt"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 111\n1111\n10111\n10010''') == '4'\nassert solution('''5 21\n22 101\n3 200\n4 300\n5 400''') == '5'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 111\") == \"4\"\nassert solution(\"3 2\") == \"0\""
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 111\"\n    \"1111\"\n    \"10111\"\n    \"10010\"\n) == \"4\"\n\n-------Other Solutions-------\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '1\\n2\\n'\nassert solution('2 1000000') == '2\\n4\\n'\nassert solution('2 5') == '2\\n3\\n'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 111') == '4'\nassert solution('3 200') == '1'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n14 1\n15 1\n16 1\n17 1\n18 1\n19 1\n20 1\n21 1\n22 1\n23 1\n24 1\n25 1\n26 1\n27 1\n28 1\n29 1\n30 1\n31 1\n32 1\n33 1\n34 1\n35 1\n36 1\n37 1\n38 1\n39 1\n40 1\n41 1\n42 1\n43 1\n44 1\n45 1\n46 1\n47 1\n48 1\n49 1\n50 1\n51 1\n52 1\n53 1\n54 1\n55 1\n56 1\n57 1\n58 1\n59 1\n60 1\n61 1\n62 1\n63 1\n64 1\n65 1\n66 1\n67 1\n68 1\n69 1\n70 1\n71 1\n72 1\n73 1\n74 1\n75 1\n76 1\n77 1\n78 1\n79 1\n80 1\n81 1\n82 1\n83 1\n84 1\n85 1\n86 1\n87 1\n88 1\n89 1\n90 1\n91 1\n92 1\n93 1\n94 1\n95 1\n96 1\n97 1\n98 1\n99 1\n100 1\n101 1\n102 1\n103 1\n104 1\n105 1\n106 1\n107 1\n108 1\n109 1\n110 1\n111 1\n112 1\n113 1\n114 1\n115 1\n116 1\n117 1\n118 1\n119 1\n120 1\n121 1\n122 1\n123 1\n124 1\n125 1\n126 1\n127 1\n128 1\n129 1\n130 1\n131 1\n132 1\n133 1\n134 1\n135 1\n136 1\n137 1\n138 1\n139 1\n140 1\n141 1\n142 1\n143 1\n144 1\n145 1\n146 1\n147 1\n148 1\n149 1\n150 1\n151 1\n152 1\n153 1\n154 1\n155 1\n156 1\n157 1\n158 1\n159 1\n160 1\n161 1\n162 1\n163 1\n164 1\n165 1\n166 1\n167 1\n168 1\n169 1\n170 1\n171 1\n172 1\n173 1\n174 1\n175 1\n176 1\n177 1\n178 1\n179 1\n180 1\n181 1\n182 1\n183 1\n184 1\n185 1\n186 1\n187 1\n188 1\n189 1\n190 1\n191 1\n192 1\n193 1\n194 1\n195 1\n196 1\n197 1\n198 1\n199 1\n200 1\n201 1\n202 1\n203 1\n204 1\n205 1\n206 1\n207 1\n208 1\n209 1\n210 1\n211 1\n212 1\n213 1\n214 1\n215 1\n216 1\n217 1\n218 1\n219 1\n220 1\n221 1\n222 1\n223 1\n224 1\n225 1\n226 1\n227 1\n228 1\n229 1\n230 1\n231 1\n232 1\n233 1\n234 1\n235 1\n236 1\n237 1\n238 1\n239 1\n240 1\n241 1\n242 1\n243 1\n244 1\n245 1\n246 1\n247 1\n248 1\n249 1\n250 1\n251 1\n252 1\n253 1\n254 1\n255 1\n256 1\n257 1\n258 1\n259 1\n260 1\n261 1\n262 1\n263 1\n264 1\n265 1\n266 1\n267 1\n268 1\n269 1\n270 1\n271 1\n272 1\n273 1\n274 1\n275 1\n276 1\n277 1\n278 1\n279 1\n280 1\n281 1\n282 1\n283 1\n284 1\n285 1\n286 1\n287 1\n288 1\n289 1\n290 1\n291 1\n292 1\n293 1\n294 1\n295 1\n296 1\n297 1\n298 1\n299 1\n300 1\n301 1\n302 1\n303 1\n304 1\n305 1\n306 1\n307 1\n308 1\n309 1\n310 1\n311 1\n312 1\n313 1\n314 1\n315 1\n316 1\n317 1\n318 1\n319 1\n320 1\n321 1\n322 1\n323 1\n324 1\n325 1\n326 1\n327 1\n328 1\n329 1\n330 1\n331 1\n332 1\n333 1\n334 1\n335 1\n336 1\n337 1\n338 1\n339 1\n340 1\n341 1\n342 1\n343 1\n344 1\n345 1\n346 1\n347 1\n348 1\n349 1\n350 1\n351 1\n352 1\n353 1\n354 1\n355 1\n356 1\n357 1\n358 1\n359 1\n360 1\n361 1\n362 1\n363 1\n364 1\n365 1\n366 1\n367 1\n368 1\n369 1\n370 1\n371 1\n372 1\n373 1\n374 1\n375 1\n376 1\n377 1\n378 1\n379 1\n380 1\n381 1\n382 1\n383 1\n384 1\n385 1\n386 1\n387 1\n388 1\n389 1\n390 1\n391 1\n392 1\n393 1\n394 1\n395 1\n396 1\n397 1\n398 1\n399 1\n400 1\n401 1\n402 1\n403 1\n404 1\n405 1\n406 1\n407 1\n408 1\n409 1\n410 1\n411 1\n412 1\n413 1\n414 1\n415 1\n416 1\n417 1\n418 1\n419 1\n420 1\n421 1\n422 1\n423 1\n424 1\n425 1\n426 1\n427 1\n428 1\n429 1\n430 1\n431 1\n432 1\n433 1\n434 1\n435 1\n436 1\n437 1\n438 1\n439 1\n440 1\n441 1\n442 1\n443 1\n444 1\n445 1\n446 1\n447 1\n448 1\n449 1\n450 1\n451 1\n452 1\n453 1\n454 1\n455 1\n456 1\n457 1\n458 1\n459 1\n460 1\n461 1\n462 1\n463 1\n464 1\n465 1\n466 1\n467 1\n468 1\n469 1\n470 1\n471 1\n472 1\n473 1\n474 1\n475 1\n476 1\n477 1\n478 1\n479 1\n480 1\n481 1\n482 1\n483 1\n484 1\n485 1\n486 1\n487 1\n488 1\n489 1\n490 1\n491 1\n492 1\n493 1\n494 1\n495 1\n496 1\n497 1\n498 1\n499 1\n500 1\n501 1\n502 1\n503 1\n504 1\n505 1\n506 1\n507 1\n508 1\n509 1\n510 1\n511 1\n512 1\n513 1\n514 1\n515 1\n516 1\n517 1\n518 1\n519 1\n520 1\n521 1\n522 1\n523 1\n524 1"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1\\n1111\\n') == '5\\n'\nassert solution('2 5\\n10111\\n') == '3\\n'\nassert solution('4 5\\n10010\\n') == '4\\n'\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 11 5\") == \"1\"\nassert solution(\"1 11 2\") == \"1\"\nassert solution(\"1 11 2\") == \"1\"\nassert solution(\"1 11 2\") == \"1\"\nassert solution(\"1 11 2\") == \"1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([11,11,5]) == \"1\"\nassert solution([11,2,3]) == \"-1\"\nassert solution([11,11,2,3]) == \"2\"\nassert solution([11,11,11,5]) == \"1\"\nassert solution([11,11,11,11]) == \"0\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11 11 5\") == 1, 'Test 1'\nassert solution(\"11 2 3\") == -1, 'Test 2'\nassert solution(\"1 1 1\") == -1, 'Test 3'\nassert solution(\"11 1 1\") == 1, 'Test 4'\nassert solution(\"11 1 1\") == 1, 'Test 5'\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 11 5\") == \"1\"\nassert solution(\"10 2 3\") == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 11 5\") == \"1\"\nassert solution(\"10 11 2\") == \"-\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 2\") == \"-\"\nassert solution(\"10 11 1\") == \"1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 4\") == \"1\"\nassert solution(\"10 10 10\") == \"1\"\nassert solution(\"10 1 2\") == \"2\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\nassert solution(\"100 100 100\") == \"1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\\n\") == \"1\"\nassert solution(\"11 2 3\\n\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''a\\nb\\nc\\nd\\n''') == 'NO'\nassert solution('''a\\nb\\nc\\n''') == 'NO'\nassert solution('''a\\nb\\nc\\n''') == 'YES'\nassert solution('''a\\nb\\nc\\nd\\n''') == 'YES'\nassert solution('''a\\nb\\nc\\nd\\n''') == 'NO'\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n\n\"\"\"\n\nimport re"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"NO\"\nassert solution(\"jinotega\") == \"NO\"\nassert solution(\"12334567890\") == \"NO\"\nassert solution(\"1234\") == \"NO\"\nassert solution(\"2147483647\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"6.5\"\n\n\n>>> solution()\n'6.5'\n\n'''"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2 20''') == \"20.0\"\nassert solution('''3 2 6''') == \"6.5\"\nassert solution('''4 2 40''') == \"48.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2 6\") == \"6.5\"\nassert solution(\"3 2 6\") == \"7.0\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"6.5\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2 6\n''') == '6.5'\nassert solution('''\n4 2 20\n''') == '20.0'\n''')\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n..\n..\n\noutput: 2''') == '2'\nassert solution('''4 4\n....\n.##.\n....\n\noutput: 1''') == '1'\nassert solution('''3 4\n....\n.##.\n....\n\noutput: 2''') == '2'\nassert solution('''3 4\n...\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n..\n..\n\nOutput\n2\n''') == '2'\n\nassert solution('''4 4\n....\n.##.\n....\n\nOutput\n1\n''') == '1'\n\nassert solution('''3 4\n....\n.##.\n....\n\nOutput\n2\n''') == '2'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 4') == '1'\nassert solution('3 4') == '2'"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2\\n..\\n..') == '2'\nassert solution('4 4\\n....\\n#.#.\\n....\\n.#..') == '1'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n..\n..\n\nOutput\n2\n''') == '2'\n\nassert solution('''\n4 4\n....\n.##.\n....\n\nOutput\n1\n''') == '1'"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n..\n..\n\nOutput\n2\n''') == '1'\n\nassert solution('''3 4\n....\n.##.\n....\n\nOutput\n2\n''') == '1'\n\nassert solution('''3 4\n....\n.##.\n....\n\nOutput\n2\n''') == '1'\n\nassert solution('''5 5\n........\n...#.#\n...#..\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n...\n....\n.#..\n\n''') == '1'\nassert solution('''3 3\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n...\\n\") == \"1\"\nassert solution(\"3 4\\n.##.\\n....\\n\") == \"2\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '4'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '8'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1 3') == '6'\nassert solution('4\\n1 2 1 2') == '10'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 1\n''') == '6'\nassert solution('''\n2\n1 1\n1 3\n''') == '12'"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '12'\nassert solution('5') == '30'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\""
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == '6'\nassert solution(\"2\") == '8'\nassert solution(\"1\") == '1'"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 3\") == \"6\"\nassert solution(\"3 4 2\") == \"3\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2\n2 3\n1 4\n3 5\n4 5''') == '6'\nassert solution('''3\n3 5\n3 2\n2 5''') == '5'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '11'\nassert solution(input()) == '3'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 4 3 7 5\n''') == '11'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '11'\nassert solution('5') == '3'\nassert solution('5') == '1'\nassert solution('5') == '4'\nassert solution('5') == '2'\n\"\"\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '11'\nassert solution('7') == '3'\nassert solution('6') == '2'"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"15\") == \"33\"\nassert solution(\"13\") == \"13\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('13') == '13'\nassert solution('2') == '2'\nassert solution('20') == '20'\n\n\"\"\""
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '11'\nassert solution('2') == '2'\nassert solution('10') == '2'"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"10.25\"\nassert solution(\"6 2\") == \"10.3\"\nassert solution(\"3 100\") == \"9.2\"\n\n'''\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"3\", \"100\", \"9.2\"]) == \"9.2\"\nassert solution([\"5\", \"0.99\", \"9.2\"]) == \"9.3\"\nassert solution([\"5\", \"0.01\", \"9.2\"]) == \"9.3\"\nassert solution([\"1\", \"3.56\", \"0.5\"]) == \"3.66\"\nassert solution([\"1\", \"3.99\", \"0.5\"]) == \"3.95\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n10.245\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\n\n'''\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1.1'\nassert solution('3 100') == '9.2'\nprint(solution(input()))\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1.2'\nassert solution('3 100') == '9.2'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3.0'\nassert solution('5 1') == '5.0'\nassert solution('1 9') == '10.0'\nassert solution('100 100') == '100.0'\nassert solution('4 9') == '4.0'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1.1\n''') == '1.1'\nassert solution('''3 100\n9.2\n''') == '9.2'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1\\n10.245\\n') == '10.25'\nassert solution('6 2\\n10.245\\n') == '10.3'\nassert solution('3 100\\n9.2\\n') == '9.2'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'Impossible'\nassert solution('0 1 1 1') == '0110'\nassert solution('0 1 1 1 1') == '0110'\nassert solution('0 1 1 1 0') == 'Impossible'\nassert solution('0 1 1 0') == '0110'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1 2 3 4\n\"\"\") == \"Impossible\"\n\nassert solution(\"\"\"1 2 2 1\n\"\"\") == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '1 2 3 4'\n) == '0110'\nassert solution(\n    '1 1 1 1'\n) == '1110'\nassert solution(\n    '1 2 1 3'\n) == '1311'\nassert solution(\n    '1 1 1 1'\n) == '1111'\nassert solution(\n    '1 1 1 1'\n) == '1111'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\nassert solution(\"1 2 3 4 1 1 1 1 1 1 1 1 1 1 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1 2 3 4\"\n) == \"0110\"\nassert solution(\n    \"1 2 2 1\"\n) == \"1110\"\nassert solution(\n    \"1 2 2 3\"\n) == \"1111\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'\nassert solution('1 1 1 1') == '111'\nassert solution('1 2 2 2') == '121'\nassert solution('1 1 1 2') == '0112'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\nassert solution(\"0 0 0 0\") == \"0 0 0 0\"\nassert solution(\"1 1 1 0\") == \"1 0 1 0\"\nassert solution(\"0 1 0 0\") == \"0 0 0 0\""
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n*..P*P*\n\n''') == \"3\"\nassert solution('''\n2\n**PP.*P.*\n\n''') == \"4\"\nassert solution('''\n4\n...*..\n\n''') == \"3\"\nassert solution('''\n6\n*P*PP*P*P*\n\n''') == \"4\"\nassert solution('''\n10\n.**PP.*P.*\n\n''') == \"3\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n*..P*P*\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n.**PP.*P.*\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n*...*..*P*P*\n\"\"\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '3'\nassert solution('10') == '2'"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"10\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n..P*P*\n''') == '3'\nassert solution('''10\n.**PP.*P.*\n''') == '2'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n.**P**P*\n''') == '3'\n\nassert solution('''8\n.**PPP*P*\n''') == '9'\n\nassert solution('''7\n*..P*P*\n''') == '3'\n\nassert solution('''10\n.**PPPP*P*\n''') == '3'"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"2\"\nassert solution(\"10\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10\n*...*.*\n\n''') == '3'\nassert solution('''10\n*PP*P*P*\n\n''') == '3'\nassert solution('''10\n*P.*.*\n\n''') == '3'\nassert solution('''7\n.**PP.*P.*\n\n''') == '2'\nassert solution('''7\nP.*.*P*\n\n''') == '1'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\n3''') == '16'\nassert solution('''1\n2\n3''') == '4'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '8'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'\nassert solution('4') == '8'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '8'\nassert solution('7') == '16'\nassert solution('8') == '16'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '4'\nassert solution('6') == '8'\nassert solution('3') == '16'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n''') == '4'\nassert solution('''\n2\n''') == '8'\nassert solution('''\n3\n''') == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\nassert solution('''4\n2\n4\n2\n2\n''') == '8'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 2 0 0\n1 1 4 1\n''') == '1 3 5'\n\nassert solution('''\n10 10 2 0 0\n0 1 2 2\n''') == '0 0 5'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'\nassert solution('1000000 100000000 100000000 100000000 100000000') == '1000000 100000000 100000000 100000000 100000000'"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n9 9 5 5 2 1\n''') == '1 3 9 7'\nassert solution('''\n100 100 52 50 46 56\n''') == '17 8 86 92'"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"9 9 5 5 2 1\"\"\") == \"\"\"1 3 9 7\"\"\"\nassert solution(\"\"\"100 100 52 50 46 56\"\"\") == \"\"\"17 8 86 92\"\"\n\"\"\""
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 3 9 7\"\nassert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nprint(solution())"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 5, 5, 5, 5, 5, 5, 5, 5]) == \"1 1 5 5\"\nassert solution([2, 2, 2, 2, 2, 2, 2, 2, 2]) == \"2 2 4 5\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 5 4\") == \"4 5\"\nassert solution(\"3 4 2 3\") == \"2 2\"\nassert solution(\"5 5 2 4\") == \"3 3\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 20 20 30\") == \"1 3\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('FTFFTFFF') == 'No'\n\"\"\""
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('FTFFTFF') == 'No'\n\"\"\"\n\nstdin = input()\nx, y = map(int, stdin.split())"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"FTFFTFF\") == \"No\"\nassert solution(\"TTFFTFF\") == \"Yes\"\n\"\"\"\n\n\"\"\"\n\nsolution = lambda stdin: print(\"Yes\" if (len(stdin) <= 8) and (len(set(stdin)) == 2) and (len(set(stdin).intersection(\"FTTTFFF\")) > 0) else \"No\")\nsolution(input())\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('FTFFTFFF') == \"Yes\"\nassert solution('TTFFTFFF') == \"No\"\nassert solution('TTTTTTFFF') == \"Yes\"\nassert solution('FFFTFTTTT') == \"Yes\"\nassert solution('TTTFTFFF') == \"No\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"TTFFTFFF\") == \"No\"\n\"\"\""
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''F\n10\n10''') == 'Yes'\nassert solution('''FF\n10\n10''') == 'Yes'\nassert solution('''FFT\n10\n10''') == 'Yes'\nassert solution('''FFF\n10\n10''') == 'Yes'\nassert solution('''FFF\n20\n20''') == 'No'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''F\nT\nF\nT\nF\nT\nF\nT\nF\n''') == 'Yes'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('FTFTCFFF') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''F\nT\nT\nT\nF\nF\nT\nF\nF\nF\nF''') == 'Yes'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('TTTFFTTF') == 'No'\nassert solution('TTTTFFTT') == 'No'\nassert solution('TTTTTTTT') == 'No'\nassert solution('TTTTTTTTTTTT') == 'No'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '2\\n'\nassert solution('2\\n') == '3\\n'\nassert solution('3\\n') == '5\\n'\nassert solution('4\\n') == '6\\n'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '5'\nassert solution('5') == '6'\nassert solution('6') == '7'\nassert solution('7') == '8'\nassert solution('8') == '9'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''2\n3''') == '1'\nassert solution('''3\n3''') == '1'\nassert solution('''4\n3''') == '2'\nassert solution('''5\n3''') == '2'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1.3333333333'\n\n\"\"\""
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1.3333333333\"\nassert solution(\"5\") == \"2.0\"\nassert solution(\"10\") == \"2.0\"\nassert solution(\"20\") == \"1.5\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1.3333333333'\nassert solution('4') == '1.3333333333'\nassert solution('5') == '0.9285714285714286'"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3\n3\n\n''') == '1.3333333333'\nassert solution('''3\n1 2 3\n3\n\n''') == '1.3333333333'\nassert solution('''3\n1 2 3\n3\n\n''') == '1.3333333333'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1.3333333333'\nassert solution('5') == '1.3333333333'\nassert solution('1') == '1'"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('2\\n2 4 1\\n2\\n') == '1.5'\nassert solution('3\\n3 2 3\\n2\\n') == '1.5'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1.3333333333\"\nprint(solution())"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3\n3\n\n''') == '1.3333333333'"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 2 3\\n3\\n') == '1.3333333333'\nassert solution('1\\n1\\n') == '0.5'\nassert solution('2\\n2\\n') == '0.5'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 2\n9 7 11 15 5''') == '13 7'\nassert solution('''1 1 2\n1 2 3''') == '3 1'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1 2') == '13 7'\nassert solution('6 100000 569') == '986 605'"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"13 7\"\nassert solution() == \"596 605\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 2\") == \"13 7\"\nassert solution(\"100000 569\") == \"986 605\"\nprint(solution(*tuple(map(int, input().split()))))\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '13 7'\nassert solution('''\n5 1 2\n9 7 11 15 5\n''') == '986 605'"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 2') == '13 7'\nassert solution('100000 569') == '996 605'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '13 7'\nassert solution('''\n2 100000 569\n''') == '986 605'\nassert solution('''\n3 1 2\n4 5 8\n''') == '4 3'\nassert solution('''\n3 3 3\n''') == '0 0'\nassert solution('''\n6 7 9\n''') == '0 0'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 100000 569\") == \"986 605\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\") == \"13 7\"\nassert solution(\"2 100000 569\\n605 986\") == \"986 605\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 3\\n4 5 6\") == \"1 5\"\nassert solution(\"2 2 3\\n3 4 5\") == \"2 2\"\nassert solution(\"1 1 3\\n4 5 6\") == \"1 5\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '-1'\nassert solution('3 4 1 1 3') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3 2 4 4''') == '1'\nassert solution('''3 3 3 3 5''') == '0'\nassert solution('''5 5 1 2 3''') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '0'\nassert solution('3 4 1 1 3') == '3'\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3 2 4 4\n2 5 4 10\"\"\") == \"1\"\nassert solution(\"\"\"\n3 3 3 3 5\n2 3 5 4 2\"\"\") == \"0\"\nassert solution(\"\"\"\n5 5 1 2 3\n2 3 2\"\"\") == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '1'\nassert solution(input_) == '0'"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 4 4\") == \"1\"\nassert solution(\"3 3 3 3 5\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2 4 4\") == \"1\"\nassert solution(\"3 3 3 3 5\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\") == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 2 4 4\n2 5 4 10\n''') == '1'\nassert solution('''\n3 3 3 3 5\n2 3 5 4 2\n''') == '0'\nassert solution('''\n5 5 1 2 3\n2 3 5 4 2\n''') == '3'\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3 3 5\") == \"0\"\nassert solution(\"3 3 3 3 5\") == \"1\"\nassert solution(\"5 5 1 2 3\") == \"3\"\nassert solution(\"3 4 1 1 3\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"-1\""
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 3 2 4 4\"\"\") == \"1\"\nassert solution(\"\"\"3 3 3 3 5\"\"\") == \"0\"\nassert solution(\"\"\"5 5 1 2 3\"\"\") == \"3\"\nassert solution(\"\"\"3 4 1 1 3\"\"\") == \"3\"\n\n\n'''"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nG4 R4 R3 B3\n''') == '0'\nassert solution('''\n5\nB1 Y1 W1 G1 R1\n''') == '4'\nassert solution('''\n4\nR4 R3 B3\nG4 G3 G3\n''') == '2'\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nG3 G3\n\n''') == '0'\n\nassert solution('''4\nB1 Y1 W1 G1 R1\n\n''') == '4'\n\nassert solution('''5\nG4 R4 R3 B3\n\n''') == '2'"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\nG3 G3\n\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\nG4 R4 R3 B3\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\nB1 Y1 W1 G1 R1\n\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('10') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '2'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '0'"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nG3 G3\n''') == 0\nassert solution('''\nG4 R4 R3 B3\n''') == 2\nassert solution('''\nB1 Y1 W1 G1 R1\n''') == 4\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\n\"\"\""
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"2 2\"\nassert solution(\"4\") == \"3 3\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 3 4 3\n4 7 6 5\n''') == '2 6'\nassert solution('''\n5\n10 30 5 6 24\n10 41 7 8 24\n''') == '3 11'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2 6\"\nassert solution(\"5\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 4 3\") == \"2 6\"\nassert solution(\"5 7 9 8\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3 3 4 3\n4 7 6 5\n''') == \"2 6\"\nassert solution('''\n5\n10 30 5 6 24\n10 41 7 8 24\n''') == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"5\") == \"3 11\"\nassert solution(\"5\") == \"3 11\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n3 3 4 3\n4 7 6 5\n\"\"\") == \"2 6\"\nassert solution(\"\"\"\n5\n10 30 5 6 24\n10 41 7 8 24\n\"\"\") == \"3 11\"\nassert solution(\"\"\"\n5\n12 30 3 1\n1 1\n\"\"\") == \"2 2\"\nassert solution(\"\"\"\n4\n1 1\n1 1\n\"\"\") == \"2 2\"\nassert solution(\"\"\"\n5\n10 30 5 6 24\n10 41 7 8 24\n\"\"\") == \"3 11\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2 6\"\nassert solution(\"5\") == \"3 11\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"10\") == \"1 1\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5') == '2 6'\nassert solution('5\\n10 30 5 6 24\\n10 41 7 8 24') == '3 11'"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n2''') == 'Impossible'\nassert solution('''3 2\n1A1B''') == '1A1B'\nassert solution('''3 2\n3AB2A3B''') == '3AB2A3B'\nassert solution('''4 4\n1A1B1C1D1A''') == '3AB2A3B1A'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"Impossible\"\nassert solution(\"1 4\") == \"3B\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 4\n\n''') == '3B'\n\nassert solution('''2 2\n\n''') == 'Impossible'\n\nassert solution('''3 2\n\n''') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"3B\"\n\nprint(solution(stdin=input()))\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 4\n''') == '3B'\nassert solution('''2 2\n''') == 'Impossible'\nassert solution('''3 2\n''') == '1A1B'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\nassert solution('12 2') == '12'"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n''') == '3'\nassert solution('''5 4\n''') == '25'\n\nprint(solution('''\n1000000001\n'''))\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\n\nimport sys\nimport io\nimport math\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('5 4') == '25'\nassert solution('3 2') == '3'\nassert solution
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == '3'\nassert solution(\"5 4\") == '25'\nassert solution(\"0 4\") == '0'\nassert solution(\"3 1\") == '4'\nassert solution(\"3 1\") == '4'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5 3\n4 2 5 1\n-1 2\n-1 3\n1 4\n1 5\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"10 10\") == \"6\"\nassert solution(\"100 200\") == \"3316\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4\\n') == '1'\nassert solution('5 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n') == '1'\nassert solution('10 5 1 5 1 2 6 2 6 5\\n0 2 -1 1 1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 2\\n') == '2'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n''') == '1'\nassert solution('''6 7\n7 1 2 3 4 5\n0 1 2\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n''') == '1'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"4 1 2 3\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"3\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('5 3') == '2'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"-1\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\nS.o\\n.o.\\no.T') == '2'\n\n'''\nfrom collections import defaultdict"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '2'\nassert solution('5 5') == '2'\nassert solution('10 5') == '1'\nassert solution('30 30') == '1'\nassert solution('50 50') == '1'\n\n\"\"\"\n\nH, W = map(int, input().split())\n\nrow_0 = input()\nrow_1 = input()\nrow_2 = input()\n\nfor i in range(1, H):\n    if row_0!= row_1 or row_0!= row_2:\n        print(\"-1\")\n        break\n    \n    row_0 = row_1\n    row_1 = row_2\n\n    for j in range(1, W):\n        if row_0[j]!= row_1[j] or row_0[j]!= row_2[j]:\n            print(\"-1\")\n            break\n        \n    if row_0[0] == row_1[0] and row_0[0] == row_2[0]:\n        print(i)\n        break\n\n    row_2 = row_1\n    row_1 = row_0\n\n\n\"\"\"\nimport math\n\nh = int(input())\nw = int(input())\n\na = []\nfor i in range(h):\n    a.append(input())\n    \nmax_distance = 0\n\nfor i in range(h):\n    for j in range(w):\n        if a[i][j] == '.':\n            if j == 0:\n                distance = -1\n            else:\n                distance = j\n            \n            if i == 0:\n                if w!= 1:\n                    distance += 1\n                else:\n                    distance += 2\n            \n            if i == h - 1:\n                if w!= 1:\n                    distance += 1\n                else:\n                    distance += 2\n            \n            if j == 0:\n                if w!= 1:\n                    distance += 1\n                else:\n                    distance += 2\n            \n            if j == w - 1:\n                if w!= 1:\n                    distance += 1\n                else:\n                    distance += 2\n            \n            max_distance = max(max_distance, distance)\n\nprint(max_distance)\n\"\"\""
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.\\no.T\") == \"2\"\nassert solution(\"3 3\\n.o.o\\n.o.o\\no.T\") == -1\nassert solution(\"3 3\\n.o.o\\no.o.o\\no.T\") == -1"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"0\""
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3\n.S.o\n.o.o\no.T\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.\\no.T\\n\") == \"2\"\nassert solution(\"3 4\\n.o.\\n.o.\\no.\\no.\\no.\\no.\\n\") == \"3\"\n\n\"\"\"\nimport sys\n\nsys.setrecursionlimit(10**6)\n\nH, W = map(int, input().split())\n\na = [list(input()) for _ in range(H)]"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n.\\no\\no\\no') == '2'\nassert solution('2\\n.o\\no\\no\\no') == '1'\nassert solution('3\\n.o\\no\\no\\no') == '-1'\nassert solution('3\\no\\no\\no\\no') == '-1'\nassert solution('4\\n.o\\no\\no\\no\\nS\\n.o\\no\\no\\no') == '-1'\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == -1\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n.o\n.o\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n.o\no.o\no.T\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n10\no.S.o.S.o.o.S.o.S.o.S.o.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o.S.o"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\nprint('The tests passed')\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n\n\"\"\"\n\nfrom math import sqrt\nfrom functools import reduce"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"199 200\") == \"200\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'Aoki'\nassert solution('3') == 'Takahashi'\nassert solution('4') == 'Takahashi'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Aoki\", \"Sample\"\nassert solution(\"2\") == \"Takahashi\", \"Sample\"\nassert solution(\"3\") == \"Aoki\", \"Sample\"\nassert solution(\"4\") == \"Takahashi\", \"Sample\"\nassert solution(\"5\") == \"Aoki\", \"Sample\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Aoki\"\nassert solution(\"1\") == \"Takahashi\"\n\n\"\"\""
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n5 2\n3 3\n''') == 'Aoki'\nassert solution('''\n2\n5 2\n6 3\n''') == 'Takahashi'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5 2\n3 3\n\n''') == 'Aoki'\n\nassert solution('''\n2\n5 2\n3 3\n\n''') == 'Takahashi'"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n5 2\\n3 3\") == \"Takahashi\"\nassert solution(\"4\\n5 3\\n4 3\") == \"Takahashi\"\nassert solution(\"6\\n5 4\\n6 4\") == \"Takahashi\"\nassert solution(\"4\\n5 3\\n4 3\") == \"Takahashi\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n5 2\\n3 3') == 'Aoki'\nassert solution('3\\n3 2\\n5 2') == 'Takahashi'\nassert solution('3\\n5 3\\n3 2') == 'Aoki'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n1 3\n2 2\n''') == 'Aoki'\n\nassert solution(\n'''\n2\n3 2\n1 2\n''') == 'Takahashi'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Aoki\"\nassert solution(\"2\") == \"Takahashi\"\n\"\"\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n5 2\\n3 3\") == \"Takahashi\"\n\"\"\""
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n''') == '0'\nassert solution('''\n3 3\n''') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n''') == '0'\nassert solution('''3 3\n''') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n''') == '8', 'First example'\n\nassert solution('''\n3 3\n''') == '8', 'Second example'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n''') == '8'\nassert solution('''\n2 2\n''') == '0'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n''') == '8'\nassert solution('''\n5 5\n''') == '12'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n''') == '0'\nassert solution('''3 3\n''') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"2 2\n\"\"\") == '0'\nassert solution(\n\"\"\"3 3\n\"\"\") == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n''') == '0'\nassert solution('''\n3 3\n''') == '8'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 3\") == \"-1\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 3') == '0'\nassert solution('2 3') == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 2\\n\"\n    \"1 2 3 4\\n\"\n    \"1 5 3 4\\n\"\n    ) == \"1\"\n\nassert solution(\n    \"2 3\\n\"\n    \"1 2 3 4\\n\"\n    \"1 5 6 4\\n\"\n    ) == \"0\"\n\nassert solution(\n    \"2 4\\n\"\n    \"1 2 3 4\\n\"\n    \"1 5 6 4\\n\"\n    ) == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 2 3 4\n1 5 3 4\n''') == '1'\n\nassert solution('''\n2 3\n1 2 4 5\n1 2 1 3 2 3\n''') == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4\\n') == '1'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '0'\nassert solution('1 1\\n1 2 1 3 2 3\\n') == '1'\nassert solution('1 1\\n1 2 3 4 5\\n1 2 1 3 2 3\\n') == '-1'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 3\") == \"-1\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n1 2 3 4\n1 5 3 4\n''') == '1'\nassert solution('''\n2 3\n1 2 4 5\n1 2 1 3 2 3\n''') == '0'\nassert solution('''\n2 2\n1 2 3 4\n1 5 6 4\n''') == '-1'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_simple_example) == \"1\"\nprint(solution(input_simple_example))\nassert solution(input_simple_example_2) == \"0\"\nprint(solution(input_simple_example_2))\nassert solution(input_simple_example_3) == \"-1\"\nprint(solution(input_simple_example_3))\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '-1'"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"24\") == \"09:09\"\nassert solution(\"12\") == \"17:30\"\nassert solution(\"24\") == \"09:09\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == input()\n\nassert solution(input()) == input()"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"24\"\n) == \"07:00\"\nassert solution(\n    \"12\"\n) == \"07:00\"\n\nassert solution(\n    \"12\"\n) == \"11:59\"\n\nassert solution(\n    \"24\"\n) == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"24\") == \"09:09\"\nassert solution(\"12\") == \"07:09\"\nassert solution(\"24\") == \"09:09\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('24') == '17:00'\nassert solution('12') == '07:00'\nassert solution('24') == '17:00'\nassert solution('99') == '09:00'\nassert solution('24') == '17:00'"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"./inputs/input_day_06_01.txt\") == \"01:01\"\nassert solution(\"./inputs/input_day_06_02.txt\") == \"09:09\"\nassert solution(\"./inputs/input_day_06_03.txt\") == \"03:14\"\nassert solution(\"./inputs/input_day_06_04.txt\") == \"01:27\"\nassert solution(\"./inputs/input_day_06_05.txt\") == \"12:37\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"24\") == \"07:09\"\nassert solution(\"12\") == \"17:30\"\nassert solution(\"24\") == \"07:09\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == '01:01'\nstdin = input()\nassert solution(stdin) == '08:15'\nstdin = input()\nassert solution(stdin) == '17:30'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(str(input())) == str(input())"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"24\") == \"09:09\"\nassert solution(\"12\") == \"07:09\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"1 2 2\\n\"\n    \"2 3 2\\n\"\n    \"3 1 2\\n\"\n    \"4 2 2\\n\"\n    \"5 3 1\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\n2\n1 2 1\n2 3 1\n3 1 1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\") == \"6\"\n\n#######################################################################################################################"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '6'\nassert solution('3 1') == '5'\nassert solution('10') == '8'\nassert solution('4') == '0'\nassert solution('10') == '0'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"5 3\") == \"13\"\nassert solution(\"10 1\") == \"48\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n') == '6'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6'\nassert solution('4 1\\n1 1 1\\n2 1\\n1 2\\n2 3') == '0'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '6'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n2 0 3 0 1 1\n''') == '5'\nassert solution('''\n6\n3 2 2 2 1 1\n''') == '-1'\nassert solution('''\n1\n0\n''') == '0'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('6') == '5'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"0\""
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3 2 2 2 1 1\") == \"5 6\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6\\n\"\n    \"2 0 3 0 1 1\"\n    ) == \"5\\n\"\n\nassert solution(\n    \"6\\n\"\n    \"3 2 2 2 1 1\"\n    ) == \"0\\n\"\n\nassert solution(\n    \"1\\n\"\n    \"0\"\n    ) == \"0\""
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n0\n1\n2\n1\n2\n1\n2\n1\n2\n''') == '-1'\nassert solution('''3\n2 0 3 0 1 1\n1\n2 5\n3 3\n3 6\n5 6\n6 6\n''') == '5 6'\nassert solution('''6\n3 2 2 2 1 1\n1\n2 5\n3 3\n3 6\n5 6\n6 6\n''') == '-1'"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == '0'\nassert solution(\"1\") == '0'\nassert solution(\"1\") == '0'"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 0 3 0 1 1') == '5'\nassert solution('6\\n2 0 3 0 1 1') == '-1'\nassert solution('1\\n0') == '0'\nassert solution('1\\n1') == '-1'"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '-1'\nassert solution('1') == '-1'\nassert solution('6') == '5'\nassert solution('6') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n3 2 2 2 1 1\n''') == '5'\n\nassert solution('''\n6\n3 2 2 2 1 1\n''') == '-1'\n\nassert solution('''\n6\n1 2 3\n''') == '0'\n\nassert solution('''\n1\n1\n''') == '1'\n\nassert solution('''\n1\n2\n''') == '-1'\n\nprint('Tests passed.')"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 8\") == \"2\"\nassert solution(\"3 10\") == \"1\""
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 10\n12 20''') == '2'\nassert solution('''3 10\n10 20 30''') == '1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 10, 20]) == \"1\"\nassert solution([3, 10, 20]) == \"0\"\nassert solution([3, 5, 7]) == \"1\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 10\n10 20 30\n''') == '2'\nassert solution('''\n3 10\n10 20 30\n''') == '1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 8') == '2'\nassert solution('3 10') == '1'\nassert solution('4 8') == '0'\nassert solution('3 8') == '0'\n\n\n'''\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"2\\n0 4?\""
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 8\") == \"2\"\nassert solution(\"3 10\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 8\") == \"2\"\nassert solution(\"3 10\") == \"1\"\nassert solution(\"5 10\") == \"3\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 8\") == \"2\"\nassert solution(\"3 10\") == \"1\""
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 5 5\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\") == \"11.547005383792516398\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('100 1000') == '11.547005383792516398'"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('0 0 0 1000') == '11.547005383792516398'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0 0 5 5\n3 2\n-1 -1\n-1 0\n''') == '3.729935587093555327'\nassert solution('''\n0 0 0 1000\n100 100\n-50 0\n50 0\n''') == '11.547005383792516398'"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0 0 5 5\n3 2\n-1 -1\n-1 0\n''') == '3.729935587093555327'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 5 5\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('0 0 0 1000') == '11.547005383792516398'\nprint(solution(input()))\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('3 2') == '1.69696969696969697'\nassert solution('-1 -1') == '1.0'\nassert solution('-1 0') == '0.0'\nprint('all tests passed')\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 3') == '3'\nassert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('100 1000') == '11.547005383792516398'\nassert solution('-50 0') == '11.547005383792516398'\nassert solution('-1 -1') == '3.729935587093555327'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('3 2') == '3.828427124746190328'\nassert solution('100 100') == '100.0'\nassert solution('-50 0') == '11.547005383792516398'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second\\nFirst\\nSecond'\nprint(solution('''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n'''))\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"Second\"\nassert solution(\"1\") == \"First\"\nassert solution(\"2\") == \"Second\"\nassert solution(\"21\") == \"First\"\nassert solution(\"476523737\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'First'\nassert solution('10') == 'Second'\nassert solution('2') == 'First'\nassert solution('21') == 'Second'\nassert solution('476523737') == 'Second'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"Second\"\nassert solution(\"3\\n1\\n2\") == \"First\"\nassert solution(\"1\\n10\\n2\") == \"Second\""
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"First\"\nassert solution(\"1\") == \"Second\"\nassert solution(\"2\") == \"Second\"\nassert solution(\"21\") == \"First\"\nassert solution(\"476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Second'\nassert solution('2') == 'First'\nassert solution('3') == 'Second'\nassert solution('4') == 'First'\nassert solution('5') == 'Second'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1\n10\n2\n1 2\n21\"\"\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Second\"\nassert solution(\"2\") == \"First\"\nassert solution(\"3\") == \"Second\"\nassert solution(\"10\") == \"Second\"\nassert solution(\"2\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second\\nFirst\\nSecond'\nprint(solution(input()))\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'First'\nassert solution('2') == 'Second'\nassert solution('3') == 'First'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 2\n4 3 1 5 2\n''') == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"10 4 3\") == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 2') == '1'"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"5 6 2\") == \"1\"\nassert solution(\"4 4 2\") == \"1\"\nassert solution(\"5 5 2\") == \"0\"\nassert solution(\"6 3 2\") == \"0\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"10 3 2\") == \"3\""
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"10 1 5 2 3 4 6 7 8 9\\n1 2 3 4 5 6 7 8 9 10\\n5 3 2 4 1 5 2 6 7 8 9 10\") == \"-3\"\nassert solution(\"100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 2\") == \"1\"\nassert solution(\"3 5 2\") == \"1\"\nassert solution(\"3 10 2\") == \"8\"\nassert solution(\"3 5 2\") == \"1\"\nassert solution(\"1 5 2\") == \"1\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\nprint(solution(input()))\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"24\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n3 2\n''') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\nassert solution('5 5') == '246'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2\n\"\"\") == \"24\"\n\nassert solution(\"\"\"\n3 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n3 2\n''') == '24'\nassert solution('''\n3 4\n''') == '48'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'\n\n\"\"\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '3'\nassert solution('3 3') == '6'\nassert solution('5 3') == '14'\nassert solution('30 30') == '10913'\nassert solution('41 41') == '9'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2\n1 2\n1 3\n2 3\n2 4\n3 4\n''') == '6'\nassert solution('''4 4\n2 1\n2 3\n2 4\n''') == '3'\nassert solution('''7 3\n4 1\n5 2\n6 2\n6 3\n6 4\n''') == '1196'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4\\n') == '3'\nassert solution('7 3\\n') == '1196'\n'''\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3') == '11'\nassert solution('31 8') == '1180'\n\n\"\"\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4') == '3'\nassert solution('31 8') == '64921457'"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'\n\n\n\"\"\""
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n2 1\n1 2\n3 1\n1 4\n3 4''') == \"6\"\n\nassert solution('''2 3\n2 2\n3 1\n1 2\n1 4\n1 3''') == \"3\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n\n''') == '6'\n\nassert solution('''\n4 4\n\n''') == '3'\n\nassert solution('''\n7 3\n\n''') == '1196'\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 2') == '#.X#'\nassert solution('5 4 5') == '#X#.X#'\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 2\") == \"X.#X\\nX.X#\\nX#.X\"\nassert solution(\"5 4 5\") == \"XXXX\\nX#.X\\nX#..\\n...#\\nX.#X\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == '#X#'\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2\") == \"###.\\n###.\\n###.\""
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 5\") == \"###.\\n###.\\n###.\\n###.\\n###.\\n\"\nassert solution(\"1 2 3\") == \"X\"\nassert solution(\"5 4 0\") == \"###.\\n###.\\n###.\\n###.\\n###.\"\nassert solution(\"5 5 5\") == \"###.\\n###.\\n###.\\n###.\\n###.\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 2\") == \"#.X#\\nX.#.\\n#...\\n\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\") == \"#.X#\"\nassert solution(\"5 4 5\") == \"#X#.X#\"\nassert solution(\"1 1 1\") == \"X.X\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 4 2\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n') == '1'\nassert solution('5\\n1 2 2 2\\n') == '3'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 2 2 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n\"\"\") == \"4\""
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 2 2') == '3'\nassert solution('1\\n1') == '1'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4') == '4'\nassert solution('18\\n1 2 2 3 4 5') == '3'"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1') == '1'\nassert solution('5\\n1 2 2 2 2') == '3'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4') == '4'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '4'\nassert solution('18') == '3'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3\"\n) == \"1\"\nassert solution(\n    \"5\"\n) == \"3\"\nassert solution(\n    \"18\"\n) == \"4\""
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 1\n''') == '1'\nassert solution('''\n5\n1 2 2 2\n''') == '3'\nassert solution('''\n18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n''') == '4'"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"18\") == \"4\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 2\n4 2 5 1''') == \"2 4 1 5 3\"\nassert solution('''1 1 3 1''') == '-1'\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 2 3 1\") == \"1 4 2 3 5\"\n\"\"\"\nimport itertools\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '-1'\nassert solution('4 3 2') == '2 4 1 5 3'"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\") == \"1 2 3\"\nassert solution(\"3 1 2 4\") == \"4 2 1 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'\n\n\"\"\""
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"7 1 5 3\") == \"1 2 5 7\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 6 9 18 36 108\\n') == \"Yes\"\nassert solution('2\\n7 17\\n') == \"No\"\nassert solution('9\\n4 8 10 12 15 18 33 44 81\\n') == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n3 6 9 18 36 108') == 'Yes'\nassert solution('2\\n7 17') == 'No'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes'\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('9') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\"\nassert solution([5,4,8,3,1,2]) == \"Yes\"\nassert solution([5,4,8,3,1,2,7,6,5]) == \"Yes\"\nassert solution([3,1]) == \"Yes\"\nassert solution([4,1]) == \"No\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6 9 18 36 108') == 'Yes'\nassert solution('2 7 17') == 'No'\nassert solution('9 4 8 10 12 15 18 33 44 81') == 'Yes'\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"4\\n8 10 12 15 18 33 44 81\") == \"No\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"Yes\"\n\n\n\"\"\"\n\nimport sys\nsys.stdin = open('input.txt')"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n8 9 10 12 15 18 33 44 81\n''') == 'No'\nassert solution('''\n6\n3 6 9 18 36 108\n''') == 'Yes'\nassert solution('''\n3\n3 4 5 6\n''') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n3 6 9 18 36 108\n''') == 'Yes'\nassert solution('''2\n7 17\n''') == 'No'\nassert solution('''9\n4 8 10 12 15 18 33 44 81\n''') == 'Yes'\n\n'''\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 -6 4 5 3\n''') == '12'\nassert solution('''4\n1 2 -6 4 5 3\n''') == '-6'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '-6'\nassert solution('6') == '12'"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(['5', '1 2 -6 4 5 3']) == '12'\nassert solution(['12', '12 2 -5 4 5 3']) == '1'\nassert solution(['10', '1 2 -6 4 5 3']) == '0'\nassert solution(['9', '1 2 -6 4 5 3']) == '0'\nassert solution(['100', '1 2 -6 4 5 3']) == '1'\n\n'''\n\nn = int(input())\ngem = list(map(int, input().split()))\n\ngem.sort()"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"12\"\nassert solution(\"10\") == \"10\"\nassert solution(\"5\") == \"5\"\nassert solution(\"11\") == \"11\"\nassert solution(\"12\") == \"10\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\nassert solution(\"3\\n1 2 -6 4 5\") == \"5\"\nassert solution(\"4\\n1 2 -6 4 5\") == \"5\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 2 -6 4 5 3\\n') == '12'\nassert solution('3\\n1 2 -6 4 5 3\\n') == '10'\nassert solution('10\\n1 2 3 6 5 4 4 4 2\\n') == '10'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '12'\nassert solution('3') == '4'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2 -6 4 5 3') == '12'\nassert solution('6\\n1 2 -6 4 5 3') == '12'\n\n\"\"\"\nimport itertools\nimport math"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '5'\nassert solution('3') == '4'\nassert solution('5') == '0'\n\"\"\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '12'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 5 4 2 1 3 4 5\") == 4\nassert solution(\"1 2 3 4 5 6 7\") == 5\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n3 1 4 2\n''') == \"5\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n1 1 1\n''') == '2'\nassert solution('''\n4 3\n3 2 3 1\n''') == '4'\nassert solution('''\n5 4\n5 5 3 4 3\n''') == '5'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n3 1 4 2\\n\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n3 1 4 2') == \"5\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 2 2 3 3 4 4 5 5 5') == 5"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '5'\nassert solution('6 8') == '6'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n3 1 4 2''') == '5'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == 5\nassert solution('3 1 4 2') == 5\nassert solution('2 3 5 8 10 2 6 1 7 4 5') == 9\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 1, 4, 2]) == 5\nassert solution([3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2]) == 7\nassert solution([3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4,"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 1\n''') == '0 0'\nassert solution('''3\n3 2 1\n''') == '0 1'\nassert solution('''3\n3 2 1\n''') == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3\n\n''') == '0 0'\nassert solution('''3\n2 3 1\n\n''') == '0 1'\nassert solution('''3\n3 2 1\n\n''') == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0 0'\nassert solution('3') == '0 1'\nassert solution('3') == '0 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n\") == \"0 0\"\nassert solution(\"3 2 1\\n\") == \"0 1\"\nassert solution(\"3 1 2\\n\") == \"1 0\"\nassert solution(\"3 3 1\\n\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 2, 3]) == '0 0'\nassert solution([3, 2, 1]) == '0 1'\nassert solution([3, 1, 2]) == '1 2'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0 0'\nassert solution('''\n3\n3 2 1\n''') == '0 1'\nassert solution('''\n3\n3 2 1\n''') == '2 1'\nassert solution('''\n3\n1 2 3\n''') == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0 0'\nassert solution('3') == '0 1'\nassert solution('3') == '0 2'\nassert solution('3') == '0 2'\nassert solution('5') == '1 1 1 1 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '0 0'\nassert solution('3 2 1') == '0 1'\nassert solution('3 2 1') == '2 1'\n\n\"\"\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0 0'\nassert solution('3') == '0 1'\nassert solution('3') == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n3 1\n\"\"\") == \"0 1\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"0 0\"\nassert solution(\"\"\"\n3\n2 3 1\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n3\n3 2 1\n\"\"\") == \"2 1\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4\\nab\\nbb') == '8'\nassert solution('3 3\\naba\\nbba') == '8'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 4\naa\nbb''') == '6'\nassert solution('''3 3\naba\nbba''') == '8'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 6\n\nassert solution(input()) == 8\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"1 1\", \"a\", \"b\"]) == \"6\"\n\nassert solution([\"2 2\", \"aa\", \"bb\"]) == \"8\"\n\nassert solution([\"3 3\", \"aba\", \"baa\"]) == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == \"6\"\nassert solution(\"3 3\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4\naa\nbb''') == '6'\nassert solution('''3 3\naba\nbba''') == '8'\nassert solution('''4 5\nabbb\nbaaa''') == '8'"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4') == '6'\nassert solution('3 3') == '8'\nassert solution('4 5') == '8'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\") == \"6\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 0 1\\n1 0 0\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'YES'\nassert solution('''\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'\nassert solution('''\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'\nassert solution('''\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'\nassert solution('''\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'YES'\n\nimport sys\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"YES\"\nprint(solution(__import__(\"sys\").stdin.read()))\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 6 7') == 'YES'\nassert solution('5 6 15 35 77 22') == 'YES'\nassert solution('5 10 15 1000 75') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n6 10 15 1000 75\n''') == 'YES'\nassert solution('''\n4\n2 3 6 7\n''') == 'YES'\nassert solution('''\n4\n6 15 35 77 22\n''') == 'NO'\nassert solution('''\n5\n6 10 15 1000 75\n''') == 'NO'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n2\n3''') == 'YES'\nassert solution('''2\n4\n2\n2''') == 'NO'\nassert solution('''4\n4\n2\n2\n3''') == 'YES'\nassert solution('''6\n5\n6\n4\n2\n2\n1''') == 'NO'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'YES', '3, 5'\nassert solution('2') == 'YES', '1, 2'\nassert solution('5') == 'NO', '3, 5'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 6 7') == 'YES'\nassert solution('5 6 15 35 77 22') == 'YES'\nassert solution('5 1000 75') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'NO'\nassert solution('4') == 'YES'\nassert solution('4') == 'YES'"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == 'YES'\nassert solution('5') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'NO'\nassert solution('6') == 'YES'\nassert solution('7') == 'NO'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''100\n60\n70''') == '40'\nassert solution('''410\n55\n70''') == '5'\nassert solution('''600\n60\n70''') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100') == '40'\nassert solution('400') == '5'\nassert solution('600') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n100\n60\n70\n''') == '40'\nassert solution('''\n410\n55\n70\n''') == '5'\nassert solution('''\n600\n60\n70\n''') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100\\n60\\n70') == '40'\nassert solution('410\\n55\\n70') == '5'\nassert solution('600\\n60\\n70') == '0'\nassert solution('100\\n55\\n70') == '0'\nassert solution('100\\n60\\n60') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''100\n60\n70''') == '40'\nassert solution('''410\n55\n70''') == '5'\nassert solution('''600\n60\n70''') == '0'\nassert solution('''500\n50\n70''') == '0'\nassert solution('''300\n70\n80''') == '10'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n60\n70\n\"\"\") == \"40\"\n\nassert solution(\"\"\"\n310\n55\n70\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n600\n60\n70\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100') == '40'\nassert solution('410') == '5'\nassert solution('600') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''100\n60\n70''') == '40'\nassert solution('''410\n55\n70''') == '5'\nassert solution('''600\n60\n70''') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''100\n60\n70''') == '40'\nassert solution('''410\n55\n70''') == '5'\nassert solution('''600\n60\n70''') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '40'\n\"\"\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 4 1 5 9 2 6 5 3 5 8') == '4 4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3 4\"\nassert solution(input()) == \"3 1\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"12\", \"3 1 4 1 5 9 2 6 5 3 5 8\"]) == \"12 4\", 'Checking 1'\nassert solution([\"5\", \"1 1 1 1 1\"]) == \"1\", 'Checking 2'\nassert solution([\"3\", \"1 1 1 1\"]) == \"1\", 'Checking 3'"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 1 1 1\\n') == '1'\nassert solution('6\\n1 1 2 2 2 2\\n') == '2'\nassert solution('9\\n1 1 1 1 1 2\\n') == '3'\nassert solution('15\\n1 1 1 1 1 1 1 1 1 1\\n') == '5'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 1 1 1 1''') == '1 1 1 1 1'\nassert solution('''4\n1 1 1 1''') == '1 1 1 1'\nassert solution('''2\n1 1''') == '1'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"12\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"3 4\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n12\n3 1 4 1 5 9 2 6 5 3 5 8\n''') == '12 4', 'Wrong'\nassert solution('''\n5\n1 1 1 1 1\n''') == '1 1 1 1 1', 'Wrong'"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3 1 4 1 5 9 2 6 5 3 5 8\") == \"9 2 6 5 3 5 8\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3 4\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"5 1\") == \"1\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 1\n1 3 3\n\"\"\") == \"6\"\n\nassert solution(\"\"\"5 3\n1 2 1\n1 3 2\n1 4 2\n1 5 3\n\"\"\") == \"8\"\n\nassert solution(\"\"\"3 1\n1 3 3\n\"\"\") == \"6\"\n\nassert solution(\"\"\"10 1\n1 5 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n1 11 1\n1 12 1\n\"\"\") == \"24\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"6\""
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3 1\\n'\n    '1 3 3\\n'\n) == '6'\n\"\"\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1\\n1 3 3\\n') == '6'"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '6'\nassert solution('6 3') == '12'\n\"\"\""
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"6\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"1 4\") == \"0\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"2 3\") == \"4\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '6'\nassert solution('10 1') == '46'\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3\\n1 3 3') == '6'\nassert solution('3 1\\n1 3 3') == '6'\nassert solution('5 4\\n1 3 3 4 2') == '12'\nassert solution('2 3\\n1 3 2') == '5'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('87654') == '10'\nassert solution('30') == '10'"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"10000000\") == \"1000000\"\nassert solution(\"1000000000\") == \"10000000\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"30\") == \"10\"\nassert solution(\"123\") == \"123\"\nassert solution(\"1000\") == \"100\"\nassert solution(\"87654\") == \"10\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '10'\nassert solution('30') == '10'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('87654') == '10'"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '-1'\nassert solution('4') == '10'\nassert solution('4') == '10'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '-1'\nassert solution('10') == '10'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '-1'\nassert solution('87654') == '10'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '1'\nassert solution('8') == '1'\nassert solution('0') == '-1'\nassert solution('10') == '2'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"baa\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aba') == 'Second'\nassert solution('aab') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aba') == 'Second'\nassert solution('aba') == 'Second'"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'First'\nassert solution('aba') == 'Second'\nassert solution('aaa') == 'First'"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"Second\"\nassert solution(\"aa\") == \"Second\"\nassert solution(\"ab\") == \"Second\"\nassert solution(\"aab\") == \"Second\"\nassert solution(\"aba\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aba') == 'Second'\nassert solution('a') == 'First'\nassert solution('b') == 'First'\nassert solution('aab') == 'Second'\nassert solution('aac') == 'Second'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aba') == 'Second'\nassert solution('aab') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aba') == 'Second'\nassert solution('baa') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aba') == 'Second'\nassert solution('aaa') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aba') == 'Second'\nassert solution('aa') == 'First'\nassert solution('aab') == 'Second'"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '6'\nassert solution('16') == '40'\nprint(solution(*map(int, input().split())))\n\"\"\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(tuple(map(int, list(stdin)))) == str(6)"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '6'\nassert solution('16') == '40'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"12345\") == \"6\"\nassert solution(\"439873893693495623498263984765\") == \"40\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '6'\nassert solution('10') == '1'\nassert solution('12345') == '6'\nassert solution('439873893693495623498263984765') == '40'\nassert solution('1234567890') == '11'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\n12345') == '6'\nassert solution('16\\n439873893693495623498263984765') == '40'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"1\\n234\") == \"2\"\nassert solution(r\"1\\n12345\") == \"6\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '6'\nprint(solution(input()))"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '40'\nassert solution('12') == '0'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '40'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2\n1\n\"\"\") == \"332748119\"\nassert solution(\"\"\"\n1 2\n0 1\n\"\"\") == \"332748119\"\nassert solution(\"\"\"\n1 2\n0 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 2\n0 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 2\n0 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '332748119'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\nassert solution('''\n1 2\n1\n1\n''') == '3'"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == \"332748119\"\n\nassert solution('''1 2\n1\n1\n\n1''') == \"3\"\n\nassert solution('''3 3\n0 1 1\n4 3 5\n\n1''') == \"160955686\""
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"332748119\"\nassert solution(input) == \"185138929\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input) == '332748119'\nassert solution(real_input) == '160955686'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '332748119'\n\n\nimport math\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"332748119\"\nassert solution(input_) == \"185138929\"\nassert solution(input_) == \"974061117\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\"\nassert solution(\"1 2\\n1\\n1\") == \"3\""
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == '332748119'\nassert solution('''1 2\n1\n1\n\n''') == '160955686'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2\n1\n1\n\n''') == '332748119'\nassert solution('''1 2\n0 1\n1\n\n''') == '332748119'\nassert solution('''1 1\n1\n\n''') == '1'\nassert solution('''1 3\n0 1 1\n4 3 5\n\n''') == '160955686'\nassert solution('''1 4\n0 1 1 1\n5 4 6\n\n''') == '974061117'\n\n##other\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'OZ'\nassert solution('AA') == '0'\nprint('All tests passed!')"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\"\nassert solution(\"OZ\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\"\n) == \"ORZ\"\nassert solution(\n    \"AA\\nAA\\nAA\"\n) == \"0\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AA') == 'AA'\nassert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'ORZ'\nassert solution('OZ') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'ORZ'\nassert solution('OZ') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''AJKEQSLOBSROFGZ\nOVGURWZLWVLUXTH\nOZ''') == 'ORZ'\nprint(\"TEST PASSED\")\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AA') == 'AA'\nassert solution('AO') == 'AA'\nassert solution('AO') == 'AA'\nassert solution('AA') == 'AA'\nassert solution('AO') == 'AA'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AA') == 'AA'\nassert solution('A') == 'A'\nassert solution('AJJK') == 'AJ'\nassert solution('ZJK') == 'Z'\nassert solution('ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ') == 'ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'OZ'\nassert solution('OZ') == 0\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nAJKEQSLOBSROFGZ\nOVGURWZLWVLUXTH\nOZ\n''') == 'ORZ'\nassert solution('''\nA\nA\n''') == 0\nassert solution('''\nAA\nA\n''') == '0'\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('1 100 1') == '0'\nassert solution('100 100 100') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 2 1\\n1 1 1\\n1 1 1\") == \"1\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('100 100 1') == '0'\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\") == \"99\"\nassert solution(\"1 100 1\") == \"0\"\nassert solution(\"100 100 100\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100\\n') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1\\n') == '0'\nassert solution('10 20 20\\n2 10 10\\n2 10 10\\n') == '0'\nassert solution('100 100 100\\n0 1 0\\n0 1 0\\n') == '100'\n\nfrom typing import Callable\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestThis(unittest.TestCase):\n    def test_basics(self):\n        self.assertEqual(solution(\n            '1 2 1\\n1 100 1\\n1 100 100\\n'), '99')\n        self."
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('1 100 1') == '0'\nassert solution('100 100 100') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('1 100 1') == '0'\nassert solution('1 100 100') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 2 1\\n1 100 1\\n1 100 100\\n\") == \"99\\n\"\nassert solution(\n    \"100 100 100\\n1 1 1\\n1 1 1\\n\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('1 100 1') == '0'\nassert solution('100 100 100') == '0'\n\nassert solution('2 10 1') == '9'\nassert solution('1 100 1') == '99'\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2 1\n1 100 1\n1 100 100\n\"\"\") == \"99\"\nassert solution(\"\"\"\n1 2 1\n1 100 1\n1 100 100\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 2 1\n1 1 1\n1 1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n100 100 100\n1 1 1\n1 1 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('1000000000000 1048576') == '118606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('1000000000000 1048576') == '118606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\"\nprint(solution(input()))\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('1000000000000 1048576') == '118606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"118606527258\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''+-''') == 'Yes'\nassert solution('''++''') == 'Yes'\nassert solution('''+--''') == 'Yes'\nassert solution('''++--''') == 'Yes'\nassert solution('''+--+''') == 'Yes'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('+') == 'No'\nassert solution('-') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''+-\n''') == 'Yes'\nassert solution('''-\n''') == 'No'\nassert solution('''+\n''') == 'Yes'\nassert solution('''++\n''') == 'Yes'\nassert solution('''-++\n''') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''+-\n-++''') == 'No'\nassert solution('''+-\n+-''') == 'No'\nassert solution('''+-\n-++''') == 'No'\nassert solution('''+--''') == 'Yes'\nassert solution('''+-\n+''') == 'Yes'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'Yes'\nassert solution('+-') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('-+') == 'No'\nassert solution('++-') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''+-''') == 'No'\nassert solution('''+-''') == 'No'\nassert solution('''+''') == 'Yes'\nassert solution('''++''') == 'Yes'\nassert solution('''-+''') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''+--+\n    +-''') == 'Yes'\nassert solution('''+--+\n    --+''') == 'No'\nassert solution('''+--+\n    +--''') == 'No'\nassert solution('''+--+\n    +--+''') == 'No'\nassert solution('''+--+\n    --+''') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('-+') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n-\n''') == 'No'\nassert solution('''\n+-\n''') == 'Yes'\nassert solution('''\n++\n''') == 'Yes'\nassert solution('''\n+-\n''') == 'No'\nassert solution('''\n-\n''') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('-++') == 'Yes'\nassert solution('+') == 'No'\nassert solution('-') == 'No'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 0 0') == '12.566370614359172464'\nassert solution('4 1 -1') == '21.991148575128551812'\n\nSample test sets are available in the examples folder.\n'''\n\n\nimport math\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 0 0\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\") == \"21.991148575128551812\"\nassert solution(\"20 4 5 -1\") == \"10.000000\"\nassert solution(\"2 5 2 2\") == \"1.000000\"\n\n\nhttps://troyhunt.troyhunt.io/blog/snow-blower/\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 0 0\n0 1\n-1 2\n1 2\n\n''') == '12.566370614359172464'\n\nassert solution('''4 1 -1\n0 0\n1 2\n2 0\n1 1\n\n''') == '21.991148575128551812'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 0 0\n0 1\n-1 2\n1 2\n''') == '12.566370614359172464'\n\nassert solution('''\n4 1 -1\n0 0\n1 2\n2 0\n1 1\n''') == '21.991148575128551812'"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '12.566370614359172464'\n\nSample testcase 2:\n\nInput\n3 0 0\n0 1\n-1 2\n1 2\n\nOutput\n12.566370614359172464\n\"\"\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n') == '21.991148575128551812'\n\nassert solution('5 0 0 0\\n0 1\\n1 2\\n2 0\\n1 1\\n') == '32.631609750299159'\n\"\"\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 0 0\\n\"\n    \"0 1\\n\"\n    \"-1 2\\n\"\n    \"1 2\"\n) == \"12.566370614359172464\"\n\"\"\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 0 0\n0 1\n-1 2\n1 2\n\n''') == '12.566370614359172464'\n\nassert solution('''\n4 1 -1\n0 0\n1 2\n2 0\n1 1\n\n''') == '21.991148575128551812'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 0 0') == '12.566370614359172464'\nassert solution('4 1 -1') == '21.991148575128551812'"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 0 0\n0 1\n-1 2''') == '12.566370614359172464'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"48\\n\") == \"9 42\"\nassert solution(\"6\\n\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '6 6'\nassert solution('48') == '9 42'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('48\\n') == '9 42'\nassert solution('6\\n') == '6 6'\nprint('All tests passed')"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('42') == '6 6'\nassert solution('48') == '9 42'"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == (\"\", \"\")\nassert solution(\"3\") == (\"9\", \"42\")\nassert solution(\"22\") == (\"8\", \"42\")\nassert solution(\"7\") == (\"6\", \"42\")\nassert solution(\"3\") == (\"9\", \"42\")\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n5''') == '1 1'\nassert solution('''30\n5''') == '1 1'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n42\n42\n''') == '42 42'\nprint('solution() finished successfully!')"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1 1\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"8\") == \"1 2 3 4 5 6 7 8\""
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1 1'\nassert solution('3') == '3 2'\nassert solution('6') == '6 6'\nassert solution('99') == '99 99'"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '6 6'\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"10\") == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n(())\") == \"Yes\"\nassert solution(\"3\\n(())\") == \"No\"\nassert solution(\"2\\n((()))\") == \"Yes\"\nassert solution(\"2\\n((()))\") == \"Yes\"\nassert solution(\"10\\n)))))(((((\") == \"No\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(open(0).read()) == 'Yes'\nassert solution(open(1).read()) == 'No'\nassert solution(open(2).read()) == 'Yes'\nassert solution(open(3).read()) == 'No'\nassert solution(open(4).read()) == 'Yes'\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n(''') == 'Yes'\nassert solution('''2\n())\n\nassert solution('''1\n()\n\nassert solution('''2\n())\n\nassert solution('''3\n(()"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n))))))\n\n''') == \"Yes\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"10\") == \"Yes\"\nprint(solution(input()))\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"Yes\"\nassert solution(\"\") == \"Yes\"\nassert solution(\"(\") == \"No\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == \"Yes\"\nassert solution('3') == \"No\"\nassert solution('10') == \"Yes\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('10') == 'No'\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == 'Yes'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50 50 100\") == \"1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\"\nassert solution(\"2 50\\n50 50\") == \"2\"\nassert solution(\"2 50\\n50 50\") == \"0\"\nassert solution(\"3 50\\n50 50 100\") == \"5\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 50\\n50 50 100\\n\") == '1'\nassert solution(\"2 50\\n50 50\\n\") == '-1'\nassert solution(\"3 100\\n50 50 100\\n\") == '5'\n\n\"\"\""
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 50\\n50 50\\n') == '1'\nassert solution('2 50\\n50 50\\n') == '5'\nassert solution('3 100\\n50 50 100\\n') == '2'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 50\n50 50 100''') == '5'\nassert solution('''2 50\n50 50''') == '2'\nassert solution('''3 50\n50 50 100''') == '-1'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 50\\n50 50\\n') == '1'\nassert solution('2 50\\n50 50\\n') == '5'\nassert solution('2 50\\n50 50') == '2'\nassert solution('3 100\\n50 50 100\\n') == '5'\nassert solution('3 100\\n50 50 100\\n') == '2'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 50\n50 50 100\n''') == '1'\nassert solution('''\n2 50\n50 50\n''') == '5'\nassert solution('''\n3 100\n50 50 100\n''') == '2'\nassert solution('''\n2 50\n50 50\n''') == '0'\nassert solution('''\n''') == '0'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 100\n50 50 100\n''') == '5'\nassert solution('''\n2 50\n50 50\n''') == '-1'\nassert solution('''\n1 50\n50\n''') == '1'"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 50\\n50 50 100') == '1'\nassert solution('2 50\\n50 50') == '2'\nassert solution('3 50\\n50 50 100') == '5'\n\nassert solution('1 100\\n50 50 100') == '-1'\nassert solution('2 100\\n50 50 100') == '0'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([50,50,100]) == 1\nassert solution([50,50,50,100]) == 2\nassert solution([50,50,50,100,50,50,100]) == 5\nassert solution([50,50,50,100,50,50,100,50,50,100]) == 6\n\n\"\"\""
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"5\"\n\nassert solution(input_big) == \"2\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 6 8\\n') == '2'\nassert solution('5\\n2 3 4 9 12\\n') == '4'\nassert solution('4\\n5 7 2 9\\n') == '1'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('4') == '1'\nassert solution('6') == '2'\nassert solution('1') == '1'\n\n----\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 6 8') == '2'\nassert solution('5 7 2 9') == '4'\nassert solution('4 5 7 2 9') == '1'\n\"\"\""
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2 6 8\\n') == '2'\nassert solution('5\\n2 3 4 9 12\\n') == '4'\nassert solution('4\\n5 7 2 9\\n') == '1'\n\n\"\"\"\n\nfrom typing import List, Set\nfrom functools import reduce\nfrom operator import mul\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n\") == \"1\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\"\nassert solution(\"6\\n4 5 7 2 9 12\\n\") == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '1'\nassert solution('4') == '4'"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 16\\n7 17\\n\") == \"5\"\nassert solution(\"3\\n17 18\\n15 24\\n\") == \"6\"\nassert solution(\"2\\n10 16\\n7 17\\n\") == \"-1\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1\n2''') == '1'\nassert solution('''5\n45 105\n75 40\n165 175\n33 30\n90 108''') == '5'\nassert solution('''3\n17 18\n15 24\n12 15''') == '6'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '-1'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '6'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n17 18\n15 24\n12 15''') == '6'\nassert solution('''5\n90 108\n45 105\n75 40\n165 175\n33 30''') == '5'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n17 18\n15 24\n12 15\n''') == '6'\nassert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '5'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n17 18\\n15 24\\n') == '6'\nassert solution('2\\n10 16\\n7 17\\n') == '-1'\nassert solution('3\\n90 108\\n45 105\\n75 40\\n') == '5'\nassert solution('4\\n1 2\\n3 4\\n5 6\\n') == '1'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n17 18\n15 24\n12 15\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2\n10 16\n7 17\n\"\"\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"5\") == \"5\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n17 18\n15 24\n12 15\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n\"\"\") == \"5\"\nassert solution(\"\"\"\n0\n\"\"\") == \"-1\""
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bb') == '1 3'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"bab\\nbb\") == \"0\"\nassert solution(\"bbbb\\naaa\") == \"0\"\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"bbbb\"\n) == \"0\"\n\nassert solution(\n    \"aaa\"\n) == \"1 0\"\n\nassert solution(\n    \"bbab\"\n) == \"2 1 0\""
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"1 0\"\nassert solution(\"bbbb\") == \"0\"\nassert solution(\"aaa\") == \"1 3\"\nassert solution(\"bbbb\") == \"1 3\"\nassert solution(\"babbb\") == \"0\"\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"0\"\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('bb') == 1\nassert solution('aaa') == 2\nassert solution('bbbb') == 3\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"bbbb\\na\") == \"0\"\nassert solution(\"aab\\nb\") == \"2\""
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bbbb') == '0'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bab\") == \"2 0 1 3\"\nassert solution(\"bbbb\") == \"0\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"POSSIBLE\"\nassert solution(\"3\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1') == 'POSSIBLE'\nassert solution('3\\n1 2\\n3 2') == 'IMPOSSIBLE'\nassert solution('5\\n1 2\\n3 4 5') == 'IMPOSSIBLE'\n'''"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('4\\n1 1\\n4 3 2') == 'IMPOSSIBLE'\nassert solution('10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"POSSIBLE\"\nassert solution(\"1\") == \"IMPOSSIBLE\"\nassert solution(\"3\") == \"POSSIBLE\"\n\n\"\"\""
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'POSSIBLE'\nassert solution('3 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"POSSIBLE\"\nassert solution(\"6\") == \"IMPOSSIBLE\"\n\n'''\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"POSSIBLE\"\nassert solution(\"1\") == \"IMPOSSIBLE\"\nassert solution(\"4\") == \"POSSIBLE\"\n\"\"\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'POSSIBLE'\nassert solution('3 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'IMPOSSIBLE'\nassert solution('100') == 'IMPOSSIBLE'\nassert solution('10') == 'POSSIBLE'\nassert solution('11') == 'POSSIBLE'\nassert solution('12') == 'POSSIBLE'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1000000007') == '2'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1000000007\") == \"4\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"5 6\") == \"1\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1000000007\n''') == '2'\nassert solution('''\n3 6\n''') == '3'\nassert solution('''\n10 3\n''') == '4'\nassert solution('''\n10 2\n''') == '9'\n'''\n\nimport sys\nsys.path.append('..')\n\nimport utils\n\nprint(utils.solution('''\n2 1000000007\n'''))\nprint(utils.solution('''\n3 6\n'''))\nprint(utils.solution('''\n10 3\n'''))\nprint(utils.solution('''\n10 2\n'''))"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1000000007\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"3\"\nassert solution(\"1000000000000\") == \"1\"\nassert solution(\"12000000000000\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1000000007\") == \"3\"\nassert solution(\"1 20000000007\") == \"4\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"12 15\") == \"6\""
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 10\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n100') == '4'\nassert solution('2\\n100') == '4'\nassert solution('3\\n100') == '5'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"2\"\nassert solution(\"2 2\") == \"4\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2 3 3\\n+-+\\n\") == \"7\"\nassert solution(\n    \"4 1 5 1\\n-\\n\") == \"999999228\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 3 3\n+-+''') == '7'\nassert solution('''4 1 5 1\n-''') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '7'\n\n\"\"\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 3\") == \"7\"\nassert solution(\"4 1 5 1\") == \"999999228\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2 3 3\",\n    \"+-+\"\n) == \"7\"\n\nassert solution(\n    \"4 1 5 1\",\n    \"-\"\n) == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1 5 1') == '999999228'\nassert solution('2 2 3 3') == '7'"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 2, 3, 3]) == 7\nassert solution([4, 1, 5, 1]) == 999999228"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 1 5 1\n-''') == \"999999228\"\nassert solution('''2 2 3 3\n+''') == \"7\""
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3 3') == '7'\nassert solution('4 1 5 1') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 3 3') == '7'\nassert solution('4 1 5 1') == '999999228'"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '4'\nassert solution(input) == '2'\nassert solution(input) == '0'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\", \"1st example\"\nassert solution(\"1 2 3 1\") == \"2\", \"2nd example\"\nassert solution(\"10 2 1 7\") == \"0\", \"3rd example\"\nprint('Awesome, let\\'s see how fast your code is!')\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2\nassert solution('10 2 1 7') == 0\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1 1 2\n''') == '4'\nassert solution('''1 2 3 1\n''') == '2'\nassert solution('''10 2 1 7\n''') == '0'\nassert solution('''20 2 1 7\n''') == '0'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1 1 2''') == '4'\nassert solution('''1 2 3 1''') == '2'\nassert solution('''10 2 1 7''') == '0'\nassert solution('''1 2 1 7''') == '0'\nassert solution('''1 2 3 1''') == '0'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2\nassert solution('10 2 1 7') == 0"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().strip()\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 1\n2 3''') == '6'\nassert solution('''3 5\n1 2\n3 4\n5 6''') == '24'\nassert solution('''8 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '172'\nassert solution('''3 10\n3 9\n2 6\n5 7\n6 8\n4 1\n9 2\n4 3\n6 4\n1 5\n1 6''') == '107'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '6'\nassert solution('3 2') == '0'"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '6'\nassert solution('0 4') == '6'"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '6'\nassert solution('10 3') == '4917'\nassert solution('10 5') == '19217'\nassert solution('10 5') == '3792'"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '6'\nassert solution('5 5') == '49'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n3\n4 5''') == '6'\nassert solution('''1 1\n1\n0 0''') == '4'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '6'\nassert solution('2 1') == '5'\nassert solution('3 1') == '4'\nassert solution('4 1') == '4'\nassert solution('5 1') == '3'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '6'\nassert solution('1 5') == '6'\nassert solution('100 1000') == '100000'"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '6'\nassert solution('10 10') == '362880'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2''') == '6'\nassert solution('''1 1''') == '6'\nassert solution('''4 4''') == '12'\nassert solution('''5 2''') == '4'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 4 5 6\") == \"0\"\nassert solution(\"6 8 10 12\") == \"0\"\nassert solution(\"5 7 9 11\") == \"4\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == '2'\nassert solution(\"1 2\") == '1'\nassert solution(\"10\") == '40'\n\n'''"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2\n''') == '2'\n\nassert solution('''\n5\n1 2\n''') == '1'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n''') == '2'\n\nassert solution('''\n2\n1 2\n''') == '1'\n\nassert solution('''\n3\n1 2\n2 3\n''') == '2'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('1') == '0'\nassert solution('3') == '6'\nassert solution('5') == '7'"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\""
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 2\n''') == \"2\"\nassert solution('''\n3\n1 2\n1 3\n''') == \"4\"\n'''\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '18'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 2 0\n3 0 1\n''') == \"2\"\nassert solution('''\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == \"18\"\nassert solution('''\n20\n0 0 0 5 0 0 0 4 0 0 11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1\\n') == '2'\nassert solution('3\\n0 2 0\\n1 0 3\\n') == '4'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('11') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0 2 0\n3 0 1\n''') == \"4\"\nassert solution('''\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == \"18\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n0 2 0\n3 0 1\n''') == '2'\nassert solution('''3\n0 2 0\n1 0 3\n''') == '4'\nassert solution('''10\n0 1 2 0 3 0 4 5 0 0\n2 0 0 0 0 0 0 0 0 0\n''') == '15'\nassert solution('''20\n0 0 0 0 0 0 0 0 0 0\n1 0 1 1 0 1 0 1 1 1\n2 0 0 0 0 0 0 0 0 0\n''') == '11'\nassert solution('''18\n0 0 0 0 0 0 0 0 0 0\n1 0 1 1 1 1 1 1 1 1\n2 0 0 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0 0 0\n5 0 0 0 0 0 0 0 0 0\n6 0 0 0 0 0 0 0 0 0\n7 0 0 0 0 0 0 0 0 0\n8 0 0 0 0 0 0 0 0 0\n9 0 0 0 0 0 0 0 0 0\n10 0 0 0 0 0 0 0 0 0\n''') == '9'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"11\") == \"18\"\nassert solution(\"0 0 0 5 0 0 0 4 0 0 11\") == \"18\"\nassert solution(\"0 0 0 5 0 0 0 4 0 0 11\") == \"16\"\nassert solution(\"0 2 0\") == \"3\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n0 2 0\\n3 0 1\\n') == '2'\nassert solution('7\\n0 2 0\\n1 0 3\\n5 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n') == '18'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 10\\ncode*s\\ncodeforces') == 'YES'\nassert solution('1 1\\nv\\nk') == 'NO'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 10') == 'YES'\nassert solution('1 1') == 'NO'\nassert solution('9 6') == 'NO'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    input\n) == \"YES\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 10\ncodeforces\ncodeforces\ncodeforces\ncodeforces\ncodeforces\n''') == 'YES'\nassert solution('''5 5\nvkcup\nvkcup\nvkcup\nvkcup\nvkcup\n''') == 'YES'\nassert solution('''1 1\nv\nk\n''') == 'NO'\nassert solution('''9 6\ngfgfgf\ngfgfgf\n''') == 'NO'"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7\\nvk*cup\\nvkcup\\n') == 'YES'\nassert solution('6 5\\nvk*cup\\nvkcup\\n') == 'YES'\nassert solution('9 6\\ngfgf*gfgf\\ngfgfgf\\n') == 'NO'"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"YES\""
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 10\ncode*s\ncodeforces\n\n''') == 'YES'\n\nassert solution('''\n6 5\nvk*cup\nvkcup\n\n''') == 'YES'\n\nassert solution('''\n1 1\nv\nk\n\n''') == 'NO'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 10\\nvk*cup\\ngfgf*gfgf') == 'YES'\nassert solution('6 5\\nvk\\ngfgf') == 'NO'\nassert solution('1 1\\nv\\nk') == 'NO'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nab*a\n\nab\n''') == 'YES'\nassert solution('''\n2\nab*a\nab\n\nab\n''') == 'NO'\nassert solution('''\n2\nab*a\na*b\n\nab\n''') == 'NO'\nassert solution('''\n1\na\n\na\n''') == 'YES'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 10\n    code*s\n    codeforces\n    ''') == 'YES'\n\nassert solution('''6 5\n    vk*cup\n    vkcup\n    ''') == 'YES'\n\nassert solution('''1 1\n    v\n    k\n    ''') == 'NO'\n\nassert solution('''9 6\n    gfgf*gfgf\n    gfgfgf\n    ''') == 'NO'"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n0.1 0.2 0.3 0.8\n''') == '0.800000000000'\nassert solution('''2\n0.1 0.2\n''') == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0.1 0.2 0.3\") == \"0.260000000000\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'\n\n\"\"\"\n\nn = int(input())\np = [float(input()) for _ in range(n)]\n\nt = 0\nfor i in range(n):\n    t += p[i]\n\nprint(round(t / n,9))"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0.1 0.2\") == '0.26'\nassert solution(\"4\\n0.1 0.2 0.3 0.8\") == '0.800000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n0.1 0.2\n''') == '0.260000000000'\nassert solution('''4\n0.1 0.2 0.3 0.8\n''') == '0.800000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0.260000000000'\nassert solution('10\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8\\n') == '0.800000000000'\nassert solution('2\\n0.1 0.2\\n') == '0.260000000000'\n\n\n\u0414\u0430\u043d\u043e \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430. \u041d\u0430\u0439\u0442\u0438 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430, \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0433\u043e \u044d\u0442\u0438 \u0434\u0432\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u0430, \u0442\u0430\u043a \u0447\u0442\u043e\u0431\u044b \u0441\u0443\u043c\u043c\u0430 \u0431\u043b\u043e\u043a\u0447\u0435\u0439\u043d\u043e\u0432 \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0430 k.\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u041d\u0430 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0447\u0438\u0441\u043b\u043e \u0431\u0430\u0439\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430). \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0434\u0432\u0443\u0445 \u0441\u0442\u0440\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043e\u0442 1 \u0434\u043e 1024 \u2014 \u043a\u043e\u0434 \u0442\u0435\u043a\u0441\u0442\u0430 \u0434\u043b\u044f \u0431\u0430\u0439\u0442\u043e\u0432 \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u043e\u043c 1 \u0434\u043e 1024. \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0442\u0440\u0435\u0445 \u0441\u0442\u0440\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043e\u0442 0 \u0434\u043e 9 \u2014 \u043a\u043e\u0434 \u0442\u0435\u043a\u0441\u0442\u0430 \u0434\u043b\u044f \u0431\u0430\u0439\u0442\u043e\u0432 \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u043e\u043c 1 \u0434\u043e 9. \u0427\u0438\u0441\u043b\u043e k \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0437 \u0446\u0435\u043b\u044b\u0445 \u0431\u0430\u0439\u0442\u043e\u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0434\u0432\u0443\u043c\u044f \u0446\u0438\u0444\u0440\u0430\u043c\u0438 \u0441 \u043e\u0434\u043d\u043e\u0439 \u0437\u043d\u0430\u043a\u043e\u043c \u0438\u0437 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u043e\u0442 0 \u0434\u043e 255. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0431\u0430\u0439\u0442\u0430 \u0432 \u043e\u0431\u043e\u0438\u0445 \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u043e\u043c\u0435\u0440 \u0431\u0430\u0439\u0442\u0430 (\u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438) \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0435\u043c\u0443 \u043a\u043e\u0434.\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u2014 \u043e\u0434\u043d\u043e \u0438\u0437 \u043c\u043e\u043c\u0435\u043d\u0442\u043e\u0432, \u043a\u043e\u0433\u0434\u0430 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430\u044f \u0441\u0442\u043e\u0440\u043e\u043d\u0430 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 k. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0441 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0432\u043e\u0434\u0430\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e t, \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0435\u0435 \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u043c\u0443.\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0435\u0442\u044b\u0440\u0435 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 n, m, p, q \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u0439\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430) \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u0439\u0442\u043e\u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438.\n\n\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e k.\n\n\u0412 \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0441 \u043e\u0434\u043d\u043e\u0439 \u0437\u043d\u0430\u043a\u043e\u043c \u0438\u0437 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u043e\u0442 0 \u0434\u043e 9.\n\n\u0412 \u043f\u044f\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n, \u0440\u0430\u0432\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0431\u0430\u0439\u0442\u043e\u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0434\u043b\u044f \u0431\u0430\u0439\u0442\u043e\u0432 \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u043e\u043c 1 \u0434\u043e n.\n\n\u0412 \u0448\u0435\u0441\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e m, \u0440\u0430\u0432\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0431\u0430\u0439\u0442\u043e\u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438 \u0434\u043b\u044f \u0431\u0430\u0439\u0442\u043e\u0432 \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u043e\u043c 1 \u0434\u043e m.\n\n\u0412 \u0441\u0435\u0434\u044c\u043c\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0446\u0435"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n0.1') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8\\n') == '0.800000000000'\nassert solution('2\\n0.1 0.2\\n') == '0.260000000000'\nprint('All tests passed')"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 10 1 2 5''') == '5.0000000000'\nassert solution('''3 6 1 2 1''') == '4.7142857143'\nassert solution('''3 3 3 3 3''') == '3.3333333333'\nassert solution('''10 20 40 60 80''') == '10.0000000000'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 10 1 2 5\\n\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\\n\") == \"4.7142857143\"\nassert solution(\"4 7 1 4 5\\n\") == \"4.7142857143\"\nassert solution(\"3 5 1 3 5\\n\") == \"5.0000000000\""
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10 1 2 5') == '5.0'\nassert solution('3 6 1 2 1') == '4.71428571429'"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 10 1 2 5\\n\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\\n\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '5 10 1 2 5'\n) == '5.0000000000'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 6 1 2 1\") == \"4.7142857143\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0.250\"\nassert solution(\"4\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n0.000 0.500 0.750 1.000 2.000 3.000\n\"\"\") == \"0.250\"\nassert solution(\"\"\"\n3\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\n\"\"\") == \"0.279\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0.250'\nassert solution('5') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279'\n\n\n\"\"\""
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"0.125\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n0.000 0.500 0.750 1.000 2.000 3.000''') == '0.250'\nassert solution('''3\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896''') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '0.250'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == '0.250'\nassert solution(\"3\") == '0.279'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0.250'\nassert solution('5') == '0.279'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"18\"\nassert solution(\"0 1\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\n1 5\n''') == '18'\nassert solution('''\n1 0\n0 1\n''') == '8'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"18\"\nassert solution(\"0 1\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n1 2\n3 4\n\nOutput\n4\n'''\n) == \"4\"\nassert solution(\n    '''\n0 1\n0 0\n\nOutput\n8\n'''\n) == \"8\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '18'\nassert solution('0 1') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 5\n5 2\n\"\"\") == \"18\"\nassert solution(\"\"\"\n0 1\n0 0\n\"\"\") == \"8\"\nassert solution(\"\"\"\n0 0\n0 0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n0 1\n5 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    5 2\n    0 1\n''') == '8'\nassert solution('''\n    1 5\n    5 2\n''') == '18'\nassert solution('''\n    1 0\n    0 0\n''') == '8'\nassert solution('''\n    1 1\n    1 1\n''') == '1'\nassert solution('''\n    -10 -10\n    10 10\n''') == '100'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == '18'\nassert solution('0 1') == '8'\nprint(solution(input()))\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 5\n5 2\n''') == '18', solution\n\nassert solution('''\n0 1\n0 0\n''') == '8', solution\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5\\n5 2\\n') == \"18\"\nassert solution('0 1\\n0 0\\n') == \"8\""
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n4''') == '4'\nassert solution('''10\n1''') == '10'\nassert solution('''10\n2''') == '100'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n10\n4\n''') == '244'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n''') == '4'\nassert solution('''\n10\n''') == '244'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"244\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\nassert solution('10') == '244'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n''') == '10'\nassert solution('''\n10\n''') == '244'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\nassert solution('10') == '244'"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n2\n''') == '2'\n\nassert solution('''10\n10\n''') == '244'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\"\nprint(solution(input()))\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '2'\n\n\n---\n\n\nThe first version of the solution was to find all the elements that are not common to any two consecutive subsegments. But this approach is too slow.\n\nThe next step was to find the subsegment with the minimum number of elements, which is:\n\ntotal_size = sum(elements)\nmin_subsegment_size = total_size // 3\n\nThen, we can divide the total_size by 3 and find the first size that is bigger than min_subsegment_size and sum all the elements smaller than that.\n\nFrom the previous step we can calculate the total number of elements that we can remove from the array, which is:\n\ntotal_size_to_remove = 3 * (total_size // 3) - total_size\n\n\"\"\"\n\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '2'\n\n'''"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 1 4 9\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"1\"\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2 2\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('4 1 4 9') == '2'\nassert solution('5 1 4 1 4 9') == '2'\nassert solution('5 5 5 5 5 5 5 5 5 5 5') == '1'\nassert solution
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1 2 2\\n') == '2'\nassert solution('5\\n1 4 1 4 9\\n') == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n1 2 3\n''') == '0'\nassert solution('''\n4\n1 1 2 2\n''') == '2'\nassert solution('''\n5\n1 4 1 4 9\n''') == '2'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0'\nassert solution('''\n4\n1 4 1 4 9\n''') == '2'\nassert solution('''\n5\n1 4 1 4 9\n''') == '2'\nassert solution('''\n5\n1 2 3 4 9\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '3'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0'\n\nassert solution('''\n4\n1 1 2 2\n''') == '2'\n\nassert solution('''\n5\n1 4 1 4 9\n''') == '2'\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaabccc') == 'YES', 'Expected: YES'\nassert solution('bbacc') == 'NO', 'Expected: NO'\nassert solution('aabc') == 'YES', 'Expected: YES'\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"aaabccc\"\n    ) == \"YES\"\n\nassert solution(\n    \"bbacc\"\n    ) == \"NO\"\n\nassert solution(\n    \"aabc\"\n    ) == \"YES\"\n\nassert solution(\n    \"aabbccdd\"\n    ) == \"NO\"\n\nassert solution(\n    \"aabbccddaa\"\n    ) == \"NO\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\n''') == \"2\"\n\nassert solution('''\n3\n1 2 3\n''') == \"2\"\n\nassert solution('''\n4\n1 2 3 4\n''') == \"4\""
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n4 1 2 5 3\n''') == '2'\nassert solution('''4\n4 1 3 2\n''') == '2'\nassert solution('''5\n3 1 2 4 5\n''') == '3'\nassert solution('''4\n4 1 3 2\n''') == '3'\nassert solution('''7\n4 1 3 2 6 8\n''') == '5'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n4 1 2 5 3\n\n''') == '2'\nassert solution('''\n4\n4 1 3 2\n\n''') == '2'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\nassert solution(\"4 1 2 5 3\") == '2'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n4 1 2 5 3\n''') == '2'\nassert solution('''4\n4 1 3 2\n''') == '2'\nassert solution('''10\n4 7 5 2 6 8 9 3 1\n''') == '9'"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n4 1 2 5 3\n''') == '2'\n\nassert solution('''\n4\n4 1 3 2\n''') == '2'\n\nassert solution('''\n4\n4 1 3 5 2\n''') == '2'\n\nassert solution('''\n10\n4 1 3 2 4 1 2 5 6 7 3 8 8 1 9 9 1\n''') == '10'"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"4\\n3 2 1 4\") == \"2\"\nassert solution(\"4\\n3 2 2 1\") == \"4\"\nassert solution(\"4\\n1 1 1 1\") == \"3\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '2'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '2'\nassert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '3.500000000000'\nassert solution('6 3') == '4.958333333333'\nassert solution('2 2') == '1.750000000000'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1') == '3.500000000000'\nassert solution('6 3') == '4.958333333333'\nassert solution('2 2') == '1.750000000000'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 1\n''') == '3.500000000000'\n\nassert solution('''6 3\n''') == '4.958333333333'\n\nassert solution('''2 2\n''') == '1.750000000000'\n\nassert solution('''3 1\n''') == '1'\n\nassert solution('''5 3\n''') == '2'"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1') == '3.500000000000'\nassert solution('6 3') == '4.958333333333'\nassert solution('2 2') == '1.750000000000'"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '3.500000000000'\n\nassert abs(solution(input_) - 5.5) <= 10 ** -4\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1') == '3.500000000000'\nassert solution('5 3') == '4.958333333333'\nassert solution('2 2') == '1.750000000000'"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 1\\n') == '3.500000000000'\nassert solution('6 3\\n') == '4.958333333333'\nassert solution('2 2\\n') == '1.750000000000'"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 1\n6 3\n2 2\n3 1''') == '4.95833333333'\nassert solution('''3 1\n3 3\n2 2\n3 1''') == '3.750000000000'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '3.500000000000'\nassert solution('6 1') == '4.958333333333'\nassert solution('2 2') == '1.750000000000'"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2\n>->\n3\n<->\n\n4\n<->\n3\n<-\n\n5\n<-\n2\n<-\n1\n<->\n\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n2\n<-\n3\n<->\n\n4\n<->\n3\n<-\n\n5\n<->\n2\n<-\n1\n<->\n\n\"\"\"\n) == \"5\""
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n4\\n-><-') == '3'\nassert solution('2\\n3\\n<->') == '5'\nassert solution('3\\n2\\n<>') == '0'\nassert solution('4\\n5\\n<-') == '3'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"0\"\n\nsolution(\"5\")"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '5'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n5\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '3'"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"3\""
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n\n''') == '3'\n\nassert solution('''\n1\n>->\n\n2\n<--\n\n3\n>-<\n\n''') == '4'"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n    ''') == '3'\n\nassert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '0'\n\nassert solution('''\n3\n<-\n2\n>>-\n''') == '0'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n-><-\n5\n>>>>\n3\n<--\n2\n<>\n\n''') == '3'\n\nassert solution('''\n4\n>>>>\n5\n>>><\n3\n<--\n2\n<>\n\n''') == '3'\n\nassert solution('''\n3\n<-\n4\n<->\n3\n\n''') == '1'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"16\", \"s\"\nassert solution(\"4\") == \"9 9 10\", \"s\"\nassert solution(\"3\") == \"202\", \"s\"\n\n\"\"\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n1 100\n100 1\n\n\"\"\") == \"16\"\n\nassert solution(\"\"\"\n3\n1 100\n100 1\n100 1\n100 1\n\n\"\"\") == \"202\"\n\nassert solution(\"\"\"\n4\n4 5\n4 5\n4 5\n4 10\n\n\"\"\") == \"9 9 10\""
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n4 5\n4 5\n4 10\n\"\"\") == \"\"\"16\n9 9 10 \n\"\"\"\nassert solution(\"\"\"3\n4 5\n4 5\n4 10\n\"\"\") == \"\"\"202\n101 101 101 101 \n\"\"\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    3\n    4 5\n    4 5\n    4 10\n\"\"\") == \"16\"\nassert solution(\"\"\"\n    4\n    1 100\n    100 1\n    1 100\n    100 1\n\"\"\") == \"202\"\nassert solution(\"\"\"\n    3\n    1 1\n    100 100\n    1 1\n\"\"\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5\\n4 5\") == \"16\\n9 9 10\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\"\nassert solution(\"3\\n4 5\\n4 5\") == -1"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"202\"\nassert solution() == \"101 101 101 101\""
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\nassert solution('3') == '202'\nassert solution('4') == '101 101 101 101'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '202'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\nassert solution('3') == '202'\nassert solution('3') == '-1'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '202'\nassert solution('1 1') == '101 101 101 101 \nassert solution('3') == '9 9 10 \n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 2 3 2 2'\nassert solution('3') == '0 1 3'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 1 1 1 1\n''') == '1 2 2 \nassert solution('''3\n1 2 3\n''') == '0 2 '\nassert solution('''5\n1 2 3 2 2\n''') == '0 1 3 '\nassert solution('''1\n1\n''') == '0 '\nassert solution('''2\n1\n''') == '0 1 '\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 1 1 1 1''') == '1 2 2'\nassert solution('''3\n1 2 3''') == '0 2'\nassert solution('''5\n1 2 3 2 2''') == '0 1 3'"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 1 1 1 1''') == '1 2 2'\nassert solution('''3\n1 2 3''') == '0 1 3'\nassert solution('''5\n1 2 3 2 2''') == '0 1 3'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 1 1 1\\n') == '1 2 2'\nassert solution('3\\n1 2 3\\n') == '0 1 3'"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1 1 1 1') == '1 2 2'\nassert solution('3\\n1 2 3') == '0 1 3'\nprint('Done!')"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 1 1 1 1\n''') == '1 2 2'\nassert solution('''\n3\n1 2 3\n''') == '0 2'\nassert solution('''\n5\n1 2 3 2 2\n''') == '0 1 3'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3\n''') == '0 2'\nassert solution('''5\n1 2 3 2 2\n''') == '0 1 3'\nassert solution('''5\n1 2 3 2 3\n''') == '0 1 3'"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '0 2'"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\"\nassert solution(\"11100\") == \"01\"\nassert solution(\"10110\") == \"01\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('101101') == '110110'\nassert solution('110') == '01'\nassert solution('10') == '0'\nassert solution('10010110') == '01100011'\nassert solution('100011') == '01'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"110110\"\nassert solution(input()) == \"01100011\"\nassert solution(input()) == \"10\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"110\") == \"01100011\"\nassert solution(\"10\") == \"01\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '101101'\n) == '110110'\nassert solution(\n    '10010110'\n) == '01100011'\nassert solution(\n    '10'\n) == '01'\nassert solution(\n    ''\n) == ''"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10010110\") == \"01100011\", \"Test 1\"\nassert solution(\"100011\") == \"01\", \"Test 2\"\nassert solution(\"100\") == \"0\", \"Test 3\""
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10011001\"\nassert solution(input()) == \"11000111\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '1'\nassert solution('''\n3 4 1\n1 0 0 1\n0 1 1 0\n1 0 0 1\n\n''') == '0'"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5 2\") == \"1\"\nassert solution(\"3 4 1\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\nassert solution('''3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 0\n\nOutput\n0\n''') == '0'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 2\") == \"1\"\nassert solution(\"3 4 1\") == \"0\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"3 4 1\") == \"0\"\nassert solution(\"5 5 2\") == \"1\""
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '1'\nassert solution('''3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 1\n\nOutput\n0\n''') == '-1'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '1'\n\nassert solution('''\n3 4 1\n1 0 0 1\n0 1 1 0\n1 0 0 1\n\n''') == '0'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 1\n\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 4 1\n1 0 0 0\n0 1 1 1\n1 1 1 0\n\n\"\"\") == \"-1\""
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 1\n\n''') == '1', 'First example'\nassert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n\n''') == '1', 'Second example'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '0'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n\"\"\") == \"\"\"2 2 3 1 2 \n\"\"\", \"Test #1\"\nassert solution(\"\"\"\n1\n0 1\n\n\"\"\") == \"\"\"1 1\n\"\"\", \"Test #2\"\n\nassert solution(\"\"\"\n3\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n\"\"\") == \"\"\"2 2 3 1 2 \n\"\"\", \"Test #3\"\n\nassert solution(\"\"\"\n10\n700001 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9\n700002 0 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9\n700003 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9\n700004 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9\n700005 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9\n700006 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9\n700007 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700008 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700009 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700010 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700011 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700012 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700013 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700014 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700015 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700016 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700017 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700018 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700019 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n700020 999997 2 5 3 2 3 3 6 7 8 9 8 9 8 9 8 9 9 9 9\n\"\"\") == \"\"\"2 2 3 1 2 \n\"\"\", \"Test #4\"\n\nassert solution(\"\"\"\n8\n9999999999 7 9 8 9 6 0 9 2 5 7 5 7 5 9 6 7 6 6\n8 7 4 8 5 6 7 8 9 0 2 1 5 1 3 2 2 3 3 3 3 2\n3 3 2 2 3 4 3 3 1 1 4 5 4 5 4 5 5 1 1 2 2 3\n2 3 2 2 3 3 3 4 4 5 4 5 4 5 4 4 3 2 2 2 3\n3 3 1 1 2 3 3 3 3 2 3 1 1 3 2 2 1 2 3 1 2\n2 1 2 2 3 2 3 1 3 3 2 3 2 3 2 1 1 2 2 3 2 1\n3 2 1 3 2 3 1 3 3 2 2 2 2 2 2 3 2 2 1 1 1 3\n1 1 2 1 1 1 2 2 2 2 3 1 1 2 2 2 1 3 1 1 1 2\n2 1 1 2 1 3 2 1 2 1 1 3 1 2 1 3 2 1 2 1 1 2\n1 1 1 2 1 1 3 1 2 1 3 1 2 1 2 2 1 1 1 1 2 1 1\n1 2 1 2 1 1 1 1 1 1 3 1 1 2 1 1 1 2 1 1 1 1 2\n1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1\n1 2 1 1 1 3 2 1 1 1 2 2 1 1 1 3 1 1 1 1 3 1 2\n1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1\n1 2 1 1 1 3 2 1 1 1 2 1 1 1 1 3 1 1 1 1 3 1 2\n1 1 1 1 1 3 2 1 1 1 3 1 1 1 1 3 1 1 1 1 3 1 2\n1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1\n1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 2 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 2 1 1 1 2 1 1 1 1 1 2 1 1 1 3 1 1 1 1 2 1 2\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2 2 3 1 2\"\nassert solution(\"3\") == \"999 79999 7998 9997\""
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n2 1 2 3 4 5 6 7 8 9 10\n5\n1 3 5 7 9 2 4 6 8 10\n2 2 3 3 4 5 5 5 5 5\n3 4 4 5 4 4 4 4 5\n4 4 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5\n''') == '2 1 2 3 4 5 6 7 8 9 10\\n2 2 3 3 4 4 4 4 5\\n3 4 4 5 4 4 4 4 5\\n4 4 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5\\n', 'fizz buzz'\nassert solution('''\n10\n0 99999999 9997000\n99999999 9997000 9997000\n9997000 9997000 9997000\n9990999 9997000 9997000\n9989000 9997000 9997000\n9987000 9997000 9997000\n9985000 9997000 9997000\n9983000 9997000 9997000\n9981000 9997000 9997000\n9979000 9997000 9997000\n''') == '9999 9997000 9997000\\n9999 9997000 9997000\\n9987000 9997000 9997000\\n9985000 9997000 9997000\\n9983000 9997000 9997000\\n9981000 9997000 9997000\\n9979000 9997000 9997000\\n9977000 9997000 9997000\\n9975000 9997000 9997000\\n9973000 9997000 9997000\\n9971000 9997000 9997000\\n9969000 9997000 9997000\\n9967000 9997000 9997000\\n9965000 9997000 9997000\\n9963000 9997000 9997000\\n9961000 9997000 9997000\\n9959000 9997000 9997000\\n9957000 9997000 9997000\\n9955000 9997000 9997000\\n9953000 9997000 9997000\\n9951000 9997000 9997000\\n9949000 9997000 9997000\\n9947000 9997000 9997000\\n9945000 9997000 9997000\\n9943000 9997000 9997000\\n9941000 9997000 9997000\\n9939000 9997000 9997000\\n9937000 9997000 9997000\\n9935000 9997000 9997000\\n9933000 9997000 9997000\\n9931000 9997000 9997000\\n9929000 9997000 9997000\\n9927000 9997000 9997000\\n9925000 9997000 9997000\\n9923000 9997000 9997000\\n9921000 9997000 9997000\\n9919000 9997000 9997000\\n9917000 9997000 9997000\\n9915000 9997000 9997000\\n9913000 9997000 9997000\\n9911000 9997000 9997000\\n9909000 9997000 9997000\\n9907000 9997000 9997000\\n9905000 9997000 9997000\\n9903000 9997000 9997000\\n9901000 9997000 9997000\\n9900100 9997000 9997000\\n''') == '9987000 9997000 9997000\\n9985000 9997000 9997000\\n9983000 9997000 9997000\\n9981000 9997000 9997000\\n9979000 9997000 9997000\\n9977000 9997000 9997000\\n9975000 9997000 9997000\\n9973000 9997000 9997000\\n9971000 9997000 9997000\\n9969000 9997000 9997000\\n9967000 9997000 9997000\\n9965000 9997000 9997000\\n9963000 9997000 9997000\\n9961000 9997000 9997000\\n9959000 9997000 9997000\\n9957000 9997000 9997000\\n9955000 9997000 9997000\\n9953000 9997000 9997000\\n9951000 9997000 9997000\\n9949000 9997000 9997000\\n9947000 9997000 9997000\\n9945000 9997000 9997000\\n9943000 9997000 9997000\\n9941000 9997000 9997000\\n9939000 9997000 9997000\\n9937000 9997000 9997000\\n9935000 9997000 9997000\\n9933000 9997000 9997000\\n9931000 9997000 9997000\\n9929000 9997000 9997000\\n9927000 9997000 9997000\\n9925000 9997000 9997000\\n9923000 9997000 9997000\\n9921000 9997000 9997000\\n9919000 9997000 9997000\\n9917000 9997000 9997000\\n9915000 9997000 9997000\\n9913000 9997000 9997000\\n9911000 9997000 9997000\\n9909000 9997000 9997000\\n9907000 9997000 9997000\\n9905000 9997000 9997000\\n9903000 9997000 9997000\\n9901000 9997000 9997000\\n9900100 9997000 9997000\\n''', 'fizz buzz'\nassert solution('''\n10\n1 1 1 3 4 5 6 7 8 9 10\n0 999999999 9997000\n99999999 9997000 9997000\n9997000 9997000 9997000\n9986000 9997000 9997000\n9985000 9997000 9997000\n9983000 9997000 9997000\n9981000 9997000 9997000\n9979000 9997000 9997000\n9977000 9997000 9997000\n9975000 9997000 9997000\n9973000 9997000 9997000\n9971000 9997000 9997000\n9969000 9997000 9997000\n9967000 9997000 9997000\n9965000 9997000 9997000\n9963000 9997000 9997000\n9961000 9997000 9997000\n9959000 9997000 9997000\n9957000 9997000 9997000\n9955000 9997000 9997000\n9953000 9997000 9997000\n9951000 9997000 9997000\n9949000 9997000 9997000\n9947000 9997000 9997000\n9945000 9997000 9997000\n9943000 9997000 9997000\n9941000 9997000 9997000\n9939000 9997000 9997000\n9937000 9997000 9997000\n9935000 9997000 9997000\n9933000 9997000 9997000\n9931000 9997000 999"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"0 4 6 2 4\"\nassert solution(\"3\") == \"2 3 1 2\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2 2 3 1 2'\nassert solution('3') == '9999 10000 9998'"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n''') == '2 2 3 1 2'\nassert solution('''3\n0 99990000 99970002\n99990000 0 99980000\n99970002 99980000 0\n\nOutput\n9999 10000 9998\nInput\n3\n0 99990000 99970002\n99990000 0 99980000\n99970002 99980000 0\n''') == '9999 10000 9998'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\""
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2 2 3 1 2'\nassert solution('5') == '2 2 3 1 2'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2 2 3 1 2\"\nassert solution(\"3\") == \"2 2 3 1 2\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n''') == '2 2 3 1 2'\nassert solution('''\n3\n0 99990000 99970002\n99990000 0 99980000\n99970002 99980000 0\n\nOutput\n9999 10000 9998\n''') == '9999 10000 9998'\nprint(solution(input()))"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '22'\nassert solution('5') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '22'\nassert solution('5') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n''') == '22'\n\nassert solution('''\n5\n11 1\n01 1\n00 100\n10 1\n01 1\n''') == '103'\n\nassert solution('''\n3\n00 5000\n00 5000\n00 5000\n''') == '0'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"22\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"22\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n\n''') == '22'\n\nassert solution('''\n5\n11 1\n01 1\n00 100\n10 1\n01 1\n\n''') == '105'\n\nassert solution('''\n3\n00 5000\n00 5000\n00 5000\n\n''') == '0'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == '22'"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '22'\nassert solution() == '0'"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"22\"\nassert solution('''\n3\n10 5000\n00 5000\n00 5000\n''') == \"0\"\nassert solution('''\n6\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n''') == \"22\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == \"22\"\n\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\n\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\n\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\""
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 5') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 5\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 5\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 5\") == \"NO\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 5\") == \"NO\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 4 9\\n\"\n    \"2 3 1 2\\n\"\n    \"2 1 3\\n\"\n    \"4 3 6\\n\"\n) == \"YES\\n\"\n\nassert solution(\n    \"3 4 9\\n\"\n    \"2 3 1 2\\n\"\n    \"2 1 3\\n\"\n    \"4 3 6\\n\"\n) == \"YES\\n\"\n\nassert solution(\n    \"3 4 9\\n\"\n    \"1 3 1 2\\n\"\n    \"2 1 3\\n\"\n    \"4 3 6\\n\"\n) == \"NO\\n\"\n\nassert solution(\n    \"3 4 10\\n\"\n    \"2 3 1 2\\n\"\n    \"2 1 3\\n\"\n    \"4 3 6\\n\"\n) == \"YES\\n\"\n\nassert solution(\n    \"3 4 10\\n\"\n    \"2 3 1 2\\n\"\n    \"2 1 3\\n\"\n    \"5 3 6\\n\"\n) == \"NO\\n\""
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 5') == 'NO'\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 9\n1 3 1 2\n2 1 3\n4 3 6''') == 'YES'\nassert solution('''3 4 9\n2 3 1 2\n2 1 3\n4 3 6''') == 'YES'\nassert solution('''3 4 9\n1 3 1 2\n2 1 3\n4 3 6''') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4 9\n1 3 1 2\n2 1 3\n4 3 6\n\n''') == 'YES', 'First'\nassert solution('''3 4 10\n2 3 1 2\n2 1 3\n4 3 6\n\n''') == 'YES', 'Second'\nassert solution('''3 4 9\n2 3 1 2\n2 1 3\n4 3 6\n\n''') == 'NO', 'Third'\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input) == 'YES'\nassert solution(input) == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('4 1') == 'YES'\nassert solution('4 2') == 'NO'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 4 1') == 'NO'\nassert solution('2 3 4 1') == 'NO'\n\nassert solution('4 3 1 2') == 'YES'\nassert solution('4 3 1 2') == 'YES'\n\nassert solution('4 2') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 1\n2 3 4 1\n1 2 3 4\n''') == 'YES'\nassert solution('''\n4 1\n4 3 1 2\n3 4 2 1\n''') == 'YES'\nassert solution('''\n4 2\n4 3 1 2\n2 1 4 3\n''') == 'YES'\nassert solution('''\n4 1\n4 3 1 2\n2 1 4 3\n''') == 'NO'\nassert solution('''\n4 3\n4 3 1 2\n3 4 2 1\n''') == 'NO'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"YES\""
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1\") == \"NO\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == 'YES'\nassert solution('4 1') == 'YES'\nassert solution('4 1') == 'NO'\nassert solution('4 2') == 'YES'\nassert solution('3 1') == 'NO'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n4 3 1 2\") == \"NO\"\n\nassert solution(\"4 1\\n3 4 1 2\") == \"NO\"\n\nassert solution(\"4 1\\n2 3 4 1\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n4 3 1 2\") == 'YES'\nassert solution(\"4 1\\n4 3 1 2\") == 'NO'\nassert solution(\"4 3\\n4 3 1 2\") == 'YES'\nassert solution(\"4 3\\n4 3 1 2\") == 'NO'\nassert solution(\"4 2\\n4 3 1 2\") == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n4 3 1 2\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\") == \"NO\"\nassert solution(\"4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\") == \"NO\"\n\ns = stdin.split()\nn = int(s[0])\nk = int(s[1])\nq = list(map(int, s[2].split()))\ns = list(map(int, s[3].split()))\n\nq = sorted(q)\ns = sorted(s)"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1\n2 3 4 1\n3 4 2 1''') == 'YES'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n\n\n---\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution(\"7\") == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'\n\n'''"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution(\"7\") == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2 1\\n3 1\\n1 5\\n4 4'"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n3 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n''') == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n\nassert solution('''7\n3 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n''') == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n\nassert solution('''8\n3 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n''') == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n\nassert solution('''9\n7 4\n1 2 3 4 5 6\n1 2 4 6 7 8\n1 2 7 8 9 4\n1 7 8 9 1 4\n1 9 4 2 3 5\n1 4 2 3 5 9\n1 4 3 5 9 2\n1 5 9 2 3 4\n''') == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n7 8\\n7 9\\n9 4\\n8 4\\n4 2\\n3 5\\n2 3\\n1 7\\n9 4\\n9 2\\n8 4\\n7 6\\n6 7\\n5 8\\n4 3\\n3 2\\n1 1\\n9 5\\n8 2\\n7 4\\n6 3\\n5 9\\n4 6\\n9 7\\n1 8\\n2 9\\n7 4\\n3 5\\n4 2\\n5 1\\n6 9\\n7 8\\n1 1\\n8 9\\n5 7\\n9 9\\n3 5\\n5 3\\n1 5\\n4 3\\n6 6\\n8 5\\n4 1\\n2 8\\n2 5\\n1 6\\n9 1\\n2 4\\n7 8\\n4 9\\n6 4\\n5 3\\n9 7\\n2 6\\n3 2\\n4 5\\n8 1\\n1 1\\n2 3\\n8 2\\n6 5\\n6 5\\n8 7\\n5 1\\n3 8\\n2 6\\n5 9\\n7 6\\n9 2\\n3 3\\n3 2\\n1 5\\n2 2\\n9 4\\n9 7\\n3 1\\n9 5\\n8 6\\n1 3\\n4 1\\n4 6\\n7 5\\n3 8\\n6 6\\n2 3\\n7 6\\n8 3\\n8 9\\n5 7\\n3 8\\n6 1\\n3 2\\n5 8\\n4 7\\n4 6\\n4 5\\n7 1\\n8 1\\n8 1\\n5 8\\n5 9\\n3 8\\n2 1\\n6 4\\n6 7\\n5 3\\n8 1\\n9 3\\n7 6\\n5 4\\n7 7\\n8 5\\n1 3\\n7 4\\n8 3\\n3 5\\n6 4\\n9 4\\n6 8\\n1 2\\n3 8\\n1 6\\n2 6\\n3 4\\n4 5\\n2 6\\n4 6\\n9 3\\n8 5\\n7 3\\n7 5\\n1 1\\n4 1\\n5 9\\n4 6\\n5 3\\n5 4\\n7 6\\n8 5\\n5 1\\n1 1\\n4 5\\n8 2\\n7 3\\n9 8\\n2 6\\n8 4\\n6 9\\n1 8\\n7 8\\n5 1\\n3 6\\n6 5\\n9 7\\n2 8\\n9 7\\n5 6\\n3 8\\n4 8\\n4 9\\n5 7\\n4 9\\n7 9\\n5 4\\n8 7\\n1 1\\n6 6\\n9 1\\n5 1\\n1 1\\n8 8\\n4 1\\n2 7\\n3 4\\n3 3\\n1 2\\n3 9\\n4 8\\n4 7\\n5 8\\n3 8\\n7 1\\n7 7\\n8 4\\n1 2\\n3 1\\n1 7\\n4 1\\n1 6\\n7 8\\n2 2\\n2 6\\n5 1\\n5 4\\n4 6\\n5 4\\n1 6\\n8 1\\n8 2\\n1 7\\n3 4\\n1 4\\n3 5\\n2 5\\n4 4\\n5 2\\n2 8\\n5 1\\n6 2\\n5 7\\n9 5\\n6 6\\n2 5\\n5 2\\n5 1\\n7 7\\n1 4\\n5 3\\n4 5\\n4 3\\n3 7\\n5 7\\n3 2\\n8 8\\n5 4\\"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n''') == '1 1\\n3 1\\n1 5\\n4 4\\n'\n\nassert solution('''\n7\n''') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n''') == '1 1\\n3 1\\n1 5\\n4 4\\n'\n\nassert solution('''\n7\n''') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n\nassert solution('''\n8\n''') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n\nassert solution('''\n10\n''') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n\nassert solution('''\n11\n''') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '2 1\\n3 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '-1'\nassert solution('1') == '3'\nassert solution('2') == '-1'\nassert solution('3') == '3'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '-1'\nassert solution('3\\n1 2 3') == '3'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n1\n1''') == '3'\nassert solution('''3\n1 2 3\n''') == '3'\nassert solution('''3\n1 2 3\n4 5 6\n''') == '3'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n1\n\n''') == '3'\nassert solution('''3\n1 2 3\n\n''') == '-1'\nassert solution('''3\n10\n20 17\n20 4\n\n''') == '2'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '-1'\nassert solution('3') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '-1'\nassert solution('3') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3') == '3'\n\nassert solution('4\\n1 1 1 1') == '-1'"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '-1'\nassert solution('3\\n1 2 3') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '10'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '-1'\nassert solution('3') == '3'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 1 1 1 2 1 1 2 1 3') == '2'\nassert solution('1 2 3 1 1 1 2 1 1 2 1 3 1 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 3 1 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"7\"\nassert solution(\"46 2\\n\") == \"0 1 0 0 1 1 1\""
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '3'\nassert solution
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''46 2\n''') == '7'\nassert solution('''2018 214\n''') == '92 205 1'\nprint(solution(stdin))\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2018 214\") == \"92 205 1\"\nassert solution(\"46 2\") == \"7 0 1 0 0 1 1 1\"\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"0 1 0 0 1 1 1\"\nassert solution(\"46 2\") == \"7\"\n\n\"\"\"\nimport math\nimport sys"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1''') == '1'\nassert solution('''2\n4''') == '-1'\nassert solution('''1\n2''') == '1'\nassert solution('''1\n3''') == '0'\nassert solution('''4\n3''') == '1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '92 205 1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('46 2') == '7\\n0 1 0 0 1 1 1'\nassert solution('2018 214') == '3\\n92 205 1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\\\n23\n7\n''') == '3\\n92 205 1\\n'\nassert solution('''\\\n46 2\n''') == '7\\n0 1 0 0 1 1 1\\n'\n\n\"\"\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12 2\") == \"7\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1 2\") == \"3\"\nassert solution(\"11 2\") == \"0\"\nassert solution(\"1 1 2 2 2 1\") == \"7\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 20 20\n6 2\n1 3\n2 6''') == '5.000000000000000'\n'''\n\nn, p, q = map(int, input().split())\n\ntotal = sum(list(map(int, input().split())))\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5.000000000000000'"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 1 1\n2 3\n3 2\n2 3\n3 2\n''') == '0.400000000000000'\nassert solution('''3 5 3\n1 2\n1 2\n1 3\n1 3\n''') == '2.50000000000000'\n'''\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 20 20\n6 2\n1 3\n2 6\n''') == \"5.000000000000000\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\nassert solution('4 1 1') == '0.400000000000000'\nassert solution('4 1 1') == '0.400000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 20 20\\n6 2\\n1 3\\n2 6\\n') == '5.000000000000000'"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(ex1) == '5.000000000000000'\nassert solution(ex2) == '0.400000000000000'\nassert solution(ex3) == '1.000000000000000'\n\n\n\"\"\"\n\n\n\nimport math"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1 1\n1 2\n2 2\n''') == \"0.400000000000000\"\n'''\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\n\n'''\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\nassert solution('100 3 100') == '0.0001000000000000'\n'''\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'\nassert solution('10 7') == '11'\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2') == '1'\n\n'''"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n''') == \"4\"\nassert solution('''8 2\n''') == \"5\"\n\n''')\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n''') == '4'\nassert solution('''8 2\n''') == '5'\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 3]) == 4\nassert solution([8, 2]) == 5\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '4'\nassert solution('8 2') == '5'\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2,3]) == '4'\nassert solution([8,2]) == '5'\nassert solution([3,5]) == '0'\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'\n\n\n\"\"\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n5 7 7 7\n\n\"\"\") == \"Conan\"\nassert solution(\"\"\"\n2\n1 1\n\n\"\"\") == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '3\\n4 5 7') == 'Conan'\nassert solution('2\\n1 1') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == 'Conan'\n\"\"\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3 3 7 5\\n') == 'Agasa'\nassert solution('5\\n3 4 7 5\\n') == 'Conan'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 1\\n') == 'Agasa'\nassert solution('3\\n4 5 7\\n') == 'Conan'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'Agasa'\nassert solution('3') == 'Conan'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n4 5 7\\n') == 'Conan'\nassert solution('2\\n1 1\\n') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n10\\n3 1\\n8 2 2\\n4 2') == 'Conan'\nassert solution('2\\n6\\n3 1\\n8 2 2\\n4 2') == 'Agasa'\n\n\"\"\""
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == \"Conan\"\nassert solution('2') == \"Agasa\"\n\"\"\"\nfrom collections import deque\nn = int(input())\ncards = deque(map(int, input().split()))\nwhile len(cards) > 1:\n    a = cards.popleft()\n    if len(cards) == 0:\n        break\n    b = cards.popleft()\n    if a < b:\n        cards.append(a)\n        cards.append(b)\n    else:\n        cards.append(b)\n        cards.append(a)\nprint(\"Conan\") if len(cards) == 0 else print(\"Agasa\")\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '3 3'\nassert solution('1 2') == '1 2'\nassert solution('5 5') == '5 5'\n\"\"\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"3 3\"\n\n'''"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '3 3'\nassert solution('1 2') == '1 1'\nassert solution('10 4') == '10 10'\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3 3'\n\"\"\""
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n') == '#.##\\n####\\n'\nassert solution('2 3\\n') == '##.##\\n####\\n####\\n'\nassert solution('3 3\\n') == '#.###\\n###.##\\n###.##\\n'\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 1\") == \"2 1\"\nassert solution(\"3 4\") == \"2 3\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '3 3'\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"3 3\"\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '2'\nassert solution('2 4') == '0'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '3'\nassert solution('2 4') == '0'\n\nstdin = \"\"\"\n5 4\n+ 1\n- 2\n- 1\n+ 2\n+ 4\n- 4\n\"\"\"\nprint(solution(stdin))\n\nstdin = \"\"\"\n3 2\n+ 1\n- 2\n+ 2\n- 1\n\"\"\"\nprint(solution(stdin))"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n') == '4'\nassert solution('3 2\\n') == '2 3'\nassert solution('2 4\\n') == '0'\nassert solution('0\\n') == '0'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 2\") == \"2 3\"\nassert solution(\"2 4\") == \"3\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1\n\n''') == '4'\nassert solution('''3 2\n+ 1\n- 2\n\n''') == '1'\nassert solution('''2 4\n+ 1\n- 2\n+ 2\n- 1\n\n''') == '0'\nassert solution('''5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\n''') == '3'\nassert solution('''3 2\n+ 1\n- 2\n+ 2\n- 1\n\n''') == '2'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '3'\nassert solution('2 4') == '0'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '3'\nassert solution('2 4') == '2'\nassert solution('5 6') == '3'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n+ 1\\n- 2\\n- 1\\n') == '4\\n1 3 4 5'\nassert solution('3 2\\n+ 1\\n- 2\\n+ 3\\n+ 4\\n- 4\\n') == '1\\n3'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"5 6\") == \"3\"\nassert solution(\"2 5\") == \"2 3 5\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\nassert solution(\"5 4\\n\") == '4\\n1 3 4 5'\nassert solution(\"2 4\\n\") == '0'\nassert solution(\"4 2\\n\") == '1 3'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 3\n1 2 3\n9\n''') == '4'\nassert solution('''\n5 1\n5 4 2 4 5\n2\n5\n''') == '1'\nassert solution('''\n5 2\n1 2 3\n1 2 3\n9\n''') == '0'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2 3\n1 2 3\n9''') == '4'\n\nassert solution('''5 1\n5 4 2 4 5\n2''') == '1'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"5 3\") == \"1\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 3], [1, 2, 3], 9) == \"4\"\nassert solution([5, 1], [5, 4, 2, 4, 5], 5) == \"1\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"1\", \"First\"\nassert solution(\"5 2\") == \"0\", \"Second\"\nassert solution(\"6 6\") == \"2\", \"Third\"\nassert solution(\"3 3\") == \"4\", \"Forth\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 3], [1, 2, 3, 1, 2, 3, 9], 5) == \"4\"\nassert solution([5, 1], [5, 4, 2, 4, 5, 3, 7], 5) == \"0\"\nassert solution([5, 1], [5, 4, 2, 4, 5, 3, 7], 10) == \"1\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '4'\nassert solution('5 1') == '1'\nassert solution('5 1') == '0'"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1\n5 4 2 4 5''') == '1'\nassert solution('''6 1\n5 4 2 4 5 2''') == '1'\nassert solution('''10 1\n5 4 2 4 5 2 5 6 8 10''') == '5'\nassert solution('''5 1\n5 4 2 4 5 2''') == '0'\nassert solution('''3 3\n1 2 3\n1 2 3\n9''') == '4'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 4 2 4 5\") == \"4\"\nassert solution(\"2\") == \"0\"\n\n\n\"\"\"\nimport sys\nn, m = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\nb = list(map(int, sys.stdin.readline().split()))\nx = int(sys.stdin.readline())\n\nans = 0\n\nfor i in range(n):\n    for j in range(m):\n        tmp = a[i] * b[j]\n        if ans < tmp:\n            ans = tmp\n        if tmp % x == 0:\n            print(i, j, tmp)\n\nprint(ans)"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n5 4 2 4 5\\n2') == '1'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('4 4') == 'abda'\nassert solution('1 2') == 'NO'\nassert solution('1 3') == 'NO'\nassert solution('2 1') == 'NO'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\ncba\") == \"cbd\"\nassert solution(\"3 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\ncba\\n') == 'cbd'\nassert solution('4 4\\nabcd\\n') == 'abda'\n\n\n\"\"\""
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4\\nabcd') == 'abda'\n\"\"\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nabcd\") == \"abda\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\ncba\n''') == 'NO'\nassert solution('''4 4\nabcd\n''') == 'abda'\nassert solution('''5 5\nabcdef\n''') == 'abdbc'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\ncba\\n') == 'cbd'\nassert solution('3 4\\nabcd\\n') == 'abda'\n\n\"\"\"\nimport re\nimport sys"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 4') == 'cbd'\nassert solution('4 4') == 'abda'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\ncba\n\n''') == 'NO'\nassert solution('''3 4\ncba\n\n''') == 'cbd'\nassert solution('''4 4\nabcd\n\n''') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\ncba\n''') == 'abda'\nassert solution('''\n3 3\ncba\n''') == 'NO'\nassert solution('''\n3 4\ncba\n''') == 'abda'\nassert solution('''\n4 4\ncba\n''') == 'abda'\nassert solution('''\n5 5\nabc\n''') == 'NO'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"tokitsukaze\"\nassert solution(input()) == \"quailty\"\nassert solution(input()) == \"once again\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"tokitsukaze\"\nassert solution(\"2 1\") == \"tokitsukaze\"\nassert solution(\"3 1\") == \"quailty\"\nassert solution(\"4 1\") == \"once again\"\nassert solution(\"5 1\") == \"once again\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"quailty\" or solution(input) == \"tokitsukaze\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"6 1\\n0101\"\n) == \"once again\"\n\nassert solution(\n    \"6 5\\n010101\"\n) == \"tokitsukaze\"\n\nassert solution(\n    \"4 1\\n0011\"\n) == \"once again\"\n\nassert solution(\n    \"4 5\\n010101\"\n) == \"tokitsukaze\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) in {'once again', 'tokitsukaze', 'quailty'}"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == 'tokitsukaze'\nassert solution('6 1') == 'quailty'\nassert solution('6 5') == 'once again'\n\n\n\"\"\"\n\n\nn, k = map(int, input().split())\ncolor_pattern = input()\n\ntotal_moves = 0\n\nwhile True:\n    total_moves += 1\n\n    for i in range(k):\n        if total_moves > 10**9:\n            print('once again')\n            break\n        else:\n            print(color_pattern[i])\n        if color_pattern[i] == '0':\n            color_pattern = color_pattern[:i] + '1' + color_pattern[i + 1:]\n        else:\n            color_pattern = color_pattern[:i] + '0' + color_pattern[i + 1:]\n\n    if total_moves > 10**9:\n        print('once again')\n        break\n    else:\n        if color_pattern[:k] == '01' * k:\n            print('tokitsukaze')\n            break\n        else:\n            if color_pattern[-k:] == '01' * k:\n                color_pattern = color_pattern[:-k] + '0' * k + color_pattern[-k:]\n            else:\n                color_pattern = color_pattern[:-k] + '1' * k + color_pattern[-k:]\n            if color_pattern[:k] == '01' * k:\n                print('tokitsukaze')\n                break\n            else:\n                if color_pattern[-k:] == '01' * k:\n                    color_pattern = color_pattern[:-k] + '0' * k + color_pattern[-k:]\n                else:\n                    color_pattern = color_pattern[:-k] + '1' * k + color_pattern[-k:]\n                if color_pattern[:k] == '01' * k:\n                    print('tokitsukaze')\n                    break\n                else:\n                    if color_pattern[-k:] == '01' * k:\n                        color_pattern = color_pattern[:-k] + '0' * k + color_pattern[-k:]\n                    else:\n                        color_pattern = color_pattern[:-k] + '1' * k + color_pattern[-k:]\n                    if color_pattern[:k] == '01' * k:\n                        print('tokitsukaze')\n                        break\n                    else:\n                        print('once again')\n                        break\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n0101') == 'quailty'\nassert solution('6 1\\n010101') == 'tokitsukaze'\nassert solution('6 5\\n010101') == 'once again'\n\"\"\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1\n0101\n\nOutput\ntokitsukaze''') == \"tokitsukaze\"\nassert solution('''6 1\n010101\n\nOutput\nonce again''') == \"once again\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == 'tokitsukaze'\nassert solution('6 1') == 'once again'\nassert solution('6 5') == 'tokitsukaze'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 50') == '50'\nassert solution('1 2 10') == '7'\nassert solution('1 4 5') == '5'\nassert solution('6 3 9 5 1') == '9'"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == stdout_string\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80\\n') == '50'\nassert solution('1 2 10\\n11\\n15 7\\n') == '7'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 50') == '50'\nassert solution('1 2 10') == '7'\n\nstdin = '''8 2 10\n10 20\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n4 4\n5 5\n5 6\n5 7\n5 8\n6 6\n6 7\n6 8\n7 7\n7 8\n8 8'''\n\nassert solution(stdin) == '6'\nassert solution('') == '0'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 50\") == \"50\"\nassert solution(\"1 2 10\") == \"7\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 4 50\n20 100\n60 10 40 80\n''') == '50'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4 50\n20 100\n60 10 40 80\n''') == '50'\nassert solution('''1 2 10\n11\n15 7\n''') == '7'\nassert solution('''5 5 5\n1 2 4 3 2\n4 5 2 3 4\n4 5 5 3 5\n4 5 5 5 4\n4 5 5 5 3\n''') == '3'\nassert solution('''4 4 10\n1 2 3 4\n2 3 1 4\n2 3 4 1\n1 3 2 4\n''') == '4'\nassert solution('''1 1 5\n1 2 3 4\n2 4 3 5\n''') == '5'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 50\") == \"50\"\nassert solution(\"1 2 10\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 10') == '7'\nassert solution('1 2 10') == '7'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 4 50\n20 100\n60 10 40 80\n''') == '50'\nassert solution('''1 2 10\n11\n15 7\n''') == '7'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(test_input_1) == '1 6'\nassert solution(test_input_2) == '5 5'\nassert solution(test_input_3) == '5 5'\n\n'''\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1 6\"\nassert solution(\"3 2\") == \"1 3\"\nassert solution(\"1 10\") == \"5 5\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1 6'\nassert solution('1 10') == '1 3'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 1\") == \"1 6\"\nassert solution(\"3 2\\n0 0\") == \"1 3\"\nassert solution(\"1 10\\n5 3\") == \"5 5\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n0 0\n''') == '1 6'\nassert solution('''\n1 10\n5 3\n''') == '5 5'\nassert solution('''\n1 100\n5 1\n''') == '1 101'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1 6'\nassert solution('3 2') == '1 6'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"1 6\"\nassert solution(input_string2) == \"1 3\"\nassert solution(input_string3) == \"5 5\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1 6\"\nassert solution(\"3 2\") == \"1 3\"\nassert solution(\"1 10\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n-2 5 -1\"\"\") == \"\"\"2\n3 3\n3 3\"\"\"\n\nassert solution(\"\"\"5\n-2 5 -1 3 -4\"\"\") == \"\"\"2\n2 3\n4 4\n4 3\n3 3\"\"\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2 3\"\nassert solution(\"3\\n-5 3 -1\") == \"2 3\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"-2 5 -1\") == \"2 3\""
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n-2 5 -1\n''') == '2 3'\nassert solution('''3\n2 3\n1 2''') == '3 3'\nassert solution('''3\n3 2\n2 2''') == '2 3'\nassert solution('''5\n-1 2 2 3 3\n-3 5 -2 4''') == '4 5'\nassert solution('''5\n-1 2 3 2 2\n-3 4 -4 2 3''') == '3 4'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\nassert solution('9') == '4'\nassert solution('20') == '2'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n-2 5 -1\") == \"2 3\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '2'\nassert solution('3') == '2'\nassert solution('5 3 -1') == '2 3 3'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 3\""
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '1'\n'''\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 3\n1 5\n4 2\n3 1\n''') == '3'\n\nassert solution('''\n1\n0 4\n''') == '1'\n\nassert solution('''\n2\n1 10\n2 2\n''') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n0 3\n1 5''') == '3'\nassert solution('''1\n0 4\n''') == '1'\nassert solution('''2\n1 10\n2 2''') == '3'\n\nstdin = sys.stdin.read()\nn, *k = list(map(int, stdin.split()))"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0 3\\n1 5\\n') == '3'\nassert solution('2\\n1 10\\n2 2\\n') == '3'\n\n'''\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\"\n\nassert solution(\"1\\n0 4\\n\") == \"1\"\n\nassert solution(\"2\\n1 10\\n2 2\") == \"3\"\n\"\"\"\n\nfrom math import log2\nfrom decimal import Decimal\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\n    '0 3',\n    '1 5'\n]) == '3'\n\nassert solution([\n    '1 10',\n    '2 2'\n]) == '3'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 0') == '1'\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 3\\n1 5\") == \"3\"\nassert solution(\"1 10\\n2 2\") == \"1\"\nassert solution(\"2 1\\n3 2\") == \"3\"\nassert solution(\"2 3\\n4 2\") == \"3\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '1'\n\"\"\""
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution('1') == '1'\nassert solution('2') == '3'"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 50\n25 25 50\n''') == '0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18'''\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == \"12\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\nassert solution(\"3 50\\n25 25 50\") == \"3\\n0 25 50\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6 1 10 12 2') == '16'\nassert solution('3 50') == '3 0 25 50'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '6 18\\n'\n    '5 6 1 10 12 2\\n'\n    ) == '16\\n'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5 5\\n5 5\\n5 5') == '3'\nassert solution('6 18\\n5 6 1 10 12 2\\n') == '16'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 6 1 10 12 2\n''') == '16'\nassert solution('''\n3 50\n''') == '0 25 50'"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"16 0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\""
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 18') == '16'\nassert solution('3 50') == '0 25 50'\nassert solution('5 1 10 12 2') == '0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n5 6 1 10 12 2\n''') == '16'\nassert solution('''\n3\n25 25 50\n''') == '3'\n\nprint(solution('''\n6\n5 6 1 10 12 2\n'''))\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n''') == '3'\nassert solution('''\n2\n''') == '2'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3\n4\n2\n3\n5\n''') == '3'\nassert solution('''\n3\n2\n3\n''') == '2'\nassert solution('''\n4\n4\n3\n''') == '3'\nassert solution('''\n2\n2\n''') == '2'\nassert solution('''\n6\n1\n3\n4\n2\n3\n''') == '4'"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('2') == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('''\n20\n''') == '3'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5''') == \"3\"\nassert solution('''7\n3\n1\n3\n1\n2\n2\n4''') == \"3\"\nassert solution('''9\n1\n2\n3\n3\n4\n5\n6\n7\n9\n''') == \"8\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"2\") == '2'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\"\n\n\n'''\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n10 2\n20 2\n30 2\n\"\"\") == \"180\"\n\nassert solution(\"\"\"\n3\n5 1\n2 3\n4 3\n\"\"\") == \"21\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    1\n    10 1\n    20 2\n    30 3\n''') == '180'\n\nassert solution('''\n    1\n    3 1\n    2 2\n    4 3\n''') == '21'\n\nassert solution('''\n    1\n    5 10\n''') == '50'"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '180'\nassert solution('3') == '180'\nassert solution('3') == '180'\nassert solution('3') == '180'"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == \"180\"\nassert solution('3') == \"21\"\nassert solution('1') == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '180'"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n10 1\n20 2\n30 3\n''') == '180', 'test1'\nassert solution('''3\n1 1\n2 2\n3 3\n''') == '21', 'test2'\nassert solution('''1\n5 10\n''') == '50', 'test3'"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1\n5 1\n\"\"\"\n) == \"180\"\nassert solution(\n\"\"\"\n2\n3 1\n\"\"\"\n) == \"21\"\nassert solution(\n\"\"\"\n3\n10 1\n20 2\n30 3\n\"\"\"\n) == \"180\""
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"180\"\nassert solution(\"3\") == \"21\"\nassert solution(\"2\") == \"50\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '180'\nassert solution('3') == '180'\nassert solution('4') == '180'\nassert solution('5') == '50'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n10 1\n20 2\n30 3\n''') == \"180\"\nassert solution('''\n1\n5 10\n''') == \"50\""
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\"\nassert solution(\"2\\n0 0 0 0\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\""
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n0 0 10\n''') == '2'\nassert solution('''5\n0 1 2 3 4\n''') == '1'\nassert solution('''4\n0 0 0 0\n''') == '4'\n\nassert solution('''9\n0 1 2 3 4 5 6 7 8\n''') == '3'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n0 0 10\n''') == '2'\nassert solution('''5\n0 1 2 3 4\n''') == '1'\nassert solution('''4\n0 0 0 0\n''') == '4'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n0 1 2 3 4''') == '2'\nassert solution('''4\n0 0 0 0''') == '4'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '4'\nassert solution('9') == '3'"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n0 1 2 3 4') == \"1\"\nassert solution('4\\n0 0 0 0') == \"4\"\nassert solution('9\\n0 1 2 3 4') == \"3\"\n\n\n'''\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"9\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '4'\nassert solution('9') == '3'"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n0 1 2 3 4''') == '1'\nassert solution('''5\n0 0 10''') == '2'\nassert solution('''4\n0 0 0 0''') == '4'\nassert solution('''9\n0 1 2 3 4 5 6 7 8 9''') == '3'\nprint('Everything passed!')"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n0 0\\n0 1\\n1 0\\n1 1\"\n) == \"5\"\nassert solution(\n    \"5\\n0 0\\n1 0\\n1 1\\n0 0\\n0 1\"\n) == \"1\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n0 0\n0 1\n1 0\n1 1''') == '5'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1,1,1,1]) == 5\nprint(solution([1,1,1,1]))\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '5'"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 0\n0 1\n1 0\n1 1\n''') == '5'\nassert solution('''\n4\n0 0\n0 1\n1 0\n1 1\n''') == '6'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '5'\nprint('OK')\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\nassert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"10\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n0 0\n0 1\n1 0\n1 1\n\n\"\"\") == \"5\""
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '5'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '5'"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"3\"\n\nclass Test:\n\n    def test_one(self):\n        assert solution(\"2\") == \"2\"\n\n    def test_two(self):\n        "
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"3\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n\"\"\") == \"4\"\n\"\"\"\nYou may need to import some modules to have this work. The import statement is in the form:\n\nimport module_name\n\"\"\"\n\nfrom math import inf"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '4'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"3\") == \"4\"\n\n------\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n''') == '4'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"0\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('3') == '3'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"1\") == \"2\""
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n''') == '4', f'actual result: {solution(stdin)}'\n\"\"\"\n\nN = int(input())\nA = list(map(lambda x: int(x) - 1, input().split()))\nB = list(map(lambda x: int(x) - 1, input().split()))\n\nA.sort()\nB.sort()\n\nans = 0\n\nfor i in range(len(A)):\n    if A[i] > B[i]:\n        break\n    ans += 1\n    A[i], B[i] = B[i], A[i]\n\nprint(ans)\n\n\"\"\"\nimport math\nfrom collections import Counter\nfrom typing import Dict, List, Tuple\n\nT = int(input())\n\nfor _ in range(T):\n    n = int(input())\n    A = list(map(lambda x: int(x) - 1, input().split()))\n    B = list(map(lambda x: int(x) - 1, input().split()))\n\n    A.sort()\n    B.sort()\n\n    result = 0\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if A[i] > A[j]:\n                break\n            elif A[i] < B[j]:\n                break\n            else:\n                A[i], A[j] = A[j], A[i]\n                B[i], B[j] = B[j], B[i]\n                result += 1\n\n    print(result)\n\"\"\""
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n6\n3''') == \"4\"\nassert solution('''5\n3\n5''') == \"4\"\nassert solution('''5\n1\n5''') == \"4\"\nassert solution('''5\n4\n5''') == \"4\"\nassert solution('''4\n3\n5''') == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n6\n3\n''') == '4', f\"Your function returned: {solution('''\n5\n6\n3\n''')} (expected: '4')\"\nassert solution('''\n5\n3\n5\n''') == '4', f\"Your function returned: {solution('''\n5\n3\n5\n''')} (expected: '4')\""
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"4\"\nassert solution(\"3\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6\\n3\") == \"4\"\nassert solution(\"5\\n3\\n5\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(samples) == \"4\"\nprint(solution(inp))\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('5') == '4'\nassert solution('10') == '9'\nassert solution('2') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n6\\n3') == '4'\nassert solution('5\\n3\\n5') == '4'\nassert solution('1\\n2\\n3') == '2'"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('8') == '32'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n2\\n4 2\\n\") == \"2\"\nassert solution(\"Input\\n8\\n1 2 4 8 16 32 64 576\\n\") == \"32\"\n\n\n'''\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4,2]) == 2"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"8\") == \"32\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2\n''') == '2'\nassert solution('''\n8\n1 2 4 8 16 32 64 576\n''') == '32'\nassert solution('''\n10\n1 2 4 8 16 32 64 512 6656\n''') == '512'\nassert solution('''\n100\n1 2 4 8 16 32 64 512 6656''') == '512'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('8 1 2 4 8 16 32 64 576') == '32'"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 4, 2, 4, 8, 16, 32, 64, 576]) == 32\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_stdin) == '32'\n\"\"\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([400, 4], [\"100\", \"300\", \"450\", \"500\"]) == 2\nassert solution([50, 2], [\"25\", \"100\"]) == 3\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4') == '1'\nassert solution('100 4') == '2'\nassert solution('400 4') == '2'\nassert solution('50 2') == '3'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 4\") == \"2\"\nassert solution(\"10 2\") == \"3\"\nassert solution(\"400 4\") == \"2\"\nassert solution(\"50 2\") == \"3\"\nassert solution(\"100 25\") == \"3\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nprint(\"Coding complete? Click 'Check' to review your tests and earn cool rewards!\")"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '1'\nassert solution('10 10') == '2'"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([int(x) for x in stdin.split()]) == '2'\nassert solution([int(x) for x in stdin.split()]) == '3'\nassert solution([int(x) for x in stdin.split()]) == '2'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\n100 300 450 500') == '2'\nassert solution('50 2\\n100 25') == '3'"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"2\"\nassert solution(\"100 2\") == \"3\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '6'\nassert solution('5 2') == '10'"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '6'\nassert solution('1 1') == '6'\nassert solution('2 2') == '4'\nassert solution('3 3') == '7'\nassert solution('4 3') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '6'\nassert solution('3 2') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '6'\nassert solution('4 2') == '6'\n\"\"\""
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"3 3\") == \"9\"\nassert solution(\"4 4\") == \"8\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 1 1''') == '6'\nprint(solution('''10 10\n10 10 10 10 10 10 10 10 10 10 10 10 10 10 10'''))\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '10'\nassert solution('3') == '15'\nassert solution('4') == '18'\nassert solution('5') == '26'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''3\n1 2''') == '0'\nassert solution('''10\n1 2 3 4 5''') == '0'\nassert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''2\n1 2''') == '3'"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '499122178'\nassert solution('3') == '499122178'\nassert solution('4') == '2482306837'\nassert solution('5') == '3747676364'\nassert solution('8') == '7618581821'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"4\") == \"499122178\"\n\n\"\"\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"2\") == \"499122178\"\nassert solution(\"5\") == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '499122178'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"4\") == \"499122178\"\nassert solution(\"5\") == \"499122178\"\nassert solution(\"6\") == \"499122178\"\nassert solution(\"7\") == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1/2'\nassert solution('5') == '1/2'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '499122178'\nassert solution('2') == '499122178'\nassert solution('1') == '499122178'\nassert solution('0') == '499122178'"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4\n''') == '3/2'\nassert solution('''1\n2\n3\n4\n''') == '3/2'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n''') == '1/2'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '1/2'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 6\nassert solution('3') == -1"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n\") == \"-1\"\nassert solution(\"10\\n\") == \"6669\""
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n\n2\n\n''') == '2'\n\nassert solution('''\n\n10\n\n''') == '-1'\n\nassert solution('''\n\n10\n\n''') == '6669'\n\nassert solution('''\n\n1000000\n\n''') == '-1'"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'\nprint(solution(input()))\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n''') == '6'\nassert solution('''3\n''') == '6669'\nassert solution('''10\n''') == '-1'\nassert solution('''100\n''') == '-1'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2 4 3 2 0'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\"\nassert solution(\"2\") == \"-1\"\n\"\"\"\nimport math"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == \"1 4 3 2 0\"\nassert solution('2') == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1 4 3 2 0'\nassert solution('2') == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'\nprint(solution('10'))"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes'\nassert solution('5\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'No'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n1 2 4 3') == 'No'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes'\nassert solution('5\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'No'\nassert solution('10\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes'\nassert solution('0\\n') == 'No'\nassert solution('1\\n') == 'Yes'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n\n''') == 'Yes'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n\n''') == 'No'"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"No\"\n\n\n\"\"\"\nimport collections\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes'\nassert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'No'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n') == 'No'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'No'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'Yes'\nassert solution() == 'No'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"Yes\""
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == \"Yes\"\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == \"No\"\nassert solution('''\n5\n1 2\n1 3\n2 4\n1 2 4 3\n''') == \"Yes\"\nassert solution('''\n5\n1 2\n1 3\n2 4\n1 2 3 4\n''') == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'No'\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 6 5') == '24500'\nassert solution('2 4 5') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 6 5\") == \"24500\"\nassert solution(\"2 4 5\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n''') == '24500'\nassert solution('''\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n''') == '-1'\nassert solution('''\n2 5 4\n1 1 0 5000\n2 2 0 5500\n2 1 0 4000\n8 0 1 7000\n''') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 6 5\") == \"24500\"\nassert solution(\"2 4 5\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500''') == \"24500\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 6 5\") == \"24500\"\nassert solution(\"2 4 5\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500') == \"24500\"\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n') == \"0\"\n\n'''\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n') == \"24500\"\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n') == \"-1\"\nassert solution('2 8 10\\n1 2 0 5000\\n2 1 0 4500\\n2 2 0 3000\\n8 0 1 7000\\n9 0 1 7000\\n8 0 2 6500\\n') == \"24500\"\nassert solution('1 10 2\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 7000\\n9 0 1 7000\\n8 0 2 6500\\n') == \"-1\"\nassert solution('1 10 0\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 7000\\n9 0 1 7000\\n8 0 2 6500\\n') == \"-1\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 7000\n\n''') == '24500'\n\nassert solution('''2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n\n''') == '-1'\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"24500\"\nprint(solution(input_string))\n\n\nimport sys\nimport os\nimport inspect\ncurrentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))\nparentdir = os.path.dirname(os.path.dirname(currentdir))\nos.sys.path.insert(0, parentdir)\nfrom graph.graph import Graph\n\ninput_string = \"\""
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 45\\n') == '0.828427125'\nassert solution('6 4 30\\n') == '19.668384925'\nprint(solution(input()))\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\nassert solution('10 8 15') == '1.9375'"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 45\\n') == '0.828427125'\nassert solution('6 4 30\\n') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 45\\n\") == \"0.828427125\"\nassert solution(\"6 4 30\\n\") == \"19.668384925\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1 45''') == '0.828427125'\nassert solution('''6 4 30''') == '19.668384925'\nassert solution('''5 4 90''') == '5.238095238095238'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\nassert solution('8 4 45') == '0.828427125'\n\n\"\"\"\n\nfrom math import sin, cos, radians\n\nw, h, a = list(map(int, input().split()))\n\nprint(sin(radians(a)) * w * h / 2)\nprint(a / 180 * (w * h - sin(radians(a)) * w * h / 2) )\n\n\"\"\"\nw, h, a = input().split()\na = radians(a)\nprint(round(sin(a) * w * h / 2, 6))\nprint(round(a / 180 * (w * h - sin(a) * w * h / 2), 6))\n\"\"\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 4 30') == '19.668384925'\nassert solution('1 1 45') == '0.828427125'\nprint(solution(input()))\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 1 45\\n\"\n) == \"0.828427125\"\nassert solution(\n    \"6 4 30\\n\"\n) == \"19.668384925\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3000'\nassert solution_a() == '992'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n3"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3000\""
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"3000\"\nassert solution(\"3 4\") == \"992\"\nassert solution(\"2 4\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2 3'\n    'ATK 2000'\n    'DEF 1700'\n    '2500'\n    '2500'\n    '2500'\n) == '3000'\n\nassert solution(\n    '3 4'\n    'ATK 10'\n    'ATK 100'\n    'ATK 1000'\n    '1'\n    '11'\n    '101'\n    '1001'\n) == '992'\n\nassert solution(\n    '2 4'\n    'DEF 0'\n    'ATK 0'\n    '0'\n    '0'\n    '1'\n    '1'\n) == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3000'\nassert solution('''1\nATK 10\nATK 100\nATK 1000\n1\n11\n101\n1001\n''') == '992'\nassert solution('''2\nDEF 0\nATK 0\n0\n0\n1\n1\n''') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3000'\nassert solution() == '292'\nassert solution() == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n''') == '3000'\n\nassert solution('''2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n''') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500') == '3000'\nassert solution('3 4\\nDEF 0\\nATK 0\\n0\\n0\\n1') == '1'\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n1\") == \"1\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9') == '6'\nassert solution('5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n2 1 -100 -100\\n2 1 -100 -100\\n3 10 -5 -3 -4') == '62'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n') == '6'\nassert solution('5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n') == '2'\nassert solution('5 4\\n4 3 2 1 1\\n2 2 2 2 2 1 1 1\\n') == '4'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n') == '6'\nassert solution('2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n') == '2'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == \"2\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6'\nassert solution('''2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2'\nassert solution('''5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6'\nassert solution('''2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2'\nassert solution('''5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2'\nassert solution('5 4') == '6'\nassert solution('3 1 2 1 2 3') == '4'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6'\n\nassert solution('''2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n4 3 2 1 1') == '6'\nassert solution('2 2\\n1 2\\n0 0\\n2 1 -100 -100') == '2'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n') == '6'\nassert solution('5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n') == '62'\nassert solution('5 1\\n2 1\\n1 0\\n1 1\\n') == '1'\nassert solution('5 5\\n5 5\\n2 2\\n1 1\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n') == '1'\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaba') == 'YES', solution('aaba')\nassert solution('abaa') == 'YES', solution('abaa')\nassert solution('aabb') == 'NO', solution('aabb')\nassert solution('bbaa') == 'YES', solution('bbaa')\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"bbaa\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aaba\nabaa\n''') == 'YES'\nassert solution('''aabb\nabab\n''') == 'NO'\n\nstdin = '''aaba\nabaa\n'''\nstdin = '''aabb\nabab\n'''\nprint(solution(stdin))"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'\nassert solution('bbaa') == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aaba\") == \"YES\", \"First example\"\nassert solution(\"abaa\") == \"YES\", \"Second example\"\nassert solution(\"aabb\") == \"NO\", \"Third example\""
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"bbaa\") == \"YES\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'\nassert solution('bbaa') == 'NO'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_1) == \"YES\", \"First example\"\nassert solution(input_2) == \"NO\", \"Second example\""
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'\nassert solution('bbaa') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'\nassert solution('bbaa') == 'YES'"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == 'NO'\nassert solution('2\\n') == 'YES'\nassert solution('3\\n') == 'YES'"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n3\n4\n''') == 'NO', 'First'\n\nassert solution('''3\n4\n5\n''') == 'YES', 'Second'\n\nassert solution('''3\n4\n1\n''') == 'YES', 'Third'\n\nassert solution('''1\n3\n4\n5\n''') == 'NO', 'Fourth'\n\nprint('All tests passed')"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\n\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('5') == 'YES'\nassert solution('10') == 'YES'\nassert solution('100') == 'YES'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input(\"YES\\nYES\\n\")) == \"YES\"\nassert solution(input(\"YES\\nNO\\nYES\\n\")) == \"YES\"\nassert solution(input(\"YES\\nNO\\nYES\\nNO\\n\")) == \"YES\"\nassert solution(input(\"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\n\")) == \"YES\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\nab\nac\ncd\n1 2\n\nOutput\nYes\na?\n''') == 'Yes'\nassert solution('''\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n\nOutput\nYes\n?es?\n''') == 'Yes'\nassert solution('''\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\nOutput\nNo\n''') == 'No'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"Yes\"\nassert solution(\"3 2\") == \"a?a\"\nassert solution(\"5 3\") == \"a?a\"\nassert solution(\"6 3\") == \"a?a\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 2 3\n''') == 'Yes','solution'\n\nassert solution('''\n\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == 'No','solution'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\nab\nac\ncd\n1 2\n''') == \"Yes\"\nassert solution('''4 3\na\nb\nc\ndd\n1 2 3\n''') == \"Yes\"\nassert solution('''5 3\ntest\ntezt\ntest.\nest\ntes\n1 4 5\n''') == \"No\"\nassert solution('''6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == \"Yes\"\nassert solution('''8 3\nab\nac\ncd\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\na\nb\nc\ndd\n1 2 3''') == 'Yes'\nassert solution('''5 3\na\nb\nc\ndd\n1 2 3''') == 'No'\nassert solution('''5 3\na\nb\nc\ndd\n1 2 3''') == 'Yes'\nassert solution('''5 3\na\nb\nc\ndd\n1 2 3''') == 'No'\nassert solution('''5 3\na\nb\nc\ndd\n1 2 3''') == 'Yes'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2\nab\nac\ncd\n1 2\n\n''') == 'Yes', \"First example\"\nassert solution('''\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n\n''') == 'Yes', \"Second example\"\nassert solution('''\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\n''') == 'No', \"Third example\""
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'No'\nassert solution('1 2') == 'No'\nassert solution('1 2') == 'No'\nassert solution('1 2') == 'No'\nassert solution('1 2') == 'No'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\nab\\nc\\nd\\n1 2\\n') == 'Yes\\n?es?'\nassert solution('4 4\\na\\nb\\nc\\nd\\ne\\n1 2 3 4\\n') == 'No\\n.???'\nassert solution('6 3\\n.svn\\n.git\\n....\\n...\\n..\\n\\n1 2 3') == 'Yes\\n.???'"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"No\"\nassert solution(\"6 3\") == \"Yes\"\n\"\"\"\nimport math"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\nab\nac\ncd\n1 2\n''') == 'Yes'\nassert solution('''5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n''') == 'Yes'\nassert solution('''4 4\na\nb\nc\ndd\n1 2 3 4\n''') == 'No'\nassert solution('''6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == 'Yes'\n\nassert solution('''1 4 5\n..\n.\n..\n.\n..\n.\n''') == 'No'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '2'\nassert solution('''\n2\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '3'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3''') == '2'\nassert solution('''3\n1 1 2''') == '1'\nassert solution('''3\n1 2 3''') == '1'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('3\\n10 100 10') == '3'\nassert solution('3\\n1 2 3') == '2'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('4\\n1 2 3 4') == '3'"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n') == '2'\nassert solution('3\\n1 1 1\\n') == '2'\nassert solution('3\\n1 1 2\\n') == '2'\nassert solution('3\\n1 1 3\\n') == '3'\nassert solution('3\\n1 2 1\\n') == '2'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\nassert solution('3') == '2'\nassert solution('10') == '3'\nassert solution('1') == '1'\nassert solution('1000000') == '1'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\n\"\"\""
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"3\") == 2\nassert solution(\"4\") == 2\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '2'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == \"2\"\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n''') == \"3\"\n'''\n\nimport math"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''10\n1 2\n2 3\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n''') == '14'\nassert solution('''20\n1 2\n2 3\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n37 38\n39 40\n41 42\n43 44\n45 46\n47 48\n49 50\n51 52\n53 54\n55 56\n57 58\n59 60\n61 62\n63 64\n65 66\n67 68\n69 70\n71 72\n73 74\n75 76\n77 78\n79 80\n81 82\n83 84\n85 86\n87 88\n89 90\n91 92\n93 94\n95 96\n97 98\n99 100\n101 102\n103 104\n105 106\n107 108\n109 110\n111 112\n113 114\n115 116\n117 118\n119 120\n121 122\n123 124\n125 126\n127 128\n129 130\n131 132\n133 134\n135 136\n137 138\n139 140\n141 142\n143 144\n145 146\n147 148\n149 150\n151 152\n153 154\n155 156\n157 158\n159 160\n161 162\n163 164\n165 166\n167 168\n169 170\n171 172\n173 174\n175 176\n177 178\n179 180\n181 182\n183 184\n185 186\n187 188\n189 190\n191 192\n193 194\n195 196\n197 198\n199 200\n201 202\n203 204\n205 206\n207 208\n209 210\n211 212\n213 214\n215 216\n217 218\n219 220\n221 222\n223 224\n225 226\n227 228\n229 230\n231 232\n233 234\n235 236\n237 238\n239 240\n241 242\n243 244\n245 246\n247 248\n249 250\n251 252\n253 254\n255 256\n257 258\n259 260\n261 262\n263 264\n265 266\n267 268\n269 270\n271 272\n273 274\n275 276\n277 278\n279 280\n281 282\n283 284\n285 286\n287 288\n289 290\n291 292\n293 294\n295 296\n297 298\n299 300\n301 302\n303 304\n305 306\n307 308\n309 310\n311 312\n313 314\n315 316\n317 318\n319 320\n321 322\n323 324\n325 326\n327 328\n329 330\n331 332\n333 334\n335 336\n337 338\n339 340\n341 342\n343 344\n345 346\n347 348\n349 350\n351 352\n353 354\n355 356\n357 358\n359 360\n361 362\n363 364\n365 366\n367 368\n369 370\n371 372\n373 374\n375 376\n377 378\n379 380\n381 381\n383 382\n385 386\n387 388\n389 390\n391 392\n393 394\n395 396\n397 398\n399 400\n401 402\n403 404\n405 406\n407 408\n409 410\n411 412\n413 414\n415 416\n417 418\n419 420\n421 422\n423 424\n425 426\n427 428\n429 430\n431 432\n433 434\n435 436\n437 438\n439 440\n441 442\n443 444\n445 446\n447 448\n449 450\n451 452\n453 454\n455 456\n457 458\n459 460\n461 462\n463 464\n465 466\n467 468\n469 470\n471 472\n473 474\n475 476\n477 478\n479 480\n481 482\n483 484\n485 486\n487 488\n489 490\n491 492\n493 494\n495 496\n497 498\n499 500\n501 502\n503 504\n505 506\n507 508\n509 510\n511 512\n513 514\n515 516\n517 518\n519 520\n521 522\n523 524\n525 526\n527 528\n529 530\n531 532\n533 534\n535 536\n537 538\n539 540\n541 542\n543 544\n545 546\n547 548\n549 550\n551 552\n553 554\n555 556\n557 558\n559 560\n561 562\n563 564\n565 566\n567 568\n569 570\n571 572\n573 574\n575 576\n577 578\n579 580\n581 582\n583 584\n585 586\n587 588\n589 590\n591 592\n593 594\n595 596\n597 598\n599 600\n601 602\n603 604\n605 606\n607 608\n609 610\n611 612\n613 614\n615 616\n617 618\n619 620\n621 622\n623 624\n625 626\n627 628\n629 630\n631 632\n633 634\n635 636\n637 638\n639 640\n641 642\n643 644\n645 646\n647 648\n649 650\n651 652\n653 654\n655 656\n657 658\n659 660\n661 662\n663 664\n665 666\n667 668\n669 670\n671 672\n673 674\n675 676\n677 678\n679 680\n681 682\n683 684\n685 686\n687 688\n689 690\n691 692\n693 694\n695 696\n697 698\n699 700\n701 702\n703 704\n705 706\n707 708\n709 710\n711 712\n713 714\n715 716\n717 718\n719 720\n721 722\n723 724\n725 726\n727 728\n729 730\n731 732\n733 734\n735 736\n737 738\n739 740\n741 742\n743 744\n745 746\n747 747\n749 750\n751 752\n753 754\n755 756\n757 758\n759 760\n761 762\n763 764\n765 766\n767 768\n769 770\n771 772\n773 774\n775 776\n777 778\n779 780\n781 782\n783 784\n785 786\n787 788\n789 790\n791 792\n793 794\n795 796\n797 798\n799 800\n801 802\n803 704\n805 706\n807 708\n809 710\n811 712\n813 714\n815 716\n817 718\n819 720\n821 722\n823 724\n825 726\n827 728\n829 730\n831 732\n833 734\n835 736\n837 737\n839 738\n841 740\n843 742\n845 744\n847 746\n849 750\n851 752\n853 754\n855 756\n857 758\n859 760\n861 762\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\") == \"2\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2 5') == \"4\"\nassert solution('10 3 10') == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n1 2 3') == '1\\n1\\n2\\n'\nassert solution('3 4 5\\n2 4 5') == '3\\n5\\n'\nassert solution('10 3 10\\n1 2 3') == '5\\n'"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2 5') == \"4\"\nassert solution('10 3 10') == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '7 2 5\\n'\n    '7\\n'\n    '7\\n'\n    '10 3 10\\n'\n    '10\\n'\n    '10\\n'\n    ) == '4'\nassert solution(\n    '10 3 10\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    '7\\n'\n    "
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 2 5\n''') == '4'\nassert solution('''\n10 3 10\n''') == '5'\nassert solution('''\n6 5 10\n''') == '6'\nassert solution('''\n3 3 3\n''') == '0'\nprint('Congratulations, have a nice day!')\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2 3\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 2 5\n''') == '4'\nassert solution('''\n10 3 10\n''') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n''') == '2'\nassert solution('''4 4\n1 2\n1 3\n1 4\n3 4\n''') == '1'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5''') == '2'\nassert solution('''4 4\n1 2\n1 3\n1 4\n3 4''') == '1'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"2\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5''') == \"2\"\nassert solution('''4 4\n1 2\n1 3\n1 4\n3 4''') == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n\n''') == '2'\n\nassert solution('''4 4\n1 2\n1 3\n1 4\n3 4\n\n''') == '1'\n\nassert solution('''5 5\n1 2\n1 3\n1 4\n2 3\n2 5\n\n''') == '1'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"2\"\nassert solution(\"4 4\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '2'\nassert solution('4 4') == '1'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5''') == '2'\nassert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n5 6''') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 4\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"2 5\\n\"\n    \"3 4\\n\"\n    \"4 5\\n\"\n) == \"1 2 3 4 5\"\n\nassert solution(\n    \"5 5\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 4\\n\"\n    \"2 3\\n\"\n    \"2 4\\n\"\n    \"3 4\\n\"\n    \"3 5\\n\"\n) == \"1 2 3 4 5\"\n\nassert solution(\n    \"6 6\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 4\\n\"\n    \"1 5\\n\"\n    \"2 3\\n\"\n    \"2 4\\n\"\n    \"2 5\\n\"\n    \"3 4\\n\"\n    \"3 5\\n\"\n    \"4 5\\n\"\n) == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n75 150 75 50\\n') == 'Yes'\nassert solution('3\\n100 150 250\\n') == 'No'\nassert solution('6\\n3 4 5 6 7\\n') == 'No'"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n75 150 75 50\n\n''') == 'Yes'\nassert solution('''\n3\n100 150 250\n\n''') == 'No'\nassert solution('''\n10\n70 30 20 40 50 40 50 50 20 40\n\n''') == 'Yes'"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n75 150 75 50\n\n''') == 'Yes'\nassert solution('''\n3\n100 150 250\n\n''') == 'No'\n\n'''\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n75 150 75 50\n''') == 'Yes'\n\nassert solution('''3\n100 150 250\n''') == 'No'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n75 150 75 50\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n3\n100 150 250\n\"\"\") == \"No\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_sample_1) == \"Yes\", \"1st sample\"\nassert solution(input_sample_2) == \"No\", \"2nd sample\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'No'\n'''"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '150'\nassert solution(input(':')) == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '150'\nassert solution('2') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n-1 -2 -3 -4 -5''') == '150'\nassert solution('''5\n-1 -2 -3 -4 -5''') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '150'\nassert solution() == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n50 50 50\n''') == '150'\nassert solution('''\n2\n-1 -100 -1\n''') == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([50, 50, 50]) == '150'\nassert solution([-1, -100, -1]) == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '150'\nassert solution('2') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n50 50 50\n''') == '150'\nassert solution('''\n2\n-1 -100 -1\n''') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n50 50 50\n''') == '150'\nassert solution('''\n2\n-1 -100 -1\n''') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '150'\nassert solution('2') == '100'\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == 4\nassert solution('2 8') == 1\nassert solution('6 2') == 0\n\nprint(solution(sys.stdin.read()))"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5\nab a\ncc c\nca a\nee c\nff d''') == '4'\nassert solution('''2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c''') == '1'\nassert solution('''6 2\nbb a\nba a''') == '0'\nassert solution('''2 3\nbb a\naa a''') == '0'\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2 5\nab a\ncc c\nca a\nee c\nff d\n\"\"\") == \"4\"\n\nassert solution(\"\"\"6 2\nbb a\nba a\n\"\"\") == \"0\"\n\nassert solution(\"\"\"6 2\nbb a\nba a\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == 4\nassert solution('2 8') == 1\nassert solution('6 2') == 0\nprint(solution(input()))\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(t) == '1'\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2') == '1'\nassert solution('3 5') == '4'\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '4'\nassert solution('2 8') == '1'\nassert solution('6 2') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"2 8\") == \"1\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"2\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 1\naa aa\ncc c\naa a\nbb b\n''') == \"6\"\nassert solution('''6 2\naa ee\ndc d\ncc ff\nbb bb\ndd d\n''') == \"1\"\nassert solution('''5 2\ncc a\nbb b\nff c\n''') == \"0\"\nassert solution('''6 5\naa ee\ndc d\ncc ff\nbb bb\ndd d\n''') == \"4\"\nassert solution('''6 1\naa aa\n''') == \"0\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '4'\nassert solution('6 2') == '1'\nassert solution('3 5') == '4'\nassert solution('6 2') == '1'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n\n4\n\n5\n\n3\n\n''') == '3'\n\nassert solution('''1\n\n3\n\n4\n\n''') == '1'\n\nassert solution('''5\n\n4\n\n3\n\n''') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n\n\"\"\"\nimport math\n\nn = int(input())\n\nres = 0\nfor i in range(1, n + 1):\n    res += math.factorial(i) / (math.factorial(i - 1) * math.factorial(i - 2))\n\nprint(int(res % 1000000007))\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution('''2\n2\n2\n''') == '3'\nassert solution('''3\n3\n3\n''') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\"\nassert solution(\"4\") == \"6\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1\n''') == '1'\nassert solution('''3\n2\n''') == '3'\nassert solution('''3\n4\n''') == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\"\n\n\"\"\""
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '3\\n'\nassert solution('3\\n') == '10\\n'"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'\n\"\"\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 1') == '1.000000000000'\nassert solution('4 1') == '1.250000000000'\n'''"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == '1.000000000000'\nassert solution(\"1 3\") == '-1.000000000000'\nassert solution(\"4 1\") == '1.250000000000'"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.25'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'\n\n\"\"\"\nimport math"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1.000000000000'\nassert solution('3 1') == '-1'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 1\n''') == '1.250000000000'\nassert solution('''\n3 1\n''') == '1.000000000000'\nassert solution('''\n1 3\n''') == '-1'\nassert solution('''\n1 1\n''') == '1'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == '1.000000000000'\nassert solution(\"1 3\") == '-1'\nassert solution(\"4 1\") == '1.250000000000'\n\"\"\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"10.0000000000\""
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4\\n3 4 1\\n2 5 3\\n\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 2\\n2 3\") == \"-1\""
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '10.0000000000'\nassert solution('3') == '85.4800000000'\nassert solution('6') == '-1'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n11 8\n7 5\n''') == '10.0000000000'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n12\n11 8\n7 5\n''') == '10.0000000000'\n\nassert solution('''3\n1\n1 4 1\n2 5 3\n''') == '-1'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '10.0000000000'\nassert solution('3') == '-1'"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n3\n2 6 3\n2 6 3\n\n''') == '-1'\nassert solution('''3\n1\n1 4 1\n2 5 3\n\n''') == '10.0000000000'\nassert solution('''6\n2\n4 6 3 3 5 6\n2 6 3 6 5 3\n\n''') == '85.4800000000'\nassert solution('''10\n2\n4 6 3 3 5 6\n2 6 3 6 5 3\n\n''') == '10.0000000000'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '10.0000000000'"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '10.0000000000'\n\n\u0414\u0430\u043d\u0430 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u0430\u044f \u043c\u0430\u0442\u0440\u0438\u0446\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438 N\u00d7N. \u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u0440\u0430\u0442\u043d\u044b\u0445 \u043a \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0438\u0437 \u0441\u0435\u0431\u044f \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0440\u043e\u0434\u0430. \u0422\u0430\u043a \u0436\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u0432\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430.\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u041d\u0430 \u0432\u044b\u0445\u043e\u0434 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u0447\u0438\u0441\u043b\u043e\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u044b, \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438 N\u00d7N, \u0433\u0434\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0432\u0441\u0435\u0433\u0434\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u044b. \u0422\u0430\u043a\u0436\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u0440\u0430\u0442\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438 N. \u0412\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c. \u0412\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u0440\u0430\u0442\u043d\u044b \u043a \u043d\u043e\u043c\u0435\u0440\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435. \u0414\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"10.0000000000\"\n\nInput\n2\n1\n1 4 1\n2 5 3\n\nOutput\n-1\n\nInput\n3\n1\n1 4 1\n2 5 3\n\nOutput\n85.4800000000\n\nInput\n6\n2\n4 6 3 3 5 6\n2 6 3 6 5 3\n\nOutput\n85.4800000000\n\nInput\n6\n1\n1 4 1\n2 5 3\n\nOutput\n-1\n\"\"\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'\nassert solution('1234567890') == '1278547530'\nassert solution('1234567890') == '1278547530'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n''') == '0'\nassert solution('''10\n''') == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n''') == '0'\nassert solution('''\n    10\n''') == '4'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == 0\nassert solution(\"10\") == 4\n\"\"\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n''') == '0'\nassert solution('''\n10\n''') == '4'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n''') == '1'\nassert solution('''\n5\n''') == '4'\nassert solution('''\n6\n''') == '4'\nassert solution('''\n7\n''') == '0'\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n1 2\n1 111111111111''') == 'Wh'\n\nassert solution('''5\n0 69\n1 194\n1 139\n0 47\n1 66''') == 'abdef'\n\nassert solution('''10\n4 1825\n3 75\n3 530\n4 1829\n4 1651\n3 187\n4 584\n4 255\n4 774\n2 474''') == 'Areyoubusy'\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'abdef'\n\n'''\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"Wh\"\nassert solution(\"3 1\") == \"abdef\"\nassert solution(\"5 4\") == \"Areyoubusy\"\nassert solution(\"10 1\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"5 2\") == \"Wh.\"\n\n\n\"\"\"\nimport math"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"Wh. What are you doing while sending Wh. What are you doing at the end of the world? Are you busy? Will you save us?\") == \"Wh. What are you doing while sending Wh. What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"What are you doing while sending Wh. What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending Wh. What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"Wh. What are you doing while sending Wh. What are you doing at the end of the world? Are you busy? Will you save us?\") == \"Wh. What are you doing while sending Wh. What are you doing at the end of the world? Are you busy? Will you save us?\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'Areyoubusy'\nassert solution('1 111111111111') == 'abdef'\nassert solution('5 0') == 'Wh'\nassert solution('5 1') == 'abdef'\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'abdef'\nassert solution('1 111111111111') == 'Areyoubusy'\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 1\n1 2\n1 111111111111\n\"\"\") == 'Wh.'\nassert solution(\"\"\"\n5 0\n0 69\n1 194\n1 139\n0 47\n1 66\n\"\"\") == 'abdef'\nassert solution(\"\"\"\n10 4\n4 1825\n3 75\n3 530\n4 1829\n4 1651\n3 187\n4 584\n4 255\n4 774\n2 474\n\"\"\") == 'Areyoubusy'"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'Areyoubusy'\nassert solution('1 111111111111') == 'Areyoubusy'\n\n\"\"\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Wh\"\nassert solution(\"1 2\") == \"a\"\nassert solution(\"1 111111111111\") == \"Wh\""
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 1\n1 2\n1 111111111111\"\"\") == \"Wh\"\n\nassert solution(\"\"\"5 0\n0 69\n1 194\n1 139\n0 47\n1 66\n\nInput\n10\n4 1825\n3 75\n3 530\n4 1829\n4 1651\n3 187\n4 584\n4 255\n4 774\n2 474\n\nOutput\nAreyoubusy\"\"\") == \"Areyoubusy\""
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? +? = 1') == 'Impossible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''? +? -? +? = 42\n''') == 'Possible'\nassert solution('''? -? = 1\n''') == 'Impossible'\nassert solution('''? = 1000000\n''') == 'Possible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n? +? -? +? = 42\n''') == 'Possible'\nassert solution('''\n? -? = 1\n''') == 'Impossible'\nassert solution('''\n? = 1000000\n''') == 'Possible'\nassert solution('''\n? = 1000000 + 1 + 1000000 - 1000000\n''') == 'Possible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n? +? -? +? = 42\n''') == 'Possible'\nassert solution('''\n? +? = 1\n''') == 'Impossible'\nassert solution('''\n? = 1000000\n''') == 'Possible'\nprint(solution(input()))\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'Possible'\nassert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? +? -? +? +? = n') == 'Possible'\nassert solution('? +? -? +? = 42') == 'Impossible'\nassert solution('? -? = 1') == 'Impossible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'Impossible'\nassert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('? +? -? +? = n') == \"Possible\"\nassert solution('? +? = 1') == \"Impossible\"\nassert solution('? = 1000000') == \"Possible\"\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('? +? -? +? = n') == \"Possible\"\nassert solution('? +? -? +? = n')!= \"Impossible\"\nprint(solution(input()))"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"7 4 5\"\nassert solution(\"1 2 0 2\") == \"7 4 5\"\nassert solution(\"0\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n1 2 0 2\n0\n0\n0\n\n\"\"\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"7 4 5\"\nassert solution(\"5\") == \"7 4 5\"\nassert solution(\"1\") == \"7 4 5\"\nassert solution(\"12\") == \"7 4 5\"\nassert solution(\"2\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '7 4 5'\nassert solution('5') == '7 5 4 1'\nassert solution('8') == '7 8 5 0 2'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 0 2\n0 1 2 0\n0 2 0 1\n0 1 2 0\n1 2 0 2\n''') == '7 4 5'"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 0 2\\n0\\n0') == '7 4 5'\nassert solution('5\\n1 2 0 2\\n0\\n0\\n0\\n1') == '7 4 5'\nassert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n1') == '7 4 5'\nassert solution('5\\n1 2 0 2\\n0\\n0\\n0\\n1\\n2') == '7 4 5'\nassert solution('5\\n1 2 0 2\\n0\\n0\\n0\\n1\\n2\\n0') == '7 4 5'"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '7 4 5'\nassert solution('4') == '7 4 5'"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5'"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"7 4 5\"\nassert solution(\"6\") == \"8 8 7 7 7 6\"\n\"\"\""
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\nabc\n\"\"\") == \"Yes\"\nassert solution(\n\"\"\"\n5\naabddc\n\"\"\") == \"No\"\nassert solution(\n\"\"\"\n3\nabc\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'No'\nassert solution('5') == 'Yes'\nassert solution('6') == 'Yes'\nassert solution('10') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == 'Yes'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'Yes'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nabc') == 'Yes'\nassert solution('3\\njjj') == 'No'\nassert solution('4\\nabab') == 'Yes'\nassert solution('4\\njkjk') == 'Yes'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nabc') == 'Yes'\nassert solution('2\\nbbbbbc') == 'Yes'\nassert solution('3\\naaaaaac') == 'Yes'\nassert solution('4\\nbbbbbbc') == 'No'\nassert solution('5\\nccccbbb') == 'Yes'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nabc\") == \"No\"\nassert solution(\"4\\nabc\") == \"Yes\"\nassert solution(\"5\\nabc\") == \"Yes\"\nassert solution(\"6\\nabc\") == \"Yes\"\nassert solution(\"7\\nabc\") == \"Yes\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5 2\\n') == '54\\n'\nassert solution(\n    '7 4\\n') == '1728\\n'\nassert solution(\n    '30 30\\n') == '0\\n'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"6\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '54'\nassert solution('1 2 3') == '54'\nassert solution('1 2 3 4') == '54'\nassert solution('1 2 3 4 5') == '54'\nassert solution('1 2 3 4 5 6') == '54'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"54\"\nassert solution(input) == \"54\"\nassert solution() == \"54\"\nassert solution(input) == \"54\"\nassert solution(input) == \"54\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '54'\nassert solution('5 2') == '54'\nassert solution('7 4') == '1728'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"54\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '2 4'\nassert solution('3 3') == '2 1'\nassert solution('5 5') == '1 1'\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '4 5\\n'\n    'WWWWW\\n'\n    'WWWWW\\n'\n    'WWWWW\\n'\n    'WWWWW\\n'\n    'WWWWW\\n') == '2 4'\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '2 4'\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"2 4\"\nassert solution(\"3 3\") == \"2 1\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '2 4'\nassert solution('''\n5 5\nWWW\nWWW\nWWW\nWWW\nWWW\n''') == '2 5'\n\n'''\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"2 4\"\nassert solution(\"3 3\") == \"2 1\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    4 3\n    WBWBWB\n    WBWBWB\n    WBWBWB\n    WBWBWB\n''') == '2 3'\nassert solution('''\n    5 6\n    WWBBBW\n    WWBBBW\n    WWBBBW\n    WWBBBW\n    WWBBBW\n''') == '2 4'\nassert solution('''\n    5 6\n    WWWWWW\n    WWWWWW\n    WWWWWW\n    WWWWWW\n    WWWWWW\n''') == '2 1'\nassert solution('''\n    10 10\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n    WWWWWWWWWWWWWWWWWW\n''') == '3 1'\nassert solution('''\n    5 5\n    WBWBWBWB\n    WWWWWWWW\n    WBWBWBWB\n    WBWBWBWB\n    WBWBWBWB\n''') == '2 3'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7\") == \"10 9 10 10 9\"\nassert solution(\"2 3\") == \"5 6\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == \"5 6\"\nassert solution('5 3') == \"10 9 10 10 9\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 7\") == \"10 9 10 10 9\"\nassert solution(\"2 3\") == \"5 6\"\nassert solution(\"5 3\") == \"5 6\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '5 6'\nassert solution('5 7') == '10 9 10 10 9'\nassert solution('2 3') == '5 6'\nassert solution('5 1') == '10 9 10 10 9'\nassert solution('5 1') == '10 9 10 10 9'"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7') == '10 9 10 10 9 \nassert solution('2 3') == '5 6'\nassert solution('3 5') == '3 6'\nassert solution('4 1') == '4 7'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9'"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7\") == \"10 9 10 10 9?\"\nassert solution(\"2 3\") == \"5 6?\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"10 9 10 10 9\"\nprint(solution(input_))\n\"\"\"\nfrom math import inf as infinity\nfrom collections import deque\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9'\nassert solution('''\n2 3\n1 2\n1 2\n1 2\n''') == '5 6'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7') == '10 9 10 10 9'\nassert solution('2 3') == '5 6'"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"-1 -1\") == \"2\"\nassert solution(\"2\") == \"0\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 0 0\") == \"1\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == '2'"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n4\") == \"1\"\nassert solution(\"1 1\\n-1 -1\\n0\") == \"1\"\nassert solution(\"1 1\\n-1 -1\\n0\") == \"1\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '2'\nassert solution('-1 -1') == '2'\nassert solution('2') == '2'\nassert solution('0 1') == '2'\nassert solution('1 0') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '2'\nassert solution('-1 -1') == '2'\nassert solution('2') == '2'\nassert solution('0 1') == '1'\nassert solution('1 0 0') == '1'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n-1 -1''') == '2'\nassert solution('''1 1\n-1 -1\n2''') == '2'\nassert solution('''1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 0 0''') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n-1 -1\\n2') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n0 0 0') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 1 -3') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n0 0 0\\n1 0 0\\n1 1 -3\") == \"2\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n3 4\\n') == 'Kevin'\nassert solution('1 2\\n3\\n') == 'Nicky'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"Kevin\"\nassert solution(\"1 2\") == \"Nicky\"\nprint(solution(input()))\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == \"Kevin\"\nassert solution('2 2') == \"Nicky\"\nassert solution('1 3') == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n1 2\n3\n''') == 'Nicky'\nassert solution(\n'''\n1 1\n3\n''') == 'Kevin'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"Kevin\"\nassert solution(\"1 3\") == \"Nicky\"\nassert solution(\"5 2\") == \"Nicky\"\nassert solution(\"5 7\") == \"Kevin\"\nassert solution(\"10 1\") == \"Kevin\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"Kevin\"\nassert solution(\"1 2\") == \"Nicky\"\nassert solution(\"3 3\") == \"Kevin\"\nassert solution(\"2 1\") == \"Kevin\"\nassert solution(\"3 4\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'Nicky'\nassert solution('2 2') == 'Kevin'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'Kevin'\nassert solution('1 2') == 'Nicky'\nassert solution('2 1') == 'Kevin'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'Kevin'\nassert solution('1 1') == 'Nicky'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'\nassert solution('10 4\\n1 3 4 5 6 7 8 9 10 11') == 'Kevin'\nassert solution('10 4\\n1 3 4 5 6 7 8 9 10 11') == 'Nicky'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n') == '3\\n1 2 3\\n1 2 3\\n'\nassert solution('3\\n2 2 2\\n') == '1\\n1 1 1\\n2\\n'\nassert solution('2\\n2 1\\n') == '1\\n1 1 1\\n2\\n'\n\n\"\"\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2 1'\nassert solution() == '-1'"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('0') == '-1'\nprint(solution(input()))\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution() == '1 2 2'\nassert solution() == '1 2 3'\nassert solution() == '1 2 2 2'\nassert solution() == '1 2 2 2 2'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('3 2') == '1 2 3'\nassert solution('3 1') == '-1'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('2 1') == '1 2 1'\nassert solution('2 2 2') == '2 2 2'\nassert solution('0') == '-1'\nassert solution('1') == '1'\nprint('\"Run\" is the best')"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution(\"2 1\\n2 1\\n\") == \"2\"\nassert solution(\"2 2\\n2 1\\n\") == \"1\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n1 2 3\n\n\"\"\") == \"1 2 3\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n1 2\\n2 2 2\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2 2 2\\n') == '1 1 1\\n2'\nassert solution('1\\n1 2\\n') == '2'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('111') == '2'\nassert solution('00') == '2'\nassert solution('0') == '1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0') == '1'\nassert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '6'\nassert solution('00') == '1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '11',\n    \"8\"\n) == \"6\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n11\n''') == '6'\nassert solution('''\n1\n''') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '6'\nassert solution('01') == '2'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == \"1\"\nassert solution('11') == \"6\"\nassert solution('01') == \"2\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '4'\nassert solution('2') == '3'\nassert solution('15') == '1'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == \"3\"\nassert solution('1 1 2') == \"1\"\nassert solution('2') == \"4\"\nassert solution('3') == \"4\"\nassert solution('4') == \"6\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n1 1 2\n\"\"\") == \"\"\"3\"\"\"\nassert solution(\"\"\"\n1\n15\n\"\"\") == \"\"\"1\"\"\"\nassert solution(\"\"\"\n2\n5 7\n\"\"\") == \"\"\"4\"\"\"\nassert solution(\"\"\"\n3\n10 9 9\n\"\"\") == \"\"\"5\"\"\"\nassert solution(\"\"\"\n4\n1 1 1 1\n\"\"\") == \"\"\"3\"\"\""
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n\n1\n\n15\n\n''') == '1'\nassert solution('''\n\n3\n\n1 1 2\n\n''') == '3'\nassert solution('''\n\n2\n\n5 7\n\n''') == '4'\n\n'''\n\n\nfrom collections import Counter, defaultdict\nimport math\nimport unittest\nimport functools\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '2'"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '4'\nassert solution('3\\n') == '3'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"4\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '2'\nassert solution(\"4\") == '3'\nassert solution(\"5\") == '4'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 0') == \"YES\"\nassert solution('2 0 1') == \"YES\"\nassert solution('4 0 1 2') == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 0 2') == 'YES'\nassert solution('2 0 1') == 'YES'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 0 2\n2 0 1\n\n''') == 'YES', 'Should arrange the statues'\nassert solution('''\n4\n1 2 3 0\n0 3 2 1\n\n''') == 'NO', 'Should not arrange the statues'\nassert solution('''\n5\n1 3 2 4\n0 2 1 3\n\n''') == 'YES', 'Should arrange the statues'\nassert solution('''\n6\n1 2 3 4 5\n0 3 1 5 2\n\n''') == 'NO', 'Should not arrange the statues'\nassert solution('''\n7\n1 3 2 4 5 6\n0 3 1 5 2 6\n\n''') == 'YES', 'Should arrange the statues'\n'''\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n1 0 2\n2 0 1\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n4\n1 2 3 0\n0 3 2 1\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n2\n1 0\n0 1\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == 'YES'\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == 'NO'\nassert solution(\"5\\n1 2 3 0\\n0 3 2 1\\n4 5 6 7\\n6 7 5 4\\n\") == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'YES'\nassert solution('4') == 'NO'\nassert solution('1') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0 2\\n0 1\") == \"YES\"\nassert solution(\"2\\n0 1\\n0 1\") == \"YES\"\nassert solution(\"3\\n1 2 3 0\\n0 3 2 1\") == \"NO\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\") == \"YES\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_1) == 'YES'\nassert solution(input_2) == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 2') == 'YES'\nassert solution('2 0 1') == 'YES'\nassert solution('4 1 2 3 0') == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 0') == 'YES'\nassert solution('2 0 1') == 'YES'\nassert solution('3 0 2') == 'NO'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '9000'\nassert solution('6') == '1160'\nassert solution('8') == '9000'\nassert solution('8') == '1160'\nassert solution('10') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1') == '9000'\nassert solution('6\\n8 10 9 9 8 10\\n1 10 5 5 1 10') == '1160'\nassert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1') == '9000'\nassert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1') == '9000'\nassert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1') == '9000'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '9000'\nassert solution('6') == '1160'\nassert solution('2') == '1160'"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 5 10 5 1 10\\n\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 5 5 1 1 10\\n\") == \"1160\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 5 5 1 1 10\\n\") == \"1160\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"9000\"\nassert solution(\"6\") == \"1160\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10''') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"9000\"\nassert solution(\"6\") == \"1160\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n\"\"\") == \"1160\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"9000\"\nassert solution(\"6\") == \"1160\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '6'\nassert solution('8 6') == '1'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"8 6\") == \"1\"\n\nstdin = \"\"\"4 2\n2 3\n1 4\n1 4\n2 1\n\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 2\n2 3\n1 4\n1 4\n2 1''') == '6'\nassert solution('''8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4''') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n2 3\n1 4\n1 4\n2 1''') == '6'\nassert solution('''8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4''') == '1'\nassert solution('''10 6\n7 8\n1 9\n1 8\n1 9\n1 8\n1 9\n1 7\n1 6\n1 5\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('4 2') == '6'\nassert solution('8 6') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '6'\nassert solution('8 6') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 2\n1 3\n''') == '1'\nassert solution('''4 2\n2 3\n1 4\n1 4\n2 1\n''') == '6'\nassert solution('''8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4\n\n''') == '1'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 6') == '1'\nassert solution('4 2') == '6'\nassert solution('3 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 4') == '1'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 3\\n1 4\\n2 1') == '1'\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4') == '1'\nassert solution('5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4') == '0'\nassert solution('2 3\\n1 4\\n1 4\\n2 1') == '2'\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4') == '0'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\") == \"6\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\""
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"-1\""
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"-1\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 2 3 4 6\n''') == '5'\nassert solution('''\n4\n2 4 6 8\n''') == '-1'\nassert solution('''\n3\n2 6 9\n''') == '4'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '-1'"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n2 2 3 4 6\n''') == '5'\nassert solution('''4\n2 4 6 8\n''') == '-1'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4, 6, 9]) == \"4\"\nassert solution([2, 4, 6, 8]) == \"5\"\nassert solution([3, 2, 3, 4, 6]) == \"5\"\nassert solution([2, 6, 9]) == \"0\""
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"4\""
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n3\n2 6 9\n''') == '-1'\nassert solution('''5\n2 2 3 4 6\n''') == '5'\nassert solution('''3\n2 4 6\n''') == '4'\nassert solution('''4\n2 4 6\n''') == '-1'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '-1'\nassert solution('4') == '4'\nassert solution('6') == '5'"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 2 3 4 6\n''') == '5'\n\nassert solution('''4\n2 4 6 8\n''') == '-1'\n\nassert solution('''3\n2 6 9\n''') == '4'"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\n\n'''\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abacabaca\") == \"3\"\nassert solution(\"abaca\") == \"0\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\n\n'''\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abacabaca\") == \"3\"\nassert solution(\"abaca\") == \"0\"\nassert solution(\"ab\") == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abacabaca\") == \"3\"\nassert solution(\"abaca\") == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''abc''') == '0'\nassert solution('''abacabaca''') == '3'\nassert solution('''abaca''') == '0'\nassert solution('''abacabaca''') == '3'\nassert solution('''abacacaca''') == '2'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abacabaca\") == \"3\"\nassert solution(\"abaca\") == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''abacabaca''') == '3'\nassert solution('''abaca''') == '0'\nassert solution('''abacaba''') == '0'\nassert solution('''abacabaacabaca''') == '3'\nassert solution('''abacabaacaacabaca''') == '5'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n111221\\n.##22\\n#333\\n') == '2'\nassert solution('5 5\\n111221\\n#.##22\\n#333\\n') == '-1'\nassert solution('5 5\\n111221\\n#.##22\\n#33.32\\n') == '-1'\nassert solution('5 5\\n111221\\n#.##22\\n#.##33\\n') == '-1'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5\\n11..2\\n#.323') == '-1'\nassert solution('2 5\\n1#2#3\\n11#') == '2'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1#2#3\\n11..2\\n#..22\\n#.323\") == \"2\""
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 5\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n\n------Input-----\n\n4 5\n11..2\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 1') == '-1'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 5\n11#2\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2\\n1#2#3\\n') == '1'\nassert solution('3 3\\n12#5#6\\n2#4#5\\n3#1#2\\n') == '2'\nassert solution('4 4\\n1#3#2\\n3#4#5\\n2#1#2\\n') == '-1'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n') == '1'\nassert solution('10\\n') == '2'\nassert solution('9\\n') == '-1'\nassert solution('10\\n') == '-1'\nassert solution('13\\n') == '2'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 6\n#####\n##.##\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '-1'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '6'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n))((\n\n''') == '6'\nassert solution('''\n7\n(((\n\n''') == '-1'\nassert solution('''\n8\n))((\n\n''') == '-1'\nassert solution('''\n6\n)()\n\n''') == '6'\nassert solution('''\n7\n)()(\n\n''') == '-1'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"9\") == \"0\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n()((())(\") == \"6\"\nassert solution(\"3\\n(()\") == \"-1\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n(()\\n') == '-1'\nassert solution('2\\n()()\\n') == '6'\nassert solution('1\\n()\\n') == '0'\nassert solution('8\\n))((())(\\n') == '6'\nassert solution('8\\n))((())(\\n') == '6'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n(())\") == \"6\"\nassert solution(\"10\\n)()()(()()()(())\") == \"14\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n8 8 8\n1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2\n3 3 3 3 3 3 3 3\n4 4 4 4 4 4 4 4\n5 5 5 5 5 5 5 5\n6 6 6 6 6 6 6 6\n7 7 7 7 7 7 7 7\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n7 7 7 7 7 7 7 7\n1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2\n3 3 3 3 3 3 3 3\n4 4 4 4 4 4 4 4\n5 5 5 5 5 5 5 5\n6 6 6 6 6 6 6 6\n7 7 7 7 7 7 7 7\n\"\"\") == \"7\""
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 5') == '2'\nassert solution('4 5 4') == '1'\nassert solution('3 5 4') == '3'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('4 5 4') == '3'\nassert solution('3 3 3') == '3'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"4 5 4\") == \"1\"\nassert solution(\"3 3 3\") == \"2\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"4 4 4\") == \"1\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '1'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('4 5 4') == '4'\nassert solution('4 5 4') == '1'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 5\n4 4 0\n1 3\n3 2\n3 1\n\n''') == '1', 'First test fail'\nassert solution('''\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\n''') == '4', 'Second test fail'\nassert solution('''\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\n''') == '1', 'Third test fail'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('4 5 4') == '3'\nassert solution('4 5 4') == '4'"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('4 5 4') == '2'\nassert solution('5 5 4') == '4'"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 4\\n4 2\\n2 1') == '2'\nassert solution('4 5 4\\n2 1 0 3\\n3 2') == '3'\nassert solution('3 5 4\\n1 2 0 3\\n3 2') == '4'\nassert solution('4 5 4\\n2 1 0 3\\n1 2') == '4'\nassert solution('4 5 4\\n2 1 0 3\\n3 2') == '3'\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\n') == '8'\nassert solution('1 1\\n') == '1'\nassert solution('2 3\\n') == '8'\nassert solution('3 3\\n') == '5'\nassert solution('4 6\\n') == '4'\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '8'\n'''"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n') == '8'\n\"\"\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == 8\nassert solution(\"3 4\") == 8\n\n\"\"\""
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"8\"\n\"\"\"\n\nn, m = list(map(int, input().split()))\n\nn = n + 1\nm = m + 1\ncount = 0\n\nfor i in range(0, n):\n    for j in range(0, m):\n        if i == 0:\n            if j == 0:\n                if j == 1:\n                    if i == 1:\n                        count += 1\n                else:\n                    count += 4\n            else:\n                if i == 1:\n                    if j == 0:\n                        count += 1\n                else:\n                    count += 2\n        elif j == 0:\n            if i == 1:\n                if j == 1:\n                    if i == 2:\n                        count += 1\n                else:\n                    count += 4\n            else:\n                count += 3\n        elif i == 1:\n            if j == 0:\n                if j == 1:\n                    if j == 2:\n                        count += 1\n                else:\n                    count += 4\n            else:\n                if j == 1:\n                    count += 3\n                else:\n                    count += 2\n        else:\n            count += 4\n\nprint(count % (10**9 + 7))\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3\n2\n''') == 8\nassert solution('''\n7\n9\n4\n''') == 41\nassert solution('''\n10\n10\n5\n''') == 8\nassert solution('''\n1\n1\n3\n''') == 1\nassert solution('''\n3\n3\n3\n''') == 10\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"8\"\nassert solution(input()) == \"0\"\n\n'''\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n') == '8'\nassert solution('2 5\\n') == '20'\nassert solution('5 2\\n') == '5'\nassert solution('3 3\\n') == '0'\nassert solution('1 1\\n') == '1'\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == 8, solution('2 3')\nassert solution('6 5') == 12, solution('6 5')\nassert solution('100 100') == 130559401, solution('100 100')\nassert solution('1 1') == 1, solution('1 1')\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == 8\n\"\"\""
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n1 2\n2 3\n''') == '5'\nassert solution('''\n1 2\n2 1\n3 1\n''') == '4'\nassert solution('''\n100 3\n1 2\n2 1\n3 1\n''') == '100'"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\"\nassert solution([1, 2]) == \"5\"\nassert solution([1, 1]) == \"4\"\nassert solution([2, 1]) == \"1\"\nassert solution([2, 100]) == \"101\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n1 2\n2 3\n''') == '5'\nassert solution('''\n1 2\n2 1\n3 1\n''') == '4'\nassert solution('''\n1 2\n1 1\n2 100\n''') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n1 2\n2 3\n''') == '5'\n\nassert solution('''\n1 2\n2 1\n3 1\n''') == '4'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '4'\n\nassert solution(input()) == '100'"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\nassert solution() == \"4\"\nassert solution() == \"100\"\nassert solution() == \"0\"\n\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n7. \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0447\u0438\u0441\u0435\u043b \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0447\u0438\u0441\u043b\u0430. \u041a\u0430\u0436\u0434\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u0442\u043e \u0435\u0441\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c \u043e\u0442 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435. \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0439 \u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u0442\u044c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043e\u0431 \u044d\u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435. \u0415\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0432 \u044d\u0442\u043e\u043c \u0441\u043f\u0438\u0441\u043a\u0435.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0432\u043e\u0434\u0430\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442\u0441\u044f \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n (2 \u2264 n \u2264 1000) \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 n \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f n \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u2014 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u0437\u0430\u0434\u0430\u0447\u0443.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0432\u043e\u0434\u0430\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u2014 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0442 \u0432\u0441\u0435\u0445 \u0447\u0438\u0441\u0435\u043b \u0438\u0437 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f\n1. \u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u043d\u0435\u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c.\n2. \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n2\n3\n3\n4\n\u0412\u044b\u0432\u043e\u0434 \u043e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f \u0431\u0435\u0437 \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d.\n\nSample Input:\n6\n3\n4\n2\n1\n3\n5\n1\n\nSample Output:\n4\n\nSample Input:\n100\n0\n1\n\nSample Output:\n100\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n1 2\n2 3''') == '5'\nassert solution('''100 3\n1 2\n2 1\n3 1\n''') == '100'\nprint(solution('''1 2\n1 1\n2 100'''))\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"100 3\") == \"4\"\nassert solution(\"1 2\") == \"100\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaabb') == 6\nassert solution('usaco') == 1\nassert solution('lol') == 2\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    'aaabb'\n) == 6\nassert solution(\n    'usaco'\n) == 1\nassert solution(\n    'lol'\n) == 2\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('usaco') == '2'\nassert solution('aaabb') == '6'\nassert solution('lol') == '1'\nassert solution('hello') == '0'\nassert solution('xx') == '0'\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('usaco') == '1'\nassert solution('hello') == '0'\nassert solution('aaabb') == '6'\nassert solution('lol') == '2'"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaabb') == 6\nassert solution('usaco') == 1\nassert solution('lol') == 2\n\n\"\"\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nusaco\n\n''') == '1'\n\nassert solution('''\nlol\n\n''') == '2'\n\nassert solution('''\nusaco\n\n''') == '1'\n\nassert solution('''\naaa\n\n''') == '2'\n\nassert solution('''\naaab\n\n''') == '2'"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaabb') == 6\nassert solution('usaco') == 1\nassert solution('lol') == 2\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('usaco') == '1'\nassert solution('aaabb') == '6'\nassert solution('lol') == '2'\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''aaabb\n''') == '6'\n\nassert solution('''usaco\n''') == '1'\n\nassert solution('''lol\n''') == '2'\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == '6'\n\"\"\"\nfrom typing import List\nimport unittest\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n\n''') == '2'\n\nassert solution('''10\n\n''') == '4'\n\nassert solution('''1\n\n''') == '1'"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\n'''"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''4\n''') == '2'\nassert solution('''5\n''') == '3'\nassert solution('''10\n''') == '5'\nassert solution('''100\n''') == '9'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n4\n''') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n\"\"\""
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4,2,4]) == \"1 2\"\nassert solution([5,6,5]) == \"2 1\"\nassert solution([4,6,4]) == \"1 2\"\nassert solution([3,5,6]) == \"2 1\"\nassert solution([4,4,4]) == \"1 2\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n4\n2\n3\n2\n1''') == \"1 2\"\nassert solution('''5\n5\n1\n5\n2\n3\n2''') == \"2 1\"\nassert solution('''10\n8\n3\n1\n1\n6\n4\n2\n5\n2\n5''') == \"1 2\"\nassert solution('''2\n8\n3\n1\n5\n2\n4\n1\n1\n''') == \"2 1\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('2 3') == '1 2'"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 4\n2 5\n3 6\n''') == '1 2'"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 4\\n2 5\\n3 6\\n') == '1 2'\nassert solution('1 4\\n2 5\\n3 6\\n') == '2 1'\nassert solution('1 4\\n2 5\\n3 6\\n') == '2 1'\n\n\n\"\"\"\n\n\nimport itertools"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1 2'\nassert solution('2') == '2 1'\nassert solution('1') == '2 1'\nassert solution('10') == '-1'\nprint('PASSED')\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n1 4\n2 5\n3 6\n4 7\n5 8\n6 9\n7 10\n8 11\n9 12\n10 13\n11 14\n12 15\n13 16\n14 17\n15 18\n16 19\n17 20\n18 21\n19 22\n20 23\n21 24\n22 25\n23 26\n24 27\n25 28\n26 29\n27 30\n28 31\n29 32\n30 33\n31 34\n32 35\n''') == '1 2\\n2 1\\n2 1\\n1 2\\n'\nprint(solution('''\n2\n1 2\n2 1\n''')) == '1 2\\n2 1\\n'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1 2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    5\n    3 4\n    2 5\n    1 6\n    \"\"\") == \"\"\"\n    1 2\n    2 1\n    1 2\n    \"\"\".strip()\nassert solution(\"\"\"\n    4\n    3 5\n    2 4\n    1 3\n    \"\"\") == \"\"\"\n    2 1\n    1 2\n    2 1\n    1 2\n    \"\"\".strip()\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''2\n''') == '2'\nassert solution('''3\n''') == '2 1'\nassert solution('''8\n''') == '4'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2 1'\nassert solution('3') == '2 1 1'\nassert solution('4') == '2 1 1 2'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n\n''') == '2'\n\nassert solution('''\n3\n\n''') == '2 1'\n\nassert solution('''\n8\n\n''') == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"4\") == \"2 1 1 2\"\nassert solution(\"5\") == \"2 1 1 1 1\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n\n''') == '1'\nassert solution('''\n2\n\n''') == '2'\nassert solution('''\n3\n\n''') == '2 1'\nassert solution('''\n8\n\n''') == '4'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1'\nassert solution('3') == '2 1'\nassert solution('4') == '2 1'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"4\") == \"2 2\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == '2 1'\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0rTrT022') == \"02TrrT20\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n0 2\""
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    5\n    1 2 3 4 5\n''') == \"1 2 3 4 5\"\nassert solution('''\n    4\n    2 3 4 5\n''') == \"2 3 4 5\"\nassert solution('''\n    6\n    2 3 4 5 6\n''') == \"2 3 4 5 6\"\nassert solution('''\n    1\n    1\n''') == \"1\"\nassert solution('''\n    3\n    1 2 3\n''') == \"1 2 3\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == stdout\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"8\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '1'\nassert solution('2') == '2'"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n\") == \"2 2 2 2\"\nassert solution(\"6\\n\") == \"3 3 3 3\"\nassert solution(\"7\\n\") == \"3 3 3 3\"\nassert solution(\"8\\n\") == \"3 3 3 3\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n0a2') == '2 a 2'\nassert solution('5\\n0a2B') == '2 a 2b'\nassert solution('6\\n1a1a1a1a1a') == '1 a 1 a 1 a'\nassert solution('1\\n1a') == '1 a'"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0rTrT022') == '02TrrT20'\nassert solution('aA') == 'a A'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\""
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nabcd\\nacbd') == '2'\nassert solution('4\\na**d\\n2\\nabcd\\nacbd') == '1'\nassert solution('5\\nlo*er\\n2\\nlover\\nloser') == '0'\nassert solution('3\\na*a\\n2\\naaa\\naba') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nl*a\n2\naba''') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"9\""
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n    a**d\n    2\n    abcd\n    acbd\n    ''') == \"2\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\nabcd\\n2\\naaa\\n') == '1'\nassert solution('5\\nlo*er\\n2\\nlover\\n') == '0'\nassert solution('3\\na*a\\n2\\naba\\n') == '1'"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\n\"\"\""
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4\\n\") == \"2\"\nassert solution(\"5\\n\") == \"1\"\nassert solution(\"3\\n\") == \"1\"\nassert solution(\"4\\n5\\nabcd\\nacbd\\n\") == \"1\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 1\") == \"1\"\nassert solution(\"6 1 2\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2'\nassert solution('7 1 5 1 1 2 3 4 4\\n') == '4'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"1\""
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5 1 1\n1 0 0 0 4\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n6 1 2\n3 8 0 1 0 0\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '1'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n5 1 1\n1 0 0 0 4\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n6 1 2\n3 8 0 1 0 0\n\"\"\"\n) == \"2\"\n\n\"\"\"\nRuntime: 92 ms, faster than 80.25% of Python3 online submissions for Optimal Meeting Rooms.\nMemory Usage: 15.9 MB, less than 75.08% of Python3 online submissions for Optimal Meeting Rooms.\n\"\"\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 1 1\n1 0 0 0 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n6 1 2\n3 8 0 1 0 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 8 0 1 0 0\n4 1 0 1 0 0\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5 2 1\n1 2 0 0 0\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''5 1 1\n1 0 0 0 4\n''') == '1'\n\nassert solution(\n'''6 1 2\n3 8 0 1 0 0\n''') == '2'\n\nassert solution(\n'''6 1 2\n0 0 0 0 0 0\n''') == '0'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\nassert solution
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n\n\n\"\"\""
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1''') == '40'\nassert solution('''1 42''') == '1'\nassert solution('''6 4''') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\"\n\n'''\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n''') == '40'\nassert solution('''\n1 42\n''') == '1'\nassert solution('''\n6 4\n''') == '172'"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4') == 'Palindromic tree is better than splay tree'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1''') == '40'\nassert solution('''1 42''') == '1'\nassert solution('''6 4''') == '172'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"5\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 4\") == \"5\"\nassert solution(\"4 3 1 4 4\") == \"6\"\nassert solution(\"5 3 1 4 1 5\") == \"11\"\n\"\"\"\n\nimport sys\n\nsys.path.append(\"./ml/\")\n\nfrom linked_list import linked_list, Node\n\n\"\"\"\nIntuition:\n\nIf the node network is directed, the problem can be solved by the Floyd Warshall algorithm.\n\nLet dp[u][v] be the length of the shortest path from u to v. If a[u][v] is 1, then the shortest path between u and v is dp[u][v].\n\nIf a[u][v] is 0, then the shortest path between u and v is dp[u][v] + dp[v][u].\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n: int = int(stdin)\n        a: list = []\n        for i in range(1, n + 1):\n            a.append([])\n        for line in stdin.split(\"\\n\"):\n            a[int(line.split()[0])].append(int(line.split()[1]))\n            a[int(line.split()[1])].append(int(line.split()[0]))\n\n        node_count: int = int(n * (n + 1) / 2)\n        dp: list = [[float(\"inf\")] * node_count for _ in range(node_count)]\n        for i in range(node_count):\n            dp[i][i] = 0\n\n        for i in range(node_count):\n            for j in range(node_count):\n                if dp[i][j] > dp[i][i] + dp[i][j]:\n                    dp[i][j] = dp[i][i] + dp[i][j]\n\n        for i in range(node_count):\n            for j in range(node_count):\n                if a[i][j]:\n                    dp[i][j] = min(dp[i][j], dp[i][i] + dp[i][j])\n        print(dp)\n        return str(sum(dp[0]))\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    4\n    2 1 4\n    ''') == '5'\n\nassert solution('''\n    4\n    3 1 4 1\n    ''') == '6'\n\nassert solution('''\n    5\n    3 1 4 1 5\n    ''') == '11'"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 4\\n') == '5'\nassert solution('3 1 4 1\\n') == '6'\nassert solution('4\\n3 1 4 1 5\\n') == '11'"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 4\\n\") == \"5\"\nassert solution(\"4 3 1 4 1\\n\") == \"11\"\nassert solution(\"5 3 1 4 1 5\\n\") == \"11\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 1 4\n''') == '5'\n\nassert solution('''\n4\n3 1 4 1\n''') == '6'\n\nassert solution('''\n5\n3 1 4 1 5\n''') == '11'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\n\nimport sys\nimport os\nimport traceback\nfrom typing import List\nfrom io import StringIO\n\nclass TestClass(unittest.TestCase):\n\n    def test_basic_test(self):\n        n = 3\n        k = [2,1,4,3]\n        t_k = [0,1,0,4]\n        from io import StringIO\n        sys.stdin = StringIO(f'{n}\\n{k}')\n        # sys.stdin = StringIO(input())\n        print(solution())\n        sys.stdin = sys.__stdin__\n\n    def test_basic_test2(self):\n        n = 4\n        k = [3,1,4,3]\n        t_k = [0,1,0,4]\n        from io import StringIO\n        sys.stdin = StringIO(f'{n}\\n{k}')\n        # sys.stdin = StringIO(input())\n        print(solution())\n        sys.stdin = sys.__stdin__\n\n    def test_basic_test3(self):\n        n = 5\n        k = [3,1,4,3,5]\n        t_k = [0,1,0,4,0]\n        from io import StringIO\n        sys.stdin = StringIO(f'{n}\\n{k}')\n        # sys.stdin = StringIO(input())\n        print(solution())\n        sys.stdin = sys.__stdin__\n\n    def test_basic_test4(self):\n        n = 6\n        k = [3,1,4,3,5,6]\n        t_k = [0,1,0,4,0,0]\n        from io import StringIO\n        sys.stdin = StringIO(f'{n}\\n{k}')\n        # sys.stdin = StringIO(input())\n        print(solution())\n        sys.stdin = sys.__stdin__\n\n    def test_basic_test5(self):\n        n = 7\n        k = [3,1,4,3,5,6,7]\n        t_k = [0,1,0,4,0,0,0]\n        from io import StringIO\n        sys.stdin = StringIO(f'{n}\\n{k}')\n        # sys.stdin = StringIO(input())\n        print(solution())\n        sys.stdin = sys.__stdin__\n\n    def test_case_sensitive(self):\n        n = 7\n        k = [3,1,4,3,5,6,7]\n        t_k = [0,1,0,4,0,0,0]\n        from io import StringIO\n        sys.stdin = StringIO(f'{n}\\n{k}')\n        # sys.stdin = StringIO(input())\n        print(solution())\n        sys.stdin = sys.__stdin__\n\n    def test_case_sensitive2(self):\n        n = 7\n        k = [3,1,4,3,5,6,7]\n        t_k = [0,1,0,4,0,0,0]\n        from io import StringIO\n        sys.stdin = StringIO(f'{n}\\n{k}')\n        # sys.stdin = StringIO(input())\n        print(solution())\n        sys.stdin = sys.__stdin__\n\n    def test_case_sensitive3(self):\n        n = 7\n        k = [3,1,4,3,5,6,7]\n        t_k = [0,1,0,4,0,0,0]\n        from io import StringIO\n        sys.stdin = StringIO(f'{n}\\n{k}')\n        # sys.stdin = StringIO(input())\n        print(solution())\n        sys.stdin = sys.__stdin__\n\n    def test_case_sensitive4(self):\n        n = 7\n        k = [3,1,4,3,5,6,7]\n        t_k = [0,1,0,4,0,0,0]\n        from io import StringIO\n        sys.stdin = StringIO(f'{n}\\n{k}')\n        # sys.stdin = StringIO(input())\n        print(solution())\n        sys.stdin = sys.__stdin__\n\n    def test_case_sensitive5(self):\n        n = 7\n        k = [3,1,4,3,5,6,7]\n        t_k"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"11\"\nassert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 1 4\n''') == '5'\nassert solution('''\n4\n3 1 4 1\n''') == '6'\nassert solution('''\n5\n3 1 4 1 5\n''') == '11'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 0 0 -1\") == \"1\"\nassert solution(\"2\\n1 -1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"4\"\nassert solution(\"14\") == \"7\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution(\"1 -1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 0 0 -1\n2 -1''') == '2'\nassert solution('''2\n3\n-3\n-2\n2\n2\n2\n-3''') == '1'\nassert solution('''1\n2\n1\n-2\n-1\n1\n-1\n-1''') == '2'\nassert solution('''1\n2\n1\n-2\n-1\n1\n-1\n-1''') == '1'\nassert solution('''1\n3\n-3\n-2\n2\n2\n2\n-3''') == '2'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\nassert solution([1, 0, 0, -1]) == '1'\nassert solution([-1, 1, -1, 1]) == '0'\nassert solution([-1, 1, -1, 1]) == '2'\nassert solution([-1, 1, -1, 1]) == '0'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 0 0 -1\") == \"1\"\nassert solution(\"2\\n1 -1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 0 0 -1\\n\") == \"1\"\nassert solution(\"2 -1\\n\") == \"2\"\nassert solution(\"1 -1\\n\") == \"1\"\nassert solution(\"0 -1\\n\") == \"0\"\nassert solution(\"1 0 1 2 3 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12\\n\") == \"5\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n-1 -1\n''') == '2'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 -1\") == \"2\"\nassert solution(\"4 -1\") == \"2\"\nassert solution(\"1 0 0 -1\") == \"1\"\nassert solution(\"6 -1\") == \"4\""
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2,0,0]) == \"2\"\nassert solution([2,1,0]) == \"0\"\nassert solution([2,2,0]) == \"1\"\nassert solution([2,2,1]) == \"0\"\nassert solution([2,2,2]) == \"0\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"2 1 0\") == \"0\"\nassert solution(\"2 5 7\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 0 0') == '2'\nassert solution('2 1 0') == '0'\nassert solution('2 5 7') == '1'"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 0 0') == '2'\nassert solution('1 2') == '0'\nassert solution('2 5 7') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 0 0') == '2'\nassert solution('2 1 0') == '0'\nassert solution('2 5 7') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"2 1 0\") == \"0\"\nassert solution(\"2 5 7\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2'\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0'\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 0 0') == '2'\nassert solution('2 1 0') == '0'\nassert solution('2 5 7') == '1'\nprint(\"Congratulations! Your solutions works perfectly!\")\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 5 7\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2'\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0'\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '6'\n\n=======================================================================================================================\n16. 3Sum\n\nS = \"ABCABC\"\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nS\n\n-----Output-----\nPrint a single integer denoting the total number of 3-digit numbers that satisfy the following conditions:\n1. Each digit in S must be at least as great as the digit in the previous number of S.\n2. Each digit in S must be at least as great as the digit in the previous number of S.\n3. Each digit in S must be at least as great as the digit in the previous number of S.\n4. Each digit in S must be at least as great as the digit in the previous number of S.\n5. Each digit in S must be at least as great as the digit in the previous number of S.\n6. Each digit in S must be at least as great as the digit in the previous number of S.\n\n-----Sample Input-----\nABCABC\n\n-----Sample Output-----\n11\n\nS = \"ABCABC\"\n\nSolution:\n\n+   Solution (1):"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '6'\nassert solution('5 3') == '6'\nassert solution('7 7') == '30'"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '6'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"3 3\") == \"5\"\nassert solution(\"5 1\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '10'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == '6'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"1 1\") == \"6\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"1 1\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '6'\nassert solution('5 1') == '5'\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n1 1 1 1 1 1\n''') == '6'\nassert solution(\n'''\n1 2 1 2 1 2\n''') == '13'\n'''\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '6'\n\"\"\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 1 1 1 1 1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n1 2 1 2 1 2\n\"\"\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\n\nassert solution('1 2 1 2 1 2') == '13'"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '6'\n\n\n\n\n\"\"\""
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1 1 1 1 1\n''') == '6'\nassert solution('''\n1 2 1 2 1 2\n''') == '13'\n''')\n\n---Submission---\n1.2956ms\n'''\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\nassert solution('1 2 1 2 1 2') == '13'\nassert solution
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 1 1 1\\n\") == \"6\"\nassert solution(\"1 2 1 2 1 2\\n\") == \"13\"\nassert solution(\"3 3 3 3 3 3\\n\") == \"27\"\nassert solution(\"3 5 5 5 5 5\\n\") == \"33\"\nassert solution(\"5 5 5 5 5 5\\n\") == \"55\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1 1 1 1 1\n''') == '6'\n'''"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1 1 1\\n') == '6'\nassert solution('1 2 1 2 1 2\\n') == '13'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"9\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n2 3 4 6 9\n''') == 4\n\nassert solution('''9\n1 2 3 5 6 7 8 9 10\n''') == 4\n\nassert solution('''3\n1 2\n''') == 1\n\nassert solution('''1\n3\n''') == 1\n\nassert solution('''1\n10\n''') == 1"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'\nassert solution('2\\n3 4') == '2'\nassert solution('10\\n3 2 4 5 7 11 12') == '4'\nassert solution('5\\n1 2 3') == '3'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == '4'\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == '4'\nassert solution(\"10\\n5 1 2 3 4 9 8 7 6\") == '8'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 3 4\n''') == '4'\nassert solution('''\n9\n1 2 3 5 6 7 8 9 10\n''') == '4'\nassert solution('''\n6\n1 2 3 5 6 7\n''') == '5'\nassert solution('''\n10\n1 2 3 5 6 7 8 9 10\n''') == '5'\nassert solution('''\n8\n1 2 3 4 5 6 7\n''') == '5'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n5\n2 3 4 6 9\n''') == '4'\nassert solution(\n'''\n9\n1 2 3 5 6 7 8 9 10\n''') == '4'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('9') == '4'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"9\") == \"4\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY COMPLETE\"\"\n\nassert solution(\"\"\"\n4\n10 20 15 3 4\n8 17 2 17\n10 18 2 17\n3 2 3 3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\n\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\n\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\n\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\n\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\n\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\n\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\n\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == 'SURGERY COMPLETE'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE'\nassert solution('4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY FAILED'\nassert solution('1\\n8 2 3 4 5 6 7\\n
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"SURGERY COMPLETE\"\nassert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\n4\nn\n4\n
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\n\nassert solution('''\n3\n2 1 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\nassert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\nassert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'SURRGERY FAILED'\nassert solution('6') == 'SURRGERY COMPLETE'\nassert solution('12') == 'SURRGERY FAILED'"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13 11\\n11') == 'SURGERY COMPLETE'\nassert solution('4\\n4 5 6 7 8\\n8 9 10 11 12 13\\n12 11 10 9 8 7 6 5 4\\n4 6 7 8 9 10 11 12 13\\nSURGERY FAILED') == 'SURGERY FAILED'\nassert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11') == 'SURGERY COMPLETE'\nassert solution('4\\n4 5 6 7 8\\n8 9 10 11 12 13\\n12 11 10 9 8 7 6 5 4\\n4 6 7 8 9 10 11 12 13\\nSURGERY FAILED') == 'SURGERY FAILED'"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY FAILED\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"SURGERY COMPLETE\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2 1\n''') == '1 2 3'\nassert solution('''4 2 6\n''') == '6 5 3 4 2 1'\nassert solution('''8 3 9\n''') == '3 9 2 8 5 4 1 7'\nassert solution('''9 2 5\n''') == '6 5 8 3 4 1 9 2 7'\nassert solution('''3 2 1\n''') == '1 2 3'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 1\n''') == '1 2 3'\nassert solution('''\n9 2 5\n''') == '6 5 8 3 4 1 9 2 7'\nassert solution('''\n3 2 1\n''') == '1 2 3'\nassert solution('''\n3 2 1\n''') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '6 5 8 3 4 1 9 2 7'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2 1''') == '6 5 8 3 4 1 9 2 7'\nassert solution('''3 2 1''') == '1 2 3'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''9 2 5\n    3 2 1\n    ''') == '1 2 3 6 5 8 7 4 9 2 7'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''9 2 5''') == '6 5 8 3 4 1 9 2 7', f\"Your solution ({solution('''9 2 5''')}) doesn't match expected result ({'6 5 8 3 4 1 9 2 7'})\"\nassert solution('''3 2 1''') == '1 2 3', f\"Your solution ({solution('''3 2 1''')}) doesn't match expected result ({'1 2 3'})\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2 1\n''') == '1 2 3'\n\nassert solution('''5 3 1\n''') == '3 1 2 5'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9 2 5\\n\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\\n\") == \"1 2 3\""
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '4'\nassert solution('3 2') == '3'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 2\n3 2 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n\"\"\") == \"5000000000\"\nassert solution(\"\"\"\n3 2\n1 0 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 2\n1 0 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 4\") == \"4\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 2\n3 2 1\n\"\"\") == \"3\"\nassert solution(\"\"\"5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n\"\"\") == \"5000000000\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == \"5000000000\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n3 2 1\n''') == '3'\nassert solution('''5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'\nassert solution('''4 4\n2 8 4 1\n''') == '4'"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 1') == '5'\nassert solution('5 2') == '4'\nassert solution('4 4') == '4'\nassert solution('4 5') == '4'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '3 2\\n'\n    '3 2 1\\n'\n) == '3'\n\nassert solution(\n    '5 1\\n'\n    '1000000000 1000000000 1000000000 1000000000 1000000000\\n'\n) == '5000000000'\n\nassert solution(\n    '3 2\\n'\n    '1 0 1\\n'\n) == '2'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n3 2 1\n''') == '3'\n\nassert solution('''\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'\n\nassert solution('''\n3 2\n1 0 1\n''') == '2'"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''bwwwbwwbw''') == '5'\nassert solution('''bwwbwwb''') == '3'"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'\nassert solution('wbbbwwwbww') == '5'\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"bbwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\"\n\n---\n\nThe maximum possible length of a zebra is the minimum length of all of its pieces plus the length of the white strips. The operation is not equivalent to the operation (bw|bwwbwwb) and the zebra can be obtained by any combination of the three pieces. Let's say that we want to assemble the zebra 'wwbb'\n\n----Input----\n\nbwwbwwbw\n\n----Output----\n\n3\n\n----Input----\n\nbwwbwwb\n\n----Output----\n\n2\n\n'''\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '3'\n\"\"\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '5'\nassert solution(input) == '3'\n'''"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\nassert solution('''\n4\n4\n1 2\n.....\n.***.\n...**\n*....\n''') == '7'\nassert solution('''\n1\n5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '0'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '7'\n'''\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"10\""
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '10'\nassert solution('4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....') == '7'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == \"10\"\n\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == \"7\"\n'''\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\n\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '7'\n\n'''\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....') == \"10\"\nassert solution('4 5\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....') == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....') == '10'\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....') == '7'\n\n\n\"\"\""
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('6') == '2'\nassert solution('20') == '3'"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 4 2 2\n''') == '2'\n\nassert solution('''6\n1 2 4 4 4 9\n''') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution(input) == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 4 2') == '2'\nassert solution('6\\n1 2 4 4 4 9') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"50\") == \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\"\n\"\"\""
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 4 2 2\n''') == \"2\"\nassert solution('''\n6\n1 2 4 4 4 9\n''') == \"2\"\n'''\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('6') == '2'\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 1\naba''') == '7'\nassert solution('''4 1 1\nabcd''') == '4'\nassert solution('''4 10 1\naaaa''') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '7'\n\n\"\"\"\n\n\n\n\"\"\""
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 3 1\\n\"\n    \"aba\"\n) == \"7\"\nassert solution(\n    \"4 1 1\\n\"\n    \"abcd\"\n) == \"4\"\nassert solution(\n    \"4 10 1\\n\"\n    \"aaaa\"\n) == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 1\\naba') == '7'\nassert solution('4 1 1\\nabcd') == '4'\nassert solution('4 10 1\\naaaa') == '12'\nprint('You passed all the tests!')"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '3 3 1\\n'\n    'aba\\n'\n) == '7'\n\nassert solution(\n    '4 1 1\\n'\n    'abcd\\n'\n) == '4'\n\nassert solution(\n    '4 10 1\\n'\n    'aaaa\\n'\n) == '12'\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1\\naba') == '7'\nassert solution('4 1 1\\nabcd') == '4'\nassert solution('4 10 1\\naaaa') == '12'\n\n\n\"\"\""
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1 1') == '4'\nassert solution('3 3 1') == '7'\nassert solution('4 10 1') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\") == \"7\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"4 10 1\") == \"12\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3 1\naba''') == '7'\nassert solution('''4 1 1\nabcd''') == '4'\nassert solution('''4 10 1\naaaa''') == '12'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\n\n-------Idea--------\nWe will use a double-ended queue to store cards, then we will use a heap to store the sequences of cards.\nFirst, we will construct a set of numbers 1,2,\u2026,N, and a set of numbers 1,2,\u2026,K.\nWe will iterate through the sequence of cards, and then in order, take out the cards at the beginning or end of the deque, and we will construct a sequence.\nWhen we construct a sequence we should keep track of the number of elements in the sequence we have seen so far.\nWe want to calculate the length of the sequence seen so far, so we can get the length of the sequence we want to find.\nThe sequence we want to find can be constructed, given the length of the sequence seen so far, which is equal to K.\nBut we want to calculate the length of the sequence, that is, the length of the subsequence of the sequence we want to find.\nThe subsequence of the sequence we want to find is made of the elements of the sequence seen so far, in order.\nFor example, if we want to find the sequence 2,1,3,3,1,2,3,1,3,2,1,2,3,2,1,3,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('5 2') == '1'\nassert solution('5 5') == '2'\n\"\"\""
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == 1\nassert solution(\"2 2\") == 0\nassert solution(\"1 2\") == 0\nassert solution(\"3 1\") == 1\nassert solution(\"2 1\") == 1\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1'\n\"\"\"\n\nfrom collections import deque\n\nn, k = list(map(int, input().split()))\n\ndq = deque(list(range(1, n + 1)))\n\nfor _ in range(n):\n    dq.rotate(-1)\n    dq.popleft()\n    dq.append(dq.popleft())\n    dq.rotate(1)\n\nans = 0\n\nfor i in range(1, n + 1):\n    if i == k:\n        ans += 1\n    if i == k - 1:\n        ans += dq.count(i)\n\nprint(ans % (10**9 + 7))\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '1'\n\"\"\""
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n2\") == \"1\"\nassert solution(\"4 5\\n3\") == \"1\"\nassert solution(\"4 5\\n1\") == \"2\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\"\n\"\"\"\nimport math\n\nN, K = map(int, input().split())\nprint(math.factorial(N) // math.factorial(K) // math.factorial(N - K) % (10 ** 9 + 7))\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\n\"\"\""
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == '8'\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 2 2') == '8'\nassert solution('4 2') == '3'\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '8'\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 2') == '8'\nassert solution('4 -3\\n3 -6 -3 12') == '3'\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 2\n2 2 2 2\n\"\"\") == \"8\"\nassert solution(\"\"\"\n4 -3\n3 -6 -3 12\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 1\n3 5\n\"\"\") == \"5\"\nassert solution(\"\"\"\n4 3\n1 3 2 4\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4 3\n1 3 2 4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n2 2\\n3 -6 -3 12\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == \"3\"\nassert solution(\"5 -3\\n3 -6 -3 12\") == \"1\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"8\"\nassert solution(\"4 -3\") == \"3\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 4\") == \"4\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"4 -3\") == \"3\""
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n\"\"\") == \"11\"\nassert solution(\"\"\"\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2 5 1 7\na A\nA a\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n\"\"\") == \"11\"\nassert solution(\"\"\"\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n\"\"\") == \"5\"\n\n\"\"\"\n\nfrom typing import List\n\nimport unittest"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5 3 1 8''') == '11'\nassert solution('''4 2 1 300 1000''') == '5'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == '11'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5 3 1 8') == '11'\nassert solution('4 2 1 300 1000') == '5'\nassert solution('0 0 0 0 0') == '0'"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 3 1 8') == '11'\nassert solution('4 2 1 300 1000') == '5'\nprint('all tests passed')\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3 1 8\") == \"11\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3 1 8\") == \"11\"\nassert solution(\"4 2 1 300 1000\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3 1 8\") == \"11\"\nassert solution(\"4 2 1 300 1000\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3 1 8\") == \"11\"\nassert solution(\"4 2 1 300 1000\") == \"5\"\nassert solution(\"3 2 1 10 3\") == \"5\"\nassert solution(\"3 1 1 10 3\") == \"10\"\nassert solution(\"4 1 1 10 4\") == \"10\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5 3 1 8\n        a A\n        A aa\n        aa AA\n        AA a\n''') == '11'\nassert solution('''4 2 1 300 1000\n        a A\n        A aa\n        aa AA\n        AA a\n''') == '5'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 1 1 4\n''') == 'YES', 'First'\nassert solution('''\n5\n1 1 5 2 1\n''') == 'NO', 'Second'\nassert solution('''\n5\n1 1 5 2 1\n2 2 1\n''') == 'YES', 'Third'\nassert solution('''\n5\n1 1 5 2 1\n2 2 1\n2 2\n''') == 'NO', 'Fourth'\nassert solution('''\n5\n1 1 5 2 1\n2 2 1\n2 2\n''') == 'NO', 'Fifth'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 4') == 'YES'\nassert solution('5 1 5 2 1') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 1\\n') == 'YES'\nassert solution('5\\n1 1 5 2 1\\n') == 'NO'\nassert solution('5\\n1 1 5 2 1\\n') == 'NO'\nassert solution('5\\n1 1 5 2 1\\n') == 'NO'\nassert solution('5\\n1 1 5 2 1\\n') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"13\") == \"NO\"\nassert solution(\"11\") == \"YES\""
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == 'YES'\nassert solution('5') == 'NO'\nassert solution('4') == 'YES'"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n\n\n'''\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 1 1 4\n''') == 'YES'\nassert solution('''4\n1 1 1 4\n''') == 'NO'\nassert solution('''3\n1 1 1 4\n''') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"-15\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"-5\"\nassert solution(\"2\") == \"1100\"\n\nstdin = \"\"\"\n3\n1 1 1\n\"\"\"\nassert solution(stdin) == \"1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '-15'\nassert solution('4') == '1'\nassert solution('3') == '-5'\nassert solution('2') == '1100'"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\"\nprint('ok')"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '-15'\nassert solution('4') == '1'\nassert solution('3') == '-5'\nassert solution('2') == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '-15'\nassert solution('4') == '1'\nassert solution('3') == '-5'\nassert solution('2') == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n5\n10 5 0 -5 -10\n    \"\"\".strip()) == \"-15\"\n\nassert solution(\n    \"\"\"\n4\n1 1 1 1\n    \"\"\".strip()) == \"1\"\n\nassert solution(\n    \"\"\"\n2\n900 1000\n    \"\"\".strip()) == \"1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '-15'\nassert solution('4') == '1'\nassert solution('2') == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"-15\"\nassert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"-15\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"-15\"\nassert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"1100\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2\n''') == 'YES'\nassert solution('''3\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'YES'\nassert solution('''5\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'YES'\nassert solution('''6\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"6 5\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"6\") == \"YES\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n2 5\n2 6''') == 'YES'\nassert solution('''6\n1 2\n1 3\n1 4\n2 5\n2 6''') == 'NO'\nassert solution('''4\n1 2\n1 3\n1 4\n2 5\n2 6''') == 'YES'\nassert solution('''1\n1 2\n1 3\n1 4\n2 5\n2 6''') == 'NO'\nassert solution('''1\n1 2\n1 3\n1 4\n2 5\n2 6''') == 'YES'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('3 4') == 'NO'\nassert solution('5 6') == 'YES'\nassert solution('8 3') == 'NO'\n\n\n\"\"\""
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\""
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'YES'\n\nassert solution('''\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\", \"First\"\nassert solution(\"5\") == \"NO\", \"Second\"\nassert solution(\"4\") == \"NO\", \"Third\"\nassert solution(\"6\") == \"YES\", \"Fourth\"\nassert solution(\"10\") == \"YES\", \"Fifth\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2\n\n''') == 'YES'\n\nassert solution('''3\n1 2\n1 3\n1 4\n2 5\n2 6\n\n''') == 'YES'\n\nassert solution('''5\n1 2\n1 3\n1 4\n2 5\n2 6\n\n''') == 'NO'"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n1 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"3\n1 2 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('2 1 2') == '1'"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 2 3') == '1'\nassert solution('2\\n2 6') == '0'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == '0'\nassert solution('2\\n4\\n6') == '1'\nassert solution('1\\n1\\n2') == '1'\nassert solution('2\\n1\\n2') == '0'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 4 5\") == \"0\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 6') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 4 3\") == \"1\"\nassert solution(\"2 2 4 4\") == \"2\"\nassert solution(\"2 2 4 3\") == \"0\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'''\n\nassert solution('''2\n2 6\n''') == '0'''\n\nassert solution('''1\n2 3\n''') == '2'''\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 2'\n\ninput()\n    n = int(input())\n    a = set(map(int, input().split()))\n    b = set(map(int, input().split()))\n    return len([i for i in range(min(a), max(b)+1) if i not in a or i not in b])"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\n\"\"\"\n\nN = int(stdin())\nS_1 = stdin()\nS_2 = stdin()\n\nS_1 = S_1.upper()\nS_2 = S_2.upper()\n\nimport itertools\n\nr1 = 0\nr2 = 0\n\nfor i in itertools.product(S_1, S_2):\n    if i[0]!= i[1]:\n        r1 += 1\n\nfor i in itertools.permutations(S_1):\n    for j in itertools.permutations(S_2):\n        if i!= j:\n            r2 += 1\n\nprint(r1 % 1000000007)\nprint(r2 % 1000000007)\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nabcd\\nabc\") == \"3\"\nassert solution(\"5\\ncccb\\nbbcc\") == \"4\"\nassert solution(\"5\\ncccg\\nbbcc\") == \"5\"\nassert solution(\"5\\ncccg\\nbbcc\") == \"4\"\nassert solution(\"3\\nabcd\\nabc\") == \"0\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(0) == 6\nassert solution(1) == 4\nassert solution(2) == 10\nassert solution(3) == 18\nassert solution(4) == 28\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 6\n\"\"\"\nfrom itertools import product\n\nn = int(input())\n\ns_1 = input()\ns_2 = input()"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"100\") == \"73\"\nassert solution(\"20\") == \"18\"\nassert solution(\"200\") == \"1150\"\n\"\"\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == 6\n\"\"\"\n\nimport math\n\nn = int(input())\ns1 = input()\ns2 = input()"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == 6\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(1) == \"aab\"\nassert solution(2) == \"ccb\"\nassert solution(3) == \"abab\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\n\n'''"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == '6'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''100 100 5\n    5 2 1 2 1\n    ''') == 'YES'\nassert solution('''100 8 5\n    5 2 1 2 1\n    ''') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1') == 'NO'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n100 100 5\n5 2 1 2 1\n''') == 'YES'\nassert solution('''\n100 8 5\n1 2 3 4 5 6 7\n''') == 'NO'\n'''\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"100 100 5\") == \"YES\"\nassert solution(\"100 8 5\") == \"NO\"\nassert solution(\"100 100 7\") == \"NO\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5 6 7') == 'NO'\nassert solution('1 2 3 4 5 6 7') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100 100 5') == 'YES'\nassert solution('100 8 5') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"YES\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n100 100 5\n5 2 1 2 1\n''') == 'YES'\nassert solution('''\n100 8 5\n1 2 3 4 5 6 7\n''') == 'NO'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 5 1 2 3 1') == 'YES'\nassert solution('100 8 5 1 2 3 1') == 'NO'\nprint(solution('2 5 1 2 3 1'))\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n100 100 5\n5 2 1 2 1\n''') == 'YES'\nassert solution('''\n100 8 5\n1 2 3 4 5 6 7\n''') == 'NO'"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 1 5 10\n1 4 10 5\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3''') == '4'\nassert solution('''7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == \"4\"\n\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == \"3\"\n'''\n\nfrom typing import List\n\n\nclass Solution:\n    def solve(self, stdin: str) -> str:\n        n, m = list(map(int, stdin.split()))\n        black_cells = set()\n        white_cells = set()\n        for i in range(m):\n            (x1, y1, x2, y2) = list(map(int, stdin.split()))\n            for x in range(x1, x2 + 1):\n                for y in range(y1, y2 + 1):\n                    if (x, y) not in black_cells:\n                        white_cells.add((x, y))\n                    else:\n                        black_cells.remove((x, y))\n        return str(len(white_cells) + len(black_cells))\n\n\ns = Solution()\n\nprint(s.solve(stdin))\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == '4', f\"First Example ({solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''')})\"\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\n''') == '3', f\"Second Example ({solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\n''')})\"\n\n''')\n\n'''"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 4, \"check failed\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n1 4 10\n2 5 10\n3 4 10\n4 2 10\n''') == 4\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == 3\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 6') == '3'\nassert solution('10 2') == '4'\n\"\"\""
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 6\\n2 1 2 1') == '4'\nassert solution('10 2\\n4 1 5 10') == '4'"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\n4 1 5 10\n1 4 10 5\n''') == '4'\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'\nassert solution('''\n9 5\n5 2 1 5 1 2 5 1 2\n1 4 2 3 3 4 4 4 2\n5 6 2 4 2 3 4 4 2\n4 3 2 3 2 5 3 2 3\n2 4 3 5 2 4 2 5 3\n1 6 1 2 3 3 3 3 1\n3 2 5 2 5 2 4 5 2\n2 5 1 5 1 1 2 5 1\n2 4 1 2 2 2 2 1 2\n2 5 4 4 3 4 5 3 3\n2 6 2 4 1 5 1 1 1 6\n3 2 2 2 2 3 3 3 2\n1 1 1 1 3 3 1 2 3\n1 6 3 3 3 3 3 2 3\n2 2 4 4 4 4 4 4 4\n2 1 4 2 3 4 2 3 5\n1 4 1 4 4 4 4 4 4\n1 6 3 3 3 4 2 2 2\n''') == '8'\nassert solution('''\n13 10\n3 2 4 5 1 2 2 5 2\n1 4 5 1 2 2 5 1 2\n5 1 1 1 2 2 5 1 1\n1 3 2 2 4 3 3 2 5\n1 2 1 1 3 1 2 1 2\n2 1 1 2 1 2 1 1 1\n1 1 1 1 3 1 1 2 1\n1 3 1 1 2 2 1 2 3\n1 1 3 1 3 1 3 1 1\n1 2 1 2 1 2 2 2 2\n2 3 1 1 3 1 2 1 1\n1 2 1 1 3 1 1 1 1\n''') == '10'\nassert solution('''\n20 6\n1 3 4 5 2 7 8 6 2 4 3 5 7\n1 5 8 6 7 6 5 1 6 5 1 4 2\n1 6 8 6 4 5 4 5 7 5 4 5 4 5\n1 4 1 2 5 1 2 1 3 5 1 1 2\n1 6 1 3 5 6 1 1 1 5 1 1 3\n2 5 1 3 2 3 1 4 3 1 5 1\n3 1 4 4 2 2 3 2 1 4 3 2\n2 1 4 4 4 3 4 1 2 4 4 4\n3 5 3 4 1 3 2 2 2 5 2 5\n1 3 1 3 1 3 2 5 1 2 1 5\n1 2 2 5 5 4 5 5 2 4 4 4\n5 2 2 2 4 5 1 3 3 3 5 3\n4 5 1 2 5 3 4 3 5 3 4 4\n''') == '15'\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 2\\n4 1 5 10\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == \"3\"\nassert solution(\"10 9\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\") == \"18\"\nassert solution(\"10 10\\n0 1 2 3\\n4 5 6 7\\n8 9 10 11\\n12 13 14 15\\n16 17 18 19\") == \"0\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\\n1 4 6\\n4 1 1\\n2 4 4\") == \"2\"\nassert solution(\"1 1 1\\n1 4 6\\n4 1 1\\n2 5 5\") == \"3\"\nassert solution(\"1 1 1\\n1 4 6\\n4 1 1\\n2 5 5\") == \"4\"\nassert solution(\"1 1 1\\n1 4 6\\n4 1 1\\n2 5 5\\n5 2 2\") == \"4\"\nassert solution(\"1 1 1\\n1 4 6\\n4 1 1\\n2 5 5\\n5 2 2\\n3 3 3\") == \"4\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\"\n) == \"no\"\n\nassert solution(\n    \"\"\"\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\"\n) == \"yes\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"no\"\nassert solution(\"5 3\") == \"no\"\nassert solution(\"5 3\") == \"yes\"\nassert solution(\"5 3\") == \"yes\"\nassert solution(\"5 3\") == \"no\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"no\"\nassert solution(\"5 3\") == \"yes\"\nassert solution(\"5 4\") == \"no\"\nassert solution(\"5 4\") == \"yes\"\nassert solution(\"5 5\") == \"yes\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes\\no\\no\\no\\no\\no'"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"no\"\nassert solution(\"2\") == \"yes\"\nassert solution(\"3\") == \"yes\"\nassert solution(\"4\") == \"yes\"\nassert solution(\"5\") == \"yes\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\n\nassert solution('''5 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\n\n\n\"\"\""
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'no'\nassert solution('5 3') == 'yes'\nassert solution('5 3') == 'yes'\nassert solution('5 3') == 'yes'\nassert solution('5 3') == 'yes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no\\no\\no\\no\\no\\no'\nassert solution('''5 5\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes\\no\\no\\no\\no\\no\\no'\nassert solution('''5 4\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes\\no\\no\\no\\no\\no\\no'\nassert solution('''5 5\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no'\nassert solution('''5 5\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '2'\nassert solution('5 2') == '3 1 0 1 0'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'\nassert solution('5 2') == '1 0 2 1 0'\nassert solution('4 2') == '3'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 3') == '2'\nassert solution('4 2\\n1 4') == '3'"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 2\") == \"3\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 2\") == \"3\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 3') == 'YES'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n''') == 'NO'\nassert solution('''3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n''') == 'YES'\nassert solution('''3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n''') == 'NO'"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3 3\n1 0 1\n2 1 2\n2 1 2\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3 3\n1 0 1\n2 1 2\n2 1 2\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 3') == 'YES'\nassert solution('3 3') == 'YES'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n2 1 2\n2 1 2\n2 2 3\n2 2 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'NO', \"baseline\"\nassert solution('3 3') == 'YES', \"baseline\"\n\n'''\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"YES\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 0 1\n3 1 2 3\n2 1 2\n2 1 2\n2 2 3\n1 3''') == 'NO'\nassert solution('''3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 2\n2 2 3\n2 3''') == 'YES'\nassert solution('''3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 2\n2 2 3\n2 3''') == 'YES'\nprint('A')\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"(()((#(()))\") == \"1\"\nassert solution(\"#\") == \"-1\"\nassert solution(\"(()((#(#)\") == \"2\""
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('(((#)((#)') == '1'\nassert solution('()((#((#(#()') == '2'\nassert solution('#') == '-1'\nassert solution('(((#(#(#(#((((((#((((#((#)') == '2'\nassert solution
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"()((#(#(#)\") == \"2\"\n\nassert solution(\"(()((#((#(#)\") == \"2\"\n\nassert solution(\"#\") == \"-1\"\n\nassert solution(\"()((#(#(#)\") == \"2\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n(((#)((#)\n\"\"\") ==\n1)\n\nassert solution(\"()((#((#(#)\") ==\n2)\n\nassert solution(\"#\") ==\n-1\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"(((#)((#)\") == \"1\"\nassert solution(\"()((#((#(#()\") == \"2\"\nassert solution(\"()((#((#(#()\") == \"2\"\nassert solution(\"()((#((#(#))\") == \"2\"\nassert solution(\"#\") == \"-1\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('(((#)((#)') == '1'\n\nassert solution('()((#((#(#()') == '2'\n\nassert solution('#') == '-1'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '1\\n2\\n1\\n1'\n\"\"\""
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('(((#)((#)') == '1'\nassert solution('()((#((#(#)') == '2'\nassert solution('()((#((#(#)') == '2'\nassert solution('#') == '-1'\nassert solution('(#)') == '-1'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n''') == '-1'\nassert solution('''\n4 0\n''') == '16'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == '-1'\nassert solution(\"4 0\") == '16'\nassert solution(\"0 4\") == '-16'"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"xoxox\"\nassert solution(\"4 0\") == \"xxxx\"\nassert solution(\"1 2\") == \"-\"\nassert solution(\"0 1\") == \"-\"\nassert solution(\"5 7\") == \"ooxoxoxox\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n    2 3\n''') == '-1'\nassert solution(\n'''\n    4 0\n''') == '16'\n\nassert solution(\n'''\n    0 4\n''') == '-16'\n\nassert solution(\n'''\n    2 3\n''') == '16'\n\nassert solution(\n'''\n    4 0\n''') == '16'\n\n\n'''\ncout << solution('2 3') << endl;\ncout << solution('4 0') << endl;\ncout << solution('0 4') << endl;\ncout << solution('2 3') << endl;\ncout << solution('4 0') << endl;\ncout << solution('0 4') << endl;\n\n'''\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == '-1'\nassert solution(\"4 0\") == '-16'\nassert solution(\"5 6\") == '16'\nassert solution(\"1 2\") == '0'\nassert solution(\"0 0\") == '0'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"-1\"\nassert solution(\"4 0\") == \"16\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"-1\"\nassert solution(\"4 0\") == \"-16\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n''') == '-1'\nassert solution('''\n0 4\n''') == '-16'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('1 1 2') == '8'\nassert solution('1 2 1') == '9'\nassert solution('1 1 3') == '17'\nassert solution('1 2 2') == '8'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('1 1 2') == '0'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('5 3 3') == '35'\nassert solution('5 5 4') == '40'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 1 1\"\n) == \"17\"\nassert solution(\n    \"2 3 2\"\n) == \"13\"\nassert solution(\n    \"3 3 3\"\n) == \"3\"\nassert solution(\n    \"3 1 2\"\n) == \"4\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('2 1 1') == '18'\nassert solution('3 1 1') == '17'\nassert solution('1 1 1') == '17'"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nassert solution(\"1 2 2\") == \"18\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"18\"\nassert solution(\"1 1 2 2\") == \"18\"\nassert solution(\"1 2 1 2\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('1 1 1') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nassert solution(\"1 1 0\") == \"1\"\nassert solution(\"1 0 1\") == \"0\"\nassert solution(\"0 1 1\") == \"0\"\nassert solution(\"1 1 0\") == \"0\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('1 1 1') == '8'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nassert solution(\"2 1 1\") == \"20\"\nassert solution(\"2 2 1\") == \"21\"\nassert solution(\"2 2 2\") == \"21\"\nassert solution(\"2 3 1\") == \"22\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''2 2\n1 2\n3 4\n''') == '3 2'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2 \nassert solution('''\n2 2\n1 2\n3 4\n''') == '2 3 \n'''"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''\n2 2\n1 2\n3 4\n''') == '3 2 3'\nassert solution('''\n3 3\n1 2\n3 4\n''') == '1 2 1'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''\n2 2\n1 2\n3 4\n''') == '3 2 3'\nassert solution('''\n2 2\n1 2\n3 4\n''') == '3 2 3'\nassert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''\n2 2\n1 2\n3 4\n''') == '2 2 2'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '2 2 2'\nassert solution('2 2') == '2 2 2'\nassert solution('2 2') == '2 2 2'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''2 2\n1 2\n3 4\n''') == '3 2'"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\"\nassert solution(\"2 2\\n1 2\") == \"2 2\"\nassert solution(\"2 1\\n3 4\") == \"3 2\"\n\n\"\"\"\n\nn, m = map(int, input().split())\n\nfor i in range(1, n + m - 1):\n    for j in range(i - 1):\n        for k in range(i, j - 1, -1):\n            if i == j:\n                continue\n            if k!= i:\n                print(i, j, k)\n                break\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2\n1 2\n2 1\n\"\"\") == \"2 2 2 \nassert solution(\"\"\"\n3 2\n1 2\n3 4\n\"\"\") == \"2 3 \n\"\"\")\nassert solution(\"\"\"\n1 2\n2 1\n\"\"\") == \"2 2 2 \n\"\"\")\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\n1 2 1\n2 1 2\n\n2 2\n1 2\n3 4\n\n2 3\n3 2''') == '2 2 2'\nassert solution('''2 2\n1 2\n3 4\n\n2 3\n3 2''') == '3 2'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2\\n') == '2 2 2\\n2 2 2\\n'\nassert solution('2 2\\n1 2\\n3 4\\n') == '2 3\\n3 2\\n'\nassert solution('2 1\\n1 2\\n3 4\\n') == '2 2\\n2 2\\n'\nassert solution('3 3\\n1 2\\n3 4\\n') == '3 3\\n3 2\\n3 2\\n'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == \"332748119\"\nassert solution('''\n1 2\n1\n1\n''') == \"3\"\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == \"160955686\"\n''')"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2\n1\n2 1\n''') == '1,1'\n\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686,185138929'\n\nprint(solution('''\n1 2\n0 1\n2 1\n'''))"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '332748119'\nassert solution('1 2') == '332748119'\nassert solution('1 2') == '332748119'\nassert solution('1 2') == '332748119'\n\nassert solution('1 1') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '332748119'\nassert solution('3 3') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == '332748119'\n\nassert solution('''1 2\n1\n1''') == '3'\n\nassert solution('''3 3\n0 1 1\n4 3 5\n''') == '160955686'"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"332748119\"\nassert solution(\"1 2\") == \"332748119\"\nassert solution(\"3 3\") == \"160955686\"\nassert solution(\"3 3\") == \"160955686\""
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(test_input_1) == '332748119'\nassert solution(test_input_2) == '185138929'\nassert solution(test_input_3) == '974061117'\n\n\n'''"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '3'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n\n''') == \"332748119\"\n\nassert solution('''\n1 2\n1\n1\n\n''') == \"3\"\n\nassert solution('''\n3 3\n0 1 1\n4 3 5\n\n''') == \"160955686\"\n\nassert solution('''\n2 2\n1\n1\n\n''') == \"1.3333333333\"\n\nassert solution('''\n1 2\n1\n1\n\n''') == \"1.3333333333\""
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 1 5 2 6\n''') == '11'\nassert solution('''\n5\n1 2 3 4 5\n''') == '6'\nassert solution('''\n5\n1 100 101 100 1\n''') == '102'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '11'\nassert solution('5') == '6'\nassert solution('5') == '6'\nassert solution('5') == '6'"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3 1 5 2 6\n''') == '11'\nassert solution('''5\n1 2 3 4 5\n''') == '6'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '11'\nassert solution('''\n5\n1 100 101 100 1\n''') == '102'"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"11\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 2') == '3'\nassert solution('1 100 101 100 1') == '102'\nassert solution('5 4 4 4 4') == '10'\nassert solution('5 4 4 4 4') == '5'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3\n\n''') == '6'\nassert solution('''5\n1 2 3 4 5\n\n''') == '11'\nassert solution('''5\n1 2 3 4 5\n\n''') == '6'\n\n'''\n1\n3\n\n2\n4\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n1\n10\n\n2\n10\n\n1\n10\n\n1\n10\n\n4\n10\n\n1\n100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n1 100 101 100 1\n\n2\n10\n\n3\n5\n\n4\n6\n\n5\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n3 1 5 2 6\\n') == '11\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '6\\n'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '11'\nassert solution(\"5\\n3 1 5 2 6\") == '11'\nassert solution(\"5\\n1 2 3 4 5\") == '6'"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 3\\n2 3') == 'No'\nassert solution('3 1\\n1 3\\n2 3') == 'Yes'"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(t) == \"Yes\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n2 2\n1 3\n2 3\n\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n    \"\"\"\n3 1\n1 3\n2 3\n\n\"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n4 2\n1 4\n2 4\n3 4\n4 6\n5 6\n6 7\n7 8\n8 6\n9 6\n10 5\n11 5\n12 5\n13 5\n14 5\n15 5\n16 5\n17 5\n18 5\n19 5\n20 5\n\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n    \"\"\"\n20 2\n1 4\n2 4\n3 4\n4 13\n5 6\n6 7\n7 8\n8 6\n9 6\n10 5\n11 5\n12 5\n13 5\n14 5\n15 5\n16 5\n17 5\n18 5\n19 5\n20 5\n21 5\n22 5\n23 5\n24 5\n25 5\n26 5\n27 5\n28 5\n29 5\n30 5\n31 5\n32 5\n33 5\n34 5\n35 5\n36 5\n37 5\n38 5\n39 5\n40 5\n41 5\n42 5\n43 5\n44 5\n45 5\n46 5\n47 5\n48 5\n49 5\n50 5\n51 5\n52 5\n53 5\n54 5\n55 5\n56 5\n57 5\n58 5\n59 5\n60 5\n61 5\n62 5\n63 5\n64 5\n65 5\n66 5\n67 5\n68 5\n69 5\n70 5\n71 5\n72 5\n73 5\n74 5\n75 5\n76 5\n77 5\n78 5\n79 5\n80 5\n81 5\n82 5\n83 5\n84 5\n85 5\n86 5\n87 5\n88 5\n89 5\n90 5\n91 5\n92 5\n93 5\n94 5\n95 5\n96 5\n97 5\n98 5\n99 5\n100 5\n101 5\n102 5\n103 5\n104 5\n105 5\n106 5\n107 5\n108 5\n109 5\n110 5\n111 5\n112 5\n113 5\n114 5\n115 5\n116 5\n117 5\n118 5\n119 5\n120 5\n121 5\n122 5\n123 5\n124 5\n125 5\n126 5\n127 5\n128 5\n129 5\n130 5\n131 5\n132 5\n133 5\n134 5\n135 5\n136 5\n137 5\n138 5\n139 5\n140 5\n141 5\n142 5\n143 5\n144 5\n145 5\n146 5\n147 5\n148 5\n149 5\n150 5\n151 5\n152 5\n153 5\n154 5\n155 5\n156 5\n157 5\n158 5\n159 5\n160 5\n161 5\n162 5\n163 5\n164 5\n165 5\n166 5\n167 5\n168 5\n169 5\n170 5\n171 5\n172 5\n173 5\n174 5\n175 5\n176 5\n177 5\n178 5\n179 5\n180 5\n181 5\n182 5\n183 5\n184 5\n185 5\n186 5\n187 5\n188 5\n189 5\n190 5\n191 5\n192 5\n193 5\n194 5\n195 5\n196 5\n197 5\n198 5\n199 5\n200 5\n201 5\n202 5\n203 5\n204 5\n205 5\n206 5\n207 5\n208 5\n209 5\n210 5\n211 5\n212 5\n213 5\n214 5\n215 5\n216 5\n217 5\n218 5\n219 5\n220 5\n221 5\n222 5\n223 5\n224 5\n225 5\n226 5\n227 5\n228 5\n229 5\n230 5\n231 5\n232 5\n233 5\n234 5\n235 5\n236 5\n237 5\n238 5\n239 5\n240 5\n241 5\n242 5\n243 5\n244 5\n245 5\n246 5\n247 5\n248 5\n249 5\n250 5\n251 5\n252 5\n253 5\n254 5\n255 5\n256 5\n257 5\n258 5\n259 5\n260 5\n261 5\n262 5\n263 5\n264 5\n265 5\n266 5\n267 5\n268 5\n269 5\n270 5\n271 5\n272 5\n273 5\n274 5\n275 5\n276 5\n277 5\n278 5\n279 5\n280 5\n281 5\n282 5\n283 5\n284 5\n285 5\n286 5\n287 5\n288 5\n289 5\n290 5\n291 5\n292 5\n293 5\n294 5\n295 5\n296 5\n297 5\n298 5\n299 5\n300 5\n301 5\n302 5\n303 5\n304 5\n305 5\n306 5\n307 5\n308 5\n309 5\n310 5\n311 5\n312 5\n313 5\n314 5\n315 5\n316 5\n317 5\n318 5\n319 5\n320 5\n321 5\n322 5\n323 5\n324 5\n325 5\n326 5\n327 5\n328 5\n329 5\n330 5\n331 5\n332 5\n333 5\n334 5\n335 5\n336 5\n337 5\n338 5\n339 5\n340 5\n341 5\n342 5\n343 5\n344 5\n345 5\n346 5\n347 5\n348 5\n349 5\n350 5\n351 5\n352 5\n353 5\n354 5\n355 5\n356 5\n357 5\n358 5\n359 5\n360 5\n361 5\n362 5\n363 5\n364 5\n365 5\n366 5\n367 5\n368 5\n369 5\n370 5\n371 5\n372 5\n373 5\n374 5\n375 5\n376 5\n377 5\n378 5\n379 5\n380 5\n381 5\n382 5\n383 5\n384 5\n385 5\n386 5\n387 5\n388 5\n389 5\n390 5\n391 5\n392 5\n393 5\n394 5\n395 5\n396 5\n397 5\n398 5\n399 5\n400 5\n401 5\n402 5\n403 5\n404 5\n405 5\n406 5\n407 5\n408 5\n409 5\n410 5\n411 5\n412 5\n413 5\n414 5\n415 5\n416 5\n417 5\n418 5\n419 5\n420 5\n421 5\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"No\"\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 4\n2 4\n''') == 'No'\nassert solution('''3 1\n1 3\n2 3\n''') == 'Yes'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 1\n1 3\n2 3\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n3 2\n1 2\n1 3\n2 3\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\n1 4\n1 2\n2 4\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n1 1\n2 3\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n3 3\n1 2\n1 3\n2 3\n\"\"\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 3') == 'Yes'\nassert solution('3 1\\n1 3') == 'No'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'Yes'\n\n\"\"\"\nfrom collections import defaultdict\n\nn, k = map(int, input().split())\nneighbors = defaultdict(list)\n\nfor i in range(1, n+1):\n    neighbors[i] = list(map(int, input().split()))\n\nvisited = set()"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6') == 'Yes'\nassert solution('3 1\\n1 3\\n2 3') == 'No'"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2\\n1 4\\n2 4') == 'Yes'\nassert solution('3 1\\n1 3\\n2 3') == 'No'\n\"\"\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '1'\nassert solution('4 5') == '2'\nassert solution('3 5') == '0'\nassert solution('4 1') == '-1'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3\n.#.\n###\n##.\n\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 2\n##\n.#\n.#\n##\n\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4 5\n.....\n.....\n.....\n\n\"\"\") == \"0\"\n\nprint(solution(\"\"\"\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"3 5\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1', '1st solution'\nassert solution('4 2') == '0', '2nd solution'\nassert solution('3 5') == '0', '3rd solution'\nassert solution('2 1') == '-1', '4th solution'\nassert solution('3 5') == '0', '5th solution'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 5') == '2'\nassert solution('2 1') == '-1'\nassert solution('3 5') == '0'\nassert solution('4 5') == '0'\n\n\n\"\"\""
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"4 5\") == \"2\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n.#.\n###\n##.''') == '1'\nassert solution('''4 2\n##\n.#\n##.''') == '-1'\nassert solution('''3 5\n.....\n.....\n.....\n\n....#\n####.\n.###.\n\n[Image]''') == '0'\nassert solution('''2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 2') == '2'\nassert solution('3 5') == '0'\nassert solution('2 1') == '-1'\nassert solution('3 5') == '0'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 2') == '-1'\nassert solution('4 5') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 2') == '-1'\nassert solution('3 5') == '0'\nassert solution('4 5') == '1'\nprint(solution(input()))\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == 'YES'"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == 'YES'\nassert solution([5, 4, 2]) == 'YES'\nassert solution([1, 0, 2, 3]) == 'YES'\nassert solution([10, 10, 10]) == 'YES'\nassert solution([5, 0, 0]) == 'YES'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"YES\""
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 0 2 3\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'YES'\nassert solution('''5 6\n6 5 6 2 2\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'YES'\nassert solution('''5 6\n1 2 3 4 5 6 7 8 9\n''') == 'YES'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == 'YES\\n5 4 2'\nassert solution('3 10') == 'YES\\n10 10 10'\nassert solution('4 3') == 'YES\\n1 2 2 3'\nassert solution('5 6') == 'NO'"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n\nassert solution() == 'YES'\nassert solution() == 'YES'"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == 'YES\\n10 2\\n'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n1 0 2 3\n''') == \"YES\"\nassert solution('''\n3 5\n6 5 6 2 2\n''') == \"YES\"\nassert solution('''\n3 5\n6 5 6 2 2\n''') == \"NO\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == '''1 3 6 2\n1 1 1 1'''\nassert solution([1, 1, 1, 1]) == '1 1 1 1'\nassert solution([3, 2, 6, 4]) == '3 4 2 6'\nassert solution([4, 3, 2, 1]) == '4 3 6 2'\nassert solution([4, 3, 2, 1, 3]) == '4 3 6 2'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1 2\n''') == '1 2'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 2 3 2') == '4 3 6 2'\nassert solution('1\\n42') == '42'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n''') == '4 3 6 2'\nassert solution('''\n1\n42\n''') == '42'\n\ninput()\nprint(solution(stdin))\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1 2 3\"\nassert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\""
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == stdout, (solution(), stdout)"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1'\nassert solution('4\\n') == '4 3 6 2'\nassert solution('5\\n') == '1 2 3 5'\nassert solution('100\\n') == '1 2 3 5'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1\n1 2\n1 3\n''') == '3'\nassert solution('''\n4\n2 1\n2 2\n3 1\n3 2\n''') == '6'\nassert solution('''\n5\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '7'\n'''\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3\n''') == '3'\n\nassert solution('''4\n2 1\n2 2\n3 1\n3 2\n''') == '6'\n\nassert solution('''5\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '5'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3''') == '3'\nassert solution('''4\n2 1\n2 2\n3 1\n3 2''') == '6'\nprint('all tests passed')\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n1 2\n1 3''') == '3'\nassert solution('''4\n1 1\n2 1\n3 1\n4 1''') == '5'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3''') == '3'\nassert solution('''4\n2 1\n2 2\n3 1\n3 2\n''') == '6'"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '6'\nassert solution('5') == '11'\n\"\"\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3 3'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nEE.EE\nE..E\nE.EE''') == '-1'\nassert solution('''5\nEE.EE\nE..E\nE...E\n.EE.E\nEE.EE''') == '4 4'\nassert solution('''3\nEEE\nE..\nE.E''') == '1 1'\nassert solution('''3\n.E.E\nE..\nE.E''') == '1 1'\nassert solution('''5\nEE.EE\nE..E\nE...E\n.EE.E\nEE.EE''') == '4 4'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '4 4'\n\nassert solution('''3\nEEE\nE..\nE.E''') == '-1'\n\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '3 3'\n\nassert solution('''10\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..\nEEEEE..''') == '12 12'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1 1'\nassert solution('3') == '2 2'\nassert solution('3') == '3 3'\n\n\"\"\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n.E.\\nE..') == '1 1'\nassert solution('3\\nEEE') == '-1'\nassert solution('5\\nEE.EE') == '4 4'\n\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 1'\nassert solution('5') == '3 3'\nassert solution('3') == '-1'\n\n\n\n'''"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == \"1 1\\n2 2\"\nassert solution('3') == \"1 3\\n2 2\\n3 3\"\nassert solution('5') == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n.E.\nE.E\n.E.\n\n\"\"\") == \"3 3\"\n\nassert solution(\"\"\"\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\n\"\"\") == \"4 4\"\n\nassert solution(\"\"\"\n3\nEE.EE\nE..E\n.EE.\n\n\"\"\") == -1"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n.E.\\nE.E') == '-1'\nassert solution('3\\n.E.\\nE..') == '3 3'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 1'\nassert solution('5') == '3 3'\nassert solution('1') == '-1'"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10\") == \"32\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10') == '32'\nassert solution('10 2') == '32'\nassert solution('10 -1 2 2 2 2 2 2 -1 10') == '32'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('3 4 5 6') == '12'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3'\nassert solution('10 20') == '20'\nassert solution('10 -1 2 2 2 2 2 2 -1 10') == '32'"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10') == '32'\nassert solution('10 2') == '32'\nassert solution('10 -1') == '-1'"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '3'\nassert solution('10 -1 2 2 2 2 2 2 -1 10') == '32'\nprint(solution(input()))\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n5 -1 2 2 2 2 2 2 -1 10') == \"32\"\nassert solution('1\\n10 -1 2 2 2 2 2 2 -1 10') == \"1\""
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '32'\nassert solution('3 3') == '3'\nassert solution('3 1') == '1'\nassert solution('-1 -1 -1 -1 -1') == '-1'\nassert solution('10 2') == '32'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"32\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79'"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1 2\n1 1 1\n''') == '3'\nassert solution('''\n4 2 3\n1 2 4 8\n''') == '79'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_stdin) == solution_ref(input_stdin)"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 1, 2]) == '3'\nassert solution([4, 2, 3]) == '7'\nassert solution([1, 1, 1]) == '3'\nassert solution([4, 2, 3, 1]) == '10'\nassert solution([1, 1, 1, 1]) == '3'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\") == \"3\"\nassert solution(\"4 2 3\") == \"79\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1\\n1 1 1') == '3'\nassert solution('4 2 3\\n1 2 4 8') == '79'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"5 5\") == \"7\"\nassert solution(\"3 9\") == \"5\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"5 5\") == \"7\"\nassert solution(\"12 3\") == \"12\"\nassert solution(\"5 6\") == \"7\"\nassert solution(\"10 3\") == \"7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '7'\nassert solution('2 3') == '7'\nassert solution('3 1') == '7'\nassert solution('2 1') == '7'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\"\nassert solution(\"8 5\") == \"7\\n7\\n4\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"4 2\") == \"7\"\nassert solution(\"3 1\") == \"7\"\nassert solution(\"4 1\") == \"7\"\nassert solution(\"5 5\") == \"7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"5 3\") == \"7\"\nassert solution(\"1 3\") == \"4\"\nassert solution(\"2 3\") == \"7\"\n\n'''\n\n\nimport math"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 3\n1 2 2\n2 3 3\n3 2 3\"\"\") == \"7 7 7\"\nassert solution(\"\"\"3 3\n1 2 2\n2 3 3\n3 1 3\"\"\") == \"7 7 7\"\nassert solution(\"\"\"3 3\n1 2 2\n2 3 3\n3 2 3\"\"\") == \"7 7 7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"7 7\") == \"7\"\nassert solution(\"12 12\") == \"5\"\nassert solution(\"15 6\") == \"5\""
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"4 4\") == \"7\"\nassert solution(\"8 8\") == \"1\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n\"\"\") == '6'\n\nassert solution(\"\"\"9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n\"\"\") == '9'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'\n\n\n\"\"\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2\\n'+\n '1 5 6 2\\n'+\n '1 3\\n'+\n '3 2\\n'+\n '4 5\\n'+\n '3 7\\n'+\n '4 3\\n'+\n '4 6\\n') == '6'\nassert solution('9 3\\n'+\n '3 2 1 6 5 9\\n'+\n '8 9\\n'+\n '3 2\\n'+\n '2 7\\n'+\n '3 4\\n'+\n '7 6\\n'+\n '4 5\\n'+\n '2 1\\n'+\n '2 8\\n') == '9'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"7 2\\n\"\n    \"1 5 6 2\\n\"\n    \"1 3\\n\"\n    \"3 2\\n\"\n    \"4 5\\n\"\n    \"3 7\\n\"\n    \"4 3\\n\"\n    \"4 6\\n\"\n    ) == \"6\"\n\nassert solution(\n    \"9 3\\n\"\n    \"3 2 1 6 5 9\\n\"\n    \"8 9\\n\"\n    \"3 2\\n\"\n    \"2 7\\n\"\n    \"3 4\\n\"\n    \"7 6\\n\"\n    \"4 5\\n\"\n    \"2 1\\n\"\n    \"2 8\\n\"\n    ) == \"9\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2') == '9'\nassert solution('7 3') == '12'"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n1 5 6 2\\n1 3\") == \"6\"\nassert solution(\"7 3\\n3 2 1 6 5 9\\n8 9\\n3 2\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 2\n1 5 6 2\n1 3''') == '6'\nassert solution('''9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n''') == '9'\nassert solution('''20 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n''') == '22'"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n1 3\\n3 2') == '6'\nassert solution('9\\n3\\n2 1\\n2 8') == '9'\nprint('The local tests are passing. Great job!')\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6''') == '6'\nassert solution('''9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8''') == '9'\nassert solution('''4 3\n3 2\n2 7\n2 8\n3 4\n4 5\n2 1''') == '5'\nassert solution('''9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8''') == '7'\nassert solution('''2 3\n3 2\n2 7\n2 8\n3 4\n7 6\n4 5\n2 1''') == '7'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('000000') == '-1'\nassert solution('000101') == '3 1 3 4'"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0010100\") == \"3 1 3 4\"\nassert solution(\"111\") == \"1 7\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0010100') == '3 1 3 4'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1001') == '1 2 3'\nassert solution('111001') == '1 2 5'\nassert solution('111') == '-1'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0010100') == '3 1 3 4'\nassert solution('111') == '-1'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0010100') == '3 1 3 4'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0010100') == \"3 1 3 4\"\nassert solution('111') == \"-1\"\nassert solution('010101') == \"-1\"\n\nassert solution('010101') == \"-1\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0010100\") == \"3 1 3 4\"\nassert solution(\"111\") == \"-1\"\nassert solution(\"010110\") == \"2 5 6 7\"\nassert solution(\"000010\") == \"1 2 4\"\nassert solution(\"101010\") == \"1 3 5\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10011000\n11101100\n01101100\n11001010\n01110010\n01111000\n01101100\n11101100\n01101100\n11001010\n01111000\n01111000\n01111000\n11001010\n01101100\n01111000\n01111000\n01111000\n''') == '3'\nassert solution('''011\n101\n110\n100\n''') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"01\") == \"3 1 3 4\"\nassert solution(\"111\") == \"1 7\"\nassert solution(\"0010100\") == \"3 1 3 4\"\nassert solution(\"111\") == \"1 7\""
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1'\nassert solution('2 2') == '1'\nassert solution('3 7') == '24'\nassert solution('1 3') == '2'\nassert solution('1 4') == '1'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == str(\nanswer)\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3\\n2 1 2') == '1'\nassert solution('2 3\\n2 1 2') == '1'\nassert solution('1 3\\n3 1 2 3') == '2'\nassert solution('2 4\\n2 1 2') == '1'\nassert solution('3 7\\n3 1 2 3') == '24'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 3\n2 1 2\n2 2 3\n''') == '1'\nassert solution('''\n2 3\n2 1 2\n3 2 3 4\n''') == '2'\nassert solution('''\n3 7\n2 1 2\n2 3 4\n3 5 6 7\n''') == '24'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 6\n2 1 2\n2 3 4\n3 2 3 4\n3 4 5 6\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 3\n1 2 2\n2 1 3\n2 3 1\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 3\n1 1 1\n2 2 2\n3 3 3\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4 4\n1 2 2\n1 3 3\n2 3 1\n2 1 1\"\"\") == \"3\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\n2 1 2\n2 2 3\n''') == '1'\nassert solution('''1 3\n3 1 2 3\n''') == '2'\nassert solution('''2 4\n2 1 2\n3 2 3 4\n''') == '24'"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('1 3') == '1'\nassert solution('2 3') == '1'\nassert solution('2 2') == '2'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n2 1 2\n2 2 3\n''') == '1'\n\nassert solution('''2 4\n2 1 2\n3 2 3 4\n''') == '2'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 4 2 3 1\n''') == '3'\nassert solution('''4\n1 5 4 7\n''') == '6'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 4 2 3 1\n''') == '3'\nassert solution('''\n4\n1 5 4 7\n''') == '6'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5\n1 4 2 3 1\"\"\") == \"3\"\nassert solution(\"\"\"4\n1 5 4 7\"\"\") == \"6\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 4 2 3 1\n''') == \"3\"\nassert solution('''4\n1 5 4 7\n''') == \"6\"\nassert solution('''5\n1 5 2 3 1\n''') == \"3\"\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == \"10\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution() == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 4 2 3 1\n''') == '3'\nassert solution('''\n3\n1 5 4 7\n''') == '6'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"62\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"30\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2\n1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"20\"\nassert solution(\"\"\"\n4\n1 1 1 1 1\n\"\"\") == \"62\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n1 1 2 3\n\"\"\") == \"10\"\nassert solution(\"\"\"\n5\n1 1 1 1 1\n\"\"\") == \"62\""
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2\n\n''') == '4'\nassert solution('''\n4\n1 1 2 3\n\n''') == '20'"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"20\"\nassert solution(\"5\") == \"62\""
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 2\n''') == '4'\nassert solution('''\n5\n1 1 1 1 1\n''') == '62'\nassert solution('''\n10\n
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '4'\nassert solution('5\\n1 1 1 1 1') == '62'"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 2\") == \"3\"\nassert solution(\"4\\n1 1 2 3\") == \"22\"\nassert solution(\"5\\n1 1 1 1 1\") == \"62\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '3'\n) == '3'\nassert solution(\n    '2'\n) == '4'\nassert solution(\n    '5'\n) == '62'"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 1 1 1 1\n\"\"\") == \"62\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1\\n') == '6'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n') == '15'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '15'\nassert solution('1') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '7'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1 1\n1 1\n1 1\n''') == '6'\nassert solution('''3\n1 2\n2 1\n3 5\n5 3\n''') == '15'\nassert solution('''2\n1 5\n1 2\n''') == '7'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n1 1\n1 1\n1 1\n\"\"\") == \"6\"\nassert solution(\"\"\"4\n1 2\n2 1\n3 5\n5 3\n\"\"\") == \"15\"\nassert solution(\"\"\"1\n5 6\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n1 2\\n1 2\") == \"15\"\nassert solution(\"3\\n1 2\\n1 2\") == \"7\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1 1\n1 1\n1 1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4\n1 2\n2 1\n3 5\n5 3\n\"\"\") == \"15\"\nassert solution(\"\"\"\n1\n5 6\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '7'\nassert solution('1 2') == '3'\nassert solution('3 5') == '7'"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\nassert solution('3\\n3') == '2'\nassert solution('3\\n9') == '2'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n4''') == '3'\nassert solution('''1\n1\n1\n2''') == '2'\nassert solution('''3\n2\n3\n3''') == '1'\nassert solution('''2\n2\n1\n1''') == '0'\n\n'''"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n2\n''') == '1'\nassert solution('''\n3\n3 3\n''') == '3'\nassert solution('''\n3\n3 3\n10 10 10\n''') == '6'"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4 4\n2\n''') == '3'\nassert solution('''\n2\n3 3\n10 10 10\n''') == '6'\nassert solution('''\n3\n3 3\n10 10 10\n''') == '6'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1', \"Wrong result\"\nassert solution('2') == '3', \"Wrong result\"\nassert solution('3') == '4', \"Wrong result\"\nassert solution('4') == '5', \"Wrong result\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2\n\n1\n2\n2\n''') == '3'\nassert solution('''\n2\n1\n2\n''') == '2'\nassert solution('''\n2\n2\n1\n''') == '1'\nassert solution('''\n1\n1\n2\n''') == '2'\nassert solution('''\n2\n2\n1\n''') == '2'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n2\n2''') == '1'\nassert solution('''3\n3\n4''') == '3'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"6\"\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 6 10\") == \"10\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 3 100\") == \"10\"\nassert solution(\"3 6 5 1000000007\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('3 3 3') == '10'\nassert solution('3 6 5') == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 6 5 1000000007') == '0'\nassert solution('1 1 1') == '10'\nassert solution('1 2 3') == '0'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 5 6 11') == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3 3 100''') == '10'\nassert solution('''3 5 6 11''') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 6 5 1000000007') == '0'\nassert solution('3 5 6 11') == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 3 100\") == \"10\"\nassert solution(\"3 6 5 1000000007\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 5 6 11') == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 2 3\nintel\ncode\nch allenge\n\n''') == 'YES'\n\nassert solution('''4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n\n''') == 'NO'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n2 2 3\nintel\ncode\nch allenge\n\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\n5\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n\n6\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\"\"\") == \"YES\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\nintel\\ncode') == 'YES'\nassert solution('4 1 2 3\\nto be or not to be\\nthe slings and arrows of outrageous fortune\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune') == 'NO'\nassert solution('4 1 2 3\\nch allenge\\njklmnopqrstu\\nvwxyz') == 'YES'\nassert solution('4 1 2 3\\nto be or not to be\\nthe slings and arrows of outrageous fortune\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nto be or not to be that is the question') == 'NO'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'YES'\n\nassert solution('''\n4\n1 2 3 1\nintel\ncode\nch allenge\n''') == 'NO'\n\nassert solution('''\n3\n2 2 3\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'YES'\n\nassert solution('''\n3\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n''') == 'NO'"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3\\nintel\\ncode\") == \"YES\"\nassert solution(\"4\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\"\nassert solution(\"4\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"abc\") == \"NO\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"intel\") == \"YES\"\nassert solution(\"code\") == \"YES\"\nassert solution(\"ch allenge\") == \"YES\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3\\nintel\\ncode') == 'YES'\nassert solution('4 1 2 3\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles') == 'YES'\nassert solution('4 4 4 4\\n') == 'NO'\nassert solution('3\\n') == 'NO'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 2 3\nintel\ncode\nch allenge\n''') == 'YES'\nassert solution('''\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'NO'\nassert solution('''\n4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n''') == 'YES'\nassert solution('''\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'NO'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '26'\nassert solution('3') == '26'\nassert solution('4') == '10'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"3\", \"1\", \"5\"]) == \"26\"\nassert solution([\"1\", \"10\"]) == \"10\"\nassert solution([\"1\"]) == \"1\"\n\n\"\"\"\n\n\nn = int(input())\narr = list(map(int, input().split()))\narr.sort()\nscore = 0\nfor i in arr:\n    score += i\nprint(score)"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"26\"\nassert solution(\"1\") == \"10\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"26\"\nassert solution(\"1\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"26\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"10\"\nassert solution(\"1 2 3\") == \"10\"\nassert solution(\"1 2 3 4\") == \"10\"\nassert solution(\"1 2 3 4 5\") == \"15\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n3 1 5\n\n\"\"\"\n) == \"26\""
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 5\n\n''') == '26'\nassert solution('''1\n10\n\n''') == '10'"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"3\", \"1 5\"]) == \"26\"\nassert solution([\"1\", \"10\"]) == \"10\""
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\"\n\nimport time\nstart = time.time()\nsolution(\"3 40\\n10 30 50\\n\")\nprint(time.time() - start)"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == '3'\nassert solution('3 40') == '32'\nassert solution('5 10') == '14'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n1 3 5\n''') == '3'\nassert solution('''\n3 40\n10 30 50\n''') == '32'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '3'\nassert solution('3 40') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\n1 3 5\n''') == '3'\nassert solution('''3 40\n10 30 50\n''') == '32'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '3'\nassert solution('3 40') == '32'\nassert solution('5 2') == '3'\n\n\n\n\nstdin = \"\"\"\n4 10\n1 3 5 2\n\"\"\""
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\n2\n\n''') == '3'\n\nassert solution('''\n2 5\n1 1\n\n''') == '3'\n\nassert solution('''\n2 7\n2\n\n''') == '4'\n\nassert solution('''\n2 100\n10 10\n\n''') == '99'\n\nassert solution('''\n2 100\n1\n\n''') == '100'"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '3'\nassert solution('3 40') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 4\n1 3 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"3 40\n10 30 50\n\"\"\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '3'\nassert solution('3 40') == '32'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5''') == '1 4'\nassert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5''') == '1 2 4'\nassert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5''') == '1 2 4'"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '1 4 5 6 7 8 9'\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4''') == '1 2 4'\nassert solution('''9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11''') == '1 4 5 6 7 8 9'\nprint(\"All Tests Passed for:\", __file__)\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4''') == '1 2 4'\nassert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4''') == '1 2'\nassert solution('''6 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\nSample Output 3:\n1 2\n2 4''') == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n\"\"\") == \"1 2 4\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 4 5 6 7 8 9'\nprint(solution())\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4''') == '1 2 4'''\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '1 4 5 6 7 8 9'\n\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 4'\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n2 1\n1 2.0\n1 3.100\n''') == '1'\nassert solution('''\n3 3\n1 5.0\n2 5.5\n3 6.0\n''') == '0'\nassert solution('''\n6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n''') == '2'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution(\"\"\"2\n2\n1 2.0\n1 3.100\n\n\"\"\") == '1'\nassert solution(\"\"\"3\n3\n1 5.0\n2 5.5\n3 6.0\n\n\"\"\") == '0'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('6 3') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"6 3\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 2\n2 1\n1 2.0\n1 3.100\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n\"\"\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2\n2 1\n1 2.0\n1 3.100\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 5\n1 5.0\n2 5.5\n3 6.0\n4 6.5\n5 7.0\n6 7.5\n7 8.0\n8 8.5\n9 9.0\n10 10.5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n1 1.0\n1 1.0\n1 1.0\n1 1.0\n1 1.0\n1 1.0\n1 1.0\n1 1.0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n2.0\n1 2.0\n1 2.0\n1 2.0\n1 2.0\n1 2.0\n1 2.0\n1 2.0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n2 1\n1 2.0\n1 3.100\n''') == '1'\nassert solution('''6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n''') == '2'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1\n2 1.0\n1 2.0''') == '1'\nassert solution('''3 3\n1 5.0\n2 5.5\n3 6.0''') == '0'\nassert solution('''6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125''') == '2'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 2\n2 3 6 5 4 10\n''') == '3'\n\nassert solution('''\n''') == '0'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n2 3 6 5 4 10\n''') == '3'\nassert solution('''\n1 1\n2 1\n''') == '1'\nassert solution('''\n4 4\n2 3 4 5\n''') == '2'\nassert solution('''\n2 2\n2 2\n''') == '2'\nassert solution('''\n2 2\n1 1\n''') == '1'\n'''\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    2 2\n    2 3 6 5 4 10\n    ''') == '3'\n\nassert solution('''\n    2 3\n    4 2 2 4 1\n    ''') == '1'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 6 5 4 10') == '3'\nassert solution('6 2') == '6'"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('6 2') == '3'\nassert solution('6 1') == '2'\nassert solution('3 4') == '1'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2\\n2 3 6 5 4 10') == '3'\nassert solution('1 2\\n3 4\\n5 7\\n') == '1'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('10 7\\n12 4 3 2 8 1 4 5') == '7'\nassert solution('20 18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18') == '15'\nassert solution('50 47\\n8 13 10 21 10 25 20 14 40 10 50 20') == '1'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 3') == '5'\nassert solution('6 3') == '6'\nassert solution('1 2 3 4 5') == '5'\nassert solution('6 3 4 5 2') == '3'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2''') == '2'\nassert solution('''3\n1 2 1''') == '4'\nassert solution('''9\n1 2 1 3 2 2 2 2 3''') == '10'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"3\\n1 2 1\") == \"4\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'\nassert solution('7') == '8'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 1 3 2 2 2 2 3') == '4'\nassert solution('9\\n1 2 1 3 2 2 2 2 3') == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2\"\n) == \"2\"\nassert solution(\n    \"3\"\n) == \"4\"\nassert solution(\n    \"9\"\n) == \"10\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 2 1 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n9\n1 2 1 3 2 2 2 2 3\n\"\"\") == \"10\""
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n2\n1 2\n1 2\n3''') == '10'\nassert solution('''3\n1 2\n2\n3''') == '3'\nassert solution('''9\n1 2 1 3 2 2 2 2 3\n''') == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2\\n') == '2'\nassert solution('3\\n1 2 3\\n') == '4'\nassert solution('9\\n1 2 1 3 2 2 2 2 3') == '10'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n\"\"\""
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '4'"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n''') == '4'\nassert solution('''1\n''') == '1'\nassert solution('''5\n''') == '4'\n'''\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\""
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\"\n\nassert solution(\"1\") == \"1\"\n\nassert solution(\"12\") == \"4\"\n\nassert solution(\"123\") == \"4\"\n\nassert solution(\"1234\") == \"4\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('2') == '4'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"4\", \"Sample Test Failed\"\nassert solution(\"2\") == \"4\", \"Sample Test Failed\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n''') == '4'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 6') == '5'\nassert solution('1 1') == '2'\nassert solution('2 3') == '4'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '5'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 6\\n1 5 1 4') == '5'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 6\") == \"5\"\nassert solution(\"4 6\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 6\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 6') == '5'\nassert solution('1 5 1 4') == '6'\nassert solution('5 2') == '4'\nassert solution('1') == '2'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 6\") == \"5\"\nassert solution(\"3 4\") == \"5\"\nassert solution(\"6 4\") == \"4\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"++++++\") == \"3\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+-++-+--') == '2'\nassert solution('+-+-+-+++-+-+++-') == '3'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+++') == '3'\nassert solution('---') == '3'\nassert solution('+--') == '3'\nassert solution('-+') == '1'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('-+-+') == '2'\nassert solution('+-+-+-') == '3'\nassert solution('+-+-++') == '4'\nassert solution('+-+-+++') == '5'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"-++-+\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+-') == '1'\nassert solution('+--+') == '2'"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"+-+-+\") == \"3\"\nassert solution(\"++-+-+-+-\") == \"1\"\nassert solution(\"++-+-+-+-+-\") == \"2\"\nassert solution(\"++++-+++-++++-+---+++-+-+++-+++-++-+++-++-+++-+-++-+++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-+++-+-++-+++-+++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++-+++-+++-++"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+-+') == '0'\nassert solution('-++') == '0'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+-+-+\") == \"1\"\n\nassert solution(\"--+--+-\") == \"3\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == '10110'\nassert solution(\"2\\nIN 1\\nIN 1\\nXOR 2 8\\n\") == '1'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"10110\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10110\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'\n\n\n\"\"\"\n\nn = int(input())\nfor i in range(n):\n    l = input().split(' ')\n    if l[0] == 'NOT':\n        a = int(l[1])\n        print('0' if a else '1', end='')\n    else:\n        a, b = int(l[1]), int(l[2])\n        if l[0] == 'AND':\n            print(('0' if (a and b) else '1'), end='')\n        elif l[0] == 'OR':\n            print(('0' if (a or b) else '1'), end='')\n        elif l[0] == 'XOR':\n            print(('0' if (a and not b) or (not a and b) else '1'), end='')\n        else:\n            print(('0' if a == b else '1'), end='')"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == '10110'\n\"\"\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nAND 2 4\\nIN 0\\nXOR 1 1\\nIN 0\\nNOT 2\\nIN 0\\nAND 2 8\\n') == '0'\nassert solution('1\\nAND 2 4\\nIN 1\\nXOR 1 1\\nIN 0\\nNOT 2\\nIN 1\\nAND 2 8\\n') == '1'\nassert solution('1\\nAND 2 4\\nIN 1\\nXOR 1 1\\nIN 0\\nNOT 2\\nIN 1\\nAND 2 8\\n') == '0'\nassert solution('1\\nAND 2 4\\nIN 1\\nXOR 1 1\\nIN 0\\nNOT 2\\nIN 1\\nAND 2 8\\n') == '0'\nassert solution('1\\nAND 2 4\\nIN 1\\nXOR 1 1\\nIN 0\\nNOT 2\\nIN 1\\nAND 2 8\\n') == '1'\n\n'''"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"10\\n\"\n    \"AND 9 4\\n\"\n    \"IN 1\\n\"\n    \"IN 1\\n\"\n    \"XOR 6 5\\n\"\n    \"AND 3 7\\n\"\n    \"IN 0\\n\"\n    \"NOT 10\\n\"\n    \"IN 1\\n\"\n    \"IN 1\\n\"\n    \"AND 2 8\\n\"\n) == \"10110\"\nassert solution(\n    \"10\\n\"\n    \"AND 9 4\\n\"\n    \"IN 1\\n\"\n    \"IN 1\\n\"\n    \"XOR 6 5\\n\"\n    \"NOT 10\\n\"\n    \"IN 1\\n\"\n    \"IN 1\\n\"\n    \"AND 2 8\\n\"\n) == \"1010\"\nassert solution(\n    \"10\\n\"\n    \"AND 9 4\\n\"\n    \"IN 1\\n\"\n    \"IN 1\\n\"\n    \"XOR 6 5\\n\"\n    \"NOT 10\\n\"\n    \"IN 1\\n\"\n    \"IN 1\\n\"\n    \"AND 2 8\\n\"\n) == \"0110\"\nassert solution(\n    \"10\\n\"\n    \"AND 9 4\\n\"\n    \"IN 1\\n\"\n    \"IN 1\\n\"\n    \"XOR 6 5\\n\"\n    \"NOT 10\\n\"\n    \"IN 1\\n\"\n    \"IN 1\\n\"\n    \"AND 2 8\\n\"\n) == \"0111\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'\nassert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'\nassert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'\nassert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'\nassert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'\n\n\"\"\"\n\nfrom typing import List\nfrom collections import deque\n\nclass Node:\n    def __init__(self, val):\n        self.val = val\n        self.left = None\n        self.right = None"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == '100100'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\nassert solution('7 3 2') == '1 2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\nassert solution('8 3 2') == '1'\nassert solution('8 3 3') == '2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 2 1') == '1 3'\nassert solution('1 2 3 2 1') == '1 3'"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\nassert solution('5 3 1') == '2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\nprint(solution(input()))"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 1\") == \"2\"\nassert solution(\"6 3 2\") == \"2\"\nprint(solution(input()))\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2\") == \"2\"\nassert solution(\"3 3 1\") == \"0\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1 2\n1 3\n1 2\n1 4\n2 3\n2 4''') == '2'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\") == \"2\"\nassert solution(\"3 3 1\") == \"0\"\nassert solution(\"1 2\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 1 2\n1 3\n1 2\n''') == '2'\n\nassert solution('''3 3 1\n2\n1 2\n1 3\n2 3\n''') == '0'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2\") == \"2\"\nassert solution(\"3 3 1\") == \"0\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1 2') == '2'\nassert solution('3 3 1') == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 1\\n2\\n1 2\\n1 3\\n2 3') == '0'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1 2') == '2'\nassert solution('3 3 1') == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 1 2') == '2'\nassert solution('3 3 1') == '0'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1 2\") == \"2\"\nassert solution(\"3 3 1\") == \"0\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n10 2 3 5 4 2\n''') == '3'\n\nassert solution('''4\n100 100 100 100\n''') == '1'\n\nassert solution('''8\n7 6 5 4 3 2 2 3\n''') == '4'\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4\n100 100 100 100\n\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n6\n10 2 3 5 4 2\n\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n8\n7 6 5 4 3 2 2 3\n\n\"\"\"\n) == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n20 30 20 10 20 40\n''') == '1'\nassert solution('''4\n10 20 30 20\n''') == '1'\nassert solution('''8\n7 6 5 4 3 2 2 3\n''') == '4'"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\n10 2 3 5 4 2\n\n''') == '3'\n\nassert solution('''\n4\n100 100 100 100\n\n''') == '1'\n\nassert solution('''\n8\n7 6 5 4 3 2 2 3\n\n''') == '4'\n\nassert solution('''\n''') == '1'\n\nprint('All test cases passed!')"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"4\"\nprint(solution(input()))\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '3'\nassert solution('4') == '1'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n10 2 3 5 4 2\n''') == '3'\nassert solution('''\n4\n100 100 100 100\n''') == '1'\nassert solution('''\n8\n7 6 5 4 3 2 2 3\n''') == '4'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"2 1 2 3\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == 'Yes'\nassert solution('6 5') == 'No'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n1 1\n3 1 3 2\n2 1 1\n''') == 'Yes'\nassert solution('''\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 5\n2 4 4\n2 4 4\n\n''') == 'No'\n\nassert solution('''\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n\n''') == 'Yes'\n\nassert solution('''\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n\n''') == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'No', f'Solution is: {solution()}'\nassert solution() == 'Yes', f'Solution is: {solution()}'\nassert solution() == 'No', f'Solution is: {solution()}'"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n''') == 'Yes'\nassert solution('''4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n''') == 'No'\nassert solution('''6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n''') == 'Yes'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 1\\n1 1\") == \"Yes\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n\n\n\n\"\"\"\n\nn, m = map(int, input().split())\n\ndata = []\nfor _ in range(n):\n    data.append(list(map(int, input().split())))"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(test_input_1) == \"Yes\"\nassert solution(test_input_2) == \"0\""
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == 'Yes'\nassert solution('6 5') == 'No'\nassert solution('4 3') == 'Yes'"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"6 5\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2\n1 1\n3 1 3 2\n2 1 5''') == 'Yes'\nassert solution('''6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4''') == 'No'\nassert solution('''4 3\n3 1 2\n3 1 2\n3 2 3 3\n2 1 5\n2 4 4\n2 4 4''') == 'Yes'\nassert solution('''4 3\n3 2 3\n3 2 3\n3 3 3 3\n2 1 5\n2 4 4\n2 4 4''') == 'No'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0 2 1\"\nassert solution(\"3\") == \"1 0 2\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '20'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0 1'\nassert solution('4') == '0 2 1 3'\nassert solution('5') == '0 1 2 3 4'\nassert solution('6') == '0 1 2 3 4 5'\nassert solution('7') == '0 1 2 3 4 5 6'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    10\n    \"\"\"\n) == \"0 2 1 4 3\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '20 0 2 1 4 3'"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '0 2 1 4 3'\nassert solution('5') == '0 2 1 4 3'\n\"\"\"\n\n\"\"\"\n1. \u043f\u0435\u0440\u0435\u0431\u043e\u0440 \u0447\u0438\u0441\u0435\u043b \u043e\u0442 0 \u0434\u043e n\n2. \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0447\u0438\u0441\u043b\u0430 \u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u0443\n3. \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0446\u0438\u043a\u043b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0447\u0438\u0441\u0435\u043b \u043e\u0442 1 \u0434\u043e n\n4. \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043d\u0430\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0431\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0446\u0438\u043a\u043b\u043e\u0432\n\"\"\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0 2 1 4 3\"\nassert solution(input()) == \"1 0 2 3 4\"\nassert solution(input()) == \"0 1 2 3 4\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2 0 1 3 4\""
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0 2 1 4 3\"\nassert solution(False) == \"0 2 1 4 3\"\n\n\nInput\n3\n\nOutput\n1\n0 1 2\n\nInput\n5\n\nOutput\n4\n0 2 1 4 3\n\"\"\"\nfrom typing import List\n\nn = int(input())"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == '0 2 1 4 3'\nprint(solution(None))\n\nimport itertools"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == \"YES\", \"First\"\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == \"NO\", \"Second\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 4') == 'NO'\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'NO'\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\\n\") == \"NO\"\n\n\n'''\nimport math\n\nn, m = map(int, input().split())\n\nfirst_engine = []\nsecond_engine = []\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    first_engine.append((x, y))\n\nfor i in range(m):\n    x, y = map(int, input().split())\n    second_engine.append((x, y))"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 4],\n    [[0, 0],\n    [0, 2],\n    [2, 0],\n    [0, 2],\n    [2, 2],\n    [2, 0],\n    [1, 1]]) == \"YES\"\n\n\nassert solution([3, 4],\n    [[0, 0],\n    [0, 2],\n    [2, 0],\n    [0, 2],\n    [2, 2],\n    [2, 0],\n    [1, 1]]) == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 4\\n\"\n    \"0 0\\n\"\n    \"0 2\\n\"\n    \"2 0\\n\"\n    \"0 2\\n\"\n    \"2 2\\n\"\n    \"2 0\\n\"\n    \"1 1\\n\"\n) == \"YES\"\nassert solution(\n    \"3 4\\n\"\n    \"0 0\\n\"\n    \"0 2\\n\"\n    \"2 0\\n\"\n    \"0 2\\n\"\n    \"2 2\\n\"\n    \"2 0\\n\"\n    \"1 1\\n\"\n) == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"3 5\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example) == \"YES\"\nassert solution(other) == \"NO\""
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n1\\n1\\n0\\n\") == \"2\"\nassert solution(\"3\\n1\\n0\\n1\\n\") == \"3\"\nassert solution(\"4\\n1\\n0\\n1\\n\") == \"4\"\nassert solution(\"5\\n1\\n0\\n1\\n\") == \"5\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"0\") == '0'\nassert solution(\"1\") == '11'\nassert solution(\"0\") == '101'\nassert solution(\"1\") == '111'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"00\"\nassert solution(\"0\") == \"000\"\nassert solution(\"1\") == \"001\"\nassert solution(\"0\") == \"100\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\") == \"4\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\") == \"10\""
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"9\") == \"9\"\nassert solution(\"10\") == \"10\"\nassert solution(\"11\") == \"11\"\n\n'''"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"10\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"10\"\nassert solution(\"4\") == \"9\"\nassert solution(\"7\") == \"10\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('01') == '1'\nassert solution('0101') == '1'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"11\", solution(\"1\")\nassert solution(\"0\") == \"11\", solution(\"0\")\nassert solution(\"1\") == \"11\", solution(\"1\")\nassert solution(\"0\") == \"11\", solution(\"0\")\nassert solution(\"1\") == \"11\", solution(\"1\")\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"0\") == '0'\nassert solution(\"01\") == '1'\nassert solution(\"11\") == '11'\nassert solution(\"100\") == '1'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1\\n0\\n1\\n0\\n1\") == \"1\\n3\\n10\\n22\\n43\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n1\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\""
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == \"First\\nSecond\\nFirst\\n\"\nassert solution(\"\"\"\n2\n2 4\n4 5\n\"\"\") == \"Second\\n\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == \"First\"\n\nassert solution(\"\"\"\n2\n3 3\n1 2\n1 3\n2 1\n\"\"\") == \"Second\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'First'\nassert solution('''3\n2 2\n1 2\n2 3''') == 'Second'\nassert solution('''3\n0 1\n1 2\n2 3''') == 'First'\nassert solution('''3\n5 3\n1 2\n2 3\n3 4''') == 'Second'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First\\nSecond'\nassert solution('''\n3 0\n7 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'Second\\nFirst'\nassert solution('''\n2 0\n2 3\n1 2\n1 3\n''') == 'First\\nSecond'\nassert solution('''\n5 0\n10 10\n1 2\n3 4\n5 7\n''') == 'Second\\nFirst'\nassert solution('''\n10 0\n8 3\n1 2\n3 4\n5 7\n8 2\n''') == 'Second\\nFirst'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'First'\nassert solution('''2\n2 3\n3 2\n1 3''') == 'Second'\nassert solution('''3\n2 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First'\nassert solution('''2\n2 3\n3 2\n1 3''') == 'Second'\nassert solution('''3\n2 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 0\") == \"First\"\nassert solution(\"3 0\") == \"Second\"\nassert solution(\"3 1\") == \"First\"\nassert solution(\"3 2\") == \"Second\"\nassert solution(\"3 3\") == \"First\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == 'First'\n\nassert solution(\"\"\"\n1\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == 'Second'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'First'\nassert solution('''3 0\n6 2\n1 2''') == 'Second'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 0\") == \"First\"\nassert solution(\"3 1\") == \"Second\"\nassert solution(\"3 2\") == \"First\"\n\n\n'''\n\n\nimport math\nfrom collections import defaultdict\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 0') == 'First'\nassert solution('3 1') == 'Second'\nassert solution('3 2') == 'First'\n\"\"\"\nimport itertools\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\nassert solution('mik') == 'Mike'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"abba\") == \"Mike\"\nassert solution(\n    \"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\n\"\"\"\nfrom typing import List\nfrom collections import deque"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''hqdhu\nnkdv\nn\n''') == 'n'\nassert solution('''\nq\nl\na\n''') == 'q'\nassert solution('''\nst\ne\ns\n''') =='s'\nassert solution('''\ne\nn\n''') == 'n'\nassert solution('''\ne\ns\ns\n''') =='s'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'Mike'\nassert solution('aaaa') == 'Mike'\nassert solution('aaab') == 'Mike'\nassert solution('aaac') == 'Mike'\nassert solution('aaad') == 'Ann'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''cba\n    cab\n    a\n    acb\n    ''') == 'cab'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n8 3 8\n1 2\n2 3\n''') == '0'\nassert solution('''\n3 2\n8 12 8\n1 2\n2 3\n''') == '2'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"0\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 2\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n9 9\n3 3\n5 2\n''') == '1'\nassert solution('''\n4 2\n8 12 8\n1 2\n2 3\n''') == '2'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0'\nassert solution('8 3 8') == '2'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0\"\nassert solution(\"1 2\\n1 2\") == \"2\"\nassert solution(\"2 4\\n5 1 2 4\") == \"1\"\nassert solution(\"4 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\") == \"0\"\n\n\n-----Hint 1-----\n\nYou can use a set to keep the unique elements.\n\n-----Hint 2-----\n\nThe number of opertions is equal to the number of good pairs minus the number of bad pairs.\n\n\"\"\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n8 3 8\n1 2\n2 3\n''') == \"0\"\nassert solution('''\n3 3\n12 30 30\n1 2\n2 3\n''') == \"1\""
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2') == '2'\nassert solution('4 5') == '3'\nassert solution('10 5') == '4'"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"0\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4') == 'ababacd'"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'ababacd'\n\n\"\"\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == 'abacd'\nassert solution('7 4') == 'ababacd'\nassert solution('10 2') == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'ababacd'"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 4\na a b a\na\n1\n''') == 'a b a'\nassert solution('''3 4\na b a b\nb\n1\n''') == 'b'\nassert solution('''6 5\na a b a a\na\n1\n''') == 'b'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"ababacd\"\n\n----Hints-----\nYou can use the same algorithm as in the last task.\n\"\"\"\n\nn, k = map(int, input().split())"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'aba'\nassert solution('6 2') == 'aba'\nassert solution('7 2') == '-1'\nassert solution('5 5') == 'a'\n\n\n\"\"\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '-1'\nassert solution('7 4') == 'ababacd'\nassert solution('10 4') == 'ababacd'\nassert solution('4 5') == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\nab\nac\nad\n''') == 'abacd'\nassert solution('''8 8\na\nab\nab\nabc\nac\nac\n''') == '-1'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2 1 2\n''') == '4'\nassert solution('''10\n''') == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 1 2\\n') == '4'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1\\n') == '9'"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 1 2\\n\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n1 1 2 2 2 1 1 2 2 1\n''') == \"9\"\nassert solution('''\n10\n1 1 2 2 2 1 1 2 2 1\n''') == \"9\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2') == '1'\nassert solution('4\\n1 1 2 2') == '4'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1') == '9'\n\n\"\"\""
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 2 1 2\n''') == '4'\nassert solution('''\n10\n1 1 2 2 2 1 1 2 2 1\n''') == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 1 2''') == '4'\nassert solution('''10\n1 1 2 2 2 1 1 2 2 1''') == '9'\nprint(solution('''10\n1 1 2 2 2 1 1 2 2 1'''))"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n4 4 2\n1 1 3\n2 3 2\n1 3 2\n1 2 3\n''') == '3'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 1\n4 5 3\n4 5 3\n''') == '5'\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == '2'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6'\nassert solution('''\n10 10 1\n1 2 1\n2 2 2\n2 3 1\n3 4 2\n3 4 3\n3 5 3\n5 6 1\n5 6 3\n6 7 1\n6 7 2\n7 8 1\n7 8 2\n8 9 1\n8 9 2\n9 10 1\n9 10 2\n''') == '+-+'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '-2'\nassert solution('''\n4 4 1\n1 1 1\n2 2 2\n2 4 4\n''') == '2'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2 2 1\\n1 1 2\\n2 2 1\\n') == '2\\n-\\n2\\n'\nassert solution(\n    '6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\n') == '6\\n++-\\n2\\n'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2'\nassert solution('6 6 3\\n2 4 5\\n1 4 1\\n1 3 1\\n2 2 3\\n') == '6'"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '6', solution()\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution() == \"++-\"\nassert solution() == \"6\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution() == \"++-\""
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"98009\") == \"98009\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(1689) == '1869'\nassert solution(18906) == '18690'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('01234') == '12345'\nassert solution('11111111') == '11111111'\nassert solution('21761350') == '218165'\nassert solution('21771350') == '21771350'\nassert solution('1000000') == '1000001'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('15') == '1256'\nassert solution('78') == '1878'\nassert solution('111') == '1311'\nassert solution('5611') == '5612'\nassert solution('1256') == '1234567'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n6\\n8\\n9\") == \"16890\"\nassert solution(\"1\\n1\\n8\\n9\") == \"18906\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1,6,8,9') == '9,8,1,6'\nassert solution('1,6,8,9') == '1869'\nassert solution('1,6,8,9') == '9,6,8,1'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '3'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == 2\nassert solution(\"4 6\") == -1\nassert solution(\"5 5\") == 3"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2'\nassert solution('4 6') == '-1'\nassert solution('5 5') == '3'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n1 3\n3 4\n''') == '2'\nassert solution('''\n5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n''') == '3'\nassert solution('''\n5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n''') == '-1'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 2\n1 3\n3 4\n''') == '2'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\n1 3\n3 4\n\n''') == '2'\n\nassert solution('''5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n\n''') == '3'\n\nassert solution('''5 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\n''') == '-1'\n\nassert solution('''10 12\n1 2\n2 3\n2 4\n3 5\n4 6\n5 7\n6 8\n7 9\n8 10\n9 11\n10 12\n\n''') == '54'"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 2\n1 3\n3 4\n\n''') == '2'\nassert solution('''\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\n''') == '-1'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 3\n3 4\n''') == '2'\n\nassert solution('''5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n''') == '3'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n1 3\n3 4\n''') == '2'\nassert solution('''5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n''') == '3'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 7\") == \"3\"\nassert solution(\"3 4 1\") == \"9\""
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '9'\nassert solution('2') == '3'\nassert solution('4') == '3'\nassert solution('5') == '3'\nassert solution('6') == '3'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n4 7\n''') == '3'\nassert solution('''3\n4 3 1\n''') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"9\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"9\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n4 7') == '3'\nassert solution('2\\n4 3 1') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == '3'\nassert solution(\"3\") == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n7\n4\n3\n4\n3''') == '3'\nassert solution('''3\n4 3 1\n''') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n4 7\n\n''') == '3'\n\nassert solution('''3\n4 3 1\n\n''') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '9'\nassert solution('4') == '3'"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1\") == \"-1\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"9\""
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '-1'\nassert solution([3, 8, 5]) == '9'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"6\\n0 5 15 10\") == \"0\"\nassert solution(\"7\\n0 5 15 10\") == \"0\"\nassert solution(\"8\\n0 5 15 10\") == \"0\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '9'\nassert solution() == '0'"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n8 5\n''') == '9'\nassert solution('''\n5\n3 10 2 1 5\n''') == '2'\nassert solution('''\n4\n0 5 15 10\n''') == '0'\nassert solution('''\n1\n1\n''') == '-1'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4 8 5\n''') == '9'\n\nassert solution('''\n5\n3 10 2 1 5\n''') == '2'\n\nassert solution('''\n4\n0 5 15 10\n''') == '0'\n\nassert solution('''\n1\n1\n''') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '9'\n\n'''\n\nimport math"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4 8 5\n''') == '9'\nassert solution('''\n4\n0 5 15 10\n''') == '0'\nassert solution('''\n1\n1\n''') == '-1'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 4 5\n3 5 7 10\n''') == '3'\nassert solution('''13 4 5\n7 8 9 10\n''') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 4 5\n3 5 7 10\n''') == '3'\nassert solution('''\n10 4 5\n7 8 9 10\n''') == '1'\nassert solution('''\n13 4 5\n7 8 9 10\n''') == '1'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 4 5\n3 5 7 10\n\n10 4 5\n7 8 9 10\n\n10 4 5\n3 5 7 10\n''') == \"3\"\nassert solution('''13 4 5\n7 8 9 10\n\n10 4 5\n3 5 7 10\n\n10 4 5\n7 8 9 10\n\n10 4 5\n3 5 7 10\n''') == \"1\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"10 4 5\\n\"\n    \"3 5 7 10\"\n) == \"3\"\n\nassert solution(\n    \"13 4 5\\n\"\n    \"7 8 9 10\"\n) == \"1\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '10 4 5\\n'\n    '3 5 7 10') == '3'\nassert solution(\n    '13 4 5\\n'\n    '7 8 9 10') == '1'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 4 5\n3 5 7 10\n''') == '3'\nassert solution('''\n13 4 5\n7 8 9 10\n''') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 4 5') == '3'\nassert solution('13 4 5') == '1'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == '3'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '6'"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\"\nassert solution(\"7\") == \"7\"\nassert solution(\"8\") == \"8\""
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1111\") == \"2\"\nassert solution(\"101\") == \"1\"\nassert solution(\"1011\") == \"2\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n101\n3 3\n3 2\n3 1\n''') == '2'\nassert solution('''4\n1111\n3 4\n5 2\n3 1\n3 2\n''') == '4'\nassert solution('''6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n''') == '6'\nprint(\"Problem 6 successfully solved!\")\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('6') == '6'\nassert solution('10') == '9'\nassert solution('11') == '10'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"1\\n01\\n3 4\\n5 2\"\n    ) == \"2\"\nassert solution(\n    \"4\\n1111\\n3 4\\n5 2\"\n    ) == \"4\"\nassert solution(\n    \"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\"\n    ) == \"6\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"6\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"8\") == \"8\"\nassert solution(\"101\") == \"2\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('6') == '6'\nassert solution('10') == '10'\nassert solution('100') == '100'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n''') == '1111'\nassert solution('''5 3\n''') == '01010'\nassert solution('''7 3\n''') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == \"1111\"\nassert solution('5 3') == \"01010\"\nassert solution('7 3') == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5\n''') == \"1111\"\n\nassert solution('''4 3\n''') == \"1111\"\n\nassert solution('''7 3\n''') == \"01010\""
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n') == '01010'\nassert solution('7 3\\n') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT.readline().strip()) == OUTPUT.readline().strip()\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n''') == '1111'\nassert solution('''7 3\n''') == '01010'\nassert solution('''1011011\n''') == '110'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4\n''') == '1111'\n\nassert solution('''5 3\n''') == '01010'\n\nassert solution('''7 3\n''') == '1011011'"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '1/2'\nassert solution('3\\n1 1 1') == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1/2'\nassert solution('2') == '1/2'\nassert solution('3') == '0/1'"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0/1'\nassert solution('2') == '1/1'\nassert solution('3') == '1/2'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1,2]) == \"1/2\"\nassert solution([3,1,1]) == \"0/1\"\nassert solution([2,3,1]) == \"0/1\"\nassert solution([2,2,1]) == \"1/1\"\nassert solution([3,3,1]) == \"0/1\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n''') == '0/1'\nassert solution('''\n3\n3 3 3\n''') == '2/3'\nassert solution('''\n3\n3 3 3\n''') == '0/1'\nassert solution('''\n3\n3 3 3\n''') == '1/1'"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\") == \"0/1\"\nassert solution(\"3\\n1 1 1\") == \"1/2\"\nassert solution(\"100000\\n87942986753095065251875253496875\") == \"1/10\""
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n2\n\"\"\") == \"1/2\"\nassert solution(\"\"\"\n3\n1 1 1\n\"\"\") == \"0/1\"\nassert solution(\"\"\"\n5\n1 1 1 1 1\n\"\"\") == \"0/1\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n2\n\"\"\") == \"0/1\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1/1'\nassert solution('2') == '1/2'\nassert solution('3') == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1/2'\nassert solution('3') == '0/1'"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3 4 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4 3 2 1 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0'\n\n\"\"\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\"\nassert solution(\"10\\n2 2 5 1 4 6 3 6 2 1\\n1 2\\n3 2\\n1 1\\n3 2\\n3 2\\n\") == \"0 1 1 1 1 1\""
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == '1 0 1 0 0', \"First\"\nassert solution('''\n5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == '4 3 2 1 0', \"Second\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0'\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0'"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0'\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\"\nassert solution(\"5\\n8 9 5 1\\n1 1\\n2 1\\n3 1\\n4 1\") == \"3 4 1 2 1\""
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('2') == '2'\nassert solution('1') == '8'\nassert solution('100') == '10010'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('3') == '11'"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution(\"3\\n4 5 1 7 4\\n\") == \"1\"\nassert solution(\"1\\n3 5 1 7 4\\n\") == \"0\"\nassert solution(\"1\\n2 2 2 2 2\\n\") == \"0\"\nassert solution(\"1\\n3 3 3 3 3\\n\") == \"0\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n4 5 1 7 4\n''') == '1'\nassert solution('''2\n1 2\n''') == '0'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\nassert solution('3') == '11'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n\nassert solution([\n    4, 5, 1, 7, 4,\n    ]) == \"1\"\n\nassert solution([\n    4, 5, 1, 7, 4,\n    ]) == \"0\"\n\nassert solution([\n    4, 5, 1, 7, 4,\n    ]) == \"8\"\n\nassert solution([\n    4, 5, 1, 7, 4,\n    ]) == \"11\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\n\nassert solution('2\\n1 2') == '0'\nassert solution('3\\n1 1 1') == '1'\nassert solution('4\\n1 1 1 1') == '11'"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n') == '0\\n2\\n11'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n4 5 1 7 4\n''') == '1'\nassert solution('''\n3\n1 1 1\n''') == '1'\nassert solution('''\n2\n1 2\n''') == '0'\nassert solution('''\n5\n5 5 1 7 4\n''') == '10010'"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '1'"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"99\") == \"0\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '1'\n\"\"\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"6 1 2 3\") == \"2\"\nassert solution(\"0 1 2 3\") == \"2\"\nassert solution(\"0 4 6 1\") == \"1\"\n\n----------------------------------------------------------------------\n\nThere are N tiles, each can be painted in one of the colours 1 through N, and the colours are labelled in clockwise order.\n\nTile 1 is painted in color 1,\nTile 2 is painted in color 2, and so on,\nTile N is painted in color N.\n\nNow, you are given a pattern which consists of 1's and 0's, where 1 means that the corresponding tile is painted in that colour, and 0 means that the corresponding tile is not painted. For example, if the pattern is 010, then it means that the first tile is painted in colour 1,\nthe second tile is painted in colour 2, and so on.\n\nFind the number of different ways in which the tiles can be colored so as to\nfinally have all the tiles painted in the same colour.\n\nExample\nInput: Pattern is 100\n\nOutput: 4\n\nOutput explanation: This pattern can be painted as follows:\nTile 1 is painted in colour 1\nTile 2 is painted in colour 1\nTile 3 is painted in colour 1\nTile 4 is painted in colour 1\n\nIn this case, there are 4 possible ways to color the tiles,\neach colored differently,\nbut we can color the tiles all in the same color.\nSo the answer is 4.\n\nIn other words, we have painted\neach tile in the same colour.\n\nSolved\n21/21\n\nclass Solution:\n    def numTilings(self, N: int, K: int, M: int, H: int, A: int, B: int) -> int:\n        dp = {}\n        \n        def dfs(cur_colors, total_colors, step):\n            if cur_colors == total_colors:\n                return 1\n            \n            if (cur_colors, step) not in dp:\n                ans = 0\n                for i in range(4):\n                    for j in range(4):\n                        new_colors = cur_colors | (1<<i) | (1<<(j+4))\n                        if step > 0:\n                            new_colors = new_colors | (1<<(j))\n                        if new_colors > total_colors:\n                            continue\n                        \n                        ans += dfs(new_colors, total_colors, step-1)\n                dp[(cur_colors, step)] = ans\n            \n            return dp[(cur_colors, step)]\n        \n        return dfs((0), H, K)\n\nInput\n\nOutput\n\nSample\nInput\n\nOutput\n\nSample\nInput\n\nOutput\n\n'''\n\nN, K, M, H, A, B = 6, 4, 3, 1, 0, 1\nprint(Solution().numTilings(N, K, M, H, A, B))\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '1'\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '1'\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '1'\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '1'\n''')\nprint(\"You are a co-deer\")"
    }
]